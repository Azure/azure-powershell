// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.
namespace Microsoft.Azure.Management.Security
{
    using Microsoft.Rest.Azure;
    using Models;

    /// <summary>
    /// Extension methods for AzureDevOpsReposOperations
    /// </summary>
    public static partial class AzureDevOpsReposOperationsExtensions
    {
        /// <summary>
        /// Returns a list of Azure DevOps repositories onboarded to the connector.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='resourceGroupName'>
        /// The name of the resource group. The name is case insensitive.
        /// </param>
        /// <param name='securityConnectorName'>
        /// The security connector name.
        /// </param>
        /// <param name='orgName'>
        /// The Azure DevOps organization name.
        /// </param>
        /// <param name='projectName'>
        /// The project name.
        /// </param>
        public static Microsoft.Rest.Azure.IPage<AzureDevOpsRepository> List(this IAzureDevOpsReposOperations operations, string resourceGroupName, string securityConnectorName, string orgName, string projectName)
        {
                return ((IAzureDevOpsReposOperations)operations).ListAsync(resourceGroupName, securityConnectorName, orgName, projectName).GetAwaiter().GetResult();
        }

        /// <summary>
        /// Returns a list of Azure DevOps repositories onboarded to the connector.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='resourceGroupName'>
        /// The name of the resource group. The name is case insensitive.
        /// </param>
        /// <param name='securityConnectorName'>
        /// The security connector name.
        /// </param>
        /// <param name='orgName'>
        /// The Azure DevOps organization name.
        /// </param>
        /// <param name='projectName'>
        /// The project name.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        public static async System.Threading.Tasks.Task<Microsoft.Rest.Azure.IPage<AzureDevOpsRepository>> ListAsync(this IAzureDevOpsReposOperations operations, string resourceGroupName, string securityConnectorName, string orgName, string projectName, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            using (var _result = await operations.ListWithHttpMessagesAsync(resourceGroupName, securityConnectorName, orgName, projectName, null, cancellationToken).ConfigureAwait(false))
            {
                return _result.Body;
            }
        }
        /// <summary>
        /// Returns a monitored Azure DevOps repository resource.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='resourceGroupName'>
        /// The name of the resource group. The name is case insensitive.
        /// </param>
        /// <param name='securityConnectorName'>
        /// The security connector name.
        /// </param>
        /// <param name='orgName'>
        /// The Azure DevOps organization name.
        /// </param>
        /// <param name='projectName'>
        /// The project name.
        /// </param>
        /// <param name='repoName'>
        /// The repository name.
        /// </param>
        public static AzureDevOpsRepository Get(this IAzureDevOpsReposOperations operations, string resourceGroupName, string securityConnectorName, string orgName, string projectName, string repoName)
        {
                return ((IAzureDevOpsReposOperations)operations).GetAsync(resourceGroupName, securityConnectorName, orgName, projectName, repoName).GetAwaiter().GetResult();
        }

        /// <summary>
        /// Returns a monitored Azure DevOps repository resource.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='resourceGroupName'>
        /// The name of the resource group. The name is case insensitive.
        /// </param>
        /// <param name='securityConnectorName'>
        /// The security connector name.
        /// </param>
        /// <param name='orgName'>
        /// The Azure DevOps organization name.
        /// </param>
        /// <param name='projectName'>
        /// The project name.
        /// </param>
        /// <param name='repoName'>
        /// The repository name.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        public static async System.Threading.Tasks.Task<AzureDevOpsRepository> GetAsync(this IAzureDevOpsReposOperations operations, string resourceGroupName, string securityConnectorName, string orgName, string projectName, string repoName, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            using (var _result = await operations.GetWithHttpMessagesAsync(resourceGroupName, securityConnectorName, orgName, projectName, repoName, null, cancellationToken).ConfigureAwait(false))
            {
                return _result.Body;
            }
        }
        /// <summary>
        /// Creates or updates a monitored Azure DevOps repository resource.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='resourceGroupName'>
        /// The name of the resource group. The name is case insensitive.
        /// </param>
        /// <param name='securityConnectorName'>
        /// The security connector name.
        /// </param>
        /// <param name='orgName'>
        /// The Azure DevOps organization name.
        /// </param>
        /// <param name='projectName'>
        /// The project name.
        /// </param>
        /// <param name='repoName'>
        /// The repository name.
        /// </param>
        public static AzureDevOpsRepository CreateOrUpdate(this IAzureDevOpsReposOperations operations, string resourceGroupName, string securityConnectorName, string orgName, string projectName, string repoName, AzureDevOpsRepositoryProperties properties = default(AzureDevOpsRepositoryProperties))
        {
                return ((IAzureDevOpsReposOperations)operations).CreateOrUpdateAsync(resourceGroupName, securityConnectorName, orgName, projectName, repoName, properties).GetAwaiter().GetResult();
        }

        /// <summary>
        /// Creates or updates a monitored Azure DevOps repository resource.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='resourceGroupName'>
        /// The name of the resource group. The name is case insensitive.
        /// </param>
        /// <param name='securityConnectorName'>
        /// The security connector name.
        /// </param>
        /// <param name='orgName'>
        /// The Azure DevOps organization name.
        /// </param>
        /// <param name='projectName'>
        /// The project name.
        /// </param>
        /// <param name='repoName'>
        /// The repository name.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        public static async System.Threading.Tasks.Task<AzureDevOpsRepository> CreateOrUpdateAsync(this IAzureDevOpsReposOperations operations, string resourceGroupName, string securityConnectorName, string orgName, string projectName, string repoName, AzureDevOpsRepositoryProperties properties = default(AzureDevOpsRepositoryProperties), System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            using (var _result = await operations.CreateOrUpdateWithHttpMessagesAsync(resourceGroupName, securityConnectorName, orgName, projectName, repoName, properties, null, cancellationToken).ConfigureAwait(false))
            {
                return _result.Body;
            }
        }
        /// <summary>
        /// Updates a monitored Azure DevOps repository resource.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='resourceGroupName'>
        /// The name of the resource group. The name is case insensitive.
        /// </param>
        /// <param name='securityConnectorName'>
        /// The security connector name.
        /// </param>
        /// <param name='orgName'>
        /// The Azure DevOps organization name.
        /// </param>
        /// <param name='projectName'>
        /// The project name.
        /// </param>
        /// <param name='repoName'>
        /// The repository name.
        /// </param>
        public static AzureDevOpsRepository Update(this IAzureDevOpsReposOperations operations, string resourceGroupName, string securityConnectorName, string orgName, string projectName, string repoName, AzureDevOpsRepositoryProperties properties = default(AzureDevOpsRepositoryProperties))
        {
                return ((IAzureDevOpsReposOperations)operations).UpdateAsync(resourceGroupName, securityConnectorName, orgName, projectName, repoName, properties).GetAwaiter().GetResult();
        }

        /// <summary>
        /// Updates a monitored Azure DevOps repository resource.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='resourceGroupName'>
        /// The name of the resource group. The name is case insensitive.
        /// </param>
        /// <param name='securityConnectorName'>
        /// The security connector name.
        /// </param>
        /// <param name='orgName'>
        /// The Azure DevOps organization name.
        /// </param>
        /// <param name='projectName'>
        /// The project name.
        /// </param>
        /// <param name='repoName'>
        /// The repository name.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        public static async System.Threading.Tasks.Task<AzureDevOpsRepository> UpdateAsync(this IAzureDevOpsReposOperations operations, string resourceGroupName, string securityConnectorName, string orgName, string projectName, string repoName, AzureDevOpsRepositoryProperties properties = default(AzureDevOpsRepositoryProperties), System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            using (var _result = await operations.UpdateWithHttpMessagesAsync(resourceGroupName, securityConnectorName, orgName, projectName, repoName, properties, null, cancellationToken).ConfigureAwait(false))
            {
                return _result.Body;
            }
        }
        /// <summary>
        /// Creates or updates a monitored Azure DevOps repository resource.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='resourceGroupName'>
        /// The name of the resource group. The name is case insensitive.
        /// </param>
        /// <param name='securityConnectorName'>
        /// The security connector name.
        /// </param>
        /// <param name='orgName'>
        /// The Azure DevOps organization name.
        /// </param>
        /// <param name='projectName'>
        /// The project name.
        /// </param>
        /// <param name='repoName'>
        /// The repository name.
        /// </param>
        public static AzureDevOpsRepository BeginCreateOrUpdate(this IAzureDevOpsReposOperations operations, string resourceGroupName, string securityConnectorName, string orgName, string projectName, string repoName, AzureDevOpsRepositoryProperties properties = default(AzureDevOpsRepositoryProperties))
        {
                return ((IAzureDevOpsReposOperations)operations).BeginCreateOrUpdateAsync(resourceGroupName, securityConnectorName, orgName, projectName, repoName, properties).GetAwaiter().GetResult();
        }

        /// <summary>
        /// Creates or updates a monitored Azure DevOps repository resource.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='resourceGroupName'>
        /// The name of the resource group. The name is case insensitive.
        /// </param>
        /// <param name='securityConnectorName'>
        /// The security connector name.
        /// </param>
        /// <param name='orgName'>
        /// The Azure DevOps organization name.
        /// </param>
        /// <param name='projectName'>
        /// The project name.
        /// </param>
        /// <param name='repoName'>
        /// The repository name.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        public static async System.Threading.Tasks.Task<AzureDevOpsRepository> BeginCreateOrUpdateAsync(this IAzureDevOpsReposOperations operations, string resourceGroupName, string securityConnectorName, string orgName, string projectName, string repoName, AzureDevOpsRepositoryProperties properties = default(AzureDevOpsRepositoryProperties), System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            using (var _result = await operations.BeginCreateOrUpdateWithHttpMessagesAsync(resourceGroupName, securityConnectorName, orgName, projectName, repoName, properties, null, cancellationToken).ConfigureAwait(false))
            {
                return _result.Body;
            }
        }
        /// <summary>
        /// Updates a monitored Azure DevOps repository resource.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='resourceGroupName'>
        /// The name of the resource group. The name is case insensitive.
        /// </param>
        /// <param name='securityConnectorName'>
        /// The security connector name.
        /// </param>
        /// <param name='orgName'>
        /// The Azure DevOps organization name.
        /// </param>
        /// <param name='projectName'>
        /// The project name.
        /// </param>
        /// <param name='repoName'>
        /// The repository name.
        /// </param>
        public static AzureDevOpsRepository BeginUpdate(this IAzureDevOpsReposOperations operations, string resourceGroupName, string securityConnectorName, string orgName, string projectName, string repoName, AzureDevOpsRepositoryProperties properties = default(AzureDevOpsRepositoryProperties))
        {
                return ((IAzureDevOpsReposOperations)operations).BeginUpdateAsync(resourceGroupName, securityConnectorName, orgName, projectName, repoName, properties).GetAwaiter().GetResult();
        }

        /// <summary>
        /// Updates a monitored Azure DevOps repository resource.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='resourceGroupName'>
        /// The name of the resource group. The name is case insensitive.
        /// </param>
        /// <param name='securityConnectorName'>
        /// The security connector name.
        /// </param>
        /// <param name='orgName'>
        /// The Azure DevOps organization name.
        /// </param>
        /// <param name='projectName'>
        /// The project name.
        /// </param>
        /// <param name='repoName'>
        /// The repository name.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        public static async System.Threading.Tasks.Task<AzureDevOpsRepository> BeginUpdateAsync(this IAzureDevOpsReposOperations operations, string resourceGroupName, string securityConnectorName, string orgName, string projectName, string repoName, AzureDevOpsRepositoryProperties properties = default(AzureDevOpsRepositoryProperties), System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            using (var _result = await operations.BeginUpdateWithHttpMessagesAsync(resourceGroupName, securityConnectorName, orgName, projectName, repoName, properties, null, cancellationToken).ConfigureAwait(false))
            {
                return _result.Body;
            }
        }
        /// <summary>
        /// Returns a list of Azure DevOps repositories onboarded to the connector.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='nextPageLink'>
        /// The NextLink from the previous successful call to List operation.
        /// </param>
        public static Microsoft.Rest.Azure.IPage<AzureDevOpsRepository> ListNext(this IAzureDevOpsReposOperations operations, string nextPageLink)
        {
                return ((IAzureDevOpsReposOperations)operations).ListNextAsync(nextPageLink).GetAwaiter().GetResult();
        }

        /// <summary>
        /// Returns a list of Azure DevOps repositories onboarded to the connector.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='nextPageLink'>
        /// The NextLink from the previous successful call to List operation.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        public static async System.Threading.Tasks.Task<Microsoft.Rest.Azure.IPage<AzureDevOpsRepository>> ListNextAsync(this IAzureDevOpsReposOperations operations, string nextPageLink, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            using (var _result = await operations.ListNextWithHttpMessagesAsync(nextPageLink, null, cancellationToken).ConfigureAwait(false))
            {
                return _result.Body;
            }
        }
    }
}
