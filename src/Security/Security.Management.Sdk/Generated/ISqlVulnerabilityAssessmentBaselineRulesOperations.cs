// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.Security
{
    using Microsoft.Rest.Azure;
    using Models;

    /// <summary>
    /// SqlVulnerabilityAssessmentBaselineRulesOperations operations.
    /// </summary>
    public partial interface ISqlVulnerabilityAssessmentBaselineRulesOperations
    {
        /// <summary>
        /// Creates a Baseline for a rule in a database. Will overwrite any previously existing results.
        /// </summary>
        /// <remarks>
        /// Creates a Baseline for a rule in a database. Will overwrite any previously existing results.
        /// </remarks>
        /// <param name='ruleId'>
        /// The rule Id.
        /// </param>
        /// <param name='workspaceId'>
        /// The workspace Id.
        /// </param>
        /// <param name='resourceId'>
        /// The identifier of the resource.
        /// </param>
        /// <param name='latestScan'>
        /// Take results from latest scan.
        /// </param>
        /// <param name='results'>
        /// Expected results to be inserted into the baseline.Leave this field empty it LatestScan == true.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="Microsoft.Rest.Azure.CloudException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.SerializationException">
        /// Thrown when unable to deserialize the response
        /// </exception>
        System.Threading.Tasks.Task<Microsoft.Rest.Azure.AzureOperationResponse<RuleResults>> CreateOrUpdateWithHttpMessagesAsync(string ruleId, string workspaceId, string resourceId, bool? latestScan = default(bool?), System.Collections.Generic.IList<System.Collections.Generic.IList<string>> results = default(System.Collections.Generic.IList<System.Collections.Generic.IList<string>>), System.Collections.Generic.Dictionary<string, System.Collections.Generic.List<string>> customHeaders = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// Gets the results for a given rule in the Baseline.
        /// </summary>
        /// <remarks>
        /// Gets the results for a given rule in the Baseline.
        /// </remarks>
        /// <param name='ruleId'>
        /// The rule Id.
        /// </param>
        /// <param name='workspaceId'>
        /// The workspace Id.
        /// </param>
        /// <param name='resourceId'>
        /// The identifier of the resource.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="Microsoft.Rest.Azure.CloudException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.SerializationException">
        /// Thrown when unable to deserialize the response
        /// </exception>
        System.Threading.Tasks.Task<Microsoft.Rest.Azure.AzureOperationResponse<RuleResults>> GetWithHttpMessagesAsync(string ruleId, string workspaceId, string resourceId, System.Collections.Generic.Dictionary<string, System.Collections.Generic.List<string>> customHeaders = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// Deletes a rule from the Baseline of a given database.
        /// </summary>
        /// <remarks>
        /// Deletes a rule from the Baseline of a given database.
        /// </remarks>
        /// <param name='ruleId'>
        /// The rule Id.
        /// </param>
        /// <param name='workspaceId'>
        /// The workspace Id.
        /// </param>
        /// <param name='resourceId'>
        /// The identifier of the resource.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="Microsoft.Rest.Azure.CloudException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        System.Threading.Tasks.Task<Microsoft.Rest.Azure.AzureOperationResponse> DeleteWithHttpMessagesAsync(string ruleId, string workspaceId, string resourceId, System.Collections.Generic.Dictionary<string, System.Collections.Generic.List<string>> customHeaders = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// Gets the results for all rules in the Baseline.
        /// </summary>
        /// <remarks>
        /// Gets the results for all rules in the Baseline.
        /// </remarks>
        /// <param name='workspaceId'>
        /// The workspace Id.
        /// </param>
        /// <param name='resourceId'>
        /// The identifier of the resource.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="Microsoft.Rest.Azure.CloudException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.SerializationException">
        /// Thrown when unable to deserialize the response
        /// </exception>
        System.Threading.Tasks.Task<Microsoft.Rest.Azure.AzureOperationResponse<RulesResults>> ListWithHttpMessagesAsync(string workspaceId, string resourceId, System.Collections.Generic.Dictionary<string, System.Collections.Generic.List<string>> customHeaders = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// Add a list of baseline rules. Will overwrite any previously existing results (for all rules).
        /// </summary>
        /// <remarks>
        /// Add a list of baseline rules. Will overwrite any previously existing results (for all rules).
        /// </remarks>
        /// <param name='workspaceId'>
        /// The workspace Id.
        /// </param>
        /// <param name='resourceId'>
        /// The identifier of the resource.
        /// </param>
        /// <param name='latestScan'>
        /// Take results from latest scan.
        /// </param>
        /// <param name='results'>
        /// Expected results to be inserted into the baseline.Leave this field empty it LatestScan == true.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="Microsoft.Rest.Azure.CloudException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.SerializationException">
        /// Thrown when unable to deserialize the response
        /// </exception>
        System.Threading.Tasks.Task<Microsoft.Rest.Azure.AzureOperationResponse<RulesResults>> AddWithHttpMessagesAsync(string workspaceId, string resourceId, bool? latestScan = default(bool?), System.Collections.Generic.IDictionary<string, System.Collections.Generic.IList<System.Collections.Generic.IList<string>>> results = default(System.Collections.Generic.IDictionary<string, System.Collections.Generic.IList<System.Collections.Generic.IList<string>>>), System.Collections.Generic.Dictionary<string, System.Collections.Generic.List<string>> customHeaders = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

    }
}