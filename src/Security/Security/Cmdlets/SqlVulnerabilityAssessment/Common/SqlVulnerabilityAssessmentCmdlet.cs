using Commands.Security;
using Microsoft.Azure.Commands.Security.Common;
using System.Management.Automation;
namespace Microsoft.Azure.Commands.SecurityCenter.Cmdlets.SqlVulnerabilityAssessment
{
    public abstract class SqlVulnerabilityAssessmentCmdlet : SecurityCenterCmdletBase
    {
        [Parameter(ParameterSetName = ParameterSetNames.ResourceId, Mandatory = true, HelpMessage = ParameterHelpMessages.ResourceId)]
        [ValidateNotNullOrEmpty]
        public string ResourceId { get; set; }

        [Parameter(ParameterSetName = ParameterSetNames.ResourceId, Mandatory = true, HelpMessage = ParameterHelpMessages.WorkspaceId)]
        [Parameter(ParameterSetName = ParameterSetNames.OnPremMachines, Mandatory = true, HelpMessage = ParameterHelpMessages.WorkspaceId)]
        [ValidateNotNullOrEmpty]
        public string WorkspaceId { get; set; }

        [Parameter(ParameterSetName = ParameterSetNames.ResourceId, Mandatory = true, HelpMessage = ParameterHelpMessages.Server)]
        [Parameter(ParameterSetName = ParameterSetNames.OnPremMachines, Mandatory = true, HelpMessage = ParameterHelpMessages.Server)]
        [ValidateNotNullOrEmpty]
        public string Server { get; set; }

        [Parameter(ParameterSetName = ParameterSetNames.ResourceId, Mandatory = true, HelpMessage = ParameterHelpMessages.Database)]
        [Parameter(ParameterSetName = ParameterSetNames.OnPremMachines, Mandatory = true, HelpMessage = ParameterHelpMessages.Database)]
        [ValidateNotNullOrEmpty]
        public string Database { get; set; }

        [Parameter(ParameterSetName = ParameterSetNames.OnPremMachines, Mandatory = true, HelpMessage = ParameterHelpMessages.ComputerName)]
        [ValidateNotNullOrEmpty]
        public string ComputerName { get; set; }

        [Parameter(ParameterSetName = ParameterSetNames.OnPremMachines, Mandatory = true, HelpMessage = ParameterHelpMessages.VmUuid)]
        [ValidateNotNullOrEmpty]
        public string VmUuid { get; set; }

        [Parameter(ParameterSetName = ParameterSetNames.OnPremMachines, Mandatory = true, HelpMessage = ParameterHelpMessages.AgentId)]
        [ValidateNotNullOrEmpty]
        public string AgentId { get; set; }

        [Parameter(ParameterSetName = ParameterSetNames.OnPremMachines, Mandatory = true, HelpMessage = ParameterHelpMessages.WorkspaceResourceId)]
        [ValidateNotNullOrEmpty]
        public string WorkspaceResourceId { get; set; }

        public string BuildDatabaseResourceId()
        {
            if (this.ParameterSetName == ParameterSetNames.OnPremMachines)
            {
                return $"{WorkspaceResourceId}/onPremiseMachines/{ComputerName}_{AgentId}_{VmUuid}/sqlServers/{Server}/databases/{Database}";
            }

            return $"{ResourceId}/sqlServers/{Server}/databases/{Database}";
        }
    }
}
