using Commands.Security;
using Microsoft.Azure.Commands.Security.Common;
using Microsoft.Azure.Commands.SecurityCenter.Models.SqlVulnerabilityAssessment;
using System;
using System.Collections.Generic;
using System.Management.Automation;
using System.Text;

namespace Microsoft.Azure.Commands.SecurityCenter.Cmdlets.SqlVulnerabilityAssessment
{
    [Cmdlet(VerbsData.Update, ResourceManager.Common.AzureRMConstants.AzureRMPrefix + "SqlVulnerabilityAssessmentBaselineRule", SupportsShouldProcess = true), OutputType(typeof(PSSqlVulnerabilityAssessmentRuleBaselineResults))]

    public class UpdateSqlVulnerabilityAssessmentBaselineRule : SqlVulnerabilityAssessmentSetBaselineBase
    {
        [Parameter(ParameterSetName = ParameterSetNames.ResourceIdWithBaselineObject, Mandatory = true, ValueFromPipelineByPropertyName = true, HelpMessage = ParameterHelpMessages.ResourceId)]
        [Parameter(ParameterSetName = ParameterSetNames.ResourceIdWithBaselineLatest, Mandatory = true, ValueFromPipelineByPropertyName = true, HelpMessage = ParameterHelpMessages.ResourceId)]
        [Parameter(ParameterSetName = ParameterSetNames.OnPremMachinesWithBaselineObject, Mandatory = true, ValueFromPipelineByPropertyName = true, HelpMessage = ParameterHelpMessages.ResourceId)]
        [Parameter(ParameterSetName = ParameterSetNames.OnPremMachinesWithBaselineLatest, Mandatory = true, ValueFromPipelineByPropertyName = true, HelpMessage = ParameterHelpMessages.ResourceId)]
        public string RuleId { get; set; }

        [Parameter(ParameterSetName = ParameterSetNames.ResourceIdWithBaselineObject, Mandatory = true, ValueFromPipelineByPropertyName = true, HelpMessage = ParameterHelpMessages.ResourceId)]
        [Parameter(ParameterSetName = ParameterSetNames.OnPremMachinesWithBaselineObject, Mandatory = true, ValueFromPipelineByPropertyName = true, HelpMessage = ParameterHelpMessages.ResourceId)]
        public string[][] Baseline { get; set; }

        [Parameter(ParameterSetName = ParameterSetNames.InputObjectWithResourceId, Mandatory = true, ValueFromPipeline = true, HelpMessage = ParameterHelpMessages.InputObject)]
        [Parameter(ParameterSetName = ParameterSetNames.InputObjectWithOnPrem, Mandatory = true, ValueFromPipeline = true, HelpMessage = ParameterHelpMessages.InputObject)]
        public PSSqlVulnerabilityAssessmentRuleBaselineResults InputObject { get; set; }

        public override void ExecuteCmdlet()
        {
            var databaseResourceId = BuildDatabaseResourceId();
            if (this.ParameterSetName == ParameterSetNames.InputObjectWithResourceId
                || this.ParameterSetName == ParameterSetNames.InputObjectWithOnPrem)
            {
                var results = SecurityCenterClient.SqlVulnerabilityAssessmentBaselineRules.CreateOrUpdateWithHttpMessagesAsync(InputObject.Name, WorkspaceId, "2020-07-01-preview", databaseResourceId, results: InputObject.Results).GetAwaiter().GetResult().Body;
                WriteObject(results?.ConvertToPSType());
            }
            else
            {
                if (UseLatest.IsPresent)
                {
                    var results = SecurityCenterClient.SqlVulnerabilityAssessmentBaselineRules.CreateOrUpdateWithHttpMessagesAsync(RuleId, WorkspaceId, "2020-07-01-preview", databaseResourceId, latestScan: true).GetAwaiter().GetResult().Body;
                    WriteObject(results?.ConvertToPSType());
                }
                else
                {
                    var results = SecurityCenterClient.SqlVulnerabilityAssessmentBaselineRules.CreateOrUpdateWithHttpMessagesAsync(RuleId, WorkspaceId, "2020-07-01-preview", databaseResourceId, results: Baseline).GetAwaiter().GetResult().Body;
                    WriteObject(results?.ConvertToPSType());
                }
            }
        }
    }
}
