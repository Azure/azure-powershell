
# ----------------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# http://www.apache.org/licenses/LICENSE-2.0
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# Code generated by Microsoft (R) AutoRest Code Generator.Changes may cause incorrect behavior and will be lost if the code
# is regenerated.
# ----------------------------------------------------------------------------------

<#
.Synopsis
The operation to Get a virtual machine network interface.
.Description
The operation to Get a virtual machine network interface.
.Example
Get-AzScVmmVMNic -vmName "test-vm" -ResourceGroupName "test-rg-01"
.Example
Get-AzScVmmVMNic -vmName "test-vm" -ResourceGroupName "test-rg-01" -NicName "nic_1"

.Outputs
Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.INetworkInterface
.Link
https://learn.microsoft.com/powershell/module/az.scvmm/get-azscvmmvmnic
#>

function Get-AzScVmmVMNic {
    [OutputType([Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.INetworkInterface])]
    [CmdletBinding(DefaultParameterSetName='Get', PositionalBinding=$false, SupportsShouldProcess, ConfirmImpact='Medium')]
    param(
        [Parameter(Mandatory)]
        [Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Category('Path')]
        [System.String]
        # The name of the virtual machine.
        ${vmName},
    
        [Parameter(Mandatory)]
        [Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Category('Path')]
        [System.String]
        # The name of the resource group.
        # The name is case insensitive.
        ${ResourceGroupName},
    
        [Parameter()]
        [Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Category('Path')]
        [Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Runtime.DefaultInfo(Script = '(Get-AzContext).Subscription.Id')]
        [System.String]
        # The ID of the target subscription.
        # The value must be an UUID.
        ${SubscriptionId},
  
        [Parameter(ParameterSetName='Get')]
        [Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Category('Path')]
        [System.String]
        # The name of Network Interface
        ${NicName},

        [Parameter(ParameterSetName='Get')]
        [Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Category('Path')]
        [System.String]
        # The Id of Network Interface
        ${NicId}
    )

  process {
    try {
      $machineObj = Az.ScVmm.internal\Get-AzScVmmMachine -Name $vmName -ResourceGroupName $ResourceGroupName -SubscriptionId $SubscriptionId
      if ($null -eq $machineObj) {
        throw "Virtual Machine $vmName not found in Resource Group $ResourceGroupName (SubscriptionId $SubscriptionId)"
      }
    }
    catch {
      throw "Virtual Machine $vmName not found in Resource Group $ResourceGroupName (SubscriptionId $SubscriptionId)"
    }

    try {
      $vmObj = Az.ScVmm.internal\Get-AzScVmmVM -MachineId $machineObj.Id
      if ($null -eq $machineObj) {
        throw "Failed to fetch Virtual Machine Object for Virtual Machine $vmName"
      }
    }
    catch {
      throw "Failed to fetch Virtual Machine Object for Virtual Machine $vmName"
    }

    $nics = $vmObj | Select-Object -ExpandProperty NetworkProfileNetworkInterface

    if ($PSBoundParameters.ContainsKey('NicName') -and $PSBoundParameters.ContainsKey('NicId')) {
      $nics = $nics | Where-Object { $_.Name -eq $NicName -and $_.NicId -eq $NicId }
    }
    if ($PSBoundParameters.ContainsKey('NicName')) {
      $nics = $nics | Where-Object { $_.Name -eq $NicName }
    }
    if ($PSBoundParameters.ContainsKey('NicId')) {
      $nics = $nics | Where-Object { $_.NicId -eq $NicId }
    }
    return $nics
  } 
}