// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.Models.Api20220801Preview
{
    using static Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.Runtime.Extensions;

    /// <summary>
    /// Configure your SQL virtual machine to be able to connect to the Azure Key Vault service.
    /// </summary>
    public partial class KeyVaultCredentialSettings :
        Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.Models.Api20220801Preview.IKeyVaultCredentialSettings,
        Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.Models.Api20220801Preview.IKeyVaultCredentialSettingsInternal
    {

        /// <summary>Backing field for <see cref="AzureKeyVaultUrl" /> property.</summary>
        private string _azureKeyVaultUrl;

        /// <summary>Azure Key Vault url.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.Origin(Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.PropertyOrigin.Owned)]
        public string AzureKeyVaultUrl { get => this._azureKeyVaultUrl; set => this._azureKeyVaultUrl = value; }

        /// <summary>Backing field for <see cref="CredentialName" /> property.</summary>
        private string _credentialName;

        /// <summary>Credential name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.Origin(Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.PropertyOrigin.Owned)]
        public string CredentialName { get => this._credentialName; set => this._credentialName = value; }

        /// <summary>Backing field for <see cref="Enable" /> property.</summary>
        private bool? _enable;

        /// <summary>Enable or disable key vault credential setting.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.Origin(Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.PropertyOrigin.Owned)]
        public bool? Enable { get => this._enable; set => this._enable = value; }

        /// <summary>Backing field for <see cref="ServicePrincipalName" /> property.</summary>
        private string _servicePrincipalName;

        /// <summary>Service principal name to access key vault.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.Origin(Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.PropertyOrigin.Owned)]
        public string ServicePrincipalName { get => this._servicePrincipalName; set => this._servicePrincipalName = value; }

        /// <summary>Backing field for <see cref="ServicePrincipalSecret" /> property.</summary>
        private string _servicePrincipalSecret;

        /// <summary>Service principal name secret to access key vault.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.Origin(Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.PropertyOrigin.Owned)]
        public string ServicePrincipalSecret { get => this._servicePrincipalSecret; set => this._servicePrincipalSecret = value; }

        /// <summary>Creates an new <see cref="KeyVaultCredentialSettings" /> instance.</summary>
        public KeyVaultCredentialSettings()
        {

        }
    }
    /// Configure your SQL virtual machine to be able to connect to the Azure Key Vault service.
    public partial interface IKeyVaultCredentialSettings :
        Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.Runtime.IJsonSerializable
    {
        /// <summary>Azure Key Vault url.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Azure Key Vault url.",
        SerializedName = @"azureKeyVaultUrl",
        PossibleTypes = new [] { typeof(string) })]
        string AzureKeyVaultUrl { get; set; }
        /// <summary>Credential name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Credential name.",
        SerializedName = @"credentialName",
        PossibleTypes = new [] { typeof(string) })]
        string CredentialName { get; set; }
        /// <summary>Enable or disable key vault credential setting.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Enable or disable key vault credential setting.",
        SerializedName = @"enable",
        PossibleTypes = new [] { typeof(bool) })]
        bool? Enable { get; set; }
        /// <summary>Service principal name to access key vault.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Service principal name to access key vault.",
        SerializedName = @"servicePrincipalName",
        PossibleTypes = new [] { typeof(string) })]
        string ServicePrincipalName { get; set; }
        /// <summary>Service principal name secret to access key vault.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Service principal name secret to access key vault.",
        SerializedName = @"servicePrincipalSecret",
        PossibleTypes = new [] { typeof(string) })]
        string ServicePrincipalSecret { get; set; }

    }
    /// Configure your SQL virtual machine to be able to connect to the Azure Key Vault service.
    internal partial interface IKeyVaultCredentialSettingsInternal

    {
        /// <summary>Azure Key Vault url.</summary>
        string AzureKeyVaultUrl { get; set; }
        /// <summary>Credential name.</summary>
        string CredentialName { get; set; }
        /// <summary>Enable or disable key vault credential setting.</summary>
        bool? Enable { get; set; }
        /// <summary>Service principal name to access key vault.</summary>
        string ServicePrincipalName { get; set; }
        /// <summary>Service principal name secret to access key vault.</summary>
        string ServicePrincipalSecret { get; set; }

    }
}