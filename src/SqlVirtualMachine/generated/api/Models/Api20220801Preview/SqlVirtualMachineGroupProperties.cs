// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.Models.Api20220801Preview
{
    using static Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.Runtime.Extensions;

    /// <summary>The properties of a SQL virtual machine group.</summary>
    public partial class SqlVirtualMachineGroupProperties :
        Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.Models.Api20220801Preview.ISqlVirtualMachineGroupProperties,
        Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.Models.Api20220801Preview.ISqlVirtualMachineGroupPropertiesInternal
    {

        /// <summary>Backing field for <see cref="ClusterConfiguration" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.Support.ClusterConfiguration? _clusterConfiguration;

        /// <summary>Cluster type.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.Origin(Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.Support.ClusterConfiguration? ClusterConfiguration { get => this._clusterConfiguration; }

        /// <summary>Backing field for <see cref="ClusterManagerType" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.Support.ClusterManagerType? _clusterManagerType;

        /// <summary>
        /// Type of cluster manager: Windows Server Failover Cluster (WSFC), implied by the scale type of the group and the OS type.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.Origin(Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.Support.ClusterManagerType? ClusterManagerType { get => this._clusterManagerType; }

        /// <summary>Internal Acessors for ClusterConfiguration</summary>
        Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.Support.ClusterConfiguration? Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.Models.Api20220801Preview.ISqlVirtualMachineGroupPropertiesInternal.ClusterConfiguration { get => this._clusterConfiguration; set { {_clusterConfiguration = value;} } }

        /// <summary>Internal Acessors for ClusterManagerType</summary>
        Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.Support.ClusterManagerType? Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.Models.Api20220801Preview.ISqlVirtualMachineGroupPropertiesInternal.ClusterManagerType { get => this._clusterManagerType; set { {_clusterManagerType = value;} } }

        /// <summary>Internal Acessors for ProvisioningState</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.Models.Api20220801Preview.ISqlVirtualMachineGroupPropertiesInternal.ProvisioningState { get => this._provisioningState; set { {_provisioningState = value;} } }

        /// <summary>Internal Acessors for ScaleType</summary>
        Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.Support.ScaleType? Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.Models.Api20220801Preview.ISqlVirtualMachineGroupPropertiesInternal.ScaleType { get => this._scaleType; set { {_scaleType = value;} } }

        /// <summary>Internal Acessors for WsfcDomainProfile</summary>
        Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.Models.Api20220801Preview.IWsfcDomainProfile Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.Models.Api20220801Preview.ISqlVirtualMachineGroupPropertiesInternal.WsfcDomainProfile { get => (this._wsfcDomainProfile = this._wsfcDomainProfile ?? new Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.Models.Api20220801Preview.WsfcDomainProfile()); set { {_wsfcDomainProfile = value;} } }

        /// <summary>Backing field for <see cref="ProvisioningState" /> property.</summary>
        private string _provisioningState;

        /// <summary>Provisioning state to track the async operation status.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.Origin(Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.PropertyOrigin.Owned)]
        public string ProvisioningState { get => this._provisioningState; }

        /// <summary>Backing field for <see cref="ScaleType" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.Support.ScaleType? _scaleType;

        /// <summary>Scale type.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.Origin(Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.Support.ScaleType? ScaleType { get => this._scaleType; }

        /// <summary>Backing field for <see cref="SqlImageOffer" /> property.</summary>
        private string _sqlImageOffer;

        /// <summary>SQL image offer. Examples may include SQL2016-WS2016, SQL2017-WS2016.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.Origin(Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.PropertyOrigin.Owned)]
        public string SqlImageOffer { get => this._sqlImageOffer; set => this._sqlImageOffer = value; }

        /// <summary>Backing field for <see cref="SqlImageSku" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.Support.SqlVMGroupImageSku? _sqlImageSku;

        /// <summary>SQL image sku.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.Origin(Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.Support.SqlVMGroupImageSku? SqlImageSku { get => this._sqlImageSku; set => this._sqlImageSku = value; }

        /// <summary>Backing field for <see cref="WsfcDomainProfile" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.Models.Api20220801Preview.IWsfcDomainProfile _wsfcDomainProfile;

        /// <summary>Cluster Active Directory domain profile.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.Origin(Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.Models.Api20220801Preview.IWsfcDomainProfile WsfcDomainProfile { get => (this._wsfcDomainProfile = this._wsfcDomainProfile ?? new Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.Models.Api20220801Preview.WsfcDomainProfile()); set => this._wsfcDomainProfile = value; }

        /// <summary>
        /// Account name used for creating cluster (at minimum needs permissions to 'Create Computer Objects' in domain).
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.Origin(Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.PropertyOrigin.Inlined)]
        public string WsfcDomainProfileClusterBootstrapAccount { get => ((Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.Models.Api20220801Preview.IWsfcDomainProfileInternal)WsfcDomainProfile).ClusterBootstrapAccount; set => ((Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.Models.Api20220801Preview.IWsfcDomainProfileInternal)WsfcDomainProfile).ClusterBootstrapAccount = value ?? null; }

        /// <summary>
        /// Account name used for operating cluster i.e. will be part of administrators group on all the participating virtual machines
        /// in the cluster.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.Origin(Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.PropertyOrigin.Inlined)]
        public string WsfcDomainProfileClusterOperatorAccount { get => ((Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.Models.Api20220801Preview.IWsfcDomainProfileInternal)WsfcDomainProfile).ClusterOperatorAccount; set => ((Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.Models.Api20220801Preview.IWsfcDomainProfileInternal)WsfcDomainProfile).ClusterOperatorAccount = value ?? null; }

        /// <summary>Cluster subnet type.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.Origin(Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.Support.ClusterSubnetType? WsfcDomainProfileClusterSubnetType { get => ((Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.Models.Api20220801Preview.IWsfcDomainProfileInternal)WsfcDomainProfile).ClusterSubnetType; set => ((Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.Models.Api20220801Preview.IWsfcDomainProfileInternal)WsfcDomainProfile).ClusterSubnetType = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.Support.ClusterSubnetType)""); }

        /// <summary>Fully qualified name of the domain.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.Origin(Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.PropertyOrigin.Inlined)]
        public string WsfcDomainProfileDomainFqdn { get => ((Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.Models.Api20220801Preview.IWsfcDomainProfileInternal)WsfcDomainProfile).DomainFqdn; set => ((Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.Models.Api20220801Preview.IWsfcDomainProfileInternal)WsfcDomainProfile).DomainFqdn = value ?? null; }

        /// <summary>Optional path for fileshare witness.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.Origin(Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.PropertyOrigin.Inlined)]
        public string WsfcDomainProfileFileShareWitnessPath { get => ((Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.Models.Api20220801Preview.IWsfcDomainProfileInternal)WsfcDomainProfile).FileShareWitnessPath; set => ((Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.Models.Api20220801Preview.IWsfcDomainProfileInternal)WsfcDomainProfile).FileShareWitnessPath = value ?? null; }

        /// <summary>Organizational Unit path in which the nodes and cluster will be present.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.Origin(Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.PropertyOrigin.Inlined)]
        public string WsfcDomainProfileOuPath { get => ((Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.Models.Api20220801Preview.IWsfcDomainProfileInternal)WsfcDomainProfile).OuPath; set => ((Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.Models.Api20220801Preview.IWsfcDomainProfileInternal)WsfcDomainProfile).OuPath = value ?? null; }

        /// <summary>
        /// Account name under which SQL service will run on all participating SQL virtual machines in the cluster.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.Origin(Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.PropertyOrigin.Inlined)]
        public string WsfcDomainProfileSqlServiceAccount { get => ((Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.Models.Api20220801Preview.IWsfcDomainProfileInternal)WsfcDomainProfile).SqlServiceAccount; set => ((Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.Models.Api20220801Preview.IWsfcDomainProfileInternal)WsfcDomainProfile).SqlServiceAccount = value ?? null; }

        /// <summary>Primary key of the witness storage account.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.Origin(Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.PropertyOrigin.Inlined)]
        public System.Security.SecureString WsfcDomainProfileStorageAccountPrimaryKey { get => ((Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.Models.Api20220801Preview.IWsfcDomainProfileInternal)WsfcDomainProfile).StorageAccountPrimaryKey; set => ((Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.Models.Api20220801Preview.IWsfcDomainProfileInternal)WsfcDomainProfile).StorageAccountPrimaryKey = value ?? null; }

        /// <summary>Fully qualified ARM resource id of the witness storage account.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.Origin(Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.PropertyOrigin.Inlined)]
        public string WsfcDomainProfileStorageAccountUrl { get => ((Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.Models.Api20220801Preview.IWsfcDomainProfileInternal)WsfcDomainProfile).StorageAccountUrl; set => ((Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.Models.Api20220801Preview.IWsfcDomainProfileInternal)WsfcDomainProfile).StorageAccountUrl = value ?? null; }

        /// <summary>Creates an new <see cref="SqlVirtualMachineGroupProperties" /> instance.</summary>
        public SqlVirtualMachineGroupProperties()
        {

        }
    }
    /// The properties of a SQL virtual machine group.
    public partial interface ISqlVirtualMachineGroupProperties :
        Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.Runtime.IJsonSerializable
    {
        /// <summary>Cluster type.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Cluster type.",
        SerializedName = @"clusterConfiguration",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.Support.ClusterConfiguration) })]
        Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.Support.ClusterConfiguration? ClusterConfiguration { get;  }
        /// <summary>
        /// Type of cluster manager: Windows Server Failover Cluster (WSFC), implied by the scale type of the group and the OS type.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Type of cluster manager: Windows Server Failover Cluster (WSFC), implied by the scale type of the group and the OS type.",
        SerializedName = @"clusterManagerType",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.Support.ClusterManagerType) })]
        Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.Support.ClusterManagerType? ClusterManagerType { get;  }
        /// <summary>Provisioning state to track the async operation status.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Provisioning state to track the async operation status.",
        SerializedName = @"provisioningState",
        PossibleTypes = new [] { typeof(string) })]
        string ProvisioningState { get;  }
        /// <summary>Scale type.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Scale type.",
        SerializedName = @"scaleType",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.Support.ScaleType) })]
        Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.Support.ScaleType? ScaleType { get;  }
        /// <summary>SQL image offer. Examples may include SQL2016-WS2016, SQL2017-WS2016.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"SQL image offer. Examples may include SQL2016-WS2016, SQL2017-WS2016.",
        SerializedName = @"sqlImageOffer",
        PossibleTypes = new [] { typeof(string) })]
        string SqlImageOffer { get; set; }
        /// <summary>SQL image sku.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"SQL image sku.",
        SerializedName = @"sqlImageSku",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.Support.SqlVMGroupImageSku) })]
        Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.Support.SqlVMGroupImageSku? SqlImageSku { get; set; }
        /// <summary>
        /// Account name used for creating cluster (at minimum needs permissions to 'Create Computer Objects' in domain).
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Account name used for creating cluster (at minimum needs permissions to 'Create Computer Objects' in domain).",
        SerializedName = @"clusterBootstrapAccount",
        PossibleTypes = new [] { typeof(string) })]
        string WsfcDomainProfileClusterBootstrapAccount { get; set; }
        /// <summary>
        /// Account name used for operating cluster i.e. will be part of administrators group on all the participating virtual machines
        /// in the cluster.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Account name used for operating cluster i.e. will be part of administrators group on all the participating virtual machines in the cluster.",
        SerializedName = @"clusterOperatorAccount",
        PossibleTypes = new [] { typeof(string) })]
        string WsfcDomainProfileClusterOperatorAccount { get; set; }
        /// <summary>Cluster subnet type.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Cluster subnet type.",
        SerializedName = @"clusterSubnetType",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.Support.ClusterSubnetType) })]
        Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.Support.ClusterSubnetType? WsfcDomainProfileClusterSubnetType { get; set; }
        /// <summary>Fully qualified name of the domain.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Fully qualified name of the domain.",
        SerializedName = @"domainFqdn",
        PossibleTypes = new [] { typeof(string) })]
        string WsfcDomainProfileDomainFqdn { get; set; }
        /// <summary>Optional path for fileshare witness.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Optional path for fileshare witness.",
        SerializedName = @"fileShareWitnessPath",
        PossibleTypes = new [] { typeof(string) })]
        string WsfcDomainProfileFileShareWitnessPath { get; set; }
        /// <summary>Organizational Unit path in which the nodes and cluster will be present.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Organizational Unit path in which the nodes and cluster will be present.",
        SerializedName = @"ouPath",
        PossibleTypes = new [] { typeof(string) })]
        string WsfcDomainProfileOuPath { get; set; }
        /// <summary>
        /// Account name under which SQL service will run on all participating SQL virtual machines in the cluster.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Account name under which SQL service will run on all participating SQL virtual machines in the cluster.",
        SerializedName = @"sqlServiceAccount",
        PossibleTypes = new [] { typeof(string) })]
        string WsfcDomainProfileSqlServiceAccount { get; set; }
        /// <summary>Primary key of the witness storage account.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Primary key of the witness storage account.",
        SerializedName = @"storageAccountPrimaryKey",
        PossibleTypes = new [] { typeof(System.Security.SecureString) })]
        System.Security.SecureString WsfcDomainProfileStorageAccountPrimaryKey { get; set; }
        /// <summary>Fully qualified ARM resource id of the witness storage account.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Fully qualified ARM resource id of the witness storage account.",
        SerializedName = @"storageAccountUrl",
        PossibleTypes = new [] { typeof(string) })]
        string WsfcDomainProfileStorageAccountUrl { get; set; }

    }
    /// The properties of a SQL virtual machine group.
    internal partial interface ISqlVirtualMachineGroupPropertiesInternal

    {
        /// <summary>Cluster type.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.Support.ClusterConfiguration? ClusterConfiguration { get; set; }
        /// <summary>
        /// Type of cluster manager: Windows Server Failover Cluster (WSFC), implied by the scale type of the group and the OS type.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.Support.ClusterManagerType? ClusterManagerType { get; set; }
        /// <summary>Provisioning state to track the async operation status.</summary>
        string ProvisioningState { get; set; }
        /// <summary>Scale type.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.Support.ScaleType? ScaleType { get; set; }
        /// <summary>SQL image offer. Examples may include SQL2016-WS2016, SQL2017-WS2016.</summary>
        string SqlImageOffer { get; set; }
        /// <summary>SQL image sku.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.Support.SqlVMGroupImageSku? SqlImageSku { get; set; }
        /// <summary>Cluster Active Directory domain profile.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.Models.Api20220801Preview.IWsfcDomainProfile WsfcDomainProfile { get; set; }
        /// <summary>
        /// Account name used for creating cluster (at minimum needs permissions to 'Create Computer Objects' in domain).
        /// </summary>
        string WsfcDomainProfileClusterBootstrapAccount { get; set; }
        /// <summary>
        /// Account name used for operating cluster i.e. will be part of administrators group on all the participating virtual machines
        /// in the cluster.
        /// </summary>
        string WsfcDomainProfileClusterOperatorAccount { get; set; }
        /// <summary>Cluster subnet type.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.Support.ClusterSubnetType? WsfcDomainProfileClusterSubnetType { get; set; }
        /// <summary>Fully qualified name of the domain.</summary>
        string WsfcDomainProfileDomainFqdn { get; set; }
        /// <summary>Optional path for fileshare witness.</summary>
        string WsfcDomainProfileFileShareWitnessPath { get; set; }
        /// <summary>Organizational Unit path in which the nodes and cluster will be present.</summary>
        string WsfcDomainProfileOuPath { get; set; }
        /// <summary>
        /// Account name under which SQL service will run on all participating SQL virtual machines in the cluster.
        /// </summary>
        string WsfcDomainProfileSqlServiceAccount { get; set; }
        /// <summary>Primary key of the witness storage account.</summary>
        System.Security.SecureString WsfcDomainProfileStorageAccountPrimaryKey { get; set; }
        /// <summary>Fully qualified ARM resource id of the witness storage account.</summary>
        string WsfcDomainProfileStorageAccountUrl { get; set; }

    }
}