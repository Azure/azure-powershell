// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.ApiManagement.Models
{
    using System.Linq;

    /// <summary>
    /// Properties of an API Management service resource description.
    /// </summary>
    public partial class ApiManagementServiceUpdateProperties : ApiManagementServiceBaseProperties
    {
        /// <summary>
        /// Initializes a new instance of the ApiManagementServiceUpdateProperties class.
        /// </summary>
        public ApiManagementServiceUpdateProperties()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the ApiManagementServiceUpdateProperties class.
        /// </summary>

        /// <param name="notificationSenderEmail">Email address from which the notification will be sent.
        /// </param>

        /// <param name="provisioningState">The current provisioning state of the API Management service which can be
        /// one of the following:
        /// Created/Activating/Succeeded/Updating/Failed/Stopped/Terminating/TerminationFailed/Deleted.
        /// </param>

        /// <param name="targetProvisioningState">The provisioning state of the API Management service, which is targeted by
        /// the long running operation started on the service.
        /// </param>

        /// <param name="createdAtUtc">Creation UTC date of the API Management service.The date conforms to the
        /// following format: `yyyy-MM-ddTHH:mm:ssZ` as specified by the ISO 8601
        /// standard.
        /// </param>

        /// <param name="gatewayUrl">Gateway URL of the API Management service.
        /// </param>

        /// <param name="gatewayRegionalUrl">Gateway URL of the API Management service in the Default Region.
        /// </param>

        /// <param name="portalUrl">Publisher portal endpoint Url of the API Management service.
        /// </param>

        /// <param name="managementApiUrl">Management API endpoint URL of the API Management service.
        /// </param>

        /// <param name="scmUrl">SCM endpoint URL of the API Management service.
        /// </param>

        /// <param name="developerPortalUrl">DEveloper Portal endpoint URL of the API Management service.
        /// </param>

        /// <param name="hostnameConfigurations">Custom hostname configuration of the API Management service.
        /// </param>

        /// <param name="publicIPAddresses">Public Static Load Balanced IP addresses of the API Management service in
        /// Primary region. Available only for Basic, Standard, Premium and Isolated
        /// SKU.
        /// </param>

        /// <param name="privateIPAddresses">Private Static Load Balanced IP addresses of the API Management service in
        /// Primary region which is deployed in an Internal Virtual Network. Available
        /// only for Basic, Standard, Premium and Isolated SKU.
        /// </param>

        /// <param name="publicIPAddressId">Public Standard SKU IP V4 based IP address to be associated with Virtual
        /// Network deployed service in the region. Supported only for Developer and
        /// Premium SKU being deployed in Virtual Network.
        /// </param>

        /// <param name="publicNetworkAccess">Whether or not public endpoint access is allowed for this API Management
        /// service.  Value is optional but if passed in, must be &#39;Enabled&#39; or
        /// &#39;Disabled&#39;. If &#39;Disabled&#39;, private endpoints are the exclusive access
        /// method. Default value is &#39;Enabled&#39;
        /// Possible values include: &#39;Enabled&#39;, &#39;Disabled&#39;</param>

        /// <param name="virtualNetworkConfiguration">Virtual network configuration of the API Management service.
        /// </param>

        /// <param name="additionalLocations">Additional datacenter locations of the API Management service.
        /// </param>

        /// <param name="customProperties">Custom properties of the API Management service.&lt;/br&gt;Setting
        /// `Microsoft.WindowsAzure.ApiManagement.Gateway.Security.Ciphers.TripleDes168`
        /// will disable the cipher TLS_RSA_WITH_3DES_EDE_CBC_SHA for all TLS(1.0, 1.1
        /// and 1.2).&lt;/br&gt;Setting
        /// `Microsoft.WindowsAzure.ApiManagement.Gateway.Security.Protocols.Tls11` can
        /// be used to disable just TLS 1.1.&lt;/br&gt;Setting
        /// `Microsoft.WindowsAzure.ApiManagement.Gateway.Security.Protocols.Tls10` can
        /// be used to disable TLS 1.0 on an API Management service.&lt;/br&gt;Setting
        /// `Microsoft.WindowsAzure.ApiManagement.Gateway.Security.Backend.Protocols.Tls11`
        /// can be used to disable just TLS 1.1 for communications with
        /// backends.&lt;/br&gt;Setting
        /// `Microsoft.WindowsAzure.ApiManagement.Gateway.Security.Backend.Protocols.Tls10`
        /// can be used to disable TLS 1.0 for communications with
        /// backends.&lt;/br&gt;Setting
        /// `Microsoft.WindowsAzure.ApiManagement.Gateway.Protocols.Server.Http2` can
        /// be used to enable HTTP2 protocol on an API Management service.&lt;/br&gt;Not
        /// specifying any of these properties on PATCH operation will reset omitted
        /// properties&#39; values to their defaults. For all the settings except Http2 the
        /// default value is `True` if the service was created on or before April 1st
        /// 2018 and `False` otherwise. Http2 setting&#39;s default value is
        /// `False`.&lt;/br&gt;&lt;/br&gt;You can disable any of next ciphers by using settings
        /// `Microsoft.WindowsAzure.ApiManagement.Gateway.Security.Ciphers.[cipher_name]`:
        /// TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA, TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA,
        /// TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA, TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA,
        /// TLS_RSA_WITH_AES_128_GCM_SHA256, TLS_RSA_WITH_AES_256_CBC_SHA256,
        /// TLS_RSA_WITH_AES_128_CBC_SHA256, TLS_RSA_WITH_AES_256_CBC_SHA,
        /// TLS_RSA_WITH_AES_128_CBC_SHA. For example,
        /// `Microsoft.WindowsAzure.ApiManagement.Gateway.Security.Ciphers.TLS_RSA_WITH_AES_128_CBC_SHA256`:`false`.
        /// The default value is `true` for them.  Note: next ciphers can&#39;t be disabled
        /// since they are required by Azure CloudService internal components:
        /// TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA384,TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256,TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384,TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256,TLS_RSA_WITH_AES_256_GCM_SHA384
        /// </param>

        /// <param name="certificates">List of Certificates that need to be installed in the API Management
        /// service. Max supported certificates that can be installed is 10.
        /// </param>

        /// <param name="enableClientCertificate">Property only meant to be used for Consumption SKU Service. This enforces a
        /// client certificate to be presented on each request to the gateway. This
        /// also enables the ability to authenticate the certificate in the policy on
        /// the gateway.
        /// </param>

        /// <param name="disableGateway">Property only valid for an Api Management service deployed in multiple
        /// locations. This can be used to disable the gateway in master region.
        /// </param>

        /// <param name="virtualNetworkType">The type of VPN in which API Management service needs to be configured in.
        /// None (Default Value) means the API Management service is not part of any
        /// Virtual Network, External means the API Management deployment is set up
        /// inside a Virtual Network having an Internet Facing Endpoint, and Internal
        /// means that API Management deployment is setup inside a Virtual Network
        /// having an Intranet Facing Endpoint only.
        /// Possible values include: &#39;None&#39;, &#39;External&#39;, &#39;Internal&#39;</param>

        /// <param name="apiVersionConstraint">Control Plane Apis version constraint for the API Management service.
        /// </param>

        /// <param name="restore">Undelete Api Management Service if it was previously soft-deleted. If this
        /// flag is specified and set to True all other properties will be ignored.
        /// </param>

        /// <param name="privateEndpointConnections">List of Private Endpoint Connections of this service.
        /// </param>

        /// <param name="platformVersion">Compute Platform Version running the service in this location.
        /// Possible values include: &#39;undetermined&#39;, &#39;stv1&#39;, &#39;stv2&#39;, &#39;mtv1&#39;</param>

        /// <param name="publisherEmail">Publisher email.
        /// </param>

        /// <param name="publisherName">Publisher name.
        /// </param>
        public ApiManagementServiceUpdateProperties(string notificationSenderEmail = default(string), string provisioningState = default(string), string targetProvisioningState = default(string), System.DateTime? createdAtUtc = default(System.DateTime?), string gatewayUrl = default(string), string gatewayRegionalUrl = default(string), string portalUrl = default(string), string managementApiUrl = default(string), string scmUrl = default(string), string developerPortalUrl = default(string), System.Collections.Generic.IList<HostnameConfiguration> hostnameConfigurations = default(System.Collections.Generic.IList<HostnameConfiguration>), System.Collections.Generic.IList<string> publicIPAddresses = default(System.Collections.Generic.IList<string>), System.Collections.Generic.IList<string> privateIPAddresses = default(System.Collections.Generic.IList<string>), string publicIPAddressId = default(string), string publicNetworkAccess = default(string), VirtualNetworkConfiguration virtualNetworkConfiguration = default(VirtualNetworkConfiguration), System.Collections.Generic.IList<AdditionalLocation> additionalLocations = default(System.Collections.Generic.IList<AdditionalLocation>), System.Collections.Generic.IDictionary<string, string> customProperties = default(System.Collections.Generic.IDictionary<string, string>), System.Collections.Generic.IList<CertificateConfiguration> certificates = default(System.Collections.Generic.IList<CertificateConfiguration>), bool? enableClientCertificate = default(bool?), bool? disableGateway = default(bool?), string virtualNetworkType = default(string), ApiVersionConstraint apiVersionConstraint = default(ApiVersionConstraint), bool? restore = default(bool?), System.Collections.Generic.IList<RemotePrivateEndpointConnectionWrapper> privateEndpointConnections = default(System.Collections.Generic.IList<RemotePrivateEndpointConnectionWrapper>), string platformVersion = default(string), string publisherEmail = default(string), string publisherName = default(string))

        : base(notificationSenderEmail, provisioningState, targetProvisioningState, createdAtUtc, gatewayUrl, gatewayRegionalUrl, portalUrl, managementApiUrl, scmUrl, developerPortalUrl, hostnameConfigurations, publicIPAddresses, privateIPAddresses, publicIPAddressId, publicNetworkAccess, virtualNetworkConfiguration, additionalLocations, customProperties, certificates, enableClientCertificate, disableGateway, virtualNetworkType, apiVersionConstraint, restore, privateEndpointConnections, platformVersion)
        {
            this.PublisherEmail = publisherEmail;
            this.PublisherName = publisherName;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets or sets publisher email.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "publisherEmail")]
        public string PublisherEmail {get; set; }

        /// <summary>
        /// Gets or sets publisher name.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "publisherName")]
        public string PublisherName {get; set; }
        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public override void Validate()
        {
            base.Validate();
            if (this.PublisherEmail != null)
            {
                if (this.PublisherEmail.Length > 100)
                {
                    throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.MaxLength, "PublisherEmail", 100);
                }
            }
            if (this.PublisherName != null)
            {
                if (this.PublisherName.Length > 100)
                {
                    throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.MaxLength, "PublisherName", 100);
                }
            }
        }
    }
}