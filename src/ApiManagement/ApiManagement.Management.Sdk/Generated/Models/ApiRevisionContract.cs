// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.ApiManagement.Models
{
    using System.Linq;

    /// <summary>
    /// Summary of revision metadata.
    /// </summary>
    public partial class ApiRevisionContract
    {
        /// <summary>
        /// Initializes a new instance of the ApiRevisionContract class.
        /// </summary>
        public ApiRevisionContract()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the ApiRevisionContract class.
        /// </summary>

        /// <param name="apiId">Identifier of the API Revision.
        /// </param>

        /// <param name="apiRevision">Revision number of API.
        /// </param>

        /// <param name="createdDateTime">The time the API Revision was created. The date conforms to the following
        /// format: yyyy-MM-ddTHH:mm:ssZ as specified by the ISO 8601 standard.
        /// </param>

        /// <param name="updatedDateTime">The time the API Revision were updated. The date conforms to the following
        /// format: yyyy-MM-ddTHH:mm:ssZ as specified by the ISO 8601 standard.
        /// </param>

        /// <param name="description">Description of the API Revision.
        /// </param>

        /// <param name="privateUrl">Gateway URL for accessing the non-current API Revision.
        /// </param>

        /// <param name="isOnline">Indicates if API revision is the current api revision.
        /// </param>

        /// <param name="isCurrent">Indicates if API revision is accessible via the gateway.
        /// </param>
        public ApiRevisionContract(string apiId = default(string), string apiRevision = default(string), System.DateTime? createdDateTime = default(System.DateTime?), System.DateTime? updatedDateTime = default(System.DateTime?), string description = default(string), string privateUrl = default(string), bool? isOnline = default(bool?), bool? isCurrent = default(bool?))

        {
            this.ApiId = apiId;
            this.ApiRevision = apiRevision;
            this.CreatedDateTime = createdDateTime;
            this.UpdatedDateTime = updatedDateTime;
            this.Description = description;
            this.PrivateUrl = privateUrl;
            this.IsOnline = isOnline;
            this.IsCurrent = isCurrent;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets identifier of the API Revision.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "apiId")]
        public string ApiId {get; private set; }

        /// <summary>
        /// Gets revision number of API.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "apiRevision")]
        public string ApiRevision {get; private set; }

        /// <summary>
        /// Gets the time the API Revision was created. The date conforms to the
        /// following format: yyyy-MM-ddTHH:mm:ssZ as specified by the ISO 8601
        /// standard.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "createdDateTime")]
        public System.DateTime? CreatedDateTime {get; private set; }

        /// <summary>
        /// Gets the time the API Revision were updated. The date conforms to the
        /// following format: yyyy-MM-ddTHH:mm:ssZ as specified by the ISO 8601
        /// standard.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "updatedDateTime")]
        public System.DateTime? UpdatedDateTime {get; private set; }

        /// <summary>
        /// Gets description of the API Revision.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "description")]
        public string Description {get; private set; }

        /// <summary>
        /// Gets gateway URL for accessing the non-current API Revision.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "privateUrl")]
        public string PrivateUrl {get; private set; }

        /// <summary>
        /// Gets indicates if API revision is the current api revision.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "isOnline")]
        public bool? IsOnline {get; private set; }

        /// <summary>
        /// Gets indicates if API revision is accessible via the gateway.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "isCurrent")]
        public bool? IsCurrent {get; private set; }
        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {

            if (this.ApiRevision != null)
            {
                if (this.ApiRevision.Length > 100)
                {
                    throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.MaxLength, "ApiRevision", 100);
                }
                if (this.ApiRevision.Length < 1)
                {
                    throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.MinLength, "ApiRevision", 1);
                }
            }
            if (this.Description != null)
            {
                if (this.Description.Length > 256)
                {
                    throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.MaxLength, "Description", 256);
                }
            }

        }
    }
}