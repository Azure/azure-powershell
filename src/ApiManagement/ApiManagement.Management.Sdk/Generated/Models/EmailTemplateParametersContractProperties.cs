// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.ApiManagement.Models
{
    using System.Linq;

    /// <summary>
    /// Email Template Parameter contract.
    /// </summary>
    public partial class EmailTemplateParametersContractProperties
    {
        /// <summary>
        /// Initializes a new instance of the EmailTemplateParametersContractProperties class.
        /// </summary>
        public EmailTemplateParametersContractProperties()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the EmailTemplateParametersContractProperties class.
        /// </summary>

        /// <param name="name">Template parameter name.
        /// </param>

        /// <param name="title">Template parameter title.
        /// </param>

        /// <param name="description">Template parameter description.
        /// </param>
        public EmailTemplateParametersContractProperties(string name = default(string), string title = default(string), string description = default(string))

        {
            this.Name = name;
            this.Title = title;
            this.Description = description;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets or sets template parameter name.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "name")]
        public string Name {get; set; }

        /// <summary>
        /// Gets or sets template parameter title.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "title")]
        public string Title {get; set; }

        /// <summary>
        /// Gets or sets template parameter description.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "description")]
        public string Description {get; set; }
        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (this.Name != null)
            {
                if (this.Name.Length > 256)
                {
                    throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.MaxLength, "Name", 256);
                }
                if (this.Name.Length < 1)
                {
                    throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.MinLength, "Name", 1);
                }
                if (!System.Text.RegularExpressions.Regex.IsMatch(this.Name, "^[A-Za-z0-9-._]+$"))
                {
                    throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.Pattern, "Name", "^[A-Za-z0-9-._]+$");
                }
            }
            if (this.Title != null)
            {
                if (this.Title.Length > 4096)
                {
                    throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.MaxLength, "Title", 4096);
                }
                if (this.Title.Length < 1)
                {
                    throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.MinLength, "Title", 1);
                }
            }
            if (this.Description != null)
            {
                if (this.Description.Length > 256)
                {
                    throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.MaxLength, "Description", 256);
                }
                if (this.Description.Length < 1)
                {
                    throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.MinLength, "Description", 1);
                }
                if (!System.Text.RegularExpressions.Regex.IsMatch(this.Description, "^[A-Za-z0-9-._]+$"))
                {
                    throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.Pattern, "Description", "^[A-Za-z0-9-._]+$");
                }
            }
        }
    }
}