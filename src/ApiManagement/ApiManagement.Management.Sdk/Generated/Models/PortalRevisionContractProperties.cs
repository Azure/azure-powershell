// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.ApiManagement.Models
{
    using System.Linq;

    public partial class PortalRevisionContractProperties
    {
        /// <summary>
        /// Initializes a new instance of the PortalRevisionContractProperties class.
        /// </summary>
        public PortalRevisionContractProperties()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the PortalRevisionContractProperties class.
        /// </summary>

        /// <param name="description">Portal revision description.
        /// </param>

        /// <param name="statusDetails">Portal revision publishing status details.
        /// </param>

        /// <param name="status">Status of the portal&#39;s revision.
        /// Possible values include: &#39;pending&#39;, &#39;publishing&#39;, &#39;completed&#39;, &#39;failed&#39;</param>

        /// <param name="isCurrent">Indicates if the portal&#39;s revision is public.
        /// </param>

        /// <param name="createdDateTime">Portal&#39;s revision creation date and time.
        /// </param>

        /// <param name="updatedDateTime">Last updated date and time.
        /// </param>
        public PortalRevisionContractProperties(string description = default(string), string statusDetails = default(string), string status = default(string), bool? isCurrent = default(bool?), System.DateTime? createdDateTime = default(System.DateTime?), System.DateTime? updatedDateTime = default(System.DateTime?))

        {
            this.Description = description;
            this.StatusDetails = statusDetails;
            this.Status = status;
            this.IsCurrent = isCurrent;
            this.CreatedDateTime = createdDateTime;
            this.UpdatedDateTime = updatedDateTime;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets or sets portal revision description.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "description")]
        public string Description {get; set; }

        /// <summary>
        /// Gets portal revision publishing status details.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "statusDetails")]
        public string StatusDetails {get; private set; }

        /// <summary>
        /// Gets status of the portal&#39;s revision. Possible values include: &#39;pending&#39;, &#39;publishing&#39;, &#39;completed&#39;, &#39;failed&#39;
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "status")]
        public string Status {get; private set; }

        /// <summary>
        /// Gets or sets indicates if the portal&#39;s revision is public.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "isCurrent")]
        public bool? IsCurrent {get; set; }

        /// <summary>
        /// Gets portal&#39;s revision creation date and time.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "createdDateTime")]
        public System.DateTime? CreatedDateTime {get; private set; }

        /// <summary>
        /// Gets last updated date and time.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "updatedDateTime")]
        public System.DateTime? UpdatedDateTime {get; private set; }
        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (this.Description != null)
            {
                if (this.Description.Length > 2000)
                {
                    throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.MaxLength, "Description", 2000);
                }
            }
            if (this.StatusDetails != null)
            {
                if (this.StatusDetails.Length > 2000)
                {
                    throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.MaxLength, "StatusDetails", 2000);
                }
            }

        }
    }
}