// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.ApiManagement.Models
{
    using System.Linq;

    /// <summary>
    /// API base contract details.
    /// </summary>
    public partial class ApiEntityBaseContract
    {
        /// <summary>
        /// Initializes a new instance of the ApiEntityBaseContract class.
        /// </summary>
        public ApiEntityBaseContract()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the ApiEntityBaseContract class.
        /// </summary>

        /// <param name="description">Description of the API. May include HTML formatting tags.
        /// </param>

        /// <param name="authenticationSettings">Collection of authentication settings included into this API.
        /// </param>

        /// <param name="subscriptionKeyParameterNames">Protocols over which API is made available.
        /// </param>

        /// <param name="apiType">Type of API.
        /// Possible values include: &#39;http&#39;, &#39;soap&#39;, &#39;websocket&#39;, &#39;graphql&#39;</param>

        /// <param name="apiRevision">Describes the revision of the API. If no value is provided, default
        /// revision 1 is created
        /// </param>

        /// <param name="apiVersion">Indicates the version identifier of the API if the API is versioned
        /// </param>

        /// <param name="isCurrent">Indicates if API revision is current api revision.
        /// </param>

        /// <param name="isOnline">Indicates if API revision is accessible via the gateway.
        /// </param>

        /// <param name="apiRevisionDescription">Description of the API Revision.
        /// </param>

        /// <param name="apiVersionDescription">Description of the API Version.
        /// </param>

        /// <param name="apiVersionSetId">A resource identifier for the related ApiVersionSet.
        /// </param>

        /// <param name="subscriptionRequired">Specifies whether an API or Product subscription is required for accessing
        /// the API.
        /// </param>

        /// <param name="termsOfServiceUrl">A URL to the Terms of Service for the API. MUST be in the format of a URL.
        /// </param>

        /// <param name="contact">Contact information for the API.
        /// </param>

        /// <param name="license">License information for the API.
        /// </param>
        public ApiEntityBaseContract(string description = default(string), AuthenticationSettingsContract authenticationSettings = default(AuthenticationSettingsContract), SubscriptionKeyParameterNamesContract subscriptionKeyParameterNames = default(SubscriptionKeyParameterNamesContract), string apiType = default(string), string apiRevision = default(string), string apiVersion = default(string), bool? isCurrent = default(bool?), bool? isOnline = default(bool?), string apiRevisionDescription = default(string), string apiVersionDescription = default(string), string apiVersionSetId = default(string), bool? subscriptionRequired = default(bool?), string termsOfServiceUrl = default(string), ApiContactInformation contact = default(ApiContactInformation), ApiLicenseInformation license = default(ApiLicenseInformation))

        {
            this.Description = description;
            this.AuthenticationSettings = authenticationSettings;
            this.SubscriptionKeyParameterNames = subscriptionKeyParameterNames;
            this.ApiType = apiType;
            this.ApiRevision = apiRevision;
            this.ApiVersion = apiVersion;
            this.IsCurrent = isCurrent;
            this.IsOnline = isOnline;
            this.ApiRevisionDescription = apiRevisionDescription;
            this.ApiVersionDescription = apiVersionDescription;
            this.ApiVersionSetId = apiVersionSetId;
            this.SubscriptionRequired = subscriptionRequired;
            this.TermsOfServiceUrl = termsOfServiceUrl;
            this.Contact = contact;
            this.License = license;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets or sets description of the API. May include HTML formatting tags.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "description")]
        public string Description {get; set; }

        /// <summary>
        /// Gets or sets collection of authentication settings included into this API.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "authenticationSettings")]
        public AuthenticationSettingsContract AuthenticationSettings {get; set; }

        /// <summary>
        /// Gets or sets protocols over which API is made available.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "subscriptionKeyParameterNames")]
        public SubscriptionKeyParameterNamesContract SubscriptionKeyParameterNames {get; set; }

        /// <summary>
        /// Gets or sets type of API. Possible values include: &#39;http&#39;, &#39;soap&#39;, &#39;websocket&#39;, &#39;graphql&#39;
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "type")]
        public string ApiType {get; set; }

        /// <summary>
        /// Gets or sets describes the revision of the API. If no value is provided,
        /// default revision 1 is created
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "apiRevision")]
        public string ApiRevision {get; set; }

        /// <summary>
        /// Gets or sets indicates the version identifier of the API if the API is
        /// versioned
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "apiVersion")]
        public string ApiVersion {get; set; }

        /// <summary>
        /// Gets or sets indicates if API revision is current api revision.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "isCurrent")]
        public bool? IsCurrent {get; set; }

        /// <summary>
        /// Gets indicates if API revision is accessible via the gateway.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "isOnline")]
        public bool? IsOnline {get; private set; }

        /// <summary>
        /// Gets or sets description of the API Revision.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "apiRevisionDescription")]
        public string ApiRevisionDescription {get; set; }

        /// <summary>
        /// Gets or sets description of the API Version.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "apiVersionDescription")]
        public string ApiVersionDescription {get; set; }

        /// <summary>
        /// Gets or sets a resource identifier for the related ApiVersionSet.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "apiVersionSetId")]
        public string ApiVersionSetId {get; set; }

        /// <summary>
        /// Gets or sets specifies whether an API or Product subscription is required
        /// for accessing the API.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "subscriptionRequired")]
        public bool? SubscriptionRequired {get; set; }

        /// <summary>
        /// Gets or sets  A URL to the Terms of Service for the API. MUST be in the
        /// format of a URL.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "termsOfServiceUrl")]
        public string TermsOfServiceUrl {get; set; }

        /// <summary>
        /// Gets or sets contact information for the API.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "contact")]
        public ApiContactInformation Contact {get; set; }

        /// <summary>
        /// Gets or sets license information for the API.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "license")]
        public ApiLicenseInformation License {get; set; }
        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {




            if (this.ApiRevision != null)
            {
                if (this.ApiRevision.Length > 100)
                {
                    throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.MaxLength, "ApiRevision", 100);
                }
                if (this.ApiRevision.Length < 1)
                {
                    throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.MinLength, "ApiRevision", 1);
                }
            }
            if (this.ApiVersion != null)
            {
                if (this.ApiVersion.Length > 100)
                {
                    throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.MaxLength, "ApiVersion", 100);
                }
            }
            if (this.ApiRevisionDescription != null)
            {
                if (this.ApiRevisionDescription.Length > 256)
                {
                    throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.MaxLength, "ApiRevisionDescription", 256);
                }
            }
            if (this.ApiVersionDescription != null)
            {
                if (this.ApiVersionDescription.Length > 256)
                {
                    throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.MaxLength, "ApiVersionDescription", 256);
                }
            }




        }
    }
}