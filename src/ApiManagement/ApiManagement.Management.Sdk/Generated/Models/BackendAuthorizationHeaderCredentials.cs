// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.ApiManagement.Models
{
    using System.Linq;

    /// <summary>
    /// Authorization header information.
    /// </summary>
    public partial class BackendAuthorizationHeaderCredentials
    {
        /// <summary>
        /// Initializes a new instance of the BackendAuthorizationHeaderCredentials class.
        /// </summary>
        public BackendAuthorizationHeaderCredentials()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the BackendAuthorizationHeaderCredentials class.
        /// </summary>

        /// <param name="scheme">Authentication Scheme name.
        /// </param>

        /// <param name="parameter">Authentication Parameter value.
        /// </param>
        public BackendAuthorizationHeaderCredentials(string scheme, string parameter)

        {
            this.Scheme = scheme;
            this.Parameter = parameter;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets or sets authentication Scheme name.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "scheme")]
        public string Scheme {get; set; }

        /// <summary>
        /// Gets or sets authentication Parameter value.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "parameter")]
        public string Parameter {get; set; }
        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (this.Scheme == null)
            {
                throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.CannotBeNull, "Scheme");
            }
            if (this.Parameter == null)
            {
                throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.CannotBeNull, "Parameter");
            }
            if (this.Scheme != null)
            {
                if (this.Scheme.Length > 100)
                {
                    throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.MaxLength, "Scheme", 100);
                }
                if (this.Scheme.Length < 1)
                {
                    throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.MinLength, "Scheme", 1);
                }
            }
            if (this.Parameter != null)
            {
                if (this.Parameter.Length > 300)
                {
                    throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.MaxLength, "Parameter", 300);
                }
                if (this.Parameter.Length < 1)
                {
                    throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.MinLength, "Parameter", 1);
                }
            }
        }
    }
}