// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.ApiManagement.Models
{
    using System.Linq;

    /// <summary>
    /// Remote Private Endpoint Connection resource.
    /// </summary>
    [Microsoft.Rest.Serialization.JsonTransformation]
    public partial class RemotePrivateEndpointConnectionWrapper
    {
        /// <summary>
        /// Initializes a new instance of the RemotePrivateEndpointConnectionWrapper class.
        /// </summary>
        public RemotePrivateEndpointConnectionWrapper()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the RemotePrivateEndpointConnectionWrapper class.
        /// </summary>

        /// <param name="id">Private Endpoint connection resource id
        /// </param>

        /// <param name="name">Private Endpoint Connection Name
        /// </param>

        /// <param name="type">Private Endpoint Connection Resource Type
        /// </param>

        /// <param name="privateEndpoint">The resource of private end point.
        /// </param>

        /// <param name="privateLinkServiceConnectionState">A collection of information about the state of the connection between
        /// service consumer and provider.
        /// </param>

        /// <param name="provisioningState">The provisioning state of the private endpoint connection resource.
        /// </param>

        /// <param name="groupIds">All the Group ids.
        /// </param>
        public RemotePrivateEndpointConnectionWrapper(string id = default(string), string name = default(string), string type = default(string), ArmIdWrapper privateEndpoint = default(ArmIdWrapper), PrivateLinkServiceConnectionState privateLinkServiceConnectionState = default(PrivateLinkServiceConnectionState), string provisioningState = default(string), System.Collections.Generic.IList<string> groupIds = default(System.Collections.Generic.IList<string>))

        {
            this.Id = id;
            this.Name = name;
            this.Type = type;
            this.PrivateEndpoint = privateEndpoint;
            this.PrivateLinkServiceConnectionState = privateLinkServiceConnectionState;
            this.ProvisioningState = provisioningState;
            this.GroupIds = groupIds;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets or sets private Endpoint connection resource id
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "id")]
        public string Id {get; set; }

        /// <summary>
        /// Gets or sets private Endpoint Connection Name
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "name")]
        public string Name {get; set; }

        /// <summary>
        /// Gets or sets private Endpoint Connection Resource Type
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "type")]
        public string Type {get; set; }

        /// <summary>
        /// Gets or sets the resource of private end point.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.privateEndpoint")]
        public ArmIdWrapper PrivateEndpoint {get; set; }

        /// <summary>
        /// Gets or sets a collection of information about the state of the connection
        /// between service consumer and provider.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.privateLinkServiceConnectionState")]
        public PrivateLinkServiceConnectionState PrivateLinkServiceConnectionState {get; set; }

        /// <summary>
        /// Gets the provisioning state of the private endpoint connection resource.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.provisioningState")]
        public string ProvisioningState {get; private set; }

        /// <summary>
        /// Gets all the Group ids.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.groupIds")]
        public System.Collections.Generic.IList<string> GroupIds {get; private set; }
    }
}