// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.ApiManagement.Models
{
    using System.Linq;

    /// <summary>
    /// TagDescription contract Properties.
    /// </summary>
    public partial class TagDescriptionContractProperties : TagDescriptionBaseProperties
    {
        /// <summary>
        /// Initializes a new instance of the TagDescriptionContractProperties class.
        /// </summary>
        public TagDescriptionContractProperties()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the TagDescriptionContractProperties class.
        /// </summary>

        /// <param name="description">Description of the Tag.
        /// </param>

        /// <param name="externalDocsUrl">Absolute URL of external resources describing the tag.
        /// </param>

        /// <param name="externalDocsDescription">Description of the external resources describing the tag.
        /// </param>

        /// <param name="tagId">Identifier of the tag in the form of /tags/{tagId}
        /// </param>

        /// <param name="displayName">Tag name.
        /// </param>
        public TagDescriptionContractProperties(string description = default(string), string externalDocsUrl = default(string), string externalDocsDescription = default(string), string tagId = default(string), string displayName = default(string))

        : base(description, externalDocsUrl, externalDocsDescription)
        {
            this.TagId = tagId;
            this.DisplayName = displayName;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets or sets identifier of the tag in the form of /tags/{tagId}
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "tagId")]
        public string TagId {get; set; }

        /// <summary>
        /// Gets or sets tag name.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "displayName")]
        public string DisplayName {get; set; }
        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public override void Validate()
        {
            base.Validate();

            if (this.DisplayName != null)
            {
                if (this.DisplayName.Length > 160)
                {
                    throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.MaxLength, "DisplayName", 160);
                }
                if (this.DisplayName.Length < 1)
                {
                    throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.MinLength, "DisplayName", 1);
                }
            }
        }
    }
}