// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.ApiManagement.Models
{
    using System.Linq;

    /// <summary>
    /// Properties of the Service Fabric Type Backend.
    /// </summary>
    public partial class BackendServiceFabricClusterProperties
    {
        /// <summary>
        /// Initializes a new instance of the BackendServiceFabricClusterProperties class.
        /// </summary>
        public BackendServiceFabricClusterProperties()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the BackendServiceFabricClusterProperties class.
        /// </summary>

        /// <param name="clientCertificateId">The client certificate id for the management endpoint.
        /// </param>

        /// <param name="clientCertificatethumbprint">The client certificate thumbprint for the management endpoint. Will be
        /// ignored if certificatesIds are provided
        /// </param>

        /// <param name="maxPartitionResolutionRetries">Maximum number of retries while attempting resolve the partition.
        /// </param>

        /// <param name="managementEndpoints">The cluster management endpoint.
        /// </param>

        /// <param name="serverCertificateThumbprints">Thumbprints of certificates cluster management service uses for tls
        /// communication
        /// </param>

        /// <param name="serverX509Names">Server X509 Certificate Names Collection
        /// </param>
        public BackendServiceFabricClusterProperties(System.Collections.Generic.IList<string> managementEndpoints, string clientCertificateId = default(string), string clientCertificatethumbprint = default(string), int? maxPartitionResolutionRetries = default(int?), System.Collections.Generic.IList<string> serverCertificateThumbprints = default(System.Collections.Generic.IList<string>), System.Collections.Generic.IList<X509CertificateName> serverX509Names = default(System.Collections.Generic.IList<X509CertificateName>))

        {
            this.ClientCertificateId = clientCertificateId;
            this.ClientCertificatethumbprint = clientCertificatethumbprint;
            this.MaxPartitionResolutionRetries = maxPartitionResolutionRetries;
            this.ManagementEndpoints = managementEndpoints;
            this.ServerCertificateThumbprints = serverCertificateThumbprints;
            this.ServerX509Names = serverX509Names;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets or sets the client certificate id for the management endpoint.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "clientCertificateId")]
        public string ClientCertificateId {get; set; }

        /// <summary>
        /// Gets or sets the client certificate thumbprint for the management endpoint.
        /// Will be ignored if certificatesIds are provided
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "clientCertificatethumbprint")]
        public string ClientCertificatethumbprint {get; set; }

        /// <summary>
        /// Gets or sets maximum number of retries while attempting resolve the
        /// partition.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "maxPartitionResolutionRetries")]
        public int? MaxPartitionResolutionRetries {get; set; }

        /// <summary>
        /// Gets or sets the cluster management endpoint.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "managementEndpoints")]
        public System.Collections.Generic.IList<string> ManagementEndpoints {get; set; }

        /// <summary>
        /// Gets or sets thumbprints of certificates cluster management service uses
        /// for tls communication
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "serverCertificateThumbprints")]
        public System.Collections.Generic.IList<string> ServerCertificateThumbprints {get; set; }

        /// <summary>
        /// Gets or sets server X509 Certificate Names Collection
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "serverX509Names")]
        public System.Collections.Generic.IList<X509CertificateName> ServerX509Names {get; set; }
        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (this.ManagementEndpoints == null)
            {
                throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.CannotBeNull, "ManagementEndpoints");
            }





        }
    }
}