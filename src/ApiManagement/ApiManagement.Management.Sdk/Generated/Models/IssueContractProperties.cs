// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.ApiManagement.Models
{
    using System.Linq;

    /// <summary>
    /// Issue contract Properties.
    /// </summary>
    public partial class IssueContractProperties : IssueContractBaseProperties
    {
        /// <summary>
        /// Initializes a new instance of the IssueContractProperties class.
        /// </summary>
        public IssueContractProperties()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the IssueContractProperties class.
        /// </summary>

        /// <param name="createdDate">Date and time when the issue was created.
        /// </param>

        /// <param name="state">Status of the issue.
        /// Possible values include: &#39;proposed&#39;, &#39;open&#39;, &#39;removed&#39;, &#39;resolved&#39;,
        /// &#39;closed&#39;</param>

        /// <param name="apiId">A resource identifier for the API the issue was created for.
        /// </param>

        /// <param name="title">The issue title.
        /// </param>

        /// <param name="description">Text describing the issue.
        /// </param>

        /// <param name="userId">A resource identifier for the user created the issue.
        /// </param>
        public IssueContractProperties(string title, string description, string userId, System.DateTime? createdDate = default(System.DateTime?), string state = default(string), string apiId = default(string))

        : base(createdDate, state, apiId)
        {
            this.Title = title;
            this.Description = description;
            this.UserId = userId;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets or sets the issue title.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "title")]
        public string Title {get; set; }

        /// <summary>
        /// Gets or sets text describing the issue.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "description")]
        public string Description {get; set; }

        /// <summary>
        /// Gets or sets a resource identifier for the user created the issue.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "userId")]
        public string UserId {get; set; }
        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (this.Title == null)
            {
                throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.CannotBeNull, "Title");
            }
            if (this.Description == null)
            {
                throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.CannotBeNull, "Description");
            }
            if (this.UserId == null)
            {
                throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.CannotBeNull, "UserId");
            }



        }
    }
}