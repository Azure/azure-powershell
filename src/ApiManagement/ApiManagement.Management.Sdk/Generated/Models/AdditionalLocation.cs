// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.ApiManagement.Models
{
    using System.Linq;

    /// <summary>
    /// Description of an additional API Management resource location.
    /// </summary>
    public partial class AdditionalLocation
    {
        /// <summary>
        /// Initializes a new instance of the AdditionalLocation class.
        /// </summary>
        public AdditionalLocation()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the AdditionalLocation class.
        /// </summary>

        /// <param name="location">The location name of the additional region among Azure Data center regions.
        /// </param>

        /// <param name="sku">SKU properties of the API Management service.
        /// </param>

        /// <param name="zones">A list of availability zones denoting where the resource needs to come
        /// from.
        /// </param>

        /// <param name="publicIPAddresses">Public Static Load Balanced IP addresses of the API Management service in
        /// the additional location. Available only for Basic, Standard, Premium and
        /// Isolated SKU.
        /// </param>

        /// <param name="privateIPAddresses">Private Static Load Balanced IP addresses of the API Management service
        /// which is deployed in an Internal Virtual Network in a particular additional
        /// location. Available only for Basic, Standard, Premium and Isolated SKU.
        /// </param>

        /// <param name="publicIPAddressId">Public Standard SKU IP V4 based IP address to be associated with Virtual
        /// Network deployed service in the location. Supported only for Premium SKU
        /// being deployed in Virtual Network.
        /// </param>

        /// <param name="virtualNetworkConfiguration">Virtual network configuration for the location.
        /// </param>

        /// <param name="gatewayRegionalUrl">Gateway URL of the API Management service in the Region.
        /// </param>

        /// <param name="disableGateway">Property only valid for an Api Management service deployed in multiple
        /// locations. This can be used to disable the gateway in this additional
        /// location.
        /// </param>

        /// <param name="platformVersion">Compute Platform Version running the service.
        /// Possible values include: &#39;undetermined&#39;, &#39;stv1&#39;, &#39;stv2&#39;, &#39;mtv1&#39;</param>
        public AdditionalLocation(string location, ApiManagementServiceSkuProperties sku, System.Collections.Generic.IList<string> zones = default(System.Collections.Generic.IList<string>), System.Collections.Generic.IList<string> publicIPAddresses = default(System.Collections.Generic.IList<string>), System.Collections.Generic.IList<string> privateIPAddresses = default(System.Collections.Generic.IList<string>), string publicIPAddressId = default(string), VirtualNetworkConfiguration virtualNetworkConfiguration = default(VirtualNetworkConfiguration), string gatewayRegionalUrl = default(string), bool? disableGateway = default(bool?), string platformVersion = default(string))

        {
            this.Location = location;
            this.Sku = sku;
            this.Zones = zones;
            this.PublicIPAddresses = publicIPAddresses;
            this.PrivateIPAddresses = privateIPAddresses;
            this.PublicIpAddressId = publicIPAddressId;
            this.VirtualNetworkConfiguration = virtualNetworkConfiguration;
            this.GatewayRegionalUrl = gatewayRegionalUrl;
            this.DisableGateway = disableGateway;
            this.PlatformVersion = platformVersion;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets or sets the location name of the additional region among Azure Data
        /// center regions.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "location")]
        public string Location {get; set; }

        /// <summary>
        /// Gets or sets sKU properties of the API Management service.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "sku")]
        public ApiManagementServiceSkuProperties Sku {get; set; }

        /// <summary>
        /// Gets or sets a list of availability zones denoting where the resource needs
        /// to come from.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "zones")]
        public System.Collections.Generic.IList<string> Zones {get; set; }

        /// <summary>
        /// Gets public Static Load Balanced IP addresses of the API Management service
        /// in the additional location. Available only for Basic, Standard, Premium and
        /// Isolated SKU.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "publicIPAddresses")]
        public System.Collections.Generic.IList<string> PublicIPAddresses {get; private set; }

        /// <summary>
        /// Gets private Static Load Balanced IP addresses of the API Management
        /// service which is deployed in an Internal Virtual Network in a particular
        /// additional location. Available only for Basic, Standard, Premium and
        /// Isolated SKU.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "privateIPAddresses")]
        public System.Collections.Generic.IList<string> PrivateIPAddresses {get; private set; }

        /// <summary>
        /// Gets or sets public Standard SKU IP V4 based IP address to be associated
        /// with Virtual Network deployed service in the location. Supported only for
        /// Premium SKU being deployed in Virtual Network.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "publicIpAddressId")]
        public string PublicIpAddressId {get; set; }

        /// <summary>
        /// Gets or sets virtual network configuration for the location.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "virtualNetworkConfiguration")]
        public VirtualNetworkConfiguration VirtualNetworkConfiguration {get; set; }

        /// <summary>
        /// Gets gateway URL of the API Management service in the Region.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "gatewayRegionalUrl")]
        public string GatewayRegionalUrl {get; private set; }

        /// <summary>
        /// Gets or sets property only valid for an Api Management service deployed in
        /// multiple locations. This can be used to disable the gateway in this
        /// additional location.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "disableGateway")]
        public bool? DisableGateway {get; set; }

        /// <summary>
        /// Gets compute Platform Version running the service. Possible values include: &#39;undetermined&#39;, &#39;stv1&#39;, &#39;stv2&#39;, &#39;mtv1&#39;
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "platformVersion")]
        public string PlatformVersion {get; private set; }
        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (this.Location == null)
            {
                throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.CannotBeNull, "Location");
            }
            if (this.Sku == null)
            {
                throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.CannotBeNull, "Sku");
            }

            if (this.Sku != null)
            {
                this.Sku.Validate();
            }




            if (this.VirtualNetworkConfiguration != null)
            {
                this.VirtualNetworkConfiguration.Validate();
            }


        }
    }
}