// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.ApiManagement.Models
{
    using System.Linq;

    /// <summary>
    /// ApiRelease details.
    /// </summary>
    [Microsoft.Rest.Serialization.JsonTransformation]
    public partial class ApiReleaseContract : Resource
    {
        /// <summary>
        /// Initializes a new instance of the ApiReleaseContract class.
        /// </summary>
        public ApiReleaseContract()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the ApiReleaseContract class.
        /// </summary>

        /// <param name="id">Fully qualified resource ID for the resource. Ex -
        /// /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        /// </param>

        /// <param name="name">The name of the resource
        /// </param>

        /// <param name="type">The type of the resource. E.g. &#34;Microsoft.Compute/virtualMachines&#34; or
        /// &#34;Microsoft.Storage/storageAccounts&#34;
        /// </param>

        /// <param name="apiId">Identifier of the API the release belongs to.
        /// </param>

        /// <param name="createdDateTime">The time the API was released. The date conforms to the following format:
        /// yyyy-MM-ddTHH:mm:ssZ as specified by the ISO 8601 standard.
        /// </param>

        /// <param name="updatedDateTime">The time the API release was updated.
        /// </param>

        /// <param name="notes">Release Notes
        /// </param>
        public ApiReleaseContract(string id = default(string), string name = default(string), string type = default(string), string apiId = default(string), System.DateTime? createdDateTime = default(System.DateTime?), System.DateTime? updatedDateTime = default(System.DateTime?), string notes = default(string))

        : base(id, name, type)
        {
            this.ApiId = apiId;
            this.CreatedDateTime = createdDateTime;
            this.UpdatedDateTime = updatedDateTime;
            this.Notes = notes;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets or sets identifier of the API the release belongs to.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.apiId")]
        public string ApiId {get; set; }

        /// <summary>
        /// Gets the time the API was released. The date conforms to the following
        /// format: yyyy-MM-ddTHH:mm:ssZ as specified by the ISO 8601 standard.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.createdDateTime")]
        public System.DateTime? CreatedDateTime {get; private set; }

        /// <summary>
        /// Gets the time the API release was updated.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.updatedDateTime")]
        public System.DateTime? UpdatedDateTime {get; private set; }

        /// <summary>
        /// Gets or sets release Notes
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.notes")]
        public string Notes {get; set; }
    }
}