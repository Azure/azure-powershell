// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.ApiManagement.Models
{

    /// <summary>
    /// Defines values for AuthorizationMethod.
    /// </summary>


    [Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
    public enum AuthorizationMethod
    {
        [System.Runtime.Serialization.EnumMember(Value = "HEAD")]
        Head,
        [System.Runtime.Serialization.EnumMember(Value = "OPTIONS")]
        Options,
        [System.Runtime.Serialization.EnumMember(Value = "TRACE")]
        Trace,
        [System.Runtime.Serialization.EnumMember(Value = "GET")]
        GET,
        [System.Runtime.Serialization.EnumMember(Value = "POST")]
        Post,
        [System.Runtime.Serialization.EnumMember(Value = "PUT")]
        PUT,
        [System.Runtime.Serialization.EnumMember(Value = "PATCH")]
        Patch,
        [System.Runtime.Serialization.EnumMember(Value = "DELETE")]
        Delete
    }
    internal static class AuthorizationMethodEnumExtension
    {
        internal static string ToSerializedValue(this AuthorizationMethod? value)
        {
            return value == null ? null : ((AuthorizationMethod)value).ToSerializedValue();
        }
        internal static string ToSerializedValue(this AuthorizationMethod value)
        {
            switch( value )
            {
                case AuthorizationMethod.Head:
                    return "HEAD";
                case AuthorizationMethod.Options:
                    return "OPTIONS";
                case AuthorizationMethod.Trace:
                    return "TRACE";
                case AuthorizationMethod.GET:
                    return "GET";
                case AuthorizationMethod.Post:
                    return "POST";
                case AuthorizationMethod.PUT:
                    return "PUT";
                case AuthorizationMethod.Patch:
                    return "PATCH";
                case AuthorizationMethod.Delete:
                    return "DELETE";
            }
            return null;
        }
        internal static AuthorizationMethod? ParseAuthorizationMethod(this string value)
        {
            switch( value )
            {
                case "HEAD":
                    return AuthorizationMethod.Head;
                case "OPTIONS":
                    return AuthorizationMethod.Options;
                case "TRACE":
                    return AuthorizationMethod.Trace;
                case "GET":
                    return AuthorizationMethod.GET;
                case "POST":
                    return AuthorizationMethod.Post;
                case "PUT":
                    return AuthorizationMethod.PUT;
                case "PATCH":
                    return AuthorizationMethod.Patch;
                case "DELETE":
                    return AuthorizationMethod.Delete;
            }
            return null;
        }
    }
}