// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.ApiManagement.Models
{
    using System.Linq;

    /// <summary>
    /// Certificate details.
    /// </summary>
    [Microsoft.Rest.Serialization.JsonTransformation]
    public partial class CertificateContract : Resource
    {
        /// <summary>
        /// Initializes a new instance of the CertificateContract class.
        /// </summary>
        public CertificateContract()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the CertificateContract class.
        /// </summary>

        /// <param name="id">Fully qualified resource ID for the resource. Ex -
        /// /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        /// </param>

        /// <param name="name">The name of the resource
        /// </param>

        /// <param name="type">The type of the resource. E.g. &#34;Microsoft.Compute/virtualMachines&#34; or
        /// &#34;Microsoft.Storage/storageAccounts&#34;
        /// </param>

        /// <param name="subject">Subject attribute of the certificate.
        /// </param>

        /// <param name="thumbprint">Thumbprint of the certificate.
        /// </param>

        /// <param name="expirationDate">Expiration date of the certificate. The date conforms to the following
        /// format: `yyyy-MM-ddTHH:mm:ssZ` as specified by the ISO 8601 standard.
        /// </param>

        /// <param name="keyVault">KeyVault location details of the certificate.
        /// </param>
        public CertificateContract(string id = default(string), string name = default(string), string type = default(string), string subject = default(string), string thumbprint = default(string), System.DateTime? expirationDate = default(System.DateTime?), KeyVaultContractProperties keyVault = default(KeyVaultContractProperties))

        : base(id, name, type)
        {
            this.Subject = subject;
            this.Thumbprint = thumbprint;
            this.ExpirationDate = expirationDate;
            this.KeyVault = keyVault;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets or sets subject attribute of the certificate.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.subject")]
        public string Subject {get; set; }

        /// <summary>
        /// Gets or sets thumbprint of the certificate.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.thumbprint")]
        public string Thumbprint {get; set; }

        /// <summary>
        /// Gets or sets expiration date of the certificate. The date conforms to the
        /// following format: `yyyy-MM-ddTHH:mm:ssZ` as specified by the ISO 8601
        /// standard.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.expirationDate")]
        public System.DateTime? ExpirationDate {get; set; }

        /// <summary>
        /// Gets or sets keyVault location details of the certificate.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.keyVault")]
        public KeyVaultContractProperties KeyVault {get; set; }
    }
}