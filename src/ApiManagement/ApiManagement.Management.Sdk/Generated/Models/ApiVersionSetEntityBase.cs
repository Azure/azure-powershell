// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.ApiManagement.Models
{
    using System.Linq;

    /// <summary>
    /// API Version set base parameters
    /// </summary>
    public partial class ApiVersionSetEntityBase
    {
        /// <summary>
        /// Initializes a new instance of the ApiVersionSetEntityBase class.
        /// </summary>
        public ApiVersionSetEntityBase()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the ApiVersionSetEntityBase class.
        /// </summary>

        /// <param name="description">Description of API Version Set.
        /// </param>

        /// <param name="versionQueryName">Name of query parameter that indicates the API Version if versioningScheme
        /// is set to `query`.
        /// </param>

        /// <param name="versionHeaderName">Name of HTTP header parameter that indicates the API Version if
        /// versioningScheme is set to `header`.
        /// </param>
        public ApiVersionSetEntityBase(string description = default(string), string versionQueryName = default(string), string versionHeaderName = default(string))

        {
            this.Description = description;
            this.VersionQueryName = versionQueryName;
            this.VersionHeaderName = versionHeaderName;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets or sets description of API Version Set.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "description")]
        public string Description {get; set; }

        /// <summary>
        /// Gets or sets name of query parameter that indicates the API Version if
        /// versioningScheme is set to `query`.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "versionQueryName")]
        public string VersionQueryName {get; set; }

        /// <summary>
        /// Gets or sets name of HTTP header parameter that indicates the API Version
        /// if versioningScheme is set to `header`.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "versionHeaderName")]
        public string VersionHeaderName {get; set; }
        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {

            if (this.VersionQueryName != null)
            {
                if (this.VersionQueryName.Length > 100)
                {
                    throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.MaxLength, "VersionQueryName", 100);
                }
                if (this.VersionQueryName.Length < 1)
                {
                    throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.MinLength, "VersionQueryName", 1);
                }
            }
            if (this.VersionHeaderName != null)
            {
                if (this.VersionHeaderName.Length > 100)
                {
                    throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.MaxLength, "VersionHeaderName", 100);
                }
                if (this.VersionHeaderName.Length < 1)
                {
                    throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.MinLength, "VersionHeaderName", 1);
                }
            }
        }
    }
}