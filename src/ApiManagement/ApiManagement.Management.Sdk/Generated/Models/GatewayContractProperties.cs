// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.ApiManagement.Models
{
    using System.Linq;

    /// <summary>
    /// Properties of the Gateway contract.
    /// </summary>
    public partial class GatewayContractProperties
    {
        /// <summary>
        /// Initializes a new instance of the GatewayContractProperties class.
        /// </summary>
        public GatewayContractProperties()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the GatewayContractProperties class.
        /// </summary>

        /// <param name="locationData">Gateway location.
        /// </param>

        /// <param name="description">Gateway description
        /// </param>
        public GatewayContractProperties(ResourceLocationDataContract locationData = default(ResourceLocationDataContract), string description = default(string))

        {
            this.LocationData = locationData;
            this.Description = description;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets or sets gateway location.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "locationData")]
        public ResourceLocationDataContract LocationData {get; set; }

        /// <summary>
        /// Gets or sets gateway description
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "description")]
        public string Description {get; set; }
        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (this.LocationData != null)
            {
                this.LocationData.Validate();
            }
            if (this.Description != null)
            {
                if (this.Description.Length > 1000)
                {
                    throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.MaxLength, "Description", 1000);
                }
            }
        }
    }
}