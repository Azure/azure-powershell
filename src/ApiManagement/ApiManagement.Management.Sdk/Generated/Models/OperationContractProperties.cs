// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.ApiManagement.Models
{
    using System.Linq;

    /// <summary>
    /// Operation Contract Properties
    /// </summary>
    public partial class OperationContractProperties : OperationEntityBaseContract
    {
        /// <summary>
        /// Initializes a new instance of the OperationContractProperties class.
        /// </summary>
        public OperationContractProperties()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the OperationContractProperties class.
        /// </summary>

        /// <param name="templateParameters">Collection of URL template parameters.
        /// </param>

        /// <param name="description">Description of the operation. May include HTML formatting tags.
        /// </param>

        /// <param name="request">An entity containing request details.
        /// </param>

        /// <param name="responses">Array of Operation responses.
        /// </param>

        /// <param name="policies">Operation Policies
        /// </param>

        /// <param name="displayName">Operation Name.
        /// </param>

        /// <param name="method">A Valid HTTP Operation Method. Typical Http Methods like GET, PUT, POST but
        /// not limited by only them.
        /// </param>

        /// <param name="urlTemplate">Relative URL template identifying the target resource for this operation.
        /// May include parameters. Example: /customers/{cid}/orders/{oid}/?date={date}
        /// </param>
        public OperationContractProperties(string displayName, string method, string urlTemplate, System.Collections.Generic.IList<ParameterContract> templateParameters = default(System.Collections.Generic.IList<ParameterContract>), string description = default(string), RequestContract request = default(RequestContract), System.Collections.Generic.IList<ResponseContract> responses = default(System.Collections.Generic.IList<ResponseContract>), string policies = default(string))

        : base(templateParameters, description, request, responses, policies)
        {
            this.DisplayName = displayName;
            this.Method = method;
            this.UrlTemplate = urlTemplate;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets or sets operation Name.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "displayName")]
        public string DisplayName {get; set; }

        /// <summary>
        /// Gets or sets a Valid HTTP Operation Method. Typical Http Methods like GET,
        /// PUT, POST but not limited by only them.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "method")]
        public string Method {get; set; }

        /// <summary>
        /// Gets or sets relative URL template identifying the target resource for this
        /// operation. May include parameters. Example:
        /// /customers/{cid}/orders/{oid}/?date={date}
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "urlTemplate")]
        public string UrlTemplate {get; set; }
        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public override void Validate()
        {
            base.Validate();
            if (this.DisplayName == null)
            {
                throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.CannotBeNull, "DisplayName");
            }
            if (this.Method == null)
            {
                throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.CannotBeNull, "Method");
            }
            if (this.UrlTemplate == null)
            {
                throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.CannotBeNull, "UrlTemplate");
            }
            if (this.DisplayName != null)
            {
                if (this.DisplayName.Length > 300)
                {
                    throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.MaxLength, "DisplayName", 300);
                }
                if (this.DisplayName.Length < 1)
                {
                    throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.MinLength, "DisplayName", 1);
                }
            }

            if (this.UrlTemplate != null)
            {
                if (this.UrlTemplate.Length > 1000)
                {
                    throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.MaxLength, "UrlTemplate", 1000);
                }
                if (this.UrlTemplate.Length < 1)
                {
                    throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.MinLength, "UrlTemplate", 1);
                }
            }
        }
    }
}