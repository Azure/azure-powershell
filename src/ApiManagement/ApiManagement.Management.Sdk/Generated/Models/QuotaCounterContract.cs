// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.ApiManagement.Models
{
    using System.Linq;

    /// <summary>
    /// Quota counter details.
    /// </summary>
    public partial class QuotaCounterContract
    {
        /// <summary>
        /// Initializes a new instance of the QuotaCounterContract class.
        /// </summary>
        public QuotaCounterContract()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the QuotaCounterContract class.
        /// </summary>

        /// <param name="counterKey">The Key value of the Counter. Must not be empty.
        /// </param>

        /// <param name="periodKey">Identifier of the Period for which the counter was collected. Must not be
        /// empty.
        /// </param>

        /// <param name="periodStartTime">The date of the start of Counter Period. The date conforms to the following
        /// format: `yyyy-MM-ddTHH:mm:ssZ` as specified by the ISO 8601 standard.
        /// </param>

        /// <param name="periodEndTime">The date of the end of Counter Period. The date conforms to the following
        /// format: `yyyy-MM-ddTHH:mm:ssZ` as specified by the ISO 8601 standard.
        /// </param>

        /// <param name="value">Quota Value Properties
        /// </param>
        public QuotaCounterContract(string counterKey, string periodKey, System.DateTime periodStartTime, System.DateTime periodEndTime, QuotaCounterValueContractProperties value = default(QuotaCounterValueContractProperties))

        {
            this.CounterKey = counterKey;
            this.PeriodKey = periodKey;
            this.PeriodStartTime = periodStartTime;
            this.PeriodEndTime = periodEndTime;
            this.Value = value;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets or sets the Key value of the Counter. Must not be empty.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "counterKey")]
        public string CounterKey {get; set; }

        /// <summary>
        /// Gets or sets identifier of the Period for which the counter was collected.
        /// Must not be empty.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "periodKey")]
        public string PeriodKey {get; set; }

        /// <summary>
        /// Gets or sets the date of the start of Counter Period. The date conforms to
        /// the following format: `yyyy-MM-ddTHH:mm:ssZ` as specified by the ISO 8601
        /// standard.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "periodStartTime")]
        public System.DateTime PeriodStartTime {get; set; }

        /// <summary>
        /// Gets or sets the date of the end of Counter Period. The date conforms to
        /// the following format: `yyyy-MM-ddTHH:mm:ssZ` as specified by the ISO 8601
        /// standard.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "periodEndTime")]
        public System.DateTime PeriodEndTime {get; set; }

        /// <summary>
        /// Gets or sets quota Value Properties
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "value")]
        public QuotaCounterValueContractProperties Value {get; set; }
        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (this.CounterKey == null)
            {
                throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.CannotBeNull, "CounterKey");
            }
            if (this.PeriodKey == null)
            {
                throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.CannotBeNull, "PeriodKey");
            }
            if (this.CounterKey != null)
            {
                if (this.CounterKey.Length < 1)
                {
                    throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.MinLength, "CounterKey", 1);
                }
            }
            if (this.PeriodKey != null)
            {
                if (this.PeriodKey.Length < 1)
                {
                    throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.MinLength, "PeriodKey", 1);
                }
            }

        }
    }
}