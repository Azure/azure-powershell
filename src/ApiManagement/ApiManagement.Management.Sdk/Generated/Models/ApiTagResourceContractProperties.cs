// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.ApiManagement.Models
{
    using System.Linq;

    /// <summary>
    /// API contract properties for the Tag Resources.
    /// </summary>
    public partial class ApiTagResourceContractProperties : ApiEntityBaseContract
    {
        /// <summary>
        /// Initializes a new instance of the ApiTagResourceContractProperties class.
        /// </summary>
        public ApiTagResourceContractProperties()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the ApiTagResourceContractProperties class.
        /// </summary>

        /// <param name="description">Description of the API. May include HTML formatting tags.
        /// </param>

        /// <param name="authenticationSettings">Collection of authentication settings included into this API.
        /// </param>

        /// <param name="subscriptionKeyParameterNames">Protocols over which API is made available.
        /// </param>

        /// <param name="apiType">Type of API.
        /// Possible values include: &#39;http&#39;, &#39;soap&#39;, &#39;websocket&#39;, &#39;graphql&#39;</param>

        /// <param name="apiRevision">Describes the revision of the API. If no value is provided, default
        /// revision 1 is created
        /// </param>

        /// <param name="apiVersion">Indicates the version identifier of the API if the API is versioned
        /// </param>

        /// <param name="isCurrent">Indicates if API revision is current api revision.
        /// </param>

        /// <param name="isOnline">Indicates if API revision is accessible via the gateway.
        /// </param>

        /// <param name="apiRevisionDescription">Description of the API Revision.
        /// </param>

        /// <param name="apiVersionDescription">Description of the API Version.
        /// </param>

        /// <param name="apiVersionSetId">A resource identifier for the related ApiVersionSet.
        /// </param>

        /// <param name="subscriptionRequired">Specifies whether an API or Product subscription is required for accessing
        /// the API.
        /// </param>

        /// <param name="termsOfServiceUrl">A URL to the Terms of Service for the API. MUST be in the format of a URL.
        /// </param>

        /// <param name="contact">Contact information for the API.
        /// </param>

        /// <param name="license">License information for the API.
        /// </param>

        /// <param name="id">API identifier in the form /apis/{apiId}.
        /// </param>

        /// <param name="name">API name.
        /// </param>

        /// <param name="serviceUrl">Absolute URL of the backend service implementing this API.
        /// </param>

        /// <param name="path">Relative URL uniquely identifying this API and all of its resource paths
        /// within the API Management service instance. It is appended to the API
        /// endpoint base URL specified during the service instance creation to form a
        /// public URL for this API.
        /// </param>

        /// <param name="protocols">Describes on which protocols the operations in this API can be invoked.
        /// </param>
        public ApiTagResourceContractProperties(string description = default(string), AuthenticationSettingsContract authenticationSettings = default(AuthenticationSettingsContract), SubscriptionKeyParameterNamesContract subscriptionKeyParameterNames = default(SubscriptionKeyParameterNamesContract), string apiType = default(string), string apiRevision = default(string), string apiVersion = default(string), bool? isCurrent = default(bool?), bool? isOnline = default(bool?), string apiRevisionDescription = default(string), string apiVersionDescription = default(string), string apiVersionSetId = default(string), bool? subscriptionRequired = default(bool?), string termsOfServiceUrl = default(string), ApiContactInformation contact = default(ApiContactInformation), ApiLicenseInformation license = default(ApiLicenseInformation), string id = default(string), string name = default(string), string serviceUrl = default(string), string path = default(string), System.Collections.Generic.IList<string> protocols = default(System.Collections.Generic.IList<string>))

        : base(description, authenticationSettings, subscriptionKeyParameterNames, apiType, apiRevision, apiVersion, isCurrent, isOnline, apiRevisionDescription, apiVersionDescription, apiVersionSetId, subscriptionRequired, termsOfServiceUrl, contact, license)
        {
            this.Id = id;
            this.Name = name;
            this.ServiceUrl = serviceUrl;
            this.Path = path;
            this.Protocols = protocols;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets or sets aPI identifier in the form /apis/{apiId}.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "id")]
        public string Id {get; set; }

        /// <summary>
        /// Gets or sets aPI name.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "name")]
        public string Name {get; set; }

        /// <summary>
        /// Gets or sets absolute URL of the backend service implementing this API.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "serviceUrl")]
        public string ServiceUrl {get; set; }

        /// <summary>
        /// Gets or sets relative URL uniquely identifying this API and all of its
        /// resource paths within the API Management service instance. It is appended
        /// to the API endpoint base URL specified during the service instance creation
        /// to form a public URL for this API.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "path")]
        public string Path {get; set; }

        /// <summary>
        /// Gets or sets describes on which protocols the operations in this API can be
        /// invoked.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "protocols")]
        public System.Collections.Generic.IList<string> Protocols {get; set; }
        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public override void Validate()
        {
            base.Validate();

            if (this.Name != null)
            {
                if (this.Name.Length > 300)
                {
                    throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.MaxLength, "Name", 300);
                }
                if (this.Name.Length < 1)
                {
                    throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.MinLength, "Name", 1);
                }
            }
            if (this.ServiceUrl != null)
            {
                if (this.ServiceUrl.Length > 2000)
                {
                    throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.MaxLength, "ServiceUrl", 2000);
                }
                if (this.ServiceUrl.Length < 1)
                {
                    throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.MinLength, "ServiceUrl", 1);
                }
            }
            if (this.Path != null)
            {
                if (this.Path.Length > 400)
                {
                    throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.MaxLength, "Path", 400);
                }
            }

        }
    }
}