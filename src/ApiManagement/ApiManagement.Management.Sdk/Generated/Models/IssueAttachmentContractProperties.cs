// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.ApiManagement.Models
{
    using System.Linq;

    /// <summary>
    /// Issue Attachment contract Properties.
    /// </summary>
    public partial class IssueAttachmentContractProperties
    {
        /// <summary>
        /// Initializes a new instance of the IssueAttachmentContractProperties class.
        /// </summary>
        public IssueAttachmentContractProperties()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the IssueAttachmentContractProperties class.
        /// </summary>

        /// <param name="title">Filename by which the binary data will be saved.
        /// </param>

        /// <param name="contentFormat">Either &#39;link&#39; if content is provided via an HTTP link or the MIME type of
        /// the Base64-encoded binary data provided in the &#39;content&#39; property.
        /// </param>

        /// <param name="content">An HTTP link or Base64-encoded binary data.
        /// </param>
        public IssueAttachmentContractProperties(string title, string contentFormat, string content)

        {
            this.Title = title;
            this.ContentFormat = contentFormat;
            this.Content = content;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets or sets filename by which the binary data will be saved.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "title")]
        public string Title {get; set; }

        /// <summary>
        /// Gets or sets either &#39;link&#39; if content is provided via an HTTP link or the
        /// MIME type of the Base64-encoded binary data provided in the &#39;content&#39;
        /// property.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "contentFormat")]
        public string ContentFormat {get; set; }

        /// <summary>
        /// Gets or sets an HTTP link or Base64-encoded binary data.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "content")]
        public string Content {get; set; }
        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (this.Title == null)
            {
                throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.CannotBeNull, "Title");
            }
            if (this.ContentFormat == null)
            {
                throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.CannotBeNull, "ContentFormat");
            }
            if (this.Content == null)
            {
                throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.CannotBeNull, "Content");
            }



        }
    }
}