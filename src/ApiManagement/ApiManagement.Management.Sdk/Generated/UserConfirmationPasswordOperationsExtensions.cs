// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.
namespace Microsoft.Azure.Management.ApiManagement
{
    using Microsoft.Rest.Azure;
    using Models;

    /// <summary>
    /// Extension methods for UserConfirmationPasswordOperations
    /// </summary>
    public static partial class UserConfirmationPasswordOperationsExtensions
    {
        /// <summary>
        /// Sends confirmation
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='resourceGroupName'>
        /// The name of the resource group.
        /// </param>
        /// <param name='serviceName'>
        /// The name of the API Management service.
        /// </param>
        /// <param name='userId'>
        /// User identifier. Must be unique in the current API Management service
        /// instance.
        /// </param>
        /// <param name='appType'>
        /// Determines the type of application which send the create user request.
        /// Default is legacy publisher portal.
        /// </param>
        public static void Send(this IUserConfirmationPasswordOperations operations, string resourceGroupName, string serviceName, string userId, string appType = default(string))
        {
                ((IUserConfirmationPasswordOperations)operations).SendAsync(resourceGroupName, serviceName, userId, appType).GetAwaiter().GetResult();
        }

        /// <summary>
        /// Sends confirmation
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='resourceGroupName'>
        /// The name of the resource group.
        /// </param>
        /// <param name='serviceName'>
        /// The name of the API Management service.
        /// </param>
        /// <param name='userId'>
        /// User identifier. Must be unique in the current API Management service
        /// instance.
        /// </param>
        /// <param name='appType'>
        /// Determines the type of application which send the create user request.
        /// Default is legacy publisher portal.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        public static async System.Threading.Tasks.Task SendAsync(this IUserConfirmationPasswordOperations operations, string resourceGroupName, string serviceName, string userId, string appType = default(string), System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            (await operations.SendWithHttpMessagesAsync(resourceGroupName, serviceName, userId, appType, null, cancellationToken).ConfigureAwait(false)).Dispose();
        }
    }
}
