// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.ApiManagement
{
    using Microsoft.Rest.Azure;
    using Models;

    /// <summary>
    /// QuotaByCounterKeysOperations operations.
    /// </summary>
    public partial interface IQuotaByCounterKeysOperations
    {
        /// <summary>
        /// Lists a collection of current quota counter periods associated with the
        /// counter-key configured in the policy on the specified service instance. The
        /// api does not support paging yet.
        /// </summary>
        /// <remarks>
        /// Lists a collection of current quota counter periods associated with the
        /// counter-key configured in the policy on the specified service instance. The
        /// api does not support paging yet.
        /// </remarks>
        /// <param name='resourceGroupName'>
        /// The name of the resource group.
        /// </param>
        /// <param name='serviceName'>
        /// The name of the API Management service.
        /// </param>
        /// <param name='quotaCounterKey'>
        /// Quota counter key identifier.This is the result of expression defined in
        /// counter-key attribute of the quota-by-key policy.For Example, if you
        /// specify counter-key=&#34;boo&#34; in the policy, then it’s accessible by &#34;boo&#34;
        /// counter key. But if it’s defined as counter-key=&#34;@(&#34;b&#34;+&#34;a&#34;)&#34; then it will
        /// be accessible by &#34;ba&#34; key
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="Microsoft.Rest.Azure.CloudException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.SerializationException">
        /// Thrown when unable to deserialize the response
        /// </exception>
        System.Threading.Tasks.Task<Microsoft.Rest.Azure.AzureOperationResponse<QuotaCounterCollection>> ListByServiceWithHttpMessagesAsync(string resourceGroupName, string serviceName, string quotaCounterKey, System.Collections.Generic.Dictionary<string, System.Collections.Generic.List<string>> customHeaders = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// Updates all the quota counter values specified with the existing quota
        /// counter key to a value in the specified service instance. This should be
        /// used for reset of the quota counter values.
        /// </summary>
        /// <remarks>
        /// Updates all the quota counter values specified with the existing quota
        /// counter key to a value in the specified service instance. This should be
        /// used for reset of the quota counter values.
        /// </remarks>
        /// <param name='resourceGroupName'>
        /// The name of the resource group.
        /// </param>
        /// <param name='serviceName'>
        /// The name of the API Management service.
        /// </param>
        /// <param name='quotaCounterKey'>
        /// Quota counter key identifier.This is the result of expression defined in
        /// counter-key attribute of the quota-by-key policy.For Example, if you
        /// specify counter-key=&#34;boo&#34; in the policy, then it’s accessible by &#34;boo&#34;
        /// counter key. But if it’s defined as counter-key=&#34;@(&#34;b&#34;+&#34;a&#34;)&#34; then it will
        /// be accessible by &#34;ba&#34; key
        /// </param>
        /// <param name='parameters'>
        /// The value of the quota counter to be applied to all quota counter periods.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="Microsoft.Rest.Azure.CloudException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.SerializationException">
        /// Thrown when unable to deserialize the response
        /// </exception>
        System.Threading.Tasks.Task<Microsoft.Rest.Azure.AzureOperationResponse<QuotaCounterCollection>> UpdateWithHttpMessagesAsync(string resourceGroupName, string serviceName, string quotaCounterKey, QuotaCounterValueUpdateContract parameters, System.Collections.Generic.Dictionary<string, System.Collections.Generic.List<string>> customHeaders = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

    }
}