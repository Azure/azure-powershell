// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.ApiManagement
{
    using Microsoft.Rest.Azure;
    using Models;

    /// <summary>
    /// NetworkStatusOperations operations.
    /// </summary>
    public partial interface INetworkStatusOperations
    {
        /// <summary>
        /// Gets the Connectivity Status to the external resources on which the Api
        /// Management service depends from inside the Cloud Service. This also returns
        /// the DNS Servers as visible to the CloudService.
        /// </summary>
        /// <remarks>
        /// Gets the Connectivity Status to the external resources on which the Api
        /// Management service depends from inside the Cloud Service. This also returns
        /// the DNS Servers as visible to the CloudService.
        /// </remarks>
        /// <param name='resourceGroupName'>
        /// The name of the resource group.
        /// </param>
        /// <param name='serviceName'>
        /// The name of the API Management service.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="Microsoft.Rest.Azure.CloudException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.SerializationException">
        /// Thrown when unable to deserialize the response
        /// </exception>
        System.Threading.Tasks.Task<Microsoft.Rest.Azure.AzureOperationResponse<System.Collections.Generic.IList<NetworkStatusContractByLocation>>> ListByServiceWithHttpMessagesAsync(string resourceGroupName, string serviceName, System.Collections.Generic.Dictionary<string, System.Collections.Generic.List<string>> customHeaders = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// Gets the Connectivity Status to the external resources on which the Api
        /// Management service depends from inside the Cloud Service. This also returns
        /// the DNS Servers as visible to the CloudService.
        /// </summary>
        /// <remarks>
        /// Gets the Connectivity Status to the external resources on which the Api
        /// Management service depends from inside the Cloud Service. This also returns
        /// the DNS Servers as visible to the CloudService.
        /// </remarks>
        /// <param name='resourceGroupName'>
        /// The name of the resource group.
        /// </param>
        /// <param name='serviceName'>
        /// The name of the API Management service.
        /// </param>
        /// <param name='locationName'>
        /// Location in which the API Management service is deployed. This is one of
        /// the Azure Regions like West US, East US, South Central US.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="Microsoft.Rest.Azure.CloudException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.SerializationException">
        /// Thrown when unable to deserialize the response
        /// </exception>
        System.Threading.Tasks.Task<Microsoft.Rest.Azure.AzureOperationResponse<NetworkStatusContract>> ListByLocationWithHttpMessagesAsync(string resourceGroupName, string serviceName, string locationName, System.Collections.Generic.Dictionary<string, System.Collections.Generic.List<string>> customHeaders = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

    }
}