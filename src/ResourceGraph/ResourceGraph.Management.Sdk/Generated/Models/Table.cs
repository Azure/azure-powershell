// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.ResourceGraph.Models
{
    using System.Linq;

    /// <summary>
    /// Query output in tabular format.
    /// </summary>
    public partial class Table
    {
        /// <summary>
        /// Initializes a new instance of the Table class.
        /// </summary>
        public Table()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the Table class.
        /// </summary>

        /// <param name="columns">Query result column descriptors.
        /// </param>

        /// <param name="rows">Query result rows.
        /// </param>
        public Table(System.Collections.Generic.IList<Column> columns, System.Collections.Generic.IList<System.Collections.Generic.IList<object>> rows)

        {
            this.Columns = columns;
            this.Rows = rows;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets or sets query result column descriptors.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "columns")]
        public System.Collections.Generic.IList<Column> Columns {get; set; }

        /// <summary>
        /// Gets or sets query result rows.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "rows")]
        public System.Collections.Generic.IList<System.Collections.Generic.IList<object>> Rows {get; set; }
        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (this.Columns == null)
            {
                throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.CannotBeNull, "Columns");
            }
            if (this.Rows == null)
            {
                throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.CannotBeNull, "Rows");
            }
            if (this.Columns != null)
            {
                foreach (var element in this.Columns)
                {
                    if (element != null)
                    {
                        element.Validate();
                    }
                }
            }

        }
    }
}