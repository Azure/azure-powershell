// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Models
{
    using static Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Runtime.Extensions;

    /// <summary>Specifies the vCenter infrastructure specific settings for the virtual machine.</summary>
    public partial class InfrastructureProfile :
        Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Models.IInfrastructureProfile,
        Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Models.IInfrastructureProfileInternal
    {

        /// <summary>Backing field for <see cref="CustomResourceName" /> property.</summary>
        private string _customResourceName;

        /// <summary>Gets the name of the corresponding resource in Kubernetes.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Origin(Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.PropertyOrigin.Owned)]
        public string CustomResourceName { get => this._customResourceName; }

        /// <summary>Backing field for <see cref="FirmwareType" /> property.</summary>
        private string _firmwareType;

        /// <summary>Firmware type</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Origin(Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.PropertyOrigin.Owned)]
        public string FirmwareType { get => this._firmwareType; set => this._firmwareType = value; }

        /// <summary>Backing field for <see cref="FolderPath" /> property.</summary>
        private string _folderPath;

        /// <summary>Gets or sets the folder path of the vm.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Origin(Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.PropertyOrigin.Owned)]
        public string FolderPath { get => this._folderPath; }

        /// <summary>Backing field for <see cref="InstanceUuid" /> property.</summary>
        private string _instanceUuid;

        /// <summary>Gets or sets the instance uuid of the vm.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Origin(Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.PropertyOrigin.Owned)]
        public string InstanceUuid { get => this._instanceUuid; }

        /// <summary>Backing field for <see cref="InventoryItemId" /> property.</summary>
        private string _inventoryItemId;

        /// <summary>Gets or sets the inventory Item ID for the virtual machine.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Origin(Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.PropertyOrigin.Owned)]
        public string InventoryItemId { get => this._inventoryItemId; set => this._inventoryItemId = value; }

        /// <summary>Internal Acessors for CustomResourceName</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Models.IInfrastructureProfileInternal.CustomResourceName { get => this._customResourceName; set { {_customResourceName = value;} } }

        /// <summary>Internal Acessors for FolderPath</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Models.IInfrastructureProfileInternal.FolderPath { get => this._folderPath; set { {_folderPath = value;} } }

        /// <summary>Internal Acessors for InstanceUuid</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Models.IInfrastructureProfileInternal.InstanceUuid { get => this._instanceUuid; set { {_instanceUuid = value;} } }

        /// <summary>Internal Acessors for MoName</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Models.IInfrastructureProfileInternal.MoName { get => this._moName; set { {_moName = value;} } }

        /// <summary>Internal Acessors for MoRefId</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Models.IInfrastructureProfileInternal.MoRefId { get => this._moRefId; set { {_moRefId = value;} } }

        /// <summary>Backing field for <see cref="MoName" /> property.</summary>
        private string _moName;

        /// <summary>Gets or sets the vCenter Managed Object name for the virtual machine.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Origin(Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.PropertyOrigin.Owned)]
        public string MoName { get => this._moName; }

        /// <summary>Backing field for <see cref="MoRefId" /> property.</summary>
        private string _moRefId;

        /// <summary>
        /// Gets or sets the vCenter MoRef (Managed Object Reference) ID for the virtual machine.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Origin(Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.PropertyOrigin.Owned)]
        public string MoRefId { get => this._moRefId; }

        /// <summary>Backing field for <see cref="SmbiosUuid" /> property.</summary>
        private string _smbiosUuid;

        /// <summary>Gets or sets the SMBIOS UUID of the vm.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Origin(Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.PropertyOrigin.Owned)]
        public string SmbiosUuid { get => this._smbiosUuid; set => this._smbiosUuid = value; }

        /// <summary>Backing field for <see cref="TemplateId" /> property.</summary>
        private string _templateId;

        /// <summary>Gets or sets the ARM Id of the template resource to deploy the virtual machine.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Origin(Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.PropertyOrigin.Owned)]
        public string TemplateId { get => this._templateId; set => this._templateId = value; }

        /// <summary>Backing field for <see cref="VCenterId" /> property.</summary>
        private string _vCenterId;

        /// <summary>
        /// Gets or sets the ARM Id of the vCenter resource in which this resource pool resides.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Origin(Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.PropertyOrigin.Owned)]
        public string VCenterId { get => this._vCenterId; set => this._vCenterId = value; }

        /// <summary>Creates an new <see cref="InfrastructureProfile" /> instance.</summary>
        public InfrastructureProfile()
        {

        }
    }
    /// Specifies the vCenter infrastructure specific settings for the virtual machine.
    public partial interface IInfrastructureProfile :
        Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Runtime.IJsonSerializable
    {
        /// <summary>Gets the name of the corresponding resource in Kubernetes.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"Gets the name of the corresponding resource in Kubernetes.",
        SerializedName = @"customResourceName",
        PossibleTypes = new [] { typeof(string) })]
        string CustomResourceName { get;  }
        /// <summary>Firmware type</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Firmware type",
        SerializedName = @"firmwareType",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.PSArgumentCompleterAttribute("bios", "efi")]
        string FirmwareType { get; set; }
        /// <summary>Gets or sets the folder path of the vm.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"Gets or sets the folder path of the vm.",
        SerializedName = @"folderPath",
        PossibleTypes = new [] { typeof(string) })]
        string FolderPath { get;  }
        /// <summary>Gets or sets the instance uuid of the vm.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"Gets or sets the instance uuid of the vm.",
        SerializedName = @"instanceUuid",
        PossibleTypes = new [] { typeof(string) })]
        string InstanceUuid { get;  }
        /// <summary>Gets or sets the inventory Item ID for the virtual machine.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Gets or sets the inventory Item ID for the virtual machine.",
        SerializedName = @"inventoryItemId",
        PossibleTypes = new [] { typeof(string) })]
        string InventoryItemId { get; set; }
        /// <summary>Gets or sets the vCenter Managed Object name for the virtual machine.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"Gets or sets the vCenter Managed Object name for the virtual machine.",
        SerializedName = @"moName",
        PossibleTypes = new [] { typeof(string) })]
        string MoName { get;  }
        /// <summary>
        /// Gets or sets the vCenter MoRef (Managed Object Reference) ID for the virtual machine.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"Gets or sets the vCenter MoRef (Managed Object Reference) ID for the virtual machine.",
        SerializedName = @"moRefId",
        PossibleTypes = new [] { typeof(string) })]
        string MoRefId { get;  }
        /// <summary>Gets or sets the SMBIOS UUID of the vm.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Gets or sets the SMBIOS UUID of the vm.",
        SerializedName = @"smbiosUuid",
        PossibleTypes = new [] { typeof(string) })]
        string SmbiosUuid { get; set; }
        /// <summary>Gets or sets the ARM Id of the template resource to deploy the virtual machine.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Gets or sets the ARM Id of the template resource to deploy the virtual machine.",
        SerializedName = @"templateId",
        PossibleTypes = new [] { typeof(string) })]
        string TemplateId { get; set; }
        /// <summary>
        /// Gets or sets the ARM Id of the vCenter resource in which this resource pool resides.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Gets or sets the ARM Id of the vCenter resource in which this resource pool resides.",
        SerializedName = @"vCenterId",
        PossibleTypes = new [] { typeof(string) })]
        string VCenterId { get; set; }

    }
    /// Specifies the vCenter infrastructure specific settings for the virtual machine.
    internal partial interface IInfrastructureProfileInternal

    {
        /// <summary>Gets the name of the corresponding resource in Kubernetes.</summary>
        string CustomResourceName { get; set; }
        /// <summary>Firmware type</summary>
        [global::Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.PSArgumentCompleterAttribute("bios", "efi")]
        string FirmwareType { get; set; }
        /// <summary>Gets or sets the folder path of the vm.</summary>
        string FolderPath { get; set; }
        /// <summary>Gets or sets the instance uuid of the vm.</summary>
        string InstanceUuid { get; set; }
        /// <summary>Gets or sets the inventory Item ID for the virtual machine.</summary>
        string InventoryItemId { get; set; }
        /// <summary>Gets or sets the vCenter Managed Object name for the virtual machine.</summary>
        string MoName { get; set; }
        /// <summary>
        /// Gets or sets the vCenter MoRef (Managed Object Reference) ID for the virtual machine.
        /// </summary>
        string MoRefId { get; set; }
        /// <summary>Gets or sets the SMBIOS UUID of the vm.</summary>
        string SmbiosUuid { get; set; }
        /// <summary>Gets or sets the ARM Id of the template resource to deploy the virtual machine.</summary>
        string TemplateId { get; set; }
        /// <summary>
        /// Gets or sets the ARM Id of the vCenter resource in which this resource pool resides.
        /// </summary>
        string VCenterId { get; set; }

    }
}