// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Models
{
    using static Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Runtime.Extensions;

    /// <summary>Describes the properties of a Resource Pool.</summary>
    public partial class ResourcePoolProperties :
        Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Models.IResourcePoolProperties,
        Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Models.IResourcePoolPropertiesInternal
    {

        /// <summary>Backing field for <see cref="CpuCapacityMHz" /> property.</summary>
        private long? _cpuCapacityMHz;

        /// <summary>Gets the max CPU usage across all cores on the pool in MHz.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Origin(Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.PropertyOrigin.Owned)]
        public long? CpuCapacityMHz { get => this._cpuCapacityMHz; }

        /// <summary>Backing field for <see cref="CpuLimitMHz" /> property.</summary>
        private long? _cpuLimitMHz;

        /// <summary>
        /// Gets or sets CPULimitMHz which specifies a CPU usage limit in MHz.
        /// Utilization will not exceed this limit even if there are available resources.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Origin(Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.PropertyOrigin.Owned)]
        public long? CpuLimitMHz { get => this._cpuLimitMHz; }

        /// <summary>Backing field for <see cref="CpuOverallUsageMHz" /> property.</summary>
        private long? _cpuOverallUsageMHz;

        /// <summary>Gets the used CPU usage across all cores on the pool in MHz.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Origin(Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.PropertyOrigin.Owned)]
        public long? CpuOverallUsageMHz { get => this._cpuOverallUsageMHz; }

        /// <summary>Backing field for <see cref="CpuReservationMHz" /> property.</summary>
        private long? _cpuReservationMHz;

        /// <summary>
        /// Gets or sets CPUReservationMHz which specifies the CPU size in MHz that is guaranteed
        /// to be available.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Origin(Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.PropertyOrigin.Owned)]
        public long? CpuReservationMHz { get => this._cpuReservationMHz; }

        /// <summary>Backing field for <see cref="CpuSharesLevel" /> property.</summary>
        private string _cpuSharesLevel;

        /// <summary>
        /// Gets or sets CPUSharesLevel which specifies the CPU allocation level for this pool.
        /// This property is used in relative allocation between resource consumers.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Origin(Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.PropertyOrigin.Owned)]
        public string CpuSharesLevel { get => this._cpuSharesLevel; }

        /// <summary>Backing field for <see cref="CustomResourceName" /> property.</summary>
        private string _customResourceName;

        /// <summary>Gets the name of the corresponding resource in Kubernetes.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Origin(Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.PropertyOrigin.Owned)]
        public string CustomResourceName { get => this._customResourceName; }

        /// <summary>Backing field for <see cref="DatastoreId" /> property.</summary>
        private System.Collections.Generic.List<string> _datastoreId;

        /// <summary>Gets the datastore ARM ids.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Origin(Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.PropertyOrigin.Owned)]
        public System.Collections.Generic.List<string> DatastoreId { get => this._datastoreId; }

        /// <summary>Backing field for <see cref="InventoryItemId" /> property.</summary>
        private string _inventoryItemId;

        /// <summary>Gets or sets the inventory Item ID for the resource pool.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Origin(Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.PropertyOrigin.Owned)]
        public string InventoryItemId { get => this._inventoryItemId; set => this._inventoryItemId = value; }

        /// <summary>Backing field for <see cref="MemCapacityGb" /> property.</summary>
        private long? _memCapacityGb;

        /// <summary>Gets the total amount of physical memory on the pool in GB.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Origin(Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.PropertyOrigin.Owned)]
        public long? MemCapacityGb { get => this._memCapacityGb; }

        /// <summary>Backing field for <see cref="MemLimitMb" /> property.</summary>
        private long? _memLimitMb;

        /// <summary>
        /// Gets or sets MemLimitMB specifies a memory usage limit in megabytes.
        /// Utilization will not exceed the specified limit even if there are available resources.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Origin(Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.PropertyOrigin.Owned)]
        public long? MemLimitMb { get => this._memLimitMb; }

        /// <summary>Backing field for <see cref="MemOverallUsageGb" /> property.</summary>
        private long? _memOverallUsageGb;

        /// <summary>Gets the used physical memory on the pool in GB.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Origin(Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.PropertyOrigin.Owned)]
        public long? MemOverallUsageGb { get => this._memOverallUsageGb; }

        /// <summary>Backing field for <see cref="MemReservationMb" /> property.</summary>
        private long? _memReservationMb;

        /// <summary>
        /// Gets or sets MemReservationMB which specifies the guaranteed available memory in
        /// megabytes.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Origin(Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.PropertyOrigin.Owned)]
        public long? MemReservationMb { get => this._memReservationMb; }

        /// <summary>Backing field for <see cref="MemSharesLevel" /> property.</summary>
        private string _memSharesLevel;

        /// <summary>
        /// Gets or sets CPUSharesLevel which specifies the memory allocation level for this pool.
        /// This property is used in relative allocation between resource consumers.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Origin(Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.PropertyOrigin.Owned)]
        public string MemSharesLevel { get => this._memSharesLevel; }

        /// <summary>Internal Acessors for CpuCapacityMHz</summary>
        long? Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Models.IResourcePoolPropertiesInternal.CpuCapacityMHz { get => this._cpuCapacityMHz; set { {_cpuCapacityMHz = value;} } }

        /// <summary>Internal Acessors for CpuLimitMHz</summary>
        long? Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Models.IResourcePoolPropertiesInternal.CpuLimitMHz { get => this._cpuLimitMHz; set { {_cpuLimitMHz = value;} } }

        /// <summary>Internal Acessors for CpuOverallUsageMHz</summary>
        long? Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Models.IResourcePoolPropertiesInternal.CpuOverallUsageMHz { get => this._cpuOverallUsageMHz; set { {_cpuOverallUsageMHz = value;} } }

        /// <summary>Internal Acessors for CpuReservationMHz</summary>
        long? Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Models.IResourcePoolPropertiesInternal.CpuReservationMHz { get => this._cpuReservationMHz; set { {_cpuReservationMHz = value;} } }

        /// <summary>Internal Acessors for CpuSharesLevel</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Models.IResourcePoolPropertiesInternal.CpuSharesLevel { get => this._cpuSharesLevel; set { {_cpuSharesLevel = value;} } }

        /// <summary>Internal Acessors for CustomResourceName</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Models.IResourcePoolPropertiesInternal.CustomResourceName { get => this._customResourceName; set { {_customResourceName = value;} } }

        /// <summary>Internal Acessors for DatastoreId</summary>
        System.Collections.Generic.List<string> Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Models.IResourcePoolPropertiesInternal.DatastoreId { get => this._datastoreId; set { {_datastoreId = value;} } }

        /// <summary>Internal Acessors for MemCapacityGb</summary>
        long? Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Models.IResourcePoolPropertiesInternal.MemCapacityGb { get => this._memCapacityGb; set { {_memCapacityGb = value;} } }

        /// <summary>Internal Acessors for MemLimitMb</summary>
        long? Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Models.IResourcePoolPropertiesInternal.MemLimitMb { get => this._memLimitMb; set { {_memLimitMb = value;} } }

        /// <summary>Internal Acessors for MemOverallUsageGb</summary>
        long? Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Models.IResourcePoolPropertiesInternal.MemOverallUsageGb { get => this._memOverallUsageGb; set { {_memOverallUsageGb = value;} } }

        /// <summary>Internal Acessors for MemReservationMb</summary>
        long? Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Models.IResourcePoolPropertiesInternal.MemReservationMb { get => this._memReservationMb; set { {_memReservationMb = value;} } }

        /// <summary>Internal Acessors for MemSharesLevel</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Models.IResourcePoolPropertiesInternal.MemSharesLevel { get => this._memSharesLevel; set { {_memSharesLevel = value;} } }

        /// <summary>Internal Acessors for MoName</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Models.IResourcePoolPropertiesInternal.MoName { get => this._moName; set { {_moName = value;} } }

        /// <summary>Internal Acessors for NetworkId</summary>
        System.Collections.Generic.List<string> Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Models.IResourcePoolPropertiesInternal.NetworkId { get => this._networkId; set { {_networkId = value;} } }

        /// <summary>Internal Acessors for ProvisioningState</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Models.IResourcePoolPropertiesInternal.ProvisioningState { get => this._provisioningState; set { {_provisioningState = value;} } }

        /// <summary>Internal Acessors for Statuses</summary>
        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Models.IResourceStatus> Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Models.IResourcePoolPropertiesInternal.Statuses { get => this._statuses; set { {_statuses = value;} } }

        /// <summary>Internal Acessors for Uuid</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Models.IResourcePoolPropertiesInternal.Uuid { get => this._uuid; set { {_uuid = value;} } }

        /// <summary>Backing field for <see cref="MoName" /> property.</summary>
        private string _moName;

        /// <summary>Gets or sets the vCenter Managed Object name for the resource pool.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Origin(Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.PropertyOrigin.Owned)]
        public string MoName { get => this._moName; }

        /// <summary>Backing field for <see cref="MoRefId" /> property.</summary>
        private string _moRefId;

        /// <summary>
        /// Gets or sets the vCenter MoRef (Managed Object Reference) ID for the resource pool.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Origin(Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.PropertyOrigin.Owned)]
        public string MoRefId { get => this._moRefId; set => this._moRefId = value; }

        /// <summary>Backing field for <see cref="NetworkId" /> property.</summary>
        private System.Collections.Generic.List<string> _networkId;

        /// <summary>Gets the network ARM ids.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Origin(Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.PropertyOrigin.Owned)]
        public System.Collections.Generic.List<string> NetworkId { get => this._networkId; }

        /// <summary>Backing field for <see cref="ProvisioningState" /> property.</summary>
        private string _provisioningState;

        /// <summary>Gets the provisioning state.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Origin(Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.PropertyOrigin.Owned)]
        public string ProvisioningState { get => this._provisioningState; }

        /// <summary>Backing field for <see cref="Statuses" /> property.</summary>
        private System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Models.IResourceStatus> _statuses;

        /// <summary>The resource status information.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Origin(Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.PropertyOrigin.Owned)]
        public System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Models.IResourceStatus> Statuses { get => this._statuses; }

        /// <summary>Backing field for <see cref="Uuid" /> property.</summary>
        private string _uuid;

        /// <summary>Gets or sets a unique identifier for this resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Origin(Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.PropertyOrigin.Owned)]
        public string Uuid { get => this._uuid; }

        /// <summary>Backing field for <see cref="VCenterId" /> property.</summary>
        private string _vCenterId;

        /// <summary>
        /// Gets or sets the ARM Id of the vCenter resource in which this resource pool resides.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Origin(Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.PropertyOrigin.Owned)]
        public string VCenterId { get => this._vCenterId; set => this._vCenterId = value; }

        /// <summary>Creates an new <see cref="ResourcePoolProperties" /> instance.</summary>
        public ResourcePoolProperties()
        {

        }
    }
    /// Describes the properties of a Resource Pool.
    public partial interface IResourcePoolProperties :
        Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Runtime.IJsonSerializable
    {
        /// <summary>Gets the max CPU usage across all cores on the pool in MHz.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"Gets the max CPU usage across all cores on the pool in MHz.",
        SerializedName = @"cpuCapacityMHz",
        PossibleTypes = new [] { typeof(long) })]
        long? CpuCapacityMHz { get;  }
        /// <summary>
        /// Gets or sets CPULimitMHz which specifies a CPU usage limit in MHz.
        /// Utilization will not exceed this limit even if there are available resources.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"Gets or sets CPULimitMHz which specifies a CPU usage limit in MHz.
        Utilization will not exceed this limit even if there are available resources.",
        SerializedName = @"cpuLimitMHz",
        PossibleTypes = new [] { typeof(long) })]
        long? CpuLimitMHz { get;  }
        /// <summary>Gets the used CPU usage across all cores on the pool in MHz.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"Gets the used CPU usage across all cores on the pool in MHz.",
        SerializedName = @"cpuOverallUsageMHz",
        PossibleTypes = new [] { typeof(long) })]
        long? CpuOverallUsageMHz { get;  }
        /// <summary>
        /// Gets or sets CPUReservationMHz which specifies the CPU size in MHz that is guaranteed
        /// to be available.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"Gets or sets CPUReservationMHz which specifies the CPU size in MHz that is guaranteed
        to be available.",
        SerializedName = @"cpuReservationMHz",
        PossibleTypes = new [] { typeof(long) })]
        long? CpuReservationMHz { get;  }
        /// <summary>
        /// Gets or sets CPUSharesLevel which specifies the CPU allocation level for this pool.
        /// This property is used in relative allocation between resource consumers.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"Gets or sets CPUSharesLevel which specifies the CPU allocation level for this pool.
        This property is used in relative allocation between resource consumers.",
        SerializedName = @"cpuSharesLevel",
        PossibleTypes = new [] { typeof(string) })]
        string CpuSharesLevel { get;  }
        /// <summary>Gets the name of the corresponding resource in Kubernetes.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"Gets the name of the corresponding resource in Kubernetes.",
        SerializedName = @"customResourceName",
        PossibleTypes = new [] { typeof(string) })]
        string CustomResourceName { get;  }
        /// <summary>Gets the datastore ARM ids.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"Gets the datastore ARM ids.",
        SerializedName = @"datastoreIds",
        PossibleTypes = new [] { typeof(string) })]
        System.Collections.Generic.List<string> DatastoreId { get;  }
        /// <summary>Gets or sets the inventory Item ID for the resource pool.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Gets or sets the inventory Item ID for the resource pool.",
        SerializedName = @"inventoryItemId",
        PossibleTypes = new [] { typeof(string) })]
        string InventoryItemId { get; set; }
        /// <summary>Gets the total amount of physical memory on the pool in GB.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"Gets the total amount of physical memory on the pool in GB.",
        SerializedName = @"memCapacityGB",
        PossibleTypes = new [] { typeof(long) })]
        long? MemCapacityGb { get;  }
        /// <summary>
        /// Gets or sets MemLimitMB specifies a memory usage limit in megabytes.
        /// Utilization will not exceed the specified limit even if there are available resources.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"Gets or sets MemLimitMB specifies a memory usage limit in megabytes.
        Utilization will not exceed the specified limit even if there are available resources.",
        SerializedName = @"memLimitMB",
        PossibleTypes = new [] { typeof(long) })]
        long? MemLimitMb { get;  }
        /// <summary>Gets the used physical memory on the pool in GB.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"Gets the used physical memory on the pool in GB.",
        SerializedName = @"memOverallUsageGB",
        PossibleTypes = new [] { typeof(long) })]
        long? MemOverallUsageGb { get;  }
        /// <summary>
        /// Gets or sets MemReservationMB which specifies the guaranteed available memory in
        /// megabytes.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"Gets or sets MemReservationMB which specifies the guaranteed available memory in
        megabytes.",
        SerializedName = @"memReservationMB",
        PossibleTypes = new [] { typeof(long) })]
        long? MemReservationMb { get;  }
        /// <summary>
        /// Gets or sets CPUSharesLevel which specifies the memory allocation level for this pool.
        /// This property is used in relative allocation between resource consumers.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"Gets or sets CPUSharesLevel which specifies the memory allocation level for this pool.
        This property is used in relative allocation between resource consumers.",
        SerializedName = @"memSharesLevel",
        PossibleTypes = new [] { typeof(string) })]
        string MemSharesLevel { get;  }
        /// <summary>Gets or sets the vCenter Managed Object name for the resource pool.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"Gets or sets the vCenter Managed Object name for the resource pool.",
        SerializedName = @"moName",
        PossibleTypes = new [] { typeof(string) })]
        string MoName { get;  }
        /// <summary>
        /// Gets or sets the vCenter MoRef (Managed Object Reference) ID for the resource pool.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Gets or sets the vCenter MoRef (Managed Object Reference) ID for the resource pool.",
        SerializedName = @"moRefId",
        PossibleTypes = new [] { typeof(string) })]
        string MoRefId { get; set; }
        /// <summary>Gets the network ARM ids.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"Gets the network ARM ids.",
        SerializedName = @"networkIds",
        PossibleTypes = new [] { typeof(string) })]
        System.Collections.Generic.List<string> NetworkId { get;  }
        /// <summary>Gets the provisioning state.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"Gets the provisioning state.",
        SerializedName = @"provisioningState",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.PSArgumentCompleterAttribute("Succeeded", "Failed", "Canceled", "Provisioning", "Updating", "Deleting", "Accepted", "Created")]
        string ProvisioningState { get;  }
        /// <summary>The resource status information.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The resource status information.",
        SerializedName = @"statuses",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Models.IResourceStatus) })]
        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Models.IResourceStatus> Statuses { get;  }
        /// <summary>Gets or sets a unique identifier for this resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"Gets or sets a unique identifier for this resource.",
        SerializedName = @"uuid",
        PossibleTypes = new [] { typeof(string) })]
        string Uuid { get;  }
        /// <summary>
        /// Gets or sets the ARM Id of the vCenter resource in which this resource pool resides.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Gets or sets the ARM Id of the vCenter resource in which this resource pool resides.",
        SerializedName = @"vCenterId",
        PossibleTypes = new [] { typeof(string) })]
        string VCenterId { get; set; }

    }
    /// Describes the properties of a Resource Pool.
    internal partial interface IResourcePoolPropertiesInternal

    {
        /// <summary>Gets the max CPU usage across all cores on the pool in MHz.</summary>
        long? CpuCapacityMHz { get; set; }
        /// <summary>
        /// Gets or sets CPULimitMHz which specifies a CPU usage limit in MHz.
        /// Utilization will not exceed this limit even if there are available resources.
        /// </summary>
        long? CpuLimitMHz { get; set; }
        /// <summary>Gets the used CPU usage across all cores on the pool in MHz.</summary>
        long? CpuOverallUsageMHz { get; set; }
        /// <summary>
        /// Gets or sets CPUReservationMHz which specifies the CPU size in MHz that is guaranteed
        /// to be available.
        /// </summary>
        long? CpuReservationMHz { get; set; }
        /// <summary>
        /// Gets or sets CPUSharesLevel which specifies the CPU allocation level for this pool.
        /// This property is used in relative allocation between resource consumers.
        /// </summary>
        string CpuSharesLevel { get; set; }
        /// <summary>Gets the name of the corresponding resource in Kubernetes.</summary>
        string CustomResourceName { get; set; }
        /// <summary>Gets the datastore ARM ids.</summary>
        System.Collections.Generic.List<string> DatastoreId { get; set; }
        /// <summary>Gets or sets the inventory Item ID for the resource pool.</summary>
        string InventoryItemId { get; set; }
        /// <summary>Gets the total amount of physical memory on the pool in GB.</summary>
        long? MemCapacityGb { get; set; }
        /// <summary>
        /// Gets or sets MemLimitMB specifies a memory usage limit in megabytes.
        /// Utilization will not exceed the specified limit even if there are available resources.
        /// </summary>
        long? MemLimitMb { get; set; }
        /// <summary>Gets the used physical memory on the pool in GB.</summary>
        long? MemOverallUsageGb { get; set; }
        /// <summary>
        /// Gets or sets MemReservationMB which specifies the guaranteed available memory in
        /// megabytes.
        /// </summary>
        long? MemReservationMb { get; set; }
        /// <summary>
        /// Gets or sets CPUSharesLevel which specifies the memory allocation level for this pool.
        /// This property is used in relative allocation between resource consumers.
        /// </summary>
        string MemSharesLevel { get; set; }
        /// <summary>Gets or sets the vCenter Managed Object name for the resource pool.</summary>
        string MoName { get; set; }
        /// <summary>
        /// Gets or sets the vCenter MoRef (Managed Object Reference) ID for the resource pool.
        /// </summary>
        string MoRefId { get; set; }
        /// <summary>Gets the network ARM ids.</summary>
        System.Collections.Generic.List<string> NetworkId { get; set; }
        /// <summary>Gets the provisioning state.</summary>
        [global::Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.PSArgumentCompleterAttribute("Succeeded", "Failed", "Canceled", "Provisioning", "Updating", "Deleting", "Accepted", "Created")]
        string ProvisioningState { get; set; }
        /// <summary>The resource status information.</summary>
        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Models.IResourceStatus> Statuses { get; set; }
        /// <summary>Gets or sets a unique identifier for this resource.</summary>
        string Uuid { get; set; }
        /// <summary>
        /// Gets or sets the ARM Id of the vCenter resource in which this resource pool resides.
        /// </summary>
        string VCenterId { get; set; }

    }
}