// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Models
{
    using static Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Runtime.Extensions;

    /// <summary>Define the resourcePool.</summary>
    public partial class ResourcePool :
        Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Models.IResourcePool,
        Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Models.IResourcePoolInternal
    {

        /// <summary>Gets the max CPU usage across all cores on the pool in MHz.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Origin(Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.PropertyOrigin.Inlined)]
        public long? CpuCapacityMHz { get => ((Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Models.IResourcePoolPropertiesInternal)Property).CpuCapacityMHz; }

        /// <summary>
        /// Gets or sets CPULimitMHz which specifies a CPU usage limit in MHz.
        /// Utilization will not exceed this limit even if there are available resources.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Origin(Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.PropertyOrigin.Inlined)]
        public long? CpuLimitMHz { get => ((Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Models.IResourcePoolPropertiesInternal)Property).CpuLimitMHz; }

        /// <summary>Gets the used CPU usage across all cores on the pool in MHz.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Origin(Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.PropertyOrigin.Inlined)]
        public long? CpuOverallUsageMHz { get => ((Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Models.IResourcePoolPropertiesInternal)Property).CpuOverallUsageMHz; }

        /// <summary>
        /// Gets or sets CPUReservationMHz which specifies the CPU size in MHz that is guaranteed
        /// to be available.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Origin(Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.PropertyOrigin.Inlined)]
        public long? CpuReservationMHz { get => ((Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Models.IResourcePoolPropertiesInternal)Property).CpuReservationMHz; }

        /// <summary>
        /// Gets or sets CPUSharesLevel which specifies the CPU allocation level for this pool.
        /// This property is used in relative allocation between resource consumers.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Origin(Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.PropertyOrigin.Inlined)]
        public string CpuSharesLevel { get => ((Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Models.IResourcePoolPropertiesInternal)Property).CpuSharesLevel; }

        /// <summary>Gets the name of the corresponding resource in Kubernetes.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Origin(Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.PropertyOrigin.Inlined)]
        public string CustomResourceName { get => ((Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Models.IResourcePoolPropertiesInternal)Property).CustomResourceName; }

        /// <summary>Gets the datastore ARM ids.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Origin(Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.PropertyOrigin.Inlined)]
        public System.Collections.Generic.List<string> DatastoreId { get => ((Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Models.IResourcePoolPropertiesInternal)Property).DatastoreId; }

        /// <summary>Backing field for <see cref="ExtendedLocation" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Models.IExtendedLocation _extendedLocation;

        /// <summary>Gets or sets the extended location.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Origin(Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Models.IExtendedLocation ExtendedLocation { get => (this._extendedLocation = this._extendedLocation ?? new Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Models.ExtendedLocation()); set => this._extendedLocation = value; }

        /// <summary>The extended location name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Origin(Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.PropertyOrigin.Inlined)]
        public string ExtendedLocationName { get => ((Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Models.IExtendedLocationInternal)ExtendedLocation).Name; set => ((Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Models.IExtendedLocationInternal)ExtendedLocation).Name = value ?? null; }

        /// <summary>The extended location type.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Origin(Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.PropertyOrigin.Inlined)]
        public string ExtendedLocationType { get => ((Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Models.IExtendedLocationInternal)ExtendedLocation).Type; set => ((Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Models.IExtendedLocationInternal)ExtendedLocation).Type = value ?? null; }

        /// <summary>Backing field for <see cref="Id" /> property.</summary>
        private string _id;

        /// <summary>Gets or sets the Id.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Origin(Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.PropertyOrigin.Owned)]
        public string Id { get => this._id; }

        /// <summary>Gets or sets the inventory Item ID for the resource pool.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Origin(Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.PropertyOrigin.Inlined)]
        public string InventoryItemId { get => ((Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Models.IResourcePoolPropertiesInternal)Property).InventoryItemId; set => ((Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Models.IResourcePoolPropertiesInternal)Property).InventoryItemId = value ?? null; }

        /// <summary>Backing field for <see cref="Kind" /> property.</summary>
        private string _kind;

        /// <summary>
        /// Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type; e.g. ApiApps are
        /// a kind of Microsoft.Web/sites type. If supported, the resource provider must validate and persist this value.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Origin(Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.PropertyOrigin.Owned)]
        public string Kind { get => this._kind; set => this._kind = value; }

        /// <summary>Backing field for <see cref="Location" /> property.</summary>
        private string _location;

        /// <summary>Gets or sets the location.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Origin(Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.PropertyOrigin.Owned)]
        public string Location { get => this._location; set => this._location = value; }

        /// <summary>Gets the total amount of physical memory on the pool in GB.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Origin(Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.PropertyOrigin.Inlined)]
        public long? MemCapacityGb { get => ((Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Models.IResourcePoolPropertiesInternal)Property).MemCapacityGb; }

        /// <summary>
        /// Gets or sets MemLimitMB specifies a memory usage limit in megabytes.
        /// Utilization will not exceed the specified limit even if there are available resources.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Origin(Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.PropertyOrigin.Inlined)]
        public long? MemLimitMb { get => ((Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Models.IResourcePoolPropertiesInternal)Property).MemLimitMb; }

        /// <summary>Gets the used physical memory on the pool in GB.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Origin(Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.PropertyOrigin.Inlined)]
        public long? MemOverallUsageGb { get => ((Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Models.IResourcePoolPropertiesInternal)Property).MemOverallUsageGb; }

        /// <summary>
        /// Gets or sets MemReservationMB which specifies the guaranteed available memory in
        /// megabytes.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Origin(Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.PropertyOrigin.Inlined)]
        public long? MemReservationMb { get => ((Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Models.IResourcePoolPropertiesInternal)Property).MemReservationMb; }

        /// <summary>
        /// Gets or sets CPUSharesLevel which specifies the memory allocation level for this pool.
        /// This property is used in relative allocation between resource consumers.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Origin(Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.PropertyOrigin.Inlined)]
        public string MemSharesLevel { get => ((Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Models.IResourcePoolPropertiesInternal)Property).MemSharesLevel; }

        /// <summary>Internal Acessors for CpuCapacityMHz</summary>
        long? Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Models.IResourcePoolInternal.CpuCapacityMHz { get => ((Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Models.IResourcePoolPropertiesInternal)Property).CpuCapacityMHz; set => ((Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Models.IResourcePoolPropertiesInternal)Property).CpuCapacityMHz = value; }

        /// <summary>Internal Acessors for CpuLimitMHz</summary>
        long? Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Models.IResourcePoolInternal.CpuLimitMHz { get => ((Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Models.IResourcePoolPropertiesInternal)Property).CpuLimitMHz; set => ((Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Models.IResourcePoolPropertiesInternal)Property).CpuLimitMHz = value; }

        /// <summary>Internal Acessors for CpuOverallUsageMHz</summary>
        long? Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Models.IResourcePoolInternal.CpuOverallUsageMHz { get => ((Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Models.IResourcePoolPropertiesInternal)Property).CpuOverallUsageMHz; set => ((Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Models.IResourcePoolPropertiesInternal)Property).CpuOverallUsageMHz = value; }

        /// <summary>Internal Acessors for CpuReservationMHz</summary>
        long? Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Models.IResourcePoolInternal.CpuReservationMHz { get => ((Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Models.IResourcePoolPropertiesInternal)Property).CpuReservationMHz; set => ((Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Models.IResourcePoolPropertiesInternal)Property).CpuReservationMHz = value; }

        /// <summary>Internal Acessors for CpuSharesLevel</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Models.IResourcePoolInternal.CpuSharesLevel { get => ((Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Models.IResourcePoolPropertiesInternal)Property).CpuSharesLevel; set => ((Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Models.IResourcePoolPropertiesInternal)Property).CpuSharesLevel = value; }

        /// <summary>Internal Acessors for CustomResourceName</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Models.IResourcePoolInternal.CustomResourceName { get => ((Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Models.IResourcePoolPropertiesInternal)Property).CustomResourceName; set => ((Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Models.IResourcePoolPropertiesInternal)Property).CustomResourceName = value; }

        /// <summary>Internal Acessors for DatastoreId</summary>
        System.Collections.Generic.List<string> Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Models.IResourcePoolInternal.DatastoreId { get => ((Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Models.IResourcePoolPropertiesInternal)Property).DatastoreId; set => ((Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Models.IResourcePoolPropertiesInternal)Property).DatastoreId = value; }

        /// <summary>Internal Acessors for ExtendedLocation</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Models.IExtendedLocation Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Models.IResourcePoolInternal.ExtendedLocation { get => (this._extendedLocation = this._extendedLocation ?? new Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Models.ExtendedLocation()); set { {_extendedLocation = value;} } }

        /// <summary>Internal Acessors for Id</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Models.IResourcePoolInternal.Id { get => this._id; set { {_id = value;} } }

        /// <summary>Internal Acessors for MemCapacityGb</summary>
        long? Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Models.IResourcePoolInternal.MemCapacityGb { get => ((Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Models.IResourcePoolPropertiesInternal)Property).MemCapacityGb; set => ((Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Models.IResourcePoolPropertiesInternal)Property).MemCapacityGb = value; }

        /// <summary>Internal Acessors for MemLimitMb</summary>
        long? Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Models.IResourcePoolInternal.MemLimitMb { get => ((Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Models.IResourcePoolPropertiesInternal)Property).MemLimitMb; set => ((Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Models.IResourcePoolPropertiesInternal)Property).MemLimitMb = value; }

        /// <summary>Internal Acessors for MemOverallUsageGb</summary>
        long? Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Models.IResourcePoolInternal.MemOverallUsageGb { get => ((Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Models.IResourcePoolPropertiesInternal)Property).MemOverallUsageGb; set => ((Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Models.IResourcePoolPropertiesInternal)Property).MemOverallUsageGb = value; }

        /// <summary>Internal Acessors for MemReservationMb</summary>
        long? Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Models.IResourcePoolInternal.MemReservationMb { get => ((Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Models.IResourcePoolPropertiesInternal)Property).MemReservationMb; set => ((Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Models.IResourcePoolPropertiesInternal)Property).MemReservationMb = value; }

        /// <summary>Internal Acessors for MemSharesLevel</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Models.IResourcePoolInternal.MemSharesLevel { get => ((Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Models.IResourcePoolPropertiesInternal)Property).MemSharesLevel; set => ((Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Models.IResourcePoolPropertiesInternal)Property).MemSharesLevel = value; }

        /// <summary>Internal Acessors for MoName</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Models.IResourcePoolInternal.MoName { get => ((Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Models.IResourcePoolPropertiesInternal)Property).MoName; set => ((Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Models.IResourcePoolPropertiesInternal)Property).MoName = value; }

        /// <summary>Internal Acessors for Name</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Models.IResourcePoolInternal.Name { get => this._name; set { {_name = value;} } }

        /// <summary>Internal Acessors for NetworkId</summary>
        System.Collections.Generic.List<string> Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Models.IResourcePoolInternal.NetworkId { get => ((Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Models.IResourcePoolPropertiesInternal)Property).NetworkId; set => ((Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Models.IResourcePoolPropertiesInternal)Property).NetworkId = value; }

        /// <summary>Internal Acessors for Property</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Models.IResourcePoolProperties Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Models.IResourcePoolInternal.Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Models.ResourcePoolProperties()); set { {_property = value;} } }

        /// <summary>Internal Acessors for ProvisioningState</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Models.IResourcePoolInternal.ProvisioningState { get => ((Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Models.IResourcePoolPropertiesInternal)Property).ProvisioningState; set => ((Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Models.IResourcePoolPropertiesInternal)Property).ProvisioningState = value; }

        /// <summary>Internal Acessors for Statuses</summary>
        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Models.IResourceStatus> Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Models.IResourcePoolInternal.Statuses { get => ((Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Models.IResourcePoolPropertiesInternal)Property).Statuses; set => ((Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Models.IResourcePoolPropertiesInternal)Property).Statuses = value; }

        /// <summary>Internal Acessors for SystemData</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Models.ISystemData Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Models.IResourcePoolInternal.SystemData { get => (this._systemData = this._systemData ?? new Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Models.SystemData()); set { {_systemData = value;} } }

        /// <summary>Internal Acessors for Type</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Models.IResourcePoolInternal.Type { get => this._type; set { {_type = value;} } }

        /// <summary>Internal Acessors for Uuid</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Models.IResourcePoolInternal.Uuid { get => ((Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Models.IResourcePoolPropertiesInternal)Property).Uuid; set => ((Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Models.IResourcePoolPropertiesInternal)Property).Uuid = value; }

        /// <summary>Gets or sets the vCenter Managed Object name for the resource pool.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Origin(Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.PropertyOrigin.Inlined)]
        public string MoName { get => ((Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Models.IResourcePoolPropertiesInternal)Property).MoName; }

        /// <summary>
        /// Gets or sets the vCenter MoRef (Managed Object Reference) ID for the resource pool.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Origin(Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.PropertyOrigin.Inlined)]
        public string MoRefId { get => ((Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Models.IResourcePoolPropertiesInternal)Property).MoRefId; set => ((Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Models.IResourcePoolPropertiesInternal)Property).MoRefId = value ?? null; }

        /// <summary>Backing field for <see cref="Name" /> property.</summary>
        private string _name;

        /// <summary>Gets or sets the name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Origin(Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.PropertyOrigin.Owned)]
        public string Name { get => this._name; }

        /// <summary>Gets the network ARM ids.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Origin(Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.PropertyOrigin.Inlined)]
        public System.Collections.Generic.List<string> NetworkId { get => ((Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Models.IResourcePoolPropertiesInternal)Property).NetworkId; }

        /// <summary>Backing field for <see cref="Property" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Models.IResourcePoolProperties _property;

        /// <summary>Resource properties.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Origin(Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Models.IResourcePoolProperties Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Models.ResourcePoolProperties()); set => this._property = value; }

        /// <summary>Gets the provisioning state.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Origin(Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.PropertyOrigin.Inlined)]
        public string ProvisioningState { get => ((Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Models.IResourcePoolPropertiesInternal)Property).ProvisioningState; }

        /// <summary>Gets the resource group name</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Origin(Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.PropertyOrigin.Owned)]
        public string ResourceGroupName { get => (new global::System.Text.RegularExpressions.Regex("^/subscriptions/(?<subscriptionId>[^/]+)/resourceGroups/(?<resourceGroupName>[^/]+)/providers/", global::System.Text.RegularExpressions.RegexOptions.IgnoreCase).Match(this.Id).Success ? new global::System.Text.RegularExpressions.Regex("^/subscriptions/(?<subscriptionId>[^/]+)/resourceGroups/(?<resourceGroupName>[^/]+)/providers/", global::System.Text.RegularExpressions.RegexOptions.IgnoreCase).Match(this.Id).Groups["resourceGroupName"].Value : null); }

        /// <summary>The resource status information.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Origin(Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.PropertyOrigin.Inlined)]
        public System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Models.IResourceStatus> Statuses { get => ((Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Models.IResourcePoolPropertiesInternal)Property).Statuses; }

        /// <summary>Backing field for <see cref="SystemData" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Models.ISystemData _systemData;

        /// <summary>The system data.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Origin(Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Models.ISystemData SystemData { get => (this._systemData = this._systemData ?? new Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Models.SystemData()); }

        /// <summary>The timestamp of resource creation (UTC).</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Origin(Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.PropertyOrigin.Inlined)]
        public global::System.DateTime? SystemDataCreatedAt { get => ((Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Models.ISystemDataInternal)SystemData).CreatedAt; set => ((Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Models.ISystemDataInternal)SystemData).CreatedAt = value ?? default(global::System.DateTime); }

        /// <summary>The identity that created the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Origin(Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.PropertyOrigin.Inlined)]
        public string SystemDataCreatedBy { get => ((Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Models.ISystemDataInternal)SystemData).CreatedBy; set => ((Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Models.ISystemDataInternal)SystemData).CreatedBy = value ?? null; }

        /// <summary>The type of identity that created the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Origin(Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.PropertyOrigin.Inlined)]
        public string SystemDataCreatedByType { get => ((Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Models.ISystemDataInternal)SystemData).CreatedByType; set => ((Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Models.ISystemDataInternal)SystemData).CreatedByType = value ?? null; }

        /// <summary>The timestamp of resource last modification (UTC)</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Origin(Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.PropertyOrigin.Inlined)]
        public global::System.DateTime? SystemDataLastModifiedAt { get => ((Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Models.ISystemDataInternal)SystemData).LastModifiedAt; set => ((Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Models.ISystemDataInternal)SystemData).LastModifiedAt = value ?? default(global::System.DateTime); }

        /// <summary>The identity that last modified the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Origin(Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.PropertyOrigin.Inlined)]
        public string SystemDataLastModifiedBy { get => ((Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Models.ISystemDataInternal)SystemData).LastModifiedBy; set => ((Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Models.ISystemDataInternal)SystemData).LastModifiedBy = value ?? null; }

        /// <summary>The type of identity that last modified the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Origin(Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.PropertyOrigin.Inlined)]
        public string SystemDataLastModifiedByType { get => ((Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Models.ISystemDataInternal)SystemData).LastModifiedByType; set => ((Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Models.ISystemDataInternal)SystemData).LastModifiedByType = value ?? null; }

        /// <summary>Backing field for <see cref="Tag" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Models.IResourcePoolTags _tag;

        /// <summary>Gets or sets the Resource tags.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Origin(Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Models.IResourcePoolTags Tag { get => (this._tag = this._tag ?? new Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Models.ResourcePoolTags()); set => this._tag = value; }

        /// <summary>Backing field for <see cref="Type" /> property.</summary>
        private string _type;

        /// <summary>Gets or sets the type of the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Origin(Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.PropertyOrigin.Owned)]
        public string Type { get => this._type; }

        /// <summary>Gets or sets a unique identifier for this resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Origin(Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.PropertyOrigin.Inlined)]
        public string Uuid { get => ((Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Models.IResourcePoolPropertiesInternal)Property).Uuid; }

        /// <summary>
        /// Gets or sets the ARM Id of the vCenter resource in which this resource pool resides.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Origin(Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.PropertyOrigin.Inlined)]
        public string VCenterId { get => ((Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Models.IResourcePoolPropertiesInternal)Property).VCenterId; set => ((Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Models.IResourcePoolPropertiesInternal)Property).VCenterId = value ?? null; }

        /// <summary>Creates an new <see cref="ResourcePool" /> instance.</summary>
        public ResourcePool()
        {

        }
    }
    /// Define the resourcePool.
    public partial interface IResourcePool :
        Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Runtime.IJsonSerializable
    {
        /// <summary>Gets the max CPU usage across all cores on the pool in MHz.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"Gets the max CPU usage across all cores on the pool in MHz.",
        SerializedName = @"cpuCapacityMHz",
        PossibleTypes = new [] { typeof(long) })]
        long? CpuCapacityMHz { get;  }
        /// <summary>
        /// Gets or sets CPULimitMHz which specifies a CPU usage limit in MHz.
        /// Utilization will not exceed this limit even if there are available resources.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"Gets or sets CPULimitMHz which specifies a CPU usage limit in MHz.
        Utilization will not exceed this limit even if there are available resources.",
        SerializedName = @"cpuLimitMHz",
        PossibleTypes = new [] { typeof(long) })]
        long? CpuLimitMHz { get;  }
        /// <summary>Gets the used CPU usage across all cores on the pool in MHz.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"Gets the used CPU usage across all cores on the pool in MHz.",
        SerializedName = @"cpuOverallUsageMHz",
        PossibleTypes = new [] { typeof(long) })]
        long? CpuOverallUsageMHz { get;  }
        /// <summary>
        /// Gets or sets CPUReservationMHz which specifies the CPU size in MHz that is guaranteed
        /// to be available.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"Gets or sets CPUReservationMHz which specifies the CPU size in MHz that is guaranteed
        to be available.",
        SerializedName = @"cpuReservationMHz",
        PossibleTypes = new [] { typeof(long) })]
        long? CpuReservationMHz { get;  }
        /// <summary>
        /// Gets or sets CPUSharesLevel which specifies the CPU allocation level for this pool.
        /// This property is used in relative allocation between resource consumers.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"Gets or sets CPUSharesLevel which specifies the CPU allocation level for this pool.
        This property is used in relative allocation between resource consumers.",
        SerializedName = @"cpuSharesLevel",
        PossibleTypes = new [] { typeof(string) })]
        string CpuSharesLevel { get;  }
        /// <summary>Gets the name of the corresponding resource in Kubernetes.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"Gets the name of the corresponding resource in Kubernetes.",
        SerializedName = @"customResourceName",
        PossibleTypes = new [] { typeof(string) })]
        string CustomResourceName { get;  }
        /// <summary>Gets the datastore ARM ids.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"Gets the datastore ARM ids.",
        SerializedName = @"datastoreIds",
        PossibleTypes = new [] { typeof(string) })]
        System.Collections.Generic.List<string> DatastoreId { get;  }
        /// <summary>The extended location name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The extended location name.",
        SerializedName = @"name",
        PossibleTypes = new [] { typeof(string) })]
        string ExtendedLocationName { get; set; }
        /// <summary>The extended location type.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The extended location type.",
        SerializedName = @"type",
        PossibleTypes = new [] { typeof(string) })]
        string ExtendedLocationType { get; set; }
        /// <summary>Gets or sets the Id.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"Gets or sets the Id.",
        SerializedName = @"id",
        PossibleTypes = new [] { typeof(string) })]
        string Id { get;  }
        /// <summary>Gets or sets the inventory Item ID for the resource pool.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Gets or sets the inventory Item ID for the resource pool.",
        SerializedName = @"inventoryItemId",
        PossibleTypes = new [] { typeof(string) })]
        string InventoryItemId { get; set; }
        /// <summary>
        /// Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type; e.g. ApiApps are
        /// a kind of Microsoft.Web/sites type. If supported, the resource provider must validate and persist this value.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type; e.g. ApiApps are a kind of Microsoft.Web/sites type.  If supported, the resource provider must validate and persist this value.",
        SerializedName = @"kind",
        PossibleTypes = new [] { typeof(string) })]
        string Kind { get; set; }
        /// <summary>Gets or sets the location.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = false,
        Description = @"Gets or sets the location.",
        SerializedName = @"location",
        PossibleTypes = new [] { typeof(string) })]
        string Location { get; set; }
        /// <summary>Gets the total amount of physical memory on the pool in GB.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"Gets the total amount of physical memory on the pool in GB.",
        SerializedName = @"memCapacityGB",
        PossibleTypes = new [] { typeof(long) })]
        long? MemCapacityGb { get;  }
        /// <summary>
        /// Gets or sets MemLimitMB specifies a memory usage limit in megabytes.
        /// Utilization will not exceed the specified limit even if there are available resources.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"Gets or sets MemLimitMB specifies a memory usage limit in megabytes.
        Utilization will not exceed the specified limit even if there are available resources.",
        SerializedName = @"memLimitMB",
        PossibleTypes = new [] { typeof(long) })]
        long? MemLimitMb { get;  }
        /// <summary>Gets the used physical memory on the pool in GB.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"Gets the used physical memory on the pool in GB.",
        SerializedName = @"memOverallUsageGB",
        PossibleTypes = new [] { typeof(long) })]
        long? MemOverallUsageGb { get;  }
        /// <summary>
        /// Gets or sets MemReservationMB which specifies the guaranteed available memory in
        /// megabytes.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"Gets or sets MemReservationMB which specifies the guaranteed available memory in
        megabytes.",
        SerializedName = @"memReservationMB",
        PossibleTypes = new [] { typeof(long) })]
        long? MemReservationMb { get;  }
        /// <summary>
        /// Gets or sets CPUSharesLevel which specifies the memory allocation level for this pool.
        /// This property is used in relative allocation between resource consumers.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"Gets or sets CPUSharesLevel which specifies the memory allocation level for this pool.
        This property is used in relative allocation between resource consumers.",
        SerializedName = @"memSharesLevel",
        PossibleTypes = new [] { typeof(string) })]
        string MemSharesLevel { get;  }
        /// <summary>Gets or sets the vCenter Managed Object name for the resource pool.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"Gets or sets the vCenter Managed Object name for the resource pool.",
        SerializedName = @"moName",
        PossibleTypes = new [] { typeof(string) })]
        string MoName { get;  }
        /// <summary>
        /// Gets or sets the vCenter MoRef (Managed Object Reference) ID for the resource pool.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Gets or sets the vCenter MoRef (Managed Object Reference) ID for the resource pool.",
        SerializedName = @"moRefId",
        PossibleTypes = new [] { typeof(string) })]
        string MoRefId { get; set; }
        /// <summary>Gets or sets the name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"Gets or sets the name.",
        SerializedName = @"name",
        PossibleTypes = new [] { typeof(string) })]
        string Name { get;  }
        /// <summary>Gets the network ARM ids.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"Gets the network ARM ids.",
        SerializedName = @"networkIds",
        PossibleTypes = new [] { typeof(string) })]
        System.Collections.Generic.List<string> NetworkId { get;  }
        /// <summary>Gets the provisioning state.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"Gets the provisioning state.",
        SerializedName = @"provisioningState",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.PSArgumentCompleterAttribute("Succeeded", "Failed", "Canceled", "Provisioning", "Updating", "Deleting", "Accepted", "Created")]
        string ProvisioningState { get;  }
        /// <summary>The resource status information.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The resource status information.",
        SerializedName = @"statuses",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Models.IResourceStatus) })]
        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Models.IResourceStatus> Statuses { get;  }
        /// <summary>The timestamp of resource creation (UTC).</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The timestamp of resource creation (UTC).",
        SerializedName = @"createdAt",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? SystemDataCreatedAt { get;  }
        /// <summary>The identity that created the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The identity that created the resource.",
        SerializedName = @"createdBy",
        PossibleTypes = new [] { typeof(string) })]
        string SystemDataCreatedBy { get;  }
        /// <summary>The type of identity that created the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The type of identity that created the resource.",
        SerializedName = @"createdByType",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.PSArgumentCompleterAttribute("User", "Application", "ManagedIdentity", "Key")]
        string SystemDataCreatedByType { get;  }
        /// <summary>The timestamp of resource last modification (UTC)</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The timestamp of resource last modification (UTC)",
        SerializedName = @"lastModifiedAt",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? SystemDataLastModifiedAt { get;  }
        /// <summary>The identity that last modified the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The identity that last modified the resource.",
        SerializedName = @"lastModifiedBy",
        PossibleTypes = new [] { typeof(string) })]
        string SystemDataLastModifiedBy { get;  }
        /// <summary>The type of identity that last modified the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The type of identity that last modified the resource.",
        SerializedName = @"lastModifiedByType",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.PSArgumentCompleterAttribute("User", "Application", "ManagedIdentity", "Key")]
        string SystemDataLastModifiedByType { get;  }
        /// <summary>Gets or sets the Resource tags.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Gets or sets the Resource tags.",
        SerializedName = @"tags",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Models.IResourcePoolTags) })]
        Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Models.IResourcePoolTags Tag { get; set; }
        /// <summary>Gets or sets the type of the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"Gets or sets the type of the resource.",
        SerializedName = @"type",
        PossibleTypes = new [] { typeof(string) })]
        string Type { get;  }
        /// <summary>Gets or sets a unique identifier for this resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"Gets or sets a unique identifier for this resource.",
        SerializedName = @"uuid",
        PossibleTypes = new [] { typeof(string) })]
        string Uuid { get;  }
        /// <summary>
        /// Gets or sets the ARM Id of the vCenter resource in which this resource pool resides.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Gets or sets the ARM Id of the vCenter resource in which this resource pool resides.",
        SerializedName = @"vCenterId",
        PossibleTypes = new [] { typeof(string) })]
        string VCenterId { get; set; }

    }
    /// Define the resourcePool.
    internal partial interface IResourcePoolInternal

    {
        /// <summary>Gets the max CPU usage across all cores on the pool in MHz.</summary>
        long? CpuCapacityMHz { get; set; }
        /// <summary>
        /// Gets or sets CPULimitMHz which specifies a CPU usage limit in MHz.
        /// Utilization will not exceed this limit even if there are available resources.
        /// </summary>
        long? CpuLimitMHz { get; set; }
        /// <summary>Gets the used CPU usage across all cores on the pool in MHz.</summary>
        long? CpuOverallUsageMHz { get; set; }
        /// <summary>
        /// Gets or sets CPUReservationMHz which specifies the CPU size in MHz that is guaranteed
        /// to be available.
        /// </summary>
        long? CpuReservationMHz { get; set; }
        /// <summary>
        /// Gets or sets CPUSharesLevel which specifies the CPU allocation level for this pool.
        /// This property is used in relative allocation between resource consumers.
        /// </summary>
        string CpuSharesLevel { get; set; }
        /// <summary>Gets the name of the corresponding resource in Kubernetes.</summary>
        string CustomResourceName { get; set; }
        /// <summary>Gets the datastore ARM ids.</summary>
        System.Collections.Generic.List<string> DatastoreId { get; set; }
        /// <summary>Gets or sets the extended location.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Models.IExtendedLocation ExtendedLocation { get; set; }
        /// <summary>The extended location name.</summary>
        string ExtendedLocationName { get; set; }
        /// <summary>The extended location type.</summary>
        string ExtendedLocationType { get; set; }
        /// <summary>Gets or sets the Id.</summary>
        string Id { get; set; }
        /// <summary>Gets or sets the inventory Item ID for the resource pool.</summary>
        string InventoryItemId { get; set; }
        /// <summary>
        /// Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type; e.g. ApiApps are
        /// a kind of Microsoft.Web/sites type. If supported, the resource provider must validate and persist this value.
        /// </summary>
        string Kind { get; set; }
        /// <summary>Gets or sets the location.</summary>
        string Location { get; set; }
        /// <summary>Gets the total amount of physical memory on the pool in GB.</summary>
        long? MemCapacityGb { get; set; }
        /// <summary>
        /// Gets or sets MemLimitMB specifies a memory usage limit in megabytes.
        /// Utilization will not exceed the specified limit even if there are available resources.
        /// </summary>
        long? MemLimitMb { get; set; }
        /// <summary>Gets the used physical memory on the pool in GB.</summary>
        long? MemOverallUsageGb { get; set; }
        /// <summary>
        /// Gets or sets MemReservationMB which specifies the guaranteed available memory in
        /// megabytes.
        /// </summary>
        long? MemReservationMb { get; set; }
        /// <summary>
        /// Gets or sets CPUSharesLevel which specifies the memory allocation level for this pool.
        /// This property is used in relative allocation between resource consumers.
        /// </summary>
        string MemSharesLevel { get; set; }
        /// <summary>Gets or sets the vCenter Managed Object name for the resource pool.</summary>
        string MoName { get; set; }
        /// <summary>
        /// Gets or sets the vCenter MoRef (Managed Object Reference) ID for the resource pool.
        /// </summary>
        string MoRefId { get; set; }
        /// <summary>Gets or sets the name.</summary>
        string Name { get; set; }
        /// <summary>Gets the network ARM ids.</summary>
        System.Collections.Generic.List<string> NetworkId { get; set; }
        /// <summary>Resource properties.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Models.IResourcePoolProperties Property { get; set; }
        /// <summary>Gets the provisioning state.</summary>
        [global::Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.PSArgumentCompleterAttribute("Succeeded", "Failed", "Canceled", "Provisioning", "Updating", "Deleting", "Accepted", "Created")]
        string ProvisioningState { get; set; }
        /// <summary>The resource status information.</summary>
        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Models.IResourceStatus> Statuses { get; set; }
        /// <summary>The system data.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Models.ISystemData SystemData { get; set; }
        /// <summary>The timestamp of resource creation (UTC).</summary>
        global::System.DateTime? SystemDataCreatedAt { get; set; }
        /// <summary>The identity that created the resource.</summary>
        string SystemDataCreatedBy { get; set; }
        /// <summary>The type of identity that created the resource.</summary>
        [global::Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.PSArgumentCompleterAttribute("User", "Application", "ManagedIdentity", "Key")]
        string SystemDataCreatedByType { get; set; }
        /// <summary>The timestamp of resource last modification (UTC)</summary>
        global::System.DateTime? SystemDataLastModifiedAt { get; set; }
        /// <summary>The identity that last modified the resource.</summary>
        string SystemDataLastModifiedBy { get; set; }
        /// <summary>The type of identity that last modified the resource.</summary>
        [global::Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.PSArgumentCompleterAttribute("User", "Application", "ManagedIdentity", "Key")]
        string SystemDataLastModifiedByType { get; set; }
        /// <summary>Gets or sets the Resource tags.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Models.IResourcePoolTags Tag { get; set; }
        /// <summary>Gets or sets the type of the resource.</summary>
        string Type { get; set; }
        /// <summary>Gets or sets a unique identifier for this resource.</summary>
        string Uuid { get; set; }
        /// <summary>
        /// Gets or sets the ARM Id of the vCenter resource in which this resource pool resides.
        /// </summary>
        string VCenterId { get; set; }

    }
}