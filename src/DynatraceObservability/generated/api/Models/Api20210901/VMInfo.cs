// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.DynatraceObservability.Models.Api20210901
{
    using static Microsoft.Azure.PowerShell.Cmdlets.DynatraceObservability.Runtime.Extensions;

    /// <summary>Details of VM Resource having Dynatrace OneAgent installed</summary>
    public partial class VMInfo :
        Microsoft.Azure.PowerShell.Cmdlets.DynatraceObservability.Models.Api20210901.IVMInfo,
        Microsoft.Azure.PowerShell.Cmdlets.DynatraceObservability.Models.Api20210901.IVMInfoInternal
    {

        /// <summary>Backing field for <see cref="AutoUpdateSetting" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.DynatraceObservability.Support.AutoUpdateSetting? _autoUpdateSetting;

        /// <summary>Update settings of OneAgent.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DynatraceObservability.Origin(Microsoft.Azure.PowerShell.Cmdlets.DynatraceObservability.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.DynatraceObservability.Support.AutoUpdateSetting? AutoUpdateSetting { get => this._autoUpdateSetting; set => this._autoUpdateSetting = value; }

        /// <summary>Backing field for <see cref="AvailabilityState" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.DynatraceObservability.Support.AvailabilityState? _availabilityState;

        /// <summary>The availability state of OneAgent.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DynatraceObservability.Origin(Microsoft.Azure.PowerShell.Cmdlets.DynatraceObservability.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.DynatraceObservability.Support.AvailabilityState? AvailabilityState { get => this._availabilityState; set => this._availabilityState = value; }

        /// <summary>Backing field for <see cref="HostGroup" /> property.</summary>
        private string _hostGroup;

        /// <summary>The name of the host group</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DynatraceObservability.Origin(Microsoft.Azure.PowerShell.Cmdlets.DynatraceObservability.PropertyOrigin.Owned)]
        public string HostGroup { get => this._hostGroup; set => this._hostGroup = value; }

        /// <summary>Backing field for <see cref="HostName" /> property.</summary>
        private string _hostName;

        /// <summary>The name of the host</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DynatraceObservability.Origin(Microsoft.Azure.PowerShell.Cmdlets.DynatraceObservability.PropertyOrigin.Owned)]
        public string HostName { get => this._hostName; set => this._hostName = value; }

        /// <summary>Backing field for <see cref="LogModule" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.DynatraceObservability.Support.LogModule? _logModule;

        /// <summary>Tells whether log modules are enabled or not</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DynatraceObservability.Origin(Microsoft.Azure.PowerShell.Cmdlets.DynatraceObservability.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.DynatraceObservability.Support.LogModule? LogModule { get => this._logModule; set => this._logModule = value; }

        /// <summary>Backing field for <see cref="MonitoringType" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.DynatraceObservability.Support.MonitoringType? _monitoringType;

        /// <summary>The monitoring mode of OneAgent</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DynatraceObservability.Origin(Microsoft.Azure.PowerShell.Cmdlets.DynatraceObservability.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.DynatraceObservability.Support.MonitoringType? MonitoringType { get => this._monitoringType; set => this._monitoringType = value; }

        /// <summary>Backing field for <see cref="ResourceId" /> property.</summary>
        private string _resourceId;

        /// <summary>Azure VM resource ID</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DynatraceObservability.Origin(Microsoft.Azure.PowerShell.Cmdlets.DynatraceObservability.PropertyOrigin.Owned)]
        public string ResourceId { get => this._resourceId; set => this._resourceId = value; }

        /// <summary>Backing field for <see cref="UpdateStatus" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.DynatraceObservability.Support.UpdateStatus? _updateStatus;

        /// <summary>The current update status of OneAgent.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DynatraceObservability.Origin(Microsoft.Azure.PowerShell.Cmdlets.DynatraceObservability.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.DynatraceObservability.Support.UpdateStatus? UpdateStatus { get => this._updateStatus; set => this._updateStatus = value; }

        /// <summary>Backing field for <see cref="Version" /> property.</summary>
        private string _version;

        /// <summary>Version of the Dynatrace agent installed on the VM.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DynatraceObservability.Origin(Microsoft.Azure.PowerShell.Cmdlets.DynatraceObservability.PropertyOrigin.Owned)]
        public string Version { get => this._version; set => this._version = value; }

        /// <summary>Creates an new <see cref="VMInfo" /> instance.</summary>
        public VMInfo()
        {

        }
    }
    /// Details of VM Resource having Dynatrace OneAgent installed
    public partial interface IVMInfo :
        Microsoft.Azure.PowerShell.Cmdlets.DynatraceObservability.Runtime.IJsonSerializable
    {
        /// <summary>Update settings of OneAgent.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DynatraceObservability.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Update settings of OneAgent.",
        SerializedName = @"autoUpdateSetting",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.DynatraceObservability.Support.AutoUpdateSetting) })]
        Microsoft.Azure.PowerShell.Cmdlets.DynatraceObservability.Support.AutoUpdateSetting? AutoUpdateSetting { get; set; }
        /// <summary>The availability state of OneAgent.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DynatraceObservability.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The availability state of OneAgent.",
        SerializedName = @"availabilityState",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.DynatraceObservability.Support.AvailabilityState) })]
        Microsoft.Azure.PowerShell.Cmdlets.DynatraceObservability.Support.AvailabilityState? AvailabilityState { get; set; }
        /// <summary>The name of the host group</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DynatraceObservability.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The name of the host group",
        SerializedName = @"hostGroup",
        PossibleTypes = new [] { typeof(string) })]
        string HostGroup { get; set; }
        /// <summary>The name of the host</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DynatraceObservability.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The name of the host",
        SerializedName = @"hostName",
        PossibleTypes = new [] { typeof(string) })]
        string HostName { get; set; }
        /// <summary>Tells whether log modules are enabled or not</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DynatraceObservability.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Tells whether log modules are enabled or not",
        SerializedName = @"logModule",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.DynatraceObservability.Support.LogModule) })]
        Microsoft.Azure.PowerShell.Cmdlets.DynatraceObservability.Support.LogModule? LogModule { get; set; }
        /// <summary>The monitoring mode of OneAgent</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DynatraceObservability.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The monitoring mode of OneAgent",
        SerializedName = @"monitoringType",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.DynatraceObservability.Support.MonitoringType) })]
        Microsoft.Azure.PowerShell.Cmdlets.DynatraceObservability.Support.MonitoringType? MonitoringType { get; set; }
        /// <summary>Azure VM resource ID</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DynatraceObservability.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Azure VM resource ID",
        SerializedName = @"resourceId",
        PossibleTypes = new [] { typeof(string) })]
        string ResourceId { get; set; }
        /// <summary>The current update status of OneAgent.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DynatraceObservability.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The current update status of OneAgent.",
        SerializedName = @"updateStatus",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.DynatraceObservability.Support.UpdateStatus) })]
        Microsoft.Azure.PowerShell.Cmdlets.DynatraceObservability.Support.UpdateStatus? UpdateStatus { get; set; }
        /// <summary>Version of the Dynatrace agent installed on the VM.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DynatraceObservability.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Version of the Dynatrace agent installed on the VM.",
        SerializedName = @"version",
        PossibleTypes = new [] { typeof(string) })]
        string Version { get; set; }

    }
    /// Details of VM Resource having Dynatrace OneAgent installed
    internal partial interface IVMInfoInternal

    {
        /// <summary>Update settings of OneAgent.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DynatraceObservability.Support.AutoUpdateSetting? AutoUpdateSetting { get; set; }
        /// <summary>The availability state of OneAgent.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DynatraceObservability.Support.AvailabilityState? AvailabilityState { get; set; }
        /// <summary>The name of the host group</summary>
        string HostGroup { get; set; }
        /// <summary>The name of the host</summary>
        string HostName { get; set; }
        /// <summary>Tells whether log modules are enabled or not</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DynatraceObservability.Support.LogModule? LogModule { get; set; }
        /// <summary>The monitoring mode of OneAgent</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DynatraceObservability.Support.MonitoringType? MonitoringType { get; set; }
        /// <summary>Azure VM resource ID</summary>
        string ResourceId { get; set; }
        /// <summary>The current update status of OneAgent.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DynatraceObservability.Support.UpdateStatus? UpdateStatus { get; set; }
        /// <summary>Version of the Dynatrace agent installed on the VM.</summary>
        string Version { get; set; }

    }
}