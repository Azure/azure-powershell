// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.DynatraceObservability.Models.Api20210901
{
    using static Microsoft.Azure.PowerShell.Cmdlets.DynatraceObservability.Runtime.Extensions;

    /// <summary>Details of resource being monitored by Dynatrace monitor resource</summary>
    public partial class MonitoredResource :
        Microsoft.Azure.PowerShell.Cmdlets.DynatraceObservability.Models.Api20210901.IMonitoredResource,
        Microsoft.Azure.PowerShell.Cmdlets.DynatraceObservability.Models.Api20210901.IMonitoredResourceInternal
    {

        /// <summary>Backing field for <see cref="Id" /> property.</summary>
        private string _id;

        /// <summary>The ARM id of the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DynatraceObservability.Origin(Microsoft.Azure.PowerShell.Cmdlets.DynatraceObservability.PropertyOrigin.Owned)]
        public string Id { get => this._id; set => this._id = value; }

        /// <summary>Backing field for <see cref="ReasonForLogsStatus" /> property.</summary>
        private string _reasonForLogsStatus;

        /// <summary>Reason for why the resource is sending logs (or why it is not sending).</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DynatraceObservability.Origin(Microsoft.Azure.PowerShell.Cmdlets.DynatraceObservability.PropertyOrigin.Owned)]
        public string ReasonForLogsStatus { get => this._reasonForLogsStatus; set => this._reasonForLogsStatus = value; }

        /// <summary>Backing field for <see cref="ReasonForMetricsStatus" /> property.</summary>
        private string _reasonForMetricsStatus;

        /// <summary>Reason for why the resource is sending metrics (or why it is not sending).</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DynatraceObservability.Origin(Microsoft.Azure.PowerShell.Cmdlets.DynatraceObservability.PropertyOrigin.Owned)]
        public string ReasonForMetricsStatus { get => this._reasonForMetricsStatus; set => this._reasonForMetricsStatus = value; }

        /// <summary>Backing field for <see cref="SendingLog" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.DynatraceObservability.Support.SendingLogsStatus? _sendingLog;

        /// <summary>Flag indicating if resource is sending logs to Dynatrace.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DynatraceObservability.Origin(Microsoft.Azure.PowerShell.Cmdlets.DynatraceObservability.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.DynatraceObservability.Support.SendingLogsStatus? SendingLog { get => this._sendingLog; set => this._sendingLog = value; }

        /// <summary>Backing field for <see cref="SendingMetric" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.DynatraceObservability.Support.SendingMetricsStatus? _sendingMetric;

        /// <summary>Flag indicating if resource is sending metrics to Dynatrace.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DynatraceObservability.Origin(Microsoft.Azure.PowerShell.Cmdlets.DynatraceObservability.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.DynatraceObservability.Support.SendingMetricsStatus? SendingMetric { get => this._sendingMetric; set => this._sendingMetric = value; }

        /// <summary>Creates an new <see cref="MonitoredResource" /> instance.</summary>
        public MonitoredResource()
        {

        }
    }
    /// Details of resource being monitored by Dynatrace monitor resource
    public partial interface IMonitoredResource :
        Microsoft.Azure.PowerShell.Cmdlets.DynatraceObservability.Runtime.IJsonSerializable
    {
        /// <summary>The ARM id of the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DynatraceObservability.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The ARM id of the resource.",
        SerializedName = @"id",
        PossibleTypes = new [] { typeof(string) })]
        string Id { get; set; }
        /// <summary>Reason for why the resource is sending logs (or why it is not sending).</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DynatraceObservability.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Reason for why the resource is sending logs (or why it is not sending).",
        SerializedName = @"reasonForLogsStatus",
        PossibleTypes = new [] { typeof(string) })]
        string ReasonForLogsStatus { get; set; }
        /// <summary>Reason for why the resource is sending metrics (or why it is not sending).</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DynatraceObservability.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Reason for why the resource is sending metrics (or why it is not sending).",
        SerializedName = @"reasonForMetricsStatus",
        PossibleTypes = new [] { typeof(string) })]
        string ReasonForMetricsStatus { get; set; }
        /// <summary>Flag indicating if resource is sending logs to Dynatrace.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DynatraceObservability.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Flag indicating if resource is sending logs to Dynatrace.",
        SerializedName = @"sendingLogs",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.DynatraceObservability.Support.SendingLogsStatus) })]
        Microsoft.Azure.PowerShell.Cmdlets.DynatraceObservability.Support.SendingLogsStatus? SendingLog { get; set; }
        /// <summary>Flag indicating if resource is sending metrics to Dynatrace.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DynatraceObservability.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Flag indicating if resource is sending metrics to Dynatrace.",
        SerializedName = @"sendingMetrics",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.DynatraceObservability.Support.SendingMetricsStatus) })]
        Microsoft.Azure.PowerShell.Cmdlets.DynatraceObservability.Support.SendingMetricsStatus? SendingMetric { get; set; }

    }
    /// Details of resource being monitored by Dynatrace monitor resource
    internal partial interface IMonitoredResourceInternal

    {
        /// <summary>The ARM id of the resource.</summary>
        string Id { get; set; }
        /// <summary>Reason for why the resource is sending logs (or why it is not sending).</summary>
        string ReasonForLogsStatus { get; set; }
        /// <summary>Reason for why the resource is sending metrics (or why it is not sending).</summary>
        string ReasonForMetricsStatus { get; set; }
        /// <summary>Flag indicating if resource is sending logs to Dynatrace.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DynatraceObservability.Support.SendingLogsStatus? SendingLog { get; set; }
        /// <summary>Flag indicating if resource is sending metrics to Dynatrace.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DynatraceObservability.Support.SendingMetricsStatus? SendingMetric { get; set; }

    }
}