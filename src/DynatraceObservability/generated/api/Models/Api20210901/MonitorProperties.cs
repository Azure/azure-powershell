// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.DynatraceObservability.Models.Api20210901
{
    using static Microsoft.Azure.PowerShell.Cmdlets.DynatraceObservability.Runtime.Extensions;

    /// <summary>Properties specific to the monitor resource.</summary>
    public partial class MonitorProperties :
        Microsoft.Azure.PowerShell.Cmdlets.DynatraceObservability.Models.Api20210901.IMonitorProperties,
        Microsoft.Azure.PowerShell.Cmdlets.DynatraceObservability.Models.Api20210901.IMonitorPropertiesInternal
    {

        /// <summary>Account Id of the account this environment is linked to</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DynatraceObservability.Origin(Microsoft.Azure.PowerShell.Cmdlets.DynatraceObservability.PropertyOrigin.Inlined)]
        public string AccountInfoAccountId { get => ((Microsoft.Azure.PowerShell.Cmdlets.DynatraceObservability.Models.Api20210901.IDynatraceEnvironmentPropertiesInternal)DynatraceEnvironmentProperty).AccountInfoAccountId; set => ((Microsoft.Azure.PowerShell.Cmdlets.DynatraceObservability.Models.Api20210901.IDynatraceEnvironmentPropertiesInternal)DynatraceEnvironmentProperty).AccountInfoAccountId = value ?? null; }

        /// <summary>Region in which the account is created</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DynatraceObservability.Origin(Microsoft.Azure.PowerShell.Cmdlets.DynatraceObservability.PropertyOrigin.Inlined)]
        public string AccountInfoRegionId { get => ((Microsoft.Azure.PowerShell.Cmdlets.DynatraceObservability.Models.Api20210901.IDynatraceEnvironmentPropertiesInternal)DynatraceEnvironmentProperty).AccountInfoRegionId; set => ((Microsoft.Azure.PowerShell.Cmdlets.DynatraceObservability.Models.Api20210901.IDynatraceEnvironmentPropertiesInternal)DynatraceEnvironmentProperty).AccountInfoRegionId = value ?? null; }

        /// <summary>Backing field for <see cref="DynatraceEnvironmentProperty" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.DynatraceObservability.Models.Api20210901.IDynatraceEnvironmentProperties _dynatraceEnvironmentProperty;

        /// <summary>Properties of the Dynatrace environment.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DynatraceObservability.Origin(Microsoft.Azure.PowerShell.Cmdlets.DynatraceObservability.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.DynatraceObservability.Models.Api20210901.IDynatraceEnvironmentProperties DynatraceEnvironmentProperty { get => (this._dynatraceEnvironmentProperty = this._dynatraceEnvironmentProperty ?? new Microsoft.Azure.PowerShell.Cmdlets.DynatraceObservability.Models.Api20210901.DynatraceEnvironmentProperties()); set => this._dynatraceEnvironmentProperty = value; }

        /// <summary>User id</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DynatraceObservability.Origin(Microsoft.Azure.PowerShell.Cmdlets.DynatraceObservability.PropertyOrigin.Inlined)]
        public string DynatraceEnvironmentPropertyUserId { get => ((Microsoft.Azure.PowerShell.Cmdlets.DynatraceObservability.Models.Api20210901.IDynatraceEnvironmentPropertiesInternal)DynatraceEnvironmentProperty).UserId; set => ((Microsoft.Azure.PowerShell.Cmdlets.DynatraceObservability.Models.Api20210901.IDynatraceEnvironmentPropertiesInternal)DynatraceEnvironmentProperty).UserId = value ?? null; }

        /// <summary>Id of the environment created</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DynatraceObservability.Origin(Microsoft.Azure.PowerShell.Cmdlets.DynatraceObservability.PropertyOrigin.Inlined)]
        public string EnvironmentInfoEnvironmentId { get => ((Microsoft.Azure.PowerShell.Cmdlets.DynatraceObservability.Models.Api20210901.IDynatraceEnvironmentPropertiesInternal)DynatraceEnvironmentProperty).EnvironmentInfoEnvironmentId; set => ((Microsoft.Azure.PowerShell.Cmdlets.DynatraceObservability.Models.Api20210901.IDynatraceEnvironmentPropertiesInternal)DynatraceEnvironmentProperty).EnvironmentInfoEnvironmentId = value ?? null; }

        /// <summary>Ingestion key of the environment</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DynatraceObservability.Origin(Microsoft.Azure.PowerShell.Cmdlets.DynatraceObservability.PropertyOrigin.Inlined)]
        public string EnvironmentInfoIngestionKey { get => ((Microsoft.Azure.PowerShell.Cmdlets.DynatraceObservability.Models.Api20210901.IDynatraceEnvironmentPropertiesInternal)DynatraceEnvironmentProperty).EnvironmentInfoIngestionKey; set => ((Microsoft.Azure.PowerShell.Cmdlets.DynatraceObservability.Models.Api20210901.IDynatraceEnvironmentPropertiesInternal)DynatraceEnvironmentProperty).EnvironmentInfoIngestionKey = value ?? null; }

        /// <summary>Landing URL for Dynatrace environment</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DynatraceObservability.Origin(Microsoft.Azure.PowerShell.Cmdlets.DynatraceObservability.PropertyOrigin.Inlined)]
        public string EnvironmentInfoLandingUrl { get => ((Microsoft.Azure.PowerShell.Cmdlets.DynatraceObservability.Models.Api20210901.IDynatraceEnvironmentPropertiesInternal)DynatraceEnvironmentProperty).EnvironmentInfoLandingUrl; set => ((Microsoft.Azure.PowerShell.Cmdlets.DynatraceObservability.Models.Api20210901.IDynatraceEnvironmentPropertiesInternal)DynatraceEnvironmentProperty).EnvironmentInfoLandingUrl = value ?? null; }

        /// <summary>Ingestion endpoint used for sending logs</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DynatraceObservability.Origin(Microsoft.Azure.PowerShell.Cmdlets.DynatraceObservability.PropertyOrigin.Inlined)]
        public string EnvironmentInfoLogsIngestionEndpoint { get => ((Microsoft.Azure.PowerShell.Cmdlets.DynatraceObservability.Models.Api20210901.IDynatraceEnvironmentPropertiesInternal)DynatraceEnvironmentProperty).EnvironmentInfoLogsIngestionEndpoint; set => ((Microsoft.Azure.PowerShell.Cmdlets.DynatraceObservability.Models.Api20210901.IDynatraceEnvironmentPropertiesInternal)DynatraceEnvironmentProperty).EnvironmentInfoLogsIngestionEndpoint = value ?? null; }

        /// <summary>Backing field for <see cref="LiftrResourceCategory" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.DynatraceObservability.Support.LiftrResourceCategories? _liftrResourceCategory;

        /// <summary>Liftr Resource category.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DynatraceObservability.Origin(Microsoft.Azure.PowerShell.Cmdlets.DynatraceObservability.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.DynatraceObservability.Support.LiftrResourceCategories? LiftrResourceCategory { get => this._liftrResourceCategory; }

        /// <summary>Backing field for <see cref="LiftrResourcePreference" /> property.</summary>
        private int? _liftrResourcePreference;

        /// <summary>The priority of the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DynatraceObservability.Origin(Microsoft.Azure.PowerShell.Cmdlets.DynatraceObservability.PropertyOrigin.Owned)]
        public int? LiftrResourcePreference { get => this._liftrResourcePreference; }

        /// <summary>Backing field for <see cref="MarketplaceSubscriptionStatus" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.DynatraceObservability.Support.MarketplaceSubscriptionStatus? _marketplaceSubscriptionStatus;

        /// <summary>Marketplace subscription status.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DynatraceObservability.Origin(Microsoft.Azure.PowerShell.Cmdlets.DynatraceObservability.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.DynatraceObservability.Support.MarketplaceSubscriptionStatus? MarketplaceSubscriptionStatus { get => this._marketplaceSubscriptionStatus; set => this._marketplaceSubscriptionStatus = value; }

        /// <summary>Internal Acessors for DynatraceEnvironmentProperty</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DynatraceObservability.Models.Api20210901.IDynatraceEnvironmentProperties Microsoft.Azure.PowerShell.Cmdlets.DynatraceObservability.Models.Api20210901.IMonitorPropertiesInternal.DynatraceEnvironmentProperty { get => (this._dynatraceEnvironmentProperty = this._dynatraceEnvironmentProperty ?? new Microsoft.Azure.PowerShell.Cmdlets.DynatraceObservability.Models.Api20210901.DynatraceEnvironmentProperties()); set { {_dynatraceEnvironmentProperty = value;} } }

        /// <summary>Internal Acessors for DynatraceEnvironmentPropertyAccountInfo</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DynatraceObservability.Models.Api20210901.IAccountInfo Microsoft.Azure.PowerShell.Cmdlets.DynatraceObservability.Models.Api20210901.IMonitorPropertiesInternal.DynatraceEnvironmentPropertyAccountInfo { get => ((Microsoft.Azure.PowerShell.Cmdlets.DynatraceObservability.Models.Api20210901.IDynatraceEnvironmentPropertiesInternal)DynatraceEnvironmentProperty).AccountInfo; set => ((Microsoft.Azure.PowerShell.Cmdlets.DynatraceObservability.Models.Api20210901.IDynatraceEnvironmentPropertiesInternal)DynatraceEnvironmentProperty).AccountInfo = value; }

        /// <summary>Internal Acessors for DynatraceEnvironmentPropertyEnvironmentInfo</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DynatraceObservability.Models.Api20210901.IEnvironmentInfo Microsoft.Azure.PowerShell.Cmdlets.DynatraceObservability.Models.Api20210901.IMonitorPropertiesInternal.DynatraceEnvironmentPropertyEnvironmentInfo { get => ((Microsoft.Azure.PowerShell.Cmdlets.DynatraceObservability.Models.Api20210901.IDynatraceEnvironmentPropertiesInternal)DynatraceEnvironmentProperty).EnvironmentInfo; set => ((Microsoft.Azure.PowerShell.Cmdlets.DynatraceObservability.Models.Api20210901.IDynatraceEnvironmentPropertiesInternal)DynatraceEnvironmentProperty).EnvironmentInfo = value; }

        /// <summary>Internal Acessors for DynatraceEnvironmentPropertySingleSignOnProperty</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DynatraceObservability.Models.Api20210901.IDynatraceSingleSignOnProperties Microsoft.Azure.PowerShell.Cmdlets.DynatraceObservability.Models.Api20210901.IMonitorPropertiesInternal.DynatraceEnvironmentPropertySingleSignOnProperty { get => ((Microsoft.Azure.PowerShell.Cmdlets.DynatraceObservability.Models.Api20210901.IDynatraceEnvironmentPropertiesInternal)DynatraceEnvironmentProperty).SingleSignOnProperty; set => ((Microsoft.Azure.PowerShell.Cmdlets.DynatraceObservability.Models.Api20210901.IDynatraceEnvironmentPropertiesInternal)DynatraceEnvironmentProperty).SingleSignOnProperty = value; }

        /// <summary>Internal Acessors for LiftrResourceCategory</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DynatraceObservability.Support.LiftrResourceCategories? Microsoft.Azure.PowerShell.Cmdlets.DynatraceObservability.Models.Api20210901.IMonitorPropertiesInternal.LiftrResourceCategory { get => this._liftrResourceCategory; set { {_liftrResourceCategory = value;} } }

        /// <summary>Internal Acessors for LiftrResourcePreference</summary>
        int? Microsoft.Azure.PowerShell.Cmdlets.DynatraceObservability.Models.Api20210901.IMonitorPropertiesInternal.LiftrResourcePreference { get => this._liftrResourcePreference; set { {_liftrResourcePreference = value;} } }

        /// <summary>Internal Acessors for PlanData</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DynatraceObservability.Models.Api20210901.IPlanData Microsoft.Azure.PowerShell.Cmdlets.DynatraceObservability.Models.Api20210901.IMonitorPropertiesInternal.PlanData { get => (this._planData = this._planData ?? new Microsoft.Azure.PowerShell.Cmdlets.DynatraceObservability.Models.Api20210901.PlanData()); set { {_planData = value;} } }

        /// <summary>Internal Acessors for ProvisioningState</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DynatraceObservability.Support.ProvisioningState? Microsoft.Azure.PowerShell.Cmdlets.DynatraceObservability.Models.Api20210901.IMonitorPropertiesInternal.ProvisioningState { get => this._provisioningState; set { {_provisioningState = value;} } }

        /// <summary>Internal Acessors for SingleSignOnPropertyProvisioningState</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DynatraceObservability.Support.ProvisioningState? Microsoft.Azure.PowerShell.Cmdlets.DynatraceObservability.Models.Api20210901.IMonitorPropertiesInternal.SingleSignOnPropertyProvisioningState { get => ((Microsoft.Azure.PowerShell.Cmdlets.DynatraceObservability.Models.Api20210901.IDynatraceEnvironmentPropertiesInternal)DynatraceEnvironmentProperty).SingleSignOnPropertyProvisioningState; set => ((Microsoft.Azure.PowerShell.Cmdlets.DynatraceObservability.Models.Api20210901.IDynatraceEnvironmentPropertiesInternal)DynatraceEnvironmentProperty).SingleSignOnPropertyProvisioningState = value; }

        /// <summary>Internal Acessors for UserInfo</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DynatraceObservability.Models.Api20210901.IUserInfo Microsoft.Azure.PowerShell.Cmdlets.DynatraceObservability.Models.Api20210901.IMonitorPropertiesInternal.UserInfo { get => (this._userInfo = this._userInfo ?? new Microsoft.Azure.PowerShell.Cmdlets.DynatraceObservability.Models.Api20210901.UserInfo()); set { {_userInfo = value;} } }

        /// <summary>Backing field for <see cref="MonitoringStatus" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.DynatraceObservability.Support.MonitoringStatus? _monitoringStatus;

        /// <summary>Status of the monitor.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DynatraceObservability.Origin(Microsoft.Azure.PowerShell.Cmdlets.DynatraceObservability.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.DynatraceObservability.Support.MonitoringStatus? MonitoringStatus { get => this._monitoringStatus; set => this._monitoringStatus = value; }

        /// <summary>Backing field for <see cref="PlanData" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.DynatraceObservability.Models.Api20210901.IPlanData _planData;

        /// <summary>Billing plan information.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DynatraceObservability.Origin(Microsoft.Azure.PowerShell.Cmdlets.DynatraceObservability.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.DynatraceObservability.Models.Api20210901.IPlanData PlanData { get => (this._planData = this._planData ?? new Microsoft.Azure.PowerShell.Cmdlets.DynatraceObservability.Models.Api20210901.PlanData()); set => this._planData = value; }

        /// <summary>different billing cycles like MONTHLY/WEEKLY. this could be enum</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DynatraceObservability.Origin(Microsoft.Azure.PowerShell.Cmdlets.DynatraceObservability.PropertyOrigin.Inlined)]
        public string PlanDataBillingCycle { get => ((Microsoft.Azure.PowerShell.Cmdlets.DynatraceObservability.Models.Api20210901.IPlanDataInternal)PlanData).BillingCycle; set => ((Microsoft.Azure.PowerShell.Cmdlets.DynatraceObservability.Models.Api20210901.IPlanDataInternal)PlanData).BillingCycle = value ?? null; }

        /// <summary>date when plan was applied</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DynatraceObservability.Origin(Microsoft.Azure.PowerShell.Cmdlets.DynatraceObservability.PropertyOrigin.Inlined)]
        public global::System.DateTime? PlanDataEffectiveDate { get => ((Microsoft.Azure.PowerShell.Cmdlets.DynatraceObservability.Models.Api20210901.IPlanDataInternal)PlanData).EffectiveDate; set => ((Microsoft.Azure.PowerShell.Cmdlets.DynatraceObservability.Models.Api20210901.IPlanDataInternal)PlanData).EffectiveDate = value ?? default(global::System.DateTime); }

        /// <summary>plan id as published by Dynatrace</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DynatraceObservability.Origin(Microsoft.Azure.PowerShell.Cmdlets.DynatraceObservability.PropertyOrigin.Inlined)]
        public string PlanDataPlanDetail { get => ((Microsoft.Azure.PowerShell.Cmdlets.DynatraceObservability.Models.Api20210901.IPlanDataInternal)PlanData).PlanDetail; set => ((Microsoft.Azure.PowerShell.Cmdlets.DynatraceObservability.Models.Api20210901.IPlanDataInternal)PlanData).PlanDetail = value ?? null; }

        /// <summary>different usage type like PAYG/COMMITTED. this could be enum</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DynatraceObservability.Origin(Microsoft.Azure.PowerShell.Cmdlets.DynatraceObservability.PropertyOrigin.Inlined)]
        public string PlanDataUsageType { get => ((Microsoft.Azure.PowerShell.Cmdlets.DynatraceObservability.Models.Api20210901.IPlanDataInternal)PlanData).UsageType; set => ((Microsoft.Azure.PowerShell.Cmdlets.DynatraceObservability.Models.Api20210901.IPlanDataInternal)PlanData).UsageType = value ?? null; }

        /// <summary>Backing field for <see cref="ProvisioningState" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.DynatraceObservability.Support.ProvisioningState? _provisioningState;

        /// <summary>Provisioning state of the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DynatraceObservability.Origin(Microsoft.Azure.PowerShell.Cmdlets.DynatraceObservability.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.DynatraceObservability.Support.ProvisioningState? ProvisioningState { get => this._provisioningState; }

        /// <summary>array of Aad(azure active directory) domains</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DynatraceObservability.Origin(Microsoft.Azure.PowerShell.Cmdlets.DynatraceObservability.PropertyOrigin.Inlined)]
        public string[] SingleSignOnPropertyAadDomain { get => ((Microsoft.Azure.PowerShell.Cmdlets.DynatraceObservability.Models.Api20210901.IDynatraceEnvironmentPropertiesInternal)DynatraceEnvironmentProperty).SingleSignOnPropertyAadDomain; set => ((Microsoft.Azure.PowerShell.Cmdlets.DynatraceObservability.Models.Api20210901.IDynatraceEnvironmentPropertiesInternal)DynatraceEnvironmentProperty).SingleSignOnPropertyAadDomain = value ?? null /* arrayOf */; }

        /// <summary>Version of the Dynatrace agent installed on the VM.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DynatraceObservability.Origin(Microsoft.Azure.PowerShell.Cmdlets.DynatraceObservability.PropertyOrigin.Inlined)]
        public string SingleSignOnPropertyEnterpriseAppId { get => ((Microsoft.Azure.PowerShell.Cmdlets.DynatraceObservability.Models.Api20210901.IDynatraceEnvironmentPropertiesInternal)DynatraceEnvironmentProperty).SingleSignOnPropertyEnterpriseAppId; set => ((Microsoft.Azure.PowerShell.Cmdlets.DynatraceObservability.Models.Api20210901.IDynatraceEnvironmentPropertiesInternal)DynatraceEnvironmentProperty).SingleSignOnPropertyEnterpriseAppId = value ?? null; }

        /// <summary>Provisioning state of the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DynatraceObservability.Origin(Microsoft.Azure.PowerShell.Cmdlets.DynatraceObservability.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.DynatraceObservability.Support.ProvisioningState? SingleSignOnPropertyProvisioningState { get => ((Microsoft.Azure.PowerShell.Cmdlets.DynatraceObservability.Models.Api20210901.IDynatraceEnvironmentPropertiesInternal)DynatraceEnvironmentProperty).SingleSignOnPropertyProvisioningState; }

        /// <summary>State of Single Sign On</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DynatraceObservability.Origin(Microsoft.Azure.PowerShell.Cmdlets.DynatraceObservability.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.DynatraceObservability.Support.SingleSignOnStates? SingleSignOnPropertySingleSignOnState { get => ((Microsoft.Azure.PowerShell.Cmdlets.DynatraceObservability.Models.Api20210901.IDynatraceEnvironmentPropertiesInternal)DynatraceEnvironmentProperty).SingleSignOnPropertySingleSignOnState; set => ((Microsoft.Azure.PowerShell.Cmdlets.DynatraceObservability.Models.Api20210901.IDynatraceEnvironmentPropertiesInternal)DynatraceEnvironmentProperty).SingleSignOnPropertySingleSignOnState = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.DynatraceObservability.Support.SingleSignOnStates)""); }

        /// <summary>The login URL specific to this Dynatrace Environment</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DynatraceObservability.Origin(Microsoft.Azure.PowerShell.Cmdlets.DynatraceObservability.PropertyOrigin.Inlined)]
        public string SingleSignOnPropertySingleSignOnUrl { get => ((Microsoft.Azure.PowerShell.Cmdlets.DynatraceObservability.Models.Api20210901.IDynatraceEnvironmentPropertiesInternal)DynatraceEnvironmentProperty).SingleSignOnPropertySingleSignOnUrl; set => ((Microsoft.Azure.PowerShell.Cmdlets.DynatraceObservability.Models.Api20210901.IDynatraceEnvironmentPropertiesInternal)DynatraceEnvironmentProperty).SingleSignOnPropertySingleSignOnUrl = value ?? null; }

        /// <summary>Backing field for <see cref="UserInfo" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.DynatraceObservability.Models.Api20210901.IUserInfo _userInfo;

        /// <summary>User info.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DynatraceObservability.Origin(Microsoft.Azure.PowerShell.Cmdlets.DynatraceObservability.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.DynatraceObservability.Models.Api20210901.IUserInfo UserInfo { get => (this._userInfo = this._userInfo ?? new Microsoft.Azure.PowerShell.Cmdlets.DynatraceObservability.Models.Api20210901.UserInfo()); set => this._userInfo = value; }

        /// <summary>Country of the user</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DynatraceObservability.Origin(Microsoft.Azure.PowerShell.Cmdlets.DynatraceObservability.PropertyOrigin.Inlined)]
        public string UserInfoCountry { get => ((Microsoft.Azure.PowerShell.Cmdlets.DynatraceObservability.Models.Api20210901.IUserInfoInternal)UserInfo).Country; set => ((Microsoft.Azure.PowerShell.Cmdlets.DynatraceObservability.Models.Api20210901.IUserInfoInternal)UserInfo).Country = value ?? null; }

        /// <summary>Email of the user used by Dynatrace for contacting them if needed</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DynatraceObservability.Origin(Microsoft.Azure.PowerShell.Cmdlets.DynatraceObservability.PropertyOrigin.Inlined)]
        public string UserInfoEmailAddress { get => ((Microsoft.Azure.PowerShell.Cmdlets.DynatraceObservability.Models.Api20210901.IUserInfoInternal)UserInfo).EmailAddress; set => ((Microsoft.Azure.PowerShell.Cmdlets.DynatraceObservability.Models.Api20210901.IUserInfoInternal)UserInfo).EmailAddress = value ?? null; }

        /// <summary>First Name of the user</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DynatraceObservability.Origin(Microsoft.Azure.PowerShell.Cmdlets.DynatraceObservability.PropertyOrigin.Inlined)]
        public string UserInfoFirstName { get => ((Microsoft.Azure.PowerShell.Cmdlets.DynatraceObservability.Models.Api20210901.IUserInfoInternal)UserInfo).FirstName; set => ((Microsoft.Azure.PowerShell.Cmdlets.DynatraceObservability.Models.Api20210901.IUserInfoInternal)UserInfo).FirstName = value ?? null; }

        /// <summary>Last Name of the user</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DynatraceObservability.Origin(Microsoft.Azure.PowerShell.Cmdlets.DynatraceObservability.PropertyOrigin.Inlined)]
        public string UserInfoLastName { get => ((Microsoft.Azure.PowerShell.Cmdlets.DynatraceObservability.Models.Api20210901.IUserInfoInternal)UserInfo).LastName; set => ((Microsoft.Azure.PowerShell.Cmdlets.DynatraceObservability.Models.Api20210901.IUserInfoInternal)UserInfo).LastName = value ?? null; }

        /// <summary>Phone number of the user used by Dynatrace for contacting them if needed</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DynatraceObservability.Origin(Microsoft.Azure.PowerShell.Cmdlets.DynatraceObservability.PropertyOrigin.Inlined)]
        public string UserInfoPhoneNumber { get => ((Microsoft.Azure.PowerShell.Cmdlets.DynatraceObservability.Models.Api20210901.IUserInfoInternal)UserInfo).PhoneNumber; set => ((Microsoft.Azure.PowerShell.Cmdlets.DynatraceObservability.Models.Api20210901.IUserInfoInternal)UserInfo).PhoneNumber = value ?? null; }

        /// <summary>Creates an new <see cref="MonitorProperties" /> instance.</summary>
        public MonitorProperties()
        {

        }
    }
    /// Properties specific to the monitor resource.
    public partial interface IMonitorProperties :
        Microsoft.Azure.PowerShell.Cmdlets.DynatraceObservability.Runtime.IJsonSerializable
    {
        /// <summary>Account Id of the account this environment is linked to</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DynatraceObservability.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Account Id of the account this environment is linked to",
        SerializedName = @"accountId",
        PossibleTypes = new [] { typeof(string) })]
        string AccountInfoAccountId { get; set; }
        /// <summary>Region in which the account is created</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DynatraceObservability.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Region in which the account is created",
        SerializedName = @"regionId",
        PossibleTypes = new [] { typeof(string) })]
        string AccountInfoRegionId { get; set; }
        /// <summary>User id</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DynatraceObservability.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"User id",
        SerializedName = @"userId",
        PossibleTypes = new [] { typeof(string) })]
        string DynatraceEnvironmentPropertyUserId { get; set; }
        /// <summary>Id of the environment created</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DynatraceObservability.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Id of the environment created",
        SerializedName = @"environmentId",
        PossibleTypes = new [] { typeof(string) })]
        string EnvironmentInfoEnvironmentId { get; set; }
        /// <summary>Ingestion key of the environment</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DynatraceObservability.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Ingestion key of the environment",
        SerializedName = @"ingestionKey",
        PossibleTypes = new [] { typeof(string) })]
        string EnvironmentInfoIngestionKey { get; set; }
        /// <summary>Landing URL for Dynatrace environment</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DynatraceObservability.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Landing URL for Dynatrace environment",
        SerializedName = @"landingURL",
        PossibleTypes = new [] { typeof(string) })]
        string EnvironmentInfoLandingUrl { get; set; }
        /// <summary>Ingestion endpoint used for sending logs</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DynatraceObservability.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Ingestion endpoint used for sending logs",
        SerializedName = @"logsIngestionEndpoint",
        PossibleTypes = new [] { typeof(string) })]
        string EnvironmentInfoLogsIngestionEndpoint { get; set; }
        /// <summary>Liftr Resource category.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DynatraceObservability.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Liftr Resource category.",
        SerializedName = @"liftrResourceCategory",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.DynatraceObservability.Support.LiftrResourceCategories) })]
        Microsoft.Azure.PowerShell.Cmdlets.DynatraceObservability.Support.LiftrResourceCategories? LiftrResourceCategory { get;  }
        /// <summary>The priority of the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DynatraceObservability.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The priority of the resource.",
        SerializedName = @"liftrResourcePreference",
        PossibleTypes = new [] { typeof(int) })]
        int? LiftrResourcePreference { get;  }
        /// <summary>Marketplace subscription status.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DynatraceObservability.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Marketplace subscription status.",
        SerializedName = @"marketplaceSubscriptionStatus",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.DynatraceObservability.Support.MarketplaceSubscriptionStatus) })]
        Microsoft.Azure.PowerShell.Cmdlets.DynatraceObservability.Support.MarketplaceSubscriptionStatus? MarketplaceSubscriptionStatus { get; set; }
        /// <summary>Status of the monitor.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DynatraceObservability.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Status of the monitor.",
        SerializedName = @"monitoringStatus",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.DynatraceObservability.Support.MonitoringStatus) })]
        Microsoft.Azure.PowerShell.Cmdlets.DynatraceObservability.Support.MonitoringStatus? MonitoringStatus { get; set; }
        /// <summary>different billing cycles like MONTHLY/WEEKLY. this could be enum</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DynatraceObservability.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"different billing cycles like MONTHLY/WEEKLY. this could be enum",
        SerializedName = @"billingCycle",
        PossibleTypes = new [] { typeof(string) })]
        string PlanDataBillingCycle { get; set; }
        /// <summary>date when plan was applied</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DynatraceObservability.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"date when plan was applied",
        SerializedName = @"effectiveDate",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? PlanDataEffectiveDate { get; set; }
        /// <summary>plan id as published by Dynatrace</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DynatraceObservability.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"plan id as published by Dynatrace",
        SerializedName = @"planDetails",
        PossibleTypes = new [] { typeof(string) })]
        string PlanDataPlanDetail { get; set; }
        /// <summary>different usage type like PAYG/COMMITTED. this could be enum</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DynatraceObservability.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"different usage type like PAYG/COMMITTED. this could be enum",
        SerializedName = @"usageType",
        PossibleTypes = new [] { typeof(string) })]
        string PlanDataUsageType { get; set; }
        /// <summary>Provisioning state of the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DynatraceObservability.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Provisioning state of the resource.",
        SerializedName = @"provisioningState",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.DynatraceObservability.Support.ProvisioningState) })]
        Microsoft.Azure.PowerShell.Cmdlets.DynatraceObservability.Support.ProvisioningState? ProvisioningState { get;  }
        /// <summary>array of Aad(azure active directory) domains</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DynatraceObservability.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"array of Aad(azure active directory) domains",
        SerializedName = @"aadDomains",
        PossibleTypes = new [] { typeof(string) })]
        string[] SingleSignOnPropertyAadDomain { get; set; }
        /// <summary>Version of the Dynatrace agent installed on the VM.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DynatraceObservability.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Version of the Dynatrace agent installed on the VM.",
        SerializedName = @"enterpriseAppId",
        PossibleTypes = new [] { typeof(string) })]
        string SingleSignOnPropertyEnterpriseAppId { get; set; }
        /// <summary>Provisioning state of the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DynatraceObservability.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Provisioning state of the resource.",
        SerializedName = @"provisioningState",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.DynatraceObservability.Support.ProvisioningState) })]
        Microsoft.Azure.PowerShell.Cmdlets.DynatraceObservability.Support.ProvisioningState? SingleSignOnPropertyProvisioningState { get;  }
        /// <summary>State of Single Sign On</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DynatraceObservability.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"State of Single Sign On",
        SerializedName = @"singleSignOnState",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.DynatraceObservability.Support.SingleSignOnStates) })]
        Microsoft.Azure.PowerShell.Cmdlets.DynatraceObservability.Support.SingleSignOnStates? SingleSignOnPropertySingleSignOnState { get; set; }
        /// <summary>The login URL specific to this Dynatrace Environment</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DynatraceObservability.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The login URL specific to this Dynatrace Environment",
        SerializedName = @"singleSignOnUrl",
        PossibleTypes = new [] { typeof(string) })]
        string SingleSignOnPropertySingleSignOnUrl { get; set; }
        /// <summary>Country of the user</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DynatraceObservability.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Country of the user",
        SerializedName = @"country",
        PossibleTypes = new [] { typeof(string) })]
        string UserInfoCountry { get; set; }
        /// <summary>Email of the user used by Dynatrace for contacting them if needed</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DynatraceObservability.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Email of the user used by Dynatrace for contacting them if needed",
        SerializedName = @"emailAddress",
        PossibleTypes = new [] { typeof(string) })]
        string UserInfoEmailAddress { get; set; }
        /// <summary>First Name of the user</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DynatraceObservability.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"First Name of the user",
        SerializedName = @"firstName",
        PossibleTypes = new [] { typeof(string) })]
        string UserInfoFirstName { get; set; }
        /// <summary>Last Name of the user</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DynatraceObservability.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Last Name of the user",
        SerializedName = @"lastName",
        PossibleTypes = new [] { typeof(string) })]
        string UserInfoLastName { get; set; }
        /// <summary>Phone number of the user used by Dynatrace for contacting them if needed</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DynatraceObservability.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Phone number of the user used by Dynatrace for contacting them if needed",
        SerializedName = @"phoneNumber",
        PossibleTypes = new [] { typeof(string) })]
        string UserInfoPhoneNumber { get; set; }

    }
    /// Properties specific to the monitor resource.
    internal partial interface IMonitorPropertiesInternal

    {
        /// <summary>Account Id of the account this environment is linked to</summary>
        string AccountInfoAccountId { get; set; }
        /// <summary>Region in which the account is created</summary>
        string AccountInfoRegionId { get; set; }
        /// <summary>Properties of the Dynatrace environment.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DynatraceObservability.Models.Api20210901.IDynatraceEnvironmentProperties DynatraceEnvironmentProperty { get; set; }
        /// <summary>Dynatrace Account Information</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DynatraceObservability.Models.Api20210901.IAccountInfo DynatraceEnvironmentPropertyAccountInfo { get; set; }
        /// <summary>Dynatrace Environment Information</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DynatraceObservability.Models.Api20210901.IEnvironmentInfo DynatraceEnvironmentPropertyEnvironmentInfo { get; set; }
        /// <summary>The details of a Dynatrace single sign-on.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DynatraceObservability.Models.Api20210901.IDynatraceSingleSignOnProperties DynatraceEnvironmentPropertySingleSignOnProperty { get; set; }
        /// <summary>User id</summary>
        string DynatraceEnvironmentPropertyUserId { get; set; }
        /// <summary>Id of the environment created</summary>
        string EnvironmentInfoEnvironmentId { get; set; }
        /// <summary>Ingestion key of the environment</summary>
        string EnvironmentInfoIngestionKey { get; set; }
        /// <summary>Landing URL for Dynatrace environment</summary>
        string EnvironmentInfoLandingUrl { get; set; }
        /// <summary>Ingestion endpoint used for sending logs</summary>
        string EnvironmentInfoLogsIngestionEndpoint { get; set; }
        /// <summary>Liftr Resource category.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DynatraceObservability.Support.LiftrResourceCategories? LiftrResourceCategory { get; set; }
        /// <summary>The priority of the resource.</summary>
        int? LiftrResourcePreference { get; set; }
        /// <summary>Marketplace subscription status.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DynatraceObservability.Support.MarketplaceSubscriptionStatus? MarketplaceSubscriptionStatus { get; set; }
        /// <summary>Status of the monitor.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DynatraceObservability.Support.MonitoringStatus? MonitoringStatus { get; set; }
        /// <summary>Billing plan information.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DynatraceObservability.Models.Api20210901.IPlanData PlanData { get; set; }
        /// <summary>different billing cycles like MONTHLY/WEEKLY. this could be enum</summary>
        string PlanDataBillingCycle { get; set; }
        /// <summary>date when plan was applied</summary>
        global::System.DateTime? PlanDataEffectiveDate { get; set; }
        /// <summary>plan id as published by Dynatrace</summary>
        string PlanDataPlanDetail { get; set; }
        /// <summary>different usage type like PAYG/COMMITTED. this could be enum</summary>
        string PlanDataUsageType { get; set; }
        /// <summary>Provisioning state of the resource.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DynatraceObservability.Support.ProvisioningState? ProvisioningState { get; set; }
        /// <summary>array of Aad(azure active directory) domains</summary>
        string[] SingleSignOnPropertyAadDomain { get; set; }
        /// <summary>Version of the Dynatrace agent installed on the VM.</summary>
        string SingleSignOnPropertyEnterpriseAppId { get; set; }
        /// <summary>Provisioning state of the resource.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DynatraceObservability.Support.ProvisioningState? SingleSignOnPropertyProvisioningState { get; set; }
        /// <summary>State of Single Sign On</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DynatraceObservability.Support.SingleSignOnStates? SingleSignOnPropertySingleSignOnState { get; set; }
        /// <summary>The login URL specific to this Dynatrace Environment</summary>
        string SingleSignOnPropertySingleSignOnUrl { get; set; }
        /// <summary>User info.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DynatraceObservability.Models.Api20210901.IUserInfo UserInfo { get; set; }
        /// <summary>Country of the user</summary>
        string UserInfoCountry { get; set; }
        /// <summary>Email of the user used by Dynatrace for contacting them if needed</summary>
        string UserInfoEmailAddress { get; set; }
        /// <summary>First Name of the user</summary>
        string UserInfoFirstName { get; set; }
        /// <summary>Last Name of the user</summary>
        string UserInfoLastName { get; set; }
        /// <summary>Phone number of the user used by Dynatrace for contacting them if needed</summary>
        string UserInfoPhoneNumber { get; set; }

    }
}