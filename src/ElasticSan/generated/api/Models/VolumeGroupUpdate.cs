// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.ElasticSan.Models
{
    using static Microsoft.Azure.PowerShell.Cmdlets.ElasticSan.Runtime.Extensions;

    /// <summary>Volume Group request.</summary>
    [Microsoft.Azure.PowerShell.Cmdlets.ElasticSan.DoNotFormat]
    public partial class VolumeGroupUpdate :
        Microsoft.Azure.PowerShell.Cmdlets.ElasticSan.Models.IVolumeGroupUpdate,
        Microsoft.Azure.PowerShell.Cmdlets.ElasticSan.Models.IVolumeGroupUpdateInternal
    {

        /// <summary>Type of encryption</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ElasticSan.Origin(Microsoft.Azure.PowerShell.Cmdlets.ElasticSan.PropertyOrigin.Inlined)]
        public string Encryption { get => ((Microsoft.Azure.PowerShell.Cmdlets.ElasticSan.Models.IVolumeGroupUpdatePropertiesInternal)Property).Encryption; set => ((Microsoft.Azure.PowerShell.Cmdlets.ElasticSan.Models.IVolumeGroupUpdatePropertiesInternal)Property).Encryption = value ?? null; }

        /// <summary>
        /// Resource identifier of the UserAssigned identity to be associated with server-side encryption on the volume group.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ElasticSan.Origin(Microsoft.Azure.PowerShell.Cmdlets.ElasticSan.PropertyOrigin.Inlined)]
        public string EncryptionIdentityEncryptionUserAssignedIdentity { get => ((Microsoft.Azure.PowerShell.Cmdlets.ElasticSan.Models.IVolumeGroupUpdatePropertiesInternal)Property).EncryptionIdentityEncryptionUserAssignedIdentity; set => ((Microsoft.Azure.PowerShell.Cmdlets.ElasticSan.Models.IVolumeGroupUpdatePropertiesInternal)Property).EncryptionIdentityEncryptionUserAssignedIdentity = value ?? null; }

        /// <summary>Backing field for <see cref="Identity" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ElasticSan.Models.IIdentity _identity;

        /// <summary>The identity of the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ElasticSan.Origin(Microsoft.Azure.PowerShell.Cmdlets.ElasticSan.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.ElasticSan.Models.IIdentity Identity { get => (this._identity = this._identity ?? new Microsoft.Azure.PowerShell.Cmdlets.ElasticSan.Models.Identity()); set => this._identity = value; }

        /// <summary>The principal ID of resource identity.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ElasticSan.Origin(Microsoft.Azure.PowerShell.Cmdlets.ElasticSan.PropertyOrigin.Inlined)]
        public string IdentityPrincipalId { get => ((Microsoft.Azure.PowerShell.Cmdlets.ElasticSan.Models.IIdentityInternal)Identity).PrincipalId; }

        /// <summary>The tenant ID of resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ElasticSan.Origin(Microsoft.Azure.PowerShell.Cmdlets.ElasticSan.PropertyOrigin.Inlined)]
        public string IdentityTenantId { get => ((Microsoft.Azure.PowerShell.Cmdlets.ElasticSan.Models.IIdentityInternal)Identity).TenantId; }

        /// <summary>The identity type.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ElasticSan.Origin(Microsoft.Azure.PowerShell.Cmdlets.ElasticSan.PropertyOrigin.Inlined)]
        public string IdentityType { get => ((Microsoft.Azure.PowerShell.Cmdlets.ElasticSan.Models.IIdentityInternal)Identity).Type; set => ((Microsoft.Azure.PowerShell.Cmdlets.ElasticSan.Models.IIdentityInternal)Identity).Type = value ?? null; }

        /// <summary>
        /// Gets or sets a list of key value pairs that describe the set of User Assigned identities that will be used with this volume
        /// group. The key is the ARM resource identifier of the identity.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ElasticSan.Origin(Microsoft.Azure.PowerShell.Cmdlets.ElasticSan.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.ElasticSan.Models.IIdentityUserAssignedIdentities IdentityUserAssignedIdentity { get => ((Microsoft.Azure.PowerShell.Cmdlets.ElasticSan.Models.IIdentityInternal)Identity).UserAssignedIdentity; set => ((Microsoft.Azure.PowerShell.Cmdlets.ElasticSan.Models.IIdentityInternal)Identity).UserAssignedIdentity = value ?? null /* model class */; }

        /// <summary>
        /// This is a read only property that represents the expiration time of the current version of the customer managed key used
        /// for encryption.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ElasticSan.Origin(Microsoft.Azure.PowerShell.Cmdlets.ElasticSan.PropertyOrigin.Inlined)]
        public global::System.DateTime? KeyVaultPropertyCurrentVersionedKeyExpirationTimestamp { get => ((Microsoft.Azure.PowerShell.Cmdlets.ElasticSan.Models.IVolumeGroupUpdatePropertiesInternal)Property).KeyVaultPropertyCurrentVersionedKeyExpirationTimestamp; }

        /// <summary>The object identifier of the current versioned Key Vault Key in use.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ElasticSan.Origin(Microsoft.Azure.PowerShell.Cmdlets.ElasticSan.PropertyOrigin.Inlined)]
        public string KeyVaultPropertyCurrentVersionedKeyIdentifier { get => ((Microsoft.Azure.PowerShell.Cmdlets.ElasticSan.Models.IVolumeGroupUpdatePropertiesInternal)Property).KeyVaultPropertyCurrentVersionedKeyIdentifier; }

        /// <summary>The name of KeyVault key.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ElasticSan.Origin(Microsoft.Azure.PowerShell.Cmdlets.ElasticSan.PropertyOrigin.Inlined)]
        public string KeyVaultPropertyKeyName { get => ((Microsoft.Azure.PowerShell.Cmdlets.ElasticSan.Models.IVolumeGroupUpdatePropertiesInternal)Property).KeyVaultPropertyKeyName; set => ((Microsoft.Azure.PowerShell.Cmdlets.ElasticSan.Models.IVolumeGroupUpdatePropertiesInternal)Property).KeyVaultPropertyKeyName = value ?? null; }

        /// <summary>The Uri of KeyVault.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ElasticSan.Origin(Microsoft.Azure.PowerShell.Cmdlets.ElasticSan.PropertyOrigin.Inlined)]
        public string KeyVaultPropertyKeyVaultUri { get => ((Microsoft.Azure.PowerShell.Cmdlets.ElasticSan.Models.IVolumeGroupUpdatePropertiesInternal)Property).KeyVaultPropertyKeyVaultUri; set => ((Microsoft.Azure.PowerShell.Cmdlets.ElasticSan.Models.IVolumeGroupUpdatePropertiesInternal)Property).KeyVaultPropertyKeyVaultUri = value ?? null; }

        /// <summary>The version of KeyVault key.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ElasticSan.Origin(Microsoft.Azure.PowerShell.Cmdlets.ElasticSan.PropertyOrigin.Inlined)]
        public string KeyVaultPropertyKeyVersion { get => ((Microsoft.Azure.PowerShell.Cmdlets.ElasticSan.Models.IVolumeGroupUpdatePropertiesInternal)Property).KeyVaultPropertyKeyVersion; set => ((Microsoft.Azure.PowerShell.Cmdlets.ElasticSan.Models.IVolumeGroupUpdatePropertiesInternal)Property).KeyVaultPropertyKeyVersion = value ?? null; }

        /// <summary>Timestamp of last rotation of the Key Vault Key.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ElasticSan.Origin(Microsoft.Azure.PowerShell.Cmdlets.ElasticSan.PropertyOrigin.Inlined)]
        public global::System.DateTime? KeyVaultPropertyLastKeyRotationTimestamp { get => ((Microsoft.Azure.PowerShell.Cmdlets.ElasticSan.Models.IVolumeGroupUpdatePropertiesInternal)Property).KeyVaultPropertyLastKeyRotationTimestamp; }

        /// <summary>Internal Acessors for EncryptionProperty</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ElasticSan.Models.IEncryptionProperties Microsoft.Azure.PowerShell.Cmdlets.ElasticSan.Models.IVolumeGroupUpdateInternal.EncryptionProperty { get => ((Microsoft.Azure.PowerShell.Cmdlets.ElasticSan.Models.IVolumeGroupUpdatePropertiesInternal)Property).EncryptionProperty; set => ((Microsoft.Azure.PowerShell.Cmdlets.ElasticSan.Models.IVolumeGroupUpdatePropertiesInternal)Property).EncryptionProperty = value; }

        /// <summary>Internal Acessors for EncryptionPropertyEncryptionIdentity</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ElasticSan.Models.IEncryptionIdentity Microsoft.Azure.PowerShell.Cmdlets.ElasticSan.Models.IVolumeGroupUpdateInternal.EncryptionPropertyEncryptionIdentity { get => ((Microsoft.Azure.PowerShell.Cmdlets.ElasticSan.Models.IVolumeGroupUpdatePropertiesInternal)Property).EncryptionPropertyEncryptionIdentity; set => ((Microsoft.Azure.PowerShell.Cmdlets.ElasticSan.Models.IVolumeGroupUpdatePropertiesInternal)Property).EncryptionPropertyEncryptionIdentity = value; }

        /// <summary>Internal Acessors for EncryptionPropertyKeyVaultProperty</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ElasticSan.Models.IKeyVaultProperties Microsoft.Azure.PowerShell.Cmdlets.ElasticSan.Models.IVolumeGroupUpdateInternal.EncryptionPropertyKeyVaultProperty { get => ((Microsoft.Azure.PowerShell.Cmdlets.ElasticSan.Models.IVolumeGroupUpdatePropertiesInternal)Property).EncryptionPropertyKeyVaultProperty; set => ((Microsoft.Azure.PowerShell.Cmdlets.ElasticSan.Models.IVolumeGroupUpdatePropertiesInternal)Property).EncryptionPropertyKeyVaultProperty = value; }

        /// <summary>Internal Acessors for Identity</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ElasticSan.Models.IIdentity Microsoft.Azure.PowerShell.Cmdlets.ElasticSan.Models.IVolumeGroupUpdateInternal.Identity { get => (this._identity = this._identity ?? new Microsoft.Azure.PowerShell.Cmdlets.ElasticSan.Models.Identity()); set { {_identity = value;} } }

        /// <summary>Internal Acessors for IdentityPrincipalId</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.ElasticSan.Models.IVolumeGroupUpdateInternal.IdentityPrincipalId { get => ((Microsoft.Azure.PowerShell.Cmdlets.ElasticSan.Models.IIdentityInternal)Identity).PrincipalId; set => ((Microsoft.Azure.PowerShell.Cmdlets.ElasticSan.Models.IIdentityInternal)Identity).PrincipalId = value; }

        /// <summary>Internal Acessors for IdentityTenantId</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.ElasticSan.Models.IVolumeGroupUpdateInternal.IdentityTenantId { get => ((Microsoft.Azure.PowerShell.Cmdlets.ElasticSan.Models.IIdentityInternal)Identity).TenantId; set => ((Microsoft.Azure.PowerShell.Cmdlets.ElasticSan.Models.IIdentityInternal)Identity).TenantId = value; }

        /// <summary>Internal Acessors for KeyVaultPropertyCurrentVersionedKeyExpirationTimestamp</summary>
        global::System.DateTime? Microsoft.Azure.PowerShell.Cmdlets.ElasticSan.Models.IVolumeGroupUpdateInternal.KeyVaultPropertyCurrentVersionedKeyExpirationTimestamp { get => ((Microsoft.Azure.PowerShell.Cmdlets.ElasticSan.Models.IVolumeGroupUpdatePropertiesInternal)Property).KeyVaultPropertyCurrentVersionedKeyExpirationTimestamp; set => ((Microsoft.Azure.PowerShell.Cmdlets.ElasticSan.Models.IVolumeGroupUpdatePropertiesInternal)Property).KeyVaultPropertyCurrentVersionedKeyExpirationTimestamp = value; }

        /// <summary>Internal Acessors for KeyVaultPropertyCurrentVersionedKeyIdentifier</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.ElasticSan.Models.IVolumeGroupUpdateInternal.KeyVaultPropertyCurrentVersionedKeyIdentifier { get => ((Microsoft.Azure.PowerShell.Cmdlets.ElasticSan.Models.IVolumeGroupUpdatePropertiesInternal)Property).KeyVaultPropertyCurrentVersionedKeyIdentifier; set => ((Microsoft.Azure.PowerShell.Cmdlets.ElasticSan.Models.IVolumeGroupUpdatePropertiesInternal)Property).KeyVaultPropertyCurrentVersionedKeyIdentifier = value; }

        /// <summary>Internal Acessors for KeyVaultPropertyLastKeyRotationTimestamp</summary>
        global::System.DateTime? Microsoft.Azure.PowerShell.Cmdlets.ElasticSan.Models.IVolumeGroupUpdateInternal.KeyVaultPropertyLastKeyRotationTimestamp { get => ((Microsoft.Azure.PowerShell.Cmdlets.ElasticSan.Models.IVolumeGroupUpdatePropertiesInternal)Property).KeyVaultPropertyLastKeyRotationTimestamp; set => ((Microsoft.Azure.PowerShell.Cmdlets.ElasticSan.Models.IVolumeGroupUpdatePropertiesInternal)Property).KeyVaultPropertyLastKeyRotationTimestamp = value; }

        /// <summary>Internal Acessors for NetworkAcls</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ElasticSan.Models.INetworkRuleSet Microsoft.Azure.PowerShell.Cmdlets.ElasticSan.Models.IVolumeGroupUpdateInternal.NetworkAcls { get => ((Microsoft.Azure.PowerShell.Cmdlets.ElasticSan.Models.IVolumeGroupUpdatePropertiesInternal)Property).NetworkAcls; set => ((Microsoft.Azure.PowerShell.Cmdlets.ElasticSan.Models.IVolumeGroupUpdatePropertiesInternal)Property).NetworkAcls = value; }

        /// <summary>Internal Acessors for Property</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ElasticSan.Models.IVolumeGroupUpdateProperties Microsoft.Azure.PowerShell.Cmdlets.ElasticSan.Models.IVolumeGroupUpdateInternal.Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.ElasticSan.Models.VolumeGroupUpdateProperties()); set { {_property = value;} } }

        /// <summary>The list of virtual network rules.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ElasticSan.Origin(Microsoft.Azure.PowerShell.Cmdlets.ElasticSan.PropertyOrigin.Inlined)]
        public System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.ElasticSan.Models.IVirtualNetworkRule> NetworkAclsVirtualNetworkRule { get => ((Microsoft.Azure.PowerShell.Cmdlets.ElasticSan.Models.IVolumeGroupUpdatePropertiesInternal)Property).NetworkAclsVirtualNetworkRule; set => ((Microsoft.Azure.PowerShell.Cmdlets.ElasticSan.Models.IVolumeGroupUpdatePropertiesInternal)Property).NetworkAclsVirtualNetworkRule = value ?? null /* arrayOf */; }

        /// <summary>Backing field for <see cref="Property" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ElasticSan.Models.IVolumeGroupUpdateProperties _property;

        /// <summary>Properties of VolumeGroup.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ElasticSan.Origin(Microsoft.Azure.PowerShell.Cmdlets.ElasticSan.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.ElasticSan.Models.IVolumeGroupUpdateProperties Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.ElasticSan.Models.VolumeGroupUpdateProperties()); set => this._property = value; }

        /// <summary>Type of storage target</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ElasticSan.Origin(Microsoft.Azure.PowerShell.Cmdlets.ElasticSan.PropertyOrigin.Inlined)]
        public string ProtocolType { get => ((Microsoft.Azure.PowerShell.Cmdlets.ElasticSan.Models.IVolumeGroupUpdatePropertiesInternal)Property).ProtocolType; set => ((Microsoft.Azure.PowerShell.Cmdlets.ElasticSan.Models.IVolumeGroupUpdatePropertiesInternal)Property).ProtocolType = value ?? null; }

        /// <summary>Creates an new <see cref="VolumeGroupUpdate" /> instance.</summary>
        public VolumeGroupUpdate()
        {

        }
    }
    /// Volume Group request.
    public partial interface IVolumeGroupUpdate :
        Microsoft.Azure.PowerShell.Cmdlets.ElasticSan.Runtime.IJsonSerializable
    {
        /// <summary>Type of encryption</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ElasticSan.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Type of encryption",
        SerializedName = @"encryption",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.ElasticSan.PSArgumentCompleterAttribute("EncryptionAtRestWithPlatformKey", "EncryptionAtRestWithCustomerManagedKey")]
        string Encryption { get; set; }
        /// <summary>
        /// Resource identifier of the UserAssigned identity to be associated with server-side encryption on the volume group.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ElasticSan.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Resource identifier of the UserAssigned identity to be associated with server-side encryption on the volume group.",
        SerializedName = @"userAssignedIdentity",
        PossibleTypes = new [] { typeof(string) })]
        string EncryptionIdentityEncryptionUserAssignedIdentity { get; set; }
        /// <summary>The principal ID of resource identity.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ElasticSan.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The principal ID of resource identity.",
        SerializedName = @"principalId",
        PossibleTypes = new [] { typeof(string) })]
        string IdentityPrincipalId { get;  }
        /// <summary>The tenant ID of resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ElasticSan.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The tenant ID of resource.",
        SerializedName = @"tenantId",
        PossibleTypes = new [] { typeof(string) })]
        string IdentityTenantId { get;  }
        /// <summary>The identity type.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ElasticSan.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The identity type.",
        SerializedName = @"type",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.ElasticSan.PSArgumentCompleterAttribute("None", "SystemAssigned", "UserAssigned")]
        string IdentityType { get; set; }
        /// <summary>
        /// Gets or sets a list of key value pairs that describe the set of User Assigned identities that will be used with this volume
        /// group. The key is the ARM resource identifier of the identity.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ElasticSan.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Gets or sets a list of key value pairs that describe the set of User Assigned identities that will be used with this volume group. The key is the ARM resource identifier of the identity.",
        SerializedName = @"userAssignedIdentities",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ElasticSan.Models.IIdentityUserAssignedIdentities) })]
        Microsoft.Azure.PowerShell.Cmdlets.ElasticSan.Models.IIdentityUserAssignedIdentities IdentityUserAssignedIdentity { get; set; }
        /// <summary>
        /// This is a read only property that represents the expiration time of the current version of the customer managed key used
        /// for encryption.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ElasticSan.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"This is a read only property that represents the expiration time of the current version of the customer managed key used for encryption.",
        SerializedName = @"currentVersionedKeyExpirationTimestamp",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? KeyVaultPropertyCurrentVersionedKeyExpirationTimestamp { get;  }
        /// <summary>The object identifier of the current versioned Key Vault Key in use.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ElasticSan.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The object identifier of the current versioned Key Vault Key in use.",
        SerializedName = @"currentVersionedKeyIdentifier",
        PossibleTypes = new [] { typeof(string) })]
        string KeyVaultPropertyCurrentVersionedKeyIdentifier { get;  }
        /// <summary>The name of KeyVault key.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ElasticSan.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The name of KeyVault key.",
        SerializedName = @"keyName",
        PossibleTypes = new [] { typeof(string) })]
        string KeyVaultPropertyKeyName { get; set; }
        /// <summary>The Uri of KeyVault.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ElasticSan.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The Uri of KeyVault.",
        SerializedName = @"keyVaultUri",
        PossibleTypes = new [] { typeof(string) })]
        string KeyVaultPropertyKeyVaultUri { get; set; }
        /// <summary>The version of KeyVault key.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ElasticSan.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The version of KeyVault key.",
        SerializedName = @"keyVersion",
        PossibleTypes = new [] { typeof(string) })]
        string KeyVaultPropertyKeyVersion { get; set; }
        /// <summary>Timestamp of last rotation of the Key Vault Key.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ElasticSan.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"Timestamp of last rotation of the Key Vault Key.",
        SerializedName = @"lastKeyRotationTimestamp",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? KeyVaultPropertyLastKeyRotationTimestamp { get;  }
        /// <summary>The list of virtual network rules.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ElasticSan.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = false,
        Create = false,
        Update = true,
        Description = @"The list of virtual network rules.",
        SerializedName = @"virtualNetworkRules",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ElasticSan.Models.IVirtualNetworkRule) })]
        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.ElasticSan.Models.IVirtualNetworkRule> NetworkAclsVirtualNetworkRule { get; set; }
        /// <summary>Type of storage target</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ElasticSan.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Type of storage target",
        SerializedName = @"protocolType",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.ElasticSan.PSArgumentCompleterAttribute("Iscsi", "None")]
        string ProtocolType { get; set; }

    }
    /// Volume Group request.
    internal partial interface IVolumeGroupUpdateInternal

    {
        /// <summary>Type of encryption</summary>
        [global::Microsoft.Azure.PowerShell.Cmdlets.ElasticSan.PSArgumentCompleterAttribute("EncryptionAtRestWithPlatformKey", "EncryptionAtRestWithCustomerManagedKey")]
        string Encryption { get; set; }
        /// <summary>
        /// Resource identifier of the UserAssigned identity to be associated with server-side encryption on the volume group.
        /// </summary>
        string EncryptionIdentityEncryptionUserAssignedIdentity { get; set; }
        /// <summary>Encryption Properties describing Key Vault and Identity information</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ElasticSan.Models.IEncryptionProperties EncryptionProperty { get; set; }
        /// <summary>The identity to be used with service-side encryption at rest.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ElasticSan.Models.IEncryptionIdentity EncryptionPropertyEncryptionIdentity { get; set; }
        /// <summary>Properties provided by key vault.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ElasticSan.Models.IKeyVaultProperties EncryptionPropertyKeyVaultProperty { get; set; }
        /// <summary>The identity of the resource.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ElasticSan.Models.IIdentity Identity { get; set; }
        /// <summary>The principal ID of resource identity.</summary>
        string IdentityPrincipalId { get; set; }
        /// <summary>The tenant ID of resource.</summary>
        string IdentityTenantId { get; set; }
        /// <summary>The identity type.</summary>
        [global::Microsoft.Azure.PowerShell.Cmdlets.ElasticSan.PSArgumentCompleterAttribute("None", "SystemAssigned", "UserAssigned")]
        string IdentityType { get; set; }
        /// <summary>
        /// Gets or sets a list of key value pairs that describe the set of User Assigned identities that will be used with this volume
        /// group. The key is the ARM resource identifier of the identity.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.ElasticSan.Models.IIdentityUserAssignedIdentities IdentityUserAssignedIdentity { get; set; }
        /// <summary>
        /// This is a read only property that represents the expiration time of the current version of the customer managed key used
        /// for encryption.
        /// </summary>
        global::System.DateTime? KeyVaultPropertyCurrentVersionedKeyExpirationTimestamp { get; set; }
        /// <summary>The object identifier of the current versioned Key Vault Key in use.</summary>
        string KeyVaultPropertyCurrentVersionedKeyIdentifier { get; set; }
        /// <summary>The name of KeyVault key.</summary>
        string KeyVaultPropertyKeyName { get; set; }
        /// <summary>The Uri of KeyVault.</summary>
        string KeyVaultPropertyKeyVaultUri { get; set; }
        /// <summary>The version of KeyVault key.</summary>
        string KeyVaultPropertyKeyVersion { get; set; }
        /// <summary>Timestamp of last rotation of the Key Vault Key.</summary>
        global::System.DateTime? KeyVaultPropertyLastKeyRotationTimestamp { get; set; }
        /// <summary>
        /// A collection of rules governing the accessibility from specific network locations.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.ElasticSan.Models.INetworkRuleSet NetworkAcls { get; set; }
        /// <summary>The list of virtual network rules.</summary>
        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.ElasticSan.Models.IVirtualNetworkRule> NetworkAclsVirtualNetworkRule { get; set; }
        /// <summary>Properties of VolumeGroup.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ElasticSan.Models.IVolumeGroupUpdateProperties Property { get; set; }
        /// <summary>Type of storage target</summary>
        [global::Microsoft.Azure.PowerShell.Cmdlets.ElasticSan.PSArgumentCompleterAttribute("Iscsi", "None")]
        string ProtocolType { get; set; }

    }
}