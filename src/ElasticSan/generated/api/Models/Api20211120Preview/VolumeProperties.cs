// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.ElasticSan.Models.Api20211120Preview
{
    using static Microsoft.Azure.PowerShell.Cmdlets.ElasticSan.Runtime.Extensions;

    /// <summary>Volume response properties.</summary>
    [Microsoft.Azure.PowerShell.Cmdlets.ElasticSan.DoNotFormat]
    public partial class VolumeProperties :
        Microsoft.Azure.PowerShell.Cmdlets.ElasticSan.Models.Api20211120Preview.IVolumeProperties,
        Microsoft.Azure.PowerShell.Cmdlets.ElasticSan.Models.Api20211120Preview.IVolumePropertiesInternal
    {

        /// <summary>Backing field for <see cref="CreationData" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ElasticSan.Models.Api20211120Preview.ISourceCreationData _creationData;

        /// <summary>State of the operation on the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ElasticSan.Origin(Microsoft.Azure.PowerShell.Cmdlets.ElasticSan.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.ElasticSan.Models.Api20211120Preview.ISourceCreationData CreationData { get => (this._creationData = this._creationData ?? new Microsoft.Azure.PowerShell.Cmdlets.ElasticSan.Models.Api20211120Preview.SourceCreationData()); set => this._creationData = value; }

        /// <summary>This enumerates the possible sources of a volume creation.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ElasticSan.Origin(Microsoft.Azure.PowerShell.Cmdlets.ElasticSan.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.ElasticSan.Support.VolumeCreateOption? CreationDataCreateSource { get => ((Microsoft.Azure.PowerShell.Cmdlets.ElasticSan.Models.Api20211120Preview.ISourceCreationDataInternal)CreationData).CreateSource; set => ((Microsoft.Azure.PowerShell.Cmdlets.ElasticSan.Models.Api20211120Preview.ISourceCreationDataInternal)CreationData).CreateSource = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.ElasticSan.Support.VolumeCreateOption)""); }

        /// <summary>
        /// If createOption is Copy, this is the ARM id of the source snapshot or disk. If createOption is Restore, this is the ARM-like
        /// id of the source disk restore point.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ElasticSan.Origin(Microsoft.Azure.PowerShell.Cmdlets.ElasticSan.PropertyOrigin.Inlined)]
        public string CreationDataSourceUri { get => ((Microsoft.Azure.PowerShell.Cmdlets.ElasticSan.Models.Api20211120Preview.ISourceCreationDataInternal)CreationData).SourceUri; set => ((Microsoft.Azure.PowerShell.Cmdlets.ElasticSan.Models.Api20211120Preview.ISourceCreationDataInternal)CreationData).SourceUri = value ?? null; }

        /// <summary>Internal Acessors for CreationData</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ElasticSan.Models.Api20211120Preview.ISourceCreationData Microsoft.Azure.PowerShell.Cmdlets.ElasticSan.Models.Api20211120Preview.IVolumePropertiesInternal.CreationData { get => (this._creationData = this._creationData ?? new Microsoft.Azure.PowerShell.Cmdlets.ElasticSan.Models.Api20211120Preview.SourceCreationData()); set { {_creationData = value;} } }

        /// <summary>Internal Acessors for StorageTarget</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ElasticSan.Models.Api20211120Preview.IIscsiTargetInfo Microsoft.Azure.PowerShell.Cmdlets.ElasticSan.Models.Api20211120Preview.IVolumePropertiesInternal.StorageTarget { get => (this._storageTarget = this._storageTarget ?? new Microsoft.Azure.PowerShell.Cmdlets.ElasticSan.Models.Api20211120Preview.IscsiTargetInfo()); set { {_storageTarget = value;} } }

        /// <summary>Internal Acessors for StorageTargetIqn</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.ElasticSan.Models.Api20211120Preview.IVolumePropertiesInternal.StorageTargetIqn { get => ((Microsoft.Azure.PowerShell.Cmdlets.ElasticSan.Models.Api20211120Preview.IIscsiTargetInfoInternal)StorageTarget).TargetIqn; set => ((Microsoft.Azure.PowerShell.Cmdlets.ElasticSan.Models.Api20211120Preview.IIscsiTargetInfoInternal)StorageTarget).TargetIqn = value; }

        /// <summary>Internal Acessors for StorageTargetPortalHostname</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.ElasticSan.Models.Api20211120Preview.IVolumePropertiesInternal.StorageTargetPortalHostname { get => ((Microsoft.Azure.PowerShell.Cmdlets.ElasticSan.Models.Api20211120Preview.IIscsiTargetInfoInternal)StorageTarget).TargetPortalHostname; set => ((Microsoft.Azure.PowerShell.Cmdlets.ElasticSan.Models.Api20211120Preview.IIscsiTargetInfoInternal)StorageTarget).TargetPortalHostname = value; }

        /// <summary>Internal Acessors for StorageTargetPortalPort</summary>
        int? Microsoft.Azure.PowerShell.Cmdlets.ElasticSan.Models.Api20211120Preview.IVolumePropertiesInternal.StorageTargetPortalPort { get => ((Microsoft.Azure.PowerShell.Cmdlets.ElasticSan.Models.Api20211120Preview.IIscsiTargetInfoInternal)StorageTarget).TargetPortalPort; set => ((Microsoft.Azure.PowerShell.Cmdlets.ElasticSan.Models.Api20211120Preview.IIscsiTargetInfoInternal)StorageTarget).TargetPortalPort = value; }

        /// <summary>Internal Acessors for StorageTargetProvisioningState</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ElasticSan.Support.ProvisioningStates? Microsoft.Azure.PowerShell.Cmdlets.ElasticSan.Models.Api20211120Preview.IVolumePropertiesInternal.StorageTargetProvisioningState { get => ((Microsoft.Azure.PowerShell.Cmdlets.ElasticSan.Models.Api20211120Preview.IIscsiTargetInfoInternal)StorageTarget).ProvisioningState; set => ((Microsoft.Azure.PowerShell.Cmdlets.ElasticSan.Models.Api20211120Preview.IIscsiTargetInfoInternal)StorageTarget).ProvisioningState = value; }

        /// <summary>Internal Acessors for VolumeId</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.ElasticSan.Models.Api20211120Preview.IVolumePropertiesInternal.VolumeId { get => this._volumeId; set { {_volumeId = value;} } }

        /// <summary>Backing field for <see cref="SizeGiB" /> property.</summary>
        private long? _sizeGiB;

        /// <summary>Volume size.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ElasticSan.Origin(Microsoft.Azure.PowerShell.Cmdlets.ElasticSan.PropertyOrigin.Owned)]
        public long? SizeGiB { get => this._sizeGiB; set => this._sizeGiB = value; }

        /// <summary>Backing field for <see cref="StorageTarget" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ElasticSan.Models.Api20211120Preview.IIscsiTargetInfo _storageTarget;

        /// <summary>Storage target information</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ElasticSan.Origin(Microsoft.Azure.PowerShell.Cmdlets.ElasticSan.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.ElasticSan.Models.Api20211120Preview.IIscsiTargetInfo StorageTarget { get => (this._storageTarget = this._storageTarget ?? new Microsoft.Azure.PowerShell.Cmdlets.ElasticSan.Models.Api20211120Preview.IscsiTargetInfo()); }

        /// <summary>
        /// iSCSI Target IQN (iSCSI Qualified Name); example: "iqn.2005-03.org.iscsi:server".
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ElasticSan.Origin(Microsoft.Azure.PowerShell.Cmdlets.ElasticSan.PropertyOrigin.Inlined)]
        public string StorageTargetIqn { get => ((Microsoft.Azure.PowerShell.Cmdlets.ElasticSan.Models.Api20211120Preview.IIscsiTargetInfoInternal)StorageTarget).TargetIqn; }

        /// <summary>iSCSI Target Portal Host Name</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ElasticSan.Origin(Microsoft.Azure.PowerShell.Cmdlets.ElasticSan.PropertyOrigin.Inlined)]
        public string StorageTargetPortalHostname { get => ((Microsoft.Azure.PowerShell.Cmdlets.ElasticSan.Models.Api20211120Preview.IIscsiTargetInfoInternal)StorageTarget).TargetPortalHostname; }

        /// <summary>iSCSI Target Portal Port</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ElasticSan.Origin(Microsoft.Azure.PowerShell.Cmdlets.ElasticSan.PropertyOrigin.Inlined)]
        public int? StorageTargetPortalPort { get => ((Microsoft.Azure.PowerShell.Cmdlets.ElasticSan.Models.Api20211120Preview.IIscsiTargetInfoInternal)StorageTarget).TargetPortalPort; }

        /// <summary>State of the operation on the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ElasticSan.Origin(Microsoft.Azure.PowerShell.Cmdlets.ElasticSan.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.ElasticSan.Support.ProvisioningStates? StorageTargetProvisioningState { get => ((Microsoft.Azure.PowerShell.Cmdlets.ElasticSan.Models.Api20211120Preview.IIscsiTargetInfoInternal)StorageTarget).ProvisioningState; }

        /// <summary>Operational status of the iSCSI Target.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ElasticSan.Origin(Microsoft.Azure.PowerShell.Cmdlets.ElasticSan.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.ElasticSan.Support.OperationalStatus? StorageTargetStatus { get => ((Microsoft.Azure.PowerShell.Cmdlets.ElasticSan.Models.Api20211120Preview.IIscsiTargetInfoInternal)StorageTarget).Status; set => ((Microsoft.Azure.PowerShell.Cmdlets.ElasticSan.Models.Api20211120Preview.IIscsiTargetInfoInternal)StorageTarget).Status = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.ElasticSan.Support.OperationalStatus)""); }

        /// <summary>Backing field for <see cref="VolumeId" /> property.</summary>
        private string _volumeId;

        /// <summary>Unique Id of the volume in GUID format</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ElasticSan.Origin(Microsoft.Azure.PowerShell.Cmdlets.ElasticSan.PropertyOrigin.Owned)]
        public string VolumeId { get => this._volumeId; }

        /// <summary>Creates an new <see cref="VolumeProperties" /> instance.</summary>
        public VolumeProperties()
        {

        }
    }
    /// Volume response properties.
    public partial interface IVolumeProperties :
        Microsoft.Azure.PowerShell.Cmdlets.ElasticSan.Runtime.IJsonSerializable
    {
        /// <summary>This enumerates the possible sources of a volume creation.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ElasticSan.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"This enumerates the possible sources of a volume creation.",
        SerializedName = @"createSource",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ElasticSan.Support.VolumeCreateOption) })]
        Microsoft.Azure.PowerShell.Cmdlets.ElasticSan.Support.VolumeCreateOption? CreationDataCreateSource { get; set; }
        /// <summary>
        /// If createOption is Copy, this is the ARM id of the source snapshot or disk. If createOption is Restore, this is the ARM-like
        /// id of the source disk restore point.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ElasticSan.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"If createOption is Copy, this is the ARM id of the source snapshot or disk. If createOption is Restore, this is the ARM-like id of the source disk restore point.",
        SerializedName = @"sourceUri",
        PossibleTypes = new [] { typeof(string) })]
        string CreationDataSourceUri { get; set; }
        /// <summary>Volume size.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ElasticSan.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Volume size.",
        SerializedName = @"sizeGiB",
        PossibleTypes = new [] { typeof(long) })]
        long? SizeGiB { get; set; }
        /// <summary>
        /// iSCSI Target IQN (iSCSI Qualified Name); example: "iqn.2005-03.org.iscsi:server".
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ElasticSan.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"iSCSI Target IQN (iSCSI Qualified Name); example: ""iqn.2005-03.org.iscsi:server"".",
        SerializedName = @"targetIqn",
        PossibleTypes = new [] { typeof(string) })]
        string StorageTargetIqn { get;  }
        /// <summary>iSCSI Target Portal Host Name</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ElasticSan.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"iSCSI Target Portal Host Name",
        SerializedName = @"targetPortalHostname",
        PossibleTypes = new [] { typeof(string) })]
        string StorageTargetPortalHostname { get;  }
        /// <summary>iSCSI Target Portal Port</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ElasticSan.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"iSCSI Target Portal Port",
        SerializedName = @"targetPortalPort",
        PossibleTypes = new [] { typeof(int) })]
        int? StorageTargetPortalPort { get;  }
        /// <summary>State of the operation on the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ElasticSan.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"State of the operation on the resource.",
        SerializedName = @"provisioningState",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ElasticSan.Support.ProvisioningStates) })]
        Microsoft.Azure.PowerShell.Cmdlets.ElasticSan.Support.ProvisioningStates? StorageTargetProvisioningState { get;  }
        /// <summary>Operational status of the iSCSI Target.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ElasticSan.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Operational status of the iSCSI Target.",
        SerializedName = @"status",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ElasticSan.Support.OperationalStatus) })]
        Microsoft.Azure.PowerShell.Cmdlets.ElasticSan.Support.OperationalStatus? StorageTargetStatus { get; set; }
        /// <summary>Unique Id of the volume in GUID format</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ElasticSan.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Unique Id of the volume in GUID format",
        SerializedName = @"volumeId",
        PossibleTypes = new [] { typeof(string) })]
        string VolumeId { get;  }

    }
    /// Volume response properties.
    internal partial interface IVolumePropertiesInternal

    {
        /// <summary>State of the operation on the resource.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ElasticSan.Models.Api20211120Preview.ISourceCreationData CreationData { get; set; }
        /// <summary>This enumerates the possible sources of a volume creation.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ElasticSan.Support.VolumeCreateOption? CreationDataCreateSource { get; set; }
        /// <summary>
        /// If createOption is Copy, this is the ARM id of the source snapshot or disk. If createOption is Restore, this is the ARM-like
        /// id of the source disk restore point.
        /// </summary>
        string CreationDataSourceUri { get; set; }
        /// <summary>Volume size.</summary>
        long? SizeGiB { get; set; }
        /// <summary>Storage target information</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ElasticSan.Models.Api20211120Preview.IIscsiTargetInfo StorageTarget { get; set; }
        /// <summary>
        /// iSCSI Target IQN (iSCSI Qualified Name); example: "iqn.2005-03.org.iscsi:server".
        /// </summary>
        string StorageTargetIqn { get; set; }
        /// <summary>iSCSI Target Portal Host Name</summary>
        string StorageTargetPortalHostname { get; set; }
        /// <summary>iSCSI Target Portal Port</summary>
        int? StorageTargetPortalPort { get; set; }
        /// <summary>State of the operation on the resource.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ElasticSan.Support.ProvisioningStates? StorageTargetProvisioningState { get; set; }
        /// <summary>Operational status of the iSCSI Target.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ElasticSan.Support.OperationalStatus? StorageTargetStatus { get; set; }
        /// <summary>Unique Id of the volume in GUID format</summary>
        string VolumeId { get; set; }

    }
}