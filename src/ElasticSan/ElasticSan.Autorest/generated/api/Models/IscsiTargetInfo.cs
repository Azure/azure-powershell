// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.ElasticSan.Models
{
    using static Microsoft.Azure.PowerShell.Cmdlets.ElasticSan.Runtime.Extensions;

    /// <summary>Iscsi target information</summary>
    public partial class IscsiTargetInfo :
        Microsoft.Azure.PowerShell.Cmdlets.ElasticSan.Models.IIscsiTargetInfo,
        Microsoft.Azure.PowerShell.Cmdlets.ElasticSan.Models.IIscsiTargetInfoInternal
    {

        /// <summary>Internal Acessors for ProvisioningState</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.ElasticSan.Models.IIscsiTargetInfoInternal.ProvisioningState { get => this._provisioningState; set { {_provisioningState = value;} } }

        /// <summary>Internal Acessors for TargetIqn</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.ElasticSan.Models.IIscsiTargetInfoInternal.TargetIqn { get => this._targetIqn; set { {_targetIqn = value;} } }

        /// <summary>Internal Acessors for TargetPortalHostname</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.ElasticSan.Models.IIscsiTargetInfoInternal.TargetPortalHostname { get => this._targetPortalHostname; set { {_targetPortalHostname = value;} } }

        /// <summary>Internal Acessors for TargetPortalPort</summary>
        int? Microsoft.Azure.PowerShell.Cmdlets.ElasticSan.Models.IIscsiTargetInfoInternal.TargetPortalPort { get => this._targetPortalPort; set { {_targetPortalPort = value;} } }

        /// <summary>Backing field for <see cref="ProvisioningState" /> property.</summary>
        private string _provisioningState;

        /// <summary>State of the operation on the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ElasticSan.Origin(Microsoft.Azure.PowerShell.Cmdlets.ElasticSan.PropertyOrigin.Owned)]
        public string ProvisioningState { get => this._provisioningState; }

        /// <summary>Backing field for <see cref="Status" /> property.</summary>
        private string _status;

        /// <summary>Operational status of the iSCSI Target.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ElasticSan.Origin(Microsoft.Azure.PowerShell.Cmdlets.ElasticSan.PropertyOrigin.Owned)]
        public string Status { get => this._status; set => this._status = value; }

        /// <summary>Backing field for <see cref="TargetIqn" /> property.</summary>
        private string _targetIqn;

        /// <summary>
        /// iSCSI Target IQN (iSCSI Qualified Name); example: "iqn.2005-03.org.iscsi:server".
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ElasticSan.Origin(Microsoft.Azure.PowerShell.Cmdlets.ElasticSan.PropertyOrigin.Owned)]
        public string TargetIqn { get => this._targetIqn; }

        /// <summary>Backing field for <see cref="TargetPortalHostname" /> property.</summary>
        private string _targetPortalHostname;

        /// <summary>iSCSI Target Portal Host Name</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ElasticSan.Origin(Microsoft.Azure.PowerShell.Cmdlets.ElasticSan.PropertyOrigin.Owned)]
        public string TargetPortalHostname { get => this._targetPortalHostname; }

        /// <summary>Backing field for <see cref="TargetPortalPort" /> property.</summary>
        private int? _targetPortalPort;

        /// <summary>iSCSI Target Portal Port</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ElasticSan.Origin(Microsoft.Azure.PowerShell.Cmdlets.ElasticSan.PropertyOrigin.Owned)]
        public int? TargetPortalPort { get => this._targetPortalPort; }

        /// <summary>Creates an new <see cref="IscsiTargetInfo" /> instance.</summary>
        public IscsiTargetInfo()
        {

        }
    }
    /// Iscsi target information
    public partial interface IIscsiTargetInfo :
        Microsoft.Azure.PowerShell.Cmdlets.ElasticSan.Runtime.IJsonSerializable
    {
        /// <summary>State of the operation on the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ElasticSan.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"State of the operation on the resource.",
        SerializedName = @"provisioningState",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.ElasticSan.PSArgumentCompleterAttribute("Invalid", "Succeeded", "Failed", "Canceled", "Pending", "Creating", "Updating", "Deleting")]
        string ProvisioningState { get;  }
        /// <summary>Operational status of the iSCSI Target.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ElasticSan.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Operational status of the iSCSI Target.",
        SerializedName = @"status",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.ElasticSan.PSArgumentCompleterAttribute("Invalid", "Unknown", "Healthy", "Unhealthy", "Updating", "Running", "Stopped", "Stopped (deallocated)")]
        string Status { get; set; }
        /// <summary>
        /// iSCSI Target IQN (iSCSI Qualified Name); example: "iqn.2005-03.org.iscsi:server".
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ElasticSan.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"iSCSI Target IQN (iSCSI Qualified Name); example: ""iqn.2005-03.org.iscsi:server"".",
        SerializedName = @"targetIqn",
        PossibleTypes = new [] { typeof(string) })]
        string TargetIqn { get;  }
        /// <summary>iSCSI Target Portal Host Name</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ElasticSan.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"iSCSI Target Portal Host Name",
        SerializedName = @"targetPortalHostname",
        PossibleTypes = new [] { typeof(string) })]
        string TargetPortalHostname { get;  }
        /// <summary>iSCSI Target Portal Port</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ElasticSan.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"iSCSI Target Portal Port",
        SerializedName = @"targetPortalPort",
        PossibleTypes = new [] { typeof(int) })]
        int? TargetPortalPort { get;  }

    }
    /// Iscsi target information
    internal partial interface IIscsiTargetInfoInternal

    {
        /// <summary>State of the operation on the resource.</summary>
        [global::Microsoft.Azure.PowerShell.Cmdlets.ElasticSan.PSArgumentCompleterAttribute("Invalid", "Succeeded", "Failed", "Canceled", "Pending", "Creating", "Updating", "Deleting")]
        string ProvisioningState { get; set; }
        /// <summary>Operational status of the iSCSI Target.</summary>
        [global::Microsoft.Azure.PowerShell.Cmdlets.ElasticSan.PSArgumentCompleterAttribute("Invalid", "Unknown", "Healthy", "Unhealthy", "Updating", "Running", "Stopped", "Stopped (deallocated)")]
        string Status { get; set; }
        /// <summary>
        /// iSCSI Target IQN (iSCSI Qualified Name); example: "iqn.2005-03.org.iscsi:server".
        /// </summary>
        string TargetIqn { get; set; }
        /// <summary>iSCSI Target Portal Host Name</summary>
        string TargetPortalHostname { get; set; }
        /// <summary>iSCSI Target Portal Port</summary>
        int? TargetPortalPort { get; set; }

    }
}