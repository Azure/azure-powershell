// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.ApplicationInsights.Models.Api20150501
{
    using static Microsoft.Azure.PowerShell.Cmdlets.ApplicationInsights.Runtime.Extensions;

    /// <summary>
    /// An Application Insights component Continuous Export configuration request definition.
    /// </summary>
    public partial class ApplicationInsightsComponentExportRequest :
        Microsoft.Azure.PowerShell.Cmdlets.ApplicationInsights.Models.Api20150501.IApplicationInsightsComponentExportRequest,
        Microsoft.Azure.PowerShell.Cmdlets.ApplicationInsights.Models.Api20150501.IApplicationInsightsComponentExportRequestInternal
    {

        /// <summary>Backing field for <see cref="DestinationAccountId" /> property.</summary>
        private string _destinationAccountId;

        /// <summary>The name of destination storage account.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ApplicationInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.ApplicationInsights.PropertyOrigin.Owned)]
        public string DestinationAccountId { get => this._destinationAccountId; set => this._destinationAccountId = value; }

        /// <summary>Backing field for <see cref="DestinationAddress" /> property.</summary>
        private string _destinationAddress;

        /// <summary>
        /// The SAS URL for the destination storage container. It must grant write permission.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ApplicationInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.ApplicationInsights.PropertyOrigin.Owned)]
        public string DestinationAddress { get => this._destinationAddress; set => this._destinationAddress = value; }

        /// <summary>Backing field for <see cref="DestinationStorageLocationId" /> property.</summary>
        private string _destinationStorageLocationId;

        /// <summary>The location ID of the destination storage container.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ApplicationInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.ApplicationInsights.PropertyOrigin.Owned)]
        public string DestinationStorageLocationId { get => this._destinationStorageLocationId; set => this._destinationStorageLocationId = value; }

        /// <summary>Backing field for <see cref="DestinationStorageSubscriptionId" /> property.</summary>
        private string _destinationStorageSubscriptionId;

        /// <summary>The subscription ID of the destination storage container.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ApplicationInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.ApplicationInsights.PropertyOrigin.Owned)]
        public string DestinationStorageSubscriptionId { get => this._destinationStorageSubscriptionId; set => this._destinationStorageSubscriptionId = value; }

        /// <summary>Backing field for <see cref="DestinationType" /> property.</summary>
        private string _destinationType;

        /// <summary>The Continuous Export destination type. This has to be 'Blob'.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ApplicationInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.ApplicationInsights.PropertyOrigin.Owned)]
        public string DestinationType { get => this._destinationType; set => this._destinationType = value; }

        /// <summary>Backing field for <see cref="IsEnabled" /> property.</summary>
        private string _isEnabled;

        /// <summary>
        /// Set to 'true' to create a Continuous Export configuration as enabled, otherwise set it to 'false'.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ApplicationInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.ApplicationInsights.PropertyOrigin.Owned)]
        public string IsEnabled { get => this._isEnabled; set => this._isEnabled = value; }

        /// <summary>Backing field for <see cref="NotificationQueueEnabled" /> property.</summary>
        private string _notificationQueueEnabled;

        /// <summary>Deprecated</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ApplicationInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.ApplicationInsights.PropertyOrigin.Owned)]
        public string NotificationQueueEnabled { get => this._notificationQueueEnabled; set => this._notificationQueueEnabled = value; }

        /// <summary>Backing field for <see cref="NotificationQueueUri" /> property.</summary>
        private string _notificationQueueUri;

        /// <summary>Deprecated</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ApplicationInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.ApplicationInsights.PropertyOrigin.Owned)]
        public string NotificationQueueUri { get => this._notificationQueueUri; set => this._notificationQueueUri = value; }

        /// <summary>Backing field for <see cref="RecordType" /> property.</summary>
        private string _recordType;

        /// <summary>
        /// The document types to be exported, as comma separated values. Allowed values include 'Requests', 'Event', 'Exceptions',
        /// 'Metrics', 'PageViews', 'PageViewPerformance', 'Rdd', 'PerformanceCounters', 'Availability', 'Messages'.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ApplicationInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.ApplicationInsights.PropertyOrigin.Owned)]
        public string RecordType { get => this._recordType; set => this._recordType = value; }

        /// <summary>
        /// Creates an new <see cref="ApplicationInsightsComponentExportRequest" /> instance.
        /// </summary>
        public ApplicationInsightsComponentExportRequest()
        {

        }
    }
    /// An Application Insights component Continuous Export configuration request definition.
    public partial interface IApplicationInsightsComponentExportRequest :
        Microsoft.Azure.PowerShell.Cmdlets.ApplicationInsights.Runtime.IJsonSerializable
    {
        /// <summary>The name of destination storage account.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ApplicationInsights.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The name of destination storage account.",
        SerializedName = @"DestinationAccountId",
        PossibleTypes = new [] { typeof(string) })]
        string DestinationAccountId { get; set; }
        /// <summary>
        /// The SAS URL for the destination storage container. It must grant write permission.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ApplicationInsights.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The SAS URL for the destination storage container. It must grant write permission.",
        SerializedName = @"DestinationAddress",
        PossibleTypes = new [] { typeof(string) })]
        string DestinationAddress { get; set; }
        /// <summary>The location ID of the destination storage container.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ApplicationInsights.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The location ID of the destination storage container.",
        SerializedName = @"DestinationStorageLocationId",
        PossibleTypes = new [] { typeof(string) })]
        string DestinationStorageLocationId { get; set; }
        /// <summary>The subscription ID of the destination storage container.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ApplicationInsights.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The subscription ID of the destination storage container.",
        SerializedName = @"DestinationStorageSubscriptionId",
        PossibleTypes = new [] { typeof(string) })]
        string DestinationStorageSubscriptionId { get; set; }
        /// <summary>The Continuous Export destination type. This has to be 'Blob'.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ApplicationInsights.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The Continuous Export destination type. This has to be 'Blob'.",
        SerializedName = @"DestinationType",
        PossibleTypes = new [] { typeof(string) })]
        string DestinationType { get; set; }
        /// <summary>
        /// Set to 'true' to create a Continuous Export configuration as enabled, otherwise set it to 'false'.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ApplicationInsights.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Set to 'true' to create a Continuous Export configuration as enabled, otherwise set it to 'false'.",
        SerializedName = @"IsEnabled",
        PossibleTypes = new [] { typeof(string) })]
        string IsEnabled { get; set; }
        /// <summary>Deprecated</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ApplicationInsights.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Deprecated",
        SerializedName = @"NotificationQueueEnabled",
        PossibleTypes = new [] { typeof(string) })]
        string NotificationQueueEnabled { get; set; }
        /// <summary>Deprecated</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ApplicationInsights.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Deprecated",
        SerializedName = @"NotificationQueueUri",
        PossibleTypes = new [] { typeof(string) })]
        string NotificationQueueUri { get; set; }
        /// <summary>
        /// The document types to be exported, as comma separated values. Allowed values include 'Requests', 'Event', 'Exceptions',
        /// 'Metrics', 'PageViews', 'PageViewPerformance', 'Rdd', 'PerformanceCounters', 'Availability', 'Messages'.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ApplicationInsights.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The document types to be exported, as comma separated values. Allowed values include 'Requests', 'Event', 'Exceptions', 'Metrics', 'PageViews', 'PageViewPerformance', 'Rdd', 'PerformanceCounters', 'Availability', 'Messages'.",
        SerializedName = @"RecordTypes",
        PossibleTypes = new [] { typeof(string) })]
        string RecordType { get; set; }

    }
    /// An Application Insights component Continuous Export configuration request definition.
    internal partial interface IApplicationInsightsComponentExportRequestInternal

    {
        /// <summary>The name of destination storage account.</summary>
        string DestinationAccountId { get; set; }
        /// <summary>
        /// The SAS URL for the destination storage container. It must grant write permission.
        /// </summary>
        string DestinationAddress { get; set; }
        /// <summary>The location ID of the destination storage container.</summary>
        string DestinationStorageLocationId { get; set; }
        /// <summary>The subscription ID of the destination storage container.</summary>
        string DestinationStorageSubscriptionId { get; set; }
        /// <summary>The Continuous Export destination type. This has to be 'Blob'.</summary>
        string DestinationType { get; set; }
        /// <summary>
        /// Set to 'true' to create a Continuous Export configuration as enabled, otherwise set it to 'false'.
        /// </summary>
        string IsEnabled { get; set; }
        /// <summary>Deprecated</summary>
        string NotificationQueueEnabled { get; set; }
        /// <summary>Deprecated</summary>
        string NotificationQueueUri { get; set; }
        /// <summary>
        /// The document types to be exported, as comma separated values. Allowed values include 'Requests', 'Event', 'Exceptions',
        /// 'Metrics', 'PageViews', 'PageViewPerformance', 'Rdd', 'PerformanceCounters', 'Availability', 'Messages'.
        /// </summary>
        string RecordType { get; set; }

    }
}