// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.ApplicationInsights.Models.Api20150501
{
    using static Microsoft.Azure.PowerShell.Cmdlets.ApplicationInsights.Runtime.Extensions;

    /// <summary>An Application Insights component daily data volume cap status</summary>
    public partial class ApplicationInsightsComponentQuotaStatus :
        Microsoft.Azure.PowerShell.Cmdlets.ApplicationInsights.Models.Api20150501.IApplicationInsightsComponentQuotaStatus,
        Microsoft.Azure.PowerShell.Cmdlets.ApplicationInsights.Models.Api20150501.IApplicationInsightsComponentQuotaStatusInternal
    {

        /// <summary>Backing field for <see cref="AppId" /> property.</summary>
        private string _appId;

        /// <summary>The Application ID for the Application Insights component.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ApplicationInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.ApplicationInsights.PropertyOrigin.Owned)]
        public string AppId { get => this._appId; }

        /// <summary>Backing field for <see cref="ExpirationTime" /> property.</summary>
        private string _expirationTime;

        /// <summary>
        /// Date and time when the daily data volume cap will be reset, and data ingestion will resume.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ApplicationInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.ApplicationInsights.PropertyOrigin.Owned)]
        public string ExpirationTime { get => this._expirationTime; }

        /// <summary>Internal Acessors for AppId</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.ApplicationInsights.Models.Api20150501.IApplicationInsightsComponentQuotaStatusInternal.AppId { get => this._appId; set { {_appId = value;} } }

        /// <summary>Internal Acessors for ExpirationTime</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.ApplicationInsights.Models.Api20150501.IApplicationInsightsComponentQuotaStatusInternal.ExpirationTime { get => this._expirationTime; set { {_expirationTime = value;} } }

        /// <summary>Internal Acessors for ShouldBeThrottled</summary>
        bool? Microsoft.Azure.PowerShell.Cmdlets.ApplicationInsights.Models.Api20150501.IApplicationInsightsComponentQuotaStatusInternal.ShouldBeThrottled { get => this._shouldBeThrottled; set { {_shouldBeThrottled = value;} } }

        /// <summary>Backing field for <see cref="ShouldBeThrottled" /> property.</summary>
        private bool? _shouldBeThrottled;

        /// <summary>The daily data volume cap is met, and data ingestion will be stopped.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ApplicationInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.ApplicationInsights.PropertyOrigin.Owned)]
        public bool? ShouldBeThrottled { get => this._shouldBeThrottled; }

        /// <summary>Creates an new <see cref="ApplicationInsightsComponentQuotaStatus" /> instance.</summary>
        public ApplicationInsightsComponentQuotaStatus()
        {

        }
    }
    /// An Application Insights component daily data volume cap status
    public partial interface IApplicationInsightsComponentQuotaStatus :
        Microsoft.Azure.PowerShell.Cmdlets.ApplicationInsights.Runtime.IJsonSerializable
    {
        /// <summary>The Application ID for the Application Insights component.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ApplicationInsights.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The Application ID for the Application Insights component.",
        SerializedName = @"AppId",
        PossibleTypes = new [] { typeof(string) })]
        string AppId { get;  }
        /// <summary>
        /// Date and time when the daily data volume cap will be reset, and data ingestion will resume.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ApplicationInsights.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Date and time when the daily data volume cap will be reset, and data ingestion will resume.",
        SerializedName = @"ExpirationTime",
        PossibleTypes = new [] { typeof(string) })]
        string ExpirationTime { get;  }
        /// <summary>The daily data volume cap is met, and data ingestion will be stopped.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ApplicationInsights.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The daily data volume cap is met, and data ingestion will be stopped.",
        SerializedName = @"ShouldBeThrottled",
        PossibleTypes = new [] { typeof(bool) })]
        bool? ShouldBeThrottled { get;  }

    }
    /// An Application Insights component daily data volume cap status
    internal partial interface IApplicationInsightsComponentQuotaStatusInternal

    {
        /// <summary>The Application ID for the Application Insights component.</summary>
        string AppId { get; set; }
        /// <summary>
        /// Date and time when the daily data volume cap will be reset, and data ingestion will resume.
        /// </summary>
        string ExpirationTime { get; set; }
        /// <summary>The daily data volume cap is met, and data ingestion will be stopped.</summary>
        bool? ShouldBeThrottled { get; set; }

    }
}