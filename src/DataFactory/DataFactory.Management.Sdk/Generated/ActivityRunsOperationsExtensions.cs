// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.
namespace Microsoft.Azure.Management.DataFactory
{
    using Microsoft.Rest.Azure;
    using Models;

    /// <summary>
    /// Extension methods for ActivityRunsOperations
    /// </summary>
    public static partial class ActivityRunsOperationsExtensions
    {
        /// <summary>
        /// Query activity runs based on input filter conditions.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='resourceGroupName'>
        /// The resource group name.
        /// </param>
        /// <param name='factoryName'>
        /// The factory name.
        /// </param>
        /// <param name='runId'>
        /// The pipeline run identifier.
        /// </param>
        public static ActivityRunsQueryResponse QueryByPipelineRun(this IActivityRunsOperations operations, string resourceGroupName, string factoryName, string runId, RunFilterParameters filterParameters)
        {
                return ((IActivityRunsOperations)operations).QueryByPipelineRunAsync(resourceGroupName, factoryName, runId, filterParameters).GetAwaiter().GetResult();
        }

        /// <summary>
        /// Query activity runs based on input filter conditions.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='resourceGroupName'>
        /// The resource group name.
        /// </param>
        /// <param name='factoryName'>
        /// The factory name.
        /// </param>
        /// <param name='runId'>
        /// The pipeline run identifier.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        public static async System.Threading.Tasks.Task<ActivityRunsQueryResponse> QueryByPipelineRunAsync(this IActivityRunsOperations operations, string resourceGroupName, string factoryName, string runId, RunFilterParameters filterParameters, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            using (var _result = await operations.QueryByPipelineRunWithHttpMessagesAsync(resourceGroupName, factoryName, runId, filterParameters, null, cancellationToken).ConfigureAwait(false))
            {
                return _result.Body;
            }
        }
    }
}
