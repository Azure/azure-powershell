// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.DataFactory.Models
{
    using System.Linq;

    /// <summary>
    /// A copy activity source for sharePoint online list source.
    /// </summary>
    [Newtonsoft.Json.JsonObject("SharePointOnlineListSource")]
    public partial class SharePointOnlineListSource : CopySource
    {
        /// <summary>
        /// Initializes a new instance of the SharePointOnlineListSource class.
        /// </summary>
        public SharePointOnlineListSource()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the SharePointOnlineListSource class.
        /// </summary>

        /// <param name="sourceRetryCount">Source retry count. Type: integer (or Expression with resultType integer).
        /// </param>

        /// <param name="sourceRetryWait">Source retry wait. Type: string (or Expression with resultType string),
        /// pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
        /// </param>

        /// <param name="maxConcurrentConnections">The maximum concurrent connection count for the source data store. Type:
        /// integer (or Expression with resultType integer).
        /// </param>

        /// <param name="disableMetricsCollection">If true, disable data store metrics collection. Default is false. Type:
        /// boolean (or Expression with resultType boolean).
        /// </param>

        /// <param name="query">The OData query to filter the data in SharePoint Online list. For example,
        /// &#34;$top=1&#34;. Type: string (or Expression with resultType string).
        /// </param>

        /// <param name="httpRequestTimeout">The wait time to get a response from SharePoint Online. Default value is 5
        /// minutes (00:05:00). Type: string (or Expression with resultType string),
        /// pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
        /// </param>
        public SharePointOnlineListSource(object sourceRetryCount = default(object), object sourceRetryWait = default(object), object maxConcurrentConnections = default(object), object disableMetricsCollection = default(object), object query = default(object), object httpRequestTimeout = default(object))

        : base(sourceRetryCount, sourceRetryWait, maxConcurrentConnections, disableMetricsCollection)
        {
            this.Query = query;
            this.HttpRequestTimeout = httpRequestTimeout;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets or sets the OData query to filter the data in SharePoint Online list.
        /// For example, &#34;$top=1&#34;. Type: string (or Expression with resultType string).
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "query")]
        public object Query {get; set; }

        /// <summary>
        /// Gets or sets the wait time to get a response from SharePoint Online.
        /// Default value is 5 minutes (00:05:00). Type: string (or Expression with
        /// resultType string), pattern:
        /// ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "httpRequestTimeout")]
        public object HttpRequestTimeout {get; set; }
    }
}