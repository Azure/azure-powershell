// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.DataFactory.Models
{
    using System.Linq;

    /// <summary>
    /// Azure Blob Storage linked service properties.
    /// </summary>
    public partial class AzureBlobStorageLinkedServiceTypeProperties
    {
        /// <summary>
        /// Initializes a new instance of the AzureBlobStorageLinkedServiceTypeProperties class.
        /// </summary>
        public AzureBlobStorageLinkedServiceTypeProperties()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the AzureBlobStorageLinkedServiceTypeProperties class.
        /// </summary>

        /// <param name="connectionString">The connection string. It is mutually exclusive with sasUri,
        /// serviceEndpoint property. Type: string, SecureString or
        /// AzureKeyVaultSecretReference.
        /// </param>

        /// <param name="accountKey">The Azure key vault secret reference of accountKey in connection string.
        /// </param>

        /// <param name="sasUri">SAS URI of the Azure Blob Storage resource. It is mutually exclusive with
        /// connectionString, serviceEndpoint property. Type: string, SecureString or
        /// AzureKeyVaultSecretReference.
        /// </param>

        /// <param name="sasToken">The Azure key vault secret reference of sasToken in sas uri.
        /// </param>

        /// <param name="serviceEndpoint">Blob service endpoint of the Azure Blob Storage resource. It is mutually
        /// exclusive with connectionString, sasUri property.
        /// </param>

        /// <param name="servicePrincipalId">The ID of the service principal used to authenticate against Azure SQL Data
        /// Warehouse. Type: string (or Expression with resultType string).
        /// </param>

        /// <param name="servicePrincipalKey">The key of the service principal used to authenticate against Azure SQL
        /// Data Warehouse.
        /// </param>

        /// <param name="tenant">The name or ID of the tenant to which the service principal belongs. Type:
        /// string (or Expression with resultType string).
        /// </param>

        /// <param name="azureCloudType">Indicates the azure cloud type of the service principle auth. Allowed
        /// values are AzurePublic, AzureChina, AzureUsGovernment, AzureGermany.
        /// Default value is the data factory regions’ cloud type. Type: string (or
        /// Expression with resultType string).
        /// </param>

        /// <param name="accountKind">Specify the kind of your storage account. Allowed values are: Storage
        /// (general purpose v1), StorageV2 (general purpose v2), BlobStorage, or
        /// BlockBlobStorage. Type: string (or Expression with resultType string).
        /// </param>

        /// <param name="encryptedCredential">The encrypted credential used for authentication. Credentials are encrypted
        /// using the integration runtime credential manager. Type: string.
        /// </param>

        /// <param name="credential">The credential reference containing authentication information.
        /// </param>

        /// <param name="authenticationType">The type used for authentication. Type: string.
        /// Possible values include: &#39;Anonymous&#39;, &#39;AccountKey&#39;, &#39;SasUri&#39;,
        /// &#39;ServicePrincipal&#39;, &#39;Msi&#39;</param>

        /// <param name="containerUri">Container uri of the Azure Blob Storage resource only support for anonymous
        /// access. Type: string (or Expression with resultType string).
        /// </param>
        public AzureBlobStorageLinkedServiceTypeProperties(object connectionString = default(object), AzureKeyVaultSecretReference accountKey = default(AzureKeyVaultSecretReference), object sasUri = default(object), AzureKeyVaultSecretReference sasToken = default(AzureKeyVaultSecretReference), object serviceEndpoint = default(object), object servicePrincipalId = default(object), SecretBase servicePrincipalKey = default(SecretBase), object tenant = default(object), object azureCloudType = default(object), object accountKind = default(object), string encryptedCredential = default(string), CredentialReference credential = default(CredentialReference), string authenticationType = default(string), object containerUri = default(object))

        {
            this.ConnectionString = connectionString;
            this.AccountKey = accountKey;
            this.SasUri = sasUri;
            this.SasToken = sasToken;
            this.ServiceEndpoint = serviceEndpoint;
            this.ServicePrincipalId = servicePrincipalId;
            this.ServicePrincipalKey = servicePrincipalKey;
            this.Tenant = tenant;
            this.AzureCloudType = azureCloudType;
            this.AccountKind = accountKind;
            this.EncryptedCredential = encryptedCredential;
            this.Credential = credential;
            this.AuthenticationType = authenticationType;
            this.ContainerUri = containerUri;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets or sets the connection string. It is mutually exclusive with sasUri,
        /// serviceEndpoint property. Type: string, SecureString or
        /// AzureKeyVaultSecretReference.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "connectionString")]
        public object ConnectionString {get; set; }

        /// <summary>
        /// Gets or sets the Azure key vault secret reference of accountKey in
        /// connection string.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "accountKey")]
        public AzureKeyVaultSecretReference AccountKey {get; set; }

        /// <summary>
        /// Gets or sets sAS URI of the Azure Blob Storage resource. It is mutually
        /// exclusive with connectionString, serviceEndpoint property. Type: string,
        /// SecureString or AzureKeyVaultSecretReference.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "sasUri")]
        public object SasUri {get; set; }

        /// <summary>
        /// Gets or sets the Azure key vault secret reference of sasToken in sas uri.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "sasToken")]
        public AzureKeyVaultSecretReference SasToken {get; set; }

        /// <summary>
        /// Gets or sets blob service endpoint of the Azure Blob Storage resource. It
        /// is mutually exclusive with connectionString, sasUri property.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "serviceEndpoint")]
        public object ServiceEndpoint {get; set; }

        /// <summary>
        /// Gets or sets the ID of the service principal used to authenticate against
        /// Azure SQL Data Warehouse. Type: string (or Expression with resultType
        /// string).
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "servicePrincipalId")]
        public object ServicePrincipalId {get; set; }

        /// <summary>
        /// Gets or sets the key of the service principal used to authenticate against
        /// Azure SQL Data Warehouse.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "servicePrincipalKey")]
        public SecretBase ServicePrincipalKey {get; set; }

        /// <summary>
        /// Gets or sets the name or ID of the tenant to which the service principal
        /// belongs. Type: string (or Expression with resultType string).
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "tenant")]
        public object Tenant {get; set; }

        /// <summary>
        /// Gets or sets indicates the azure cloud type of the service principle auth.
        /// Allowed values are AzurePublic, AzureChina, AzureUsGovernment,
        /// AzureGermany. Default value is the data factory regions’ cloud type. Type:
        /// string (or Expression with resultType string).
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "azureCloudType")]
        public object AzureCloudType {get; set; }

        /// <summary>
        /// Gets or sets specify the kind of your storage account. Allowed values are:
        /// Storage (general purpose v1), StorageV2 (general purpose v2), BlobStorage,
        /// or BlockBlobStorage. Type: string (or Expression with resultType string).
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "accountKind")]
        public object AccountKind {get; set; }

        /// <summary>
        /// Gets or sets the encrypted credential used for authentication. Credentials
        /// are encrypted using the integration runtime credential manager. Type:
        /// string.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "encryptedCredential")]
        public string EncryptedCredential {get; set; }

        /// <summary>
        /// Gets or sets the credential reference containing authentication
        /// information.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "credential")]
        public CredentialReference Credential {get; set; }

        /// <summary>
        /// Gets or sets the type used for authentication. Type: string. Possible values include: &#39;Anonymous&#39;, &#39;AccountKey&#39;, &#39;SasUri&#39;, &#39;ServicePrincipal&#39;, &#39;Msi&#39;
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "authenticationType")]
        public string AuthenticationType {get; set; }

        /// <summary>
        /// Gets or sets container uri of the Azure Blob Storage resource only support
        /// for anonymous access. Type: string (or Expression with resultType string).
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "containerUri")]
        public object ContainerUri {get; set; }
        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {

            if (this.AccountKey != null)
            {
                this.AccountKey.Validate();
            }

            if (this.SasToken != null)
            {
                this.SasToken.Validate();
            }







            if (this.Credential != null)
            {
                this.Credential.Validate();
            }


        }
    }
}