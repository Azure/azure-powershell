// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.DataFactory.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// Source and target column mapping details.
    /// </summary>
    public partial class MapperAttributeMapping
    {
        /// <summary>
        /// Initializes a new instance of the MapperAttributeMapping class.
        /// </summary>
        public MapperAttributeMapping()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the MapperAttributeMapping class.
        /// </summary>
        /// <param name="name">Name of the target column.</param>
        /// <param name="type">Type of the CDC attribute mapping. Note:
        /// 'Advanced' mapping type is also saved as 'Derived'. Possible values
        /// include: 'Direct', 'Derived', 'Aggregate'</param>
        /// <param name="functionName">Name of the function used for
        /// 'Aggregate' and 'Derived' (except 'Advanced') type mapping.</param>
        /// <param name="expression">Expression used for 'Aggregate' and
        /// 'Derived' type mapping.</param>
        /// <param name="attributeReference">Reference of the source column
        /// used in the mapping. It is used for 'Direct' mapping type
        /// only.</param>
        /// <param name="attributeReferences">List of references for source
        /// columns. It is used for 'Derived' and 'Aggregate' type mappings
        /// only.</param>
        public MapperAttributeMapping(string name = default(string), string type = default(string), string functionName = default(string), string expression = default(string), MapperAttributeReference attributeReference = default(MapperAttributeReference), IList<MapperAttributeReference> attributeReferences = default(IList<MapperAttributeReference>))
        {
            Name = name;
            Type = type;
            FunctionName = functionName;
            Expression = expression;
            AttributeReference = attributeReference;
            AttributeReferences = attributeReferences;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets name of the target column.
        /// </summary>
        [JsonProperty(PropertyName = "name")]
        public string Name { get; set; }

        /// <summary>
        /// Gets or sets type of the CDC attribute mapping. Note: 'Advanced'
        /// mapping type is also saved as 'Derived'. Possible values include:
        /// 'Direct', 'Derived', 'Aggregate'
        /// </summary>
        [JsonProperty(PropertyName = "type")]
        public string Type { get; set; }

        /// <summary>
        /// Gets or sets name of the function used for 'Aggregate' and
        /// 'Derived' (except 'Advanced') type mapping.
        /// </summary>
        [JsonProperty(PropertyName = "functionName")]
        public string FunctionName { get; set; }

        /// <summary>
        /// Gets or sets expression used for 'Aggregate' and 'Derived' type
        /// mapping.
        /// </summary>
        [JsonProperty(PropertyName = "expression")]
        public string Expression { get; set; }

        /// <summary>
        /// Gets or sets reference of the source column used in the mapping. It
        /// is used for 'Direct' mapping type only.
        /// </summary>
        [JsonProperty(PropertyName = "attributeReference")]
        public MapperAttributeReference AttributeReference { get; set; }

        /// <summary>
        /// Gets or sets list of references for source columns. It is used for
        /// 'Derived' and 'Aggregate' type mappings only.
        /// </summary>
        [JsonProperty(PropertyName = "attributeReferences")]
        public IList<MapperAttributeReference> AttributeReferences { get; set; }

    }
}
