// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.DataFactory.Models
{
    using System.Linq;

    /// <summary>
    /// The compression method used on a dataset.
    /// </summary>
    public partial class DatasetCompression
    {
        /// <summary>
        /// Initializes a new instance of the DatasetCompression class.
        /// </summary>
        public DatasetCompression()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the DatasetCompression class.
        /// </summary>

        /// <param name="additionalProperties">The compression method used on a dataset.
        /// </param>

        /// <param name="type">Type of dataset compression. Type: string (or Expression with resultType
        /// string).
        /// </param>

        /// <param name="level">The dataset compression level. Type: string (or Expression with resultType
        /// string).
        /// </param>
        public DatasetCompression(object type, System.Collections.Generic.IDictionary<string, object> additionalProperties = default(System.Collections.Generic.IDictionary<string, object>), object level = default(object))

        {
            this.AdditionalProperties = additionalProperties;
            this.Type = type;
            this.Level = level;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets or sets the compression method used on a dataset.
        /// </summary>
        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties {get; set; }

        /// <summary>
        /// Gets or sets type of dataset compression. Type: string (or Expression with
        /// resultType string).
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "type")]
        public object Type {get; set; }

        /// <summary>
        /// Gets or sets the dataset compression level. Type: string (or Expression
        /// with resultType string).
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "level")]
        public object Level {get; set; }
        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (this.Type == null)
            {
                throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.CannotBeNull, "Type");
            }



        }
    }
}