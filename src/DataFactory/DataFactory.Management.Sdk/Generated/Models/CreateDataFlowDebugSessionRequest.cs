// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.DataFactory.Models
{
    using System.Linq;

    /// <summary>
    /// Request body structure for creating data flow debug session.
    /// </summary>
    public partial class CreateDataFlowDebugSessionRequest
    {
        /// <summary>
        /// Initializes a new instance of the CreateDataFlowDebugSessionRequest class.
        /// </summary>
        public CreateDataFlowDebugSessionRequest()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the CreateDataFlowDebugSessionRequest class.
        /// </summary>

        /// <param name="computeType">Compute type of the cluster. The value will be overwritten by the same
        /// setting in integration runtime if provided.
        /// </param>

        /// <param name="coreCount">Core count of the cluster. The value will be overwritten by the same
        /// setting in integration runtime if provided.
        /// </param>

        /// <param name="timeToLive">Time to live setting of the cluster in minutes.
        /// </param>

        /// <param name="integrationRuntime">Set to use integration runtime setting for data flow debug session.
        /// </param>
        public CreateDataFlowDebugSessionRequest(string computeType = default(string), int? coreCount = default(int?), int? timeToLive = default(int?), IntegrationRuntimeDebugResource integrationRuntime = default(IntegrationRuntimeDebugResource))

        {
            this.ComputeType = computeType;
            this.CoreCount = coreCount;
            this.TimeToLive = timeToLive;
            this.IntegrationRuntime = integrationRuntime;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets or sets compute type of the cluster. The value will be overwritten by
        /// the same setting in integration runtime if provided.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "computeType")]
        public string ComputeType {get; set; }

        /// <summary>
        /// Gets or sets core count of the cluster. The value will be overwritten by
        /// the same setting in integration runtime if provided.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "coreCount")]
        public int? CoreCount {get; set; }

        /// <summary>
        /// Gets or sets time to live setting of the cluster in minutes.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "timeToLive")]
        public int? TimeToLive {get; set; }

        /// <summary>
        /// Gets or sets set to use integration runtime setting for data flow debug
        /// session.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "integrationRuntime")]
        public IntegrationRuntimeDebugResource IntegrationRuntime {get; set; }
        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {

            if (this.IntegrationRuntime != null)
            {
                this.IntegrationRuntime.Validate();
            }
        }
    }
}