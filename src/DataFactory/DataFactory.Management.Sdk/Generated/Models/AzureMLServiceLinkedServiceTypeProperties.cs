// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.DataFactory.Models
{
    using System.Linq;

    /// <summary>
    /// Azure ML Service linked service properties.
    /// </summary>
    public partial class AzureMLServiceLinkedServiceTypeProperties
    {
        /// <summary>
        /// Initializes a new instance of the AzureMLServiceLinkedServiceTypeProperties class.
        /// </summary>
        public AzureMLServiceLinkedServiceTypeProperties()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the AzureMLServiceLinkedServiceTypeProperties class.
        /// </summary>

        /// <param name="subscriptionId">Azure ML Service workspace subscription ID. Type: string (or Expression
        /// with resultType string).
        /// </param>

        /// <param name="resourceGroupName">Azure ML Service workspace resource group name. Type: string (or Expression
        /// with resultType string).
        /// </param>

        /// <param name="mlWorkspaceName">Azure ML Service workspace name. Type: string (or Expression with
        /// resultType string).
        /// </param>

        /// <param name="authentication">Type of authentication (Required to specify MSI) used to connect to
        /// AzureML. Type: string (or Expression with resultType string).
        /// </param>

        /// <param name="servicePrincipalId">The ID of the service principal used to authenticate against the endpoint
        /// of a published Azure ML Service pipeline. Type: string (or Expression with
        /// resultType string).
        /// </param>

        /// <param name="servicePrincipalKey">The key of the service principal used to authenticate against the endpoint
        /// of a published Azure ML Service pipeline.
        /// </param>

        /// <param name="tenant">The name or ID of the tenant to which the service principal belongs. Type:
        /// string (or Expression with resultType string).
        /// </param>

        /// <param name="encryptedCredential">The encrypted credential used for authentication. Credentials are encrypted
        /// using the integration runtime credential manager. Type: string.
        /// </param>
        public AzureMLServiceLinkedServiceTypeProperties(object subscriptionId, object resourceGroupName, object mlWorkspaceName, object authentication = default(object), object servicePrincipalId = default(object), SecretBase servicePrincipalKey = default(SecretBase), object tenant = default(object), string encryptedCredential = default(string))

        {
            this.SubscriptionId = subscriptionId;
            this.ResourceGroupName = resourceGroupName;
            this.MlWorkspaceName = mlWorkspaceName;
            this.Authentication = authentication;
            this.ServicePrincipalId = servicePrincipalId;
            this.ServicePrincipalKey = servicePrincipalKey;
            this.Tenant = tenant;
            this.EncryptedCredential = encryptedCredential;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets or sets azure ML Service workspace subscription ID. Type: string (or
        /// Expression with resultType string).
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "subscriptionId")]
        public object SubscriptionId {get; set; }

        /// <summary>
        /// Gets or sets azure ML Service workspace resource group name. Type: string
        /// (or Expression with resultType string).
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "resourceGroupName")]
        public object ResourceGroupName {get; set; }

        /// <summary>
        /// Gets or sets azure ML Service workspace name. Type: string (or Expression
        /// with resultType string).
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "mlWorkspaceName")]
        public object MlWorkspaceName {get; set; }

        /// <summary>
        /// Gets or sets type of authentication (Required to specify MSI) used to
        /// connect to AzureML. Type: string (or Expression with resultType string).
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "authentication")]
        public object Authentication {get; set; }

        /// <summary>
        /// Gets or sets the ID of the service principal used to authenticate against
        /// the endpoint of a published Azure ML Service pipeline. Type: string (or
        /// Expression with resultType string).
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "servicePrincipalId")]
        public object ServicePrincipalId {get; set; }

        /// <summary>
        /// Gets or sets the key of the service principal used to authenticate against
        /// the endpoint of a published Azure ML Service pipeline.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "servicePrincipalKey")]
        public SecretBase ServicePrincipalKey {get; set; }

        /// <summary>
        /// Gets or sets the name or ID of the tenant to which the service principal
        /// belongs. Type: string (or Expression with resultType string).
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "tenant")]
        public object Tenant {get; set; }

        /// <summary>
        /// Gets or sets the encrypted credential used for authentication. Credentials
        /// are encrypted using the integration runtime credential manager. Type:
        /// string.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "encryptedCredential")]
        public string EncryptedCredential {get; set; }
        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (this.SubscriptionId == null)
            {
                throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.CannotBeNull, "SubscriptionId");
            }
            if (this.ResourceGroupName == null)
            {
                throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.CannotBeNull, "ResourceGroupName");
            }
            if (this.MlWorkspaceName == null)
            {
                throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.CannotBeNull, "MlWorkspaceName");
            }








        }
    }
}