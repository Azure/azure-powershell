// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.DataFactory.Models
{
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// CDC table details.
    /// </summary>
    [Rest.Serialization.JsonTransformation]
    public partial class MapperTable
    {
        /// <summary>
        /// Initializes a new instance of the MapperTable class.
        /// </summary>
        public MapperTable()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the MapperTable class.
        /// </summary>
        /// <param name="name">Name of the table.</param>
        /// <param name="schema">List of columns for the source table.</param>
        /// <param name="dslConnectorProperties">List of name/value pairs for
        /// connection properties.</param>
        public MapperTable(string name = default(string), IList<MapperTableSchema> schema = default(IList<MapperTableSchema>), IList<MapperDslConnectorProperties> dslConnectorProperties = default(IList<MapperDslConnectorProperties>))
        {
            Name = name;
            Schema = schema;
            DslConnectorProperties = dslConnectorProperties;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets name of the table.
        /// </summary>
        [JsonProperty(PropertyName = "name")]
        public string Name { get; set; }

        /// <summary>
        /// Gets or sets list of columns for the source table.
        /// </summary>
        [JsonProperty(PropertyName = "properties.schema")]
        public IList<MapperTableSchema> Schema { get; set; }

        /// <summary>
        /// Gets or sets list of name/value pairs for connection properties.
        /// </summary>
        [JsonProperty(PropertyName = "properties.dslConnectorProperties")]
        public IList<MapperDslConnectorProperties> DslConnectorProperties { get; set; }

    }
}
