// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.DataFactory.Models
{
    using System.Linq;

    /// <summary>
    /// Validation activity properties.
    /// </summary>
    public partial class ValidationActivityTypeProperties
    {
        /// <summary>
        /// Initializes a new instance of the ValidationActivityTypeProperties class.
        /// </summary>
        public ValidationActivityTypeProperties()
        {
            this.Dataset = new DatasetReference();
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the ValidationActivityTypeProperties class.
        /// </summary>

        /// <param name="timeout">Specifies the timeout for the activity to run. If there is no value
        /// specified, it takes the value of TimeSpan.FromDays(7) which is 1 week as
        /// default. Type: string (or Expression with resultType string), pattern:
        /// ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
        /// </param>

        /// <param name="sleep">A delay in seconds between validation attempts. If no value is specified,
        /// 10 seconds will be used as the default. Type: integer (or Expression with
        /// resultType integer).
        /// </param>

        /// <param name="minimumSize">Can be used if dataset points to a file. The file must be greater than or
        /// equal in size to the value specified. Type: integer (or Expression with
        /// resultType integer).
        /// </param>

        /// <param name="childItems">Can be used if dataset points to a folder. If set to true, the folder must
        /// have at least one file. If set to false, the folder must be empty. Type:
        /// boolean (or Expression with resultType boolean).
        /// </param>

        /// <param name="dataset">Validation activity dataset reference.
        /// </param>
        public ValidationActivityTypeProperties(DatasetReference dataset, object timeout = default(object), object sleep = default(object), object minimumSize = default(object), object childItems = default(object))

        {
            this.Timeout = timeout;
            this.Sleep = sleep;
            this.MinimumSize = minimumSize;
            this.ChildItems = childItems;
            this.Dataset = dataset;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets or sets specifies the timeout for the activity to run. If there is no
        /// value specified, it takes the value of TimeSpan.FromDays(7) which is 1 week
        /// as default. Type: string (or Expression with resultType string), pattern:
        /// ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "timeout")]
        public object Timeout {get; set; }

        /// <summary>
        /// Gets or sets a delay in seconds between validation attempts. If no value is
        /// specified, 10 seconds will be used as the default. Type: integer (or
        /// Expression with resultType integer).
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "sleep")]
        public object Sleep {get; set; }

        /// <summary>
        /// Gets or sets can be used if dataset points to a file. The file must be
        /// greater than or equal in size to the value specified. Type: integer (or
        /// Expression with resultType integer).
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "minimumSize")]
        public object MinimumSize {get; set; }

        /// <summary>
        /// Gets or sets can be used if dataset points to a folder. If set to true, the
        /// folder must have at least one file. If set to false, the folder must be
        /// empty. Type: boolean (or Expression with resultType boolean).
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "childItems")]
        public object ChildItems {get; set; }

        /// <summary>
        /// Gets or sets validation activity dataset reference.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "dataset")]
        public DatasetReference Dataset {get; set; }
        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (this.Dataset == null)
            {
                throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.CannotBeNull, "Dataset");
            }




            if (this.Dataset != null)
            {
                this.Dataset.Validate();
            }
        }
    }
}