// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.DataFactory.Models
{
    using System.Linq;

    /// <summary>
    /// Microsoft Fabric LakeHouse linked service properties.
    /// </summary>
    public partial class LakeHouseLinkedServiceTypeProperties
    {
        /// <summary>
        /// Initializes a new instance of the LakeHouseLinkedServiceTypeProperties class.
        /// </summary>
        public LakeHouseLinkedServiceTypeProperties()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the LakeHouseLinkedServiceTypeProperties class.
        /// </summary>

        /// <param name="workspaceId">The ID of Microsoft Fabric workspace. Type: string (or Expression with
        /// resultType string).
        /// </param>

        /// <param name="artifactId">The ID of Microsoft Fabric LakeHouse artifact. Type: string (or Expression
        /// with resultType string).
        /// </param>

        /// <param name="servicePrincipalId">The ID of the application used to authenticate against Microsoft Fabric
        /// LakeHouse. Type: string (or Expression with resultType string).
        /// </param>

        /// <param name="servicePrincipalKey">The Key of the application used to authenticate against Microsoft Fabric
        /// LakeHouse.
        /// </param>

        /// <param name="tenant">The name or ID of the tenant to which the service principal belongs. Type:
        /// string (or Expression with resultType string).
        /// </param>

        /// <param name="encryptedCredential">The encrypted credential used for authentication. Credentials are encrypted
        /// using the integration runtime credential manager. Type: string.
        /// </param>

        /// <param name="servicePrincipalCredentialType">The service principal credential type to use in Server-To-Server
        /// authentication. &#39;ServicePrincipalKey&#39; for key/secret,
        /// &#39;ServicePrincipalCert&#39; for certificate. Type: string (or Expression with
        /// resultType string).
        /// </param>

        /// <param name="servicePrincipalCredential">The credential of the service principal object in Azure Active Directory.
        /// If servicePrincipalCredentialType is &#39;ServicePrincipalKey&#39;,
        /// servicePrincipalCredential can be SecureString or
        /// AzureKeyVaultSecretReference. If servicePrincipalCredentialType is
        /// &#39;ServicePrincipalCert&#39;, servicePrincipalCredential can only be
        /// AzureKeyVaultSecretReference.
        /// </param>
        public LakeHouseLinkedServiceTypeProperties(object workspaceId = default(object), object artifactId = default(object), object servicePrincipalId = default(object), SecretBase servicePrincipalKey = default(SecretBase), object tenant = default(object), string encryptedCredential = default(string), object servicePrincipalCredentialType = default(object), SecretBase servicePrincipalCredential = default(SecretBase))

        {
            this.WorkspaceId = workspaceId;
            this.ArtifactId = artifactId;
            this.ServicePrincipalId = servicePrincipalId;
            this.ServicePrincipalKey = servicePrincipalKey;
            this.Tenant = tenant;
            this.EncryptedCredential = encryptedCredential;
            this.ServicePrincipalCredentialType = servicePrincipalCredentialType;
            this.ServicePrincipalCredential = servicePrincipalCredential;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets or sets the ID of Microsoft Fabric workspace. Type: string (or
        /// Expression with resultType string).
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "workspaceId")]
        public object WorkspaceId {get; set; }

        /// <summary>
        /// Gets or sets the ID of Microsoft Fabric LakeHouse artifact. Type: string
        /// (or Expression with resultType string).
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "artifactId")]
        public object ArtifactId {get; set; }

        /// <summary>
        /// Gets or sets the ID of the application used to authenticate against
        /// Microsoft Fabric LakeHouse. Type: string (or Expression with resultType
        /// string).
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "servicePrincipalId")]
        public object ServicePrincipalId {get; set; }

        /// <summary>
        /// Gets or sets the Key of the application used to authenticate against
        /// Microsoft Fabric LakeHouse.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "servicePrincipalKey")]
        public SecretBase ServicePrincipalKey {get; set; }

        /// <summary>
        /// Gets or sets the name or ID of the tenant to which the service principal
        /// belongs. Type: string (or Expression with resultType string).
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "tenant")]
        public object Tenant {get; set; }

        /// <summary>
        /// Gets or sets the encrypted credential used for authentication. Credentials
        /// are encrypted using the integration runtime credential manager. Type:
        /// string.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "encryptedCredential")]
        public string EncryptedCredential {get; set; }

        /// <summary>
        /// Gets or sets the service principal credential type to use in
        /// Server-To-Server authentication. &#39;ServicePrincipalKey&#39; for key/secret,
        /// &#39;ServicePrincipalCert&#39; for certificate. Type: string (or Expression with
        /// resultType string).
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "servicePrincipalCredentialType")]
        public object ServicePrincipalCredentialType {get; set; }

        /// <summary>
        /// Gets or sets the credential of the service principal object in Azure Active
        /// Directory. If servicePrincipalCredentialType is &#39;ServicePrincipalKey&#39;,
        /// servicePrincipalCredential can be SecureString or
        /// AzureKeyVaultSecretReference. If servicePrincipalCredentialType is
        /// &#39;ServicePrincipalCert&#39;, servicePrincipalCredential can only be
        /// AzureKeyVaultSecretReference.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "servicePrincipalCredential")]
        public SecretBase ServicePrincipalCredential {get; set; }
    }
}