// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.DataFactory.Models
{
    using System.Linq;

    /// <summary>
    /// Azure Function activity type properties.
    /// </summary>
    public partial class AzureFunctionActivityTypeProperties
    {
        /// <summary>
        /// Initializes a new instance of the AzureFunctionActivityTypeProperties class.
        /// </summary>
        public AzureFunctionActivityTypeProperties()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the AzureFunctionActivityTypeProperties class.
        /// </summary>

        /// <param name="method">Rest API method for target endpoint.
        /// Possible values include: &#39;GET&#39;, &#39;POST&#39;, &#39;PUT&#39;, &#39;DELETE&#39;, &#39;OPTIONS&#39;, &#39;HEAD&#39;,
        /// &#39;TRACE&#39;</param>

        /// <param name="functionName">Name of the Function that the Azure Function Activity will call. Type:
        /// string (or Expression with resultType string)
        /// </param>

        /// <param name="headers">Represents the headers that will be sent to the request. For example, to
        /// set the language and type on a request: &#34;headers&#34; : { &#34;Accept-Language&#34;:
        /// &#34;en-us&#34;, &#34;Content-Type&#34;: &#34;application/json&#34; }. Type: string (or Expression
        /// with resultType string).
        /// </param>

        /// <param name="body">Represents the payload that will be sent to the endpoint. Required for
        /// POST/PUT method, not allowed for GET method Type: string (or Expression
        /// with resultType string).
        /// </param>
        public AzureFunctionActivityTypeProperties(string method, object functionName, System.Collections.Generic.IDictionary<string, object> headers = default(System.Collections.Generic.IDictionary<string, object>), object body = default(object))

        {
            this.Method = method;
            this.FunctionName = functionName;
            this.Headers = headers;
            this.Body = body;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets or sets rest API method for target endpoint. Possible values include: &#39;GET&#39;, &#39;POST&#39;, &#39;PUT&#39;, &#39;DELETE&#39;, &#39;OPTIONS&#39;, &#39;HEAD&#39;, &#39;TRACE&#39;
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "method")]
        public string Method {get; set; }

        /// <summary>
        /// Gets or sets name of the Function that the Azure Function Activity will
        /// call. Type: string (or Expression with resultType string)
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "functionName")]
        public object FunctionName {get; set; }

        /// <summary>
        /// Gets or sets represents the headers that will be sent to the request. For
        /// example, to set the language and type on a request: &#34;headers&#34; : {
        /// &#34;Accept-Language&#34;: &#34;en-us&#34;, &#34;Content-Type&#34;: &#34;application/json&#34; }. Type:
        /// string (or Expression with resultType string).
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "headers")]
        public System.Collections.Generic.IDictionary<string, object> Headers {get; set; }

        /// <summary>
        /// Gets or sets represents the payload that will be sent to the endpoint.
        /// Required for POST/PUT method, not allowed for GET method Type: string (or
        /// Expression with resultType string).
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "body")]
        public object Body {get; set; }
        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (this.Method == null)
            {
                throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.CannotBeNull, "Method");
            }
            if (this.FunctionName == null)
            {
                throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.CannotBeNull, "FunctionName");
            }




        }
    }
}