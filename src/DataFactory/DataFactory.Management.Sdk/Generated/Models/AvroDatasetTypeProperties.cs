// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.DataFactory.Models
{
    using System.Linq;

    /// <summary>
    /// Avro dataset properties.
    /// </summary>
    public partial class AvroDatasetTypeProperties
    {
        /// <summary>
        /// Initializes a new instance of the AvroDatasetTypeProperties class.
        /// </summary>
        public AvroDatasetTypeProperties()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the AvroDatasetTypeProperties class.
        /// </summary>

        /// <param name="location">The location of the avro storage.
        /// </param>

        /// <param name="avroCompressionCodec">The data avroCompressionCodec. Type: string (or Expression with resultType
        /// string).
        /// </param>

        /// <param name="avroCompressionLevel">
        /// </param>
        public AvroDatasetTypeProperties(DatasetLocation location, object avroCompressionCodec = default(object), int? avroCompressionLevel = default(int?))

        {
            this.Location = location;
            this.AvroCompressionCodec = avroCompressionCodec;
            this.AvroCompressionLevel = avroCompressionLevel;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets or sets the location of the avro storage.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "location")]
        public DatasetLocation Location {get; set; }

        /// <summary>
        /// Gets or sets the data avroCompressionCodec. Type: string (or Expression
        /// with resultType string).
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "avroCompressionCodec")]
        public object AvroCompressionCodec {get; set; }

        /// <summary>
        /// Gets or sets
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "avroCompressionLevel")]
        public int? AvroCompressionLevel {get; set; }
        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (this.Location == null)
            {
                throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.CannotBeNull, "Location");
            }


            if (this.AvroCompressionLevel != null)
            {
                if (this.AvroCompressionLevel > 9)
                {
                    throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.InclusiveMaximum, "AvroCompressionLevel", 9);
                }
                if (this.AvroCompressionLevel < 1)
                {
                    throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.InclusiveMinimum, "AvroCompressionLevel", 1);
                }
            }
        }
    }
}