// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.DataFactory.Models
{
    using System.Linq;

    /// <summary>
    /// Azure Data Factory nested object which contains a flow with data movements
    /// and transformations.
    /// </summary>
    [Newtonsoft.Json.JsonObject("DataFlow")]
    public partial class DataFlow
    {
        /// <summary>
        /// Initializes a new instance of the DataFlow class.
        /// </summary>
        public DataFlow()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the DataFlow class.
        /// </summary>

        /// <param name="description">The description of the data flow.
        /// </param>

        /// <param name="annotations">List of tags that can be used for describing the data flow.
        /// </param>

        /// <param name="folder">The folder that this data flow is in. If not specified, Data flow will
        /// appear at the root level.
        /// </param>
        public DataFlow(string description = default(string), System.Collections.Generic.IList<object> annotations = default(System.Collections.Generic.IList<object>), DataFlowFolder folder = default(DataFlowFolder))

        {
            this.Description = description;
            this.Annotations = annotations;
            this.Folder = folder;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets or sets the description of the data flow.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "description")]
        public string Description {get; set; }

        /// <summary>
        /// Gets or sets list of tags that can be used for describing the data flow.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "annotations")]
        public System.Collections.Generic.IList<object> Annotations {get; set; }

        /// <summary>
        /// Gets or sets the folder that this data flow is in. If not specified, Data
        /// flow will appear at the root level.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "folder")]
        public DataFlowFolder Folder {get; set; }
    }
}