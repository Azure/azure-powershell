// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.DataFactory.Models
{
    using System.Linq;

    /// <summary>
    /// A copy activity Salesforce Service Cloud V2 sink.
    /// </summary>
    [Newtonsoft.Json.JsonObject("SalesforceServiceCloudV2Sink")]
    public partial class SalesforceServiceCloudV2Sink : CopySink
    {
        /// <summary>
        /// Initializes a new instance of the SalesforceServiceCloudV2Sink class.
        /// </summary>
        public SalesforceServiceCloudV2Sink()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the SalesforceServiceCloudV2Sink class.
        /// </summary>

        /// <param name="writeBatchSize">Write batch size. Type: integer (or Expression with resultType integer),
        /// minimum: 0.
        /// </param>

        /// <param name="writeBatchTimeout">Write batch timeout. Type: string (or Expression with resultType string),
        /// pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
        /// </param>

        /// <param name="sinkRetryCount">Sink retry count. Type: integer (or Expression with resultType integer).
        /// </param>

        /// <param name="sinkRetryWait">Sink retry wait. Type: string (or Expression with resultType string),
        /// pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
        /// </param>

        /// <param name="maxConcurrentConnections">The maximum concurrent connection count for the sink data store. Type:
        /// integer (or Expression with resultType integer).
        /// </param>

        /// <param name="disableMetricsCollection">If true, disable data store metrics collection. Default is false. Type:
        /// boolean (or Expression with resultType boolean).
        /// </param>

        /// <param name="writeBehavior">The write behavior for the operation. Default is Insert.
        /// Possible values include: &#39;Insert&#39;, &#39;Upsert&#39;</param>

        /// <param name="externalIdFieldName">The name of the external ID field for upsert operation. Default value is
        /// &#39;Id&#39; column. Type: string (or Expression with resultType string).
        /// </param>

        /// <param name="ignoreNullValues">The flag indicating whether or not to ignore null values from input dataset
        /// (except key fields) during write operation. Default value is false. If set
        /// it to true, it means ADF will leave the data in the destination object
        /// unchanged when doing upsert/update operation and insert defined default
        /// value when doing insert operation, versus ADF will update the data in the
        /// destination object to NULL when doing upsert/update operation and insert
        /// NULL value when doing insert operation. Type: boolean (or Expression with
        /// resultType boolean).
        /// </param>
        public SalesforceServiceCloudV2Sink(object writeBatchSize = default(object), object writeBatchTimeout = default(object), object sinkRetryCount = default(object), object sinkRetryWait = default(object), object maxConcurrentConnections = default(object), object disableMetricsCollection = default(object), string writeBehavior = default(string), object externalIdFieldName = default(object), object ignoreNullValues = default(object))

        : base(writeBatchSize, writeBatchTimeout, sinkRetryCount, sinkRetryWait, maxConcurrentConnections, disableMetricsCollection)
        {
            this.WriteBehavior = writeBehavior;
            this.ExternalIdFieldName = externalIdFieldName;
            this.IgnoreNullValues = ignoreNullValues;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets or sets the write behavior for the operation. Default is Insert. Possible values include: &#39;Insert&#39;, &#39;Upsert&#39;
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "writeBehavior")]
        public string WriteBehavior {get; set; }

        /// <summary>
        /// Gets or sets the name of the external ID field for upsert operation.
        /// Default value is &#39;Id&#39; column. Type: string (or Expression with resultType
        /// string).
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "externalIdFieldName")]
        public object ExternalIdFieldName {get; set; }

        /// <summary>
        /// Gets or sets the flag indicating whether or not to ignore null values from
        /// input dataset (except key fields) during write operation. Default value is
        /// false. If set it to true, it means ADF will leave the data in the
        /// destination object unchanged when doing upsert/update operation and insert
        /// defined default value when doing insert operation, versus ADF will update
        /// the data in the destination object to NULL when doing upsert/update
        /// operation and insert NULL value when doing insert operation. Type: boolean
        /// (or Expression with resultType boolean).
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "ignoreNullValues")]
        public object IgnoreNullValues {get; set; }
    }
}