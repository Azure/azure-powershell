// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.DataFactory.Models
{
    using System.Linq;

    /// <summary>
    /// A WebLinkedService that uses basic authentication to communicate with an
    /// HTTP endpoint.
    /// </summary>
    [Newtonsoft.Json.JsonObject("Basic")]
    public partial class WebBasicAuthentication : WebLinkedServiceTypeProperties
    {
        /// <summary>
        /// Initializes a new instance of the WebBasicAuthentication class.
        /// </summary>
        public WebBasicAuthentication()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the WebBasicAuthentication class.
        /// </summary>

        /// <param name="url">The URL of the web service endpoint, e.g. https://www.microsoft.com . Type:
        /// string (or Expression with resultType string).
        /// </param>

        /// <param name="username">User name for Basic authentication. Type: string (or Expression with
        /// resultType string).
        /// </param>

        /// <param name="password">The password for Basic authentication.
        /// </param>
        public WebBasicAuthentication(object url, object username, SecretBase password)

        : base(url)
        {
            this.Username = username;
            this.Password = password;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets or sets user name for Basic authentication. Type: string (or
        /// Expression with resultType string).
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "username")]
        public object Username {get; set; }

        /// <summary>
        /// Gets or sets the password for Basic authentication.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "password")]
        public SecretBase Password {get; set; }
        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public override void Validate()
        {
            base.Validate();
            if (this.Username == null)
            {
                throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.CannotBeNull, "Username");
            }
            if (this.Password == null)
            {
                throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.CannotBeNull, "Password");
            }


        }
    }
}