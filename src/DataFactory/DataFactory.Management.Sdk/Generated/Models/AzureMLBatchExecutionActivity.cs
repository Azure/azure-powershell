// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.DataFactory.Models
{
    using System.Linq;

    /// <summary>
    /// Azure ML Batch Execution activity.
    /// </summary>
    [Newtonsoft.Json.JsonObject("AzureMLBatchExecution")]
    [Microsoft.Rest.Serialization.JsonTransformation]
    public partial class AzureMLBatchExecutionActivity : ExecutionActivity
    {
        /// <summary>
        /// Initializes a new instance of the AzureMLBatchExecutionActivity class.
        /// </summary>
        public AzureMLBatchExecutionActivity()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the AzureMLBatchExecutionActivity class.
        /// </summary>

        /// <param name="additionalProperties">A pipeline activity.
        /// </param>

        /// <param name="name">Activity name.
        /// </param>

        /// <param name="description">Activity description.
        /// </param>

        /// <param name="state">Activity state. This is an optional property and if not provided, the state
        /// will be Active by default.
        /// Possible values include: &#39;Active&#39;, &#39;Inactive&#39;</param>

        /// <param name="onInactiveMarkAs">Status result of the activity when the state is set to Inactive. This is an
        /// optional property and if not provided when the activity is inactive, the
        /// status will be Succeeded by default.
        /// Possible values include: &#39;Succeeded&#39;, &#39;Failed&#39;, &#39;Skipped&#39;</param>

        /// <param name="dependsOn">Activity depends on condition.
        /// </param>

        /// <param name="userProperties">Activity user properties.
        /// </param>

        /// <param name="linkedServiceName">Linked service reference.
        /// </param>

        /// <param name="policy">Activity policy.
        /// </param>

        /// <param name="globalParameters">Key,Value pairs to be passed to the Azure ML Batch Execution Service
        /// endpoint. Keys must match the names of web service parameters defined in
        /// the published Azure ML web service. Values will be passed in the
        /// GlobalParameters property of the Azure ML batch execution request.
        /// </param>

        /// <param name="webServiceOutputs">Key,Value pairs, mapping the names of Azure ML endpoint&#39;s Web Service
        /// Outputs to AzureMLWebServiceFile objects specifying the output Blob
        /// locations. This information will be passed in the WebServiceOutputs
        /// property of the Azure ML batch execution request.
        /// </param>

        /// <param name="webServiceInputs">Key,Value pairs, mapping the names of Azure ML endpoint&#39;s Web Service
        /// Inputs to AzureMLWebServiceFile objects specifying the input Blob
        /// locations.. This information will be passed in the WebServiceInputs
        /// property of the Azure ML batch execution request.
        /// </param>
        public AzureMLBatchExecutionActivity(string name, System.Collections.Generic.IDictionary<string, object> additionalProperties = default(System.Collections.Generic.IDictionary<string, object>), string description = default(string), string state = default(string), string onInactiveMarkAs = default(string), System.Collections.Generic.IList<ActivityDependency> dependsOn = default(System.Collections.Generic.IList<ActivityDependency>), System.Collections.Generic.IList<UserProperty> userProperties = default(System.Collections.Generic.IList<UserProperty>), LinkedServiceReference linkedServiceName = default(LinkedServiceReference), ActivityPolicy policy = default(ActivityPolicy), System.Collections.Generic.IDictionary<string, object> globalParameters = default(System.Collections.Generic.IDictionary<string, object>), System.Collections.Generic.IDictionary<string, AzureMLWebServiceFile> webServiceOutputs = default(System.Collections.Generic.IDictionary<string, AzureMLWebServiceFile>), System.Collections.Generic.IDictionary<string, AzureMLWebServiceFile> webServiceInputs = default(System.Collections.Generic.IDictionary<string, AzureMLWebServiceFile>))

        : base(name, additionalProperties, description, state, onInactiveMarkAs, dependsOn, userProperties, linkedServiceName, policy)
        {
            this.GlobalParameters = globalParameters;
            this.WebServiceOutputs = webServiceOutputs;
            this.WebServiceInputs = webServiceInputs;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets or sets key,Value pairs to be passed to the Azure ML Batch Execution
        /// Service endpoint. Keys must match the names of web service parameters
        /// defined in the published Azure ML web service. Values will be passed in the
        /// GlobalParameters property of the Azure ML batch execution request.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "typeProperties.globalParameters")]
        public System.Collections.Generic.IDictionary<string, object> GlobalParameters {get; set; }

        /// <summary>
        /// Gets or sets key,Value pairs, mapping the names of Azure ML endpoint&#39;s Web
        /// Service Outputs to AzureMLWebServiceFile objects specifying the output Blob
        /// locations. This information will be passed in the WebServiceOutputs
        /// property of the Azure ML batch execution request.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "typeProperties.webServiceOutputs")]
        public System.Collections.Generic.IDictionary<string, AzureMLWebServiceFile> WebServiceOutputs {get; set; }

        /// <summary>
        /// Gets or sets key,Value pairs, mapping the names of Azure ML endpoint&#39;s Web
        /// Service Inputs to AzureMLWebServiceFile objects specifying the input Blob
        /// locations.. This information will be passed in the WebServiceInputs
        /// property of the Azure ML batch execution request.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "typeProperties.webServiceInputs")]
        public System.Collections.Generic.IDictionary<string, AzureMLWebServiceFile> WebServiceInputs {get; set; }
        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public override void Validate()
        {
            base.Validate();

            if (this.WebServiceOutputs != null)
            {
                foreach (var valueElement in this.WebServiceOutputs.Values)
                {
                    if (valueElement != null)
                    {
                        valueElement.Validate();
                    }
                }
            }
            if (this.WebServiceInputs != null)
            {
                foreach (var valueElement in this.WebServiceInputs.Values)
                {
                    if (valueElement != null)
                    {
                        valueElement.Validate();
                    }
                }
            }
        }
    }
}