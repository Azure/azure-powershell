// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.DataFactory.Models
{
    using System.Linq;

    /// <summary>
    /// An object to provide order by options for listing runs.
    /// </summary>
    public partial class RunQueryOrderBy
    {
        /// <summary>
        /// Initializes a new instance of the RunQueryOrderBy class.
        /// </summary>
        public RunQueryOrderBy()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the RunQueryOrderBy class.
        /// </summary>

        /// <param name="orderBy">Parameter name to be used for order by. The allowed parameters to order by
        /// for pipeline runs are PipelineName, RunStart, RunEnd and Status; for
        /// activity runs are ActivityName, ActivityRunStart, ActivityRunEnd and
        /// Status; for trigger runs are TriggerName, TriggerRunTimestamp and Status.
        /// Possible values include: &#39;RunStart&#39;, &#39;RunEnd&#39;, &#39;PipelineName&#39;, &#39;Status&#39;,
        /// &#39;ActivityName&#39;, &#39;ActivityRunStart&#39;, &#39;ActivityRunEnd&#39;, &#39;TriggerName&#39;,
        /// &#39;TriggerRunTimestamp&#39;</param>

        /// <param name="order">Sorting order of the parameter.
        /// Possible values include: &#39;ASC&#39;, &#39;DESC&#39;</param>
        public RunQueryOrderBy(string orderBy, string order)

        {
            this.OrderBy = orderBy;
            this.Order = order;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets or sets parameter name to be used for order by. The allowed parameters
        /// to order by for pipeline runs are PipelineName, RunStart, RunEnd and
        /// Status; for activity runs are ActivityName, ActivityRunStart,
        /// ActivityRunEnd and Status; for trigger runs are TriggerName,
        /// TriggerRunTimestamp and Status. Possible values include: &#39;RunStart&#39;, &#39;RunEnd&#39;, &#39;PipelineName&#39;, &#39;Status&#39;, &#39;ActivityName&#39;, &#39;ActivityRunStart&#39;, &#39;ActivityRunEnd&#39;, &#39;TriggerName&#39;, &#39;TriggerRunTimestamp&#39;
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "orderBy")]
        public string OrderBy {get; set; }

        /// <summary>
        /// Gets or sets sorting order of the parameter. Possible values include: &#39;ASC&#39;, &#39;DESC&#39;
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "order")]
        public string Order {get; set; }
        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (this.OrderBy == null)
            {
                throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.CannotBeNull, "OrderBy");
            }
            if (this.Order == null)
            {
                throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.CannotBeNull, "Order");
            }


        }
    }
}