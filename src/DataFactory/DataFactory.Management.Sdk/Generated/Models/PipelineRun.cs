// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.DataFactory.Models
{
    using System.Linq;

    /// <summary>
    /// Information about a pipeline run.
    /// </summary>
    public partial class PipelineRun
    {
        /// <summary>
        /// Initializes a new instance of the PipelineRun class.
        /// </summary>
        public PipelineRun()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the PipelineRun class.
        /// </summary>

        /// <param name="additionalProperties">Information about a pipeline run.
        /// </param>

        /// <param name="runId">Identifier of a run.
        /// </param>

        /// <param name="runGroupId">Identifier that correlates all the recovery runs of a pipeline run.
        /// </param>

        /// <param name="isLatest">Indicates if the recovered pipeline run is the latest in its group.
        /// </param>

        /// <param name="pipelineName">The pipeline name.
        /// </param>

        /// <param name="parameters">The full or partial list of parameter name, value pair used in the pipeline
        /// run.
        /// </param>

        /// <param name="runDimensions">Run dimensions emitted by Pipeline run.
        /// </param>

        /// <param name="invokedBy">Entity that started the pipeline run.
        /// </param>

        /// <param name="lastUpdated">The last updated timestamp for the pipeline run event in ISO8601 format.
        /// </param>

        /// <param name="runStart">The start time of a pipeline run in ISO8601 format.
        /// </param>

        /// <param name="runEnd">The end time of a pipeline run in ISO8601 format.
        /// </param>

        /// <param name="durationInMS">The duration of a pipeline run.
        /// </param>

        /// <param name="status">The status of a pipeline run. Possible values: Queued, InProgress,
        /// Succeeded, Failed, Canceling, Cancelled
        /// </param>

        /// <param name="message">The message from a pipeline run.
        /// </param>
        public PipelineRun(System.Collections.Generic.IDictionary<string, object> additionalProperties = default(System.Collections.Generic.IDictionary<string, object>), string runId = default(string), string runGroupId = default(string), bool? isLatest = default(bool?), string pipelineName = default(string), System.Collections.Generic.IDictionary<string, string> parameters = default(System.Collections.Generic.IDictionary<string, string>), System.Collections.Generic.IDictionary<string, string> runDimensions = default(System.Collections.Generic.IDictionary<string, string>), PipelineRunInvokedBy invokedBy = default(PipelineRunInvokedBy), System.DateTime? lastUpdated = default(System.DateTime?), System.DateTime? runStart = default(System.DateTime?), System.DateTime? runEnd = default(System.DateTime?), int? durationInMS = default(int?), string status = default(string), string message = default(string))

        {
            this.AdditionalProperties = additionalProperties;
            this.RunId = runId;
            this.RunGroupId = runGroupId;
            this.IsLatest = isLatest;
            this.PipelineName = pipelineName;
            this.Parameters = parameters;
            this.RunDimensions = runDimensions;
            this.InvokedBy = invokedBy;
            this.LastUpdated = lastUpdated;
            this.RunStart = runStart;
            this.RunEnd = runEnd;
            this.DurationInMS = durationInMS;
            this.Status = status;
            this.Message = message;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets or sets information about a pipeline run.
        /// </summary>
        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties {get; set; }

        /// <summary>
        /// Gets identifier of a run.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "runId")]
        public string RunId {get; private set; }

        /// <summary>
        /// Gets identifier that correlates all the recovery runs of a pipeline run.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "runGroupId")]
        public string RunGroupId {get; private set; }

        /// <summary>
        /// Gets indicates if the recovered pipeline run is the latest in its group.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "isLatest")]
        public bool? IsLatest {get; private set; }

        /// <summary>
        /// Gets the pipeline name.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "pipelineName")]
        public string PipelineName {get; private set; }

        /// <summary>
        /// Gets the full or partial list of parameter name, value pair used in the
        /// pipeline run.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "parameters")]
        public System.Collections.Generic.IDictionary<string, string> Parameters {get; private set; }

        /// <summary>
        /// Gets run dimensions emitted by Pipeline run.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "runDimensions")]
        public System.Collections.Generic.IDictionary<string, string> RunDimensions {get; private set; }

        /// <summary>
        /// Gets entity that started the pipeline run.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "invokedBy")]
        public PipelineRunInvokedBy InvokedBy {get; private set; }

        /// <summary>
        /// Gets the last updated timestamp for the pipeline run event in ISO8601
        /// format.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "lastUpdated")]
        public System.DateTime? LastUpdated {get; private set; }

        /// <summary>
        /// Gets the start time of a pipeline run in ISO8601 format.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "runStart")]
        public System.DateTime? RunStart {get; private set; }

        /// <summary>
        /// Gets the end time of a pipeline run in ISO8601 format.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "runEnd")]
        public System.DateTime? RunEnd {get; private set; }

        /// <summary>
        /// Gets the duration of a pipeline run.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "durationInMs")]
        public int? DurationInMS {get; private set; }

        /// <summary>
        /// Gets the status of a pipeline run. Possible values: Queued, InProgress,
        /// Succeeded, Failed, Canceling, Cancelled
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "status")]
        public string Status {get; private set; }

        /// <summary>
        /// Gets the message from a pipeline run.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "message")]
        public string Message {get; private set; }
    }
}