// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.DataFactory.Models
{
    using System.Linq;

    /// <summary>
    /// Azure data factory nested object which contains information about creating
    /// pipeline run
    /// </summary>
    [Newtonsoft.Json.JsonObject("Trigger")]
    public partial class Trigger
    {
        /// <summary>
        /// Initializes a new instance of the Trigger class.
        /// </summary>
        public Trigger()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the Trigger class.
        /// </summary>

        /// <param name="additionalProperties">Azure data factory nested object which contains information about creating
        /// pipeline run
        /// </param>

        /// <param name="description">Trigger description.
        /// </param>

        /// <param name="runtimeState">Indicates if trigger is running or not. Updated when Start/Stop APIs are
        /// called on the Trigger.
        /// Possible values include: &#39;Started&#39;, &#39;Stopped&#39;, &#39;Disabled&#39;</param>

        /// <param name="annotations">List of tags that can be used for describing the trigger.
        /// </param>
        public Trigger(System.Collections.Generic.IDictionary<string, object> additionalProperties = default(System.Collections.Generic.IDictionary<string, object>), string description = default(string), string runtimeState = default(string), System.Collections.Generic.IList<object> annotations = default(System.Collections.Generic.IList<object>))

        {
            this.AdditionalProperties = additionalProperties;
            this.Description = description;
            this.RuntimeState = runtimeState;
            this.Annotations = annotations;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets or sets azure data factory nested object which contains information
        /// about creating pipeline run
        /// </summary>
        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties {get; set; }

        /// <summary>
        /// Gets or sets trigger description.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "description")]
        public string Description {get; set; }

        /// <summary>
        /// Gets indicates if trigger is running or not. Updated when Start/Stop APIs
        /// are called on the Trigger. Possible values include: &#39;Started&#39;, &#39;Stopped&#39;, &#39;Disabled&#39;
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "runtimeState")]
        public string RuntimeState {get; private set; }

        /// <summary>
        /// Gets or sets list of tags that can be used for describing the trigger.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "annotations")]
        public System.Collections.Generic.IList<object> Annotations {get; set; }
    }
}