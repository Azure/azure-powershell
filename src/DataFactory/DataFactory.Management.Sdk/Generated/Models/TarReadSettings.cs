// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.DataFactory.Models
{
    using System.Linq;

    /// <summary>
    /// The Tar compression read settings.
    /// </summary>
    [Newtonsoft.Json.JsonObject("TarReadSettings")]
    public partial class TarReadSettings : CompressionReadSettings
    {
        /// <summary>
        /// Initializes a new instance of the TarReadSettings class.
        /// </summary>
        public TarReadSettings()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the TarReadSettings class.
        /// </summary>

        /// <param name="additionalProperties">Compression read settings.
        /// </param>

        /// <param name="preserveCompressionFileNameAsFolder">Preserve the compression file name as folder path. Type: boolean (or
        /// Expression with resultType boolean).
        /// </param>
        public TarReadSettings(System.Collections.Generic.IDictionary<string, object> additionalProperties = default(System.Collections.Generic.IDictionary<string, object>), object preserveCompressionFileNameAsFolder = default(object))

        : base(additionalProperties)
        {
            this.PreserveCompressionFileNameAsFolder = preserveCompressionFileNameAsFolder;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets or sets preserve the compression file name as folder path. Type:
        /// boolean (or Expression with resultType boolean).
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "preserveCompressionFileNameAsFolder")]
        public object PreserveCompressionFileNameAsFolder {get; set; }
    }
}