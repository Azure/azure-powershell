// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.DataFactory.Models
{
    using System.Linq;

    /// <summary>
    /// Data flow debug session info.
    /// </summary>
    public partial class DataFlowDebugSessionInfo
    {
        /// <summary>
        /// Initializes a new instance of the DataFlowDebugSessionInfo class.
        /// </summary>
        public DataFlowDebugSessionInfo()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the DataFlowDebugSessionInfo class.
        /// </summary>

        /// <param name="additionalProperties">Data flow debug session info.
        /// </param>

        /// <param name="dataFlowName">The name of the data flow.
        /// </param>

        /// <param name="computeType">Compute type of the cluster.
        /// </param>

        /// <param name="coreCount">Core count of the cluster.
        /// </param>

        /// <param name="nodeCount">Node count of the cluster. (deprecated property)
        /// </param>

        /// <param name="integrationRuntimeName">Attached integration runtime name of data flow debug session.
        /// </param>

        /// <param name="sessionId">The ID of data flow debug session.
        /// </param>

        /// <param name="startTime">Start time of data flow debug session.
        /// </param>

        /// <param name="timeToLiveInMinutes">Compute type of the cluster.
        /// </param>

        /// <param name="lastActivityTime">Last activity time of data flow debug session.
        /// </param>
        public DataFlowDebugSessionInfo(System.Collections.Generic.IDictionary<string, object> additionalProperties = default(System.Collections.Generic.IDictionary<string, object>), string dataFlowName = default(string), string computeType = default(string), int? coreCount = default(int?), int? nodeCount = default(int?), string integrationRuntimeName = default(string), string sessionId = default(string), string startTime = default(string), int? timeToLiveInMinutes = default(int?), string lastActivityTime = default(string))

        {
            this.AdditionalProperties = additionalProperties;
            this.DataFlowName = dataFlowName;
            this.ComputeType = computeType;
            this.CoreCount = coreCount;
            this.NodeCount = nodeCount;
            this.IntegrationRuntimeName = integrationRuntimeName;
            this.SessionId = sessionId;
            this.StartTime = startTime;
            this.TimeToLiveInMinutes = timeToLiveInMinutes;
            this.LastActivityTime = lastActivityTime;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets or sets data flow debug session info.
        /// </summary>
        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties {get; set; }

        /// <summary>
        /// Gets or sets the name of the data flow.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "dataFlowName")]
        public string DataFlowName {get; set; }

        /// <summary>
        /// Gets or sets compute type of the cluster.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "computeType")]
        public string ComputeType {get; set; }

        /// <summary>
        /// Gets or sets core count of the cluster.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "coreCount")]
        public int? CoreCount {get; set; }

        /// <summary>
        /// Gets or sets node count of the cluster. (deprecated property)
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "nodeCount")]
        public int? NodeCount {get; set; }

        /// <summary>
        /// Gets or sets attached integration runtime name of data flow debug session.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "integrationRuntimeName")]
        public string IntegrationRuntimeName {get; set; }

        /// <summary>
        /// Gets or sets the ID of data flow debug session.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "sessionId")]
        public string SessionId {get; set; }

        /// <summary>
        /// Gets or sets start time of data flow debug session.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "startTime")]
        public string StartTime {get; set; }

        /// <summary>
        /// Gets or sets compute type of the cluster.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "timeToLiveInMinutes")]
        public int? TimeToLiveInMinutes {get; set; }

        /// <summary>
        /// Gets or sets last activity time of data flow debug session.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "lastActivityTime")]
        public string LastActivityTime {get; set; }
    }
}