// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.DataFactory.Models
{
    using System.Linq;

    /// <summary>
    /// The recurrence schedule occurrence.
    /// </summary>
    public partial class RecurrenceScheduleOccurrence
    {
        /// <summary>
        /// Initializes a new instance of the RecurrenceScheduleOccurrence class.
        /// </summary>
        public RecurrenceScheduleOccurrence()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the RecurrenceScheduleOccurrence class.
        /// </summary>

        /// <param name="additionalProperties">The recurrence schedule occurrence.
        /// </param>

        /// <param name="day">The day of the week.
        /// Possible values include: &#39;Sunday&#39;, &#39;Monday&#39;, &#39;Tuesday&#39;, &#39;Wednesday&#39;,
        /// &#39;Thursday&#39;, &#39;Friday&#39;, &#39;Saturday&#39;</param>

        /// <param name="occurrence">The occurrence.
        /// </param>
        public RecurrenceScheduleOccurrence(System.Collections.Generic.IDictionary<string, object> additionalProperties = default(System.Collections.Generic.IDictionary<string, object>), DayOfWeek? day = default(DayOfWeek?), int? occurrence = default(int?))

        {
            this.AdditionalProperties = additionalProperties;
            this.Day = day;
            this.Occurrence = occurrence;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets or sets the recurrence schedule occurrence.
        /// </summary>
        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties {get; set; }

        /// <summary>
        /// Gets or sets the day of the week. Possible values include: &#39;Sunday&#39;, &#39;Monday&#39;, &#39;Tuesday&#39;, &#39;Wednesday&#39;, &#39;Thursday&#39;, &#39;Friday&#39;, &#39;Saturday&#39;
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "day")]
        public DayOfWeek? Day {get; set; }

        /// <summary>
        /// Gets or sets the occurrence.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "occurrence")]
        public int? Occurrence {get; set; }
    }
}