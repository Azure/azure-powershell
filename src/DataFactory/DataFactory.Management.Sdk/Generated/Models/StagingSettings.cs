// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.DataFactory.Models
{
    using System.Linq;

    /// <summary>
    /// Staging settings.
    /// </summary>
    public partial class StagingSettings
    {
        /// <summary>
        /// Initializes a new instance of the StagingSettings class.
        /// </summary>
        public StagingSettings()
        {
            this.LinkedServiceName = new LinkedServiceReference();
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the StagingSettings class.
        /// </summary>

        /// <param name="additionalProperties">Staging settings.
        /// </param>

        /// <param name="linkedServiceName">Staging linked service reference.
        /// </param>

        /// <param name="path">The path to storage for storing the interim data. Type: string (or
        /// Expression with resultType string).
        /// </param>

        /// <param name="enableCompression">Specifies whether to use compression when copying data via an interim
        /// staging. Default value is false. Type: boolean (or Expression with
        /// resultType boolean).
        /// </param>
        public StagingSettings(LinkedServiceReference linkedServiceName, System.Collections.Generic.IDictionary<string, object> additionalProperties = default(System.Collections.Generic.IDictionary<string, object>), object path = default(object), object enableCompression = default(object))

        {
            this.AdditionalProperties = additionalProperties;
            this.LinkedServiceName = linkedServiceName;
            this.Path = path;
            this.EnableCompression = enableCompression;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets or sets staging settings.
        /// </summary>
        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties {get; set; }

        /// <summary>
        /// Gets or sets staging linked service reference.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "linkedServiceName")]
        public LinkedServiceReference LinkedServiceName {get; set; }

        /// <summary>
        /// Gets or sets the path to storage for storing the interim data. Type: string
        /// (or Expression with resultType string).
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "path")]
        public object Path {get; set; }

        /// <summary>
        /// Gets or sets specifies whether to use compression when copying data via an
        /// interim staging. Default value is false. Type: boolean (or Expression with
        /// resultType boolean).
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "enableCompression")]
        public object EnableCompression {get; set; }
        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (this.LinkedServiceName == null)
            {
                throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.CannotBeNull, "LinkedServiceName");
            }

            if (this.LinkedServiceName != null)
            {
                this.LinkedServiceName.Validate();
            }


        }
    }
}