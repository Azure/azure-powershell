// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.DataFactory.Models
{
    using System.Linq;

    /// <summary>
    /// SQL stored procedure activity properties.
    /// </summary>
    public partial class SqlServerStoredProcedureActivityTypeProperties
    {
        /// <summary>
        /// Initializes a new instance of the SqlServerStoredProcedureActivityTypeProperties class.
        /// </summary>
        public SqlServerStoredProcedureActivityTypeProperties()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the SqlServerStoredProcedureActivityTypeProperties class.
        /// </summary>

        /// <param name="storedProcedureName">Stored procedure name. Type: string (or Expression with resultType string).
        /// </param>

        /// <param name="storedProcedureParameters">Value and type setting for stored procedure parameters. Example:
        /// &#34;{Parameter1: {value: &#34;1&#34;, type: &#34;int&#34;}}&#34;.
        /// </param>
        public SqlServerStoredProcedureActivityTypeProperties(object storedProcedureName, object storedProcedureParameters = default(object))

        {
            this.StoredProcedureName = storedProcedureName;
            this.StoredProcedureParameters = storedProcedureParameters;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets or sets stored procedure name. Type: string (or Expression with
        /// resultType string).
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "storedProcedureName")]
        public object StoredProcedureName {get; set; }

        /// <summary>
        /// Gets or sets value and type setting for stored procedure parameters.
        /// Example: &#34;{Parameter1: {value: &#34;1&#34;, type: &#34;int&#34;}}&#34;.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "storedProcedureParameters")]
        public object StoredProcedureParameters {get; set; }
        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (this.StoredProcedureName == null)
            {
                throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.CannotBeNull, "StoredProcedureName");
            }


        }
    }
}