// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.DataFactory.Models
{
    using System.Linq;

    /// <summary>
    /// Factory&#39;s VSTS repo information.
    /// </summary>
    [Newtonsoft.Json.JsonObject("FactoryVSTSConfiguration")]
    public partial class FactoryVstsConfiguration : FactoryRepoConfiguration
    {
        /// <summary>
        /// Initializes a new instance of the FactoryVstsConfiguration class.
        /// </summary>
        public FactoryVstsConfiguration()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the FactoryVstsConfiguration class.
        /// </summary>

        /// <param name="accountName">Account name.
        /// </param>

        /// <param name="repositoryName">Repository name.
        /// </param>

        /// <param name="collaborationBranch">Collaboration branch.
        /// </param>

        /// <param name="rootFolder">Root folder.
        /// </param>

        /// <param name="lastCommitId">Last commit id.
        /// </param>

        /// <param name="disablePublish">Disable manual publish operation in ADF studio to favor automated publish.
        /// </param>

        /// <param name="projectName">VSTS project name.
        /// </param>

        /// <param name="tenantId">VSTS tenant id.
        /// </param>
        public FactoryVstsConfiguration(string accountName, string repositoryName, string collaborationBranch, string rootFolder, string projectName, string lastCommitId = default(string), bool? disablePublish = default(bool?), string tenantId = default(string))

        : base(accountName, repositoryName, collaborationBranch, rootFolder, lastCommitId, disablePublish)
        {
            this.ProjectName = projectName;
            this.TenantId = tenantId;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets or sets vSTS project name.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "projectName")]
        public string ProjectName {get; set; }

        /// <summary>
        /// Gets or sets vSTS tenant id.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "tenantId")]
        public string TenantId {get; set; }
        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public override void Validate()
        {
            base.Validate();
            if (this.ProjectName == null)
            {
                throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.CannotBeNull, "ProjectName");
            }


        }
    }
}