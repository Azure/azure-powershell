// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.DataFactory.Models
{
    using System.Linq;

    /// <summary>
    /// Pipeline that needs to be triggered with the given parameters.
    /// </summary>
    public partial class TriggerPipelineReference
    {
        /// <summary>
        /// Initializes a new instance of the TriggerPipelineReference class.
        /// </summary>
        public TriggerPipelineReference()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the TriggerPipelineReference class.
        /// </summary>

        /// <param name="pipelineReference">Pipeline reference.
        /// </param>

        /// <param name="parameters">Pipeline parameters.
        /// </param>
        public TriggerPipelineReference(PipelineReference pipelineReference = default(PipelineReference), System.Collections.Generic.IDictionary<string, object> parameters = default(System.Collections.Generic.IDictionary<string, object>))

        {
            this.PipelineReference = pipelineReference;
            this.Parameters = parameters;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets or sets pipeline reference.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "pipelineReference")]
        public PipelineReference PipelineReference {get; set; }

        /// <summary>
        /// Gets or sets pipeline parameters.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "parameters")]
        public System.Collections.Generic.IDictionary<string, object> Parameters {get; set; }
        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (this.PipelineReference != null)
            {
                this.PipelineReference.Validate();
            }

        }
    }
}