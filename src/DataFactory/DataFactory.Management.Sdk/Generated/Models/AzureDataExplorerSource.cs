// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.DataFactory.Models
{
    using System.Linq;

    /// <summary>
    /// A copy activity Azure Data Explorer (Kusto) source.
    /// </summary>
    [Newtonsoft.Json.JsonObject("AzureDataExplorerSource")]
    public partial class AzureDataExplorerSource : CopySource
    {
        /// <summary>
        /// Initializes a new instance of the AzureDataExplorerSource class.
        /// </summary>
        public AzureDataExplorerSource()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the AzureDataExplorerSource class.
        /// </summary>

        /// <param name="sourceRetryCount">Source retry count. Type: integer (or Expression with resultType integer).
        /// </param>

        /// <param name="sourceRetryWait">Source retry wait. Type: string (or Expression with resultType string),
        /// pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
        /// </param>

        /// <param name="maxConcurrentConnections">The maximum concurrent connection count for the source data store. Type:
        /// integer (or Expression with resultType integer).
        /// </param>

        /// <param name="disableMetricsCollection">If true, disable data store metrics collection. Default is false. Type:
        /// boolean (or Expression with resultType boolean).
        /// </param>

        /// <param name="query">Database query. Should be a Kusto Query Language (KQL) query. Type: string
        /// (or Expression with resultType string).
        /// </param>

        /// <param name="noTruncation">The name of the Boolean option that controls whether truncation is applied
        /// to result-sets that go beyond a certain row-count limit.
        /// </param>

        /// <param name="queryTimeout">Query timeout. Type: string (or Expression with resultType string),
        /// pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9]))..
        /// </param>

        /// <param name="additionalColumns">Specifies the additional columns to be added to source data. Type: array of
        /// objects(AdditionalColumns) (or Expression with resultType array of
        /// objects).
        /// </param>
        public AzureDataExplorerSource(object query, object sourceRetryCount = default(object), object sourceRetryWait = default(object), object maxConcurrentConnections = default(object), object disableMetricsCollection = default(object), object noTruncation = default(object), object queryTimeout = default(object), object additionalColumns = default(object))

        : base(sourceRetryCount, sourceRetryWait, maxConcurrentConnections, disableMetricsCollection)
        {
            this.Query = query;
            this.NoTruncation = noTruncation;
            this.QueryTimeout = queryTimeout;
            this.AdditionalColumns = additionalColumns;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets or sets database query. Should be a Kusto Query Language (KQL) query.
        /// Type: string (or Expression with resultType string).
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "query")]
        public object Query {get; set; }

        /// <summary>
        /// Gets or sets the name of the Boolean option that controls whether
        /// truncation is applied to result-sets that go beyond a certain row-count
        /// limit.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "noTruncation")]
        public object NoTruncation {get; set; }

        /// <summary>
        /// Gets or sets query timeout. Type: string (or Expression with resultType
        /// string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9]))..
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "queryTimeout")]
        public object QueryTimeout {get; set; }

        /// <summary>
        /// Gets or sets specifies the additional columns to be added to source data.
        /// Type: array of objects(AdditionalColumns) (or Expression with resultType
        /// array of objects).
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "additionalColumns")]
        public object AdditionalColumns {get; set; }
        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (this.Query == null)
            {
                throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.CannotBeNull, "Query");
            }




        }
    }
}