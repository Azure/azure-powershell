// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.DataFactory.Models
{
    using System.Linq;

    /// <summary>
    /// Redirect incompatible row settings
    /// </summary>
    public partial class RedirectIncompatibleRowSettings
    {
        /// <summary>
        /// Initializes a new instance of the RedirectIncompatibleRowSettings class.
        /// </summary>
        public RedirectIncompatibleRowSettings()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the RedirectIncompatibleRowSettings class.
        /// </summary>

        /// <param name="additionalProperties">Redirect incompatible row settings
        /// </param>

        /// <param name="linkedServiceName">Name of the Azure Storage, Storage SAS, or Azure Data Lake Store linked
        /// service used for redirecting incompatible row. Must be specified if
        /// redirectIncompatibleRowSettings is specified. Type: string (or Expression
        /// with resultType string).
        /// </param>

        /// <param name="path">The path for storing the redirect incompatible row data. Type: string (or
        /// Expression with resultType string).
        /// </param>
        public RedirectIncompatibleRowSettings(object linkedServiceName, System.Collections.Generic.IDictionary<string, object> additionalProperties = default(System.Collections.Generic.IDictionary<string, object>), object path = default(object))

        {
            this.AdditionalProperties = additionalProperties;
            this.LinkedServiceName = linkedServiceName;
            this.Path = path;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets or sets redirect incompatible row settings
        /// </summary>
        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties {get; set; }

        /// <summary>
        /// Gets or sets name of the Azure Storage, Storage SAS, or Azure Data Lake
        /// Store linked service used for redirecting incompatible row. Must be
        /// specified if redirectIncompatibleRowSettings is specified. Type: string (or
        /// Expression with resultType string).
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "linkedServiceName")]
        public object LinkedServiceName {get; set; }

        /// <summary>
        /// Gets or sets the path for storing the redirect incompatible row data. Type:
        /// string (or Expression with resultType string).
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "path")]
        public object Path {get; set; }
        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (this.LinkedServiceName == null)
            {
                throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.CannotBeNull, "LinkedServiceName");
            }



        }
    }
}