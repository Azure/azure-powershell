// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.DataFactory.Models
{
    using System.Linq;

    /// <summary>
    /// Properties specific to this linked service type.
    /// </summary>
    public partial class SapBWLinkedServiceTypeProperties
    {
        /// <summary>
        /// Initializes a new instance of the SapBWLinkedServiceTypeProperties class.
        /// </summary>
        public SapBWLinkedServiceTypeProperties()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the SapBWLinkedServiceTypeProperties class.
        /// </summary>

        /// <param name="server">Host name of the SAP BW instance. Type: string (or Expression with
        /// resultType string).
        /// </param>

        /// <param name="systemNumber">System number of the BW system. (Usually a two-digit decimal number
        /// represented as a string.) Type: string (or Expression with resultType
        /// string).
        /// </param>

        /// <param name="clientId">Client ID of the client on the BW system. (Usually a three-digit decimal
        /// number represented as a string) Type: string (or Expression with resultType
        /// string).
        /// </param>

        /// <param name="userName">Username to access the SAP BW server. Type: string (or Expression with
        /// resultType string).
        /// </param>

        /// <param name="password">Password to access the SAP BW server.
        /// </param>

        /// <param name="encryptedCredential">The encrypted credential used for authentication. Credentials are encrypted
        /// using the integration runtime credential manager. Type: string.
        /// </param>
        public SapBWLinkedServiceTypeProperties(object server, object systemNumber, object clientId, object userName = default(object), SecretBase password = default(SecretBase), string encryptedCredential = default(string))

        {
            this.Server = server;
            this.SystemNumber = systemNumber;
            this.ClientId = clientId;
            this.UserName = userName;
            this.Password = password;
            this.EncryptedCredential = encryptedCredential;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets or sets host name of the SAP BW instance. Type: string (or Expression
        /// with resultType string).
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "server")]
        public object Server {get; set; }

        /// <summary>
        /// Gets or sets system number of the BW system. (Usually a two-digit decimal
        /// number represented as a string.) Type: string (or Expression with
        /// resultType string).
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "systemNumber")]
        public object SystemNumber {get; set; }

        /// <summary>
        /// Gets or sets client ID of the client on the BW system. (Usually a
        /// three-digit decimal number represented as a string) Type: string (or
        /// Expression with resultType string).
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "clientId")]
        public object ClientId {get; set; }

        /// <summary>
        /// Gets or sets username to access the SAP BW server. Type: string (or
        /// Expression with resultType string).
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "userName")]
        public object UserName {get; set; }

        /// <summary>
        /// Gets or sets password to access the SAP BW server.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "password")]
        public SecretBase Password {get; set; }

        /// <summary>
        /// Gets or sets the encrypted credential used for authentication. Credentials
        /// are encrypted using the integration runtime credential manager. Type:
        /// string.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "encryptedCredential")]
        public string EncryptedCredential {get; set; }
        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (this.Server == null)
            {
                throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.CannotBeNull, "Server");
            }
            if (this.SystemNumber == null)
            {
                throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.CannotBeNull, "SystemNumber");
            }
            if (this.ClientId == null)
            {
                throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.CannotBeNull, "ClientId");
            }






        }
    }
}