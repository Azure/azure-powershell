// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.DataFactory.Models
{
    using System.Linq;

    /// <summary>
    /// Parameters of a script block.
    /// </summary>
    public partial class ScriptActivityParameter
    {
        /// <summary>
        /// Initializes a new instance of the ScriptActivityParameter class.
        /// </summary>
        public ScriptActivityParameter()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the ScriptActivityParameter class.
        /// </summary>

        /// <param name="name">The name of the parameter. Type: string (or Expression with resultType
        /// string).
        /// </param>

        /// <param name="type">The type of the parameter.
        /// Possible values include: &#39;Boolean&#39;, &#39;DateTime&#39;, &#39;DateTimeOffset&#39;,
        /// &#39;Decimal&#39;, &#39;Double&#39;, &#39;Guid&#39;, &#39;Int16&#39;, &#39;Int32&#39;, &#39;Int64&#39;, &#39;Single&#39;, &#39;String&#39;,
        /// &#39;Timespan&#39;</param>

        /// <param name="value">The value of the parameter. Type: string (or Expression with resultType
        /// string).
        /// </param>

        /// <param name="direction">The direction of the parameter.
        /// Possible values include: &#39;Input&#39;, &#39;Output&#39;, &#39;InputOutput&#39;</param>

        /// <param name="size">The size of the output direction parameter.
        /// </param>
        public ScriptActivityParameter(object name = default(object), string type = default(string), object value = default(object), string direction = default(string), int? size = default(int?))

        {
            this.Name = name;
            this.Type = type;
            this.Value = value;
            this.Direction = direction;
            this.Size = size;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets or sets the name of the parameter. Type: string (or Expression with
        /// resultType string).
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "name")]
        public object Name {get; set; }

        /// <summary>
        /// Gets or sets the type of the parameter. Possible values include: &#39;Boolean&#39;, &#39;DateTime&#39;, &#39;DateTimeOffset&#39;, &#39;Decimal&#39;, &#39;Double&#39;, &#39;Guid&#39;, &#39;Int16&#39;, &#39;Int32&#39;, &#39;Int64&#39;, &#39;Single&#39;, &#39;String&#39;, &#39;Timespan&#39;
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "type")]
        public string Type {get; set; }

        /// <summary>
        /// Gets or sets the value of the parameter. Type: string (or Expression with
        /// resultType string).
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "value")]
        public object Value {get; set; }

        /// <summary>
        /// Gets or sets the direction of the parameter. Possible values include: &#39;Input&#39;, &#39;Output&#39;, &#39;InputOutput&#39;
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "direction")]
        public string Direction {get; set; }

        /// <summary>
        /// Gets or sets the size of the output direction parameter.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "size")]
        public int? Size {get; set; }
    }
}