// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.DataFactory.Models
{
    using System.Linq;

    /// <summary>
    /// Azure Table Storage linked service properties.
    /// </summary>
    public partial class AzureTableStorageLinkedServiceTypeProperties : AzureStorageLinkedServiceTypeProperties
    {
        /// <summary>
        /// Initializes a new instance of the AzureTableStorageLinkedServiceTypeProperties class.
        /// </summary>
        public AzureTableStorageLinkedServiceTypeProperties()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the AzureTableStorageLinkedServiceTypeProperties class.
        /// </summary>

        /// <param name="connectionString">The connection string. It is mutually exclusive with sasUri property. Type:
        /// string, SecureString or AzureKeyVaultSecretReference.
        /// </param>

        /// <param name="accountKey">The Azure key vault secret reference of accountKey in connection string.
        /// </param>

        /// <param name="sasUri">SAS URI of the Azure Storage resource. It is mutually exclusive with
        /// connectionString property. Type: string, SecureString or
        /// AzureKeyVaultSecretReference.
        /// </param>

        /// <param name="sasToken">The Azure key vault secret reference of sasToken in sas uri.
        /// </param>

        /// <param name="encryptedCredential">The encrypted credential used for authentication. Credentials are encrypted
        /// using the integration runtime credential manager. Type: string.
        /// </param>

        /// <param name="serviceEndpoint">Table service endpoint of the Azure Table Storage resource. It is mutually
        /// exclusive with connectionString, sasUri property.
        /// </param>

        /// <param name="credential">The credential reference containing authentication information.
        /// </param>
        public AzureTableStorageLinkedServiceTypeProperties(object connectionString = default(object), AzureKeyVaultSecretReference accountKey = default(AzureKeyVaultSecretReference), object sasUri = default(object), AzureKeyVaultSecretReference sasToken = default(AzureKeyVaultSecretReference), string encryptedCredential = default(string), object serviceEndpoint = default(object), CredentialReference credential = default(CredentialReference))

        : base(connectionString, accountKey, sasUri, sasToken, encryptedCredential)
        {
            this.ServiceEndpoint = serviceEndpoint;
            this.Credential = credential;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets or sets table service endpoint of the Azure Table Storage resource. It
        /// is mutually exclusive with connectionString, sasUri property.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "serviceEndpoint")]
        public object ServiceEndpoint {get; set; }

        /// <summary>
        /// Gets or sets the credential reference containing authentication
        /// information.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "credential")]
        public CredentialReference Credential {get; set; }
        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public override void Validate()
        {
            base.Validate();

            if (this.Credential != null)
            {
                this.Credential.Validate();
            }
        }
    }
}