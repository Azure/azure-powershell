// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.DataFactory.Models
{
    using System.Linq;

    /// <summary>
    /// Azure Databricks Delta Lake Dataset Properties
    /// </summary>
    public partial class AzureDatabricksDeltaLakeDatasetTypeProperties
    {
        /// <summary>
        /// Initializes a new instance of the AzureDatabricksDeltaLakeDatasetTypeProperties class.
        /// </summary>
        public AzureDatabricksDeltaLakeDatasetTypeProperties()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the AzureDatabricksDeltaLakeDatasetTypeProperties class.
        /// </summary>

        /// <param name="table">The name of delta table. Type: string (or Expression with resultType
        /// string).
        /// </param>

        /// <param name="database">The database name of delta table. Type: string (or Expression with
        /// resultType string).
        /// </param>
        public AzureDatabricksDeltaLakeDatasetTypeProperties(object table = default(object), object database = default(object))

        {
            this.Table = table;
            this.Database = database;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets or sets the name of delta table. Type: string (or Expression with
        /// resultType string).
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "table")]
        public object Table {get; set; }

        /// <summary>
        /// Gets or sets the database name of delta table. Type: string (or Expression
        /// with resultType string).
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "database")]
        public object Database {get; set; }
    }
}