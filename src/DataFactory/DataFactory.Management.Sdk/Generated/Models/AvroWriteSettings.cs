// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.DataFactory.Models
{
    using System.Linq;

    /// <summary>
    /// Avro write settings.
    /// </summary>
    [Newtonsoft.Json.JsonObject("AvroWriteSettings")]
    public partial class AvroWriteSettings : FormatWriteSettings
    {
        /// <summary>
        /// Initializes a new instance of the AvroWriteSettings class.
        /// </summary>
        public AvroWriteSettings()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the AvroWriteSettings class.
        /// </summary>

        /// <param name="additionalProperties">Format write settings.
        /// </param>

        /// <param name="recordName">Top level record name in write result, which is required in AVRO spec.
        /// </param>

        /// <param name="recordNamespace">Record namespace in the write result.
        /// </param>

        /// <param name="maxRowsPerFile">Limit the written file&#39;s row count to be smaller than or equal to the
        /// specified count. Type: integer (or Expression with resultType integer).
        /// </param>

        /// <param name="fileNamePrefix">Specifies the file name pattern
        /// &lt;fileNamePrefix&gt;_&lt;fileIndex&gt;.&lt;fileExtension&gt; when copy from non-file based
        /// store without partitionOptions. Type: string (or Expression with resultType
        /// string).
        /// </param>
        public AvroWriteSettings(System.Collections.Generic.IDictionary<string, object> additionalProperties = default(System.Collections.Generic.IDictionary<string, object>), string recordName = default(string), string recordNamespace = default(string), object maxRowsPerFile = default(object), object fileNamePrefix = default(object))

        : base(additionalProperties)
        {
            this.RecordName = recordName;
            this.RecordNamespace = recordNamespace;
            this.MaxRowsPerFile = maxRowsPerFile;
            this.FileNamePrefix = fileNamePrefix;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets or sets top level record name in write result, which is required in
        /// AVRO spec.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "recordName")]
        public string RecordName {get; set; }

        /// <summary>
        /// Gets or sets record namespace in the write result.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "recordNamespace")]
        public string RecordNamespace {get; set; }

        /// <summary>
        /// Gets or sets limit the written file&#39;s row count to be smaller than or equal
        /// to the specified count. Type: integer (or Expression with resultType
        /// integer).
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "maxRowsPerFile")]
        public object MaxRowsPerFile {get; set; }

        /// <summary>
        /// Gets or sets specifies the file name pattern
        /// &lt;fileNamePrefix&gt;_&lt;fileIndex&gt;.&lt;fileExtension&gt; when copy from non-file based
        /// store without partitionOptions. Type: string (or Expression with resultType
        /// string).
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "fileNamePrefix")]
        public object FileNamePrefix {get; set; }
    }
}