// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.DataFactory.Models
{
    using System.Linq;

    /// <summary>
    /// Source and target table mapping details.
    /// </summary>
    public partial class DataMapperMapping
    {
        /// <summary>
        /// Initializes a new instance of the DataMapperMapping class.
        /// </summary>
        public DataMapperMapping()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the DataMapperMapping class.
        /// </summary>

        /// <param name="targetEntityName">Name of the target table
        /// </param>

        /// <param name="sourceEntityName">Name of the source table
        /// </param>

        /// <param name="sourceConnectionReference">The connection reference for the source connection.
        /// </param>

        /// <param name="attributeMappingInfo">This holds the user provided attribute mapping information.
        /// </param>

        /// <param name="sourceDenormalizeInfo">This holds the source denormalization information used while joining
        /// multiple sources.
        /// </param>
        public DataMapperMapping(string targetEntityName = default(string), string sourceEntityName = default(string), MapperConnectionReference sourceConnectionReference = default(MapperConnectionReference), MapperAttributeMappings attributeMappingInfo = default(MapperAttributeMappings), object sourceDenormalizeInfo = default(object))

        {
            this.TargetEntityName = targetEntityName;
            this.SourceEntityName = sourceEntityName;
            this.SourceConnectionReference = sourceConnectionReference;
            this.AttributeMappingInfo = attributeMappingInfo;
            this.SourceDenormalizeInfo = sourceDenormalizeInfo;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets or sets name of the target table
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "targetEntityName")]
        public string TargetEntityName {get; set; }

        /// <summary>
        /// Gets or sets name of the source table
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "sourceEntityName")]
        public string SourceEntityName {get; set; }

        /// <summary>
        /// Gets or sets the connection reference for the source connection.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "sourceConnectionReference")]
        public MapperConnectionReference SourceConnectionReference {get; set; }

        /// <summary>
        /// Gets or sets this holds the user provided attribute mapping information.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "attributeMappingInfo")]
        public MapperAttributeMappings AttributeMappingInfo {get; set; }

        /// <summary>
        /// Gets or sets this holds the source denormalization information used while
        /// joining multiple sources.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "sourceDenormalizeInfo")]
        public object SourceDenormalizeInfo {get; set; }
    }
}