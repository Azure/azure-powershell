// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.DataFactory.Models
{
    using System.Linq;

    /// <summary>
    /// Excel dataset properties.
    /// </summary>
    public partial class ExcelDatasetTypeProperties
    {
        /// <summary>
        /// Initializes a new instance of the ExcelDatasetTypeProperties class.
        /// </summary>
        public ExcelDatasetTypeProperties()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the ExcelDatasetTypeProperties class.
        /// </summary>

        /// <param name="location">The location of the excel storage.
        /// </param>

        /// <param name="sheetName">The sheet name of excel file. Type: string (or Expression with resultType
        /// string).
        /// </param>

        /// <param name="sheetIndex">The sheet index of excel file and default value is 0. Type: integer (or
        /// Expression with resultType integer)
        /// </param>

        /// <param name="range">The partial data of one sheet. Type: string (or Expression with resultType
        /// string).
        /// </param>

        /// <param name="firstRowAsHeader">When used as input, treat the first row of data as headers. When used as
        /// output,write the headers into the output as the first row of data. The
        /// default value is false. Type: boolean (or Expression with resultType
        /// boolean).
        /// </param>

        /// <param name="compression">The data compression method used for the json dataset.
        /// </param>

        /// <param name="nullValue">The null value string. Type: string (or Expression with resultType string).
        /// </param>
        public ExcelDatasetTypeProperties(DatasetLocation location, object sheetName = default(object), object sheetIndex = default(object), object range = default(object), object firstRowAsHeader = default(object), DatasetCompression compression = default(DatasetCompression), object nullValue = default(object))

        {
            this.Location = location;
            this.SheetName = sheetName;
            this.SheetIndex = sheetIndex;
            this.Range = range;
            this.FirstRowAsHeader = firstRowAsHeader;
            this.Compression = compression;
            this.NullValue = nullValue;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets or sets the location of the excel storage.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "location")]
        public DatasetLocation Location {get; set; }

        /// <summary>
        /// Gets or sets the sheet name of excel file. Type: string (or Expression with
        /// resultType string).
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "sheetName")]
        public object SheetName {get; set; }

        /// <summary>
        /// Gets or sets the sheet index of excel file and default value is 0. Type:
        /// integer (or Expression with resultType integer)
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "sheetIndex")]
        public object SheetIndex {get; set; }

        /// <summary>
        /// Gets or sets the partial data of one sheet. Type: string (or Expression
        /// with resultType string).
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "range")]
        public object Range {get; set; }

        /// <summary>
        /// Gets or sets when used as input, treat the first row of data as headers.
        /// When used as output,write the headers into the output as the first row of
        /// data. The default value is false. Type: boolean (or Expression with
        /// resultType boolean).
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "firstRowAsHeader")]
        public object FirstRowAsHeader {get; set; }

        /// <summary>
        /// Gets or sets the data compression method used for the json dataset.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "compression")]
        public DatasetCompression Compression {get; set; }

        /// <summary>
        /// Gets or sets the null value string. Type: string (or Expression with
        /// resultType string).
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "nullValue")]
        public object NullValue {get; set; }
        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (this.Location == null)
            {
                throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.CannotBeNull, "Location");
            }





            if (this.Compression != null)
            {
                this.Compression.Validate();
            }

        }
    }
}