// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.DataFactory.Models
{
    using System.Linq;

    /// <summary>
    /// Databricks Job activity properties.
    /// </summary>
    public partial class DatabricksJobActivityTypeProperties
    {
        /// <summary>
        /// Initializes a new instance of the DatabricksJobActivityTypeProperties class.
        /// </summary>
        public DatabricksJobActivityTypeProperties()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the DatabricksJobActivityTypeProperties class.
        /// </summary>

        /// <param name="jobId">The Id of the Databricks Job to be executed. Type: string (or Expression
        /// with resultType string).
        /// </param>

        /// <param name="jobParameters">Job parameters to be used for each run of this job. If the job takes a
        /// parameter that is not specified, the default value from the job will be
        /// used.
        /// </param>
        public DatabricksJobActivityTypeProperties(object jobId, System.Collections.Generic.IDictionary<string, object> jobParameters = default(System.Collections.Generic.IDictionary<string, object>))

        {
            this.JobId = jobId;
            this.JobParameters = jobParameters;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets or sets the Id of the Databricks Job to be executed. Type: string (or
        /// Expression with resultType string).
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "jobId")]
        public object JobId {get; set; }

        /// <summary>
        /// Gets or sets job parameters to be used for each run of this job. If the job
        /// takes a parameter that is not specified, the default value from the job
        /// will be used.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "jobParameters")]
        public System.Collections.Generic.IDictionary<string, object> JobParameters {get; set; }
        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (this.JobId == null)
            {
                throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.CannotBeNull, "JobId");
            }


        }
    }
}