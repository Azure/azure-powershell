// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.DataFactory.Models
{
    using System.Linq;

    /// <summary>
    /// Parameters for updating a factory resource.
    /// </summary>
    [Microsoft.Rest.Serialization.JsonTransformation]
    public partial class FactoryUpdateParameters
    {
        /// <summary>
        /// Initializes a new instance of the FactoryUpdateParameters class.
        /// </summary>
        public FactoryUpdateParameters()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the FactoryUpdateParameters class.
        /// </summary>

        /// <param name="tags">The resource tags.
        /// </param>

        /// <param name="identity">Managed service identity of the factory.
        /// </param>

        /// <param name="publicNetworkAccess">Whether or not public network access is allowed for the data factory.
        /// Possible values include: &#39;Enabled&#39;, &#39;Disabled&#39;</param>
        public FactoryUpdateParameters(System.Collections.Generic.IDictionary<string, string> tags = default(System.Collections.Generic.IDictionary<string, string>), FactoryIdentity identity = default(FactoryIdentity), string publicNetworkAccess = default(string))

        {
            this.Tags = tags;
            this.Identity = identity;
            this.PublicNetworkAccess = publicNetworkAccess;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets or sets the resource tags.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "tags")]
        public System.Collections.Generic.IDictionary<string, string> Tags {get; set; }

        /// <summary>
        /// Gets or sets managed service identity of the factory.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "identity")]
        public FactoryIdentity Identity {get; set; }

        /// <summary>
        /// Gets or sets whether or not public network access is allowed for the data
        /// factory. Possible values include: &#39;Enabled&#39;, &#39;Disabled&#39;
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.publicNetworkAccess")]
        public string PublicNetworkAccess {get; set; }
        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {

            if (this.Identity != null)
            {
                this.Identity.Validate();
            }

        }
    }
}