// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.DataFactory.Models
{
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// Google AdWords service linked service.
    /// </summary>
    [Newtonsoft.Json.JsonObject("GoogleAdWords")]
    [Rest.Serialization.JsonTransformation]
    public partial class GoogleAdWordsLinkedService : LinkedService
    {
        /// <summary>
        /// Initializes a new instance of the GoogleAdWordsLinkedService class.
        /// </summary>
        public GoogleAdWordsLinkedService()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the GoogleAdWordsLinkedService class.
        /// </summary>
        /// <param name="additionalProperties">Unmatched properties from the
        /// message are deserialized this collection</param>
        /// <param name="connectVia">The integration runtime reference.</param>
        /// <param name="description">Linked service description.</param>
        /// <param name="parameters">Parameters for linked service.</param>
        /// <param name="annotations">List of tags that can be used for
        /// describing the linked service.</param>
        /// <param name="connectionProperties">(Deprecated) Properties used to
        /// connect to GoogleAds. It is mutually exclusive with any other
        /// properties in the linked service. Type: object.</param>
        /// <param name="clientCustomerID">The Client customer ID of the
        /// AdWords account that you want to fetch report data for. Type:
        /// string (or Expression with resultType string).</param>
        /// <param name="developerToken">The developer token associated with
        /// the manager account that you use to grant access to the AdWords
        /// API.</param>
        /// <param name="authenticationType">The OAuth 2.0 authentication
        /// mechanism used for authentication. ServiceAuthentication can only
        /// be used on self-hosted IR. Possible values include:
        /// 'ServiceAuthentication', 'UserAuthentication'</param>
        /// <param name="refreshToken">The refresh token obtained from Google
        /// for authorizing access to AdWords for UserAuthentication.</param>
        /// <param name="clientId">The client id of the google application used
        /// to acquire the refresh token. Type: string (or Expression with
        /// resultType string).</param>
        /// <param name="clientSecret">The client secret of the google
        /// application used to acquire the refresh token.</param>
        /// <param name="email">The service account email ID that is used for
        /// ServiceAuthentication and can only be used on self-hosted IR. Type:
        /// string (or Expression with resultType string).</param>
        /// <param name="keyFilePath">(Deprecated) The full path to the .p12
        /// key file that is used to authenticate the service account email
        /// address and can only be used on self-hosted IR. Type: string (or
        /// Expression with resultType string).</param>
        /// <param name="trustedCertPath">(Deprecated) The full path of the
        /// .pem file containing trusted CA certificates for verifying the
        /// server when connecting over SSL. This property can only be set when
        /// using SSL on self-hosted IR. The default value is the cacerts.pem
        /// file installed with the IR. Type: string (or Expression with
        /// resultType string).</param>
        /// <param name="useSystemTrustStore">(Deprecated) Specifies whether to
        /// use a CA certificate from the system trust store or from a
        /// specified PEM file. The default value is false. Type: boolean (or
        /// Expression with resultType boolean).</param>
        /// <param name="privateKey">The private key that is used to
        /// authenticate the service account email address and can only be used
        /// on self-hosted IR.</param>
        /// <param name="loginCustomerID">The customer ID of the Google Ads
        /// Manager account through which you want to fetch report data of
        /// specific Customer. Type: string (or Expression with resultType
        /// string).</param>
        /// <param name="googleAdsApiVersion">The Google Ads API major version
        /// such as v14. The supported major versions could be found on
        /// https://developers.google.com/google-ads/api/docs/release-notes.
        /// Type: string (or Expression with resultType string).</param>
        /// <param name="supportLegacyDataTypes">Specifies whether to use the
        /// legacy data type mappings, which maps float, int32 and int64 from
        /// Google to string. Do not set this to true unless you want to keep
        /// backward compatibility with legacy driver's data type mappings.
        /// Type: boolean (or Expression with resultType boolean).</param>
        /// <param name="encryptedCredential">The encrypted credential used for
        /// authentication. Credentials are encrypted using the integration
        /// runtime credential manager. Type: string.</param>
        public GoogleAdWordsLinkedService(IDictionary<string, object> additionalProperties = default(IDictionary<string, object>), IntegrationRuntimeReference connectVia = default(IntegrationRuntimeReference), string description = default(string), IDictionary<string, ParameterSpecification> parameters = default(IDictionary<string, ParameterSpecification>), IList<object> annotations = default(IList<object>), object connectionProperties = default(object), object clientCustomerID = default(object), SecretBase developerToken = default(SecretBase), string authenticationType = default(string), SecretBase refreshToken = default(SecretBase), object clientId = default(object), SecretBase clientSecret = default(SecretBase), object email = default(object), object keyFilePath = default(object), object trustedCertPath = default(object), object useSystemTrustStore = default(object), SecretBase privateKey = default(SecretBase), object loginCustomerID = default(object), object googleAdsApiVersion = default(object), object supportLegacyDataTypes = default(object), string encryptedCredential = default(string))
            : base(additionalProperties, connectVia, description, parameters, annotations)
        {
            ConnectionProperties = connectionProperties;
            ClientCustomerID = clientCustomerID;
            DeveloperToken = developerToken;
            AuthenticationType = authenticationType;
            RefreshToken = refreshToken;
            ClientId = clientId;
            ClientSecret = clientSecret;
            Email = email;
            KeyFilePath = keyFilePath;
            TrustedCertPath = trustedCertPath;
            UseSystemTrustStore = useSystemTrustStore;
            PrivateKey = privateKey;
            LoginCustomerID = loginCustomerID;
            GoogleAdsApiVersion = googleAdsApiVersion;
            SupportLegacyDataTypes = supportLegacyDataTypes;
            EncryptedCredential = encryptedCredential;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets (Deprecated) Properties used to connect to GoogleAds.
        /// It is mutually exclusive with any other properties in the linked
        /// service. Type: object.
        /// </summary>
        [JsonProperty(PropertyName = "typeProperties.connectionProperties")]
        public object ConnectionProperties { get; set; }

        /// <summary>
        /// Gets or sets the Client customer ID of the AdWords account that you
        /// want to fetch report data for. Type: string (or Expression with
        /// resultType string).
        /// </summary>
        [JsonProperty(PropertyName = "typeProperties.clientCustomerID")]
        public object ClientCustomerID { get; set; }

        /// <summary>
        /// Gets or sets the developer token associated with the manager
        /// account that you use to grant access to the AdWords API.
        /// </summary>
        [JsonProperty(PropertyName = "typeProperties.developerToken")]
        public SecretBase DeveloperToken { get; set; }

        /// <summary>
        /// Gets or sets the OAuth 2.0 authentication mechanism used for
        /// authentication. ServiceAuthentication can only be used on
        /// self-hosted IR. Possible values include: 'ServiceAuthentication',
        /// 'UserAuthentication'
        /// </summary>
        [JsonProperty(PropertyName = "typeProperties.authenticationType")]
        public string AuthenticationType { get; set; }

        /// <summary>
        /// Gets or sets the refresh token obtained from Google for authorizing
        /// access to AdWords for UserAuthentication.
        /// </summary>
        [JsonProperty(PropertyName = "typeProperties.refreshToken")]
        public SecretBase RefreshToken { get; set; }

        /// <summary>
        /// Gets or sets the client id of the google application used to
        /// acquire the refresh token. Type: string (or Expression with
        /// resultType string).
        /// </summary>
        [JsonProperty(PropertyName = "typeProperties.clientId")]
        public object ClientId { get; set; }

        /// <summary>
        /// Gets or sets the client secret of the google application used to
        /// acquire the refresh token.
        /// </summary>
        [JsonProperty(PropertyName = "typeProperties.clientSecret")]
        public SecretBase ClientSecret { get; set; }

        /// <summary>
        /// Gets or sets the service account email ID that is used for
        /// ServiceAuthentication and can only be used on self-hosted IR. Type:
        /// string (or Expression with resultType string).
        /// </summary>
        [JsonProperty(PropertyName = "typeProperties.email")]
        public object Email { get; set; }

        /// <summary>
        /// Gets or sets (Deprecated) The full path to the .p12 key file that
        /// is used to authenticate the service account email address and can
        /// only be used on self-hosted IR. Type: string (or Expression with
        /// resultType string).
        /// </summary>
        [JsonProperty(PropertyName = "typeProperties.keyFilePath")]
        public object KeyFilePath { get; set; }

        /// <summary>
        /// Gets or sets (Deprecated) The full path of the .pem file containing
        /// trusted CA certificates for verifying the server when connecting
        /// over SSL. This property can only be set when using SSL on
        /// self-hosted IR. The default value is the cacerts.pem file installed
        /// with the IR. Type: string (or Expression with resultType string).
        /// </summary>
        [JsonProperty(PropertyName = "typeProperties.trustedCertPath")]
        public object TrustedCertPath { get; set; }

        /// <summary>
        /// Gets or sets (Deprecated) Specifies whether to use a CA certificate
        /// from the system trust store or from a specified PEM file. The
        /// default value is false. Type: boolean (or Expression with
        /// resultType boolean).
        /// </summary>
        [JsonProperty(PropertyName = "typeProperties.useSystemTrustStore")]
        public object UseSystemTrustStore { get; set; }

        /// <summary>
        /// Gets or sets the private key that is used to authenticate the
        /// service account email address and can only be used on self-hosted
        /// IR.
        /// </summary>
        [JsonProperty(PropertyName = "typeProperties.privateKey")]
        public SecretBase PrivateKey { get; set; }

        /// <summary>
        /// Gets or sets the customer ID of the Google Ads Manager account
        /// through which you want to fetch report data of specific Customer.
        /// Type: string (or Expression with resultType string).
        /// </summary>
        [JsonProperty(PropertyName = "typeProperties.loginCustomerID")]
        public object LoginCustomerID { get; set; }

        /// <summary>
        /// Gets or sets the Google Ads API major version such as v14. The
        /// supported major versions could be found on
        /// https://developers.google.com/google-ads/api/docs/release-notes.
        /// Type: string (or Expression with resultType string).
        /// </summary>
        [JsonProperty(PropertyName = "typeProperties.googleAdsApiVersion")]
        public object GoogleAdsApiVersion { get; set; }

        /// <summary>
        /// Gets or sets specifies whether to use the legacy data type
        /// mappings, which maps float, int32 and int64 from Google to string.
        /// Do not set this to true unless you want to keep backward
        /// compatibility with legacy driver's data type mappings. Type:
        /// boolean (or Expression with resultType boolean).
        /// </summary>
        [JsonProperty(PropertyName = "typeProperties.supportLegacyDataTypes")]
        public object SupportLegacyDataTypes { get; set; }

        /// <summary>
        /// Gets or sets the encrypted credential used for authentication.
        /// Credentials are encrypted using the integration runtime credential
        /// manager. Type: string.
        /// </summary>
        [JsonProperty(PropertyName = "typeProperties.encryptedCredential")]
        public string EncryptedCredential { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public override void Validate()
        {
            base.Validate();
        }
    }
}
