// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.DataFactory.Models
{
    using System.Linq;

    /// <summary>
    /// MongoDB Atlas linked service properties.
    /// </summary>
    public partial class MongoDbAtlasLinkedServiceTypeProperties
    {
        /// <summary>
        /// Initializes a new instance of the MongoDbAtlasLinkedServiceTypeProperties class.
        /// </summary>
        public MongoDbAtlasLinkedServiceTypeProperties()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the MongoDbAtlasLinkedServiceTypeProperties class.
        /// </summary>

        /// <param name="connectionString">The MongoDB Atlas connection string. Type: string, SecureString or
        /// AzureKeyVaultSecretReference. Type: string, SecureString or
        /// AzureKeyVaultSecretReference.
        /// </param>

        /// <param name="database">The name of the MongoDB Atlas database that you want to access. Type:
        /// string (or Expression with resultType string).
        /// </param>

        /// <param name="driverVersion">The driver version that you want to choose. Allowed value are v1 and v2.
        /// Type: string (or Expression with resultType string).
        /// </param>
        public MongoDbAtlasLinkedServiceTypeProperties(object connectionString, object database, object driverVersion = default(object))

        {
            this.ConnectionString = connectionString;
            this.Database = database;
            this.DriverVersion = driverVersion;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets or sets the MongoDB Atlas connection string. Type: string,
        /// SecureString or AzureKeyVaultSecretReference. Type: string, SecureString or
        /// AzureKeyVaultSecretReference.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "connectionString")]
        public object ConnectionString {get; set; }

        /// <summary>
        /// Gets or sets the name of the MongoDB Atlas database that you want to
        /// access. Type: string (or Expression with resultType string).
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "database")]
        public object Database {get; set; }

        /// <summary>
        /// Gets or sets the driver version that you want to choose. Allowed value are
        /// v1 and v2. Type: string (or Expression with resultType string).
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "driverVersion")]
        public object DriverVersion {get; set; }
        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (this.ConnectionString == null)
            {
                throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.CannotBeNull, "ConnectionString");
            }
            if (this.Database == null)
            {
                throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.CannotBeNull, "Database");
            }



        }
    }
}