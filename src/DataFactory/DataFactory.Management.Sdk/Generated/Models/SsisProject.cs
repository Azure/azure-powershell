// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.DataFactory.Models
{
    using System.Linq;

    /// <summary>
    /// Ssis project.
    /// </summary>
    [Newtonsoft.Json.JsonObject("Project")]
    public partial class SsisProject : SsisObjectMetadata
    {
        /// <summary>
        /// Initializes a new instance of the SsisProject class.
        /// </summary>
        public SsisProject()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the SsisProject class.
        /// </summary>

        /// <param name="id">Metadata id.
        /// </param>

        /// <param name="name">Metadata name.
        /// </param>

        /// <param name="description">Metadata description.
        /// </param>

        /// <param name="folderId">Folder id which contains project.
        /// </param>

        /// <param name="version">Project version.
        /// </param>

        /// <param name="environmentRefs">Environment reference in project
        /// </param>

        /// <param name="parameters">Parameters in project
        /// </param>
        public SsisProject(long? id = default(long?), string name = default(string), string description = default(string), long? folderId = default(long?), long? version = default(long?), System.Collections.Generic.IList<SsisEnvironmentReference> environmentRefs = default(System.Collections.Generic.IList<SsisEnvironmentReference>), System.Collections.Generic.IList<SsisParameter> parameters = default(System.Collections.Generic.IList<SsisParameter>))

        : base(id, name, description)
        {
            this.FolderId = folderId;
            this.Version = version;
            this.EnvironmentRefs = environmentRefs;
            this.Parameters = parameters;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets or sets folder id which contains project.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "folderId")]
        public long? FolderId {get; set; }

        /// <summary>
        /// Gets or sets project version.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "version")]
        public long? Version {get; set; }

        /// <summary>
        /// Gets or sets environment reference in project
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "environmentRefs")]
        public System.Collections.Generic.IList<SsisEnvironmentReference> EnvironmentRefs {get; set; }

        /// <summary>
        /// Gets or sets parameters in project
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "parameters")]
        public System.Collections.Generic.IList<SsisParameter> Parameters {get; set; }
    }
}