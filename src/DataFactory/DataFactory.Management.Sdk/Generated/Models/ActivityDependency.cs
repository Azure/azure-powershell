// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.DataFactory.Models
{
    using System.Linq;

    /// <summary>
    /// Activity dependency information.
    /// </summary>
    public partial class ActivityDependency
    {
        /// <summary>
        /// Initializes a new instance of the ActivityDependency class.
        /// </summary>
        public ActivityDependency()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the ActivityDependency class.
        /// </summary>

        /// <param name="additionalProperties">Activity dependency information.
        /// </param>

        /// <param name="activity">Activity name.
        /// </param>

        /// <param name="dependencyConditions">Match-Condition for the dependency.
        /// </param>
        public ActivityDependency(string activity, System.Collections.Generic.IList<string> dependencyConditions, System.Collections.Generic.IDictionary<string, object> additionalProperties = default(System.Collections.Generic.IDictionary<string, object>))

        {
            this.AdditionalProperties = additionalProperties;
            this.Activity = activity;
            this.DependencyConditions = dependencyConditions;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets or sets activity dependency information.
        /// </summary>
        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties {get; set; }

        /// <summary>
        /// Gets or sets activity name.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "activity")]
        public string Activity {get; set; }

        /// <summary>
        /// Gets or sets match-Condition for the dependency.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "dependencyConditions")]
        public System.Collections.Generic.IList<string> DependencyConditions {get; set; }
        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (this.Activity == null)
            {
                throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.CannotBeNull, "Activity");
            }
            if (this.DependencyConditions == null)
            {
                throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.CannotBeNull, "DependencyConditions");
            }



        }
    }
}