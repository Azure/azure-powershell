// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.DataFactory.Models
{
    using System.Linq;

    /// <summary>
    /// Dataset reference type.
    /// </summary>
    public partial class DatasetReference
    {
        /// <summary>
        /// Initializes a new instance of the DatasetReference class.
        /// </summary>
        public DatasetReference()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the DatasetReference class.
        /// </summary>

        /// <param name="referenceName">Reference dataset name.
        /// </param>

        /// <param name="parameters">Arguments for dataset.
        /// </param>
        public DatasetReference(string referenceName, System.Collections.Generic.IDictionary<string, object> parameters = default(System.Collections.Generic.IDictionary<string, object>))

        {
            this.ReferenceName = referenceName;
            this.Parameters = parameters;
            CustomInit();
        }
        /// <summary>
        /// Static constructor for DatasetReference class.
        /// </summary>
        static DatasetReference()
        {
            Type = "DatasetReference";
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets or sets reference dataset name.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "referenceName")]
        public string ReferenceName {get; set; }

        /// <summary>
        /// Gets or sets arguments for dataset.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "parameters")]
        public System.Collections.Generic.IDictionary<string, object> Parameters {get; set; }
        /// <summary>
        /// Gets or sets dataset reference type.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "type")]
        public static string Type {get; private set; }
        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (this.ReferenceName == null)
            {
                throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.CannotBeNull, "ReferenceName");
            }



        }
    }
}