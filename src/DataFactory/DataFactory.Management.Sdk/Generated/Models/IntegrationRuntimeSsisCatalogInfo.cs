// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.DataFactory.Models
{
    using System.Linq;

    /// <summary>
    /// Catalog information for managed dedicated integration runtime.
    /// </summary>
    public partial class IntegrationRuntimeSsisCatalogInfo
    {
        /// <summary>
        /// Initializes a new instance of the IntegrationRuntimeSsisCatalogInfo class.
        /// </summary>
        public IntegrationRuntimeSsisCatalogInfo()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the IntegrationRuntimeSsisCatalogInfo class.
        /// </summary>

        /// <param name="additionalProperties">Catalog information for managed dedicated integration runtime.
        /// </param>

        /// <param name="catalogServerEndpoint">The catalog database server URL.
        /// </param>

        /// <param name="catalogAdminUserName">The administrator user name of catalog database.
        /// </param>

        /// <param name="catalogAdminPassword">The password of the administrator user account of the catalog database.
        /// </param>

        /// <param name="catalogPricingTier">The pricing tier for the catalog database. The valid values could be found
        /// in https://azure.microsoft.com/en-us/pricing/details/sql-database/
        /// Possible values include: &#39;Basic&#39;, &#39;Standard&#39;, &#39;Premium&#39;, &#39;PremiumRS&#39;</param>

        /// <param name="dualStandbyPairName">The dual standby pair name of Azure-SSIS Integration Runtimes to support
        /// SSISDB failover.
        /// </param>
        public IntegrationRuntimeSsisCatalogInfo(System.Collections.Generic.IDictionary<string, object> additionalProperties = default(System.Collections.Generic.IDictionary<string, object>), string catalogServerEndpoint = default(string), string catalogAdminUserName = default(string), SecureString catalogAdminPassword = default(SecureString), string catalogPricingTier = default(string), string dualStandbyPairName = default(string))

        {
            this.AdditionalProperties = additionalProperties;
            this.CatalogServerEndpoint = catalogServerEndpoint;
            this.CatalogAdminUserName = catalogAdminUserName;
            this.CatalogAdminPassword = catalogAdminPassword;
            this.CatalogPricingTier = catalogPricingTier;
            this.DualStandbyPairName = dualStandbyPairName;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets or sets catalog information for managed dedicated integration runtime.
        /// </summary>
        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties {get; set; }

        /// <summary>
        /// Gets or sets the catalog database server URL.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "catalogServerEndpoint")]
        public string CatalogServerEndpoint {get; set; }

        /// <summary>
        /// Gets or sets the administrator user name of catalog database.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "catalogAdminUserName")]
        public string CatalogAdminUserName {get; set; }

        /// <summary>
        /// Gets or sets the password of the administrator user account of the catalog
        /// database.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "catalogAdminPassword")]
        public SecureString CatalogAdminPassword {get; set; }

        /// <summary>
        /// Gets or sets the pricing tier for the catalog database. The valid values
        /// could be found in
        /// https://azure.microsoft.com/en-us/pricing/details/sql-database/ Possible values include: &#39;Basic&#39;, &#39;Standard&#39;, &#39;Premium&#39;, &#39;PremiumRS&#39;
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "catalogPricingTier")]
        public string CatalogPricingTier {get; set; }

        /// <summary>
        /// Gets or sets the dual standby pair name of Azure-SSIS Integration Runtimes
        /// to support SSISDB failover.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "dualStandbyPairName")]
        public string DualStandbyPairName {get; set; }
        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {


            if (this.CatalogAdminUserName != null)
            {
                if (this.CatalogAdminUserName.Length > 128)
                {
                    throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.MaxLength, "CatalogAdminUserName", 128);
                }
                if (this.CatalogAdminUserName.Length < 1)
                {
                    throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.MinLength, "CatalogAdminUserName", 1);
                }
            }
            if (this.CatalogAdminPassword != null)
            {
                this.CatalogAdminPassword.Validate();
            }


        }
    }
}