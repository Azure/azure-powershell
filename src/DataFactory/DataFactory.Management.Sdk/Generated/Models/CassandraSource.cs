// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.DataFactory.Models
{
    using System.Linq;

    /// <summary>
    /// A copy activity source for a Cassandra database.
    /// </summary>
    [Newtonsoft.Json.JsonObject("CassandraSource")]
    public partial class CassandraSource : TabularSource
    {
        /// <summary>
        /// Initializes a new instance of the CassandraSource class.
        /// </summary>
        public CassandraSource()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the CassandraSource class.
        /// </summary>

        /// <param name="sourceRetryCount">Source retry count. Type: integer (or Expression with resultType integer).
        /// </param>

        /// <param name="sourceRetryWait">Source retry wait. Type: string (or Expression with resultType string),
        /// pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
        /// </param>

        /// <param name="maxConcurrentConnections">The maximum concurrent connection count for the source data store. Type:
        /// integer (or Expression with resultType integer).
        /// </param>

        /// <param name="disableMetricsCollection">If true, disable data store metrics collection. Default is false. Type:
        /// boolean (or Expression with resultType boolean).
        /// </param>

        /// <param name="queryTimeout">Query timeout. Type: string (or Expression with resultType string),
        /// pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
        /// </param>

        /// <param name="additionalColumns">Specifies the additional columns to be added to source data. Type: array of
        /// objects(AdditionalColumns) (or Expression with resultType array of
        /// objects).
        /// </param>

        /// <param name="query">Database query. Should be a SQL-92 query expression or Cassandra Query
        /// Language (CQL) command. Type: string (or Expression with resultType
        /// string).
        /// </param>

        /// <param name="consistencyLevel">The consistency level specifies how many Cassandra servers must respond to
        /// a read request before returning data to the client application. Cassandra
        /// checks the specified number of Cassandra servers for data to satisfy the
        /// read request. Must be one of cassandraSourceReadConsistencyLevels. The
        /// default value is &#39;ONE&#39;. It is case-insensitive.
        /// Possible values include: &#39;ALL&#39;, &#39;EACH_QUORUM&#39;, &#39;QUORUM&#39;, &#39;LOCAL_QUORUM&#39;,
        /// &#39;ONE&#39;, &#39;TWO&#39;, &#39;THREE&#39;, &#39;LOCAL_ONE&#39;, &#39;SERIAL&#39;, &#39;LOCAL_SERIAL&#39;</param>
        public CassandraSource(object sourceRetryCount = default(object), object sourceRetryWait = default(object), object maxConcurrentConnections = default(object), object disableMetricsCollection = default(object), object queryTimeout = default(object), object additionalColumns = default(object), object query = default(object), string consistencyLevel = default(string))

        : base(sourceRetryCount, sourceRetryWait, maxConcurrentConnections, disableMetricsCollection, queryTimeout, additionalColumns)
        {
            this.Query = query;
            this.ConsistencyLevel = consistencyLevel;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets or sets database query. Should be a SQL-92 query expression or
        /// Cassandra Query Language (CQL) command. Type: string (or Expression with
        /// resultType string).
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "query")]
        public object Query {get; set; }

        /// <summary>
        /// Gets or sets the consistency level specifies how many Cassandra servers
        /// must respond to a read request before returning data to the client
        /// application. Cassandra checks the specified number of Cassandra servers for
        /// data to satisfy the read request. Must be one of
        /// cassandraSourceReadConsistencyLevels. The default value is &#39;ONE&#39;. It is
        /// case-insensitive. Possible values include: &#39;ALL&#39;, &#39;EACH_QUORUM&#39;, &#39;QUORUM&#39;, &#39;LOCAL_QUORUM&#39;, &#39;ONE&#39;, &#39;TWO&#39;, &#39;THREE&#39;, &#39;LOCAL_ONE&#39;, &#39;SERIAL&#39;, &#39;LOCAL_SERIAL&#39;
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "consistencyLevel")]
        public string ConsistencyLevel {get; set; }
    }
}