// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.DataFactory.Models
{
    using System.Linq;

    /// <summary>
    /// Nested representation of a complex expression.
    /// </summary>
    public partial class ExpressionV2
    {
        /// <summary>
        /// Initializes a new instance of the ExpressionV2 class.
        /// </summary>
        public ExpressionV2()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the ExpressionV2 class.
        /// </summary>

        /// <param name="type">Type of expressions supported by the system. Type: string.
        /// Possible values include: &#39;Constant&#39;, &#39;Field&#39;, &#39;Unary&#39;, &#39;Binary&#39;</param>

        /// <param name="value">Value for Constant/Field Type: string.
        /// </param>

        /// <param name="operatorProperty">Expression operator value Type: string.
        /// </param>

        /// <param name="operands">List of nested expressions.
        /// </param>
        public ExpressionV2(string type = default(string), string value = default(string), string operatorProperty = default(string), System.Collections.Generic.IList<ExpressionV2> operands = default(System.Collections.Generic.IList<ExpressionV2>))

        {
            this.Type = type;
            this.Value = value;
            this.OperatorProperty = operatorProperty;
            this.Operands = operands;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets or sets type of expressions supported by the system. Type: string. Possible values include: &#39;Constant&#39;, &#39;Field&#39;, &#39;Unary&#39;, &#39;Binary&#39;
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "type")]
        public string Type {get; set; }

        /// <summary>
        /// Gets or sets value for Constant/Field Type: string.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "value")]
        public string Value {get; set; }

        /// <summary>
        /// Gets or sets expression operator value Type: string.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "operator")]
        public string OperatorProperty {get; set; }

        /// <summary>
        /// Gets or sets list of nested expressions.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "operands")]
        public System.Collections.Generic.IList<ExpressionV2> Operands {get; set; }
    }
}