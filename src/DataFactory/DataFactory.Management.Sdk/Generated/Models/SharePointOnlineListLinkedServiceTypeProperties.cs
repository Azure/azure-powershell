// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.DataFactory.Models
{
    using System.Linq;

    /// <summary>
    /// SharePoint Online List linked service properties.
    /// </summary>
    public partial class SharePointOnlineListLinkedServiceTypeProperties
    {
        /// <summary>
        /// Initializes a new instance of the SharePointOnlineListLinkedServiceTypeProperties class.
        /// </summary>
        public SharePointOnlineListLinkedServiceTypeProperties()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the SharePointOnlineListLinkedServiceTypeProperties class.
        /// </summary>

        /// <param name="siteUrl">The URL of the SharePoint Online site. For example,
        /// https://contoso.sharepoint.com/sites/siteName. Type: string (or Expression
        /// with resultType string).
        /// </param>

        /// <param name="tenantId">The tenant ID under which your application resides. You can find it from
        /// Azure portal Active Directory overview page. Type: string (or Expression
        /// with resultType string).
        /// </param>

        /// <param name="servicePrincipalId">The application (client) ID of your application registered in Azure Active
        /// Directory. Make sure to grant SharePoint site permission to this
        /// application. Type: string (or Expression with resultType string).
        /// </param>

        /// <param name="servicePrincipalKey">The client secret of your application registered in Azure Active Directory.
        /// Type: string (or Expression with resultType string).
        /// </param>

        /// <param name="encryptedCredential">The encrypted credential used for authentication. Credentials are encrypted
        /// using the integration runtime credential manager. Type: string.
        /// </param>
        public SharePointOnlineListLinkedServiceTypeProperties(object siteUrl, object tenantId, object servicePrincipalId, SecretBase servicePrincipalKey, string encryptedCredential = default(string))

        {
            this.SiteUrl = siteUrl;
            this.TenantId = tenantId;
            this.ServicePrincipalId = servicePrincipalId;
            this.ServicePrincipalKey = servicePrincipalKey;
            this.EncryptedCredential = encryptedCredential;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets or sets the URL of the SharePoint Online site. For example,
        /// https://contoso.sharepoint.com/sites/siteName. Type: string (or Expression
        /// with resultType string).
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "siteUrl")]
        public object SiteUrl {get; set; }

        /// <summary>
        /// Gets or sets the tenant ID under which your application resides. You can
        /// find it from Azure portal Active Directory overview page. Type: string (or
        /// Expression with resultType string).
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "tenantId")]
        public object TenantId {get; set; }

        /// <summary>
        /// Gets or sets the application (client) ID of your application registered in
        /// Azure Active Directory. Make sure to grant SharePoint site permission to
        /// this application. Type: string (or Expression with resultType string).
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "servicePrincipalId")]
        public object ServicePrincipalId {get; set; }

        /// <summary>
        /// Gets or sets the client secret of your application registered in Azure
        /// Active Directory. Type: string (or Expression with resultType string).
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "servicePrincipalKey")]
        public SecretBase ServicePrincipalKey {get; set; }

        /// <summary>
        /// Gets or sets the encrypted credential used for authentication. Credentials
        /// are encrypted using the integration runtime credential manager. Type:
        /// string.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "encryptedCredential")]
        public string EncryptedCredential {get; set; }
        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (this.SiteUrl == null)
            {
                throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.CannotBeNull, "SiteUrl");
            }
            if (this.TenantId == null)
            {
                throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.CannotBeNull, "TenantId");
            }
            if (this.ServicePrincipalId == null)
            {
                throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.CannotBeNull, "ServicePrincipalId");
            }
            if (this.ServicePrincipalKey == null)
            {
                throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.CannotBeNull, "ServicePrincipalKey");
            }





        }
    }
}