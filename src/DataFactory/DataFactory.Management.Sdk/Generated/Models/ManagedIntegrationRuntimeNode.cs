// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.DataFactory.Models
{
    using System.Linq;

    /// <summary>
    /// Properties of integration runtime node.
    /// </summary>
    public partial class ManagedIntegrationRuntimeNode
    {
        /// <summary>
        /// Initializes a new instance of the ManagedIntegrationRuntimeNode class.
        /// </summary>
        public ManagedIntegrationRuntimeNode()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the ManagedIntegrationRuntimeNode class.
        /// </summary>

        /// <param name="additionalProperties">Properties of integration runtime node.
        /// </param>

        /// <param name="nodeId">The managed integration runtime node id.
        /// </param>

        /// <param name="status">The managed integration runtime node status.
        /// Possible values include: &#39;Starting&#39;, &#39;Available&#39;, &#39;Recycling&#39;,
        /// &#39;Unavailable&#39;</param>

        /// <param name="errors">The errors that occurred on this integration runtime node.
        /// </param>
        public ManagedIntegrationRuntimeNode(System.Collections.Generic.IDictionary<string, object> additionalProperties = default(System.Collections.Generic.IDictionary<string, object>), string nodeId = default(string), string status = default(string), System.Collections.Generic.IList<ManagedIntegrationRuntimeError> errors = default(System.Collections.Generic.IList<ManagedIntegrationRuntimeError>))

        {
            this.AdditionalProperties = additionalProperties;
            this.NodeId = nodeId;
            this.Status = status;
            this.Errors = errors;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets or sets properties of integration runtime node.
        /// </summary>
        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties {get; set; }

        /// <summary>
        /// Gets the managed integration runtime node id.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "nodeId")]
        public string NodeId {get; private set; }

        /// <summary>
        /// Gets the managed integration runtime node status. Possible values include: &#39;Starting&#39;, &#39;Available&#39;, &#39;Recycling&#39;, &#39;Unavailable&#39;
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "status")]
        public string Status {get; private set; }

        /// <summary>
        /// Gets or sets the errors that occurred on this integration runtime node.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "errors")]
        public System.Collections.Generic.IList<ManagedIntegrationRuntimeError> Errors {get; set; }
    }
}