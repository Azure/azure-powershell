// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.DataFactory.Models
{
    using System.Linq;

    /// <summary>
    /// SSIS access credential.
    /// </summary>
    public partial class SsisAccessCredential
    {
        /// <summary>
        /// Initializes a new instance of the SsisAccessCredential class.
        /// </summary>
        public SsisAccessCredential()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the SsisAccessCredential class.
        /// </summary>

        /// <param name="domain">Domain for windows authentication. Type: string (or Expression with
        /// resultType string).
        /// </param>

        /// <param name="userName">UseName for windows authentication. Type: string (or Expression with
        /// resultType string).
        /// </param>

        /// <param name="password">Password for windows authentication.
        /// </param>
        public SsisAccessCredential(object domain, object userName, SecretBase password)

        {
            this.Domain = domain;
            this.UserName = userName;
            this.Password = password;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets or sets domain for windows authentication. Type: string (or Expression
        /// with resultType string).
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "domain")]
        public object Domain {get; set; }

        /// <summary>
        /// Gets or sets useName for windows authentication. Type: string (or
        /// Expression with resultType string).
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "userName")]
        public object UserName {get; set; }

        /// <summary>
        /// Gets or sets password for windows authentication.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "password")]
        public SecretBase Password {get; set; }
        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (this.Domain == null)
            {
                throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.CannotBeNull, "Domain");
            }
            if (this.UserName == null)
            {
                throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.CannotBeNull, "UserName");
            }
            if (this.Password == null)
            {
                throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.CannotBeNull, "Password");
            }



        }
    }
}