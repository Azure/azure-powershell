// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.DataFactory.Models
{
    using System.Linq;

    /// <summary>
    /// Execute pipeline activity properties.
    /// </summary>
    public partial class ExecutePipelineActivityTypeProperties
    {
        /// <summary>
        /// Initializes a new instance of the ExecutePipelineActivityTypeProperties class.
        /// </summary>
        public ExecutePipelineActivityTypeProperties()
        {
            this.Pipeline = new PipelineReference();
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the ExecutePipelineActivityTypeProperties class.
        /// </summary>

        /// <param name="pipeline">Pipeline reference.
        /// </param>

        /// <param name="parameters">Pipeline parameters.
        /// </param>

        /// <param name="waitOnCompletion">Defines whether activity execution will wait for the dependent pipeline
        /// execution to finish. Default is false.
        /// </param>
        public ExecutePipelineActivityTypeProperties(PipelineReference pipeline, System.Collections.Generic.IDictionary<string, object> parameters = default(System.Collections.Generic.IDictionary<string, object>), bool? waitOnCompletion = default(bool?))

        {
            this.Pipeline = pipeline;
            this.Parameters = parameters;
            this.WaitOnCompletion = waitOnCompletion;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets or sets pipeline reference.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "pipeline")]
        public PipelineReference Pipeline {get; set; }

        /// <summary>
        /// Gets or sets pipeline parameters.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "parameters")]
        public System.Collections.Generic.IDictionary<string, object> Parameters {get; set; }

        /// <summary>
        /// Gets or sets defines whether activity execution will wait for the dependent
        /// pipeline execution to finish. Default is false.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "waitOnCompletion")]
        public bool? WaitOnCompletion {get; set; }
        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (this.Pipeline == null)
            {
                throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.CannotBeNull, "Pipeline");
            }
            if (this.Pipeline != null)
            {
                this.Pipeline.Validate();
            }

        }
    }
}