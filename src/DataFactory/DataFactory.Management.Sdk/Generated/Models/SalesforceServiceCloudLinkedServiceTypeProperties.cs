// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.DataFactory.Models
{
    using System.Linq;

    /// <summary>
    /// Salesforce Service Cloud linked service properties.
    /// </summary>
    public partial class SalesforceServiceCloudLinkedServiceTypeProperties
    {
        /// <summary>
        /// Initializes a new instance of the SalesforceServiceCloudLinkedServiceTypeProperties class.
        /// </summary>
        public SalesforceServiceCloudLinkedServiceTypeProperties()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the SalesforceServiceCloudLinkedServiceTypeProperties class.
        /// </summary>

        /// <param name="environmentUrl">The URL of Salesforce Service Cloud instance. Default is
        /// &#39;https://login.salesforce.com&#39;. To copy data from sandbox, specify
        /// &#39;https://test.salesforce.com&#39;. To copy data from custom domain, specify,
        /// for example, &#39;https://[domain].my.salesforce.com&#39;. Type: string (or
        /// Expression with resultType string).
        /// </param>

        /// <param name="username">The username for Basic authentication of the Salesforce instance. Type:
        /// string (or Expression with resultType string).
        /// </param>

        /// <param name="password">The password for Basic authentication of the Salesforce instance.
        /// </param>

        /// <param name="securityToken">The security token is optional to remotely access Salesforce instance.
        /// </param>

        /// <param name="apiVersion">The Salesforce API version used in ADF. Type: string (or Expression with
        /// resultType string).
        /// </param>

        /// <param name="extendedProperties">Extended properties appended to the connection string. Type: string (or
        /// Expression with resultType string).
        /// </param>

        /// <param name="encryptedCredential">The encrypted credential used for authentication. Credentials are encrypted
        /// using the integration runtime credential manager. Type: string.
        /// </param>
        public SalesforceServiceCloudLinkedServiceTypeProperties(object environmentUrl = default(object), object username = default(object), SecretBase password = default(SecretBase), SecretBase securityToken = default(SecretBase), object apiVersion = default(object), object extendedProperties = default(object), string encryptedCredential = default(string))

        {
            this.EnvironmentUrl = environmentUrl;
            this.Username = username;
            this.Password = password;
            this.SecurityToken = securityToken;
            this.ApiVersion = apiVersion;
            this.ExtendedProperties = extendedProperties;
            this.EncryptedCredential = encryptedCredential;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets or sets the URL of Salesforce Service Cloud instance. Default is
        /// &#39;https://login.salesforce.com&#39;. To copy data from sandbox, specify
        /// &#39;https://test.salesforce.com&#39;. To copy data from custom domain, specify,
        /// for example, &#39;https://[domain].my.salesforce.com&#39;. Type: string (or
        /// Expression with resultType string).
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "environmentUrl")]
        public object EnvironmentUrl {get; set; }

        /// <summary>
        /// Gets or sets the username for Basic authentication of the Salesforce
        /// instance. Type: string (or Expression with resultType string).
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "username")]
        public object Username {get; set; }

        /// <summary>
        /// Gets or sets the password for Basic authentication of the Salesforce
        /// instance.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "password")]
        public SecretBase Password {get; set; }

        /// <summary>
        /// Gets or sets the security token is optional to remotely access Salesforce
        /// instance.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "securityToken")]
        public SecretBase SecurityToken {get; set; }

        /// <summary>
        /// Gets or sets the Salesforce API version used in ADF. Type: string (or
        /// Expression with resultType string).
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "apiVersion")]
        public object ApiVersion {get; set; }

        /// <summary>
        /// Gets or sets extended properties appended to the connection string. Type:
        /// string (or Expression with resultType string).
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "extendedProperties")]
        public object ExtendedProperties {get; set; }

        /// <summary>
        /// Gets or sets the encrypted credential used for authentication. Credentials
        /// are encrypted using the integration runtime credential manager. Type:
        /// string.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "encryptedCredential")]
        public string EncryptedCredential {get; set; }
    }
}