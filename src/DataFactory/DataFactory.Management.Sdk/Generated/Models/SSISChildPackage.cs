// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.DataFactory.Models
{
    using System.Linq;

    /// <summary>
    /// SSIS embedded child package.
    /// </summary>
    public partial class SsisChildPackage
    {
        /// <summary>
        /// Initializes a new instance of the SsisChildPackage class.
        /// </summary>
        public SsisChildPackage()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the SsisChildPackage class.
        /// </summary>

        /// <param name="packagePath">Path for embedded child package. Type: string (or Expression with
        /// resultType string).
        /// </param>

        /// <param name="packageName">Name for embedded child package.
        /// </param>

        /// <param name="packageContent">Content for embedded child package. Type: string (or Expression with
        /// resultType string).
        /// </param>

        /// <param name="packageLastModifiedDate">Last modified date for embedded child package.
        /// </param>
        public SsisChildPackage(object packagePath, object packageContent, string packageName = default(string), string packageLastModifiedDate = default(string))

        {
            this.PackagePath = packagePath;
            this.PackageName = packageName;
            this.PackageContent = packageContent;
            this.PackageLastModifiedDate = packageLastModifiedDate;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets or sets path for embedded child package. Type: string (or Expression
        /// with resultType string).
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "packagePath")]
        public object PackagePath {get; set; }

        /// <summary>
        /// Gets or sets name for embedded child package.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "packageName")]
        public string PackageName {get; set; }

        /// <summary>
        /// Gets or sets content for embedded child package. Type: string (or
        /// Expression with resultType string).
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "packageContent")]
        public object PackageContent {get; set; }

        /// <summary>
        /// Gets or sets last modified date for embedded child package.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "packageLastModifiedDate")]
        public string PackageLastModifiedDate {get; set; }
        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (this.PackagePath == null)
            {
                throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.CannotBeNull, "PackagePath");
            }
            if (this.PackageContent == null)
            {
                throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.CannotBeNull, "PackageContent");
            }




        }
    }
}