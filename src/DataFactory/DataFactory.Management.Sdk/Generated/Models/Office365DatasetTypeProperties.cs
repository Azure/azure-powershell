// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.DataFactory.Models
{
    using System.Linq;

    /// <summary>
    /// Office365 dataset properties.
    /// </summary>
    public partial class Office365DatasetTypeProperties
    {
        /// <summary>
        /// Initializes a new instance of the Office365DatasetTypeProperties class.
        /// </summary>
        public Office365DatasetTypeProperties()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the Office365DatasetTypeProperties class.
        /// </summary>

        /// <param name="tableName">Name of the dataset to extract from Office 365. Type: string (or Expression
        /// with resultType string).
        /// </param>

        /// <param name="predicate">A predicate expression that can be used to filter the specific rows to
        /// extract from Office 365. Type: string (or Expression with resultType
        /// string).
        /// </param>
        public Office365DatasetTypeProperties(object tableName, object predicate = default(object))

        {
            this.TableName = tableName;
            this.Predicate = predicate;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets or sets name of the dataset to extract from Office 365. Type: string
        /// (or Expression with resultType string).
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "tableName")]
        public object TableName {get; set; }

        /// <summary>
        /// Gets or sets a predicate expression that can be used to filter the specific
        /// rows to extract from Office 365. Type: string (or Expression with
        /// resultType string).
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "predicate")]
        public object Predicate {get; set; }
        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (this.TableName == null)
            {
                throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.CannotBeNull, "TableName");
            }


        }
    }
}