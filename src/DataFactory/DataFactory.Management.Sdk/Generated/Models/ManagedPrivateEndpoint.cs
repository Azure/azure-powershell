// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.DataFactory.Models
{
    using System.Linq;

    /// <summary>
    /// Properties of a managed private endpoint
    /// </summary>
    public partial class ManagedPrivateEndpoint
    {
        /// <summary>
        /// Initializes a new instance of the ManagedPrivateEndpoint class.
        /// </summary>
        public ManagedPrivateEndpoint()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the ManagedPrivateEndpoint class.
        /// </summary>

        /// <param name="additionalProperties">Properties of a managed private endpoint
        /// </param>

        /// <param name="connectionState">The managed private endpoint connection state
        /// </param>

        /// <param name="fqdns">Fully qualified domain names
        /// </param>

        /// <param name="groupId">The groupId to which the managed private endpoint is created
        /// </param>

        /// <param name="isReserved">Denotes whether the managed private endpoint is reserved
        /// </param>

        /// <param name="privateLinkResourceId">The ARM resource ID of the resource to which the managed private endpoint
        /// is created
        /// </param>

        /// <param name="provisioningState">The managed private endpoint provisioning state
        /// </param>
        public ManagedPrivateEndpoint(System.Collections.Generic.IDictionary<string, object> additionalProperties = default(System.Collections.Generic.IDictionary<string, object>), ConnectionStateProperties connectionState = default(ConnectionStateProperties), System.Collections.Generic.IList<string> fqdns = default(System.Collections.Generic.IList<string>), string groupId = default(string), bool? isReserved = default(bool?), string privateLinkResourceId = default(string), string provisioningState = default(string))

        {
            this.AdditionalProperties = additionalProperties;
            this.ConnectionState = connectionState;
            this.Fqdns = fqdns;
            this.GroupId = groupId;
            this.IsReserved = isReserved;
            this.PrivateLinkResourceId = privateLinkResourceId;
            this.ProvisioningState = provisioningState;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets or sets properties of a managed private endpoint
        /// </summary>
        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties {get; set; }

        /// <summary>
        /// Gets or sets the managed private endpoint connection state
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "connectionState")]
        public ConnectionStateProperties ConnectionState {get; set; }

        /// <summary>
        /// Gets or sets fully qualified domain names
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "fqdns")]
        public System.Collections.Generic.IList<string> Fqdns {get; set; }

        /// <summary>
        /// Gets or sets the groupId to which the managed private endpoint is created
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "groupId")]
        public string GroupId {get; set; }

        /// <summary>
        /// Gets denotes whether the managed private endpoint is reserved
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "isReserved")]
        public bool? IsReserved {get; private set; }

        /// <summary>
        /// Gets or sets the ARM resource ID of the resource to which the managed
        /// private endpoint is created
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "privateLinkResourceId")]
        public string PrivateLinkResourceId {get; set; }

        /// <summary>
        /// Gets the managed private endpoint provisioning state
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "provisioningState")]
        public string ProvisioningState {get; private set; }
    }
}