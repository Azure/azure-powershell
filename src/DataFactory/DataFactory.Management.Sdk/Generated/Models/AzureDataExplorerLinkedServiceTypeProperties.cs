// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.DataFactory.Models
{
    using System.Linq;

    /// <summary>
    /// Azure Data Explorer (Kusto) linked service properties.
    /// </summary>
    public partial class AzureDataExplorerLinkedServiceTypeProperties
    {
        /// <summary>
        /// Initializes a new instance of the AzureDataExplorerLinkedServiceTypeProperties class.
        /// </summary>
        public AzureDataExplorerLinkedServiceTypeProperties()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the AzureDataExplorerLinkedServiceTypeProperties class.
        /// </summary>

        /// <param name="endpoint">The endpoint of Azure Data Explorer (the engine&#39;s endpoint). URL will be in
        /// the format https://&lt;clusterName&gt;.&lt;regionName&gt;.kusto.windows.net. Type:
        /// string (or Expression with resultType string)
        /// </param>

        /// <param name="servicePrincipalId">The ID of the service principal used to authenticate against Azure Data
        /// Explorer. Type: string (or Expression with resultType string).
        /// </param>

        /// <param name="servicePrincipalKey">The key of the service principal used to authenticate against Kusto.
        /// </param>

        /// <param name="database">Database name for connection. Type: string (or Expression with resultType
        /// string).
        /// </param>

        /// <param name="tenant">The name or ID of the tenant to which the service principal belongs. Type:
        /// string (or Expression with resultType string).
        /// </param>

        /// <param name="credential">The credential reference containing authentication information.
        /// </param>
        public AzureDataExplorerLinkedServiceTypeProperties(object endpoint, object database, object servicePrincipalId = default(object), SecretBase servicePrincipalKey = default(SecretBase), object tenant = default(object), CredentialReference credential = default(CredentialReference))

        {
            this.Endpoint = endpoint;
            this.ServicePrincipalId = servicePrincipalId;
            this.ServicePrincipalKey = servicePrincipalKey;
            this.Database = database;
            this.Tenant = tenant;
            this.Credential = credential;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets or sets the endpoint of Azure Data Explorer (the engine&#39;s endpoint).
        /// URL will be in the format
        /// https://&lt;clusterName&gt;.&lt;regionName&gt;.kusto.windows.net. Type: string (or
        /// Expression with resultType string)
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "endpoint")]
        public object Endpoint {get; set; }

        /// <summary>
        /// Gets or sets the ID of the service principal used to authenticate against
        /// Azure Data Explorer. Type: string (or Expression with resultType string).
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "servicePrincipalId")]
        public object ServicePrincipalId {get; set; }

        /// <summary>
        /// Gets or sets the key of the service principal used to authenticate against
        /// Kusto.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "servicePrincipalKey")]
        public SecretBase ServicePrincipalKey {get; set; }

        /// <summary>
        /// Gets or sets database name for connection. Type: string (or Expression with
        /// resultType string).
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "database")]
        public object Database {get; set; }

        /// <summary>
        /// Gets or sets the name or ID of the tenant to which the service principal
        /// belongs. Type: string (or Expression with resultType string).
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "tenant")]
        public object Tenant {get; set; }

        /// <summary>
        /// Gets or sets the credential reference containing authentication
        /// information.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "credential")]
        public CredentialReference Credential {get; set; }
        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (this.Endpoint == null)
            {
                throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.CannotBeNull, "Endpoint");
            }
            if (this.Database == null)
            {
                throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.CannotBeNull, "Database");
            }





            if (this.Credential != null)
            {
                this.Credential.Validate();
            }
        }
    }
}