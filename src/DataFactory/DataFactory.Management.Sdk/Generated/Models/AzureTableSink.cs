// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.DataFactory.Models
{
    using System.Linq;

    /// <summary>
    /// A copy activity Azure Table sink.
    /// </summary>
    [Newtonsoft.Json.JsonObject("AzureTableSink")]
    public partial class AzureTableSink : CopySink
    {
        /// <summary>
        /// Initializes a new instance of the AzureTableSink class.
        /// </summary>
        public AzureTableSink()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the AzureTableSink class.
        /// </summary>

        /// <param name="writeBatchSize">Write batch size. Type: integer (or Expression with resultType integer),
        /// minimum: 0.
        /// </param>

        /// <param name="writeBatchTimeout">Write batch timeout. Type: string (or Expression with resultType string),
        /// pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
        /// </param>

        /// <param name="sinkRetryCount">Sink retry count. Type: integer (or Expression with resultType integer).
        /// </param>

        /// <param name="sinkRetryWait">Sink retry wait. Type: string (or Expression with resultType string),
        /// pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
        /// </param>

        /// <param name="maxConcurrentConnections">The maximum concurrent connection count for the sink data store. Type:
        /// integer (or Expression with resultType integer).
        /// </param>

        /// <param name="disableMetricsCollection">If true, disable data store metrics collection. Default is false. Type:
        /// boolean (or Expression with resultType boolean).
        /// </param>

        /// <param name="azureTableDefaultPartitionKeyValue">Azure Table default partition key value. Type: string (or Expression with
        /// resultType string).
        /// </param>

        /// <param name="azureTablePartitionKeyName">Azure Table partition key name. Type: string (or Expression with resultType
        /// string).
        /// </param>

        /// <param name="azureTableRowKeyName">Azure Table row key name. Type: string (or Expression with resultType
        /// string).
        /// </param>

        /// <param name="azureTableInsertType">Azure Table insert type. Type: string (or Expression with resultType
        /// string).
        /// </param>
        public AzureTableSink(object writeBatchSize = default(object), object writeBatchTimeout = default(object), object sinkRetryCount = default(object), object sinkRetryWait = default(object), object maxConcurrentConnections = default(object), object disableMetricsCollection = default(object), object azureTableDefaultPartitionKeyValue = default(object), object azureTablePartitionKeyName = default(object), object azureTableRowKeyName = default(object), object azureTableInsertType = default(object))

        : base(writeBatchSize, writeBatchTimeout, sinkRetryCount, sinkRetryWait, maxConcurrentConnections, disableMetricsCollection)
        {
            this.AzureTableDefaultPartitionKeyValue = azureTableDefaultPartitionKeyValue;
            this.AzureTablePartitionKeyName = azureTablePartitionKeyName;
            this.AzureTableRowKeyName = azureTableRowKeyName;
            this.AzureTableInsertType = azureTableInsertType;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets or sets azure Table default partition key value. Type: string (or
        /// Expression with resultType string).
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "azureTableDefaultPartitionKeyValue")]
        public object AzureTableDefaultPartitionKeyValue {get; set; }

        /// <summary>
        /// Gets or sets azure Table partition key name. Type: string (or Expression
        /// with resultType string).
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "azureTablePartitionKeyName")]
        public object AzureTablePartitionKeyName {get; set; }

        /// <summary>
        /// Gets or sets azure Table row key name. Type: string (or Expression with
        /// resultType string).
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "azureTableRowKeyName")]
        public object AzureTableRowKeyName {get; set; }

        /// <summary>
        /// Gets or sets azure Table insert type. Type: string (or Expression with
        /// resultType string).
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "azureTableInsertType")]
        public object AzureTableInsertType {get; set; }
    }
}