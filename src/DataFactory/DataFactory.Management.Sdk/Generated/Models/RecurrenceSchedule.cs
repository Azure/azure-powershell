// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.DataFactory.Models
{
    using System.Linq;

    /// <summary>
    /// The recurrence schedule.
    /// </summary>
    public partial class RecurrenceSchedule
    {
        /// <summary>
        /// Initializes a new instance of the RecurrenceSchedule class.
        /// </summary>
        public RecurrenceSchedule()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the RecurrenceSchedule class.
        /// </summary>

        /// <param name="additionalProperties">The recurrence schedule.
        /// </param>

        /// <param name="minutes">The minutes.
        /// </param>

        /// <param name="hours">The hours.
        /// </param>

        /// <param name="weekDays">The days of the week.
        /// </param>

        /// <param name="monthDays">The month days.
        /// </param>

        /// <param name="monthlyOccurrences">The monthly occurrences.
        /// </param>
        public RecurrenceSchedule(System.Collections.Generic.IDictionary<string, object> additionalProperties = default(System.Collections.Generic.IDictionary<string, object>), System.Collections.Generic.IList<int?> minutes = default(System.Collections.Generic.IList<int?>), System.Collections.Generic.IList<int?> hours = default(System.Collections.Generic.IList<int?>), System.Collections.Generic.IList<DaysOfWeek?> weekDays = default(System.Collections.Generic.IList<DaysOfWeek?>), System.Collections.Generic.IList<int?> monthDays = default(System.Collections.Generic.IList<int?>), System.Collections.Generic.IList<RecurrenceScheduleOccurrence> monthlyOccurrences = default(System.Collections.Generic.IList<RecurrenceScheduleOccurrence>))

        {
            this.AdditionalProperties = additionalProperties;
            this.Minutes = minutes;
            this.Hours = hours;
            this.WeekDays = weekDays;
            this.MonthDays = monthDays;
            this.MonthlyOccurrences = monthlyOccurrences;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets or sets the recurrence schedule.
        /// </summary>
        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties {get; set; }

        /// <summary>
        /// Gets or sets the minutes.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "minutes")]
        public System.Collections.Generic.IList<int?> Minutes {get; set; }

        /// <summary>
        /// Gets or sets the hours.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "hours")]
        public System.Collections.Generic.IList<int?> Hours {get; set; }

        /// <summary>
        /// Gets or sets the days of the week.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "weekDays")]
        public System.Collections.Generic.IList<DaysOfWeek?> WeekDays {get; set; }

        /// <summary>
        /// Gets or sets the month days.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "monthDays")]
        public System.Collections.Generic.IList<int?> MonthDays {get; set; }

        /// <summary>
        /// Gets or sets the monthly occurrences.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "monthlyOccurrences")]
        public System.Collections.Generic.IList<RecurrenceScheduleOccurrence> MonthlyOccurrences {get; set; }
    }
}