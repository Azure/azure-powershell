// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.DataFactory
{
    using Microsoft.Rest;
    using Microsoft.Rest.Azure;
    using Models;
    using System.Collections;
    using System.Collections.Generic;
    using System.Threading;
    using System.Threading.Tasks;

    /// <summary>
    /// Extension methods for ExposureControlOperations.
    /// </summary>
    public static partial class ExposureControlOperationsExtensions
    {
            /// <summary>
            /// Get exposure control feature for specific location.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='locationId'>
            /// The location identifier.
            /// </param>
            /// <param name='featureName'>
            /// The feature name.
            /// </param>
            /// <param name='featureType'>
            /// The feature type.
            /// </param>
            public static ExposureControlResponse GetFeatureValue(this IExposureControlOperations operations, string locationId, string featureName = default(string), string featureType = default(string))
            {
                return operations.GetFeatureValueAsync(locationId, featureName, featureType).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Get exposure control feature for specific location.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='locationId'>
            /// The location identifier.
            /// </param>
            /// <param name='featureName'>
            /// The feature name.
            /// </param>
            /// <param name='featureType'>
            /// The feature type.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<ExposureControlResponse> GetFeatureValueAsync(this IExposureControlOperations operations, string locationId, string featureName = default(string), string featureType = default(string), CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.GetFeatureValueWithHttpMessagesAsync(locationId, featureName, featureType, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Get exposure control feature for specific factory.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The resource group name.
            /// </param>
            /// <param name='factoryName'>
            /// The factory name.
            /// </param>
            /// <param name='featureName'>
            /// The feature name.
            /// </param>
            /// <param name='featureType'>
            /// The feature type.
            /// </param>
            public static ExposureControlResponse GetFeatureValueByFactory(this IExposureControlOperations operations, string resourceGroupName, string factoryName, string featureName = default(string), string featureType = default(string))
            {
                return operations.GetFeatureValueByFactoryAsync(resourceGroupName, factoryName, featureName, featureType).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Get exposure control feature for specific factory.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The resource group name.
            /// </param>
            /// <param name='factoryName'>
            /// The factory name.
            /// </param>
            /// <param name='featureName'>
            /// The feature name.
            /// </param>
            /// <param name='featureType'>
            /// The feature type.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<ExposureControlResponse> GetFeatureValueByFactoryAsync(this IExposureControlOperations operations, string resourceGroupName, string factoryName, string featureName = default(string), string featureType = default(string), CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.GetFeatureValueByFactoryWithHttpMessagesAsync(resourceGroupName, factoryName, featureName, featureType, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Get list of exposure control features for specific factory.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The resource group name.
            /// </param>
            /// <param name='factoryName'>
            /// The factory name.
            /// </param>
            /// <param name='exposureControlRequests'>
            /// List of exposure control features.
            /// </param>
            public static ExposureControlBatchResponse QueryFeatureValuesByFactory(this IExposureControlOperations operations, string resourceGroupName, string factoryName, IList<ExposureControlRequest> exposureControlRequests)
            {
                return operations.QueryFeatureValuesByFactoryAsync(resourceGroupName, factoryName, exposureControlRequests).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Get list of exposure control features for specific factory.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The resource group name.
            /// </param>
            /// <param name='factoryName'>
            /// The factory name.
            /// </param>
            /// <param name='exposureControlRequests'>
            /// List of exposure control features.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<ExposureControlBatchResponse> QueryFeatureValuesByFactoryAsync(this IExposureControlOperations operations, string resourceGroupName, string factoryName, IList<ExposureControlRequest> exposureControlRequests, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.QueryFeatureValuesByFactoryWithHttpMessagesAsync(resourceGroupName, factoryName, exposureControlRequests, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

    }
}
