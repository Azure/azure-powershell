// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.Api20211001
{
    using static Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Runtime.Extensions;

    /// <summary>The delivery information associated with a export.</summary>
    public partial class ExportDeliveryInfo :
        Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.Api20211001.IExportDeliveryInfo,
        Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.Api20211001.IExportDeliveryInfoInternal
    {

        /// <summary>Backing field for <see cref="Destination" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.Api20211001.IExportDeliveryDestination _destination;

        /// <summary>Has destination for the export being delivered.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Origin(Microsoft.Azure.PowerShell.Cmdlets.CostManagement.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.Api20211001.IExportDeliveryDestination Destination { get => (this._destination = this._destination ?? new Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.Api20211001.ExportDeliveryDestination()); set => this._destination = value; }

        /// <summary>
        /// The name of the container where exports will be uploaded. If the container does not exist it will be created.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Origin(Microsoft.Azure.PowerShell.Cmdlets.CostManagement.PropertyOrigin.Inlined)]
        public string DestinationContainer { get => ((Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.Api20211001.IExportDeliveryDestinationInternal)Destination).Container; set => ((Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.Api20211001.IExportDeliveryDestinationInternal)Destination).Container = value ; }

        /// <summary>
        /// The resource id of the storage account where exports will be delivered. This is not required if a sasToken and storageAccount
        /// are specified.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Origin(Microsoft.Azure.PowerShell.Cmdlets.CostManagement.PropertyOrigin.Inlined)]
        public string DestinationResourceId { get => ((Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.Api20211001.IExportDeliveryDestinationInternal)Destination).ResourceId; set => ((Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.Api20211001.IExportDeliveryDestinationInternal)Destination).ResourceId = value ?? null; }

        /// <summary>The name of the directory where exports will be uploaded.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Origin(Microsoft.Azure.PowerShell.Cmdlets.CostManagement.PropertyOrigin.Inlined)]
        public string DestinationRootFolderPath { get => ((Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.Api20211001.IExportDeliveryDestinationInternal)Destination).RootFolderPath; set => ((Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.Api20211001.IExportDeliveryDestinationInternal)Destination).RootFolderPath = value ?? null; }

        /// <summary>
        /// A SAS token for the storage account. For a restricted set of Azure customers this together with storageAccount can be
        /// specified instead of resourceId. Note: the value returned by the API for this property will always be obfuscated. Returning
        /// this same obfuscated value will not result in the SAS token being updated. To update this value a new SAS token must be
        /// specified.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Origin(Microsoft.Azure.PowerShell.Cmdlets.CostManagement.PropertyOrigin.Inlined)]
        public string DestinationSasToken { get => ((Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.Api20211001.IExportDeliveryDestinationInternal)Destination).SasToken; set => ((Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.Api20211001.IExportDeliveryDestinationInternal)Destination).SasToken = value ?? null; }

        /// <summary>
        /// The storage account where exports will be uploaded. For a restricted set of Azure customers this together with sasToken
        /// can be specified instead of resourceId.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Origin(Microsoft.Azure.PowerShell.Cmdlets.CostManagement.PropertyOrigin.Inlined)]
        public string DestinationStorageAccount { get => ((Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.Api20211001.IExportDeliveryDestinationInternal)Destination).StorageAccount; set => ((Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.Api20211001.IExportDeliveryDestinationInternal)Destination).StorageAccount = value ?? null; }

        /// <summary>Internal Acessors for Destination</summary>
        Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.Api20211001.IExportDeliveryDestination Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.Api20211001.IExportDeliveryInfoInternal.Destination { get => (this._destination = this._destination ?? new Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.Api20211001.ExportDeliveryDestination()); set { {_destination = value;} } }

        /// <summary>Creates an new <see cref="ExportDeliveryInfo" /> instance.</summary>
        public ExportDeliveryInfo()
        {

        }
    }
    /// The delivery information associated with a export.
    public partial interface IExportDeliveryInfo :
        Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Runtime.IJsonSerializable
    {
        /// <summary>
        /// The name of the container where exports will be uploaded. If the container does not exist it will be created.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"The name of the container where exports will be uploaded. If the container does not exist it will be created.",
        SerializedName = @"container",
        PossibleTypes = new [] { typeof(string) })]
        string DestinationContainer { get; set; }
        /// <summary>
        /// The resource id of the storage account where exports will be delivered. This is not required if a sasToken and storageAccount
        /// are specified.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The resource id of the storage account where exports will be delivered. This is not required if a sasToken and storageAccount are specified.",
        SerializedName = @"resourceId",
        PossibleTypes = new [] { typeof(string) })]
        string DestinationResourceId { get; set; }
        /// <summary>The name of the directory where exports will be uploaded.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The name of the directory where exports will be uploaded.",
        SerializedName = @"rootFolderPath",
        PossibleTypes = new [] { typeof(string) })]
        string DestinationRootFolderPath { get; set; }
        /// <summary>
        /// A SAS token for the storage account. For a restricted set of Azure customers this together with storageAccount can be
        /// specified instead of resourceId. Note: the value returned by the API for this property will always be obfuscated. Returning
        /// this same obfuscated value will not result in the SAS token being updated. To update this value a new SAS token must be
        /// specified.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"A SAS token for the storage account. For a restricted set of Azure customers this together with storageAccount can be specified instead of resourceId. Note: the value returned by the API for this property will always be obfuscated. Returning this same obfuscated value will not result in the SAS token being updated. To update this value a new SAS token must be specified.",
        SerializedName = @"sasToken",
        PossibleTypes = new [] { typeof(string) })]
        string DestinationSasToken { get; set; }
        /// <summary>
        /// The storage account where exports will be uploaded. For a restricted set of Azure customers this together with sasToken
        /// can be specified instead of resourceId.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The storage account where exports will be uploaded. For a restricted set of Azure customers this together with sasToken can be specified instead of resourceId.",
        SerializedName = @"storageAccount",
        PossibleTypes = new [] { typeof(string) })]
        string DestinationStorageAccount { get; set; }

    }
    /// The delivery information associated with a export.
    public partial interface IExportDeliveryInfoInternal

    {
        /// <summary>Has destination for the export being delivered.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.Api20211001.IExportDeliveryDestination Destination { get; set; }
        /// <summary>
        /// The name of the container where exports will be uploaded. If the container does not exist it will be created.
        /// </summary>
        string DestinationContainer { get; set; }
        /// <summary>
        /// The resource id of the storage account where exports will be delivered. This is not required if a sasToken and storageAccount
        /// are specified.
        /// </summary>
        string DestinationResourceId { get; set; }
        /// <summary>The name of the directory where exports will be uploaded.</summary>
        string DestinationRootFolderPath { get; set; }
        /// <summary>
        /// A SAS token for the storage account. For a restricted set of Azure customers this together with storageAccount can be
        /// specified instead of resourceId. Note: the value returned by the API for this property will always be obfuscated. Returning
        /// this same obfuscated value will not result in the SAS token being updated. To update this value a new SAS token must be
        /// specified.
        /// </summary>
        string DestinationSasToken { get; set; }
        /// <summary>
        /// The storage account where exports will be uploaded. For a restricted set of Azure customers this together with sasToken
        /// can be specified instead of resourceId.
        /// </summary>
        string DestinationStorageAccount { get; set; }

    }
}