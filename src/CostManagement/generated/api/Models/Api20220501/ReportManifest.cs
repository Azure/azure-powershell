// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.Api20220501
{
    using static Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Runtime.Extensions;

    /// <summary>The manifest of the report generated by the operation.</summary>
    public partial class ReportManifest :
        Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.Api20220501.IReportManifest,
        Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.Api20220501.IReportManifestInternal
    {

        /// <summary>Backing field for <see cref="Blob" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.Api20220501.IBlobInfo[] _blob;

        /// <summary>List of blob information generated by this operation.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Origin(Microsoft.Azure.PowerShell.Cmdlets.CostManagement.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.Api20220501.IBlobInfo[] Blob { get => this._blob; set => this._blob = value; }

        /// <summary>Backing field for <see cref="BlobCount" /> property.</summary>
        private int? _blobCount;

        /// <summary>The total number of blobs.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Origin(Microsoft.Azure.PowerShell.Cmdlets.CostManagement.PropertyOrigin.Owned)]
        public int? BlobCount { get => this._blobCount; set => this._blobCount = value; }

        /// <summary>Backing field for <see cref="ByteCount" /> property.</summary>
        private long? _byteCount;

        /// <summary>The total number of bytes in all blobs.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Origin(Microsoft.Azure.PowerShell.Cmdlets.CostManagement.PropertyOrigin.Owned)]
        public long? ByteCount { get => this._byteCount; set => this._byteCount = value; }

        /// <summary>Backing field for <see cref="CompressData" /> property.</summary>
        private bool? _compressData;

        /// <summary>Is the data in compressed format.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Origin(Microsoft.Azure.PowerShell.Cmdlets.CostManagement.PropertyOrigin.Owned)]
        public bool? CompressData { get => this._compressData; set => this._compressData = value; }

        /// <summary>Backing field for <see cref="DataFormat" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Support.CostDetailsDataFormat? _dataFormat;

        /// <summary>The data format of the report</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Origin(Microsoft.Azure.PowerShell.Cmdlets.CostManagement.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Support.CostDetailsDataFormat? DataFormat { get => this._dataFormat; set => this._dataFormat = value; }

        /// <summary>Backing field for <see cref="ManifestVersion" /> property.</summary>
        private string _manifestVersion;

        /// <summary>The Manifest version.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Origin(Microsoft.Azure.PowerShell.Cmdlets.CostManagement.PropertyOrigin.Owned)]
        public string ManifestVersion { get => this._manifestVersion; set => this._manifestVersion = value; }

        /// <summary>Internal Acessors for RequestBodyTimePeriod</summary>
        Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.Api20220501.ICostDetailsTimePeriod Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.Api20220501.IReportManifestInternal.RequestBodyTimePeriod { get => ((Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.Api20220501.IRequestContextInternal)RequestContext).RequestBodyTimePeriod; set => ((Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.Api20220501.IRequestContextInternal)RequestContext).RequestBodyTimePeriod = value; }

        /// <summary>Internal Acessors for RequestContext</summary>
        Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.Api20220501.IRequestContext Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.Api20220501.IReportManifestInternal.RequestContext { get => (this._requestContext = this._requestContext ?? new Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.Api20220501.RequestContext()); set { {_requestContext = value;} } }

        /// <summary>Internal Acessors for RequestContextRequestBody</summary>
        Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.Api20220501.IGenerateCostDetailsReportRequestDefinition Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.Api20220501.IReportManifestInternal.RequestContextRequestBody { get => ((Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.Api20220501.IRequestContextInternal)RequestContext).RequestBody; set => ((Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.Api20220501.IRequestContextInternal)RequestContext).RequestBody = value; }

        /// <summary>
        /// This parameter can be used only by Enterprise Agreement customers. Use the YearMonth(e.g. 202008) format. This parameter
        /// cannot be used alongside either the invoiceId or timePeriod parameters. If a timePeriod, invoiceId or billingPeriod parameter
        /// is not provided in the request body the API will return the current month's cost.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Origin(Microsoft.Azure.PowerShell.Cmdlets.CostManagement.PropertyOrigin.Inlined)]
        public string RequestBodyBillingPeriod { get => ((Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.Api20220501.IRequestContextInternal)RequestContext).RequestBodyBillingPeriod; set => ((Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.Api20220501.IRequestContextInternal)RequestContext).RequestBodyBillingPeriod = value ?? null; }

        /// <summary>
        /// This parameter can only be used by Microsoft Customer Agreement customers. Additionally, it can only be used at the Billing
        /// Profile or Customer scope. This parameter cannot be used alongside either the billingPeriod or timePeriod parameters.
        /// If a timePeriod, invoiceId or billingPeriod parameter is not provided in the request body the API will return the current
        /// month's cost.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Origin(Microsoft.Azure.PowerShell.Cmdlets.CostManagement.PropertyOrigin.Inlined)]
        public string RequestBodyInvoiceId { get => ((Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.Api20220501.IRequestContextInternal)RequestContext).RequestBodyInvoiceId; set => ((Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.Api20220501.IRequestContextInternal)RequestContext).RequestBodyInvoiceId = value ?? null; }

        /// <summary>The type of the detailed report. By default ActualCost is provided</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Origin(Microsoft.Azure.PowerShell.Cmdlets.CostManagement.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Support.CostDetailsMetricType? RequestBodyMetric { get => ((Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.Api20220501.IRequestContextInternal)RequestContext).RequestBodyMetric; set => ((Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.Api20220501.IRequestContextInternal)RequestContext).RequestBodyMetric = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Support.CostDetailsMetricType)""); }

        /// <summary>Backing field for <see cref="RequestContext" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.Api20220501.IRequestContext _requestContext;

        /// <summary>The context of the Cost Details request.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Origin(Microsoft.Azure.PowerShell.Cmdlets.CostManagement.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.Api20220501.IRequestContext RequestContext { get => (this._requestContext = this._requestContext ?? new Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.Api20220501.RequestContext()); set => this._requestContext = value; }

        /// <summary>The request scope of the request.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Origin(Microsoft.Azure.PowerShell.Cmdlets.CostManagement.PropertyOrigin.Inlined)]
        public string RequestContextRequestScope { get => ((Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.Api20220501.IRequestContextInternal)RequestContext).RequestScope; set => ((Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.Api20220501.IRequestContextInternal)RequestContext).RequestScope = value ?? null; }

        /// <summary>The end date to pull data to. example format 2020-03-15</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Origin(Microsoft.Azure.PowerShell.Cmdlets.CostManagement.PropertyOrigin.Inlined)]
        public string TimePeriodEnd { get => ((Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.Api20220501.IRequestContextInternal)RequestContext).TimePeriodEnd; set => ((Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.Api20220501.IRequestContextInternal)RequestContext).TimePeriodEnd = value ?? null; }

        /// <summary>The start date to pull data from. example format 2020-03-15</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Origin(Microsoft.Azure.PowerShell.Cmdlets.CostManagement.PropertyOrigin.Inlined)]
        public string TimePeriodStart { get => ((Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.Api20220501.IRequestContextInternal)RequestContext).TimePeriodStart; set => ((Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.Api20220501.IRequestContextInternal)RequestContext).TimePeriodStart = value ?? null; }

        /// <summary>Creates an new <see cref="ReportManifest" /> instance.</summary>
        public ReportManifest()
        {

        }
    }
    /// The manifest of the report generated by the operation.
    public partial interface IReportManifest :
        Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Runtime.IJsonSerializable
    {
        /// <summary>List of blob information generated by this operation.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"List of blob information generated by this operation.",
        SerializedName = @"blobs",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.Api20220501.IBlobInfo) })]
        Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.Api20220501.IBlobInfo[] Blob { get; set; }
        /// <summary>The total number of blobs.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The total number of blobs.",
        SerializedName = @"blobCount",
        PossibleTypes = new [] { typeof(int) })]
        int? BlobCount { get; set; }
        /// <summary>The total number of bytes in all blobs.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The total number of bytes in all blobs.",
        SerializedName = @"byteCount",
        PossibleTypes = new [] { typeof(long) })]
        long? ByteCount { get; set; }
        /// <summary>Is the data in compressed format.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Is the data in compressed format.",
        SerializedName = @"compressData",
        PossibleTypes = new [] { typeof(bool) })]
        bool? CompressData { get; set; }
        /// <summary>The data format of the report</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The data format of the report",
        SerializedName = @"dataFormat",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Support.CostDetailsDataFormat) })]
        Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Support.CostDetailsDataFormat? DataFormat { get; set; }
        /// <summary>The Manifest version.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The Manifest version.",
        SerializedName = @"manifestVersion",
        PossibleTypes = new [] { typeof(string) })]
        string ManifestVersion { get; set; }
        /// <summary>
        /// This parameter can be used only by Enterprise Agreement customers. Use the YearMonth(e.g. 202008) format. This parameter
        /// cannot be used alongside either the invoiceId or timePeriod parameters. If a timePeriod, invoiceId or billingPeriod parameter
        /// is not provided in the request body the API will return the current month's cost.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"This parameter can be used only by Enterprise Agreement customers. Use the YearMonth(e.g. 202008) format. This parameter cannot be used alongside either the invoiceId or timePeriod parameters. If a timePeriod, invoiceId or billingPeriod parameter is not provided in the request body the API will return the current month's cost.",
        SerializedName = @"billingPeriod",
        PossibleTypes = new [] { typeof(string) })]
        string RequestBodyBillingPeriod { get; set; }
        /// <summary>
        /// This parameter can only be used by Microsoft Customer Agreement customers. Additionally, it can only be used at the Billing
        /// Profile or Customer scope. This parameter cannot be used alongside either the billingPeriod or timePeriod parameters.
        /// If a timePeriod, invoiceId or billingPeriod parameter is not provided in the request body the API will return the current
        /// month's cost.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"This parameter can only be used by Microsoft Customer Agreement customers. Additionally, it can only be used at the Billing Profile or Customer scope. This parameter cannot be used alongside either the billingPeriod or timePeriod parameters. If a timePeriod, invoiceId or billingPeriod parameter is not provided in the request body the API will return the current month's cost.",
        SerializedName = @"invoiceId",
        PossibleTypes = new [] { typeof(string) })]
        string RequestBodyInvoiceId { get; set; }
        /// <summary>The type of the detailed report. By default ActualCost is provided</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The type of the detailed report. By default ActualCost is provided",
        SerializedName = @"metric",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Support.CostDetailsMetricType) })]
        Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Support.CostDetailsMetricType? RequestBodyMetric { get; set; }
        /// <summary>The request scope of the request.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The request scope of the request.",
        SerializedName = @"requestScope",
        PossibleTypes = new [] { typeof(string) })]
        string RequestContextRequestScope { get; set; }
        /// <summary>The end date to pull data to. example format 2020-03-15</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The end date to pull data to. example format 2020-03-15",
        SerializedName = @"end",
        PossibleTypes = new [] { typeof(string) })]
        string TimePeriodEnd { get; set; }
        /// <summary>The start date to pull data from. example format 2020-03-15</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The start date to pull data from. example format 2020-03-15",
        SerializedName = @"start",
        PossibleTypes = new [] { typeof(string) })]
        string TimePeriodStart { get; set; }

    }
    /// The manifest of the report generated by the operation.
    public partial interface IReportManifestInternal

    {
        /// <summary>List of blob information generated by this operation.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.Api20220501.IBlobInfo[] Blob { get; set; }
        /// <summary>The total number of blobs.</summary>
        int? BlobCount { get; set; }
        /// <summary>The total number of bytes in all blobs.</summary>
        long? ByteCount { get; set; }
        /// <summary>Is the data in compressed format.</summary>
        bool? CompressData { get; set; }
        /// <summary>The data format of the report</summary>
        Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Support.CostDetailsDataFormat? DataFormat { get; set; }
        /// <summary>The Manifest version.</summary>
        string ManifestVersion { get; set; }
        /// <summary>
        /// This parameter can be used only by Enterprise Agreement customers. Use the YearMonth(e.g. 202008) format. This parameter
        /// cannot be used alongside either the invoiceId or timePeriod parameters. If a timePeriod, invoiceId or billingPeriod parameter
        /// is not provided in the request body the API will return the current month's cost.
        /// </summary>
        string RequestBodyBillingPeriod { get; set; }
        /// <summary>
        /// This parameter can only be used by Microsoft Customer Agreement customers. Additionally, it can only be used at the Billing
        /// Profile or Customer scope. This parameter cannot be used alongside either the billingPeriod or timePeriod parameters.
        /// If a timePeriod, invoiceId or billingPeriod parameter is not provided in the request body the API will return the current
        /// month's cost.
        /// </summary>
        string RequestBodyInvoiceId { get; set; }
        /// <summary>The type of the detailed report. By default ActualCost is provided</summary>
        Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Support.CostDetailsMetricType? RequestBodyMetric { get; set; }
        /// <summary>
        /// The specific date range of cost details requested for the report. This parameter cannot be used alongside either the invoiceId
        /// or billingPeriod parameters. If a timePeriod, invoiceId or billingPeriod parameter is not provided in the request body
        /// the API will return the current month's cost. API only allows data to be pulled for 1 month or less and no older than
        /// 13 months. If no timePeriod or billingPeriod or invoiceId is provided the API defaults to the open month time period
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.Api20220501.ICostDetailsTimePeriod RequestBodyTimePeriod { get; set; }
        /// <summary>The context of the Cost Details request.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.Api20220501.IRequestContext RequestContext { get; set; }
        /// <summary>The request payload body provided in Cost Details call</summary>
        Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.Api20220501.IGenerateCostDetailsReportRequestDefinition RequestContextRequestBody { get; set; }
        /// <summary>The request scope of the request.</summary>
        string RequestContextRequestScope { get; set; }
        /// <summary>The end date to pull data to. example format 2020-03-15</summary>
        string TimePeriodEnd { get; set; }
        /// <summary>The start date to pull data from. example format 2020-03-15</summary>
        string TimePeriodStart { get; set; }

    }
}