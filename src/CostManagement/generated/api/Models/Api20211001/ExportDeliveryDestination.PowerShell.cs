// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.Api20211001
{
    using Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Runtime.PowerShell;

    /// <summary>
    /// This represents the blob storage account location where exports of costs will be delivered. There are two ways to configure
    /// the destination. The approach recommended for most customers is to specify the resourceId of the storage account. This
    /// requires a one-time registration of the account's subscription with the Microsoft.CostManagementExports resource provider
    /// in order to give Cost Management services access to the storage. When creating an export in the Azure portal this registration
    /// is performed automatically but API users may need to register the subscription explicitly (for more information see https://learn.microsoft.com/en-us/azure/azure-resource-manager/resource-manager-supported-services
    /// ). Another way to configure the destination is available ONLY to Partners with a Microsoft Partner Agreement plan who
    /// are global admins of their billing account. These Partners, instead of specifying the resourceId of a storage account,
    /// can specify the storage account name along with a SAS token for the account. This allows exports of costs to a storage
    /// account in any tenant. The SAS token should be created for the blob service with Service/Container/Object resource types
    /// and with Read/Write/Delete/List/Add/Create permissions (for more information see https://learn.microsoft.com/en-us/azure/cost-management-billing/costs/export-cost-data-storage-account-sas-key
    /// ).
    /// </summary>
    [System.ComponentModel.TypeConverter(typeof(ExportDeliveryDestinationTypeConverter))]
    public partial class ExportDeliveryDestination
    {

        /// <summary>
        /// <c>AfterDeserializeDictionary</c> will be called after the deserialization has finished, allowing customization of the
        /// object before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>

        partial void AfterDeserializeDictionary(global::System.Collections.IDictionary content);

        /// <summary>
        /// <c>AfterDeserializePSObject</c> will be called after the deserialization has finished, allowing customization of the object
        /// before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>

        partial void AfterDeserializePSObject(global::System.Management.Automation.PSObject content);

        /// <summary>
        /// <c>BeforeDeserializeDictionary</c> will be called before the deserialization has commenced, allowing complete customization
        /// of the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <paramref name="returnNow" /> output
        /// parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeDeserializeDictionary(global::System.Collections.IDictionary content, ref bool returnNow);

        /// <summary>
        /// <c>BeforeDeserializePSObject</c> will be called before the deserialization has commenced, allowing complete customization
        /// of the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <paramref name="returnNow" /> output
        /// parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeDeserializePSObject(global::System.Management.Automation.PSObject content, ref bool returnNow);

        /// <summary>
        /// Deserializes a <see cref="global::System.Collections.IDictionary" /> into an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.Api20211001.ExportDeliveryDestination"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        /// <returns>
        /// an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.Api20211001.IExportDeliveryDestination"
        /// />.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.Api20211001.IExportDeliveryDestination DeserializeFromDictionary(global::System.Collections.IDictionary content)
        {
            return new ExportDeliveryDestination(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Management.Automation.PSObject" /> into an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.Api20211001.ExportDeliveryDestination"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        /// <returns>
        /// an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.Api20211001.IExportDeliveryDestination"
        /// />.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.Api20211001.IExportDeliveryDestination DeserializeFromPSObject(global::System.Management.Automation.PSObject content)
        {
            return new ExportDeliveryDestination(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Collections.IDictionary" /> into a new instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.Api20211001.ExportDeliveryDestination"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        internal ExportDeliveryDestination(global::System.Collections.IDictionary content)
        {
            bool returnNow = false;
            BeforeDeserializeDictionary(content, ref returnNow);
            if (returnNow)
            {
                return;
            }
            // actually deserialize
            if (content.Contains("ResourceId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.Api20211001.IExportDeliveryDestinationInternal)this).ResourceId = (string) content.GetValueForProperty("ResourceId",((Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.Api20211001.IExportDeliveryDestinationInternal)this).ResourceId, global::System.Convert.ToString);
            }
            if (content.Contains("Container"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.Api20211001.IExportDeliveryDestinationInternal)this).Container = (string) content.GetValueForProperty("Container",((Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.Api20211001.IExportDeliveryDestinationInternal)this).Container, global::System.Convert.ToString);
            }
            if (content.Contains("RootFolderPath"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.Api20211001.IExportDeliveryDestinationInternal)this).RootFolderPath = (string) content.GetValueForProperty("RootFolderPath",((Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.Api20211001.IExportDeliveryDestinationInternal)this).RootFolderPath, global::System.Convert.ToString);
            }
            if (content.Contains("SasToken"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.Api20211001.IExportDeliveryDestinationInternal)this).SasToken = (string) content.GetValueForProperty("SasToken",((Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.Api20211001.IExportDeliveryDestinationInternal)this).SasToken, global::System.Convert.ToString);
            }
            if (content.Contains("StorageAccount"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.Api20211001.IExportDeliveryDestinationInternal)this).StorageAccount = (string) content.GetValueForProperty("StorageAccount",((Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.Api20211001.IExportDeliveryDestinationInternal)this).StorageAccount, global::System.Convert.ToString);
            }
            AfterDeserializeDictionary(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Management.Automation.PSObject" /> into a new instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.Api20211001.ExportDeliveryDestination"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        internal ExportDeliveryDestination(global::System.Management.Automation.PSObject content)
        {
            bool returnNow = false;
            BeforeDeserializePSObject(content, ref returnNow);
            if (returnNow)
            {
                return;
            }
            // actually deserialize
            if (content.Contains("ResourceId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.Api20211001.IExportDeliveryDestinationInternal)this).ResourceId = (string) content.GetValueForProperty("ResourceId",((Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.Api20211001.IExportDeliveryDestinationInternal)this).ResourceId, global::System.Convert.ToString);
            }
            if (content.Contains("Container"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.Api20211001.IExportDeliveryDestinationInternal)this).Container = (string) content.GetValueForProperty("Container",((Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.Api20211001.IExportDeliveryDestinationInternal)this).Container, global::System.Convert.ToString);
            }
            if (content.Contains("RootFolderPath"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.Api20211001.IExportDeliveryDestinationInternal)this).RootFolderPath = (string) content.GetValueForProperty("RootFolderPath",((Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.Api20211001.IExportDeliveryDestinationInternal)this).RootFolderPath, global::System.Convert.ToString);
            }
            if (content.Contains("SasToken"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.Api20211001.IExportDeliveryDestinationInternal)this).SasToken = (string) content.GetValueForProperty("SasToken",((Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.Api20211001.IExportDeliveryDestinationInternal)this).SasToken, global::System.Convert.ToString);
            }
            if (content.Contains("StorageAccount"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.Api20211001.IExportDeliveryDestinationInternal)this).StorageAccount = (string) content.GetValueForProperty("StorageAccount",((Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.Api20211001.IExportDeliveryDestinationInternal)this).StorageAccount, global::System.Convert.ToString);
            }
            AfterDeserializePSObject(content);
        }

        /// <summary>
        /// Creates a new instance of <see cref="ExportDeliveryDestination" />, deserializing the content from a json string.
        /// </summary>
        /// <param name="jsonText">a string containing a JSON serialized instance of this model.</param>
        /// <returns>an instance of the <see cref="ExportDeliveryDestination" /> model class.</returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.Api20211001.IExportDeliveryDestination FromJsonString(string jsonText) => FromJson(Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Runtime.Json.JsonNode.Parse(jsonText));

        /// <summary>Serializes this instance to a json string.</summary>

        /// <returns>a <see cref="System.String" /> containing this model serialized to JSON text.</returns>
        public string ToJsonString() => ToJson(null, Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Runtime.SerializationMode.IncludeAll)?.ToString();
    }
    /// This represents the blob storage account location where exports of costs will be delivered. There are two ways to configure
    /// the destination. The approach recommended for most customers is to specify the resourceId of the storage account. This
    /// requires a one-time registration of the account's subscription with the Microsoft.CostManagementExports resource provider
    /// in order to give Cost Management services access to the storage. When creating an export in the Azure portal this registration
    /// is performed automatically but API users may need to register the subscription explicitly (for more information see https://learn.microsoft.com/en-us/azure/azure-resource-manager/resource-manager-supported-services
    /// ). Another way to configure the destination is available ONLY to Partners with a Microsoft Partner Agreement plan who
    /// are global admins of their billing account. These Partners, instead of specifying the resourceId of a storage account,
    /// can specify the storage account name along with a SAS token for the account. This allows exports of costs to a storage
    /// account in any tenant. The SAS token should be created for the blob service with Service/Container/Object resource types
    /// and with Read/Write/Delete/List/Add/Create permissions (for more information see https://learn.microsoft.com/en-us/azure/cost-management-billing/costs/export-cost-data-storage-account-sas-key
    /// ).
    [System.ComponentModel.TypeConverter(typeof(ExportDeliveryDestinationTypeConverter))]
    public partial interface IExportDeliveryDestination

    {

    }
}