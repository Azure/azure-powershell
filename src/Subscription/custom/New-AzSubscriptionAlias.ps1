
# ----------------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# http://www.apache.org/licenses/LICENSE-2.0
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# Code generated by Microsoft (R) AutoRest Code Generator.Changes may cause incorrect behavior and will be lost if the code
# is regenerated.
# ----------------------------------------------------------------------------------

<#
.Synopsis
Create Alias Subscription.
.Description
Create Alias Subscription.
.Example
New-AzSubscriptionAlias -AliasName test-subscription -SubscriptionId XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX
.Example
New-AzSubscriptionAlias -AliasName test-subscription -DisplayName "createSub" -BillingScope "/billingAccounts/{billingAccountName}/billingProfiles/{billingProfileName}/invoiceSections/{invoiceSectionName}" -Workload 'Production' 

.Outputs
Microsoft.Azure.PowerShell.Cmdlets.Subscription.Models.Api20211001.ISubscriptionAliasResponse
.Link
https://learn.microsoft.com/powershell/module/az.subscription/new-azsubscriptionalias
#>
function New-AzSubscriptionAlias {
    [OutputType([Microsoft.Azure.PowerShell.Cmdlets.Subscription.Models.Api20211001.ISubscriptionAliasResponse])]
    [CmdletBinding(DefaultParameterSetName = 'CreateExpanded', PositionalBinding = $false, SupportsShouldProcess, ConfirmImpact = 'Medium')]
    param(
        [Parameter(Mandatory)]
        [Microsoft.Azure.PowerShell.Cmdlets.Subscription.Category('Path')]
        [System.String]
        # AliasName is the name for the subscription creation request.
        # Note that this is not the same as subscription name and this doesnâ€™t have any other lifecycle need beyond the request for subscription creation.
        ${AliasName},

        [Parameter(ParameterSetName = 'WorkloadCreateExpanded', Mandatory)]
        [Microsoft.Azure.PowerShell.Cmdlets.Subscription.Category('Body')]
        [System.String]
        # Billing scope of the subscription.For CustomerLed and FieldLed - /billingAccounts/{billingAccountName}/billingProfiles/{billingProfileName}/invoiceSections/{invoiceSectionName}For PartnerLed - /billingAccounts/{billingAccountName}/customers/{customerName}For Legacy EA - /billingAccounts/{billingAccountName}/enrollmentAccounts/{enrollmentAccountName}
        ${BillingScope},

        [Parameter(ParameterSetName = 'WorkloadCreateExpanded')]
        [Microsoft.Azure.PowerShell.Cmdlets.Subscription.Category('Body')]
        [System.String]
        # Management group Id for the subscription.
        ${ManagementGroupId},

        [Parameter(ParameterSetName = 'WorkloadCreateExpanded')]
        [Microsoft.Azure.PowerShell.Cmdlets.Subscription.Category('Body')]
        [System.String]
        # Reseller Id
        ${ResellerId},

        [Parameter(ParameterSetName = 'CreateExpanded', Mandatory)]
        [Microsoft.Azure.PowerShell.Cmdlets.Subscription.Category('Body')]
        [System.String]
        # This parameter can be used to create alias for existing subscription Id
        ${SubscriptionId},

        [Parameter(ParameterSetName = 'WorkloadCreateExpanded', Mandatory)]
        [Alias('DisplayName')]
        [Microsoft.Azure.PowerShell.Cmdlets.Subscription.Category('Body')]
        [System.String]
        # The friendly name of the subscription.
        ${SubscriptionName},

        [Parameter(ParameterSetName = 'WorkloadCreateExpanded')]
        [Microsoft.Azure.PowerShell.Cmdlets.Subscription.Category('Body')]
        [System.String]
        # Owner Id of the subscription
        ${SubscriptionOwnerId},

        [Parameter(ParameterSetName = 'WorkloadCreateExpanded')]
        [Microsoft.Azure.PowerShell.Cmdlets.Subscription.Category('Body')]
        [System.String]
        # Tenant Id of the subscription
        ${SubscriptionTenantId},

        [Parameter()]
        [Microsoft.Azure.PowerShell.Cmdlets.Subscription.Category('Body')]
        [Microsoft.Azure.PowerShell.Cmdlets.Subscription.Runtime.Info(PossibleTypes = ([Microsoft.Azure.PowerShell.Cmdlets.Subscription.Models.Api20211001.IPutAliasRequestAdditionalPropertiesTags]))]
        [System.Collections.Hashtable]
        # Tags for the subscription
        ${Tag},

        [Parameter(ParameterSetName = 'WorkloadCreateExpanded', Mandatory)]
        [ArgumentCompleter([Microsoft.Azure.PowerShell.Cmdlets.Subscription.Support.Workload])]
        [Microsoft.Azure.PowerShell.Cmdlets.Subscription.Category('Body')]
        [Microsoft.Azure.PowerShell.Cmdlets.Subscription.Support.Workload]
        # The workload type of the subscription.
        # It can be either Production or DevTest.
        ${Workload},

        [Parameter()]
        [Alias('AzureRMContext', 'AzureCredential')]
        [ValidateNotNull()]
        [Microsoft.Azure.PowerShell.Cmdlets.Subscription.Category('Azure')]
        [System.Management.Automation.PSObject]
        # The DefaultProfile parameter is not functional.
        # Use the SubscriptionId parameter when available if executing the cmdlet against a different subscription.
        ${DefaultProfile},

        [Parameter()]
        [Microsoft.Azure.PowerShell.Cmdlets.Subscription.Category('Runtime')]
        [System.Management.Automation.SwitchParameter]
        # Run the command as a job
        ${AsJob},

        [Parameter(DontShow)]
        [Microsoft.Azure.PowerShell.Cmdlets.Subscription.Category('Runtime')]
        [System.Management.Automation.SwitchParameter]
        # Wait for .NET debugger to attach
        ${Break},

        [Parameter(DontShow)]
        [ValidateNotNull()]
        [Microsoft.Azure.PowerShell.Cmdlets.Subscription.Category('Runtime')]
        [Microsoft.Azure.PowerShell.Cmdlets.Subscription.Runtime.SendAsyncStep[]]
        # SendAsync Pipeline Steps to be appended to the front of the pipeline
        ${HttpPipelineAppend},

        [Parameter(DontShow)]
        [ValidateNotNull()]
        [Microsoft.Azure.PowerShell.Cmdlets.Subscription.Category('Runtime')]
        [Microsoft.Azure.PowerShell.Cmdlets.Subscription.Runtime.SendAsyncStep[]]
        # SendAsync Pipeline Steps to be prepended to the front of the pipeline
        ${HttpPipelinePrepend},

        [Parameter()]
        [Microsoft.Azure.PowerShell.Cmdlets.Subscription.Category('Runtime')]
        [System.Management.Automation.SwitchParameter]
        # Run the command asynchronously
        ${NoWait},

        [Parameter(DontShow)]
        [Microsoft.Azure.PowerShell.Cmdlets.Subscription.Category('Runtime')]
        [System.Uri]
        # The URI for the proxy server to use
        ${Proxy},

        [Parameter(DontShow)]
        [ValidateNotNull()]
        [Microsoft.Azure.PowerShell.Cmdlets.Subscription.Category('Runtime')]
        [System.Management.Automation.PSCredential]
        # Credentials for a proxy server to use for the remote call
        ${ProxyCredential},

        [Parameter(DontShow)]
        [Microsoft.Azure.PowerShell.Cmdlets.Subscription.Category('Runtime')]
        [System.Management.Automation.SwitchParameter]
        # Use the default credentials for the proxy
        ${ProxyUseDefaultCredentials}
    )

    process {
        try {
            Az.Subscription.internal\New-AzSubscriptionAlias @PSBoundParameters
        }
        catch {
            throw
        }
    }
}
