// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.DeviceProvisioningServices.Models
{
    using System.Linq;

    /// <summary>
    /// Description of the IoT hub.
    /// </summary>
    public partial class IotHubDefinitionDescription
    {
        /// <summary>
        /// Initializes a new instance of the IotHubDefinitionDescription class.
        /// </summary>
        public IotHubDefinitionDescription()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the IotHubDefinitionDescription class.
        /// </summary>

        /// <param name="applyAllocationPolicy">flag for applying allocationPolicy or not for a given iot hub.
        /// </param>

        /// <param name="allocationWeight">weight to apply for a given iot h.
        /// </param>

        /// <param name="name">Host name of the IoT hub.
        /// </param>

        /// <param name="connectionString">Connection string og the IoT hub.
        /// </param>

        /// <param name="location">ARM region of the IoT hub.
        /// </param>
        public IotHubDefinitionDescription(string connectionString, string location, bool? applyAllocationPolicy = default(bool?), int? allocationWeight = default(int?), string name = default(string))

        {
            this.ApplyAllocationPolicy = applyAllocationPolicy;
            this.AllocationWeight = allocationWeight;
            this.Name = name;
            this.ConnectionString = connectionString;
            this.Location = location;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets or sets flag for applying allocationPolicy or not for a given iot hub.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "applyAllocationPolicy")]
        public bool? ApplyAllocationPolicy {get; set; }

        /// <summary>
        /// Gets or sets weight to apply for a given iot h.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "allocationWeight")]
        public int? AllocationWeight {get; set; }

        /// <summary>
        /// Gets host name of the IoT hub.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "name")]
        public string Name {get; private set; }

        /// <summary>
        /// Gets or sets connection string og the IoT hub.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "connectionString")]
        public string ConnectionString {get; set; }

        /// <summary>
        /// Gets or sets aRM region of the IoT hub.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "location")]
        public string Location {get; set; }
        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (this.ConnectionString == null)
            {
                throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.CannotBeNull, "ConnectionString");
            }
            if (this.Location == null)
            {
                throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.CannotBeNull, "Location");
            }



        }
    }
}