// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Marketplace.Models.Api20210601
{
    using static Microsoft.Azure.PowerShell.Cmdlets.Marketplace.Runtime.Extensions;

    /// <summary>The collection details</summary>
    public partial class CollectionProperties :
        Microsoft.Azure.PowerShell.Cmdlets.Marketplace.Models.Api20210601.ICollectionProperties,
        Microsoft.Azure.PowerShell.Cmdlets.Marketplace.Models.Api20210601.ICollectionPropertiesInternal
    {

        /// <summary>Backing field for <see cref="AllSubscription" /> property.</summary>
        private bool? _allSubscription;

        /// <summary>Indicating whether all subscriptions are selected (=true) or not (=false).</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Marketplace.Origin(Microsoft.Azure.PowerShell.Cmdlets.Marketplace.PropertyOrigin.Owned)]
        public bool? AllSubscription { get => this._allSubscription; set => this._allSubscription = value; }

        /// <summary>Backing field for <see cref="Claim" /> property.</summary>
        private string _claim;

        /// <summary>Gets or sets the association with Commercial's Billing Account.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Marketplace.Origin(Microsoft.Azure.PowerShell.Cmdlets.Marketplace.PropertyOrigin.Owned)]
        public string Claim { get => this._claim; set => this._claim = value; }

        /// <summary>Backing field for <see cref="CollectionId" /> property.</summary>
        private string _collectionId;

        /// <summary>Gets collection Id.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Marketplace.Origin(Microsoft.Azure.PowerShell.Cmdlets.Marketplace.PropertyOrigin.Owned)]
        public string CollectionId { get => this._collectionId; }

        /// <summary>Backing field for <see cref="CollectionName" /> property.</summary>
        private string _collectionName;

        /// <summary>Gets or sets collection name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Marketplace.Origin(Microsoft.Azure.PowerShell.Cmdlets.Marketplace.PropertyOrigin.Owned)]
        public string CollectionName { get => this._collectionName; set => this._collectionName = value; }

        /// <summary>Backing field for <see cref="Enabled" /> property.</summary>
        private bool? _enabled;

        /// <summary>Indicating whether the collection is enabled or disabled.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Marketplace.Origin(Microsoft.Azure.PowerShell.Cmdlets.Marketplace.PropertyOrigin.Owned)]
        public bool? Enabled { get => this._enabled; set => this._enabled = value; }

        /// <summary>Internal Acessors for CollectionId</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Marketplace.Models.Api20210601.ICollectionPropertiesInternal.CollectionId { get => this._collectionId; set { {_collectionId = value;} } }

        /// <summary>Internal Acessors for NumberOfOffer</summary>
        long? Microsoft.Azure.PowerShell.Cmdlets.Marketplace.Models.Api20210601.ICollectionPropertiesInternal.NumberOfOffer { get => this._numberOfOffer; set { {_numberOfOffer = value;} } }

        /// <summary>Backing field for <see cref="NumberOfOffer" /> property.</summary>
        private long? _numberOfOffer;

        /// <summary>Gets the number of offers associated with the collection.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Marketplace.Origin(Microsoft.Azure.PowerShell.Cmdlets.Marketplace.PropertyOrigin.Owned)]
        public long? NumberOfOffer { get => this._numberOfOffer; }

        /// <summary>Backing field for <see cref="SubscriptionsList" /> property.</summary>
        private string[] _subscriptionsList;

        /// <summary>
        /// Gets or sets subscription ids list. Empty list indicates all subscriptions are selected, null indicates no update is done,
        /// explicit list indicates the explicit selected subscriptions. On insert, null is considered as bad request
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Marketplace.Origin(Microsoft.Azure.PowerShell.Cmdlets.Marketplace.PropertyOrigin.Owned)]
        public string[] SubscriptionsList { get => this._subscriptionsList; set => this._subscriptionsList = value; }

        /// <summary>Creates an new <see cref="CollectionProperties" /> instance.</summary>
        public CollectionProperties()
        {

        }
    }
    /// The collection details
    public partial interface ICollectionProperties :
        Microsoft.Azure.PowerShell.Cmdlets.Marketplace.Runtime.IJsonSerializable
    {
        /// <summary>Indicating whether all subscriptions are selected (=true) or not (=false).</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Marketplace.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Indicating whether all subscriptions are selected (=true) or not (=false).",
        SerializedName = @"allSubscriptions",
        PossibleTypes = new [] { typeof(bool) })]
        bool? AllSubscription { get; set; }
        /// <summary>Gets or sets the association with Commercial's Billing Account.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Marketplace.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Gets or sets the association with Commercial's Billing Account.",
        SerializedName = @"claim",
        PossibleTypes = new [] { typeof(string) })]
        string Claim { get; set; }
        /// <summary>Gets collection Id.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Marketplace.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Gets collection Id.",
        SerializedName = @"collectionId",
        PossibleTypes = new [] { typeof(string) })]
        string CollectionId { get;  }
        /// <summary>Gets or sets collection name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Marketplace.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Gets or sets collection name.",
        SerializedName = @"collectionName",
        PossibleTypes = new [] { typeof(string) })]
        string CollectionName { get; set; }
        /// <summary>Indicating whether the collection is enabled or disabled.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Marketplace.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Indicating whether the collection is enabled or disabled.",
        SerializedName = @"enabled",
        PossibleTypes = new [] { typeof(bool) })]
        bool? Enabled { get; set; }
        /// <summary>Gets the number of offers associated with the collection.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Marketplace.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Gets the number of offers associated with the collection.",
        SerializedName = @"numberOfOffers",
        PossibleTypes = new [] { typeof(long) })]
        long? NumberOfOffer { get;  }
        /// <summary>
        /// Gets or sets subscription ids list. Empty list indicates all subscriptions are selected, null indicates no update is done,
        /// explicit list indicates the explicit selected subscriptions. On insert, null is considered as bad request
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Marketplace.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Gets or sets subscription ids list. Empty list indicates all subscriptions are selected, null indicates no update is done, explicit list indicates the explicit selected subscriptions. On insert, null is considered as bad request",
        SerializedName = @"subscriptionsList",
        PossibleTypes = new [] { typeof(string) })]
        string[] SubscriptionsList { get; set; }

    }
    /// The collection details
    internal partial interface ICollectionPropertiesInternal

    {
        /// <summary>Indicating whether all subscriptions are selected (=true) or not (=false).</summary>
        bool? AllSubscription { get; set; }
        /// <summary>Gets or sets the association with Commercial's Billing Account.</summary>
        string Claim { get; set; }
        /// <summary>Gets collection Id.</summary>
        string CollectionId { get; set; }
        /// <summary>Gets or sets collection name.</summary>
        string CollectionName { get; set; }
        /// <summary>Indicating whether the collection is enabled or disabled.</summary>
        bool? Enabled { get; set; }
        /// <summary>Gets the number of offers associated with the collection.</summary>
        long? NumberOfOffer { get; set; }
        /// <summary>
        /// Gets or sets subscription ids list. Empty list indicates all subscriptions are selected, null indicates no update is done,
        /// explicit list indicates the explicit selected subscriptions. On insert, null is considered as bad request
        /// </summary>
        string[] SubscriptionsList { get; set; }

    }
}