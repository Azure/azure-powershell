// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Marketplace.Models.Api20210601
{
    using static Microsoft.Azure.PowerShell.Cmdlets.Marketplace.Runtime.Extensions;

    public partial class OfferProperties :
        Microsoft.Azure.PowerShell.Cmdlets.Marketplace.Models.Api20210601.IOfferProperties,
        Microsoft.Azure.PowerShell.Cmdlets.Marketplace.Models.Api20210601.IOfferPropertiesInternal
    {

        /// <summary>Backing field for <see cref="CreatedAt" /> property.</summary>
        private string _createdAt;

        /// <summary>Private store offer creation date</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Marketplace.Origin(Microsoft.Azure.PowerShell.Cmdlets.Marketplace.PropertyOrigin.Owned)]
        public string CreatedAt { get => this._createdAt; }

        /// <summary>Backing field for <see cref="ETag" /> property.</summary>
        private string _eTag;

        /// <summary>Identifier for purposes of race condition</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Marketplace.Origin(Microsoft.Azure.PowerShell.Cmdlets.Marketplace.PropertyOrigin.Owned)]
        public string ETag { get => this._eTag; set => this._eTag = value; }

        /// <summary>Backing field for <see cref="IconFileUri" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Marketplace.Models.Api20210601.IOfferPropertiesIconFileUris _iconFileUri;

        /// <summary>Icon File Uris</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Marketplace.Origin(Microsoft.Azure.PowerShell.Cmdlets.Marketplace.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.Marketplace.Models.Api20210601.IOfferPropertiesIconFileUris IconFileUri { get => (this._iconFileUri = this._iconFileUri ?? new Microsoft.Azure.PowerShell.Cmdlets.Marketplace.Models.Api20210601.OfferPropertiesIconFileUris()); set => this._iconFileUri = value; }

        /// <summary>Internal Acessors for CreatedAt</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Marketplace.Models.Api20210601.IOfferPropertiesInternal.CreatedAt { get => this._createdAt; set { {_createdAt = value;} } }

        /// <summary>Internal Acessors for ModifiedAt</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Marketplace.Models.Api20210601.IOfferPropertiesInternal.ModifiedAt { get => this._modifiedAt; set { {_modifiedAt = value;} } }

        /// <summary>Internal Acessors for OfferDisplayName</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Marketplace.Models.Api20210601.IOfferPropertiesInternal.OfferDisplayName { get => this._offerDisplayName; set { {_offerDisplayName = value;} } }

        /// <summary>Internal Acessors for PrivateStoreId</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Marketplace.Models.Api20210601.IOfferPropertiesInternal.PrivateStoreId { get => this._privateStoreId; set { {_privateStoreId = value;} } }

        /// <summary>Internal Acessors for PublisherDisplayName</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Marketplace.Models.Api20210601.IOfferPropertiesInternal.PublisherDisplayName { get => this._publisherDisplayName; set { {_publisherDisplayName = value;} } }

        /// <summary>Internal Acessors for UniqueOfferId</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Marketplace.Models.Api20210601.IOfferPropertiesInternal.UniqueOfferId { get => this._uniqueOfferId; set { {_uniqueOfferId = value;} } }

        /// <summary>Backing field for <see cref="ModifiedAt" /> property.</summary>
        private string _modifiedAt;

        /// <summary>Private store offer modification date</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Marketplace.Origin(Microsoft.Azure.PowerShell.Cmdlets.Marketplace.PropertyOrigin.Owned)]
        public string ModifiedAt { get => this._modifiedAt; }

        /// <summary>Backing field for <see cref="OfferDisplayName" /> property.</summary>
        private string _offerDisplayName;

        /// <summary>It will be displayed prominently in the marketplace</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Marketplace.Origin(Microsoft.Azure.PowerShell.Cmdlets.Marketplace.PropertyOrigin.Owned)]
        public string OfferDisplayName { get => this._offerDisplayName; }

        /// <summary>Backing field for <see cref="Plan" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Marketplace.Models.Api20210601.IPlan[] _plan;

        /// <summary>Offer plans</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Marketplace.Origin(Microsoft.Azure.PowerShell.Cmdlets.Marketplace.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.Marketplace.Models.Api20210601.IPlan[] Plan { get => this._plan; set => this._plan = value; }

        /// <summary>Backing field for <see cref="PrivateStoreId" /> property.</summary>
        private string _privateStoreId;

        /// <summary>Private store unique id</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Marketplace.Origin(Microsoft.Azure.PowerShell.Cmdlets.Marketplace.PropertyOrigin.Owned)]
        public string PrivateStoreId { get => this._privateStoreId; }

        /// <summary>Backing field for <see cref="PublisherDisplayName" /> property.</summary>
        private string _publisherDisplayName;

        /// <summary>Publisher name that will be displayed prominently in the marketplace</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Marketplace.Origin(Microsoft.Azure.PowerShell.Cmdlets.Marketplace.PropertyOrigin.Owned)]
        public string PublisherDisplayName { get => this._publisherDisplayName; }

        /// <summary>Backing field for <see cref="SpecificPlanIdsLimitation" /> property.</summary>
        private string[] _specificPlanIdsLimitation;

        /// <summary>Plan ids limitation for this offer</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Marketplace.Origin(Microsoft.Azure.PowerShell.Cmdlets.Marketplace.PropertyOrigin.Owned)]
        public string[] SpecificPlanIdsLimitation { get => this._specificPlanIdsLimitation; set => this._specificPlanIdsLimitation = value; }

        /// <summary>Backing field for <see cref="UniqueOfferId" /> property.</summary>
        private string _uniqueOfferId;

        /// <summary>Offers unique id</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Marketplace.Origin(Microsoft.Azure.PowerShell.Cmdlets.Marketplace.PropertyOrigin.Owned)]
        public string UniqueOfferId { get => this._uniqueOfferId; }

        /// <summary>Backing field for <see cref="UpdateSuppressedDueIdempotence" /> property.</summary>
        private bool? _updateSuppressedDueIdempotence;

        /// <summary>
        /// Indicating whether the offer was not updated to db (true = not updated). If the allow list is identical to the existed
        /// one in db, the offer would not be updated.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Marketplace.Origin(Microsoft.Azure.PowerShell.Cmdlets.Marketplace.PropertyOrigin.Owned)]
        public bool? UpdateSuppressedDueIdempotence { get => this._updateSuppressedDueIdempotence; set => this._updateSuppressedDueIdempotence = value; }

        /// <summary>Creates an new <see cref="OfferProperties" /> instance.</summary>
        public OfferProperties()
        {

        }
    }
    public partial interface IOfferProperties :
        Microsoft.Azure.PowerShell.Cmdlets.Marketplace.Runtime.IJsonSerializable
    {
        /// <summary>Private store offer creation date</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Marketplace.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Private store offer creation date",
        SerializedName = @"createdAt",
        PossibleTypes = new [] { typeof(string) })]
        string CreatedAt { get;  }
        /// <summary>Identifier for purposes of race condition</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Marketplace.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Identifier for purposes of race condition",
        SerializedName = @"eTag",
        PossibleTypes = new [] { typeof(string) })]
        string ETag { get; set; }
        /// <summary>Icon File Uris</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Marketplace.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Icon File Uris",
        SerializedName = @"iconFileUris",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Marketplace.Models.Api20210601.IOfferPropertiesIconFileUris) })]
        Microsoft.Azure.PowerShell.Cmdlets.Marketplace.Models.Api20210601.IOfferPropertiesIconFileUris IconFileUri { get; set; }
        /// <summary>Private store offer modification date</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Marketplace.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Private store offer modification date",
        SerializedName = @"modifiedAt",
        PossibleTypes = new [] { typeof(string) })]
        string ModifiedAt { get;  }
        /// <summary>It will be displayed prominently in the marketplace</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Marketplace.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"It will be displayed prominently in the marketplace",
        SerializedName = @"offerDisplayName",
        PossibleTypes = new [] { typeof(string) })]
        string OfferDisplayName { get;  }
        /// <summary>Offer plans</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Marketplace.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Offer plans",
        SerializedName = @"plans",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Marketplace.Models.Api20210601.IPlan) })]
        Microsoft.Azure.PowerShell.Cmdlets.Marketplace.Models.Api20210601.IPlan[] Plan { get; set; }
        /// <summary>Private store unique id</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Marketplace.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Private store unique id",
        SerializedName = @"privateStoreId",
        PossibleTypes = new [] { typeof(string) })]
        string PrivateStoreId { get;  }
        /// <summary>Publisher name that will be displayed prominently in the marketplace</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Marketplace.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Publisher name that will be displayed prominently in the marketplace",
        SerializedName = @"publisherDisplayName",
        PossibleTypes = new [] { typeof(string) })]
        string PublisherDisplayName { get;  }
        /// <summary>Plan ids limitation for this offer</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Marketplace.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Plan ids limitation for this offer",
        SerializedName = @"specificPlanIdsLimitation",
        PossibleTypes = new [] { typeof(string) })]
        string[] SpecificPlanIdsLimitation { get; set; }
        /// <summary>Offers unique id</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Marketplace.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Offers unique id",
        SerializedName = @"uniqueOfferId",
        PossibleTypes = new [] { typeof(string) })]
        string UniqueOfferId { get;  }
        /// <summary>
        /// Indicating whether the offer was not updated to db (true = not updated). If the allow list is identical to the existed
        /// one in db, the offer would not be updated.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Marketplace.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Indicating whether the offer was not updated to db (true = not updated). If the allow list is identical to the existed one in db, the offer would not be updated.",
        SerializedName = @"updateSuppressedDueIdempotence",
        PossibleTypes = new [] { typeof(bool) })]
        bool? UpdateSuppressedDueIdempotence { get; set; }

    }
    internal partial interface IOfferPropertiesInternal

    {
        /// <summary>Private store offer creation date</summary>
        string CreatedAt { get; set; }
        /// <summary>Identifier for purposes of race condition</summary>
        string ETag { get; set; }
        /// <summary>Icon File Uris</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Marketplace.Models.Api20210601.IOfferPropertiesIconFileUris IconFileUri { get; set; }
        /// <summary>Private store offer modification date</summary>
        string ModifiedAt { get; set; }
        /// <summary>It will be displayed prominently in the marketplace</summary>
        string OfferDisplayName { get; set; }
        /// <summary>Offer plans</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Marketplace.Models.Api20210601.IPlan[] Plan { get; set; }
        /// <summary>Private store unique id</summary>
        string PrivateStoreId { get; set; }
        /// <summary>Publisher name that will be displayed prominently in the marketplace</summary>
        string PublisherDisplayName { get; set; }
        /// <summary>Plan ids limitation for this offer</summary>
        string[] SpecificPlanIdsLimitation { get; set; }
        /// <summary>Offers unique id</summary>
        string UniqueOfferId { get; set; }
        /// <summary>
        /// Indicating whether the offer was not updated to db (true = not updated). If the allow list is identical to the existed
        /// one in db, the offer would not be updated.
        /// </summary>
        bool? UpdateSuppressedDueIdempotence { get; set; }

    }
}