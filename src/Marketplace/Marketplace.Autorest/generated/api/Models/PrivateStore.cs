// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Marketplace.Models
{
    using static Microsoft.Azure.PowerShell.Cmdlets.Marketplace.Runtime.Extensions;

    /// <summary>The PrivateStore data structure.</summary>
    public partial class PrivateStore :
        Microsoft.Azure.PowerShell.Cmdlets.Marketplace.Models.IPrivateStore,
        Microsoft.Azure.PowerShell.Cmdlets.Marketplace.Models.IPrivateStoreInternal,
        Microsoft.Azure.PowerShell.Cmdlets.Marketplace.Runtime.IValidates
    {
        /// <summary>
        /// Backing field for Inherited model <see cref= "Microsoft.Azure.PowerShell.Cmdlets.Marketplace.Models.IResource" />
        /// </summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Marketplace.Models.IResource __resource = new Microsoft.Azure.PowerShell.Cmdlets.Marketplace.Models.Resource();

        /// <summary>Indicates private store availability</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Marketplace.Origin(Microsoft.Azure.PowerShell.Cmdlets.Marketplace.PropertyOrigin.Inlined)]
        public string Availability { get => ((Microsoft.Azure.PowerShell.Cmdlets.Marketplace.Models.IPrivateStorePropertiesInternal)Property).Availability; set => ((Microsoft.Azure.PowerShell.Cmdlets.Marketplace.Models.IPrivateStorePropertiesInternal)Property).Availability = value ?? null; }

        /// <summary>Gets or sets list of branding characteristics</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Marketplace.Origin(Microsoft.Azure.PowerShell.Cmdlets.Marketplace.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Marketplace.Models.IPrivateStorePropertiesBranding Branding { get => ((Microsoft.Azure.PowerShell.Cmdlets.Marketplace.Models.IPrivateStorePropertiesInternal)Property).Branding; set => ((Microsoft.Azure.PowerShell.Cmdlets.Marketplace.Models.IPrivateStorePropertiesInternal)Property).Branding = value ?? null /* model class */; }

        /// <summary>Gets list of associated collection ids</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Marketplace.Origin(Microsoft.Azure.PowerShell.Cmdlets.Marketplace.PropertyOrigin.Inlined)]
        public System.Collections.Generic.List<string> CollectionId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Marketplace.Models.IPrivateStorePropertiesInternal)Property).CollectionId; }

        /// <summary>Identifier for purposes of race condition</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Marketplace.Origin(Microsoft.Azure.PowerShell.Cmdlets.Marketplace.PropertyOrigin.Inlined)]
        public string ETag { get => ((Microsoft.Azure.PowerShell.Cmdlets.Marketplace.Models.IPrivateStorePropertiesInternal)Property).ETag; set => ((Microsoft.Azure.PowerShell.Cmdlets.Marketplace.Models.IPrivateStorePropertiesInternal)Property).ETag = value ?? null; }

        /// <summary>The resource ID.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Marketplace.Origin(Microsoft.Azure.PowerShell.Cmdlets.Marketplace.PropertyOrigin.Inherited)]
        public string Id { get => ((Microsoft.Azure.PowerShell.Cmdlets.Marketplace.Models.IResourceInternal)__resource).Id; }

        /// <summary>Is government</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Marketplace.Origin(Microsoft.Azure.PowerShell.Cmdlets.Marketplace.PropertyOrigin.Inlined)]
        public bool? IsGov { get => ((Microsoft.Azure.PowerShell.Cmdlets.Marketplace.Models.IPrivateStorePropertiesInternal)Property).IsGov; set => ((Microsoft.Azure.PowerShell.Cmdlets.Marketplace.Models.IPrivateStorePropertiesInternal)Property).IsGov = value ?? default(bool); }

        /// <summary>Internal Acessors for CollectionId</summary>
        System.Collections.Generic.List<string> Microsoft.Azure.PowerShell.Cmdlets.Marketplace.Models.IPrivateStoreInternal.CollectionId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Marketplace.Models.IPrivateStorePropertiesInternal)Property).CollectionId; set => ((Microsoft.Azure.PowerShell.Cmdlets.Marketplace.Models.IPrivateStorePropertiesInternal)Property).CollectionId = value; }

        /// <summary>Internal Acessors for NotificationsSetting</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Marketplace.Models.INotificationsSettingsProperties Microsoft.Azure.PowerShell.Cmdlets.Marketplace.Models.IPrivateStoreInternal.NotificationsSetting { get => ((Microsoft.Azure.PowerShell.Cmdlets.Marketplace.Models.IPrivateStorePropertiesInternal)Property).NotificationsSetting; set => ((Microsoft.Azure.PowerShell.Cmdlets.Marketplace.Models.IPrivateStorePropertiesInternal)Property).NotificationsSetting = value; }

        /// <summary>Internal Acessors for PrivateStoreId</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Marketplace.Models.IPrivateStoreInternal.PrivateStoreId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Marketplace.Models.IPrivateStorePropertiesInternal)Property).PrivateStoreId; set => ((Microsoft.Azure.PowerShell.Cmdlets.Marketplace.Models.IPrivateStorePropertiesInternal)Property).PrivateStoreId = value; }

        /// <summary>Internal Acessors for Property</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Marketplace.Models.IPrivateStoreProperties Microsoft.Azure.PowerShell.Cmdlets.Marketplace.Models.IPrivateStoreInternal.Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.Marketplace.Models.PrivateStoreProperties()); set { {_property = value;} } }

        /// <summary>Internal Acessors for Id</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Marketplace.Models.IResourceInternal.Id { get => ((Microsoft.Azure.PowerShell.Cmdlets.Marketplace.Models.IResourceInternal)__resource).Id; set => ((Microsoft.Azure.PowerShell.Cmdlets.Marketplace.Models.IResourceInternal)__resource).Id = value; }

        /// <summary>Internal Acessors for Name</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Marketplace.Models.IResourceInternal.Name { get => ((Microsoft.Azure.PowerShell.Cmdlets.Marketplace.Models.IResourceInternal)__resource).Name; set => ((Microsoft.Azure.PowerShell.Cmdlets.Marketplace.Models.IResourceInternal)__resource).Name = value; }

        /// <summary>Internal Acessors for SystemData</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Marketplace.Models.ISystemData Microsoft.Azure.PowerShell.Cmdlets.Marketplace.Models.IResourceInternal.SystemData { get => ((Microsoft.Azure.PowerShell.Cmdlets.Marketplace.Models.IResourceInternal)__resource).SystemData; set => ((Microsoft.Azure.PowerShell.Cmdlets.Marketplace.Models.IResourceInternal)__resource).SystemData = value; }

        /// <summary>Internal Acessors for Type</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Marketplace.Models.IResourceInternal.Type { get => ((Microsoft.Azure.PowerShell.Cmdlets.Marketplace.Models.IResourceInternal)__resource).Type; set => ((Microsoft.Azure.PowerShell.Cmdlets.Marketplace.Models.IResourceInternal)__resource).Type = value; }

        /// <summary>The name of the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Marketplace.Origin(Microsoft.Azure.PowerShell.Cmdlets.Marketplace.PropertyOrigin.Inherited)]
        public string Name { get => ((Microsoft.Azure.PowerShell.Cmdlets.Marketplace.Models.IResourceInternal)__resource).Name; }

        /// <summary>Gets or sets list of notified recipients for new requests</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Marketplace.Origin(Microsoft.Azure.PowerShell.Cmdlets.Marketplace.PropertyOrigin.Inlined)]
        public System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.Marketplace.Models.IRecipient> NotificationSettingRecipient { get => ((Microsoft.Azure.PowerShell.Cmdlets.Marketplace.Models.IPrivateStorePropertiesInternal)Property).NotificationSettingRecipient; set => ((Microsoft.Azure.PowerShell.Cmdlets.Marketplace.Models.IPrivateStorePropertiesInternal)Property).NotificationSettingRecipient = value ?? null /* arrayOf */; }

        /// <summary>Gets or sets whether to send email to all marketplace admins for new requests</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Marketplace.Origin(Microsoft.Azure.PowerShell.Cmdlets.Marketplace.PropertyOrigin.Inlined)]
        public bool? NotificationSettingSendToAllMarketplaceAdmin { get => ((Microsoft.Azure.PowerShell.Cmdlets.Marketplace.Models.IPrivateStorePropertiesInternal)Property).NotificationSettingSendToAllMarketplaceAdmin; set => ((Microsoft.Azure.PowerShell.Cmdlets.Marketplace.Models.IPrivateStorePropertiesInternal)Property).NotificationSettingSendToAllMarketplaceAdmin = value ?? default(bool); }

        /// <summary>Private Store id</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Marketplace.Origin(Microsoft.Azure.PowerShell.Cmdlets.Marketplace.PropertyOrigin.Inlined)]
        public string PrivateStoreId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Marketplace.Models.IPrivateStorePropertiesInternal)Property).PrivateStoreId; }

        /// <summary>Private Store Name</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Marketplace.Origin(Microsoft.Azure.PowerShell.Cmdlets.Marketplace.PropertyOrigin.Inlined)]
        public string PrivateStoreName { get => ((Microsoft.Azure.PowerShell.Cmdlets.Marketplace.Models.IPrivateStorePropertiesInternal)Property).PrivateStoreName; set => ((Microsoft.Azure.PowerShell.Cmdlets.Marketplace.Models.IPrivateStorePropertiesInternal)Property).PrivateStoreName = value ?? null; }

        /// <summary>Backing field for <see cref="Property" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Marketplace.Models.IPrivateStoreProperties _property;

        /// <summary>The PrivateStore data structure.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Marketplace.Origin(Microsoft.Azure.PowerShell.Cmdlets.Marketplace.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Marketplace.Models.IPrivateStoreProperties Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.Marketplace.Models.PrivateStoreProperties()); set => this._property = value; }

        /// <summary>Gets the resource group name</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Marketplace.Origin(Microsoft.Azure.PowerShell.Cmdlets.Marketplace.PropertyOrigin.Owned)]
        public string ResourceGroupName { get => (new global::System.Text.RegularExpressions.Regex("^/subscriptions/(?<subscriptionId>[^/]+)/resourceGroups/(?<resourceGroupName>[^/]+)/providers/", global::System.Text.RegularExpressions.RegexOptions.IgnoreCase).Match(this.Id).Success ? new global::System.Text.RegularExpressions.Regex("^/subscriptions/(?<subscriptionId>[^/]+)/resourceGroups/(?<resourceGroupName>[^/]+)/providers/", global::System.Text.RegularExpressions.RegexOptions.IgnoreCase).Match(this.Id).Groups["resourceGroupName"].Value : null); }

        /// <summary>Metadata pertaining to creation and last modification of the resource</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Marketplace.Origin(Microsoft.Azure.PowerShell.Cmdlets.Marketplace.PropertyOrigin.Inherited)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Marketplace.Models.ISystemData SystemData { get => ((Microsoft.Azure.PowerShell.Cmdlets.Marketplace.Models.IResourceInternal)__resource).SystemData; }

        /// <summary>The timestamp of resource creation (UTC)</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Marketplace.Origin(Microsoft.Azure.PowerShell.Cmdlets.Marketplace.PropertyOrigin.Inherited)]
        public global::System.DateTime? SystemDataCreatedAt { get => ((Microsoft.Azure.PowerShell.Cmdlets.Marketplace.Models.IResourceInternal)__resource).SystemDataCreatedAt; set => ((Microsoft.Azure.PowerShell.Cmdlets.Marketplace.Models.IResourceInternal)__resource).SystemDataCreatedAt = value ?? default(global::System.DateTime); }

        /// <summary>The identity that created the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Marketplace.Origin(Microsoft.Azure.PowerShell.Cmdlets.Marketplace.PropertyOrigin.Inherited)]
        public string SystemDataCreatedBy { get => ((Microsoft.Azure.PowerShell.Cmdlets.Marketplace.Models.IResourceInternal)__resource).SystemDataCreatedBy; set => ((Microsoft.Azure.PowerShell.Cmdlets.Marketplace.Models.IResourceInternal)__resource).SystemDataCreatedBy = value ?? null; }

        /// <summary>The type of identity that created the resource</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Marketplace.Origin(Microsoft.Azure.PowerShell.Cmdlets.Marketplace.PropertyOrigin.Inherited)]
        public string SystemDataCreatedByType { get => ((Microsoft.Azure.PowerShell.Cmdlets.Marketplace.Models.IResourceInternal)__resource).SystemDataCreatedByType; set => ((Microsoft.Azure.PowerShell.Cmdlets.Marketplace.Models.IResourceInternal)__resource).SystemDataCreatedByType = value ?? null; }

        /// <summary>The timestamp of resource last modification (UTC)</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Marketplace.Origin(Microsoft.Azure.PowerShell.Cmdlets.Marketplace.PropertyOrigin.Inherited)]
        public global::System.DateTime? SystemDataLastModifiedAt { get => ((Microsoft.Azure.PowerShell.Cmdlets.Marketplace.Models.IResourceInternal)__resource).SystemDataLastModifiedAt; set => ((Microsoft.Azure.PowerShell.Cmdlets.Marketplace.Models.IResourceInternal)__resource).SystemDataLastModifiedAt = value ?? default(global::System.DateTime); }

        /// <summary>The identity that last modified the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Marketplace.Origin(Microsoft.Azure.PowerShell.Cmdlets.Marketplace.PropertyOrigin.Inherited)]
        public string SystemDataLastModifiedBy { get => ((Microsoft.Azure.PowerShell.Cmdlets.Marketplace.Models.IResourceInternal)__resource).SystemDataLastModifiedBy; set => ((Microsoft.Azure.PowerShell.Cmdlets.Marketplace.Models.IResourceInternal)__resource).SystemDataLastModifiedBy = value ?? null; }

        /// <summary>The type of identity that last modified the resource</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Marketplace.Origin(Microsoft.Azure.PowerShell.Cmdlets.Marketplace.PropertyOrigin.Inherited)]
        public string SystemDataLastModifiedByType { get => ((Microsoft.Azure.PowerShell.Cmdlets.Marketplace.Models.IResourceInternal)__resource).SystemDataLastModifiedByType; set => ((Microsoft.Azure.PowerShell.Cmdlets.Marketplace.Models.IResourceInternal)__resource).SystemDataLastModifiedByType = value ?? null; }

        /// <summary>Tenant id</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Marketplace.Origin(Microsoft.Azure.PowerShell.Cmdlets.Marketplace.PropertyOrigin.Inlined)]
        public string TenantId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Marketplace.Models.IPrivateStorePropertiesInternal)Property).TenantId; set => ((Microsoft.Azure.PowerShell.Cmdlets.Marketplace.Models.IPrivateStorePropertiesInternal)Property).TenantId = value ?? null; }

        /// <summary>The type of the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Marketplace.Origin(Microsoft.Azure.PowerShell.Cmdlets.Marketplace.PropertyOrigin.Inherited)]
        public string Type { get => ((Microsoft.Azure.PowerShell.Cmdlets.Marketplace.Models.IResourceInternal)__resource).Type; }

        /// <summary>Creates an new <see cref="PrivateStore" /> instance.</summary>
        public PrivateStore()
        {

        }

        /// <summary>Validates that this object meets the validation criteria.</summary>
        /// <param name="eventListener">an <see cref="Microsoft.Azure.PowerShell.Cmdlets.Marketplace.Runtime.IEventListener" /> instance that will receive validation
        /// events.</param>
        /// <returns>
        /// A <see cref = "global::System.Threading.Tasks.Task" /> that will be complete when validation is completed.
        /// </returns>
        public async global::System.Threading.Tasks.Task Validate(Microsoft.Azure.PowerShell.Cmdlets.Marketplace.Runtime.IEventListener eventListener)
        {
            await eventListener.AssertNotNull(nameof(__resource), __resource);
            await eventListener.AssertObjectIsValid(nameof(__resource), __resource);
        }
    }
    /// The PrivateStore data structure.
    public partial interface IPrivateStore :
        Microsoft.Azure.PowerShell.Cmdlets.Marketplace.Runtime.IJsonSerializable,
        Microsoft.Azure.PowerShell.Cmdlets.Marketplace.Models.IResource
    {
        /// <summary>Indicates private store availability</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Marketplace.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Indicates private store availability",
        SerializedName = @"availability",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.Marketplace.PSArgumentCompleterAttribute("enabled", "disabled")]
        string Availability { get; set; }
        /// <summary>Gets or sets list of branding characteristics</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Marketplace.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Gets or sets list of branding characteristics",
        SerializedName = @"branding",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Marketplace.Models.IPrivateStorePropertiesBranding) })]
        Microsoft.Azure.PowerShell.Cmdlets.Marketplace.Models.IPrivateStorePropertiesBranding Branding { get; set; }
        /// <summary>Gets list of associated collection ids</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Marketplace.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"Gets list of associated collection ids",
        SerializedName = @"collectionIds",
        PossibleTypes = new [] { typeof(string) })]
        System.Collections.Generic.List<string> CollectionId { get;  }
        /// <summary>Identifier for purposes of race condition</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Marketplace.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Identifier for purposes of race condition",
        SerializedName = @"eTag",
        PossibleTypes = new [] { typeof(string) })]
        string ETag { get; set; }
        /// <summary>Is government</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Marketplace.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Is government",
        SerializedName = @"isGov",
        PossibleTypes = new [] { typeof(bool) })]
        bool? IsGov { get; set; }
        /// <summary>Gets or sets list of notified recipients for new requests</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Marketplace.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Gets or sets list of notified recipients for new requests",
        SerializedName = @"recipients",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Marketplace.Models.IRecipient) })]
        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.Marketplace.Models.IRecipient> NotificationSettingRecipient { get; set; }
        /// <summary>Gets or sets whether to send email to all marketplace admins for new requests</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Marketplace.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Gets or sets whether to send email to all marketplace admins for new requests",
        SerializedName = @"sendToAllMarketplaceAdmins",
        PossibleTypes = new [] { typeof(bool) })]
        bool? NotificationSettingSendToAllMarketplaceAdmin { get; set; }
        /// <summary>Private Store id</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Marketplace.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"Private Store id",
        SerializedName = @"privateStoreId",
        PossibleTypes = new [] { typeof(string) })]
        string PrivateStoreId { get;  }
        /// <summary>Private Store Name</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Marketplace.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Private Store Name",
        SerializedName = @"privateStoreName",
        PossibleTypes = new [] { typeof(string) })]
        string PrivateStoreName { get; set; }
        /// <summary>Tenant id</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Marketplace.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Tenant id",
        SerializedName = @"tenantId",
        PossibleTypes = new [] { typeof(string) })]
        string TenantId { get; set; }

    }
    /// The PrivateStore data structure.
    internal partial interface IPrivateStoreInternal :
        Microsoft.Azure.PowerShell.Cmdlets.Marketplace.Models.IResourceInternal
    {
        /// <summary>Indicates private store availability</summary>
        [global::Microsoft.Azure.PowerShell.Cmdlets.Marketplace.PSArgumentCompleterAttribute("enabled", "disabled")]
        string Availability { get; set; }
        /// <summary>Gets or sets list of branding characteristics</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Marketplace.Models.IPrivateStorePropertiesBranding Branding { get; set; }
        /// <summary>Gets list of associated collection ids</summary>
        System.Collections.Generic.List<string> CollectionId { get; set; }
        /// <summary>Identifier for purposes of race condition</summary>
        string ETag { get; set; }
        /// <summary>Is government</summary>
        bool? IsGov { get; set; }
        /// <summary>Gets or sets list of notified recipients for new requests</summary>
        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.Marketplace.Models.IRecipient> NotificationSettingRecipient { get; set; }
        /// <summary>Gets or sets whether to send email to all marketplace admins for new requests</summary>
        bool? NotificationSettingSendToAllMarketplaceAdmin { get; set; }
        /// <summary>Gets or sets notifications settings</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Marketplace.Models.INotificationsSettingsProperties NotificationsSetting { get; set; }
        /// <summary>Private Store id</summary>
        string PrivateStoreId { get; set; }
        /// <summary>Private Store Name</summary>
        string PrivateStoreName { get; set; }
        /// <summary>The PrivateStore data structure.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Marketplace.Models.IPrivateStoreProperties Property { get; set; }
        /// <summary>Tenant id</summary>
        string TenantId { get; set; }

    }
}