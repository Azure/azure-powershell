// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Marketplace.Models
{
    using static Microsoft.Azure.PowerShell.Cmdlets.Marketplace.Runtime.Extensions;

    /// <summary>The privateStore offer data structure.</summary>
    public partial class Offer :
        Microsoft.Azure.PowerShell.Cmdlets.Marketplace.Models.IOffer,
        Microsoft.Azure.PowerShell.Cmdlets.Marketplace.Models.IOfferInternal,
        Microsoft.Azure.PowerShell.Cmdlets.Marketplace.Runtime.IValidates
    {
        /// <summary>
        /// Backing field for Inherited model <see cref= "Microsoft.Azure.PowerShell.Cmdlets.Marketplace.Models.IResource" />
        /// </summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Marketplace.Models.IResource __resource = new Microsoft.Azure.PowerShell.Cmdlets.Marketplace.Models.Resource();

        /// <summary>Private store offer creation date</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Marketplace.Origin(Microsoft.Azure.PowerShell.Cmdlets.Marketplace.PropertyOrigin.Inlined)]
        public string CreatedAt { get => ((Microsoft.Azure.PowerShell.Cmdlets.Marketplace.Models.IOfferPropertiesInternal)Property).CreatedAt; }

        /// <summary>It will be displayed prominently in the marketplace</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Marketplace.Origin(Microsoft.Azure.PowerShell.Cmdlets.Marketplace.PropertyOrigin.Inlined)]
        public string DisplayName { get => ((Microsoft.Azure.PowerShell.Cmdlets.Marketplace.Models.IOfferPropertiesInternal)Property).OfferDisplayName; }

        /// <summary>Identifier for purposes of race condition</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Marketplace.Origin(Microsoft.Azure.PowerShell.Cmdlets.Marketplace.PropertyOrigin.Inlined)]
        public string ETag { get => ((Microsoft.Azure.PowerShell.Cmdlets.Marketplace.Models.IOfferPropertiesInternal)Property).ETag; set => ((Microsoft.Azure.PowerShell.Cmdlets.Marketplace.Models.IOfferPropertiesInternal)Property).ETag = value ?? null; }

        /// <summary>Icon File Uris</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Marketplace.Origin(Microsoft.Azure.PowerShell.Cmdlets.Marketplace.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Marketplace.Models.IOfferPropertiesIconFileUris IconFileUri { get => ((Microsoft.Azure.PowerShell.Cmdlets.Marketplace.Models.IOfferPropertiesInternal)Property).IconFileUri; set => ((Microsoft.Azure.PowerShell.Cmdlets.Marketplace.Models.IOfferPropertiesInternal)Property).IconFileUri = value ?? null /* model class */; }

        /// <summary>The resource ID.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Marketplace.Origin(Microsoft.Azure.PowerShell.Cmdlets.Marketplace.PropertyOrigin.Inherited)]
        public string Id { get => ((Microsoft.Azure.PowerShell.Cmdlets.Marketplace.Models.IResourceInternal)__resource).Id; }

        /// <summary>Internal Acessors for CreatedAt</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Marketplace.Models.IOfferInternal.CreatedAt { get => ((Microsoft.Azure.PowerShell.Cmdlets.Marketplace.Models.IOfferPropertiesInternal)Property).CreatedAt; set => ((Microsoft.Azure.PowerShell.Cmdlets.Marketplace.Models.IOfferPropertiesInternal)Property).CreatedAt = value; }

        /// <summary>Internal Acessors for DisplayName</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Marketplace.Models.IOfferInternal.DisplayName { get => ((Microsoft.Azure.PowerShell.Cmdlets.Marketplace.Models.IOfferPropertiesInternal)Property).OfferDisplayName; set => ((Microsoft.Azure.PowerShell.Cmdlets.Marketplace.Models.IOfferPropertiesInternal)Property).OfferDisplayName = value; }

        /// <summary>Internal Acessors for ModifiedAt</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Marketplace.Models.IOfferInternal.ModifiedAt { get => ((Microsoft.Azure.PowerShell.Cmdlets.Marketplace.Models.IOfferPropertiesInternal)Property).ModifiedAt; set => ((Microsoft.Azure.PowerShell.Cmdlets.Marketplace.Models.IOfferPropertiesInternal)Property).ModifiedAt = value; }

        /// <summary>Internal Acessors for PrivateStoreId</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Marketplace.Models.IOfferInternal.PrivateStoreId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Marketplace.Models.IOfferPropertiesInternal)Property).PrivateStoreId; set => ((Microsoft.Azure.PowerShell.Cmdlets.Marketplace.Models.IOfferPropertiesInternal)Property).PrivateStoreId = value; }

        /// <summary>Internal Acessors for Property</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Marketplace.Models.IOfferProperties Microsoft.Azure.PowerShell.Cmdlets.Marketplace.Models.IOfferInternal.Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.Marketplace.Models.OfferProperties()); set { {_property = value;} } }

        /// <summary>Internal Acessors for PublisherDisplayName</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Marketplace.Models.IOfferInternal.PublisherDisplayName { get => ((Microsoft.Azure.PowerShell.Cmdlets.Marketplace.Models.IOfferPropertiesInternal)Property).PublisherDisplayName; set => ((Microsoft.Azure.PowerShell.Cmdlets.Marketplace.Models.IOfferPropertiesInternal)Property).PublisherDisplayName = value; }

        /// <summary>Internal Acessors for UniqueOfferId</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Marketplace.Models.IOfferInternal.UniqueOfferId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Marketplace.Models.IOfferPropertiesInternal)Property).UniqueOfferId; set => ((Microsoft.Azure.PowerShell.Cmdlets.Marketplace.Models.IOfferPropertiesInternal)Property).UniqueOfferId = value; }

        /// <summary>Internal Acessors for Id</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Marketplace.Models.IResourceInternal.Id { get => ((Microsoft.Azure.PowerShell.Cmdlets.Marketplace.Models.IResourceInternal)__resource).Id; set => ((Microsoft.Azure.PowerShell.Cmdlets.Marketplace.Models.IResourceInternal)__resource).Id = value; }

        /// <summary>Internal Acessors for Name</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Marketplace.Models.IResourceInternal.Name { get => ((Microsoft.Azure.PowerShell.Cmdlets.Marketplace.Models.IResourceInternal)__resource).Name; set => ((Microsoft.Azure.PowerShell.Cmdlets.Marketplace.Models.IResourceInternal)__resource).Name = value; }

        /// <summary>Internal Acessors for SystemData</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Marketplace.Models.ISystemData Microsoft.Azure.PowerShell.Cmdlets.Marketplace.Models.IResourceInternal.SystemData { get => ((Microsoft.Azure.PowerShell.Cmdlets.Marketplace.Models.IResourceInternal)__resource).SystemData; set => ((Microsoft.Azure.PowerShell.Cmdlets.Marketplace.Models.IResourceInternal)__resource).SystemData = value; }

        /// <summary>Internal Acessors for Type</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Marketplace.Models.IResourceInternal.Type { get => ((Microsoft.Azure.PowerShell.Cmdlets.Marketplace.Models.IResourceInternal)__resource).Type; set => ((Microsoft.Azure.PowerShell.Cmdlets.Marketplace.Models.IResourceInternal)__resource).Type = value; }

        /// <summary>Private store offer modification date</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Marketplace.Origin(Microsoft.Azure.PowerShell.Cmdlets.Marketplace.PropertyOrigin.Inlined)]
        public string ModifiedAt { get => ((Microsoft.Azure.PowerShell.Cmdlets.Marketplace.Models.IOfferPropertiesInternal)Property).ModifiedAt; }

        /// <summary>The name of the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Marketplace.Origin(Microsoft.Azure.PowerShell.Cmdlets.Marketplace.PropertyOrigin.Inherited)]
        public string Name { get => ((Microsoft.Azure.PowerShell.Cmdlets.Marketplace.Models.IResourceInternal)__resource).Name; }

        /// <summary>Offer plans</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Marketplace.Origin(Microsoft.Azure.PowerShell.Cmdlets.Marketplace.PropertyOrigin.Inlined)]
        public System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.Marketplace.Models.IPlan> Plan { get => ((Microsoft.Azure.PowerShell.Cmdlets.Marketplace.Models.IOfferPropertiesInternal)Property).Plan; set => ((Microsoft.Azure.PowerShell.Cmdlets.Marketplace.Models.IOfferPropertiesInternal)Property).Plan = value ?? null /* arrayOf */; }

        /// <summary>Private store unique id</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Marketplace.Origin(Microsoft.Azure.PowerShell.Cmdlets.Marketplace.PropertyOrigin.Inlined)]
        public string PrivateStoreId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Marketplace.Models.IOfferPropertiesInternal)Property).PrivateStoreId; }

        /// <summary>Backing field for <see cref="Property" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Marketplace.Models.IOfferProperties _property;

        /// <summary>The privateStore offer data structure.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Marketplace.Origin(Microsoft.Azure.PowerShell.Cmdlets.Marketplace.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Marketplace.Models.IOfferProperties Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.Marketplace.Models.OfferProperties()); set => this._property = value; }

        /// <summary>Publisher name that will be displayed prominently in the marketplace</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Marketplace.Origin(Microsoft.Azure.PowerShell.Cmdlets.Marketplace.PropertyOrigin.Inlined)]
        public string PublisherDisplayName { get => ((Microsoft.Azure.PowerShell.Cmdlets.Marketplace.Models.IOfferPropertiesInternal)Property).PublisherDisplayName; }

        /// <summary>Gets the resource group name</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Marketplace.Origin(Microsoft.Azure.PowerShell.Cmdlets.Marketplace.PropertyOrigin.Owned)]
        public string ResourceGroupName { get => (new global::System.Text.RegularExpressions.Regex("^/subscriptions/(?<subscriptionId>[^/]+)/resourceGroups/(?<resourceGroupName>[^/]+)/providers/", global::System.Text.RegularExpressions.RegexOptions.IgnoreCase).Match(this.Id).Success ? new global::System.Text.RegularExpressions.Regex("^/subscriptions/(?<subscriptionId>[^/]+)/resourceGroups/(?<resourceGroupName>[^/]+)/providers/", global::System.Text.RegularExpressions.RegexOptions.IgnoreCase).Match(this.Id).Groups["resourceGroupName"].Value : null); }

        /// <summary>Plan ids limitation for this offer</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Marketplace.Origin(Microsoft.Azure.PowerShell.Cmdlets.Marketplace.PropertyOrigin.Inlined)]
        public System.Collections.Generic.List<string> SpecificPlanIdsLimitation { get => ((Microsoft.Azure.PowerShell.Cmdlets.Marketplace.Models.IOfferPropertiesInternal)Property).SpecificPlanIdsLimitation; set => ((Microsoft.Azure.PowerShell.Cmdlets.Marketplace.Models.IOfferPropertiesInternal)Property).SpecificPlanIdsLimitation = value ?? null /* arrayOf */; }

        /// <summary>Metadata pertaining to creation and last modification of the resource</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Marketplace.Origin(Microsoft.Azure.PowerShell.Cmdlets.Marketplace.PropertyOrigin.Inherited)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Marketplace.Models.ISystemData SystemData { get => ((Microsoft.Azure.PowerShell.Cmdlets.Marketplace.Models.IResourceInternal)__resource).SystemData; }

        /// <summary>The timestamp of resource creation (UTC)</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Marketplace.Origin(Microsoft.Azure.PowerShell.Cmdlets.Marketplace.PropertyOrigin.Inherited)]
        public global::System.DateTime? SystemDataCreatedAt { get => ((Microsoft.Azure.PowerShell.Cmdlets.Marketplace.Models.IResourceInternal)__resource).SystemDataCreatedAt; set => ((Microsoft.Azure.PowerShell.Cmdlets.Marketplace.Models.IResourceInternal)__resource).SystemDataCreatedAt = value ?? default(global::System.DateTime); }

        /// <summary>The identity that created the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Marketplace.Origin(Microsoft.Azure.PowerShell.Cmdlets.Marketplace.PropertyOrigin.Inherited)]
        public string SystemDataCreatedBy { get => ((Microsoft.Azure.PowerShell.Cmdlets.Marketplace.Models.IResourceInternal)__resource).SystemDataCreatedBy; set => ((Microsoft.Azure.PowerShell.Cmdlets.Marketplace.Models.IResourceInternal)__resource).SystemDataCreatedBy = value ?? null; }

        /// <summary>The type of identity that created the resource</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Marketplace.Origin(Microsoft.Azure.PowerShell.Cmdlets.Marketplace.PropertyOrigin.Inherited)]
        public string SystemDataCreatedByType { get => ((Microsoft.Azure.PowerShell.Cmdlets.Marketplace.Models.IResourceInternal)__resource).SystemDataCreatedByType; set => ((Microsoft.Azure.PowerShell.Cmdlets.Marketplace.Models.IResourceInternal)__resource).SystemDataCreatedByType = value ?? null; }

        /// <summary>The timestamp of resource last modification (UTC)</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Marketplace.Origin(Microsoft.Azure.PowerShell.Cmdlets.Marketplace.PropertyOrigin.Inherited)]
        public global::System.DateTime? SystemDataLastModifiedAt { get => ((Microsoft.Azure.PowerShell.Cmdlets.Marketplace.Models.IResourceInternal)__resource).SystemDataLastModifiedAt; set => ((Microsoft.Azure.PowerShell.Cmdlets.Marketplace.Models.IResourceInternal)__resource).SystemDataLastModifiedAt = value ?? default(global::System.DateTime); }

        /// <summary>The identity that last modified the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Marketplace.Origin(Microsoft.Azure.PowerShell.Cmdlets.Marketplace.PropertyOrigin.Inherited)]
        public string SystemDataLastModifiedBy { get => ((Microsoft.Azure.PowerShell.Cmdlets.Marketplace.Models.IResourceInternal)__resource).SystemDataLastModifiedBy; set => ((Microsoft.Azure.PowerShell.Cmdlets.Marketplace.Models.IResourceInternal)__resource).SystemDataLastModifiedBy = value ?? null; }

        /// <summary>The type of identity that last modified the resource</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Marketplace.Origin(Microsoft.Azure.PowerShell.Cmdlets.Marketplace.PropertyOrigin.Inherited)]
        public string SystemDataLastModifiedByType { get => ((Microsoft.Azure.PowerShell.Cmdlets.Marketplace.Models.IResourceInternal)__resource).SystemDataLastModifiedByType; set => ((Microsoft.Azure.PowerShell.Cmdlets.Marketplace.Models.IResourceInternal)__resource).SystemDataLastModifiedByType = value ?? null; }

        /// <summary>The type of the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Marketplace.Origin(Microsoft.Azure.PowerShell.Cmdlets.Marketplace.PropertyOrigin.Inherited)]
        public string Type { get => ((Microsoft.Azure.PowerShell.Cmdlets.Marketplace.Models.IResourceInternal)__resource).Type; }

        /// <summary>Offers unique id</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Marketplace.Origin(Microsoft.Azure.PowerShell.Cmdlets.Marketplace.PropertyOrigin.Inlined)]
        public string UniqueOfferId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Marketplace.Models.IOfferPropertiesInternal)Property).UniqueOfferId; }

        /// <summary>
        /// Indicating whether the offer was not updated to db (true = not updated). If the allow list is identical to the existed
        /// one in db, the offer would not be updated.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Marketplace.Origin(Microsoft.Azure.PowerShell.Cmdlets.Marketplace.PropertyOrigin.Inlined)]
        public bool? UpdateSuppressedDueIdempotence { get => ((Microsoft.Azure.PowerShell.Cmdlets.Marketplace.Models.IOfferPropertiesInternal)Property).UpdateSuppressedDueIdempotence; set => ((Microsoft.Azure.PowerShell.Cmdlets.Marketplace.Models.IOfferPropertiesInternal)Property).UpdateSuppressedDueIdempotence = value ?? default(bool); }

        /// <summary>Creates an new <see cref="Offer" /> instance.</summary>
        public Offer()
        {

        }

        /// <summary>Validates that this object meets the validation criteria.</summary>
        /// <param name="eventListener">an <see cref="Microsoft.Azure.PowerShell.Cmdlets.Marketplace.Runtime.IEventListener" /> instance that will receive validation
        /// events.</param>
        /// <returns>
        /// A <see cref = "global::System.Threading.Tasks.Task" /> that will be complete when validation is completed.
        /// </returns>
        public async global::System.Threading.Tasks.Task Validate(Microsoft.Azure.PowerShell.Cmdlets.Marketplace.Runtime.IEventListener eventListener)
        {
            await eventListener.AssertNotNull(nameof(__resource), __resource);
            await eventListener.AssertObjectIsValid(nameof(__resource), __resource);
        }
    }
    /// The privateStore offer data structure.
    public partial interface IOffer :
        Microsoft.Azure.PowerShell.Cmdlets.Marketplace.Runtime.IJsonSerializable,
        Microsoft.Azure.PowerShell.Cmdlets.Marketplace.Models.IResource
    {
        /// <summary>Private store offer creation date</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Marketplace.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"Private store offer creation date",
        SerializedName = @"createdAt",
        PossibleTypes = new [] { typeof(string) })]
        string CreatedAt { get;  }
        /// <summary>It will be displayed prominently in the marketplace</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Marketplace.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"It will be displayed prominently in the marketplace",
        SerializedName = @"offerDisplayName",
        PossibleTypes = new [] { typeof(string) })]
        string DisplayName { get;  }
        /// <summary>Identifier for purposes of race condition</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Marketplace.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Identifier for purposes of race condition",
        SerializedName = @"eTag",
        PossibleTypes = new [] { typeof(string) })]
        string ETag { get; set; }
        /// <summary>Icon File Uris</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Marketplace.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Icon File Uris",
        SerializedName = @"iconFileUris",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Marketplace.Models.IOfferPropertiesIconFileUris) })]
        Microsoft.Azure.PowerShell.Cmdlets.Marketplace.Models.IOfferPropertiesIconFileUris IconFileUri { get; set; }
        /// <summary>Private store offer modification date</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Marketplace.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"Private store offer modification date",
        SerializedName = @"modifiedAt",
        PossibleTypes = new [] { typeof(string) })]
        string ModifiedAt { get;  }
        /// <summary>Offer plans</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Marketplace.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Offer plans",
        SerializedName = @"plans",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Marketplace.Models.IPlan) })]
        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.Marketplace.Models.IPlan> Plan { get; set; }
        /// <summary>Private store unique id</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Marketplace.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"Private store unique id",
        SerializedName = @"privateStoreId",
        PossibleTypes = new [] { typeof(string) })]
        string PrivateStoreId { get;  }
        /// <summary>Publisher name that will be displayed prominently in the marketplace</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Marketplace.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"Publisher name that will be displayed prominently in the marketplace",
        SerializedName = @"publisherDisplayName",
        PossibleTypes = new [] { typeof(string) })]
        string PublisherDisplayName { get;  }
        /// <summary>Plan ids limitation for this offer</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Marketplace.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Plan ids limitation for this offer",
        SerializedName = @"specificPlanIdsLimitation",
        PossibleTypes = new [] { typeof(string) })]
        System.Collections.Generic.List<string> SpecificPlanIdsLimitation { get; set; }
        /// <summary>Offers unique id</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Marketplace.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"Offers unique id",
        SerializedName = @"uniqueOfferId",
        PossibleTypes = new [] { typeof(string) })]
        string UniqueOfferId { get;  }
        /// <summary>
        /// Indicating whether the offer was not updated to db (true = not updated). If the allow list is identical to the existed
        /// one in db, the offer would not be updated.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Marketplace.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Indicating whether the offer was not updated to db (true = not updated). If the allow list is identical to the existed one in db, the offer would not be updated.",
        SerializedName = @"updateSuppressedDueIdempotence",
        PossibleTypes = new [] { typeof(bool) })]
        bool? UpdateSuppressedDueIdempotence { get; set; }

    }
    /// The privateStore offer data structure.
    internal partial interface IOfferInternal :
        Microsoft.Azure.PowerShell.Cmdlets.Marketplace.Models.IResourceInternal
    {
        /// <summary>Private store offer creation date</summary>
        string CreatedAt { get; set; }
        /// <summary>It will be displayed prominently in the marketplace</summary>
        string DisplayName { get; set; }
        /// <summary>Identifier for purposes of race condition</summary>
        string ETag { get; set; }
        /// <summary>Icon File Uris</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Marketplace.Models.IOfferPropertiesIconFileUris IconFileUri { get; set; }
        /// <summary>Private store offer modification date</summary>
        string ModifiedAt { get; set; }
        /// <summary>Offer plans</summary>
        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.Marketplace.Models.IPlan> Plan { get; set; }
        /// <summary>Private store unique id</summary>
        string PrivateStoreId { get; set; }
        /// <summary>The privateStore offer data structure.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Marketplace.Models.IOfferProperties Property { get; set; }
        /// <summary>Publisher name that will be displayed prominently in the marketplace</summary>
        string PublisherDisplayName { get; set; }
        /// <summary>Plan ids limitation for this offer</summary>
        System.Collections.Generic.List<string> SpecificPlanIdsLimitation { get; set; }
        /// <summary>Offers unique id</summary>
        string UniqueOfferId { get; set; }
        /// <summary>
        /// Indicating whether the offer was not updated to db (true = not updated). If the allow list is identical to the existed
        /// one in db, the offer would not be updated.
        /// </summary>
        bool? UpdateSuppressedDueIdempotence { get; set; }

    }
}