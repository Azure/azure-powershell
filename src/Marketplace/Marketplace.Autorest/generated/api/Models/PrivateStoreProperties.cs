// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Marketplace.Models
{
    using static Microsoft.Azure.PowerShell.Cmdlets.Marketplace.Runtime.Extensions;

    /// <summary>
    /// Describes the json payload on whether or not the private store is enabled for a given tenant
    /// </summary>
    public partial class PrivateStoreProperties :
        Microsoft.Azure.PowerShell.Cmdlets.Marketplace.Models.IPrivateStoreProperties,
        Microsoft.Azure.PowerShell.Cmdlets.Marketplace.Models.IPrivateStorePropertiesInternal
    {

        /// <summary>Backing field for <see cref="Availability" /> property.</summary>
        private string _availability;

        /// <summary>Indicates private store availability</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Marketplace.Origin(Microsoft.Azure.PowerShell.Cmdlets.Marketplace.PropertyOrigin.Owned)]
        public string Availability { get => this._availability; set => this._availability = value; }

        /// <summary>Backing field for <see cref="Branding" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Marketplace.Models.IPrivateStorePropertiesBranding _branding;

        /// <summary>Gets or sets list of branding characteristics</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Marketplace.Origin(Microsoft.Azure.PowerShell.Cmdlets.Marketplace.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.Marketplace.Models.IPrivateStorePropertiesBranding Branding { get => (this._branding = this._branding ?? new Microsoft.Azure.PowerShell.Cmdlets.Marketplace.Models.PrivateStorePropertiesBranding()); set => this._branding = value; }

        /// <summary>Backing field for <see cref="CollectionId" /> property.</summary>
        private System.Collections.Generic.List<string> _collectionId;

        /// <summary>Gets list of associated collection ids</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Marketplace.Origin(Microsoft.Azure.PowerShell.Cmdlets.Marketplace.PropertyOrigin.Owned)]
        public System.Collections.Generic.List<string> CollectionId { get => this._collectionId; }

        /// <summary>Backing field for <see cref="ETag" /> property.</summary>
        private string _eTag;

        /// <summary>Identifier for purposes of race condition</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Marketplace.Origin(Microsoft.Azure.PowerShell.Cmdlets.Marketplace.PropertyOrigin.Owned)]
        public string ETag { get => this._eTag; set => this._eTag = value; }

        /// <summary>Backing field for <see cref="IsGov" /> property.</summary>
        private bool? _isGov;

        /// <summary>Is government</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Marketplace.Origin(Microsoft.Azure.PowerShell.Cmdlets.Marketplace.PropertyOrigin.Owned)]
        public bool? IsGov { get => this._isGov; set => this._isGov = value; }

        /// <summary>Internal Acessors for CollectionId</summary>
        System.Collections.Generic.List<string> Microsoft.Azure.PowerShell.Cmdlets.Marketplace.Models.IPrivateStorePropertiesInternal.CollectionId { get => this._collectionId; set { {_collectionId = value;} } }

        /// <summary>Internal Acessors for NotificationsSetting</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Marketplace.Models.INotificationsSettingsProperties Microsoft.Azure.PowerShell.Cmdlets.Marketplace.Models.IPrivateStorePropertiesInternal.NotificationsSetting { get => (this._notificationsSetting = this._notificationsSetting ?? new Microsoft.Azure.PowerShell.Cmdlets.Marketplace.Models.NotificationsSettingsProperties()); set { {_notificationsSetting = value;} } }

        /// <summary>Internal Acessors for PrivateStoreId</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Marketplace.Models.IPrivateStorePropertiesInternal.PrivateStoreId { get => this._privateStoreId; set { {_privateStoreId = value;} } }

        /// <summary>Gets or sets list of notified recipients for new requests</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Marketplace.Origin(Microsoft.Azure.PowerShell.Cmdlets.Marketplace.PropertyOrigin.Inlined)]
        public System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.Marketplace.Models.IRecipient> NotificationSettingRecipient { get => ((Microsoft.Azure.PowerShell.Cmdlets.Marketplace.Models.INotificationsSettingsPropertiesInternal)NotificationsSetting).Recipient; set => ((Microsoft.Azure.PowerShell.Cmdlets.Marketplace.Models.INotificationsSettingsPropertiesInternal)NotificationsSetting).Recipient = value ?? null /* arrayOf */; }

        /// <summary>Gets or sets whether to send email to all marketplace admins for new requests</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Marketplace.Origin(Microsoft.Azure.PowerShell.Cmdlets.Marketplace.PropertyOrigin.Inlined)]
        public bool? NotificationSettingSendToAllMarketplaceAdmin { get => ((Microsoft.Azure.PowerShell.Cmdlets.Marketplace.Models.INotificationsSettingsPropertiesInternal)NotificationsSetting).SendToAllMarketplaceAdmin; set => ((Microsoft.Azure.PowerShell.Cmdlets.Marketplace.Models.INotificationsSettingsPropertiesInternal)NotificationsSetting).SendToAllMarketplaceAdmin = value ?? default(bool); }

        /// <summary>Backing field for <see cref="NotificationsSetting" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Marketplace.Models.INotificationsSettingsProperties _notificationsSetting;

        /// <summary>Gets or sets notifications settings</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Marketplace.Origin(Microsoft.Azure.PowerShell.Cmdlets.Marketplace.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Marketplace.Models.INotificationsSettingsProperties NotificationsSetting { get => (this._notificationsSetting = this._notificationsSetting ?? new Microsoft.Azure.PowerShell.Cmdlets.Marketplace.Models.NotificationsSettingsProperties()); set => this._notificationsSetting = value; }

        /// <summary>Backing field for <see cref="PrivateStoreId" /> property.</summary>
        private string _privateStoreId;

        /// <summary>Private Store id</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Marketplace.Origin(Microsoft.Azure.PowerShell.Cmdlets.Marketplace.PropertyOrigin.Owned)]
        public string PrivateStoreId { get => this._privateStoreId; }

        /// <summary>Backing field for <see cref="PrivateStoreName" /> property.</summary>
        private string _privateStoreName;

        /// <summary>Private Store Name</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Marketplace.Origin(Microsoft.Azure.PowerShell.Cmdlets.Marketplace.PropertyOrigin.Owned)]
        public string PrivateStoreName { get => this._privateStoreName; set => this._privateStoreName = value; }

        /// <summary>Backing field for <see cref="TenantId" /> property.</summary>
        private string _tenantId;

        /// <summary>Tenant id</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Marketplace.Origin(Microsoft.Azure.PowerShell.Cmdlets.Marketplace.PropertyOrigin.Owned)]
        public string TenantId { get => this._tenantId; set => this._tenantId = value; }

        /// <summary>Creates an new <see cref="PrivateStoreProperties" /> instance.</summary>
        public PrivateStoreProperties()
        {

        }
    }
    /// Describes the json payload on whether or not the private store is enabled for a given tenant
    public partial interface IPrivateStoreProperties :
        Microsoft.Azure.PowerShell.Cmdlets.Marketplace.Runtime.IJsonSerializable
    {
        /// <summary>Indicates private store availability</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Marketplace.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Indicates private store availability",
        SerializedName = @"availability",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.Marketplace.PSArgumentCompleterAttribute("enabled", "disabled")]
        string Availability { get; set; }
        /// <summary>Gets or sets list of branding characteristics</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Marketplace.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Gets or sets list of branding characteristics",
        SerializedName = @"branding",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Marketplace.Models.IPrivateStorePropertiesBranding) })]
        Microsoft.Azure.PowerShell.Cmdlets.Marketplace.Models.IPrivateStorePropertiesBranding Branding { get; set; }
        /// <summary>Gets list of associated collection ids</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Marketplace.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"Gets list of associated collection ids",
        SerializedName = @"collectionIds",
        PossibleTypes = new [] { typeof(string) })]
        System.Collections.Generic.List<string> CollectionId { get;  }
        /// <summary>Identifier for purposes of race condition</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Marketplace.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Identifier for purposes of race condition",
        SerializedName = @"eTag",
        PossibleTypes = new [] { typeof(string) })]
        string ETag { get; set; }
        /// <summary>Is government</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Marketplace.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Is government",
        SerializedName = @"isGov",
        PossibleTypes = new [] { typeof(bool) })]
        bool? IsGov { get; set; }
        /// <summary>Gets or sets list of notified recipients for new requests</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Marketplace.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Gets or sets list of notified recipients for new requests",
        SerializedName = @"recipients",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Marketplace.Models.IRecipient) })]
        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.Marketplace.Models.IRecipient> NotificationSettingRecipient { get; set; }
        /// <summary>Gets or sets whether to send email to all marketplace admins for new requests</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Marketplace.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Gets or sets whether to send email to all marketplace admins for new requests",
        SerializedName = @"sendToAllMarketplaceAdmins",
        PossibleTypes = new [] { typeof(bool) })]
        bool? NotificationSettingSendToAllMarketplaceAdmin { get; set; }
        /// <summary>Private Store id</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Marketplace.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"Private Store id",
        SerializedName = @"privateStoreId",
        PossibleTypes = new [] { typeof(string) })]
        string PrivateStoreId { get;  }
        /// <summary>Private Store Name</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Marketplace.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Private Store Name",
        SerializedName = @"privateStoreName",
        PossibleTypes = new [] { typeof(string) })]
        string PrivateStoreName { get; set; }
        /// <summary>Tenant id</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Marketplace.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Tenant id",
        SerializedName = @"tenantId",
        PossibleTypes = new [] { typeof(string) })]
        string TenantId { get; set; }

    }
    /// Describes the json payload on whether or not the private store is enabled for a given tenant
    internal partial interface IPrivateStorePropertiesInternal

    {
        /// <summary>Indicates private store availability</summary>
        [global::Microsoft.Azure.PowerShell.Cmdlets.Marketplace.PSArgumentCompleterAttribute("enabled", "disabled")]
        string Availability { get; set; }
        /// <summary>Gets or sets list of branding characteristics</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Marketplace.Models.IPrivateStorePropertiesBranding Branding { get; set; }
        /// <summary>Gets list of associated collection ids</summary>
        System.Collections.Generic.List<string> CollectionId { get; set; }
        /// <summary>Identifier for purposes of race condition</summary>
        string ETag { get; set; }
        /// <summary>Is government</summary>
        bool? IsGov { get; set; }
        /// <summary>Gets or sets list of notified recipients for new requests</summary>
        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.Marketplace.Models.IRecipient> NotificationSettingRecipient { get; set; }
        /// <summary>Gets or sets whether to send email to all marketplace admins for new requests</summary>
        bool? NotificationSettingSendToAllMarketplaceAdmin { get; set; }
        /// <summary>Gets or sets notifications settings</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Marketplace.Models.INotificationsSettingsProperties NotificationsSetting { get; set; }
        /// <summary>Private Store id</summary>
        string PrivateStoreId { get; set; }
        /// <summary>Private Store Name</summary>
        string PrivateStoreName { get; set; }
        /// <summary>Tenant id</summary>
        string TenantId { get; set; }

    }
}