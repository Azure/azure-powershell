// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Models
{
    using static Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Runtime.Extensions;

    /// <summary>Describes a Run Command</summary>
    public partial class MachineRunCommand :
        Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Models.IMachineRunCommand,
        Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Models.IMachineRunCommandInternal,
        Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Runtime.IValidates
    {
        /// <summary>
        /// Backing field for Inherited model <see cref= "Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Models.ITrackedResource"
        /// />
        /// </summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Models.ITrackedResource __trackedResource = new Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Models.TrackedResource();

        /// <summary>
        /// Optional. If set to true, provisioning will complete as soon as script starts and will not wait for script to complete.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Origin(Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.PropertyOrigin.Inlined)]
        public bool? AsyncExecution { get => ((Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Models.IMachineRunCommandPropertiesInternal)Property).AsyncExecution; set => ((Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Models.IMachineRunCommandPropertiesInternal)Property).AsyncExecution = value ?? default(bool); }

        /// <summary>
        /// Client Id (GUID value) of the user-assigned managed identity. ObjectId should not be used if this is provided.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Origin(Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.PropertyOrigin.Inlined)]
        public string ErrorBlobManagedIdentityClientId { get => ((Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Models.IMachineRunCommandPropertiesInternal)Property).ErrorBlobManagedIdentityClientId; set => ((Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Models.IMachineRunCommandPropertiesInternal)Property).ErrorBlobManagedIdentityClientId = value ?? null; }

        /// <summary>
        /// Object Id (GUID value) of the user-assigned managed identity. ClientId should not be used if this is provided.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Origin(Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.PropertyOrigin.Inlined)]
        public string ErrorBlobManagedIdentityObjectId { get => ((Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Models.IMachineRunCommandPropertiesInternal)Property).ErrorBlobManagedIdentityObjectId; set => ((Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Models.IMachineRunCommandPropertiesInternal)Property).ErrorBlobManagedIdentityObjectId = value ?? null; }

        /// <summary>
        /// Specifies the Azure storage blob where script error stream will be uploaded. Use a SAS URI with read, append, create,
        /// write access OR use managed identity to provide the VM access to the blob. Refer errorBlobManagedIdentity parameter.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Origin(Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.PropertyOrigin.Inlined)]
        public string ErrorBlobUri { get => ((Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Models.IMachineRunCommandPropertiesInternal)Property).ErrorBlobUri; set => ((Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Models.IMachineRunCommandPropertiesInternal)Property).ErrorBlobUri = value ?? null; }

        /// <summary>
        /// Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Origin(Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.PropertyOrigin.Inherited)]
        public string Id { get => ((Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Models.IResourceInternal)__trackedResource).Id; }

        /// <summary>Script end time.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Origin(Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.PropertyOrigin.Inlined)]
        public global::System.DateTime? InstanceViewEndTime { get => ((Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Models.IMachineRunCommandPropertiesInternal)Property).InstanceViewEndTime; set => ((Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Models.IMachineRunCommandPropertiesInternal)Property).InstanceViewEndTime = value ?? default(global::System.DateTime); }

        /// <summary>Script error stream.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Origin(Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.PropertyOrigin.Inlined)]
        public string InstanceViewError { get => ((Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Models.IMachineRunCommandPropertiesInternal)Property).InstanceViewError; set => ((Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Models.IMachineRunCommandPropertiesInternal)Property).InstanceViewError = value ?? null; }

        /// <summary>Communicate script configuration errors or execution messages.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Origin(Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.PropertyOrigin.Inlined)]
        public string InstanceViewExecutionMessage { get => ((Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Models.IMachineRunCommandPropertiesInternal)Property).InstanceViewExecutionMessage; set => ((Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Models.IMachineRunCommandPropertiesInternal)Property).InstanceViewExecutionMessage = value ?? null; }

        /// <summary>Script execution status.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Origin(Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.PropertyOrigin.Inlined)]
        public string InstanceViewExecutionState { get => ((Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Models.IMachineRunCommandPropertiesInternal)Property).InstanceViewExecutionState; set => ((Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Models.IMachineRunCommandPropertiesInternal)Property).InstanceViewExecutionState = value ?? null; }

        /// <summary>Exit code returned from script execution.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Origin(Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.PropertyOrigin.Inlined)]
        public int? InstanceViewExitCode { get => ((Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Models.IMachineRunCommandPropertiesInternal)Property).InstanceViewExitCode; set => ((Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Models.IMachineRunCommandPropertiesInternal)Property).InstanceViewExitCode = value ?? default(int); }

        /// <summary>Script output stream.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Origin(Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.PropertyOrigin.Inlined)]
        public string InstanceViewOutput { get => ((Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Models.IMachineRunCommandPropertiesInternal)Property).InstanceViewOutput; set => ((Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Models.IMachineRunCommandPropertiesInternal)Property).InstanceViewOutput = value ?? null; }

        /// <summary>Script start time.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Origin(Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.PropertyOrigin.Inlined)]
        public global::System.DateTime? InstanceViewStartTime { get => ((Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Models.IMachineRunCommandPropertiesInternal)Property).InstanceViewStartTime; set => ((Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Models.IMachineRunCommandPropertiesInternal)Property).InstanceViewStartTime = value ?? default(global::System.DateTime); }

        /// <summary>The status information.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Origin(Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.PropertyOrigin.Inlined)]
        public System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Models.IExtensionsResourceStatus> InstanceViewStatuses { get => ((Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Models.IMachineRunCommandPropertiesInternal)Property).InstanceViewStatuses; set => ((Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Models.IMachineRunCommandPropertiesInternal)Property).InstanceViewStatuses = value ?? null /* arrayOf */; }

        /// <summary>The geo-location where the resource lives</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Origin(Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.PropertyOrigin.Inherited)]
        public string Location { get => ((Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Models.ITrackedResourceInternal)__trackedResource).Location; set => ((Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Models.ITrackedResourceInternal)__trackedResource).Location = value ; }

        /// <summary>Internal Acessors for ErrorBlobManagedIdentity</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Models.IRunCommandManagedIdentity Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Models.IMachineRunCommandInternal.ErrorBlobManagedIdentity { get => ((Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Models.IMachineRunCommandPropertiesInternal)Property).ErrorBlobManagedIdentity; set => ((Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Models.IMachineRunCommandPropertiesInternal)Property).ErrorBlobManagedIdentity = value; }

        /// <summary>Internal Acessors for InstanceView</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Models.IMachineRunCommandInstanceView Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Models.IMachineRunCommandInternal.InstanceView { get => ((Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Models.IMachineRunCommandPropertiesInternal)Property).InstanceView; set => ((Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Models.IMachineRunCommandPropertiesInternal)Property).InstanceView = value; }

        /// <summary>Internal Acessors for OutputBlobManagedIdentity</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Models.IRunCommandManagedIdentity Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Models.IMachineRunCommandInternal.OutputBlobManagedIdentity { get => ((Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Models.IMachineRunCommandPropertiesInternal)Property).OutputBlobManagedIdentity; set => ((Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Models.IMachineRunCommandPropertiesInternal)Property).OutputBlobManagedIdentity = value; }

        /// <summary>Internal Acessors for Property</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Models.IMachineRunCommandProperties Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Models.IMachineRunCommandInternal.Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Models.MachineRunCommandProperties()); set { {_property = value;} } }

        /// <summary>Internal Acessors for ProvisioningState</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Models.IMachineRunCommandInternal.ProvisioningState { get => ((Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Models.IMachineRunCommandPropertiesInternal)Property).ProvisioningState; set => ((Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Models.IMachineRunCommandPropertiesInternal)Property).ProvisioningState = value; }

        /// <summary>Internal Acessors for Source</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Models.IMachineRunCommandScriptSource Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Models.IMachineRunCommandInternal.Source { get => ((Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Models.IMachineRunCommandPropertiesInternal)Property).Source; set => ((Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Models.IMachineRunCommandPropertiesInternal)Property).Source = value; }

        /// <summary>Internal Acessors for SourceScriptUriManagedIdentity</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Models.IRunCommandManagedIdentity Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Models.IMachineRunCommandInternal.SourceScriptUriManagedIdentity { get => ((Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Models.IMachineRunCommandPropertiesInternal)Property).SourceScriptUriManagedIdentity; set => ((Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Models.IMachineRunCommandPropertiesInternal)Property).SourceScriptUriManagedIdentity = value; }

        /// <summary>Internal Acessors for Id</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Models.IResourceInternal.Id { get => ((Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Models.IResourceInternal)__trackedResource).Id; set => ((Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Models.IResourceInternal)__trackedResource).Id = value; }

        /// <summary>Internal Acessors for Name</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Models.IResourceInternal.Name { get => ((Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Models.IResourceInternal)__trackedResource).Name; set => ((Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Models.IResourceInternal)__trackedResource).Name = value; }

        /// <summary>Internal Acessors for SystemData</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Models.ISystemData Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Models.IResourceInternal.SystemData { get => ((Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Models.IResourceInternal)__trackedResource).SystemData; set => ((Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Models.IResourceInternal)__trackedResource).SystemData = value; }

        /// <summary>Internal Acessors for Type</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Models.IResourceInternal.Type { get => ((Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Models.IResourceInternal)__trackedResource).Type; set => ((Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Models.IResourceInternal)__trackedResource).Type = value; }

        /// <summary>The name of the resource</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Origin(Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.PropertyOrigin.Inherited)]
        public string Name { get => ((Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Models.IResourceInternal)__trackedResource).Name; }

        /// <summary>
        /// Client Id (GUID value) of the user-assigned managed identity. ObjectId should not be used if this is provided.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Origin(Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.PropertyOrigin.Inlined)]
        public string OutputBlobManagedIdentityClientId { get => ((Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Models.IMachineRunCommandPropertiesInternal)Property).OutputBlobManagedIdentityClientId; set => ((Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Models.IMachineRunCommandPropertiesInternal)Property).OutputBlobManagedIdentityClientId = value ?? null; }

        /// <summary>
        /// Object Id (GUID value) of the user-assigned managed identity. ClientId should not be used if this is provided.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Origin(Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.PropertyOrigin.Inlined)]
        public string OutputBlobManagedIdentityObjectId { get => ((Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Models.IMachineRunCommandPropertiesInternal)Property).OutputBlobManagedIdentityObjectId; set => ((Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Models.IMachineRunCommandPropertiesInternal)Property).OutputBlobManagedIdentityObjectId = value ?? null; }

        /// <summary>
        /// Specifies the Azure storage blob where script output stream will be uploaded. Use a SAS URI with read, append, create,
        /// write access OR use managed identity to provide the VM access to the blob. Refer outputBlobManagedIdentity parameter.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Origin(Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.PropertyOrigin.Inlined)]
        public string OutputBlobUri { get => ((Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Models.IMachineRunCommandPropertiesInternal)Property).OutputBlobUri; set => ((Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Models.IMachineRunCommandPropertiesInternal)Property).OutputBlobUri = value ?? null; }

        /// <summary>The parameters used by the script.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Origin(Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.PropertyOrigin.Inlined)]
        public System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Models.IRunCommandInputParameter> Parameter { get => ((Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Models.IMachineRunCommandPropertiesInternal)Property).Parameter; set => ((Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Models.IMachineRunCommandPropertiesInternal)Property).Parameter = value ?? null /* arrayOf */; }

        /// <summary>Backing field for <see cref="Property" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Models.IMachineRunCommandProperties _property;

        /// <summary>Describes Run Command Properties</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Origin(Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Models.IMachineRunCommandProperties Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Models.MachineRunCommandProperties()); set => this._property = value; }

        /// <summary>The parameters used by the script.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Origin(Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.PropertyOrigin.Inlined)]
        public System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Models.IRunCommandInputParameter> ProtectedParameter { get => ((Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Models.IMachineRunCommandPropertiesInternal)Property).ProtectedParameter; set => ((Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Models.IMachineRunCommandPropertiesInternal)Property).ProtectedParameter = value ?? null /* arrayOf */; }

        /// <summary>The provisioning state, which only appears in the response.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Origin(Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.PropertyOrigin.Inlined)]
        public string ProvisioningState { get => ((Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Models.IMachineRunCommandPropertiesInternal)Property).ProvisioningState; }

        /// <summary>Gets the resource group name</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Origin(Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.PropertyOrigin.Owned)]
        public string ResourceGroupName { get => (new global::System.Text.RegularExpressions.Regex("^/subscriptions/(?<subscriptionId>[^/]+)/resourceGroups/(?<resourceGroupName>[^/]+)/providers/", global::System.Text.RegularExpressions.RegexOptions.IgnoreCase).Match(this.Id).Success ? new global::System.Text.RegularExpressions.Regex("^/subscriptions/(?<subscriptionId>[^/]+)/resourceGroups/(?<resourceGroupName>[^/]+)/providers/", global::System.Text.RegularExpressions.RegexOptions.IgnoreCase).Match(this.Id).Groups["resourceGroupName"].Value : null); }

        /// <summary>
        /// Specifies the user account password on the machine when executing the run command.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Origin(Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.PropertyOrigin.Inlined)]
        public string RunAsPassword { get => ((Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Models.IMachineRunCommandPropertiesInternal)Property).RunAsPassword; set => ((Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Models.IMachineRunCommandPropertiesInternal)Property).RunAsPassword = value ?? null; }

        /// <summary>Specifies the user account on the machine when executing the run command.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Origin(Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.PropertyOrigin.Inlined)]
        public string RunAsUser { get => ((Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Models.IMachineRunCommandPropertiesInternal)Property).RunAsUser; set => ((Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Models.IMachineRunCommandPropertiesInternal)Property).RunAsUser = value ?? null; }

        /// <summary>
        /// Client Id (GUID value) of the user-assigned managed identity. ObjectId should not be used if this is provided.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Origin(Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.PropertyOrigin.Inlined)]
        public string ScriptUriManagedIdentityClientId { get => ((Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Models.IMachineRunCommandPropertiesInternal)Property).ScriptUriManagedIdentityClientId; set => ((Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Models.IMachineRunCommandPropertiesInternal)Property).ScriptUriManagedIdentityClientId = value ?? null; }

        /// <summary>
        /// Object Id (GUID value) of the user-assigned managed identity. ClientId should not be used if this is provided.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Origin(Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.PropertyOrigin.Inlined)]
        public string ScriptUriManagedIdentityObjectId { get => ((Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Models.IMachineRunCommandPropertiesInternal)Property).ScriptUriManagedIdentityObjectId; set => ((Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Models.IMachineRunCommandPropertiesInternal)Property).ScriptUriManagedIdentityObjectId = value ?? null; }

        /// <summary>Specifies the commandId of predefined built-in script.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Origin(Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.PropertyOrigin.Inlined)]
        public string SourceCommandId { get => ((Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Models.IMachineRunCommandPropertiesInternal)Property).SourceCommandId; set => ((Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Models.IMachineRunCommandPropertiesInternal)Property).SourceCommandId = value ?? null; }

        /// <summary>Specifies the script content to be executed on the machine.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Origin(Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.PropertyOrigin.Inlined)]
        public string SourceScript { get => ((Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Models.IMachineRunCommandPropertiesInternal)Property).SourceScript; set => ((Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Models.IMachineRunCommandPropertiesInternal)Property).SourceScript = value ?? null; }

        /// <summary>
        /// Specifies the script download location. It can be either SAS URI of an Azure storage blob with read access or public URI.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Origin(Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.PropertyOrigin.Inlined)]
        public string SourceScriptUri { get => ((Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Models.IMachineRunCommandPropertiesInternal)Property).SourceScriptUri; set => ((Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Models.IMachineRunCommandPropertiesInternal)Property).SourceScriptUri = value ?? null; }

        /// <summary>
        /// Azure Resource Manager metadata containing createdBy and modifiedBy information.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Origin(Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.PropertyOrigin.Inherited)]
        internal Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Models.ISystemData SystemData { get => ((Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Models.IResourceInternal)__trackedResource).SystemData; }

        /// <summary>The timestamp of resource creation (UTC).</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Origin(Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.PropertyOrigin.Inherited)]
        public global::System.DateTime? SystemDataCreatedAt { get => ((Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Models.IResourceInternal)__trackedResource).SystemDataCreatedAt; set => ((Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Models.IResourceInternal)__trackedResource).SystemDataCreatedAt = value ?? default(global::System.DateTime); }

        /// <summary>The identity that created the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Origin(Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.PropertyOrigin.Inherited)]
        public string SystemDataCreatedBy { get => ((Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Models.IResourceInternal)__trackedResource).SystemDataCreatedBy; set => ((Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Models.IResourceInternal)__trackedResource).SystemDataCreatedBy = value ?? null; }

        /// <summary>The type of identity that created the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Origin(Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.PropertyOrigin.Inherited)]
        public string SystemDataCreatedByType { get => ((Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Models.IResourceInternal)__trackedResource).SystemDataCreatedByType; set => ((Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Models.IResourceInternal)__trackedResource).SystemDataCreatedByType = value ?? null; }

        /// <summary>The timestamp of resource last modification (UTC)</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Origin(Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.PropertyOrigin.Inherited)]
        public global::System.DateTime? SystemDataLastModifiedAt { get => ((Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Models.IResourceInternal)__trackedResource).SystemDataLastModifiedAt; set => ((Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Models.IResourceInternal)__trackedResource).SystemDataLastModifiedAt = value ?? default(global::System.DateTime); }

        /// <summary>The identity that last modified the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Origin(Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.PropertyOrigin.Inherited)]
        public string SystemDataLastModifiedBy { get => ((Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Models.IResourceInternal)__trackedResource).SystemDataLastModifiedBy; set => ((Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Models.IResourceInternal)__trackedResource).SystemDataLastModifiedBy = value ?? null; }

        /// <summary>The type of identity that last modified the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Origin(Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.PropertyOrigin.Inherited)]
        public string SystemDataLastModifiedByType { get => ((Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Models.IResourceInternal)__trackedResource).SystemDataLastModifiedByType; set => ((Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Models.IResourceInternal)__trackedResource).SystemDataLastModifiedByType = value ?? null; }

        /// <summary>Resource tags.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Origin(Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.PropertyOrigin.Inherited)]
        public Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Models.ITrackedResourceTags Tags { get => ((Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Models.ITrackedResourceInternal)__trackedResource).Tags; set => ((Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Models.ITrackedResourceInternal)__trackedResource).Tags = value ?? null /* model class */; }

        /// <summary>The timeout in seconds to execute the run command.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Origin(Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.PropertyOrigin.Inlined)]
        public int? TimeoutInSecond { get => ((Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Models.IMachineRunCommandPropertiesInternal)Property).TimeoutInSecond; set => ((Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Models.IMachineRunCommandPropertiesInternal)Property).TimeoutInSecond = value ?? default(int); }

        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Origin(Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.PropertyOrigin.Inherited)]
        public string Type { get => ((Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Models.IResourceInternal)__trackedResource).Type; }

        /// <summary>Creates an new <see cref="MachineRunCommand" /> instance.</summary>
        public MachineRunCommand()
        {

        }

        /// <summary>Validates that this object meets the validation criteria.</summary>
        /// <param name="eventListener">an <see cref="Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Runtime.IEventListener" /> instance that will receive validation
        /// events.</param>
        /// <returns>
        /// A <see cref = "global::System.Threading.Tasks.Task" /> that will be complete when validation is completed.
        /// </returns>
        public async global::System.Threading.Tasks.Task Validate(Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Runtime.IEventListener eventListener)
        {
            await eventListener.AssertNotNull(nameof(__trackedResource), __trackedResource);
            await eventListener.AssertObjectIsValid(nameof(__trackedResource), __trackedResource);
        }
    }
    /// Describes a Run Command
    public partial interface IMachineRunCommand :
        Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Runtime.IJsonSerializable,
        Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Models.ITrackedResource
    {
        /// <summary>
        /// Optional. If set to true, provisioning will complete as soon as script starts and will not wait for script to complete.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Optional. If set to true, provisioning will complete as soon as script starts and will not wait for script to complete.",
        SerializedName = @"asyncExecution",
        PossibleTypes = new [] { typeof(bool) })]
        bool? AsyncExecution { get; set; }
        /// <summary>
        /// Client Id (GUID value) of the user-assigned managed identity. ObjectId should not be used if this is provided.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Client Id (GUID value) of the user-assigned managed identity. ObjectId should not be used if this is provided.",
        SerializedName = @"clientId",
        PossibleTypes = new [] { typeof(string) })]
        string ErrorBlobManagedIdentityClientId { get; set; }
        /// <summary>
        /// Object Id (GUID value) of the user-assigned managed identity. ClientId should not be used if this is provided.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Object Id (GUID value) of the user-assigned managed identity. ClientId should not be used if this is provided.",
        SerializedName = @"objectId",
        PossibleTypes = new [] { typeof(string) })]
        string ErrorBlobManagedIdentityObjectId { get; set; }
        /// <summary>
        /// Specifies the Azure storage blob where script error stream will be uploaded. Use a SAS URI with read, append, create,
        /// write access OR use managed identity to provide the VM access to the blob. Refer errorBlobManagedIdentity parameter.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Specifies the Azure storage blob where script error stream will be uploaded. Use a SAS URI with read, append, create, write access OR use managed identity to provide the VM access to the blob. Refer errorBlobManagedIdentity parameter.",
        SerializedName = @"errorBlobUri",
        PossibleTypes = new [] { typeof(string) })]
        string ErrorBlobUri { get; set; }
        /// <summary>Script end time.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"Script end time.",
        SerializedName = @"endTime",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? InstanceViewEndTime { get;  }
        /// <summary>Script error stream.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"Script error stream.",
        SerializedName = @"error",
        PossibleTypes = new [] { typeof(string) })]
        string InstanceViewError { get;  }
        /// <summary>Communicate script configuration errors or execution messages.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"Communicate script configuration errors or execution messages.",
        SerializedName = @"executionMessage",
        PossibleTypes = new [] { typeof(string) })]
        string InstanceViewExecutionMessage { get;  }
        /// <summary>Script execution status.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"Script execution status.",
        SerializedName = @"executionState",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.PSArgumentCompleterAttribute("Unknown", "Pending", "Running", "Failed", "Succeeded", "TimedOut", "Canceled")]
        string InstanceViewExecutionState { get;  }
        /// <summary>Exit code returned from script execution.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"Exit code returned from script execution.",
        SerializedName = @"exitCode",
        PossibleTypes = new [] { typeof(int) })]
        int? InstanceViewExitCode { get;  }
        /// <summary>Script output stream.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"Script output stream.",
        SerializedName = @"output",
        PossibleTypes = new [] { typeof(string) })]
        string InstanceViewOutput { get;  }
        /// <summary>Script start time.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"Script start time.",
        SerializedName = @"startTime",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? InstanceViewStartTime { get;  }
        /// <summary>The status information.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The  status information.",
        SerializedName = @"statuses",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Models.IExtensionsResourceStatus) })]
        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Models.IExtensionsResourceStatus> InstanceViewStatuses { get;  }
        /// <summary>
        /// Client Id (GUID value) of the user-assigned managed identity. ObjectId should not be used if this is provided.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Client Id (GUID value) of the user-assigned managed identity. ObjectId should not be used if this is provided.",
        SerializedName = @"clientId",
        PossibleTypes = new [] { typeof(string) })]
        string OutputBlobManagedIdentityClientId { get; set; }
        /// <summary>
        /// Object Id (GUID value) of the user-assigned managed identity. ClientId should not be used if this is provided.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Object Id (GUID value) of the user-assigned managed identity. ClientId should not be used if this is provided.",
        SerializedName = @"objectId",
        PossibleTypes = new [] { typeof(string) })]
        string OutputBlobManagedIdentityObjectId { get; set; }
        /// <summary>
        /// Specifies the Azure storage blob where script output stream will be uploaded. Use a SAS URI with read, append, create,
        /// write access OR use managed identity to provide the VM access to the blob. Refer outputBlobManagedIdentity parameter.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Specifies the Azure storage blob where script output stream will be uploaded. Use a SAS URI with read, append, create, write access OR use managed identity to provide the VM access to the blob. Refer outputBlobManagedIdentity parameter. ",
        SerializedName = @"outputBlobUri",
        PossibleTypes = new [] { typeof(string) })]
        string OutputBlobUri { get; set; }
        /// <summary>The parameters used by the script.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The parameters used by the script.",
        SerializedName = @"parameters",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Models.IRunCommandInputParameter) })]
        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Models.IRunCommandInputParameter> Parameter { get; set; }
        /// <summary>The parameters used by the script.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The parameters used by the script.",
        SerializedName = @"protectedParameters",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Models.IRunCommandInputParameter) })]
        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Models.IRunCommandInputParameter> ProtectedParameter { get; set; }
        /// <summary>The provisioning state, which only appears in the response.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The provisioning state, which only appears in the response.",
        SerializedName = @"provisioningState",
        PossibleTypes = new [] { typeof(string) })]
        string ProvisioningState { get;  }
        /// <summary>
        /// Specifies the user account password on the machine when executing the run command.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Specifies the user account password on the machine when executing the run command.",
        SerializedName = @"runAsPassword",
        PossibleTypes = new [] { typeof(string) })]
        string RunAsPassword { get; set; }
        /// <summary>Specifies the user account on the machine when executing the run command.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Specifies the user account on the machine when executing the run command.",
        SerializedName = @"runAsUser",
        PossibleTypes = new [] { typeof(string) })]
        string RunAsUser { get; set; }
        /// <summary>
        /// Client Id (GUID value) of the user-assigned managed identity. ObjectId should not be used if this is provided.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Client Id (GUID value) of the user-assigned managed identity. ObjectId should not be used if this is provided.",
        SerializedName = @"clientId",
        PossibleTypes = new [] { typeof(string) })]
        string ScriptUriManagedIdentityClientId { get; set; }
        /// <summary>
        /// Object Id (GUID value) of the user-assigned managed identity. ClientId should not be used if this is provided.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Object Id (GUID value) of the user-assigned managed identity. ClientId should not be used if this is provided.",
        SerializedName = @"objectId",
        PossibleTypes = new [] { typeof(string) })]
        string ScriptUriManagedIdentityObjectId { get; set; }
        /// <summary>Specifies the commandId of predefined built-in script.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Specifies the commandId of predefined built-in script.",
        SerializedName = @"commandId",
        PossibleTypes = new [] { typeof(string) })]
        string SourceCommandId { get; set; }
        /// <summary>Specifies the script content to be executed on the machine.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Specifies the script content to be executed on the machine.",
        SerializedName = @"script",
        PossibleTypes = new [] { typeof(string) })]
        string SourceScript { get; set; }
        /// <summary>
        /// Specifies the script download location. It can be either SAS URI of an Azure storage blob with read access or public URI.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Specifies the script download location. It can be either SAS URI of an Azure storage blob with read access or public URI.",
        SerializedName = @"scriptUri",
        PossibleTypes = new [] { typeof(string) })]
        string SourceScriptUri { get; set; }
        /// <summary>The timeout in seconds to execute the run command.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The timeout in seconds to execute the run command.",
        SerializedName = @"timeoutInSeconds",
        PossibleTypes = new [] { typeof(int) })]
        int? TimeoutInSecond { get; set; }

    }
    /// Describes a Run Command
    internal partial interface IMachineRunCommandInternal :
        Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Models.ITrackedResourceInternal
    {
        /// <summary>
        /// Optional. If set to true, provisioning will complete as soon as script starts and will not wait for script to complete.
        /// </summary>
        bool? AsyncExecution { get; set; }
        /// <summary>
        /// User-assigned managed identity that has access to errorBlobUri storage blob. Use an empty object in case of system-assigned
        /// identity. Make sure managed identity has been given access to blob's container with 'Storage Blob Data Contributor' role
        /// assignment. In case of user-assigned identity, make sure you add it under VM's identity. For more info on managed identity
        /// and Run Command, refer https://aka.ms/ManagedIdentity and https://aka.ms/RunCommandManaged
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Models.IRunCommandManagedIdentity ErrorBlobManagedIdentity { get; set; }
        /// <summary>
        /// Client Id (GUID value) of the user-assigned managed identity. ObjectId should not be used if this is provided.
        /// </summary>
        string ErrorBlobManagedIdentityClientId { get; set; }
        /// <summary>
        /// Object Id (GUID value) of the user-assigned managed identity. ClientId should not be used if this is provided.
        /// </summary>
        string ErrorBlobManagedIdentityObjectId { get; set; }
        /// <summary>
        /// Specifies the Azure storage blob where script error stream will be uploaded. Use a SAS URI with read, append, create,
        /// write access OR use managed identity to provide the VM access to the blob. Refer errorBlobManagedIdentity parameter.
        /// </summary>
        string ErrorBlobUri { get; set; }
        /// <summary>The machine run command instance view.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Models.IMachineRunCommandInstanceView InstanceView { get; set; }
        /// <summary>Script end time.</summary>
        global::System.DateTime? InstanceViewEndTime { get; set; }
        /// <summary>Script error stream.</summary>
        string InstanceViewError { get; set; }
        /// <summary>Communicate script configuration errors or execution messages.</summary>
        string InstanceViewExecutionMessage { get; set; }
        /// <summary>Script execution status.</summary>
        [global::Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.PSArgumentCompleterAttribute("Unknown", "Pending", "Running", "Failed", "Succeeded", "TimedOut", "Canceled")]
        string InstanceViewExecutionState { get; set; }
        /// <summary>Exit code returned from script execution.</summary>
        int? InstanceViewExitCode { get; set; }
        /// <summary>Script output stream.</summary>
        string InstanceViewOutput { get; set; }
        /// <summary>Script start time.</summary>
        global::System.DateTime? InstanceViewStartTime { get; set; }
        /// <summary>The status information.</summary>
        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Models.IExtensionsResourceStatus> InstanceViewStatuses { get; set; }
        /// <summary>
        /// User-assigned managed identity that has access to outputBlobUri storage blob. Use an empty object in case of system-assigned
        /// identity. Make sure managed identity has been given access to blob's container with 'Storage Blob Data Contributor' role
        /// assignment. In case of user-assigned identity, make sure you add it under VM's identity. For more info on managed identity
        /// and Run Command, refer https://aka.ms/ManagedIdentity and https://aka.ms/RunCommandManaged
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Models.IRunCommandManagedIdentity OutputBlobManagedIdentity { get; set; }
        /// <summary>
        /// Client Id (GUID value) of the user-assigned managed identity. ObjectId should not be used if this is provided.
        /// </summary>
        string OutputBlobManagedIdentityClientId { get; set; }
        /// <summary>
        /// Object Id (GUID value) of the user-assigned managed identity. ClientId should not be used if this is provided.
        /// </summary>
        string OutputBlobManagedIdentityObjectId { get; set; }
        /// <summary>
        /// Specifies the Azure storage blob where script output stream will be uploaded. Use a SAS URI with read, append, create,
        /// write access OR use managed identity to provide the VM access to the blob. Refer outputBlobManagedIdentity parameter.
        /// </summary>
        string OutputBlobUri { get; set; }
        /// <summary>The parameters used by the script.</summary>
        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Models.IRunCommandInputParameter> Parameter { get; set; }
        /// <summary>Describes Run Command Properties</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Models.IMachineRunCommandProperties Property { get; set; }
        /// <summary>The parameters used by the script.</summary>
        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Models.IRunCommandInputParameter> ProtectedParameter { get; set; }
        /// <summary>The provisioning state, which only appears in the response.</summary>
        string ProvisioningState { get; set; }
        /// <summary>
        /// Specifies the user account password on the machine when executing the run command.
        /// </summary>
        string RunAsPassword { get; set; }
        /// <summary>Specifies the user account on the machine when executing the run command.</summary>
        string RunAsUser { get; set; }
        /// <summary>
        /// Client Id (GUID value) of the user-assigned managed identity. ObjectId should not be used if this is provided.
        /// </summary>
        string ScriptUriManagedIdentityClientId { get; set; }
        /// <summary>
        /// Object Id (GUID value) of the user-assigned managed identity. ClientId should not be used if this is provided.
        /// </summary>
        string ScriptUriManagedIdentityObjectId { get; set; }
        /// <summary>The source of the run command script.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Models.IMachineRunCommandScriptSource Source { get; set; }
        /// <summary>Specifies the commandId of predefined built-in script.</summary>
        string SourceCommandId { get; set; }
        /// <summary>Specifies the script content to be executed on the machine.</summary>
        string SourceScript { get; set; }
        /// <summary>
        /// Specifies the script download location. It can be either SAS URI of an Azure storage blob with read access or public URI.
        /// </summary>
        string SourceScriptUri { get; set; }
        /// <summary>
        /// User-assigned managed identity that has access to scriptUri in case of Azure storage blob. Use an empty object in case
        /// of system-assigned identity. Make sure the Azure storage blob exists, and managed identity has been given access to blob's
        /// container with 'Storage Blob Data Reader' role assignment. In case of user-assigned identity, make sure you add it under
        /// VM's identity. For more info on managed identity and Run Command, refer https://aka.ms/ManagedIdentity and https://aka.ms/RunCommandManaged.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Models.IRunCommandManagedIdentity SourceScriptUriManagedIdentity { get; set; }
        /// <summary>The timeout in seconds to execute the run command.</summary>
        int? TimeoutInSecond { get; set; }

    }
}