// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Models
{
    using static Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Runtime.Extensions;

    public partial class LicenseUpdatePropertiesLicenseDetails :
        Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Models.ILicenseUpdatePropertiesLicenseDetails,
        Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Models.ILicenseUpdatePropertiesLicenseDetailsInternal
    {

        /// <summary>Backing field for <see cref="Edition" /> property.</summary>
        private string _edition;

        /// <summary>
        /// Describes the edition of the license. The values are either Standard or Datacenter.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Origin(Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.PropertyOrigin.Owned)]
        public string Edition { get => this._edition; set => this._edition = value; }

        /// <summary>Backing field for <see cref="Processor" /> property.</summary>
        private int? _processor;

        /// <summary>Describes the number of processors.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Origin(Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.PropertyOrigin.Owned)]
        public int? Processor { get => this._processor; set => this._processor = value; }

        /// <summary>Backing field for <see cref="State" /> property.</summary>
        private string _state;

        /// <summary>Describes the state of the license.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Origin(Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.PropertyOrigin.Owned)]
        public string State { get => this._state; set => this._state = value; }

        /// <summary>Backing field for <see cref="Target" /> property.</summary>
        private string _target;

        /// <summary>Describes the license target server.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Origin(Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.PropertyOrigin.Owned)]
        public string Target { get => this._target; set => this._target = value; }

        /// <summary>Backing field for <see cref="Type" /> property.</summary>
        private string _type;

        /// <summary>Describes the license core type (pCore or vCore).</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Origin(Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.PropertyOrigin.Owned)]
        public string Type { get => this._type; set => this._type = value; }

        /// <summary>Creates an new <see cref="LicenseUpdatePropertiesLicenseDetails" /> instance.</summary>
        public LicenseUpdatePropertiesLicenseDetails()
        {

        }
    }
    public partial interface ILicenseUpdatePropertiesLicenseDetails :
        Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Runtime.IJsonSerializable
    {
        /// <summary>
        /// Describes the edition of the license. The values are either Standard or Datacenter.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Describes the edition of the license. The values are either Standard or Datacenter.",
        SerializedName = @"edition",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.PSArgumentCompleterAttribute("Standard", "Datacenter")]
        string Edition { get; set; }
        /// <summary>Describes the number of processors.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Describes the number of processors.",
        SerializedName = @"processors",
        PossibleTypes = new [] { typeof(int) })]
        int? Processor { get; set; }
        /// <summary>Describes the state of the license.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Describes the state of the license.",
        SerializedName = @"state",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.PSArgumentCompleterAttribute("Activated", "Deactivated")]
        string State { get; set; }
        /// <summary>Describes the license target server.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Describes the license target server.",
        SerializedName = @"target",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.PSArgumentCompleterAttribute("Windows Server 2012", "Windows Server 2012 R2")]
        string Target { get; set; }
        /// <summary>Describes the license core type (pCore or vCore).</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Describes the license core type (pCore or vCore).",
        SerializedName = @"type",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.PSArgumentCompleterAttribute("pCore", "vCore")]
        string Type { get; set; }

    }
    internal partial interface ILicenseUpdatePropertiesLicenseDetailsInternal

    {
        /// <summary>
        /// Describes the edition of the license. The values are either Standard or Datacenter.
        /// </summary>
        [global::Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.PSArgumentCompleterAttribute("Standard", "Datacenter")]
        string Edition { get; set; }
        /// <summary>Describes the number of processors.</summary>
        int? Processor { get; set; }
        /// <summary>Describes the state of the license.</summary>
        [global::Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.PSArgumentCompleterAttribute("Activated", "Deactivated")]
        string State { get; set; }
        /// <summary>Describes the license target server.</summary>
        [global::Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.PSArgumentCompleterAttribute("Windows Server 2012", "Windows Server 2012 R2")]
        string Target { get; set; }
        /// <summary>Describes the license core type (pCore or vCore).</summary>
        [global::Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.PSArgumentCompleterAttribute("pCore", "vCore")]
        string Type { get; set; }

    }
}