// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Models
{
    using static Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Runtime.Extensions;

    /// <summary>Describes the properties of a License.</summary>
    public partial class LicenseDetails :
        Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Models.ILicenseDetails,
        Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Models.ILicenseDetailsInternal
    {

        /// <summary>Backing field for <see cref="AssignedLicense" /> property.</summary>
        private int? _assignedLicense;

        /// <summary>Describes the number of assigned licenses.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Origin(Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.PropertyOrigin.Owned)]
        public int? AssignedLicense { get => this._assignedLicense; }

        /// <summary>Backing field for <see cref="Edition" /> property.</summary>
        private string _edition;

        /// <summary>
        /// Describes the edition of the license. The values are either Standard or Datacenter.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Origin(Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.PropertyOrigin.Owned)]
        public string Edition { get => this._edition; set => this._edition = value; }

        /// <summary>Backing field for <see cref="ImmutableId" /> property.</summary>
        private string _immutableId;

        /// <summary>Describes the immutable id.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Origin(Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.PropertyOrigin.Owned)]
        public string ImmutableId { get => this._immutableId; }

        /// <summary>Internal Acessors for AssignedLicense</summary>
        int? Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Models.ILicenseDetailsInternal.AssignedLicense { get => this._assignedLicense; set { {_assignedLicense = value;} } }

        /// <summary>Internal Acessors for ImmutableId</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Models.ILicenseDetailsInternal.ImmutableId { get => this._immutableId; set { {_immutableId = value;} } }

        /// <summary>Backing field for <see cref="Processor" /> property.</summary>
        private int? _processor;

        /// <summary>Describes the number of processors.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Origin(Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.PropertyOrigin.Owned)]
        public int? Processor { get => this._processor; set => this._processor = value; }

        /// <summary>Backing field for <see cref="State" /> property.</summary>
        private string _state;

        /// <summary>Describes the state of the license.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Origin(Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.PropertyOrigin.Owned)]
        public string State { get => this._state; set => this._state = value; }

        /// <summary>Backing field for <see cref="Target" /> property.</summary>
        private string _target;

        /// <summary>Describes the license target server.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Origin(Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.PropertyOrigin.Owned)]
        public string Target { get => this._target; set => this._target = value; }

        /// <summary>Backing field for <see cref="Type" /> property.</summary>
        private string _type;

        /// <summary>Describes the license core type (pCore or vCore).</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Origin(Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.PropertyOrigin.Owned)]
        public string Type { get => this._type; set => this._type = value; }

        /// <summary>Backing field for <see cref="VolumeLicenseDetail" /> property.</summary>
        private System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Models.IVolumeLicenseDetails> _volumeLicenseDetail;

        /// <summary>A list of volume license details.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Origin(Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.PropertyOrigin.Owned)]
        public System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Models.IVolumeLicenseDetails> VolumeLicenseDetail { get => this._volumeLicenseDetail; set => this._volumeLicenseDetail = value; }

        /// <summary>Creates an new <see cref="LicenseDetails" /> instance.</summary>
        public LicenseDetails()
        {

        }
    }
    /// Describes the properties of a License.
    public partial interface ILicenseDetails :
        Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Runtime.IJsonSerializable
    {
        /// <summary>Describes the number of assigned licenses.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"Describes the number of assigned licenses.",
        SerializedName = @"assignedLicenses",
        PossibleTypes = new [] { typeof(int) })]
        int? AssignedLicense { get;  }
        /// <summary>
        /// Describes the edition of the license. The values are either Standard or Datacenter.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Describes the edition of the license. The values are either Standard or Datacenter.",
        SerializedName = @"edition",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.PSArgumentCompleterAttribute("Standard", "Datacenter")]
        string Edition { get; set; }
        /// <summary>Describes the immutable id.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"Describes the immutable id.",
        SerializedName = @"immutableId",
        PossibleTypes = new [] { typeof(string) })]
        string ImmutableId { get;  }
        /// <summary>Describes the number of processors.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Describes the number of processors.",
        SerializedName = @"processors",
        PossibleTypes = new [] { typeof(int) })]
        int? Processor { get; set; }
        /// <summary>Describes the state of the license.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Describes the state of the license.",
        SerializedName = @"state",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.PSArgumentCompleterAttribute("Activated", "Deactivated")]
        string State { get; set; }
        /// <summary>Describes the license target server.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Describes the license target server.",
        SerializedName = @"target",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.PSArgumentCompleterAttribute("Windows Server 2012", "Windows Server 2012 R2")]
        string Target { get; set; }
        /// <summary>Describes the license core type (pCore or vCore).</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Describes the license core type (pCore or vCore).",
        SerializedName = @"type",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.PSArgumentCompleterAttribute("pCore", "vCore")]
        string Type { get; set; }
        /// <summary>A list of volume license details.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"A list of volume license details.",
        SerializedName = @"volumeLicenseDetails",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Models.IVolumeLicenseDetails) })]
        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Models.IVolumeLicenseDetails> VolumeLicenseDetail { get; set; }

    }
    /// Describes the properties of a License.
    internal partial interface ILicenseDetailsInternal

    {
        /// <summary>Describes the number of assigned licenses.</summary>
        int? AssignedLicense { get; set; }
        /// <summary>
        /// Describes the edition of the license. The values are either Standard or Datacenter.
        /// </summary>
        [global::Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.PSArgumentCompleterAttribute("Standard", "Datacenter")]
        string Edition { get; set; }
        /// <summary>Describes the immutable id.</summary>
        string ImmutableId { get; set; }
        /// <summary>Describes the number of processors.</summary>
        int? Processor { get; set; }
        /// <summary>Describes the state of the license.</summary>
        [global::Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.PSArgumentCompleterAttribute("Activated", "Deactivated")]
        string State { get; set; }
        /// <summary>Describes the license target server.</summary>
        [global::Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.PSArgumentCompleterAttribute("Windows Server 2012", "Windows Server 2012 R2")]
        string Target { get; set; }
        /// <summary>Describes the license core type (pCore or vCore).</summary>
        [global::Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.PSArgumentCompleterAttribute("pCore", "vCore")]
        string Type { get; set; }
        /// <summary>A list of volume license details.</summary>
        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Models.IVolumeLicenseDetails> VolumeLicenseDetail { get; set; }

    }
}