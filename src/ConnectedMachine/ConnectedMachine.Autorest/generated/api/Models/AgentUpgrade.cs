// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Models
{
    using static Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Runtime.Extensions;

    /// <summary>The info w.r.t Agent Upgrade.</summary>
    public partial class AgentUpgrade :
        Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Models.IAgentUpgrade,
        Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Models.IAgentUpgradeInternal
    {

        /// <summary>Backing field for <see cref="CorrelationId" /> property.</summary>
        private string _correlationId;

        /// <summary>The correlation ID passed in from RSM per upgrade.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Origin(Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.PropertyOrigin.Owned)]
        public string CorrelationId { get => this._correlationId; set => this._correlationId = value; }

        /// <summary>Backing field for <see cref="DesiredVersion" /> property.</summary>
        private string _desiredVersion;

        /// <summary>Specifies the version info w.r.t AgentUpgrade for the machine.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Origin(Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.PropertyOrigin.Owned)]
        public string DesiredVersion { get => this._desiredVersion; set => this._desiredVersion = value; }

        /// <summary>Backing field for <see cref="EnableAutomaticUpgrade" /> property.</summary>
        private bool? _enableAutomaticUpgrade;

        /// <summary>Specifies if RSM should try to upgrade this machine</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Origin(Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.PropertyOrigin.Owned)]
        public bool? EnableAutomaticUpgrade { get => this._enableAutomaticUpgrade; set => this._enableAutomaticUpgrade = value; }

        /// <summary>Backing field for <see cref="LastAttemptDesiredVersion" /> property.</summary>
        private string _lastAttemptDesiredVersion;

        /// <summary>Specifies the version of the last attempt</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Origin(Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.PropertyOrigin.Owned)]
        public string LastAttemptDesiredVersion { get => this._lastAttemptDesiredVersion; }

        /// <summary>Backing field for <see cref="LastAttemptMessage" /> property.</summary>
        private string _lastAttemptMessage;

        /// <summary>Failure message of last upgrade attempt if any.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Origin(Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.PropertyOrigin.Owned)]
        public string LastAttemptMessage { get => this._lastAttemptMessage; }

        /// <summary>Backing field for <see cref="LastAttemptStatus" /> property.</summary>
        private string _lastAttemptStatus;

        /// <summary>Specifies the status of Agent Upgrade.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Origin(Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.PropertyOrigin.Owned)]
        public string LastAttemptStatus { get => this._lastAttemptStatus; }

        /// <summary>Backing field for <see cref="LastAttemptTimestamp" /> property.</summary>
        private string _lastAttemptTimestamp;

        /// <summary>Timestamp of last upgrade attempt</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Origin(Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.PropertyOrigin.Owned)]
        public string LastAttemptTimestamp { get => this._lastAttemptTimestamp; }

        /// <summary>Internal Acessors for LastAttemptDesiredVersion</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Models.IAgentUpgradeInternal.LastAttemptDesiredVersion { get => this._lastAttemptDesiredVersion; set { {_lastAttemptDesiredVersion = value;} } }

        /// <summary>Internal Acessors for LastAttemptMessage</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Models.IAgentUpgradeInternal.LastAttemptMessage { get => this._lastAttemptMessage; set { {_lastAttemptMessage = value;} } }

        /// <summary>Internal Acessors for LastAttemptStatus</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Models.IAgentUpgradeInternal.LastAttemptStatus { get => this._lastAttemptStatus; set { {_lastAttemptStatus = value;} } }

        /// <summary>Internal Acessors for LastAttemptTimestamp</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Models.IAgentUpgradeInternal.LastAttemptTimestamp { get => this._lastAttemptTimestamp; set { {_lastAttemptTimestamp = value;} } }

        /// <summary>Creates an new <see cref="AgentUpgrade" /> instance.</summary>
        public AgentUpgrade()
        {

        }
    }
    /// The info w.r.t Agent Upgrade.
    public partial interface IAgentUpgrade :
        Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Runtime.IJsonSerializable
    {
        /// <summary>The correlation ID passed in from RSM per upgrade.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The correlation ID passed in from RSM per upgrade.",
        SerializedName = @"correlationId",
        PossibleTypes = new [] { typeof(string) })]
        string CorrelationId { get; set; }
        /// <summary>Specifies the version info w.r.t AgentUpgrade for the machine.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Specifies the version info w.r.t AgentUpgrade for the machine.",
        SerializedName = @"desiredVersion",
        PossibleTypes = new [] { typeof(string) })]
        string DesiredVersion { get; set; }
        /// <summary>Specifies if RSM should try to upgrade this machine</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Specifies if RSM should try to upgrade this machine",
        SerializedName = @"enableAutomaticUpgrade",
        PossibleTypes = new [] { typeof(bool) })]
        bool? EnableAutomaticUpgrade { get; set; }
        /// <summary>Specifies the version of the last attempt</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"Specifies the version of the last attempt",
        SerializedName = @"lastAttemptDesiredVersion",
        PossibleTypes = new [] { typeof(string) })]
        string LastAttemptDesiredVersion { get;  }
        /// <summary>Failure message of last upgrade attempt if any.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"Failure message of last upgrade attempt if any.",
        SerializedName = @"lastAttemptMessage",
        PossibleTypes = new [] { typeof(string) })]
        string LastAttemptMessage { get;  }
        /// <summary>Specifies the status of Agent Upgrade.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"Specifies the status of Agent Upgrade.",
        SerializedName = @"lastAttemptStatus",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.PSArgumentCompleterAttribute("Success", "Failed")]
        string LastAttemptStatus { get;  }
        /// <summary>Timestamp of last upgrade attempt</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"Timestamp of last upgrade attempt",
        SerializedName = @"lastAttemptTimestamp",
        PossibleTypes = new [] { typeof(string) })]
        string LastAttemptTimestamp { get;  }

    }
    /// The info w.r.t Agent Upgrade.
    internal partial interface IAgentUpgradeInternal

    {
        /// <summary>The correlation ID passed in from RSM per upgrade.</summary>
        string CorrelationId { get; set; }
        /// <summary>Specifies the version info w.r.t AgentUpgrade for the machine.</summary>
        string DesiredVersion { get; set; }
        /// <summary>Specifies if RSM should try to upgrade this machine</summary>
        bool? EnableAutomaticUpgrade { get; set; }
        /// <summary>Specifies the version of the last attempt</summary>
        string LastAttemptDesiredVersion { get; set; }
        /// <summary>Failure message of last upgrade attempt if any.</summary>
        string LastAttemptMessage { get; set; }
        /// <summary>Specifies the status of Agent Upgrade.</summary>
        [global::Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.PSArgumentCompleterAttribute("Success", "Failed")]
        string LastAttemptStatus { get; set; }
        /// <summary>Timestamp of last upgrade attempt</summary>
        string LastAttemptTimestamp { get; set; }

    }
}