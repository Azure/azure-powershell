// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Models
{
    using static Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Runtime.Extensions;

    /// <summary>License Profile Instance View in Machine Properties.</summary>
    public partial class LicenseProfileMachineInstanceView :
        Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Models.ILicenseProfileMachineInstanceView,
        Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Models.ILicenseProfileMachineInstanceViewInternal
    {

        /// <summary>Backing field for <see cref="EsuProfile" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Models.ILicenseProfileMachineInstanceViewEsuProperties _esuProfile;

        /// <summary>Properties for the Machine ESU profile.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Origin(Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Models.ILicenseProfileMachineInstanceViewEsuProperties EsuProfile { get => (this._esuProfile = this._esuProfile ?? new Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Models.LicenseProfileMachineInstanceViewEsuProperties()); set => this._esuProfile = value; }

        /// <summary>The assigned license resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Origin(Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Models.ILicense EsuProfileAssignedLicense { get => ((Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Models.ILicenseProfileMachineInstanceViewEsuPropertiesInternal)EsuProfile).AssignedLicense; set => ((Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Models.ILicenseProfileMachineInstanceViewEsuPropertiesInternal)EsuProfile).AssignedLicense = value ?? null /* model class */; }

        /// <summary>The guid id of the license.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Origin(Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.PropertyOrigin.Inlined)]
        public string EsuProfileAssignedLicenseImmutableId { get => ((Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Models.ILicenseProfileStorageModelEsuPropertiesInternal)EsuProfile).AssignedLicenseImmutableId; }

        /// <summary>Indicates the eligibility state of Esu.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Origin(Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.PropertyOrigin.Inlined)]
        public string EsuProfileEsuEligibility { get => ((Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Models.ILicenseProfileArmEsuPropertiesWithoutAssignedLicenseInternal)EsuProfile).EsuEligibility; }

        /// <summary>The list of ESU keys.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Origin(Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.PropertyOrigin.Inlined)]
        public System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Models.IEsuKey> EsuProfileEsuKey { get => ((Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Models.ILicenseProfileStorageModelEsuPropertiesInternal)EsuProfile).EsuKey; }

        /// <summary>Indicates whether there is an ESU Key currently active for the machine.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Origin(Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.PropertyOrigin.Inlined)]
        public string EsuProfileEsuKeyState { get => ((Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Models.ILicenseProfileArmEsuPropertiesWithoutAssignedLicenseInternal)EsuProfile).EsuKeyState; }

        /// <summary>Describes the license assignment state (Assigned or NotAssigned).</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Origin(Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.PropertyOrigin.Inlined)]
        public string EsuProfileLicenseAssignmentState { get => ((Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Models.ILicenseProfileMachineInstanceViewEsuPropertiesInternal)EsuProfile).LicenseAssignmentState; set => ((Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Models.ILicenseProfileMachineInstanceViewEsuPropertiesInternal)EsuProfile).LicenseAssignmentState = value ?? null; }

        /// <summary>The type of the Esu servers.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Origin(Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.PropertyOrigin.Inlined)]
        public string EsuProfileServerType { get => ((Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Models.ILicenseProfileArmEsuPropertiesWithoutAssignedLicenseInternal)EsuProfile).ServerType; }

        /// <summary>Backing field for <see cref="LicenseChannel" /> property.</summary>
        private string _licenseChannel;

        /// <summary>Indicates the license channel.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Origin(Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.PropertyOrigin.Owned)]
        public string LicenseChannel { get => this._licenseChannel; }

        /// <summary>Backing field for <see cref="LicenseStatus" /> property.</summary>
        private string _licenseStatus;

        /// <summary>Indicates the license status of the OS.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Origin(Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.PropertyOrigin.Owned)]
        public string LicenseStatus { get => this._licenseStatus; }

        /// <summary>Internal Acessors for EsuProfile</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Models.ILicenseProfileMachineInstanceViewEsuProperties Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Models.ILicenseProfileMachineInstanceViewInternal.EsuProfile { get => (this._esuProfile = this._esuProfile ?? new Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Models.LicenseProfileMachineInstanceViewEsuProperties()); set { {_esuProfile = value;} } }

        /// <summary>Internal Acessors for EsuProfileAssignedLicenseImmutableId</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Models.ILicenseProfileMachineInstanceViewInternal.EsuProfileAssignedLicenseImmutableId { get => ((Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Models.ILicenseProfileStorageModelEsuPropertiesInternal)EsuProfile).AssignedLicenseImmutableId; set => ((Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Models.ILicenseProfileStorageModelEsuPropertiesInternal)EsuProfile).AssignedLicenseImmutableId = value; }

        /// <summary>Internal Acessors for EsuProfileEsuEligibility</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Models.ILicenseProfileMachineInstanceViewInternal.EsuProfileEsuEligibility { get => ((Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Models.ILicenseProfileArmEsuPropertiesWithoutAssignedLicenseInternal)EsuProfile).EsuEligibility; set => ((Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Models.ILicenseProfileArmEsuPropertiesWithoutAssignedLicenseInternal)EsuProfile).EsuEligibility = value; }

        /// <summary>Internal Acessors for EsuProfileEsuKey</summary>
        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Models.IEsuKey> Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Models.ILicenseProfileMachineInstanceViewInternal.EsuProfileEsuKey { get => ((Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Models.ILicenseProfileStorageModelEsuPropertiesInternal)EsuProfile).EsuKey; set => ((Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Models.ILicenseProfileStorageModelEsuPropertiesInternal)EsuProfile).EsuKey = value; }

        /// <summary>Internal Acessors for EsuProfileEsuKeyState</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Models.ILicenseProfileMachineInstanceViewInternal.EsuProfileEsuKeyState { get => ((Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Models.ILicenseProfileArmEsuPropertiesWithoutAssignedLicenseInternal)EsuProfile).EsuKeyState; set => ((Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Models.ILicenseProfileArmEsuPropertiesWithoutAssignedLicenseInternal)EsuProfile).EsuKeyState = value; }

        /// <summary>Internal Acessors for EsuProfileServerType</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Models.ILicenseProfileMachineInstanceViewInternal.EsuProfileServerType { get => ((Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Models.ILicenseProfileArmEsuPropertiesWithoutAssignedLicenseInternal)EsuProfile).ServerType; set => ((Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Models.ILicenseProfileArmEsuPropertiesWithoutAssignedLicenseInternal)EsuProfile).ServerType = value; }

        /// <summary>Internal Acessors for LicenseChannel</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Models.ILicenseProfileMachineInstanceViewInternal.LicenseChannel { get => this._licenseChannel; set { {_licenseChannel = value;} } }

        /// <summary>Internal Acessors for LicenseStatus</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Models.ILicenseProfileMachineInstanceViewInternal.LicenseStatus { get => this._licenseStatus; set { {_licenseStatus = value;} } }

        /// <summary>Internal Acessors for ProductProfile</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Models.ILicenseProfileArmProductProfileProperties Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Models.ILicenseProfileMachineInstanceViewInternal.ProductProfile { get => (this._productProfile = this._productProfile ?? new Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Models.LicenseProfileArmProductProfileProperties()); set { {_productProfile = value;} } }

        /// <summary>Internal Acessors for ProductProfileBillingStartDate</summary>
        global::System.DateTime? Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Models.ILicenseProfileMachineInstanceViewInternal.ProductProfileBillingStartDate { get => ((Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Models.ILicenseProfileArmProductProfilePropertiesInternal)ProductProfile).BillingStartDate; set => ((Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Models.ILicenseProfileArmProductProfilePropertiesInternal)ProductProfile).BillingStartDate = value; }

        /// <summary>Internal Acessors for ProductProfileDisenrollmentDate</summary>
        global::System.DateTime? Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Models.ILicenseProfileMachineInstanceViewInternal.ProductProfileDisenrollmentDate { get => ((Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Models.ILicenseProfileArmProductProfilePropertiesInternal)ProductProfile).DisenrollmentDate; set => ((Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Models.ILicenseProfileArmProductProfilePropertiesInternal)ProductProfile).DisenrollmentDate = value; }

        /// <summary>Internal Acessors for ProductProfileEnrollmentDate</summary>
        global::System.DateTime? Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Models.ILicenseProfileMachineInstanceViewInternal.ProductProfileEnrollmentDate { get => ((Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Models.ILicenseProfileArmProductProfilePropertiesInternal)ProductProfile).EnrollmentDate; set => ((Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Models.ILicenseProfileArmProductProfilePropertiesInternal)ProductProfile).EnrollmentDate = value; }

        /// <summary>Internal Acessors for SoftwareAssurance</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Models.ILicenseProfileMachineInstanceViewSoftwareAssurance Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Models.ILicenseProfileMachineInstanceViewInternal.SoftwareAssurance { get => (this._softwareAssurance = this._softwareAssurance ?? new Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Models.LicenseProfileMachineInstanceViewSoftwareAssurance()); set { {_softwareAssurance = value;} } }

        /// <summary>Backing field for <see cref="ProductProfile" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Models.ILicenseProfileArmProductProfileProperties _productProfile;

        /// <summary>Hybrid Compute Product Profile properties</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Origin(Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Models.ILicenseProfileArmProductProfileProperties ProductProfile { get => (this._productProfile = this._productProfile ?? new Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Models.LicenseProfileArmProductProfileProperties()); }

        /// <summary>The timestamp in UTC when the billing starts.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Origin(Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.PropertyOrigin.Inlined)]
        public global::System.DateTime? ProductProfileBillingStartDate { get => ((Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Models.ILicenseProfileArmProductProfilePropertiesInternal)ProductProfile).BillingStartDate; }

        /// <summary>The timestamp in UTC when the user disenrolled the feature.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Origin(Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.PropertyOrigin.Inlined)]
        public global::System.DateTime? ProductProfileDisenrollmentDate { get => ((Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Models.ILicenseProfileArmProductProfilePropertiesInternal)ProductProfile).DisenrollmentDate; }

        /// <summary>The timestamp in UTC when the user enrolls the feature.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Origin(Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.PropertyOrigin.Inlined)]
        public global::System.DateTime? ProductProfileEnrollmentDate { get => ((Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Models.ILicenseProfileArmProductProfilePropertiesInternal)ProductProfile).EnrollmentDate; }

        /// <summary>The list of product features.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Origin(Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.PropertyOrigin.Inlined)]
        public System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Models.IProductFeature> ProductProfileProductFeature { get => ((Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Models.ILicenseProfileArmProductProfilePropertiesInternal)ProductProfile).ProductFeature; set => ((Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Models.ILicenseProfileArmProductProfilePropertiesInternal)ProductProfile).ProductFeature = value ?? null /* arrayOf */; }

        /// <summary>Indicates the product type of the license.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Origin(Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.PropertyOrigin.Inlined)]
        public string ProductProfileProductType { get => ((Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Models.ILicenseProfileArmProductProfilePropertiesInternal)ProductProfile).ProductType; set => ((Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Models.ILicenseProfileArmProductProfilePropertiesInternal)ProductProfile).ProductType = value ?? null; }

        /// <summary>Indicates the subscription status of the product.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Origin(Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.PropertyOrigin.Inlined)]
        public string ProductProfileSubscriptionStatus { get => ((Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Models.ILicenseProfileArmProductProfilePropertiesInternal)ProductProfile).SubscriptionStatus; set => ((Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Models.ILicenseProfileArmProductProfilePropertiesInternal)ProductProfile).SubscriptionStatus = value ?? null; }

        /// <summary>Backing field for <see cref="SoftwareAssurance" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Models.ILicenseProfileMachineInstanceViewSoftwareAssurance _softwareAssurance;

        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Origin(Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Models.ILicenseProfileMachineInstanceViewSoftwareAssurance SoftwareAssurance { get => (this._softwareAssurance = this._softwareAssurance ?? new Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Models.LicenseProfileMachineInstanceViewSoftwareAssurance()); }

        /// <summary>
        /// Specifies if this machine is licensed as part of a Software Assurance agreement.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Origin(Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.PropertyOrigin.Inlined)]
        public bool? SoftwareAssuranceCustomer { get => ((Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Models.ILicenseProfileMachineInstanceViewSoftwareAssuranceInternal)SoftwareAssurance).SoftwareAssuranceCustomer; set => ((Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Models.ILicenseProfileMachineInstanceViewSoftwareAssuranceInternal)SoftwareAssurance).SoftwareAssuranceCustomer = value ?? default(bool); }

        /// <summary>Creates an new <see cref="LicenseProfileMachineInstanceView" /> instance.</summary>
        public LicenseProfileMachineInstanceView()
        {

        }
    }
    /// License Profile Instance View in Machine Properties.
    public partial interface ILicenseProfileMachineInstanceView :
        Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Runtime.IJsonSerializable
    {
        /// <summary>The assigned license resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The assigned license resource.",
        SerializedName = @"assignedLicense",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Models.ILicense) })]
        Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Models.ILicense EsuProfileAssignedLicense { get; set; }
        /// <summary>The guid id of the license.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The guid id of the license.",
        SerializedName = @"assignedLicenseImmutableId",
        PossibleTypes = new [] { typeof(string) })]
        string EsuProfileAssignedLicenseImmutableId { get;  }
        /// <summary>Indicates the eligibility state of Esu.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"Indicates the eligibility state of Esu.",
        SerializedName = @"esuEligibility",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.PSArgumentCompleterAttribute("Eligible", "Ineligible", "Unknown")]
        string EsuProfileEsuEligibility { get;  }
        /// <summary>The list of ESU keys.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The list of ESU keys.",
        SerializedName = @"esuKeys",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Models.IEsuKey) })]
        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Models.IEsuKey> EsuProfileEsuKey { get;  }
        /// <summary>Indicates whether there is an ESU Key currently active for the machine.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"Indicates whether there is an ESU Key currently active for the machine.",
        SerializedName = @"esuKeyState",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.PSArgumentCompleterAttribute("Inactive", "Active")]
        string EsuProfileEsuKeyState { get;  }
        /// <summary>Describes the license assignment state (Assigned or NotAssigned).</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Describes the license assignment state (Assigned or NotAssigned).",
        SerializedName = @"licenseAssignmentState",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.PSArgumentCompleterAttribute("Assigned", "NotAssigned")]
        string EsuProfileLicenseAssignmentState { get; set; }
        /// <summary>The type of the Esu servers.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The type of the Esu servers.",
        SerializedName = @"serverType",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.PSArgumentCompleterAttribute("Standard", "Datacenter")]
        string EsuProfileServerType { get;  }
        /// <summary>Indicates the license channel.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"Indicates the license channel.",
        SerializedName = @"licenseChannel",
        PossibleTypes = new [] { typeof(string) })]
        string LicenseChannel { get;  }
        /// <summary>Indicates the license status of the OS.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"Indicates the license status of the OS.",
        SerializedName = @"licenseStatus",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.PSArgumentCompleterAttribute("Unlicensed", "Licensed", "OOBGrace", "OOTGrace", "NonGenuineGrace", "Notification", "ExtendedGrace")]
        string LicenseStatus { get;  }
        /// <summary>The timestamp in UTC when the billing starts.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The timestamp in UTC when the billing starts.",
        SerializedName = @"billingStartDate",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? ProductProfileBillingStartDate { get;  }
        /// <summary>The timestamp in UTC when the user disenrolled the feature.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The timestamp in UTC when the user disenrolled the feature.",
        SerializedName = @"disenrollmentDate",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? ProductProfileDisenrollmentDate { get;  }
        /// <summary>The timestamp in UTC when the user enrolls the feature.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The timestamp in UTC when the user enrolls the feature.",
        SerializedName = @"enrollmentDate",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? ProductProfileEnrollmentDate { get;  }
        /// <summary>The list of product features.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The list of product features.",
        SerializedName = @"productFeatures",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Models.IProductFeature) })]
        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Models.IProductFeature> ProductProfileProductFeature { get;  }
        /// <summary>Indicates the product type of the license.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"Indicates the product type of the license.",
        SerializedName = @"productType",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.PSArgumentCompleterAttribute("WindowsServer", "WindowsIoTEnterprise")]
        string ProductProfileProductType { get;  }
        /// <summary>Indicates the subscription status of the product.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"Indicates the subscription status of the product.",
        SerializedName = @"subscriptionStatus",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.PSArgumentCompleterAttribute("Unknown", "Enabling", "Enabled", "Disabled")]
        string ProductProfileSubscriptionStatus { get;  }
        /// <summary>
        /// Specifies if this machine is licensed as part of a Software Assurance agreement.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"Specifies if this machine is licensed as part of a Software Assurance agreement.",
        SerializedName = @"softwareAssuranceCustomer",
        PossibleTypes = new [] { typeof(bool) })]
        bool? SoftwareAssuranceCustomer { get;  }

    }
    /// License Profile Instance View in Machine Properties.
    internal partial interface ILicenseProfileMachineInstanceViewInternal

    {
        /// <summary>Properties for the Machine ESU profile.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Models.ILicenseProfileMachineInstanceViewEsuProperties EsuProfile { get; set; }
        /// <summary>The assigned license resource.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Models.ILicense EsuProfileAssignedLicense { get; set; }
        /// <summary>The guid id of the license.</summary>
        string EsuProfileAssignedLicenseImmutableId { get; set; }
        /// <summary>Indicates the eligibility state of Esu.</summary>
        [global::Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.PSArgumentCompleterAttribute("Eligible", "Ineligible", "Unknown")]
        string EsuProfileEsuEligibility { get; set; }
        /// <summary>The list of ESU keys.</summary>
        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Models.IEsuKey> EsuProfileEsuKey { get; set; }
        /// <summary>Indicates whether there is an ESU Key currently active for the machine.</summary>
        [global::Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.PSArgumentCompleterAttribute("Inactive", "Active")]
        string EsuProfileEsuKeyState { get; set; }
        /// <summary>Describes the license assignment state (Assigned or NotAssigned).</summary>
        [global::Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.PSArgumentCompleterAttribute("Assigned", "NotAssigned")]
        string EsuProfileLicenseAssignmentState { get; set; }
        /// <summary>The type of the Esu servers.</summary>
        [global::Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.PSArgumentCompleterAttribute("Standard", "Datacenter")]
        string EsuProfileServerType { get; set; }
        /// <summary>Indicates the license channel.</summary>
        string LicenseChannel { get; set; }
        /// <summary>Indicates the license status of the OS.</summary>
        [global::Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.PSArgumentCompleterAttribute("Unlicensed", "Licensed", "OOBGrace", "OOTGrace", "NonGenuineGrace", "Notification", "ExtendedGrace")]
        string LicenseStatus { get; set; }
        /// <summary>Hybrid Compute Product Profile properties</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Models.ILicenseProfileArmProductProfileProperties ProductProfile { get; set; }
        /// <summary>The timestamp in UTC when the billing starts.</summary>
        global::System.DateTime? ProductProfileBillingStartDate { get; set; }
        /// <summary>The timestamp in UTC when the user disenrolled the feature.</summary>
        global::System.DateTime? ProductProfileDisenrollmentDate { get; set; }
        /// <summary>The timestamp in UTC when the user enrolls the feature.</summary>
        global::System.DateTime? ProductProfileEnrollmentDate { get; set; }
        /// <summary>The list of product features.</summary>
        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Models.IProductFeature> ProductProfileProductFeature { get; set; }
        /// <summary>Indicates the product type of the license.</summary>
        [global::Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.PSArgumentCompleterAttribute("WindowsServer", "WindowsIoTEnterprise")]
        string ProductProfileProductType { get; set; }
        /// <summary>Indicates the subscription status of the product.</summary>
        [global::Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.PSArgumentCompleterAttribute("Unknown", "Enabling", "Enabled", "Disabled")]
        string ProductProfileSubscriptionStatus { get; set; }

        Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Models.ILicenseProfileMachineInstanceViewSoftwareAssurance SoftwareAssurance { get; set; }
        /// <summary>
        /// Specifies if this machine is licensed as part of a Software Assurance agreement.
        /// </summary>
        bool? SoftwareAssuranceCustomer { get; set; }

    }
}