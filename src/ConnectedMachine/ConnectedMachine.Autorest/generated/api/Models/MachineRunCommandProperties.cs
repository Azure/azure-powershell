// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Models
{
    using static Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Runtime.Extensions;

    /// <summary>Describes the properties of a run command.</summary>
    public partial class MachineRunCommandProperties :
        Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Models.IMachineRunCommandProperties,
        Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Models.IMachineRunCommandPropertiesInternal
    {

        /// <summary>Backing field for <see cref="AsyncExecution" /> property.</summary>
        private bool? _asyncExecution;

        /// <summary>
        /// Optional. If set to true, provisioning will complete as soon as script starts and will not wait for script to complete.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Origin(Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.PropertyOrigin.Owned)]
        public bool? AsyncExecution { get => this._asyncExecution; set => this._asyncExecution = value; }

        /// <summary>Backing field for <see cref="ErrorBlobManagedIdentity" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Models.IRunCommandManagedIdentity _errorBlobManagedIdentity;

        /// <summary>
        /// User-assigned managed identity that has access to errorBlobUri storage blob. Use an empty object in case of system-assigned
        /// identity. Make sure managed identity has been given access to blob's container with 'Storage Blob Data Contributor' role
        /// assignment. In case of user-assigned identity, make sure you add it under VM's identity. For more info on managed identity
        /// and Run Command, refer https://aka.ms/ManagedIdentity and https://aka.ms/RunCommandManaged
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Origin(Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Models.IRunCommandManagedIdentity ErrorBlobManagedIdentity { get => (this._errorBlobManagedIdentity = this._errorBlobManagedIdentity ?? new Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Models.RunCommandManagedIdentity()); set => this._errorBlobManagedIdentity = value; }

        /// <summary>
        /// Client Id (GUID value) of the user-assigned managed identity. ObjectId should not be used if this is provided.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Origin(Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.PropertyOrigin.Inlined)]
        public string ErrorBlobManagedIdentityClientId { get => ((Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Models.IRunCommandManagedIdentityInternal)ErrorBlobManagedIdentity).ClientId; set => ((Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Models.IRunCommandManagedIdentityInternal)ErrorBlobManagedIdentity).ClientId = value ?? null; }

        /// <summary>
        /// Object Id (GUID value) of the user-assigned managed identity. ClientId should not be used if this is provided.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Origin(Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.PropertyOrigin.Inlined)]
        public string ErrorBlobManagedIdentityObjectId { get => ((Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Models.IRunCommandManagedIdentityInternal)ErrorBlobManagedIdentity).ObjectId; set => ((Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Models.IRunCommandManagedIdentityInternal)ErrorBlobManagedIdentity).ObjectId = value ?? null; }

        /// <summary>Backing field for <see cref="ErrorBlobUri" /> property.</summary>
        private string _errorBlobUri;

        /// <summary>
        /// Specifies the Azure storage blob where script error stream will be uploaded. Use a SAS URI with read, append, create,
        /// write access OR use managed identity to provide the VM access to the blob. Refer errorBlobManagedIdentity parameter.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Origin(Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.PropertyOrigin.Owned)]
        public string ErrorBlobUri { get => this._errorBlobUri; set => this._errorBlobUri = value; }

        /// <summary>Backing field for <see cref="InstanceView" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Models.IMachineRunCommandInstanceView _instanceView;

        /// <summary>The machine run command instance view.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Origin(Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Models.IMachineRunCommandInstanceView InstanceView { get => (this._instanceView = this._instanceView ?? new Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Models.MachineRunCommandInstanceView()); }

        /// <summary>Script end time.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Origin(Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.PropertyOrigin.Inlined)]
        public global::System.DateTime? InstanceViewEndTime { get => ((Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Models.IMachineRunCommandInstanceViewInternal)InstanceView).EndTime; set => ((Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Models.IMachineRunCommandInstanceViewInternal)InstanceView).EndTime = value ?? default(global::System.DateTime); }

        /// <summary>Script error stream.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Origin(Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.PropertyOrigin.Inlined)]
        public string InstanceViewError { get => ((Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Models.IMachineRunCommandInstanceViewInternal)InstanceView).Error; set => ((Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Models.IMachineRunCommandInstanceViewInternal)InstanceView).Error = value ?? null; }

        /// <summary>Communicate script configuration errors or execution messages.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Origin(Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.PropertyOrigin.Inlined)]
        public string InstanceViewExecutionMessage { get => ((Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Models.IMachineRunCommandInstanceViewInternal)InstanceView).ExecutionMessage; set => ((Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Models.IMachineRunCommandInstanceViewInternal)InstanceView).ExecutionMessage = value ?? null; }

        /// <summary>Script execution status.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Origin(Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.PropertyOrigin.Inlined)]
        public string InstanceViewExecutionState { get => ((Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Models.IMachineRunCommandInstanceViewInternal)InstanceView).ExecutionState; set => ((Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Models.IMachineRunCommandInstanceViewInternal)InstanceView).ExecutionState = value ?? null; }

        /// <summary>Exit code returned from script execution.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Origin(Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.PropertyOrigin.Inlined)]
        public int? InstanceViewExitCode { get => ((Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Models.IMachineRunCommandInstanceViewInternal)InstanceView).ExitCode; set => ((Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Models.IMachineRunCommandInstanceViewInternal)InstanceView).ExitCode = value ?? default(int); }

        /// <summary>Script output stream.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Origin(Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.PropertyOrigin.Inlined)]
        public string InstanceViewOutput { get => ((Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Models.IMachineRunCommandInstanceViewInternal)InstanceView).Output; set => ((Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Models.IMachineRunCommandInstanceViewInternal)InstanceView).Output = value ?? null; }

        /// <summary>Script start time.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Origin(Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.PropertyOrigin.Inlined)]
        public global::System.DateTime? InstanceViewStartTime { get => ((Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Models.IMachineRunCommandInstanceViewInternal)InstanceView).StartTime; set => ((Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Models.IMachineRunCommandInstanceViewInternal)InstanceView).StartTime = value ?? default(global::System.DateTime); }

        /// <summary>The status information.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Origin(Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.PropertyOrigin.Inlined)]
        public System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Models.IExtensionsResourceStatus> InstanceViewStatuses { get => ((Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Models.IMachineRunCommandInstanceViewInternal)InstanceView).Statuses; set => ((Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Models.IMachineRunCommandInstanceViewInternal)InstanceView).Statuses = value ?? null /* arrayOf */; }

        /// <summary>Internal Acessors for ErrorBlobManagedIdentity</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Models.IRunCommandManagedIdentity Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Models.IMachineRunCommandPropertiesInternal.ErrorBlobManagedIdentity { get => (this._errorBlobManagedIdentity = this._errorBlobManagedIdentity ?? new Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Models.RunCommandManagedIdentity()); set { {_errorBlobManagedIdentity = value;} } }

        /// <summary>Internal Acessors for InstanceView</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Models.IMachineRunCommandInstanceView Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Models.IMachineRunCommandPropertiesInternal.InstanceView { get => (this._instanceView = this._instanceView ?? new Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Models.MachineRunCommandInstanceView()); set { {_instanceView = value;} } }

        /// <summary>Internal Acessors for OutputBlobManagedIdentity</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Models.IRunCommandManagedIdentity Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Models.IMachineRunCommandPropertiesInternal.OutputBlobManagedIdentity { get => (this._outputBlobManagedIdentity = this._outputBlobManagedIdentity ?? new Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Models.RunCommandManagedIdentity()); set { {_outputBlobManagedIdentity = value;} } }

        /// <summary>Internal Acessors for ProvisioningState</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Models.IMachineRunCommandPropertiesInternal.ProvisioningState { get => this._provisioningState; set { {_provisioningState = value;} } }

        /// <summary>Internal Acessors for Source</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Models.IMachineRunCommandScriptSource Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Models.IMachineRunCommandPropertiesInternal.Source { get => (this._source = this._source ?? new Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Models.MachineRunCommandScriptSource()); set { {_source = value;} } }

        /// <summary>Internal Acessors for SourceScriptUriManagedIdentity</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Models.IRunCommandManagedIdentity Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Models.IMachineRunCommandPropertiesInternal.SourceScriptUriManagedIdentity { get => ((Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Models.IMachineRunCommandScriptSourceInternal)Source).ScriptUriManagedIdentity; set => ((Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Models.IMachineRunCommandScriptSourceInternal)Source).ScriptUriManagedIdentity = value; }

        /// <summary>Backing field for <see cref="OutputBlobManagedIdentity" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Models.IRunCommandManagedIdentity _outputBlobManagedIdentity;

        /// <summary>
        /// User-assigned managed identity that has access to outputBlobUri storage blob. Use an empty object in case of system-assigned
        /// identity. Make sure managed identity has been given access to blob's container with 'Storage Blob Data Contributor' role
        /// assignment. In case of user-assigned identity, make sure you add it under VM's identity. For more info on managed identity
        /// and Run Command, refer https://aka.ms/ManagedIdentity and https://aka.ms/RunCommandManaged
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Origin(Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Models.IRunCommandManagedIdentity OutputBlobManagedIdentity { get => (this._outputBlobManagedIdentity = this._outputBlobManagedIdentity ?? new Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Models.RunCommandManagedIdentity()); set => this._outputBlobManagedIdentity = value; }

        /// <summary>
        /// Client Id (GUID value) of the user-assigned managed identity. ObjectId should not be used if this is provided.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Origin(Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.PropertyOrigin.Inlined)]
        public string OutputBlobManagedIdentityClientId { get => ((Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Models.IRunCommandManagedIdentityInternal)OutputBlobManagedIdentity).ClientId; set => ((Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Models.IRunCommandManagedIdentityInternal)OutputBlobManagedIdentity).ClientId = value ?? null; }

        /// <summary>
        /// Object Id (GUID value) of the user-assigned managed identity. ClientId should not be used if this is provided.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Origin(Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.PropertyOrigin.Inlined)]
        public string OutputBlobManagedIdentityObjectId { get => ((Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Models.IRunCommandManagedIdentityInternal)OutputBlobManagedIdentity).ObjectId; set => ((Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Models.IRunCommandManagedIdentityInternal)OutputBlobManagedIdentity).ObjectId = value ?? null; }

        /// <summary>Backing field for <see cref="OutputBlobUri" /> property.</summary>
        private string _outputBlobUri;

        /// <summary>
        /// Specifies the Azure storage blob where script output stream will be uploaded. Use a SAS URI with read, append, create,
        /// write access OR use managed identity to provide the VM access to the blob. Refer outputBlobManagedIdentity parameter.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Origin(Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.PropertyOrigin.Owned)]
        public string OutputBlobUri { get => this._outputBlobUri; set => this._outputBlobUri = value; }

        /// <summary>Backing field for <see cref="Parameter" /> property.</summary>
        private System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Models.IRunCommandInputParameter> _parameter;

        /// <summary>The parameters used by the script.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Origin(Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.PropertyOrigin.Owned)]
        public System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Models.IRunCommandInputParameter> Parameter { get => this._parameter; set => this._parameter = value; }

        /// <summary>Backing field for <see cref="ProtectedParameter" /> property.</summary>
        private System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Models.IRunCommandInputParameter> _protectedParameter;

        /// <summary>The parameters used by the script.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Origin(Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.PropertyOrigin.Owned)]
        public System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Models.IRunCommandInputParameter> ProtectedParameter { get => this._protectedParameter; set => this._protectedParameter = value; }

        /// <summary>Backing field for <see cref="ProvisioningState" /> property.</summary>
        private string _provisioningState;

        /// <summary>The provisioning state, which only appears in the response.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Origin(Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.PropertyOrigin.Owned)]
        public string ProvisioningState { get => this._provisioningState; }

        /// <summary>Backing field for <see cref="RunAsPassword" /> property.</summary>
        private string _runAsPassword;

        /// <summary>
        /// Specifies the user account password on the machine when executing the run command.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Origin(Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.PropertyOrigin.Owned)]
        public string RunAsPassword { get => this._runAsPassword; set => this._runAsPassword = value; }

        /// <summary>Backing field for <see cref="RunAsUser" /> property.</summary>
        private string _runAsUser;

        /// <summary>Specifies the user account on the machine when executing the run command.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Origin(Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.PropertyOrigin.Owned)]
        public string RunAsUser { get => this._runAsUser; set => this._runAsUser = value; }

        /// <summary>
        /// Client Id (GUID value) of the user-assigned managed identity. ObjectId should not be used if this is provided.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Origin(Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.PropertyOrigin.Inlined)]
        public string ScriptUriManagedIdentityClientId { get => ((Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Models.IMachineRunCommandScriptSourceInternal)Source).ScriptUriManagedIdentityClientId; set => ((Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Models.IMachineRunCommandScriptSourceInternal)Source).ScriptUriManagedIdentityClientId = value ?? null; }

        /// <summary>
        /// Object Id (GUID value) of the user-assigned managed identity. ClientId should not be used if this is provided.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Origin(Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.PropertyOrigin.Inlined)]
        public string ScriptUriManagedIdentityObjectId { get => ((Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Models.IMachineRunCommandScriptSourceInternal)Source).ScriptUriManagedIdentityObjectId; set => ((Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Models.IMachineRunCommandScriptSourceInternal)Source).ScriptUriManagedIdentityObjectId = value ?? null; }

        /// <summary>Backing field for <see cref="Source" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Models.IMachineRunCommandScriptSource _source;

        /// <summary>The source of the run command script.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Origin(Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Models.IMachineRunCommandScriptSource Source { get => (this._source = this._source ?? new Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Models.MachineRunCommandScriptSource()); set => this._source = value; }

        /// <summary>Specifies the commandId of predefined built-in script.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Origin(Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.PropertyOrigin.Inlined)]
        public string SourceCommandId { get => ((Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Models.IMachineRunCommandScriptSourceInternal)Source).CommandId; set => ((Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Models.IMachineRunCommandScriptSourceInternal)Source).CommandId = value ?? null; }

        /// <summary>Specifies the script content to be executed on the machine.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Origin(Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.PropertyOrigin.Inlined)]
        public string SourceScript { get => ((Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Models.IMachineRunCommandScriptSourceInternal)Source).Script; set => ((Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Models.IMachineRunCommandScriptSourceInternal)Source).Script = value ?? null; }

        /// <summary>
        /// Specifies the script download location. It can be either SAS URI of an Azure storage blob with read access or public URI.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Origin(Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.PropertyOrigin.Inlined)]
        public string SourceScriptUri { get => ((Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Models.IMachineRunCommandScriptSourceInternal)Source).ScriptUri; set => ((Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Models.IMachineRunCommandScriptSourceInternal)Source).ScriptUri = value ?? null; }

        /// <summary>Backing field for <see cref="TimeoutInSecond" /> property.</summary>
        private int? _timeoutInSecond;

        /// <summary>The timeout in seconds to execute the run command.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Origin(Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.PropertyOrigin.Owned)]
        public int? TimeoutInSecond { get => this._timeoutInSecond; set => this._timeoutInSecond = value; }

        /// <summary>Creates an new <see cref="MachineRunCommandProperties" /> instance.</summary>
        public MachineRunCommandProperties()
        {

        }
    }
    /// Describes the properties of a run command.
    public partial interface IMachineRunCommandProperties :
        Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Runtime.IJsonSerializable
    {
        /// <summary>
        /// Optional. If set to true, provisioning will complete as soon as script starts and will not wait for script to complete.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Optional. If set to true, provisioning will complete as soon as script starts and will not wait for script to complete.",
        SerializedName = @"asyncExecution",
        PossibleTypes = new [] { typeof(bool) })]
        bool? AsyncExecution { get; set; }
        /// <summary>
        /// Client Id (GUID value) of the user-assigned managed identity. ObjectId should not be used if this is provided.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Client Id (GUID value) of the user-assigned managed identity. ObjectId should not be used if this is provided.",
        SerializedName = @"clientId",
        PossibleTypes = new [] { typeof(string) })]
        string ErrorBlobManagedIdentityClientId { get; set; }
        /// <summary>
        /// Object Id (GUID value) of the user-assigned managed identity. ClientId should not be used if this is provided.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Object Id (GUID value) of the user-assigned managed identity. ClientId should not be used if this is provided.",
        SerializedName = @"objectId",
        PossibleTypes = new [] { typeof(string) })]
        string ErrorBlobManagedIdentityObjectId { get; set; }
        /// <summary>
        /// Specifies the Azure storage blob where script error stream will be uploaded. Use a SAS URI with read, append, create,
        /// write access OR use managed identity to provide the VM access to the blob. Refer errorBlobManagedIdentity parameter.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Specifies the Azure storage blob where script error stream will be uploaded. Use a SAS URI with read, append, create, write access OR use managed identity to provide the VM access to the blob. Refer errorBlobManagedIdentity parameter.",
        SerializedName = @"errorBlobUri",
        PossibleTypes = new [] { typeof(string) })]
        string ErrorBlobUri { get; set; }
        /// <summary>Script end time.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"Script end time.",
        SerializedName = @"endTime",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? InstanceViewEndTime { get;  }
        /// <summary>Script error stream.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"Script error stream.",
        SerializedName = @"error",
        PossibleTypes = new [] { typeof(string) })]
        string InstanceViewError { get;  }
        /// <summary>Communicate script configuration errors or execution messages.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"Communicate script configuration errors or execution messages.",
        SerializedName = @"executionMessage",
        PossibleTypes = new [] { typeof(string) })]
        string InstanceViewExecutionMessage { get;  }
        /// <summary>Script execution status.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"Script execution status.",
        SerializedName = @"executionState",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.PSArgumentCompleterAttribute("Unknown", "Pending", "Running", "Failed", "Succeeded", "TimedOut", "Canceled")]
        string InstanceViewExecutionState { get;  }
        /// <summary>Exit code returned from script execution.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"Exit code returned from script execution.",
        SerializedName = @"exitCode",
        PossibleTypes = new [] { typeof(int) })]
        int? InstanceViewExitCode { get;  }
        /// <summary>Script output stream.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"Script output stream.",
        SerializedName = @"output",
        PossibleTypes = new [] { typeof(string) })]
        string InstanceViewOutput { get;  }
        /// <summary>Script start time.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"Script start time.",
        SerializedName = @"startTime",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? InstanceViewStartTime { get;  }
        /// <summary>The status information.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The  status information.",
        SerializedName = @"statuses",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Models.IExtensionsResourceStatus) })]
        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Models.IExtensionsResourceStatus> InstanceViewStatuses { get;  }
        /// <summary>
        /// Client Id (GUID value) of the user-assigned managed identity. ObjectId should not be used if this is provided.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Client Id (GUID value) of the user-assigned managed identity. ObjectId should not be used if this is provided.",
        SerializedName = @"clientId",
        PossibleTypes = new [] { typeof(string) })]
        string OutputBlobManagedIdentityClientId { get; set; }
        /// <summary>
        /// Object Id (GUID value) of the user-assigned managed identity. ClientId should not be used if this is provided.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Object Id (GUID value) of the user-assigned managed identity. ClientId should not be used if this is provided.",
        SerializedName = @"objectId",
        PossibleTypes = new [] { typeof(string) })]
        string OutputBlobManagedIdentityObjectId { get; set; }
        /// <summary>
        /// Specifies the Azure storage blob where script output stream will be uploaded. Use a SAS URI with read, append, create,
        /// write access OR use managed identity to provide the VM access to the blob. Refer outputBlobManagedIdentity parameter.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Specifies the Azure storage blob where script output stream will be uploaded. Use a SAS URI with read, append, create, write access OR use managed identity to provide the VM access to the blob. Refer outputBlobManagedIdentity parameter. ",
        SerializedName = @"outputBlobUri",
        PossibleTypes = new [] { typeof(string) })]
        string OutputBlobUri { get; set; }
        /// <summary>The parameters used by the script.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The parameters used by the script.",
        SerializedName = @"parameters",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Models.IRunCommandInputParameter) })]
        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Models.IRunCommandInputParameter> Parameter { get; set; }
        /// <summary>The parameters used by the script.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The parameters used by the script.",
        SerializedName = @"protectedParameters",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Models.IRunCommandInputParameter) })]
        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Models.IRunCommandInputParameter> ProtectedParameter { get; set; }
        /// <summary>The provisioning state, which only appears in the response.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The provisioning state, which only appears in the response.",
        SerializedName = @"provisioningState",
        PossibleTypes = new [] { typeof(string) })]
        string ProvisioningState { get;  }
        /// <summary>
        /// Specifies the user account password on the machine when executing the run command.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Specifies the user account password on the machine when executing the run command.",
        SerializedName = @"runAsPassword",
        PossibleTypes = new [] { typeof(string) })]
        string RunAsPassword { get; set; }
        /// <summary>Specifies the user account on the machine when executing the run command.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Specifies the user account on the machine when executing the run command.",
        SerializedName = @"runAsUser",
        PossibleTypes = new [] { typeof(string) })]
        string RunAsUser { get; set; }
        /// <summary>
        /// Client Id (GUID value) of the user-assigned managed identity. ObjectId should not be used if this is provided.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Client Id (GUID value) of the user-assigned managed identity. ObjectId should not be used if this is provided.",
        SerializedName = @"clientId",
        PossibleTypes = new [] { typeof(string) })]
        string ScriptUriManagedIdentityClientId { get; set; }
        /// <summary>
        /// Object Id (GUID value) of the user-assigned managed identity. ClientId should not be used if this is provided.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Object Id (GUID value) of the user-assigned managed identity. ClientId should not be used if this is provided.",
        SerializedName = @"objectId",
        PossibleTypes = new [] { typeof(string) })]
        string ScriptUriManagedIdentityObjectId { get; set; }
        /// <summary>Specifies the commandId of predefined built-in script.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Specifies the commandId of predefined built-in script.",
        SerializedName = @"commandId",
        PossibleTypes = new [] { typeof(string) })]
        string SourceCommandId { get; set; }
        /// <summary>Specifies the script content to be executed on the machine.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Specifies the script content to be executed on the machine.",
        SerializedName = @"script",
        PossibleTypes = new [] { typeof(string) })]
        string SourceScript { get; set; }
        /// <summary>
        /// Specifies the script download location. It can be either SAS URI of an Azure storage blob with read access or public URI.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Specifies the script download location. It can be either SAS URI of an Azure storage blob with read access or public URI.",
        SerializedName = @"scriptUri",
        PossibleTypes = new [] { typeof(string) })]
        string SourceScriptUri { get; set; }
        /// <summary>The timeout in seconds to execute the run command.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The timeout in seconds to execute the run command.",
        SerializedName = @"timeoutInSeconds",
        PossibleTypes = new [] { typeof(int) })]
        int? TimeoutInSecond { get; set; }

    }
    /// Describes the properties of a run command.
    internal partial interface IMachineRunCommandPropertiesInternal

    {
        /// <summary>
        /// Optional. If set to true, provisioning will complete as soon as script starts and will not wait for script to complete.
        /// </summary>
        bool? AsyncExecution { get; set; }
        /// <summary>
        /// User-assigned managed identity that has access to errorBlobUri storage blob. Use an empty object in case of system-assigned
        /// identity. Make sure managed identity has been given access to blob's container with 'Storage Blob Data Contributor' role
        /// assignment. In case of user-assigned identity, make sure you add it under VM's identity. For more info on managed identity
        /// and Run Command, refer https://aka.ms/ManagedIdentity and https://aka.ms/RunCommandManaged
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Models.IRunCommandManagedIdentity ErrorBlobManagedIdentity { get; set; }
        /// <summary>
        /// Client Id (GUID value) of the user-assigned managed identity. ObjectId should not be used if this is provided.
        /// </summary>
        string ErrorBlobManagedIdentityClientId { get; set; }
        /// <summary>
        /// Object Id (GUID value) of the user-assigned managed identity. ClientId should not be used if this is provided.
        /// </summary>
        string ErrorBlobManagedIdentityObjectId { get; set; }
        /// <summary>
        /// Specifies the Azure storage blob where script error stream will be uploaded. Use a SAS URI with read, append, create,
        /// write access OR use managed identity to provide the VM access to the blob. Refer errorBlobManagedIdentity parameter.
        /// </summary>
        string ErrorBlobUri { get; set; }
        /// <summary>The machine run command instance view.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Models.IMachineRunCommandInstanceView InstanceView { get; set; }
        /// <summary>Script end time.</summary>
        global::System.DateTime? InstanceViewEndTime { get; set; }
        /// <summary>Script error stream.</summary>
        string InstanceViewError { get; set; }
        /// <summary>Communicate script configuration errors or execution messages.</summary>
        string InstanceViewExecutionMessage { get; set; }
        /// <summary>Script execution status.</summary>
        [global::Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.PSArgumentCompleterAttribute("Unknown", "Pending", "Running", "Failed", "Succeeded", "TimedOut", "Canceled")]
        string InstanceViewExecutionState { get; set; }
        /// <summary>Exit code returned from script execution.</summary>
        int? InstanceViewExitCode { get; set; }
        /// <summary>Script output stream.</summary>
        string InstanceViewOutput { get; set; }
        /// <summary>Script start time.</summary>
        global::System.DateTime? InstanceViewStartTime { get; set; }
        /// <summary>The status information.</summary>
        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Models.IExtensionsResourceStatus> InstanceViewStatuses { get; set; }
        /// <summary>
        /// User-assigned managed identity that has access to outputBlobUri storage blob. Use an empty object in case of system-assigned
        /// identity. Make sure managed identity has been given access to blob's container with 'Storage Blob Data Contributor' role
        /// assignment. In case of user-assigned identity, make sure you add it under VM's identity. For more info on managed identity
        /// and Run Command, refer https://aka.ms/ManagedIdentity and https://aka.ms/RunCommandManaged
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Models.IRunCommandManagedIdentity OutputBlobManagedIdentity { get; set; }
        /// <summary>
        /// Client Id (GUID value) of the user-assigned managed identity. ObjectId should not be used if this is provided.
        /// </summary>
        string OutputBlobManagedIdentityClientId { get; set; }
        /// <summary>
        /// Object Id (GUID value) of the user-assigned managed identity. ClientId should not be used if this is provided.
        /// </summary>
        string OutputBlobManagedIdentityObjectId { get; set; }
        /// <summary>
        /// Specifies the Azure storage blob where script output stream will be uploaded. Use a SAS URI with read, append, create,
        /// write access OR use managed identity to provide the VM access to the blob. Refer outputBlobManagedIdentity parameter.
        /// </summary>
        string OutputBlobUri { get; set; }
        /// <summary>The parameters used by the script.</summary>
        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Models.IRunCommandInputParameter> Parameter { get; set; }
        /// <summary>The parameters used by the script.</summary>
        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Models.IRunCommandInputParameter> ProtectedParameter { get; set; }
        /// <summary>The provisioning state, which only appears in the response.</summary>
        string ProvisioningState { get; set; }
        /// <summary>
        /// Specifies the user account password on the machine when executing the run command.
        /// </summary>
        string RunAsPassword { get; set; }
        /// <summary>Specifies the user account on the machine when executing the run command.</summary>
        string RunAsUser { get; set; }
        /// <summary>
        /// Client Id (GUID value) of the user-assigned managed identity. ObjectId should not be used if this is provided.
        /// </summary>
        string ScriptUriManagedIdentityClientId { get; set; }
        /// <summary>
        /// Object Id (GUID value) of the user-assigned managed identity. ClientId should not be used if this is provided.
        /// </summary>
        string ScriptUriManagedIdentityObjectId { get; set; }
        /// <summary>The source of the run command script.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Models.IMachineRunCommandScriptSource Source { get; set; }
        /// <summary>Specifies the commandId of predefined built-in script.</summary>
        string SourceCommandId { get; set; }
        /// <summary>Specifies the script content to be executed on the machine.</summary>
        string SourceScript { get; set; }
        /// <summary>
        /// Specifies the script download location. It can be either SAS URI of an Azure storage blob with read access or public URI.
        /// </summary>
        string SourceScriptUri { get; set; }
        /// <summary>
        /// User-assigned managed identity that has access to scriptUri in case of Azure storage blob. Use an empty object in case
        /// of system-assigned identity. Make sure the Azure storage blob exists, and managed identity has been given access to blob's
        /// container with 'Storage Blob Data Reader' role assignment. In case of user-assigned identity, make sure you add it under
        /// VM's identity. For more info on managed identity and Run Command, refer https://aka.ms/ManagedIdentity and https://aka.ms/RunCommandManaged.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Models.IRunCommandManagedIdentity SourceScriptUriManagedIdentity { get; set; }
        /// <summary>The timeout in seconds to execute the run command.</summary>
        int? TimeoutInSecond { get; set; }

    }
}