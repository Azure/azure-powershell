// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Workloads.Models.Api20230401
{
    using static Microsoft.Azure.PowerShell.Cmdlets.Workloads.Runtime.Extensions;

    /// <summary>Describes the properties of a SAP monitor.</summary>
    public partial class MonitorProperties :
        Microsoft.Azure.PowerShell.Cmdlets.Workloads.Models.Api20230401.IMonitorProperties,
        Microsoft.Azure.PowerShell.Cmdlets.Workloads.Models.Api20230401.IMonitorPropertiesInternal
    {

        /// <summary>Backing field for <see cref="AppLocation" /> property.</summary>
        private string _appLocation;

        /// <summary>
        /// The SAP monitor resources will be deployed in the SAP monitoring region. The subnet region should be same as the SAP monitoring
        /// region.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Workloads.Origin(Microsoft.Azure.PowerShell.Cmdlets.Workloads.PropertyOrigin.Owned)]
        public string AppLocation { get => this._appLocation; set => this._appLocation = value; }

        /// <summary>Backing field for <see cref="Error" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Workloads.Models.Api20230401.IError _error;

        /// <summary>Defines the SAP monitor errors.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Workloads.Origin(Microsoft.Azure.PowerShell.Cmdlets.Workloads.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Workloads.Models.Api20230401.IError Error { get => (this._error = this._error ?? new Microsoft.Azure.PowerShell.Cmdlets.Workloads.Models.Api20230401.Error()); }

        /// <summary>Server-defined set of error codes.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Workloads.Origin(Microsoft.Azure.PowerShell.Cmdlets.Workloads.PropertyOrigin.Inlined)]
        public string ErrorCode { get => ((Microsoft.Azure.PowerShell.Cmdlets.Workloads.Models.Api20230401.IErrorInternal)Error).Code; }

        /// <summary>Array of details about specific errors that led to this reported error.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Workloads.Origin(Microsoft.Azure.PowerShell.Cmdlets.Workloads.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Workloads.Models.Api20230401.IError[] ErrorDetail { get => ((Microsoft.Azure.PowerShell.Cmdlets.Workloads.Models.Api20230401.IErrorInternal)Error).Detail; }

        /// <summary>
        /// Object containing more specific information than the current object about the error.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Workloads.Origin(Microsoft.Azure.PowerShell.Cmdlets.Workloads.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Workloads.Models.Api20230401.IErrorInnerError ErrorInnerError { get => ((Microsoft.Azure.PowerShell.Cmdlets.Workloads.Models.Api20230401.IErrorInternal)Error).InnerError; }

        /// <summary>Human-readable representation of the error.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Workloads.Origin(Microsoft.Azure.PowerShell.Cmdlets.Workloads.PropertyOrigin.Inlined)]
        public string ErrorMessage { get => ((Microsoft.Azure.PowerShell.Cmdlets.Workloads.Models.Api20230401.IErrorInternal)Error).Message; }

        /// <summary>Target of the error.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Workloads.Origin(Microsoft.Azure.PowerShell.Cmdlets.Workloads.PropertyOrigin.Inlined)]
        public string ErrorTarget { get => ((Microsoft.Azure.PowerShell.Cmdlets.Workloads.Models.Api20230401.IErrorInternal)Error).Target; }

        /// <summary>Backing field for <see cref="LogAnalyticsWorkspaceArmId" /> property.</summary>
        private string _logAnalyticsWorkspaceArmId;

        /// <summary>The ARM ID of the Log Analytics Workspace that is used for SAP monitoring.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Workloads.Origin(Microsoft.Azure.PowerShell.Cmdlets.Workloads.PropertyOrigin.Owned)]
        public string LogAnalyticsWorkspaceArmId { get => this._logAnalyticsWorkspaceArmId; set => this._logAnalyticsWorkspaceArmId = value; }

        /// <summary>Backing field for <see cref="ManagedResourceGroupConfiguration" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Workloads.Models.Api20230401.IManagedRgConfiguration _managedResourceGroupConfiguration;

        /// <summary>Managed resource group configuration</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Workloads.Origin(Microsoft.Azure.PowerShell.Cmdlets.Workloads.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Workloads.Models.Api20230401.IManagedRgConfiguration ManagedResourceGroupConfiguration { get => (this._managedResourceGroupConfiguration = this._managedResourceGroupConfiguration ?? new Microsoft.Azure.PowerShell.Cmdlets.Workloads.Models.Api20230401.ManagedRgConfiguration()); set => this._managedResourceGroupConfiguration = value; }

        /// <summary>Managed resource group name</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Workloads.Origin(Microsoft.Azure.PowerShell.Cmdlets.Workloads.PropertyOrigin.Inlined)]
        public string ManagedResourceGroupConfigurationName { get => ((Microsoft.Azure.PowerShell.Cmdlets.Workloads.Models.Api20230401.IManagedRgConfigurationInternal)ManagedResourceGroupConfiguration).Name; set => ((Microsoft.Azure.PowerShell.Cmdlets.Workloads.Models.Api20230401.IManagedRgConfigurationInternal)ManagedResourceGroupConfiguration).Name = value ?? null; }

        /// <summary>Internal Acessors for Error</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Workloads.Models.Api20230401.IError Microsoft.Azure.PowerShell.Cmdlets.Workloads.Models.Api20230401.IMonitorPropertiesInternal.Error { get => (this._error = this._error ?? new Microsoft.Azure.PowerShell.Cmdlets.Workloads.Models.Api20230401.Error()); set { {_error = value;} } }

        /// <summary>Internal Acessors for ErrorCode</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Workloads.Models.Api20230401.IMonitorPropertiesInternal.ErrorCode { get => ((Microsoft.Azure.PowerShell.Cmdlets.Workloads.Models.Api20230401.IErrorInternal)Error).Code; set => ((Microsoft.Azure.PowerShell.Cmdlets.Workloads.Models.Api20230401.IErrorInternal)Error).Code = value; }

        /// <summary>Internal Acessors for ErrorDetail</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Workloads.Models.Api20230401.IError[] Microsoft.Azure.PowerShell.Cmdlets.Workloads.Models.Api20230401.IMonitorPropertiesInternal.ErrorDetail { get => ((Microsoft.Azure.PowerShell.Cmdlets.Workloads.Models.Api20230401.IErrorInternal)Error).Detail; set => ((Microsoft.Azure.PowerShell.Cmdlets.Workloads.Models.Api20230401.IErrorInternal)Error).Detail = value; }

        /// <summary>Internal Acessors for ErrorInnerError</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Workloads.Models.Api20230401.IErrorInnerError Microsoft.Azure.PowerShell.Cmdlets.Workloads.Models.Api20230401.IMonitorPropertiesInternal.ErrorInnerError { get => ((Microsoft.Azure.PowerShell.Cmdlets.Workloads.Models.Api20230401.IErrorInternal)Error).InnerError; set => ((Microsoft.Azure.PowerShell.Cmdlets.Workloads.Models.Api20230401.IErrorInternal)Error).InnerError = value; }

        /// <summary>Internal Acessors for ErrorMessage</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Workloads.Models.Api20230401.IMonitorPropertiesInternal.ErrorMessage { get => ((Microsoft.Azure.PowerShell.Cmdlets.Workloads.Models.Api20230401.IErrorInternal)Error).Message; set => ((Microsoft.Azure.PowerShell.Cmdlets.Workloads.Models.Api20230401.IErrorInternal)Error).Message = value; }

        /// <summary>Internal Acessors for ErrorTarget</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Workloads.Models.Api20230401.IMonitorPropertiesInternal.ErrorTarget { get => ((Microsoft.Azure.PowerShell.Cmdlets.Workloads.Models.Api20230401.IErrorInternal)Error).Target; set => ((Microsoft.Azure.PowerShell.Cmdlets.Workloads.Models.Api20230401.IErrorInternal)Error).Target = value; }

        /// <summary>Internal Acessors for ManagedResourceGroupConfiguration</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Workloads.Models.Api20230401.IManagedRgConfiguration Microsoft.Azure.PowerShell.Cmdlets.Workloads.Models.Api20230401.IMonitorPropertiesInternal.ManagedResourceGroupConfiguration { get => (this._managedResourceGroupConfiguration = this._managedResourceGroupConfiguration ?? new Microsoft.Azure.PowerShell.Cmdlets.Workloads.Models.Api20230401.ManagedRgConfiguration()); set { {_managedResourceGroupConfiguration = value;} } }

        /// <summary>Internal Acessors for MsiArmId</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Workloads.Models.Api20230401.IMonitorPropertiesInternal.MsiArmId { get => this._msiArmId; set { {_msiArmId = value;} } }

        /// <summary>Internal Acessors for ProvisioningState</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Workloads.Support.WorkloadMonitorProvisioningState? Microsoft.Azure.PowerShell.Cmdlets.Workloads.Models.Api20230401.IMonitorPropertiesInternal.ProvisioningState { get => this._provisioningState; set { {_provisioningState = value;} } }

        /// <summary>Internal Acessors for StorageAccountArmId</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Workloads.Models.Api20230401.IMonitorPropertiesInternal.StorageAccountArmId { get => this._storageAccountArmId; set { {_storageAccountArmId = value;} } }

        /// <summary>Backing field for <see cref="MonitorSubnet" /> property.</summary>
        private string _monitorSubnet;

        /// <summary>The subnet which the SAP monitor will be deployed in</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Workloads.Origin(Microsoft.Azure.PowerShell.Cmdlets.Workloads.PropertyOrigin.Owned)]
        public string MonitorSubnet { get => this._monitorSubnet; set => this._monitorSubnet = value; }

        /// <summary>Backing field for <see cref="MsiArmId" /> property.</summary>
        private string _msiArmId;

        /// <summary>The ARM ID of the MSI used for SAP monitoring.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Workloads.Origin(Microsoft.Azure.PowerShell.Cmdlets.Workloads.PropertyOrigin.Owned)]
        public string MsiArmId { get => this._msiArmId; }

        /// <summary>Backing field for <see cref="ProvisioningState" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Workloads.Support.WorkloadMonitorProvisioningState? _provisioningState;

        /// <summary>State of provisioning of the SAP monitor.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Workloads.Origin(Microsoft.Azure.PowerShell.Cmdlets.Workloads.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.Workloads.Support.WorkloadMonitorProvisioningState? ProvisioningState { get => this._provisioningState; }

        /// <summary>Backing field for <see cref="RoutingPreference" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Workloads.Support.RoutingPreference? _routingPreference;

        /// <summary>
        /// Sets the routing preference of the SAP monitor. By default only RFC1918 traffic is routed to the customer VNET.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Workloads.Origin(Microsoft.Azure.PowerShell.Cmdlets.Workloads.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.Workloads.Support.RoutingPreference? RoutingPreference { get => this._routingPreference; set => this._routingPreference = value; }

        /// <summary>Backing field for <see cref="StorageAccountArmId" /> property.</summary>
        private string _storageAccountArmId;

        /// <summary>The ARM ID of the Storage account used for SAP monitoring.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Workloads.Origin(Microsoft.Azure.PowerShell.Cmdlets.Workloads.PropertyOrigin.Owned)]
        public string StorageAccountArmId { get => this._storageAccountArmId; }

        /// <summary>Backing field for <see cref="ZoneRedundancyPreference" /> property.</summary>
        private string _zoneRedundancyPreference;

        /// <summary>
        /// Sets the preference for zone redundancy on resources created for the SAP monitor. By default resources will be created
        /// which do not support zone redundancy.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Workloads.Origin(Microsoft.Azure.PowerShell.Cmdlets.Workloads.PropertyOrigin.Owned)]
        public string ZoneRedundancyPreference { get => this._zoneRedundancyPreference; set => this._zoneRedundancyPreference = value; }

        /// <summary>Creates an new <see cref="MonitorProperties" /> instance.</summary>
        public MonitorProperties()
        {

        }
    }
    /// Describes the properties of a SAP monitor.
    public partial interface IMonitorProperties :
        Microsoft.Azure.PowerShell.Cmdlets.Workloads.Runtime.IJsonSerializable
    {
        /// <summary>
        /// The SAP monitor resources will be deployed in the SAP monitoring region. The subnet region should be same as the SAP monitoring
        /// region.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Workloads.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The SAP monitor resources will be deployed in the SAP monitoring region. The subnet region should be same as the SAP monitoring region.",
        SerializedName = @"appLocation",
        PossibleTypes = new [] { typeof(string) })]
        string AppLocation { get; set; }
        /// <summary>Server-defined set of error codes.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Workloads.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Server-defined set of error codes.",
        SerializedName = @"code",
        PossibleTypes = new [] { typeof(string) })]
        string ErrorCode { get;  }
        /// <summary>Array of details about specific errors that led to this reported error.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Workloads.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Array of details about specific errors that led to this reported error.",
        SerializedName = @"details",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Workloads.Models.Api20230401.IError) })]
        Microsoft.Azure.PowerShell.Cmdlets.Workloads.Models.Api20230401.IError[] ErrorDetail { get;  }
        /// <summary>
        /// Object containing more specific information than the current object about the error.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Workloads.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Object containing more specific information than  the current object about the error.",
        SerializedName = @"innerError",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Workloads.Models.Api20230401.IErrorInnerError) })]
        Microsoft.Azure.PowerShell.Cmdlets.Workloads.Models.Api20230401.IErrorInnerError ErrorInnerError { get;  }
        /// <summary>Human-readable representation of the error.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Workloads.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Human-readable representation of the error.",
        SerializedName = @"message",
        PossibleTypes = new [] { typeof(string) })]
        string ErrorMessage { get;  }
        /// <summary>Target of the error.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Workloads.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Target of the error.",
        SerializedName = @"target",
        PossibleTypes = new [] { typeof(string) })]
        string ErrorTarget { get;  }
        /// <summary>The ARM ID of the Log Analytics Workspace that is used for SAP monitoring.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Workloads.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The ARM ID of the Log Analytics Workspace that is used for SAP monitoring.",
        SerializedName = @"logAnalyticsWorkspaceArmId",
        PossibleTypes = new [] { typeof(string) })]
        string LogAnalyticsWorkspaceArmId { get; set; }
        /// <summary>Managed resource group name</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Workloads.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Managed resource group name",
        SerializedName = @"name",
        PossibleTypes = new [] { typeof(string) })]
        string ManagedResourceGroupConfigurationName { get; set; }
        /// <summary>The subnet which the SAP monitor will be deployed in</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Workloads.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The subnet which the SAP monitor will be deployed in",
        SerializedName = @"monitorSubnet",
        PossibleTypes = new [] { typeof(string) })]
        string MonitorSubnet { get; set; }
        /// <summary>The ARM ID of the MSI used for SAP monitoring.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Workloads.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The ARM ID of the MSI used for SAP monitoring.",
        SerializedName = @"msiArmId",
        PossibleTypes = new [] { typeof(string) })]
        string MsiArmId { get;  }
        /// <summary>State of provisioning of the SAP monitor.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Workloads.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"State of provisioning of the SAP monitor.",
        SerializedName = @"provisioningState",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Workloads.Support.WorkloadMonitorProvisioningState) })]
        Microsoft.Azure.PowerShell.Cmdlets.Workloads.Support.WorkloadMonitorProvisioningState? ProvisioningState { get;  }
        /// <summary>
        /// Sets the routing preference of the SAP monitor. By default only RFC1918 traffic is routed to the customer VNET.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Workloads.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Sets the routing preference of the SAP monitor. By default only RFC1918 traffic is routed to the customer VNET.",
        SerializedName = @"routingPreference",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Workloads.Support.RoutingPreference) })]
        Microsoft.Azure.PowerShell.Cmdlets.Workloads.Support.RoutingPreference? RoutingPreference { get; set; }
        /// <summary>The ARM ID of the Storage account used for SAP monitoring.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Workloads.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The ARM ID of the Storage account used for SAP monitoring.",
        SerializedName = @"storageAccountArmId",
        PossibleTypes = new [] { typeof(string) })]
        string StorageAccountArmId { get;  }
        /// <summary>
        /// Sets the preference for zone redundancy on resources created for the SAP monitor. By default resources will be created
        /// which do not support zone redundancy.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Workloads.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Sets the preference for zone redundancy on resources created for the SAP monitor. By default resources will be created which do not support zone redundancy.",
        SerializedName = @"zoneRedundancyPreference",
        PossibleTypes = new [] { typeof(string) })]
        string ZoneRedundancyPreference { get; set; }

    }
    /// Describes the properties of a SAP monitor.
    internal partial interface IMonitorPropertiesInternal

    {
        /// <summary>
        /// The SAP monitor resources will be deployed in the SAP monitoring region. The subnet region should be same as the SAP monitoring
        /// region.
        /// </summary>
        string AppLocation { get; set; }
        /// <summary>Defines the SAP monitor errors.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Workloads.Models.Api20230401.IError Error { get; set; }
        /// <summary>Server-defined set of error codes.</summary>
        string ErrorCode { get; set; }
        /// <summary>Array of details about specific errors that led to this reported error.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Workloads.Models.Api20230401.IError[] ErrorDetail { get; set; }
        /// <summary>
        /// Object containing more specific information than the current object about the error.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Workloads.Models.Api20230401.IErrorInnerError ErrorInnerError { get; set; }
        /// <summary>Human-readable representation of the error.</summary>
        string ErrorMessage { get; set; }
        /// <summary>Target of the error.</summary>
        string ErrorTarget { get; set; }
        /// <summary>The ARM ID of the Log Analytics Workspace that is used for SAP monitoring.</summary>
        string LogAnalyticsWorkspaceArmId { get; set; }
        /// <summary>Managed resource group configuration</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Workloads.Models.Api20230401.IManagedRgConfiguration ManagedResourceGroupConfiguration { get; set; }
        /// <summary>Managed resource group name</summary>
        string ManagedResourceGroupConfigurationName { get; set; }
        /// <summary>The subnet which the SAP monitor will be deployed in</summary>
        string MonitorSubnet { get; set; }
        /// <summary>The ARM ID of the MSI used for SAP monitoring.</summary>
        string MsiArmId { get; set; }
        /// <summary>State of provisioning of the SAP monitor.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Workloads.Support.WorkloadMonitorProvisioningState? ProvisioningState { get; set; }
        /// <summary>
        /// Sets the routing preference of the SAP monitor. By default only RFC1918 traffic is routed to the customer VNET.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Workloads.Support.RoutingPreference? RoutingPreference { get; set; }
        /// <summary>The ARM ID of the Storage account used for SAP monitoring.</summary>
        string StorageAccountArmId { get; set; }
        /// <summary>
        /// Sets the preference for zone redundancy on resources created for the SAP monitor. By default resources will be created
        /// which do not support zone redundancy.
        /// </summary>
        string ZoneRedundancyPreference { get; set; }

    }
}