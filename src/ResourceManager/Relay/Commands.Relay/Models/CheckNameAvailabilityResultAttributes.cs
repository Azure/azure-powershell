// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator 1.0.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace Microsoft.Azure.Commands.Relay.Models
{
    using Azure.Management.Relay.Models;
    using System;

    /// <summary>
    /// Description of a Check Name availability request properties.
    /// </summary>
    public partial class CheckNameAvailabilityResultAttributes
    {
        /// <summary>
        /// Initializes a new instance of the CheckNameAvailabilityResult
        /// class.
        /// </summary>
        public CheckNameAvailabilityResultAttributes() { }

        /// <summary>
        /// Initializes a new instance of the CheckNameAvailabilityResult
        /// class.
        /// </summary>
        /// <param name="nameAvailable">Value indicating namespace is
        /// availability, true if the namespace is available; otherwise,
        /// false.</param>
        /// <param name="reason">The reason for unavailability of a namespace.
        /// Possible values include: 'None', 'InvalidName',
        /// 'SubscriptionIsDisabled', 'NameInUse', 'NameInLockdown',
        /// 'TooManyNamespaceInCurrentSubscription'</param>
        /// <param name="message">The detailed info regarding the reason
        /// associated with the namespace.</param>
        public CheckNameAvailabilityResultAttributes(bool? nameAvailable = default(bool?), UnavailableReasonAttributes? reason = default(UnavailableReasonAttributes?), string message = default(string))
        {
            NameAvailable = nameAvailable;
            Reason = reason;
            Message = message;
        }


        public CheckNameAvailabilityResultAttributes(CheckNameAvailabilityResult checkNameAvailabilityResult)
        {
            NameAvailable = checkNameAvailabilityResult.NameAvailable;
            if (checkNameAvailabilityResult.Reason.HasValue)
            {
                Reason = (UnavailableReasonAttributes)Enum.Parse(typeof(UnavailableReasonAttributes), checkNameAvailabilityResult.Reason.Value.ToString(), true);
            }
            
            Message = checkNameAvailabilityResult.Message;
        }

        /// <summary>
        /// Gets or sets value indicating namespace is availability, true if
        /// the namespace is available; otherwise, false.
        /// </summary>
        public bool? NameAvailable { get; set; }

        /// <summary>
        /// Gets or sets the reason for unavailability of a namespace. Possible
        /// values include: 'None', 'InvalidName', 'SubscriptionIsDisabled',
        /// 'NameInUse', 'NameInLockdown',
        /// 'TooManyNamespaceInCurrentSubscription'
        /// </summary>
        public UnavailableReasonAttributes? Reason { get; set; }

        /// <summary>
        /// Gets the detailed info regarding the reason associated with the
        /// namespace.
        /// </summary>
        public string Message { get; protected set; }

    }
}

