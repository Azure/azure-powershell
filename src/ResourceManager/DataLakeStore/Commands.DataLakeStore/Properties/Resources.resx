<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AccountDoesNotExist" xml:space="preserve">
    <value>Cannot perform the requested operation because the specified account '{0}' does not exist.</value>
  </data>
  <data name="AddDataLakeFirewallRule" xml:space="preserve">
    <value>Adding the Data Lake Store firewall rule: '{0}' ...</value>
  </data>
  <data name="AddDataLakeTrustedIdProvider" xml:space="preserve">
    <value>Adding the Data Lake Store trusted identity provider: '{0}' ...</value>
  </data>
  <data name="DataLakeStoreAccountExists" xml:space="preserve">
    <value>DataLakeStore account with name '{0}' already exists.</value>
  </data>
  <data name="DefaultAclWord" xml:space="preserve">
    <value>"default "</value>
  </data>
  <data name="DefaultingEncryptionType" xml:space="preserve">
    <value>No Encryption type passed in, defaulting to Service managed encryption. To opt out, explicitly pass in -DisableEncryption</value>
  </data>
  <data name="DiagnosticDirectoryAlreadyExists" xml:space="preserve">
    <value>The specified path: {0} already exists as a directory. Please specify a path (including file name) of a new file to create or an existing file to append to.</value>
  </data>
  <data name="DownloadFileDataMessage" xml:space="preserve">
    <value>Download file data</value>
  </data>
  <data name="FailedToDiscoverResourceGroup" xml:space="preserve">
    <value>Could not find account: '{0}' in any resource group in the currently selected subscription: {1}. Please ensure this account exists and that the current user has access to it.</value>
  </data>
  <data name="FileOrFolderDoesNotExist" xml:space="preserve">
    <value>The source path '{0}' does not exist or the current user cannot access it. Ensure the path exists and is accessible and try again.</value>
  </data>
  <data name="FilePreviewTooLarge" xml:space="preserve">
    <value>The remaining data to preview is greater than {0} bytes. Please specify a length or use the Force parameter to preview the entire file. The length of the file that would have been previewed: {1}</value>
  </data>
  <data name="FirewallDisabledWarning" xml:space="preserve">
    <value>The firewall is currently disabled for account: {0}. Updates to firewall rules will not take affect until the firewall is enabled.</value>
  </data>
  <data name="FirewallRuleNotFound" xml:space="preserve">
    <value>The specified firewall rule '{0}' does not exist.</value>
  </data>
  <data name="IgnoredKeyVaultParams" xml:space="preserve">
    <value>User supplied Key Vault information. For service managed encryption user supplied Key Vault information is ignored.</value>
  </data>
  <data name="IncorrectOutputTypeWarning" xml:space="preserve">
    <value>The output type defined for this cmdlet is incorrect and will be updated to reflect what is actually returned (and defined in the help) in a future release.</value>
  </data>
  <data name="InvalidAce" xml:space="preserve">
    <value>Invalid ACE returned. Expected ACE format: '[default]:&lt;scope&gt;:&lt;identity&gt;:&lt;permissions&gt;'. Actual ACE: {0}</value>
  </data>
  <data name="InvalidContent" xml:space="preserve">
    <value>Invalid content passed in. Only byte[] and string content is supported. If bytes are passed in, 'Byte' encoding must be selected.</value>
  </data>
  <data name="InvalidDefaultSubscription" xml:space="preserve">
    <value>No default subscription has been designated. Use Select-AzureSubscription -Default &lt;subscriptionName&gt; to set the default subscription.</value>
  </data>
  <data name="InvalidEncoding" xml:space="preserve">
    <value>Invalid encoding selected. 'Byte' encoding can only be used with byte content. Use text encoding instead.</value>
  </data>
  <data name="InvalidExpiryPath" xml:space="preserve">
    <value>The specified path does not exist or is not a file. Please ensure the path points to a file and it exists. Path supplied: {0}</value>
  </data>
  <data name="InvalidExportPathType" xml:space="preserve">
    <value>The path '{0}' either does not exist or is not accessible. Please check the path and permission.</value>
  </data>
  <data name="InvalidFilePath" xml:space="preserve">
    <value>Invalid file path: {0}. Files cannot end in '/' or '\\'. If creating a folder please use the -Folder flag</value>
  </data>
  <data name="InvalidMovePathTypeCombination" xml:space="preserve">
    <value>The source and destination path type must be the same. Both paths must be webhdfs compliant paths.</value>
  </data>
  <data name="InvalidParseAce" xml:space="preserve">
    <value>Invalid ACE Supplied. Expected ACE format: '[default]:&lt;scope&gt;:&lt;identity&gt;:&lt;permissions&gt;'. Actual ACE: {0}. Note: parsing is only supported for user and group ACEs. The mask and other permissions are set through Set-AzureDataLakeItemOwner</value>
  </data>
  <data name="InvalidPath" xml:space="preserve">
    <value>The specified path '{0}' is in an invalid format. The valid formats is an account relative full path: '/someFolder/someFile.txt', '/' (for the root). Please enter the path in valid format and try again."</value>
  </data>
  <data name="InvalidPermissionOctalRange" xml:space="preserve">
    <value>Permission values must be in Octal form and in the range of 0 to 777, inclusive. '{0}' falls outside this range.</value>
  </data>
  <data name="InvalidPermissionString" xml:space="preserve">
    <value>The permissions string '{0}' is invalid. It must either be in octal form (e.g 777) or in standard posix format (e.g. 'rwxrwxrwx')</value>
  </data>
  <data name="InvalidPermissionType" xml:space="preserve">
    <value>Invalid permission type '{0}' selected.</value>
  </data>
  <data name="InvalidSourceDestinationPathTypeCombination" xml:space="preserve">
    <value>The source and destination path type cannot be the same. One must be webhdfs qualified and the other a local or network path.</value>
  </data>
  <data name="LargeDownloadWarning" xml:space="preserve">
    <value>Download a very large amount of data</value>
  </data>
  <data name="LocalFileAlreadyExists" xml:space="preserve">
    <value>The destination path '{0}' already exists. Please set overwrite to true or use the force switch in order to overwrite this file</value>
  </data>
  <data name="LongRunningOperationFailed" xml:space="preserve">
    <value>DataLakeStore account operation failed with the following error code: {0} and message: {1}</value>
  </data>
  <data name="MissingKeyVaultParams" xml:space="preserve">
    <value>For user managed encryption, KeyVaultId, KeyName and KeyVersion are required parameters and must be supplied.</value>
  </data>
  <data name="MoveFailed" xml:space="preserve">
    <value>Failed to move source: '{0}' to destination: '{1}'. Please ensure the file or folder exists at the source and that the destination does not or force was used.</value>
  </data>
  <data name="NoSubscriptionInContext" xml:space="preserve">
    <value>No subscription found in the context.  Please ensure that the credentials you provided are authorized to access an Azure subscription, then run Login-AzureRMAccount to login.</value>
  </data>
  <data name="ObsoleteWarningForAclObjects" xml:space="preserve">
    <value>The existing DataLakeStoreItemAcl object will be deprecated in a future release. At that time, this cmdlet will instead accept the output of, and objects in the same format as, Get-AzureRMDataLakeStoreItemAclEntry</value>
  </data>
  <data name="OffsetOutOfRange" xml:space="preserve">
    <value>The specified offset: {0} is greater than the length of the file to preview. Please select an offset less than: {1} and greater than or equal to zero.</value>
  </data>
  <data name="OverwriteFileMessage" xml:space="preserve">
    <value>Overwrite existing file '{0}'?</value>
    <comment>{0} = local file path</comment>
  </data>
  <data name="RemoveDataLakeStoreAccount" xml:space="preserve">
    <value>Removing DataLakeStore account '{0}' ...</value>
  </data>
  <data name="RemoveDataLakeStoreFirewallRule" xml:space="preserve">
    <value>Removing Data Lake Store firewall rule: '{0}' ...</value>
  </data>
  <data name="RemoveDataLakeStoreItem" xml:space="preserve">
    <value>Removing Data Lake file or folder at path: '{0}' ...</value>
  </data>
  <data name="RemoveDataLakeStoreItemAcl" xml:space="preserve">
    <value>Removing {0}DataLake ACL at path: '{1}' ...</value>
  </data>
  <data name="RemoveDataLakeStoreTrustedProvider" xml:space="preserve">
    <value>Removing Data Lake Store trusted identity provider: '{0}' ...</value>
  </data>
  <data name="RemovingDataLakeStoreAccount" xml:space="preserve">
    <value>Are you sure you want to remove DataLakeStore account '{0}'?</value>
  </data>
  <data name="RemovingDataLakeStoreFirewallRule" xml:space="preserve">
    <value>Are you sure you want to remove the Data Lake Store firewall rule: '{0}'?</value>
  </data>
  <data name="RemovingDataLakeStoreItem" xml:space="preserve">
    <value>Are you sure you want to remove the Data Lake item at path: '{0}'?</value>
  </data>
  <data name="RemovingDataLakeStoreItemAcl" xml:space="preserve">
    <value>Are you sure you want to remove the {0}DataLake ACL at path: '{1}'?</value>
  </data>
  <data name="RemovingDataLakeStoreTrustedProvider" xml:space="preserve">
    <value>Are you sure you want to remove the Data Lake Store trusted identity provider: '{0}'?</value>
  </data>
  <data name="ServerFileAlreadyExists" xml:space="preserve">
    <value>The destination path '{0}' already exists in the system. To overwrite this location, use the -Force parameter.</value>
  </data>
  <data name="SetDataLakeFirewallRule" xml:space="preserve">
    <value>Setting the Data Lake Store firewall rule: '{0}' ...</value>
  </data>
  <data name="SetDataLakeStoreItemAcl" xml:space="preserve">
    <value>Setting the Data Lake file or folder ACL at path: '{0}' ...</value>
  </data>
  <data name="SetDataLakeStoreItemOwner" xml:space="preserve">
    <value>Setting the Data Lake file or folder owning group or user at path: '{0}' ...</value>
  </data>
  <data name="SetDataLakeStoreItemPermissions" xml:space="preserve">
    <value>Setting the Data Lake file or folder permissions at path: '{0}' ...</value>
  </data>
  <data name="SetDataLakeTrustedIdProvider" xml:space="preserve">
    <value>Setting the Data Lake Store trusted identity provider: '{0}' ...</value>
  </data>
  <data name="SetFileExpiry" xml:space="preserve">
    <value>Setting the Expiry of file at path: '{0}' to: {1} ...</value>
  </data>
  <data name="SettingDataLakeStoreItemAcl" xml:space="preserve">
    <value>The entry or entries you provided may already exist in the item's ACL. Are you sure you want to overwrite the existing entry or entries at item path '{0}'?</value>
  </data>
  <data name="SettingDataLakeStoreItemOwner" xml:space="preserve">
    <value>Are you sure you want to replace the existing owning group or user at the Data Lake item at path: '{0}'?</value>
  </data>
  <data name="TaskCancelledMessage" xml:space="preserve">
    <value>The operation is being cancelled, please wait...</value>
  </data>
  <data name="TraceStreamFailure" xml:space="preserve">
    <value>Error creating FileStream for diagnostic trace file \"{0}\" - No diagnostics will be captured. Failed with Error:\r\n{1}</value>
  </data>
  <data name="TrustedIdProviderDisabledWarning" xml:space="preserve">
    <value>The trusted identity provider is currently disabled for account: {0}. Updates to trusted identity providers will not take affect until the trusted identity provider is enabled.</value>
  </data>
  <data name="UploadFailedMessage" xml:space="preserve">
    <value>Upload operation failed due to the following underlying error: {0}. You can try to resume the upload by specifying the "Resume" option. If the error persists, please contact Microsoft support.</value>
  </data>
  <data name="UploadFileMessage" xml:space="preserve">
    <value>Upload file or directory</value>
  </data>
</root>