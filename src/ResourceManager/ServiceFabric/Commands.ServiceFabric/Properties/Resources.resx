<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AddCertToUnsecureCluster" xml:space="preserve">
    <value>Insecure cluster {0} is not allowed to add certificate</value>
  </data>
  <data name="CannotChangeDurabilityFrom" xml:space="preserve">
    <value>Can't change durability from {0} {1}</value>
  </data>
  <data name="CannotDeletePrimayNodeType" xml:space="preserve">
    <value>Can't delete primary node type {0}</value>
  </data>
  <data name="CannotFindCertificateInCluster" xml:space="preserve">
    <value>Can't find the certificate {0} in the cluster</value>
  </data>
  <data name="CannotFindCommonNameAndIssuer" xml:space="preserve">
    <value>Can't find the common name {0} and issuer {1} in the cluster</value>
  </data>
  <data name="CannotFindDurabilityLevelSetting" xml:space="preserve">
    <value>Can't find durability level setting</value>
  </data>
  <data name="CannotFindTenantId" xml:space="preserve">
    <value>Can't find tenant Id</value>
  </data>
  <data name="CannotFindTheNodeType" xml:space="preserve">
    <value>Can't find the node type {0}</value>
  </data>
  <data name="CannotFindThumbprintInTheCluster" xml:space="preserve">
    <value>Can't find the thumbprint {0} in the cluster</value>
  </data>
  <data name="CannotFindVault" xml:space="preserve">
    <value>Can't find key vault {0}</value>
  </data>
  <data name="CannotGetReliabilityLevel" xml:space="preserve">
    <value>Can't get reliability level</value>
  </data>
  <data name="CannotParseReliabilityLevel" xml:space="preserve">
    <value>Can't parse reliability level {0}</value>
  </data>
  <data name="CannotUpdateBronzeNodeType" xml:space="preserve">
    <value>Can't update node type which durability is bronze,please update it to Silver or above first</value>
  </data>
  <data name="CannotUpdateNodeCountLessThenReliabilityLevel" xml:space="preserve">
    <value>Can't update nodes count {0} to less than the reliability level {1}</value>
  </data>
  <data name="CannotUpdateSkuWithBronzeDurability" xml:space="preserve">
    <value>Can't update Sku while durability is Bronze , please update durability to Silver or above first</value>
  </data>
  <data name="CheckingDeploymentStatus" xml:space="preserve">
    <value>Checking deployment status in {0} seconds</value>
  </data>
  <data name="ClusterStateVerbose" xml:space="preserve">
    <value>The state of the cluster is : {0}</value>
  </data>
  <data name="CreateSelfSignedCertificateFailedWithErrorDetail" xml:space="preserve">
    <value>Create self signed certificate failed with Status: {0}, StatusDetails: {1}, Code: {2}, Message: {3}</value>
  </data>
  <data name="CreateSelfSignedCertificateFailedWithoutErrorDetail" xml:space="preserve">
    <value>Create self signed certificate failed with Status: {0}, StatusDetails: {1}</value>
  </data>
  <data name="CreateSelfSignedCertificateTimeout" xml:space="preserve">
    <value>Creating self signed certificate timeout</value>
  </data>
  <data name="DeploymentFailed" xml:space="preserve">
    <value>Deployment failed</value>
  </data>
  <data name="DeploymentSucceeded" xml:space="preserve">
    <value>Deployment succeeded</value>
  </data>
  <data name="DeploymentVerbose" xml:space="preserve">
    <value>Deployment is running</value>
  </data>
  <data name="DuplicatedFabricSetting" xml:space="preserve">
    <value>Contains duplicate fabric setting {0}</value>
  </data>
  <data name="DurabilityLevelMismatches" xml:space="preserve">
    <value>The durability level is mismatched between the cluster and the VM extension.</value>
  </data>
  <data name="FailedToCreateSelfSignedCertificate" xml:space="preserve">
    <value>Failed to create self signed certificate</value>
  </data>
  <data name="FailedToCreateStorageAccount" xml:space="preserve">
    <value>Failed to create the storage account</value>
  </data>
  <data name="FailedToFindPrimaryNodeTypeError" xml:space="preserve">
    <value>Did not find the primary node type in cluster {0}</value>
  </data>
  <data name="FailedToParseParameterFile" xml:space="preserve">
    <value>Failed to parse parameter file</value>
  </data>
  <data name="FailedToParseTemplateFile" xml:space="preserve">
    <value>Failed to parse template file</value>
  </data>
  <data name="FileNotExist" xml:space="preserve">
    <value>File {0} doesn't exist</value>
  </data>
  <data name="InvalidCertificateInformationInParameterFile" xml:space="preserve">
    <value>The primary certificate parameters names in the parameters file should be specified with 'sourceVaultValue','certificateThumbprint','certificateUrlValue', if the secondary certificate parameters are specified in the parameters file, the parameters names should be specified with 'secSourceVaultValue','secCertificateThumbprint','secCertificateUrlValue'.</value>
  </data>
  <data name="InvalidDirectory" xml:space="preserve">
    <value>Directory {0} doesn't exist</value>
  </data>
  <data name="InvalidFileName" xml:space="preserve">
    <value>File name {0} contains invalid characters</value>
  </data>
  <data name="InvalidInput" xml:space="preserve">
    <value>Invalid input</value>
  </data>
  <data name="InvalidPassword" xml:space="preserve">
    <value>The supplied password must be between 12-123 characters long and must satisfy at least 3 of password complexity requirements from the following: \r\n1) Contains an uppercase character\r\n2) Contains a lowercase character\r\n3) Contains a numeric digit\r\n4) Contains a special character</value>
  </data>
  <data name="InvalidTemplateFile" xml:space="preserve">
    <value>Invalid template file</value>
  </data>
  <data name="InvalidTemplateParameterFile" xml:space="preserve">
    <value>Invalid template parameter file</value>
  </data>
  <data name="InvalidVmssConfiguration" xml:space="preserve">
    <value>Invalid existing VMSS configuration</value>
  </data>
  <data name="KeyVaultAndResourceGroupNotSameRegion" xml:space="preserve">
    <value>The key vault and the resource group are not in same region</value>
  </data>
  <data name="NewExistingCluster" xml:space="preserve">
    <value>The cluster {0} exists , please remove the resource group, and try again.</value>
  </data>
  <data name="NoCertificateOperationReturned" xml:space="preserve">
    <value>No certificateOperation returned when creating self signed certificate in Azure key vault</value>
  </data>
  <data name="NodeTypeAlreadyExist" xml:space="preserve">
    <value>Node type {0} already exists in the cluster</value>
  </data>
  <data name="NoneCertificateFound" xml:space="preserve">
    <value>Did not find any certificate in the cluster</value>
  </data>
  <data name="NoneNodeTypeFound" xml:space="preserve">
    <value>Did not find any node type in resource group {0}</value>
  </data>
  <data name="OnlyOneClusterCertificate" xml:space="preserve">
    <value>There is only one certificate in the cluster, it can't be removed</value>
  </data>
  <data name="RemoveCertFromUnsecureCluster" xml:space="preserve">
    <value>Insecure cluster {0} is not allowed to remove certificate</value>
  </data>
  <data name="ResourceGroupNotFound" xml:space="preserve">
    <value>The resource group {0} is not found</value>
  </data>
  <data name="SkuCapacityIsNull" xml:space="preserve">
    <value>The capacity of the node type is null</value>
  </data>
  <data name="UseAutoToIncreaseNodesCount" xml:space="preserve">
    <value>Primary node count is {0} which is less than the node count {1} that target reliability level requires, Please use 'AutoAddNode' switch to automatically increase nodes count</value>
  </data>
  <data name="VaultCreatedWithOutAccessPolicy" xml:space="preserve">
    <value>Access policy is not set. No user or application have access permission to use this vault. Please use Set-AzureRmKeyVaultAccessPolicy to set access policies.</value>
  </data>
  <data name="VmssVerbose" xml:space="preserve">
    <value>Virtual machine scale sets : {0}, state is {1}</value>
  </data>
</root>