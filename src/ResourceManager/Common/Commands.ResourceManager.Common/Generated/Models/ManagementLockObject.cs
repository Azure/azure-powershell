// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
// 
// Code generated by Microsoft (R) AutoRest Code Generator 0.16.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace Microsoft.Azure.Management.Internal.Resources.Models
{
    using System;
    using System.Linq;
    using System.Collections.Generic;
    using Newtonsoft.Json;
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;
    using Microsoft.Rest.Azure;

    /// <summary>
    /// The lock information.
    /// </summary>
    [JsonTransformation]
    public partial class ManagementLockObject : IResource
    {
        /// <summary>
        /// Initializes a new instance of the ManagementLockObject class.
        /// </summary>
        public ManagementLockObject() { }

        /// <summary>
        /// Initializes a new instance of the ManagementLockObject class.
        /// </summary>
        public ManagementLockObject(string level, string notes = default(string), IList<ManagementLockOwner> owners = default(IList<ManagementLockOwner>), string id = default(string), string type = default(string), string name = default(string))
        {
            Level = level;
            Notes = notes;
            Owners = owners;
            Id = id;
            Type = type;
            Name = name;
        }

        /// <summary>
        /// The level of the lock. Possible values are: NotSpecified,
        /// CanNotDelete, ReadOnly. CanNotDelete means authorized users are
        /// able to read and modify the resources, but not delete. ReadOnly
        /// means authorized users can only read from a resource, but they
        /// can't modify or delete it. Possible values include:
        /// 'NotSpecified', 'CanNotDelete', 'ReadOnly'
        /// </summary>
        [JsonProperty(PropertyName = "properties.level")]
        public string Level { get; set; }

        /// <summary>
        /// Notes about the lock. Maximum of 512 characters.
        /// </summary>
        [JsonProperty(PropertyName = "properties.notes")]
        public string Notes { get; set; }

        /// <summary>
        /// The owners of the lock.
        /// </summary>
        [JsonProperty(PropertyName = "properties.owners")]
        public IList<ManagementLockOwner> Owners { get; set; }

        /// <summary>
        /// The resource ID of the lock.
        /// </summary>
        [JsonProperty(PropertyName = "id")]
        public string Id { get; private set; }

        /// <summary>
        /// The resource type of the lock - Microsoft.Authorization/locks.
        /// </summary>
        [JsonProperty(PropertyName = "type")]
        public string Type { get; private set; }

        /// <summary>
        /// The name of the lock.
        /// </summary>
        [JsonProperty(PropertyName = "name")]
        public string Name { get; set; }

        /// <summary>
        /// Validate the object. Throws ValidationException if validation fails.
        /// </summary>
        public virtual void Validate()
        {
            if (Level == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Level");
            }
        }
    }
}
