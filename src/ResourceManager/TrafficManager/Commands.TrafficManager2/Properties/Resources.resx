<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Confirm_AddAddressRange" xml:space="preserve">
    <value>Are you sure you want to add an address range starting with '{0}' to endpoint '{1}' of profile '{2}' in resource group '{3}'?</value>
  </data>
  <data name="Confirm_AddHeaderToEndpoint" xml:space="preserve">
    <value>Are you sure you want to add a custom header with name '{0}' to endpoint '{1}' of profile '{2}' in resource group '{3}'?</value>
  </data>
  <data name="Confirm_AddHeaderToProfile" xml:space="preserve">
    <value>Are you sure you want to add a custom header with name '{0}' to profile '{1}' in resource group '{2}'?</value>
  </data>
  <data name="Confirm_AddStatusCodeRange" xml:space="preserve">
    <value>Are you sure you want to add an expected status code range starting with '{0}' to profile '{1}' in resource group '{2}'?</value>
  </data>
  <data name="Confirm_DisableEndpoint" xml:space="preserve">
    <value>Are you sure you want to disable endpoint '{0}' of Profile '{1}'?</value>
  </data>
  <data name="Confirm_DisableProfile" xml:space="preserve">
    <value>Are you sure you want to disable profile '{0}'?</value>
  </data>
  <data name="Confirm_RemoveAddressRange" xml:space="preserve">
    <value>Are you sure you want to remove the address range starting with '{0}' from endpoint '{1}' of profile '{2}' in resource group '{3}'?</value>
  </data>
  <data name="Confirm_RemoveEndpoint" xml:space="preserve">
    <value>Are you sure you want to permanently remove endpoint '{0}' from profile '{1}' in resource group '{2}'?</value>
  </data>
  <data name="Confirm_RemoveHeaderFromEndpoint" xml:space="preserve">
    <value>Are you sure you want to remove the custom header with name '{0}' from endpoint '{1}' of profile '{2}' in resource group '{3}'?</value>
  </data>
  <data name="Confirm_RemoveHeaderFromProfile" xml:space="preserve">
    <value>Are you sure you want to remove the custom header with name '{0}' from profile '{1}' in resource group '{2}'?</value>
  </data>
  <data name="Confirm_RemoveProfile" xml:space="preserve">
    <value>Are you sure you want to permanently remove profile '{0}'?</value>
  </data>
  <data name="Confirm_RemoveStatusCodeRange" xml:space="preserve">
    <value>Are you sure you want to remove the expected status code range starting with '{0}' from profile '{1}' in resource group '{2}'?</value>
  </data>
  <data name="Error_AddExistingAddressRange" xml:space="preserve">
    <value>There is already an existing adress range starting with '{0}'.</value>
  </data>
  <data name="Error_AddExistingEndpoint" xml:space="preserve">
    <value>There is already an existing endpoint with name '{0}'.</value>
  </data>
  <data name="Error_AddExistingHeader" xml:space="preserve">
    <value>There is already an existing custom header with name '{0}'.</value>
  </data>
  <data name="Error_AddExistingStatusCodeRange" xml:space="preserve">
    <value>There is already an existing expected status code range with Min of '{0}'.</value>
  </data>
  <data name="Error_AddressRangeNotFound" xml:space="preserve">
    <value>The endpoint provided does not have any address ranges starting with '{0}'.</value>
  </data>
  <data name="Error_CreateExistingEndpoint" xml:space="preserve">
    <value>There is already an existing endpoint with name '{0}' in the profile '{1}' and resource group '{2}'</value>
  </data>
  <data name="Error_CreateExistingProfile" xml:space="preserve">
    <value>There is already an existing profile with name '{0}' in the resource group '{1}'</value>
  </data>
  <data name="Error_CustomHeaderNotFound" xml:space="preserve">
    <value>The profile or endpoint provided does not have any custom headers with name '{0}'.</value>
  </data>
  <data name="Error_EndpointNotFound" xml:space="preserve">
    <value>The profile provided does not have any endpoints with name '{0}'.</value>
  </data>
  <data name="Error_StatusCodeRangeNotFound" xml:space="preserve">
    <value>The profile provided does not have any expected status code range with Min of '{0}'.</value>
  </data>
  <data name="Progress_AddingAddressRange" xml:space="preserve">
    <value>Adding address range ...</value>
  </data>
  <data name="Progress_AddingHeader" xml:space="preserve">
    <value>Adding header ...</value>
  </data>
  <data name="Progress_AddingStatusCodeRange" xml:space="preserve">
    <value>Adding status code range ...</value>
  </data>
  <data name="Progress_DisablingEndpoint" xml:space="preserve">
    <value>Disabling endpoint ...</value>
  </data>
  <data name="Progress_DisablingProfile" xml:space="preserve">
    <value>Disabling profile ...</value>
  </data>
  <data name="Progress_RemovingAddressRange" xml:space="preserve">
    <value>Removing Address range ...</value>
  </data>
  <data name="Progress_RemovingEndpoint" xml:space="preserve">
    <value>Removing endpoint ...</value>
  </data>
  <data name="Progress_RemovingHeader" xml:space="preserve">
    <value>Removing header ...</value>
  </data>
  <data name="Progress_RemovingProfile" xml:space="preserve">
    <value>Removing profile ...</value>
  </data>
  <data name="Progress_RemovingStatusCodeRange" xml:space="preserve">
    <value>Removing status code range ...</value>
  </data>
  <data name="Success" xml:space="preserve">
    <value>Success!</value>
  </data>
  <data name="Success_DisableEndpoint" xml:space="preserve">
    <value>Endpoint '{0}' of Profile '{1}' from resource group '{2}' was disabled successfully.</value>
  </data>
  <data name="Success_DisableProfile" xml:space="preserve">
    <value>Profile '{0}' from resource group '{1}' was disabled successfully.</value>
  </data>
  <data name="Success_EnableEndpoint" xml:space="preserve">
    <value>Endpoint '{0}' of Profile '{1}' from resource group '{2}' was enabled successfully.</value>
  </data>
  <data name="Success_EnableProfile" xml:space="preserve">
    <value>Profile '{0}' from resource group '{1}' was enabled successfully.</value>
  </data>
  <data name="Success_RemoveEndpoint" xml:space="preserve">
    <value>Endpoint '{0}' was removed from profile '{1}' in resource group '{2}'.</value>
  </data>
  <data name="Success_RemoveProfile" xml:space="preserve">
    <value>Profile '{0}' was removed from resource group '{1}'.</value>
  </data>
</root>