<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AlreadyExists" xml:space="preserve">
    <value>'{0}' already exists.</value>
  </data>
  <data name="CannotQueryMigrationResult" xml:space="preserve">
    <value>Results at the '{0}' level are not available for migrations from source data platform '{1}' to target data platform '{2}'.</value>
  </data>
  <data name="CannotSelectTablesForMigration" xml:space="preserve">
    <value>Cannot select tables for migration for the target server type '{0}'.</value>
  </data>
  <data name="ConnectionTypeMigrationTaskMismatch" xml:space="preserve">
    <value>The selected '{0}' data platform type '{1}' does not match the '{2}' platform type '{3}' of the connection info object.</value>
  </data>
  <data name="ConnectionTypeParameterSetMismatch" xml:space="preserve">
    <value>Parameter set '{0}' cannot be used with the connection type '{1}' </value>
  </data>
  <data name="createProject" xml:space="preserve">
    <value>Creating Project</value>
  </data>
  <data name="createService" xml:space="preserve">
    <value>Creating Service</value>
  </data>
  <data name="createTask" xml:space="preserve">
    <value>Creating Task</value>
  </data>
  <data name="DatabaseNameNotAvailableOnSource" xml:space="preserve">
    <value>The database '{0}' is not available on the source server.</value>
  </data>
  <data name="DatabaseNameNotAvailableOnTarget" xml:space="preserve">
    <value>The database '{0}' is not available on the target server.</value>
  </data>
  <data name="DatabaseNotSelectedForMigration" xml:space="preserve">
    <value>The database '{0}' has not been selected for migration. Please first run Add-AzureRmDmsDatabase to add the database to the migration task.</value>
  </data>
  <data name="InvalidCommandOperation" xml:space="preserve">
    <value>This command is not available for migration tasks from '{0}' to '{1}'</value>
  </data>
  <data name="NotFound" xml:space="preserve">
    <value>'{0}' not found.</value>
  </data>
  <data name="removeProject" xml:space="preserve">
    <value>Removing project ...</value>
  </data>
  <data name="removeService" xml:space="preserve">
    <value>Removing service ...</value>
  </data>
  <data name="removeTask" xml:space="preserve">
    <value>Removing task ...</value>
  </data>
  <data name="removingProject" xml:space="preserve">
    <value>Are you sure you want to remove project '{0}'</value>
  </data>
  <data name="removingService" xml:space="preserve">
    <value>Are you sure you want to remove service '{0}'</value>
  </data>
  <data name="removingTask" xml:space="preserve">
    <value>Are you sure you want to remove task '{0}'</value>
  </data>
  <data name="startProject" xml:space="preserve">
    <value>Start Project</value>
  </data>
  <data name="startService" xml:space="preserve">
    <value>Start Service</value>
  </data>
  <data name="startTask" xml:space="preserve">
    <value>Start Task</value>
  </data>
  <data name="stopService" xml:space="preserve">
    <value>Stop Service</value>
  </data>
  <data name="stopTask" xml:space="preserve">
    <value>Stop Task</value>
  </data>
  <data name="createConnectionInfo" xml:space="preserve">
    <value>Create Connection Info</value>
  </data>
  <data name="createDbInfo" xml:space="preserve">
    <value>Create Database Info</value>
  </data>
  <data name="createSelectedDB" xml:space="preserve">
    <value>Create Databases Info for Migration</value>
  </data>
  <data name="createCommand" xml:space="preserve">
    <value>Creating Command</value>
  </data>
  <data name="SKUDeprecationWarningMessage" xml:space="preserve">
    <value>The {0} SKU in service {1} is marked for deprecation and will be discontinued from 08/31/2018.</value>
  </data>
</root>