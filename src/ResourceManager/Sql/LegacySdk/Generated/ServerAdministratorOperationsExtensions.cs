// 
// Copyright (c) Microsoft and contributors.  All rights reserved.
// 
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//   http://www.apache.org/licenses/LICENSE-2.0
// 
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// 
// See the License for the specific language governing permissions and
// limitations under the License.
// 

// Warning: This code was generated by a tool.
// 
// Changes to this file may cause incorrect behavior and will be lost if the
// code is regenerated.

using System;
using System.Linq;
using System.Threading;
using System.Threading.Tasks;
using Microsoft.Azure.Management.Sql.LegacySdk;
using Microsoft.Azure.Management.Sql.LegacySdk.Models;

namespace Microsoft.Azure.Management.Sql.LegacySdk
{
    /// <summary>
    /// The Windows Azure SQL Database management API provides a RESTful set of
    /// web services that interact with Windows Azure SQL Database services to
    /// manage your databases. The API enables users to create, retrieve,
    /// update, and delete databases and servers.
    /// </summary>
    public static partial class ServerAdministratorOperationsExtensions
    {
        /// <summary>
        /// Begins creating a new Azure SQL Server Active Directory
        /// Administrator or updating an existing Azure SQL Server Active
        /// Directory Administrator. To determine the status of the operation
        /// call GetServerAdministratorOperationStatus.
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.Azure.Management.Sql.LegacySdk.IServerAdministratorOperations.
        /// </param>
        /// <param name='resourceGroupName'>
        /// Required. The name of the Resource Group to which the server
        /// belongs.
        /// </param>
        /// <param name='serverName'>
        /// Required. The name of the Azure SQL Server to which the Azure SQL
        /// Server Active Directory administrator belongs
        /// </param>
        /// <param name='administratorName'>
        /// Required. The name of the Azure SQL Server Active Directory
        /// Administrator.
        /// </param>
        /// <param name='parameters'>
        /// Required. The required parameters for createing or updating an
        /// Active Directory Administrator.
        /// </param>
        /// <returns>
        /// Response for long running Azure SQL Server Active Directory
        /// Administrator operations.
        /// </returns>
        public static ServerAdministratorCreateOrUpdateResponse BeginCreateOrUpdate(this IServerAdministratorOperations operations, string resourceGroupName, string serverName, string administratorName, ServerAdministratorCreateOrUpdateParameters parameters)
        {
            return Task.Factory.StartNew((object s) => 
            {
                return ((IServerAdministratorOperations)s).BeginCreateOrUpdateAsync(resourceGroupName, serverName, administratorName, parameters);
            }
            , operations, CancellationToken.None, TaskCreationOptions.None, TaskScheduler.Default).Unwrap().GetAwaiter().GetResult();
        }
        
        /// <summary>
        /// Begins creating a new Azure SQL Server Active Directory
        /// Administrator or updating an existing Azure SQL Server Active
        /// Directory Administrator. To determine the status of the operation
        /// call GetServerAdministratorOperationStatus.
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.Azure.Management.Sql.LegacySdk.IServerAdministratorOperations.
        /// </param>
        /// <param name='resourceGroupName'>
        /// Required. The name of the Resource Group to which the server
        /// belongs.
        /// </param>
        /// <param name='serverName'>
        /// Required. The name of the Azure SQL Server to which the Azure SQL
        /// Server Active Directory administrator belongs
        /// </param>
        /// <param name='administratorName'>
        /// Required. The name of the Azure SQL Server Active Directory
        /// Administrator.
        /// </param>
        /// <param name='parameters'>
        /// Required. The required parameters for createing or updating an
        /// Active Directory Administrator.
        /// </param>
        /// <returns>
        /// Response for long running Azure SQL Server Active Directory
        /// Administrator operations.
        /// </returns>
        public static Task<ServerAdministratorCreateOrUpdateResponse> BeginCreateOrUpdateAsync(this IServerAdministratorOperations operations, string resourceGroupName, string serverName, string administratorName, ServerAdministratorCreateOrUpdateParameters parameters)
        {
            return operations.BeginCreateOrUpdateAsync(resourceGroupName, serverName, administratorName, parameters, CancellationToken.None);
        }
        
        /// <summary>
        /// Begins deleting an existing Azure SQL Server Active Directory
        /// Administrator.To determine the status of the operation call
        /// GetServerAdministratorDeleteOperationStatus.
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.Azure.Management.Sql.LegacySdk.IServerAdministratorOperations.
        /// </param>
        /// <param name='resourceGroupName'>
        /// Required. The name of the Resource Group to which the server
        /// belongs.
        /// </param>
        /// <param name='serverName'>
        /// Required. The name of the Azure SQL Server to which the Azure SQL
        /// Server Active Directory administrator belongs
        /// </param>
        /// <param name='administratorName'>
        /// Required. The name of the Azure SQL Server Active Directory
        /// Administrator.
        /// </param>
        /// <returns>
        /// Response for long running Azure SQL Server Active Directory
        /// administrator delete operations.
        /// </returns>
        public static ServerAdministratorDeleteResponse BeginDelete(this IServerAdministratorOperations operations, string resourceGroupName, string serverName, string administratorName)
        {
            return Task.Factory.StartNew((object s) => 
            {
                return ((IServerAdministratorOperations)s).BeginDeleteAsync(resourceGroupName, serverName, administratorName);
            }
            , operations, CancellationToken.None, TaskCreationOptions.None, TaskScheduler.Default).Unwrap().GetAwaiter().GetResult();
        }
        
        /// <summary>
        /// Begins deleting an existing Azure SQL Server Active Directory
        /// Administrator.To determine the status of the operation call
        /// GetServerAdministratorDeleteOperationStatus.
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.Azure.Management.Sql.LegacySdk.IServerAdministratorOperations.
        /// </param>
        /// <param name='resourceGroupName'>
        /// Required. The name of the Resource Group to which the server
        /// belongs.
        /// </param>
        /// <param name='serverName'>
        /// Required. The name of the Azure SQL Server to which the Azure SQL
        /// Server Active Directory administrator belongs
        /// </param>
        /// <param name='administratorName'>
        /// Required. The name of the Azure SQL Server Active Directory
        /// Administrator.
        /// </param>
        /// <returns>
        /// Response for long running Azure SQL Server Active Directory
        /// administrator delete operations.
        /// </returns>
        public static Task<ServerAdministratorDeleteResponse> BeginDeleteAsync(this IServerAdministratorOperations operations, string resourceGroupName, string serverName, string administratorName)
        {
            return operations.BeginDeleteAsync(resourceGroupName, serverName, administratorName, CancellationToken.None);
        }
        
        /// <summary>
        /// Creates a new Azure SQL Server Active Directory Administrator or
        /// updates an existing Azure SQL Server Active Directory
        /// Administrator.
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.Azure.Management.Sql.LegacySdk.IServerAdministratorOperations.
        /// </param>
        /// <param name='resourceGroupName'>
        /// Required. The name of the Resource Group to which the server
        /// belongs.
        /// </param>
        /// <param name='serverName'>
        /// Required. The name of the Azure SQL Server on which the Azure SQL
        /// Server Active Directory Administrator is hosted.
        /// </param>
        /// <param name='administratorName'>
        /// Required. The name of the Azure SQL Server Active Directory
        /// Administrator to be operated on (Updated or created).
        /// </param>
        /// <param name='parameters'>
        /// Required. The required parameters for creating or updating a Server
        /// Administrator.
        /// </param>
        /// <returns>
        /// Response for long running Azure SQL Server Active Directory
        /// Administrator operations.
        /// </returns>
        public static ServerAdministratorCreateOrUpdateResponse CreateOrUpdate(this IServerAdministratorOperations operations, string resourceGroupName, string serverName, string administratorName, ServerAdministratorCreateOrUpdateParameters parameters)
        {
            return Task.Factory.StartNew((object s) => 
            {
                return ((IServerAdministratorOperations)s).CreateOrUpdateAsync(resourceGroupName, serverName, administratorName, parameters);
            }
            , operations, CancellationToken.None, TaskCreationOptions.None, TaskScheduler.Default).Unwrap().GetAwaiter().GetResult();
        }
        
        /// <summary>
        /// Creates a new Azure SQL Server Active Directory Administrator or
        /// updates an existing Azure SQL Server Active Directory
        /// Administrator.
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.Azure.Management.Sql.LegacySdk.IServerAdministratorOperations.
        /// </param>
        /// <param name='resourceGroupName'>
        /// Required. The name of the Resource Group to which the server
        /// belongs.
        /// </param>
        /// <param name='serverName'>
        /// Required. The name of the Azure SQL Server on which the Azure SQL
        /// Server Active Directory Administrator is hosted.
        /// </param>
        /// <param name='administratorName'>
        /// Required. The name of the Azure SQL Server Active Directory
        /// Administrator to be operated on (Updated or created).
        /// </param>
        /// <param name='parameters'>
        /// Required. The required parameters for creating or updating a Server
        /// Administrator.
        /// </param>
        /// <returns>
        /// Response for long running Azure SQL Server Active Directory
        /// Administrator operations.
        /// </returns>
        public static Task<ServerAdministratorCreateOrUpdateResponse> CreateOrUpdateAsync(this IServerAdministratorOperations operations, string resourceGroupName, string serverName, string administratorName, ServerAdministratorCreateOrUpdateParameters parameters)
        {
            return operations.CreateOrUpdateAsync(resourceGroupName, serverName, administratorName, parameters, CancellationToken.None);
        }
        
        /// <summary>
        /// Deletes an existing Azure SQL Server Active Directory Administrator.
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.Azure.Management.Sql.LegacySdk.IServerAdministratorOperations.
        /// </param>
        /// <param name='resourceGroupName'>
        /// Required. The name of the Resource Group to which the server
        /// belongs.
        /// </param>
        /// <param name='serverName'>
        /// Required. The name of the Azure SQL Server to which the Azure SQL
        /// Server Active Directory administrator belongs
        /// </param>
        /// <param name='administratorName'>
        /// Required. The name of the Azure SQL Server Active Directory
        /// Administrator to be operated on (Updated or created).
        /// </param>
        /// <returns>
        /// Response for long running Azure SQL Server Active Directory
        /// administrator delete operations.
        /// </returns>
        public static ServerAdministratorDeleteResponse Delete(this IServerAdministratorOperations operations, string resourceGroupName, string serverName, string administratorName)
        {
            return Task.Factory.StartNew((object s) => 
            {
                return ((IServerAdministratorOperations)s).DeleteAsync(resourceGroupName, serverName, administratorName);
            }
            , operations, CancellationToken.None, TaskCreationOptions.None, TaskScheduler.Default).Unwrap().GetAwaiter().GetResult();
        }
        
        /// <summary>
        /// Deletes an existing Azure SQL Server Active Directory Administrator.
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.Azure.Management.Sql.LegacySdk.IServerAdministratorOperations.
        /// </param>
        /// <param name='resourceGroupName'>
        /// Required. The name of the Resource Group to which the server
        /// belongs.
        /// </param>
        /// <param name='serverName'>
        /// Required. The name of the Azure SQL Server to which the Azure SQL
        /// Server Active Directory administrator belongs
        /// </param>
        /// <param name='administratorName'>
        /// Required. The name of the Azure SQL Server Active Directory
        /// Administrator to be operated on (Updated or created).
        /// </param>
        /// <returns>
        /// Response for long running Azure SQL Server Active Directory
        /// administrator delete operations.
        /// </returns>
        public static Task<ServerAdministratorDeleteResponse> DeleteAsync(this IServerAdministratorOperations operations, string resourceGroupName, string serverName, string administratorName)
        {
            return operations.DeleteAsync(resourceGroupName, serverName, administratorName, CancellationToken.None);
        }
        
        /// <summary>
        /// Returns an Azure SQL Server Administrator.
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.Azure.Management.Sql.LegacySdk.IServerAdministratorOperations.
        /// </param>
        /// <param name='resourceGroupName'>
        /// Required. The name of the Resource Group to which the server
        /// belongs.
        /// </param>
        /// <param name='serverName'>
        /// Required. The name of the Azure SQL Server to which the Azure SQL
        /// Server Active Directory administrator belongs.
        /// </param>
        /// <param name='administratorName'>
        /// Required. The name of the Azure SQL Server Active Directory
        /// Administrator.
        /// </param>
        /// <returns>
        /// Represents the response to a Get Azure SQL Server Active Directory
        /// Administrators request.
        /// </returns>
        public static ServerAdministratorGetResponse Get(this IServerAdministratorOperations operations, string resourceGroupName, string serverName, string administratorName)
        {
            return Task.Factory.StartNew((object s) => 
            {
                return ((IServerAdministratorOperations)s).GetAsync(resourceGroupName, serverName, administratorName);
            }
            , operations, CancellationToken.None, TaskCreationOptions.None, TaskScheduler.Default).Unwrap().GetAwaiter().GetResult();
        }
        
        /// <summary>
        /// Returns an Azure SQL Server Administrator.
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.Azure.Management.Sql.LegacySdk.IServerAdministratorOperations.
        /// </param>
        /// <param name='resourceGroupName'>
        /// Required. The name of the Resource Group to which the server
        /// belongs.
        /// </param>
        /// <param name='serverName'>
        /// Required. The name of the Azure SQL Server to which the Azure SQL
        /// Server Active Directory administrator belongs.
        /// </param>
        /// <param name='administratorName'>
        /// Required. The name of the Azure SQL Server Active Directory
        /// Administrator.
        /// </param>
        /// <returns>
        /// Represents the response to a Get Azure SQL Server Active Directory
        /// Administrators request.
        /// </returns>
        public static Task<ServerAdministratorGetResponse> GetAsync(this IServerAdministratorOperations operations, string resourceGroupName, string serverName, string administratorName)
        {
            return operations.GetAsync(resourceGroupName, serverName, administratorName, CancellationToken.None);
        }
        
        /// <summary>
        /// Gets the status of an Azure SQL Server Active Directory
        /// Administrator delete operation.
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.Azure.Management.Sql.LegacySdk.IServerAdministratorOperations.
        /// </param>
        /// <param name='operationStatusLink'>
        /// Required. Location value returned by the Begin operation
        /// </param>
        /// <returns>
        /// Response for long running Azure SQL Server Active Directory
        /// administrator delete operations.
        /// </returns>
        public static ServerAdministratorDeleteResponse GetServerAdministratorDeleteOperationStatus(this IServerAdministratorOperations operations, string operationStatusLink)
        {
            return Task.Factory.StartNew((object s) => 
            {
                return ((IServerAdministratorOperations)s).GetServerAdministratorDeleteOperationStatusAsync(operationStatusLink);
            }
            , operations, CancellationToken.None, TaskCreationOptions.None, TaskScheduler.Default).Unwrap().GetAwaiter().GetResult();
        }
        
        /// <summary>
        /// Gets the status of an Azure SQL Server Active Directory
        /// Administrator delete operation.
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.Azure.Management.Sql.LegacySdk.IServerAdministratorOperations.
        /// </param>
        /// <param name='operationStatusLink'>
        /// Required. Location value returned by the Begin operation
        /// </param>
        /// <returns>
        /// Response for long running Azure SQL Server Active Directory
        /// administrator delete operations.
        /// </returns>
        public static Task<ServerAdministratorDeleteResponse> GetServerAdministratorDeleteOperationStatusAsync(this IServerAdministratorOperations operations, string operationStatusLink)
        {
            return operations.GetServerAdministratorDeleteOperationStatusAsync(operationStatusLink, CancellationToken.None);
        }
        
        /// <summary>
        /// Gets the status of an Azure SQL Server Active Directory
        /// Administrator create or update operation.
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.Azure.Management.Sql.LegacySdk.IServerAdministratorOperations.
        /// </param>
        /// <param name='operationStatusLink'>
        /// Required. Location value returned by the Begin operation
        /// </param>
        /// <returns>
        /// Response for long running Azure SQL Server Active Directory
        /// Administrator operations.
        /// </returns>
        public static ServerAdministratorCreateOrUpdateResponse GetServerAdministratorOperationStatus(this IServerAdministratorOperations operations, string operationStatusLink)
        {
            return Task.Factory.StartNew((object s) => 
            {
                return ((IServerAdministratorOperations)s).GetServerAdministratorOperationStatusAsync(operationStatusLink);
            }
            , operations, CancellationToken.None, TaskCreationOptions.None, TaskScheduler.Default).Unwrap().GetAwaiter().GetResult();
        }
        
        /// <summary>
        /// Gets the status of an Azure SQL Server Active Directory
        /// Administrator create or update operation.
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.Azure.Management.Sql.LegacySdk.IServerAdministratorOperations.
        /// </param>
        /// <param name='operationStatusLink'>
        /// Required. Location value returned by the Begin operation
        /// </param>
        /// <returns>
        /// Response for long running Azure SQL Server Active Directory
        /// Administrator operations.
        /// </returns>
        public static Task<ServerAdministratorCreateOrUpdateResponse> GetServerAdministratorOperationStatusAsync(this IServerAdministratorOperations operations, string operationStatusLink)
        {
            return operations.GetServerAdministratorOperationStatusAsync(operationStatusLink, CancellationToken.None);
        }
        
        /// <summary>
        /// Returns a list of Azure SQL Server Administrators.
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.Azure.Management.Sql.LegacySdk.IServerAdministratorOperations.
        /// </param>
        /// <param name='resourceGroupName'>
        /// Required. The name of the Resource Group to which the server
        /// belongs.
        /// </param>
        /// <param name='serverName'>
        /// Required. The name of the Azure SQL Server to which the Azure SQL
        /// Server Active Directory administrators belongs.
        /// </param>
        /// <returns>
        /// Represents the response to a List Azure SQL Active Directory
        /// Administrators request.
        /// </returns>
        public static ServerAdministratorListResponse List(this IServerAdministratorOperations operations, string resourceGroupName, string serverName)
        {
            return Task.Factory.StartNew((object s) => 
            {
                return ((IServerAdministratorOperations)s).ListAsync(resourceGroupName, serverName);
            }
            , operations, CancellationToken.None, TaskCreationOptions.None, TaskScheduler.Default).Unwrap().GetAwaiter().GetResult();
        }
        
        /// <summary>
        /// Returns a list of Azure SQL Server Administrators.
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.Azure.Management.Sql.LegacySdk.IServerAdministratorOperations.
        /// </param>
        /// <param name='resourceGroupName'>
        /// Required. The name of the Resource Group to which the server
        /// belongs.
        /// </param>
        /// <param name='serverName'>
        /// Required. The name of the Azure SQL Server to which the Azure SQL
        /// Server Active Directory administrators belongs.
        /// </param>
        /// <returns>
        /// Represents the response to a List Azure SQL Active Directory
        /// Administrators request.
        /// </returns>
        public static Task<ServerAdministratorListResponse> ListAsync(this IServerAdministratorOperations operations, string resourceGroupName, string serverName)
        {
            return operations.ListAsync(resourceGroupName, serverName, CancellationToken.None);
        }
    }
}
