// ----------------------------------------------------------------------------------
//
// Copyright Microsoft Corporation
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
// http://www.apache.org/licenses/LICENSE-2.0
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
// ----------------------------------------------------------------------------------

using Microsoft.Azure.Commands.Sql.VulnerabilityAssessment.Model;
using System;
using System.Collections.Generic;
using System.Management.Automation;

namespace Microsoft.Azure.Commands.Sql.VulnerabilityAssessment.Cmdlet.VulnerabilityAssessmentRuleBaseline
{
    /// <summary>
    /// Sets the Vulnerability Assessment baseline properties for a specific rule.
    /// </summary>
    [Cmdlet("Set", ResourceManager.Common.AzureRMConstants.AzureRMPrefix + "SqlDatabaseVulnerabilityAssessmentRuleBaseline", SupportsShouldProcess = true), OutputType(typeof(DatabaseVulnerabilityAssessmentRuleBaselineModel))]
    public class SetAzureSqlDatabaseVulnerabilityAssessmentRuleBaseline : SqlDatabaseVulnerabilityAssessmentRuleBaselineCmdletBase
    {
        protected const string SetByInputObjectParameterSet = "SetByInputObjectParameterSet";

        /// <summary>
        /// Vulnerability Assessment rule baseline object to set
        /// </summary>
        [Parameter(ParameterSetName = SetByInputObjectParameterSet,
            Mandatory = false,
            ValueFromPipeline = true,
            HelpMessage = "The Vulnerability Assessment rule baseline object to set")]
        [ValidateNotNullOrEmpty]
        public DatabaseVulnerabilityAssessmentRuleBaselineModel InputObject { get; set; }

        /// <summary>
        /// Gets or sets the Vulnerability Assessment Baseline result
        /// </summary>
        [Parameter(Mandatory = true,
            ValueFromPipelineByPropertyName = true, 
            HelpMessage = "The results to set as baseline for the rule in all future scans")]
        [ValidateNotNullOrEmpty]
        public string[][] BaselineResult { get; set; }

        /// <summary>
        /// Updates the given model element with the cmdlet specific operation 
        /// </summary>
        /// <param name="model">A model object</param>
        protected override DatabaseVulnerabilityAssessmentRuleBaselineModel ApplyUserInputToModel(DatabaseVulnerabilityAssessmentRuleBaselineModel model)
        {
            base.ApplyUserInputToModel(model);

            if (string.Equals(this.ParameterSetName, SetByInputObjectParameterSet, StringComparison.OrdinalIgnoreCase))
            {
                model.BaselineResult = InputObject.BaselineResult;
                model.RuleId = InputObject.RuleId;
                return model;
            }

            model.BaselineResult = new List<DatabaseVulnerabilityAssessmentRuleBaselineRowModel>();
            foreach (var baselineResult in BaselineResult)
            {
                var ruleBaselineItem = new DatabaseVulnerabilityAssessmentRuleBaselineRowModel()
                {
                    Result = baselineResult
                };

                model.BaselineResult.Add(ruleBaselineItem);
            }

            model.RuleId = RuleId;
            model.RuleAppliesToMaster = RuleAppliesToMaster.IsPresent;
            return model;
        }

        /// <summary>
        /// Provides the model element that this cmdlet operates on
        /// </summary>
        /// <returns>A model object</returns>
        protected override DatabaseVulnerabilityAssessmentRuleBaselineModel GetEntity()
        {
             if (string.Equals(this.ParameterSetName, SetByInputObjectParameterSet, StringComparison.OrdinalIgnoreCase))
            {
                return new DatabaseVulnerabilityAssessmentRuleBaselineModel()
                {
                    ResourceGroupName = InputObject.ResourceGroupName,
                    ServerName = InputObject.ServerName,
                    DatabaseName = InputObject.DatabaseName,
                    RuleId = InputObject.RuleId,
                    RuleAppliesToMaster = InputObject.RuleAppliesToMaster
                };
            }

            // No need to get the entity from the backend
            return new DatabaseVulnerabilityAssessmentRuleBaselineModel()
            {
                ResourceGroupName = ResourceGroupName,
                ServerName = ServerName,
                DatabaseName = DatabaseName,
                RuleId = RuleId,
                RuleAppliesToMaster = RuleAppliesToMaster.IsPresent
            };
        }

        /// <summary>
        /// This method is responsible to call the right API in the communication layer that will eventually send the information in the 
        /// object to the REST endpoint
        /// </summary>
        /// <param name="model">The model object with the data to be sent to the REST endpoints</param>
        protected override DatabaseVulnerabilityAssessmentRuleBaselineModel PersistChanges(DatabaseVulnerabilityAssessmentRuleBaselineModel model)
        {
            ModelAdapter.SetDatabaseVulnerabilityAssessmentRuleBaseline(model);
            return model;
        }
    }
}
