// ----------------------------------------------------------------------------------
//
// Copyright Microsoft Corporation
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
// http://www.apache.org/licenses/LICENSE-2.0
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
// ----------------------------------------------------------------------------------

using Microsoft.Azure.Commands.Sql.VulnerabilityAssessment.Model;
using System.Collections.Generic;
using System.Management.Automation;

namespace Microsoft.Azure.Commands.Sql.VulnerabilityAssessment.Cmdlet.VulnerabilityAssessmentRuleBaseline
{
    /// <summary>
    /// Sets the Vulnerability Assessment baseline properties for a specific rule.
    /// </summary>
    [Cmdlet(VerbsCommon.Set, "AzureRmSqlDatabaseVulnerabilityAssessmentRuleBaseline", SupportsShouldProcess = true), 
        OutputType(typeof(DatabaseVulnerabilityAssessmentRuleBaselineModel))]
    public class SetAzureSqlDatabaseVulnerabilityAssessmentRuleBaseline : SqlDatabaseVulnerabilityAssessmentRuleBaselineCmdletBase
    {
        /// <summary>
        ///  Defines whether the cmdlets will output the model object at the end of its execution
        /// </summary>
        [Parameter(Mandatory = false)]
        public SwitchParameter PassThru { get; set; }

        /// <summary>
        /// Gets or sets the Vulnerability Assessment Email Addresses
        /// </summary>
        [Parameter(Mandatory = true,
            ValueFromPipelineByPropertyName = true, 
            HelpMessage = "The results to set as baseline for the rule in all future scans")]
        [ValidateNotNullOrEmpty]
        public string[][] BaselineResult { get; set; }

        /// <summary>
        /// Gets or sets whether the security check is server level one (runs on the master database)
        /// </summary>
        [Parameter(Mandatory = false, 
            ValueFromPipelineByPropertyName = true,
            HelpMessage = "Specifies whether the security check is server level one (runs on the master database)")]
        public SwitchParameter AppliesToMaster { get; set; }

        /// <summary>
        /// Returns true if the model object that was constructed by this cmdlet should be written out
        /// </summary>
        /// <returns>True if the model object should be written out, False otherwise</returns>
        protected override bool WriteResult() { return PassThru; }

        /// <summary>
        /// Updates the given model element with the cmdlet specific operation 
        /// </summary>
        /// <param name="model">A model object</param>
        protected override DatabaseVulnerabilityAssessmentRuleBaselineModel ApplyUserInputToModel(DatabaseVulnerabilityAssessmentRuleBaselineModel model)
        {
            base.ApplyUserInputToModel(model);

            model.BaselineResult = new List<DatabaseVulnerabilityAssessmentRuleBaselineItemModel>();
            foreach (var baselineResult in BaselineResult)
            {
                var ruleBaselineItem = new DatabaseVulnerabilityAssessmentRuleBaselineItemModel()
                {
                    Result = baselineResult
                };

                model.BaselineResult.Add(ruleBaselineItem);
            }

            return model;
        }
    }
}
