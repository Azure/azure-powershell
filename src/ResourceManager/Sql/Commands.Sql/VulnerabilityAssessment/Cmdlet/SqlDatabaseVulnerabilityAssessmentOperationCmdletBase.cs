// ----------------------------------------------------------------------------------
//
// Copyright Microsoft Corporation
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
// http://www.apache.org/licenses/LICENSE-2.0
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
// ----------------------------------------------------------------------------------

using Microsoft.Azure.Commands.Sql.VulnerabilityAssessment.Services;
using System;

namespace Microsoft.Azure.Commands.Sql.VulnerabilityAssessment.Cmdlet
{
    /// <summary>
    /// The base class for all Azure Sql Database Vulnerability Assessment Management Cmdlets
    /// </summary>
    public abstract class SqlDatabaseVulnerabilityAssessmentOperationCmdletBase<M, A> : SqlDatabaseVulnerabilityAssessmentAtpCmdletBase<M, A> where A: BaseSqlVulnerabilityAssessmentAdapter
    {
        protected override M ApplyUserInputToModel(M model)
        {
            base.ApplyUserInputToModel(model);

            // Verify that the resource has vulnerability assessment settings defined
            var modelAdapter = ModelAdapter as BaseSqlVulnerabilityAssessmentAdapter;
            var policy = modelAdapter.GetDatabaseVulnerabilityAssessmentSettings(ResourceGroupName, ServerName, DatabaseName);
            if (string.IsNullOrEmpty(policy.StorageAccountName))
            {
                throw new Exception(Properties.Resources.RunSetVulnerabilityAssemenSettings);
            }

            return model;
        }
    }
}
