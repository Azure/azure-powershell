<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AzureAuditLogResourceFormat" xml:space="preserve">
    <value>/subscriptions/{0}/providers/microsoft.insights/eventtypes/management</value>
  </data>
  <data name="DataSourceCustomLogInvalidSchema" xml:space="preserve">
    <value>Make sure you have right json input for CustomLog data source.</value>
  </data>
  <data name="DataSourceDeleteConfirmationMessage" xml:space="preserve">
    <value>Are you sure you want to remove data source '{0}' in workspace '{1}'?</value>
  </data>
  <data name="DataSourceEnableNotSupported" xml:space="preserve">
    <value>Cannot enable data source for kind '{0}'.</value>
  </data>
  <data name="DataSourceExists" xml:space="preserve">
    <value>A dataSource with name '{0}' in workspace '{1}' exists. 
Continuing execution may overwrite the exisiting one. 
Are you sure you want to continue?</value>
  </data>
  <data name="DataSourceKindCannotBeEmpty" xml:space="preserve">
    <value>Kind cannot be null.</value>
  </data>
  <data name="DataSourceNotFound" xml:space="preserve">
    <value>DataSource '{0}' does not exist in workspace '{1}'.</value>
  </data>
  <data name="DataSourceRemoving" xml:space="preserve">
    <value>Removing data source '{0}' in workspace '{1}'.</value>
  </data>
  <data name="DataSourceSingletonMultipleRecord" xml:space="preserve">
    <value>We've hit a internal error, please contact support with workspaceId. SingletonDataSourceHaveMultipleValues.</value>
  </data>
  <data name="DataSourceSyslogNoSeveritySelected" xml:space="preserve">
    <value>Please atleast have one severity level to enable log collection.</value>
  </data>
  <data name="DataSourceUpdateCannotModifyKind" xml:space="preserve">
    <value>Cannot modify Kind while updating data source.</value>
  </data>
  <data name="DataSourceUpdateCannotModifyName" xml:space="preserve">
    <value>Cannot modify Name while updating data source, you might want delete and recreate.</value>
  </data>
  <data name="DataSourceWindowsEventNoEventTypeSelected" xml:space="preserve">
    <value>Please at least select one type of event to collect by using -CollectErrors -CollectWarnings -CollectInformation</value>
  </data>
  <data name="FormattedCloudExceptionMessageTemplate" xml:space="preserve">
    <value>HTTP Status Code: {0}
Error Code: {1}
Error Message: {2}
Request Id: {3}
Timestamp (Utc):{4}</value>
  </data>
  <data name="ResourceGroupNameCannotBeEmpty" xml:space="preserve">
    <value>Resource group name cannot be null.</value>
  </data>
  <data name="SavedSearchCreating" xml:space="preserve">
    <value>Creating saved search '{0}' in workspace '{1}'.</value>
  </data>
  <data name="SavedSearchDeleteConfirmationMessage" xml:space="preserve">
    <value>Are you sure you want to remove saved search '{0}' in workspace '{1}'?</value>
  </data>
  <data name="SavedSearchExists" xml:space="preserve">
    <value>A saved search with the id '{0}' in workspace '{1}' exists. 
Continuing execution may overwrite the exisiting one. 
Are you sure you want to continue?</value>
  </data>
  <data name="SavedSearchNotFound" xml:space="preserve">
    <value>Saved search '{0}' does not exist in workspace '{1}'.</value>
  </data>
  <data name="SavedSearchRemoving" xml:space="preserve">
    <value>Removing saved search '{0}' in workspace '{1}'.</value>
  </data>
  <data name="SingletonDataSourceCustomLogCollectionDefaultName" xml:space="preserve">
    <value>DataSource_CustomLogCollection</value>
  </data>
  <data name="SingletonDataSourceIISLogDefaultName" xml:space="preserve">
    <value>DataSource_IISLogs</value>
  </data>
  <data name="SingletonDataSourceLinuxPerformanceCollectionDefaultName" xml:space="preserve">
    <value>DataSource_LinuxPerformanceCollection</value>
  </data>
  <data name="SingletonDataSourceLinuxSyslogCollectionDefaultName" xml:space="preserve">
    <value>DataSource_LinuxSyslogCollection</value>
  </data>
  <data name="StorageInsightCreating" xml:space="preserve">
    <value>Creating storage insight '{0}' in workspace '{1}'.</value>
  </data>
  <data name="StorageInsightDeleteConfirmationMessage" xml:space="preserve">
    <value>Are you sure you want to remove storage insight '{0}' in workspace '{1}'?</value>
  </data>
  <data name="StorageInsightExists" xml:space="preserve">
    <value>A storage insight with name '{0}' in workspace '{1}' exists. 
Continuing execution may overwrite the exisiting one. 
Are you sure you want to continue?</value>
  </data>
  <data name="StorageInsightNotFound" xml:space="preserve">
    <value>Storage insight '{0}' does not exist in workspace '{1}'.</value>
  </data>
  <data name="StorageInsightRemoving" xml:space="preserve">
    <value>Removing storage insight '{0}' in workspace '{1}'.</value>
  </data>
  <data name="WorkspaceCreating" xml:space="preserve">
    <value>Creating workspace '{0}' in resource group '{1}'.</value>
  </data>
  <data name="WorkspaceDeleteConfirmationMessage" xml:space="preserve">
    <value>Are you sure you want to remove workspace '{0}' in resource group '{1}'?</value>
  </data>
  <data name="WorkspaceDetailsCannotBeEmpty" xml:space="preserve">
    <value>Resource group name and workspace name cannot be null.</value>
  </data>
  <data name="WorkspaceExists" xml:space="preserve">
    <value>A workspace with name '{0}' in resource group '{1}' exists. 
Continuing execution may overwrite the exisiting one. 
Are you sure you want to continue?</value>
  </data>
  <data name="WorkspaceNotFound" xml:space="preserve">
    <value>Workspace '{0}' does not exist in resource group '{1}'.</value>
  </data>
  <data name="WorkspaceProvisioningFailed" xml:space="preserve">
    <value>Failed to provision workspace '{0}' in resource group '{1}'.</value>
  </data>
  <data name="WorkspaceRemoving" xml:space="preserve">
    <value>Removing workspace '{0}' in resource group '{1}'.</value>
  </data>
</root>