// 
// Copyright (c) Microsoft and contributors.  All rights reserved.
// 
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//   http://www.apache.org/licenses/LICENSE-2.0
// 
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// 
// See the License for the specific language governing permissions and
// limitations under the License.
// 

// Warning: This code was generated by a tool.
// 
// Changes to this file may cause incorrect behavior and will be lost if the
// code is regenerated.

using Microsoft.Azure.Commands.ResourceManager.Common.Tags;
using System.Net;
using Microsoft.Azure.Commands.Network.Models;
using Microsoft.Azure.Management.Network;
using Microsoft.Azure.Management.Network.Models;
using System;
using System.Collections;
using System.Collections.Generic;
using System.Linq;
using System.Management.Automation;
using AutoMapper;
using MNM = Microsoft.Azure.Management.Network.Models;

namespace Microsoft.Azure.Commands.Network.Automation
{

    [Cmdlet(VerbsCommon.Set, "AzureRmNetworkSecurityGroup"), OutputType(typeof(PSNetworkSecurityGroup))]
    public class SetAzureNetworkSecurityGroupCommand : NetworkBaseCmdlet
    {
        [Parameter(
            Mandatory = true,
            ValueFromPipeline = true,
            HelpMessage = "The network security group")]
        public PSNetworkSecurityGroup NetworkSecurityGroup { get; set; }

        public override void Execute()
        {
            base.Execute();
            var present = true;
            try
            {
                this.NetworkClient.NetworkManagementClient.NetworkSecurityGroups.Get(this.NetworkSecurityGroup.ResourceGroupName, this.NetworkSecurityGroup.Name);
            }
            catch (Microsoft.Rest.Azure.CloudException exception)
            {
                if (exception.Response.StatusCode == HttpStatusCode.NotFound)
                {
                    // Resource is not present
                    present = false;
                }
                else
                {
                    throw;
                }
            }

            if(!present)
            {
                throw new ArgumentException(Microsoft.Azure.Commands.Network.Properties.Resources.ResourceNotFound);
            }

            // Map to the sdk object
            var vNetworkSecurityGroupModel = Mapper.Map<MNM.NetworkSecurityGroup>(this.NetworkSecurityGroup);
            vNetworkSecurityGroupModel.Tags = TagsConversionHelper.CreateTagDictionary(this.NetworkSecurityGroup.Tag, validate: true);

            // Execute the PUT NetworkSecurityGroup call
            this.NetworkClient.NetworkManagementClient.NetworkSecurityGroups.CreateOrUpdate(this.NetworkSecurityGroup.ResourceGroupName, this.NetworkSecurityGroup.Name, vNetworkSecurityGroupModel);

            var getNetworkSecurityGroup = this.NetworkClient.NetworkManagementClient.NetworkSecurityGroups.Get(this.NetworkSecurityGroup.ResourceGroupName, this.NetworkSecurityGroup.Name);
            var psNetworkSecurityGroup = Mapper.Map<PSNetworkSecurityGroup>(getNetworkSecurityGroup);
            psNetworkSecurityGroup.ResourceGroupName = this.NetworkSecurityGroup.ResourceGroupName;
            psNetworkSecurityGroup.Tag = TagsConversionHelper.CreateTagHashtable(getNetworkSecurityGroup.Tags);
            WriteObject(psNetworkSecurityGroup, true);
        }
    }
}
