<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="CompletedSuccessfully" xml:space="preserve">
    <value>Success</value>
  </data>
  <data name="DisableJobCollectionResourceDescription" xml:space="preserve">
    <value>Disabling job collection '{0}'.</value>
  </data>
  <data name="DisableJobCollectionResourceWarning" xml:space="preserve">
    <value>Are you sure you want to disable the job collection '{0}' ?</value>
  </data>
  <data name="EnableJobCollectionResourceDescription" xml:space="preserve">
    <value>Enabling job collection '{0}'.</value>
  </data>
  <data name="GetJobCollectionResourceDescription" xml:space="preserve">
    <value>Get job collection.</value>
  </data>
  <data name="GetJobHistoryResourceDescription" xml:space="preserve">
    <value>Get job history for job '{0}'.</value>
  </data>
  <data name="GetJobResourceDescription" xml:space="preserve">
    <value>Get job.</value>
  </data>
  <data name="JobCollectionDoesnotExist" xml:space="preserve">
    <value>There's no job collection for resource name '{0}' and job collection name '{1}'.</value>
  </data>
  <data name="JobCollectionMaxJobQuotaTooLargeForFree" xml:space="preserve">
    <value>The maximum job count quota has a value that is too large; this quota cannot be set higher than '{0}' for free subscriptions('{1}' was provided). To increase quota, please upgrade to the standard or premium plan.</value>
  </data>
  <data name="JobCollectionMaxJobQuotaTooLargeForPaid" xml:space="preserve">
    <value>The maximum job count quota has a value that is too large; this quota cannot be set higher then '{0}' ('{1}' was provided).</value>
  </data>
  <data name="JobCollectionMaxRecurrenceQuotaTooLargeForFree" xml:space="preserve">
    <value>The provided MaxRecurrence for job collection Quota '{0}' exceeds the permissible limit for Free collections '{1}'.</value>
  </data>
  <data name="JobCollectionMaxRecurrenceQuotaTooLargeForPaid" xml:space="preserve">
    <value>The provided maxRecurrence for job collection quota {0} exceeds the permissible limit ({1}).</value>
  </data>
  <data name="JobCollectionReachedQuota" xml:space="preserve">
    <value>The job collection has reached its quota of '{0}'. Please remove existing jobs before adding new ones.</value>
  </data>
  <data name="JobDoesnotExist" xml:space="preserve">
    <value>There's no job for resource name '{0}', job collection name '{1}' and job name '{2}'.</value>
  </data>
  <data name="NewHttpJobResourceDescription" xml:space="preserve">
    <value>Create new http job '{0}'.</value>
  </data>
  <data name="NewJobCollectionResourceDescription" xml:space="preserve">
    <value>Create new job collection '{0}'.</value>
  </data>
  <data name="NewServiceBusQueueJobResourceDescription" xml:space="preserve">
    <value>Create new service bus queue job '{0}'.</value>
  </data>
  <data name="NewServiceBusTopicJobResourceDescription" xml:space="preserve">
    <value>Create new service bus topic job '{0}'.</value>
  </data>
  <data name="NewStorageQueueJobResourceDescription" xml:space="preserve">
    <value>Create new storage queue job '{0}'.</value>
  </data>
  <data name="RemoveJobCollectionResourceDescription" xml:space="preserve">
    <value>Removing job collection '{0}'.</value>
  </data>
  <data name="RemoveJobCollectionResourceWarning" xml:space="preserve">
    <value>Are you sure you want to remove the job collection '{0}'?</value>
  </data>
  <data name="RemoveJobDescription" xml:space="preserve">
    <value>Removing job '{0}'.</value>
  </data>
  <data name="RemoveJobWarning" xml:space="preserve">
    <value>Are you sure you want to remove the job '{0}' ?</value>
  </data>
  <data name="SchedulerExistingJob" xml:space="preserve">
    <value>A job with name '{0}' already exists in job collection '{1}'. Please specify a different name.</value>
  </data>
  <data name="SchedulerExistingJobCollection" xml:space="preserve">
    <value>A job collection with name '{0}' already exists in resource group '{1}'. Please specify a different name.</value>
  </data>
  <data name="SchedulerInvalidActiveDirectoryOAuthRequest" xml:space="preserve">
    <value>A valid value for Secret, Tenant, Audience, and ClientId parameters are required for Http scheduler jobs with ActiveDirectoryOAuth authentication type.</value>
  </data>
  <data name="SchedulerInvalidAuthenticationType" xml:space="preserve">
    <value>A valid authentication type required.</value>
  </data>
  <data name="SchedulerInvalidBasicRequest" xml:space="preserve">
    <value>A valid value for Username and Password parameters are required for Http scheduler jobs with Basic authentication type.</value>
  </data>
  <data name="SchedulerInvalidClientCertAuthRequest" xml:space="preserve">
    <value>A valid value for ClientCertificatePfx and ClientCertificatePassword parameters are required for Http scheduler jobs with ClientCertificate authentication type.</value>
  </data>
  <data name="SchedulerInvalidHttpRequest" xml:space="preserve">
    <value>A valid value for Method and Uri parameters are required for Http action job.</value>
  </data>
  <data name="SchedulerInvalidLocation" xml:space="preserve">
    <value>Invalid location entered. Pick one of the locations from Get-AzureSchedulerLocation</value>
  </data>
  <data name="SchedulerInvalidResourceGroup" xml:space="preserve">
    <value>Invalid resource group entered. Create new resource group or use an existing one.</value>
  </data>
  <data name="SchedulerInvalidServiceBus" xml:space="preserve">
    <value>A valid value for Namespace, Message, and TransportType parameters are required for ServiceBus job.</value>
  </data>
  <data name="SchedulerInvalidServiceBusQueueName" xml:space="preserve">
    <value>A valid value for QueueName required for ServiceBus Queue action job.</value>
  </data>
  <data name="SchedulerInvalidServiceBusTopicPath" xml:space="preserve">
    <value>A valid value for TopicPath required for ServiceBus Topic action job.</value>
  </data>
  <data name="SchedulerInvalidStorageQueue" xml:space="preserve">
    <value>A valid value for StorageQueueAccount, StorageQueueName, SASToken, and StorageQueueMessage parameters are required for Storage queue job.</value>
  </data>
  <data name="SchedulerInvalidUriScheme" xml:space="preserve">
    <value>'{0}' sheme is not supported. Supports "http or https" scheme.</value>
  </data>
  <data name="SchedulerNoJobContentType" xml:space="preserve">
    <value>Content-Type must be provided with body</value>
  </data>
  <data name="SchedulerNoMoreFreeJobCollection" xml:space="preserve">
    <value>The subscription already has a free job collection. Only one free job collection can be created per subscription.</value>
  </data>
  <data name="UpdateHttpJobResourceDescription" xml:space="preserve">
    <value>Update existing http job '{0}'.</value>
  </data>
  <data name="UpdateJobCollectionResourceDescription" xml:space="preserve">
    <value>Update existing job collection '{0}'.</value>
  </data>
  <data name="UpdateServiceBusQueueJobResourceDescription" xml:space="preserve">
    <value>Update existing service bus queue job '{0}'.</value>
  </data>
  <data name="UpdateServiceBusTopicJobResourceDescription" xml:space="preserve">
    <value>Update existing service bus topic job '{0}'.</value>
  </data>
  <data name="UpdateStorageQueueJobResourceDescription" xml:space="preserve">
    <value>Update existing storage queue job '{0}'.</value>
  </data>
</root>