<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AddingCertificate" xml:space="preserve">
    <value>Adding a new certificate with thumbprint {0}. </value>
  </data>
  <data name="BeginMAMLCall" xml:space="preserve">
    <value>Begin {0} call to RP</value>
  </data>
  <data name="CancelCertificateDelete" xml:space="preserve">
    <value>Canceling deletion of the certificate with thumbprint {0}.</value>
  </data>
  <data name="ChangeOSVersion" xml:space="preserve">
    <value>Changing OS version of pool {0} to {1}.</value>
  </data>
  <data name="CheckingAccountNameAvailability" xml:space="preserve">
    <value>Performing name availability check for account {0}</value>
  </data>
  <data name="CreatingComputeNodeUser" xml:space="preserve">
    <value>Creating user {0} on compute node {1}</value>
  </data>
  <data name="CreatingJob" xml:space="preserve">
    <value>Creating job {0}</value>
  </data>
  <data name="CreatingJobSchedule" xml:space="preserve">
    <value>Creating job schedule {0}</value>
  </data>
  <data name="CreatingPool" xml:space="preserve">
    <value>Creating pool {0}</value>
  </data>
  <data name="CreatingTask" xml:space="preserve">
    <value>Creating task {0}</value>
  </data>
  <data name="DisableAutoScale" xml:space="preserve">
    <value>Disabling automatic scaling on pool {0}.</value>
  </data>
  <data name="DisableComputeNodeScheduling" xml:space="preserve">
    <value>Disabling task scheduling on compute node {0}.</value>
  </data>
  <data name="DisableJob" xml:space="preserve">
    <value>Disabling job {0}.</value>
  </data>
  <data name="DisableJobSchedule" xml:space="preserve">
    <value>Disabling job schedule {0}.</value>
  </data>
  <data name="DownloadingNodeFile" xml:space="preserve">
    <value>Downloading node file {0} to: {1}</value>
  </data>
  <data name="DownloadingRDPFile" xml:space="preserve">
    <value>Downloading Remote Desktop Protocol file for compute node {0} to: {1}</value>
  </data>
  <data name="EnableAutoScale" xml:space="preserve">
    <value>Enabling automatic scaling on pool {0} using the formula: {1}</value>
  </data>
  <data name="EnableComputeNodeScheduling" xml:space="preserve">
    <value>Enabling task scheduling on compute node {0}.</value>
  </data>
  <data name="EnableJob" xml:space="preserve">
    <value>Enabling job {0}.</value>
  </data>
  <data name="EnableJobSchedule" xml:space="preserve">
    <value>Enabling job schedule {0}.</value>
  </data>
  <data name="EndMAMLCall" xml:space="preserve">
    <value>End {0} call to RP</value>
  </data>
  <data name="EvaluateAutoScale" xml:space="preserve">
    <value>Evaluating the following autoscale formula on pool {0}: {1}</value>
  </data>
  <data name="GetAllAccounts" xml:space="preserve">
    <value>Getting all accounts in subscription</value>
  </data>
  <data name="GetCertificateByThumbprint" xml:space="preserve">
    <value>Getting the certificate with thumbprint {0}.</value>
  </data>
  <data name="GetCertificatesByFilter" xml:space="preserve">
    <value>Getting certificates matching the specified OData filter.</value>
  </data>
  <data name="GetCertificatesNoFilter" xml:space="preserve">
    <value>Getting all certificates that have been added to the Batch account.</value>
  </data>
  <data name="GetComputeNodeById" xml:space="preserve">
    <value>Getting compute node "{0}" from pool "{1}".</value>
  </data>
  <data name="GetComputeNodeByOData" xml:space="preserve">
    <value>Getting compute nodes matching the specified OData filter from pool "{0}".</value>
  </data>
  <data name="GetComputeNodeNoFilter" xml:space="preserve">
    <value>Getting all compute nodes under pool "{0}".</value>
  </data>
  <data name="GetJobById" xml:space="preserve">
    <value>Getting job "{0}"</value>
  </data>
  <data name="GetJobByJobScheduleNoFilter" xml:space="preserve">
    <value>Getting all jobs from job schedule "{0}".</value>
  </data>
  <data name="GetJobByOData" xml:space="preserve">
    <value>Getting jobs matching the specified OData filter.</value>
  </data>
  <data name="GetJobByODataAndJobSChedule" xml:space="preserve">
    <value>Getting jobs matching the specified OData filter from job schedule "{0}".</value>
  </data>
  <data name="GetJobNoFilter" xml:space="preserve">
    <value>Getting all jobs associated with the Batch account.</value>
  </data>
  <data name="GetJobScheduleById" xml:space="preserve">
    <value>Getting job schedule "{0}"</value>
  </data>
  <data name="GetJobScheduleByOData" xml:space="preserve">
    <value>Getting job schedules matching the specified OData filter. </value>
  </data>
  <data name="GetJobScheduleNoFilter" xml:space="preserve">
    <value>Getting all job schedules associated with the Batch account. </value>
  </data>
  <data name="GetNodeFileByComputeNodeByName" xml:space="preserve">
    <value>Getting node file "{0}" from compute node "{1}"</value>
  </data>
  <data name="GetNodeFileByComputeNodeByOData" xml:space="preserve">
    <value>Getting node files matching the specified OData filter from compute node "{0}".</value>
  </data>
  <data name="GetNodeFileByComputeNodeNoFilter" xml:space="preserve">
    <value>Getting all node files from compute node "{0}".</value>
  </data>
  <data name="GetNodeFileByTaskByName" xml:space="preserve">
    <value>Getting node file "{0}" from task "{1}"</value>
  </data>
  <data name="GetNodeFileByTaskByOData" xml:space="preserve">
    <value>Getting node files matching the specified OData filter from task "{0}".</value>
  </data>
  <data name="GetNodeFileByTaskNoFilter" xml:space="preserve">
    <value>Getting all node files under task "{0}".</value>
  </data>
  <data name="GetPoolById" xml:space="preserve">
    <value>Getting pool "{0}"</value>
  </data>
  <data name="GetPoolByOData" xml:space="preserve">
    <value>Getting pools matching the specified OData filter. </value>
  </data>
  <data name="GetPoolNoFilter" xml:space="preserve">
    <value>Getting all pools associated with the Batch account. </value>
  </data>
  <data name="GetResourceGroupAccounts" xml:space="preserve">
    <value>Getting accounts in resource group {0}</value>
  </data>
  <data name="GetSubtaskNoFilter" xml:space="preserve">
    <value>Getting all subtask information for task {0}.</value>
  </data>
  <data name="GetSubtaskOData" xml:space="preserve">
    <value>Getting subtask information matching the specified OData filter for task {0}.</value>
  </data>
  <data name="GetTaskById" xml:space="preserve">
    <value>Getting task "{0}" from job "{1}"</value>
  </data>
  <data name="GetTaskByOData" xml:space="preserve">
    <value>Getting tasks matching the specified OData filter from job "{0}".</value>
  </data>
  <data name="GetTaskNoFilter" xml:space="preserve">
    <value>Getting all tasks from job "{0}".</value>
  </data>
  <data name="GettingAccountKeys" xml:space="preserve">
    <value>Getting account keys for {0}</value>
  </data>
  <data name="GettingLocationQuotas" xml:space="preserve">
    <value>Getting the Batch service quotas for the subscription at region: {0}.</value>
  </data>
  <data name="InvalidEndpointType" xml:space="preserve">
    <value>The endpoint is not recognized as valid: {0}</value>
  </data>
  <data name="InvalidResourceId" xml:space="preserve">
    <value>The resource ID is not recognized as valid: {0}</value>
  </data>
  <data name="InvalidTagFormat" xml:space="preserve">
    <value>Invalid tag format. Expect @{Name = "tagName"} or @{Name = "tagName"; Value = "tagValue"}</value>
  </data>
  <data name="InvalidTagFormatNotUniqueName" xml:space="preserve">
    <value>Invalid tag format. Ensure that each tag has a unique name. Example: @{Name = "tagName1"; Value = "tagValue1"}, @{Name = "tagName2"; Value = "tagValue2"}</value>
  </data>
  <data name="LookupAccount" xml:space="preserve">
    <value>Checking if account already exists</value>
  </data>
  <data name="MaxCount" xml:space="preserve">
    <value>A max count of {0} will be returned.</value>
  </data>
  <data name="MissingResGroupName" xml:space="preserve">
    <value>Cannot find resource group name in ID property: {0}</value>
  </data>
  <data name="NoCertificateData" xml:space="preserve">
    <value>No certificate data was specified. Supply the path to a certificate file, or provide the raw certificate data.</value>
  </data>
  <data name="NoComputeNode" xml:space="preserve">
    <value>No compute node was specified. Supply a PSComputeNode object or a pool id and compute node id.</value>
  </data>
  <data name="NoComputeNodeUser" xml:space="preserve">
    <value>No compute node user specified. Supply a pool id, compute node id, and compute node user name.</value>
  </data>
  <data name="NoDownloadDestination" xml:space="preserve">
    <value>No destination was provided for the downloaded file. Either provide a file path or a Stream object.</value>
  </data>
  <data name="NoJob" xml:space="preserve">
    <value>No job was specified. Supply a PSCloudJob object or a job id.</value>
  </data>
  <data name="NoJobSchedule" xml:space="preserve">
    <value>No job schedule was specified.  Supply a job schedule id or PSCloudJobSchedule object.</value>
  </data>
  <data name="NoNodeFile" xml:space="preserve">
    <value>No node file was specified. Supply a PSNodeFile object or a node file name along with either a parent job id and task id, or a parent pool id and compute node id.</value>
  </data>
  <data name="NoNodeFileParent" xml:space="preserve">
    <value>No node file parent information was specified.  To specify a parent task, supply a PSCloudTask object or a job id and a task id. To specify a parent compute node, supply a PSComputeNode object or a pool id and a compute node id.</value>
  </data>
  <data name="NoPool" xml:space="preserve">
    <value>No pool was specified. Supply a PSCloudPool object or a pool id.</value>
  </data>
  <data name="NoTask" xml:space="preserve">
    <value>No task was specified. Supply a PSCloudTask object or a job id and task id.</value>
  </data>
  <data name="ReactivateTask" xml:space="preserve">
    <value>Reactivating task {0}.</value>
  </data>
  <data name="RebootComputeNode" xml:space="preserve">
    <value>Rebooting compute node {0}.</value>
  </data>
  <data name="ReimageComputeNode" xml:space="preserve">
    <value>Reimaging compute node {0}.</value>
  </data>
  <data name="RemoveAccountConfirm" xml:space="preserve">
    <value>Are you sure you want to remove batch account {0}?</value>
  </data>
  <data name="RemoveBatchAccount" xml:space="preserve">
    <value>Removing batch account ...</value>
  </data>
  <data name="RemoveCertificate" xml:space="preserve">
    <value>Removing certificate ...</value>
  </data>
  <data name="RemoveCertificateConfirm" xml:space="preserve">
    <value>Are you sure you want to remove the certificate with thumbprint {0}?</value>
  </data>
  <data name="RemoveComputeNode" xml:space="preserve">
    <value>Removing compute node(s) from pool...</value>
  </data>
  <data name="RemoveComputeNodeConfirm" xml:space="preserve">
    <value>Are you sure you want to remove compute node(s) {0} from the pool?</value>
  </data>
  <data name="RemoveComputeNodeUser" xml:space="preserve">
    <value>Removing user ...</value>
  </data>
  <data name="RemoveComputeNodeUserConfirm" xml:space="preserve">
    <value>Are you sure you want to remove user {0}?</value>
  </data>
  <data name="RemoveJob" xml:space="preserve">
    <value>Removing job ...</value>
  </data>
  <data name="RemoveJobConfirm" xml:space="preserve">
    <value>Are you sure you want to remove job {0}?</value>
  </data>
  <data name="RemoveJobSchedule" xml:space="preserve">
    <value>Removing job schedule ...</value>
  </data>
  <data name="RemoveJobScheduleConfirm" xml:space="preserve">
    <value>Are you sure you want to remove job schedule {0}?</value>
  </data>
  <data name="RemoveNodeFile" xml:space="preserve">
    <value>Deleting node file...</value>
  </data>
  <data name="RemoveNodeFileConfirm" xml:space="preserve">
    <value>Are you sure you want to delete node file {0}?</value>
  </data>
  <data name="RemovePool" xml:space="preserve">
    <value>Removing pool ...</value>
  </data>
  <data name="RemovePoolConfirm" xml:space="preserve">
    <value>Are you sure you want to remove pool {0}?</value>
  </data>
  <data name="RemoveTask" xml:space="preserve">
    <value>Removing task ...</value>
  </data>
  <data name="RemoveTaskConfirm" xml:space="preserve">
    <value>Are you sure you want to remove task {0}?</value>
  </data>
  <data name="ResGroupLookup" xml:space="preserve">
    <value>Looking up resource group for account {0}</value>
  </data>
  <data name="ResizingPool" xml:space="preserve">
    <value>Resizing pool {0}, new target dedicated: {1}, new target low-priority: {2}.</value>
  </data>
  <data name="ResourceNotFound" xml:space="preserve">
    <value>ResourceNotFound: Resource not found.</value>
    <comment>emulate exception generated by RP</comment>
  </data>
  <data name="StopResizingPool" xml:space="preserve">
    <value>Stopping resize operation on pool {0}.</value>
  </data>
  <data name="TerminateJob" xml:space="preserve">
    <value>Terminating job {0}.</value>
  </data>
  <data name="TerminateJobSchedule" xml:space="preserve">
    <value>Terminating job schedule {0}.</value>
  </data>
  <data name="TerminateTask" xml:space="preserve">
    <value>Terminating task {0}.</value>
  </data>
  <data name="UpdatingAccount" xml:space="preserve">
    <value>Updating account {0}</value>
  </data>
  <data name="UpdatingComputeNodeUser" xml:space="preserve">
    <value>Updating compute node user {0}.</value>
  </data>
  <data name="UpdatingJob" xml:space="preserve">
    <value>Updating job {0}.</value>
  </data>
  <data name="UpdatingJobSchedule" xml:space="preserve">
    <value>Updating job schedule {0}.</value>
  </data>
  <data name="UpdatingPool" xml:space="preserve">
    <value>Updating pool {0}.</value>
  </data>
  <data name="UpdatingTask" xml:space="preserve">
    <value>Updating task {0}.</value>
  </data>
  <data name="FileNotFound" xml:space="preserve">
    <value>File not found {0}.</value>
  </data>
  <data name="NewApplicationPackageNoPathSpecified" xml:space="preserve">
    <value>When uploading a new application package, you must specify a value for the FilePath parameter.</value>
  </data>
  <data name="FailedToUpload" xml:space="preserve">
    <value>Failed to upload {0} to Azure Storage. {1}.</value>
  </data>
  <data name="FailedToUploadAndDelete" xml:space="preserve">
    <value>Failed to upload {0} to Azure Storage and the attempt to delete the application package record afterwards failed. Remove the application package record with the Remove-AzureRmBatchApplicationPackage cmdlet and retry. {1}.</value>
  </data>
  <data name="UploadedApplicationButFailedToActivate" xml:space="preserve">
    <value>Application package {0} version {1} successfully uploaded but failed to activate. Activate the application package using the New-AzureRmBatchApplicationPackage cmdlet with the -ActivateOnly parameter. {2}.</value>
  </data>
  <data name="FailedToActivate" xml:space="preserve">
    <value>Failed to activate application package {0} version {1}. {2}.</value>
  </data>
  <data name="FailedToGetApplicationPackage" xml:space="preserve">
    <value>Failed to create application package {0} version {1}.  Unable to determine whether the application package already exists. {2}.</value>
  </data>
  <data name="FailedToAddApplicationPackage" xml:space="preserve">
    <value>Failed to add application package {0} version {1}. {2}.</value>
  </data>
  <data name="ApplicationDoesNotAllowUpdates" xml:space="preserve">
    <value>Failed to create application package {0} version {1}. The package already exists, and the application does not allow existing packages to be updated. You must upload your package using a new version number.</value>
  </data>
  <data name="FailedToCheckApplication" xml:space="preserve">
    <value>Failed to create application package {0} version {1}. The package already exists, and an error occurred when checking if the application allows existing packages to be updated. {2}.</value>
  </data>
  <data name="GetAllJobsLifetimeStatistics" xml:space="preserve">
    <value>Getting lifetime statistics for all of the jobs.</value>
  </data>
  <data name="GetAllPoolsLifetimeStatistics" xml:space="preserve">
    <value>Getting lifetime statistics for all of the pools.</value>
  </data>
  <data name="GetPoolUsageMetricsByNoFilter" xml:space="preserve">
    <value>Getting usage metrics, aggregated for pools.</value>
  </data>
  <data name="GetPoolUsageMetricsByFilter" xml:space="preserve">
    <value>Getting usage metrics, aggregated for pools with the filter {0}.</value>
  </data>
  <data name="GetJobPreparationAndReleaseStatus" xml:space="preserve">
    <value>Getting job preparation and release status for job "{0}"</value>
  </data>
  <data name="DownloadingNodeFileByteRange" xml:space="preserve">
    <value>Downloading byte range {0} to {1}</value>
  </data>
  <data name="UsingAadAuth" xml:space="preserve">
    <value>Using Azure Active Directory authentication to interact with the Batch service. To use shared key authentication, supply a BatchAccountContext that was returned from the Get-AzureRmBatchAccountKeys cmdlet.</value>
  </data>
  <data name="UsingSharedKeyAuth" xml:space="preserve">
    <value>Using shared key authentication to interact with the Batch service. Current key in use: {0}. To change keys, set the BatchAccountContext.KeyInUse property. To use Azure Active Directory authentication, supply a BatchAccountContext that was returned from the Get-AzureRmBatchAccount cmdlet.</value>
  </data>
  <data name="GetTaskCounts" xml:space="preserve">
    <value>Getting task counts for job {0}.</value>
  </data>
  <data name="NoContainerUrl" xml:space="preserve">
    <value>No container url specified. The container url should include Shared access signature for the Azure Storage container.</value>
  </data>
  <data name="NoStartTime" xml:space="preserve">
    <value>No start time specified.</value>
  </data>
</root>