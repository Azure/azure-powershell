<?xml version="1.0" encoding="UTF-8"?>
<!--
// 
// Copyright (c) Microsoft and contributors.  All rights reserved.
// 
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//   http://www.apache.org/licenses/LICENSE-2.0
// 
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// 
// See the License for the specific language governing permissions and
// limitations under the License.
// 

// Warning: This code was generated by a tool.
// 
// Changes to this file may cause incorrect behavior and will be lost if the
// code is regenerated.
-->
<Configuration>
  <ViewDefinitions>
    <View>
      <Name>Microsoft.Azure.Management.Compute.Models.VirtualMachineScaleSet</Name>
      <ViewSelectedBy>
        <TypeName>Microsoft.Azure.Management.Compute.Models.VirtualMachineScaleSet</TypeName>
      </ViewSelectedBy>
      <ListControl>
        <ListEntries>
          <ListEntry>
            <ListItems>
              <ListItem>
                <Label>Sku</Label>
                <ScriptBlock>[Newtonsoft.Json.JsonConvert]::SerializeObject($_.Sku,  [Newtonsoft.Json.Formatting]::Indented)</ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>UpgradePolicy</Label>
                <ScriptBlock>[Newtonsoft.Json.JsonConvert]::SerializeObject($_.UpgradePolicy,  [Newtonsoft.Json.Formatting]::Indented)</ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>VirtualMachineProfile</Label>
                <ScriptBlock>[Newtonsoft.Json.JsonConvert]::SerializeObject($_.VirtualMachineProfile,  [Newtonsoft.Json.Formatting]::Indented)</ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>ProvisioningState</Label>
                <PropertyName>ProvisioningState</PropertyName>
              </ListItem>
              <ListItem>
                <Label>OverProvision</Label>
                <PropertyName>OverProvision</PropertyName>
              </ListItem>
              <ListItem>
                <Label>Id</Label>
                <PropertyName>Id</PropertyName>
              </ListItem>
              <ListItem>
                <Label>Name</Label>
                <PropertyName>Name</PropertyName>
              </ListItem>
              <ListItem>
                <Label>Type</Label>
                <PropertyName>Type</PropertyName>
              </ListItem>
              <ListItem>
                <Label>Location</Label>
                <PropertyName>Location</PropertyName>
              </ListItem>
              <ListItem>
                <Label>Tags.Count</Label>
                <ScriptBlock> if ($_.Tags -eq $null) { 0 } else { $_.Tags.Count }</ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>Tags</Label>
                <ScriptBlock> foreach ($item in $_.Tags) { [Newtonsoft.Json.JsonConvert]::SerializeObject($item,  [Newtonsoft.Json.Formatting]::Indented) } </ScriptBlock>
              </ListItem>
            </ListItems>
          </ListEntry>
        </ListEntries>
      </ListControl>
    </View>
    <View>
      <Name>Microsoft.Azure.Management.Compute.Models.VirtualMachineScaleSetInstanceView</Name>
      <ViewSelectedBy>
        <TypeName>Microsoft.Azure.Management.Compute.Models.VirtualMachineScaleSetInstanceView</TypeName>
      </ViewSelectedBy>
      <ListControl>
        <ListEntries>
          <ListEntry>
            <ListItems>
              <ListItem>
                <Label>VirtualMachine</Label>
                <ScriptBlock>[Newtonsoft.Json.JsonConvert]::SerializeObject($_.VirtualMachine,  [Newtonsoft.Json.Formatting]::Indented)</ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>Extensions.Count</Label>
                <ScriptBlock> if ($_.Extensions -eq $null) { 0 } else { $_.Extensions.Count }</ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>Extensions</Label>
                <ScriptBlock> foreach ($item in $_.Extensions) { [Newtonsoft.Json.JsonConvert]::SerializeObject($item,  [Newtonsoft.Json.Formatting]::Indented) } </ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>Statuses.Count</Label>
                <ScriptBlock> if ($_.Statuses -eq $null) { 0 } else { $_.Statuses.Count }</ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>Statuses</Label>
                <ScriptBlock> foreach ($item in $_.Statuses) { [Newtonsoft.Json.JsonConvert]::SerializeObject($item,  [Newtonsoft.Json.Formatting]::Indented) } </ScriptBlock>
              </ListItem>
            </ListItems>
          </ListEntry>
        </ListEntries>
      </ListControl>
    </View>
    <View>
      <Name>Microsoft.Azure.Management.Compute.Models.InstanceViewStatus</Name>
      <ViewSelectedBy>
        <TypeName>Microsoft.Azure.Management.Compute.Models.InstanceViewStatus</TypeName>
      </ViewSelectedBy>
      <ListControl>
        <ListEntries>
          <ListEntry>
            <ListItems>
              <ListItem>
                <Label>InstanceViewStatus</Label>
                <ScriptBlock>[Newtonsoft.Json.JsonConvert]::SerializeObject($_,  [Newtonsoft.Json.Formatting]::Indented)</ScriptBlock>
              </ListItem>
            </ListItems>
          </ListEntry>
        </ListEntries>
      </ListControl>
    </View>
    <View>
      <Name>Microsoft.Rest.Azure.IPage`1[[Microsoft.Azure.Management.Compute.Models.VirtualMachineScaleSet, Microsoft.Azure.Management.Compute, Version=10.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35]]</Name>
      <ViewSelectedBy>
        <TypeName>Microsoft.Rest.Azure.IPage`1[[Microsoft.Azure.Management.Compute.Models.VirtualMachineScaleSet, Microsoft.Azure.Management.Compute, Version=10.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35]]</TypeName>
      </ViewSelectedBy>
      <ListControl>
        <ListEntries>
          <ListEntry>
            <ListItems>
              <ListItem>
                <Label>NextPageLink</Label>
                <PropertyName>NextPageLink</PropertyName>
              </ListItem>
            </ListItems>
          </ListEntry>
        </ListEntries>
      </ListControl>
    </View>
    <View>
      <Name>Microsoft.Azure.Management.Compute.Models.VirtualMachineScaleSetVM</Name>
      <ViewSelectedBy>
        <TypeName>Microsoft.Azure.Management.Compute.Models.VirtualMachineScaleSetVM</TypeName>
      </ViewSelectedBy>
      <ListControl>
        <ListEntries>
          <ListEntry>
            <ListItems>
              <ListItem>
                <Label>InstanceId</Label>
                <PropertyName>InstanceId</PropertyName>
              </ListItem>
              <ListItem>
                <Label>Sku</Label>
                <ScriptBlock>[Newtonsoft.Json.JsonConvert]::SerializeObject($_.Sku,  [Newtonsoft.Json.Formatting]::Indented)</ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>LatestModelApplied</Label>
                <PropertyName>LatestModelApplied</PropertyName>
              </ListItem>
              <ListItem>
                <Label>InstanceView</Label>
                <ScriptBlock>[Newtonsoft.Json.JsonConvert]::SerializeObject($_.InstanceView,  [Newtonsoft.Json.Formatting]::Indented)</ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>HardwareProfile</Label>
                <ScriptBlock>[Newtonsoft.Json.JsonConvert]::SerializeObject($_.HardwareProfile,  [Newtonsoft.Json.Formatting]::Indented)</ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>StorageProfile</Label>
                <ScriptBlock>[Newtonsoft.Json.JsonConvert]::SerializeObject($_.StorageProfile,  [Newtonsoft.Json.Formatting]::Indented)</ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>OsProfile</Label>
                <ScriptBlock>[Newtonsoft.Json.JsonConvert]::SerializeObject($_.OsProfile,  [Newtonsoft.Json.Formatting]::Indented)</ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>NetworkProfile</Label>
                <ScriptBlock>[Newtonsoft.Json.JsonConvert]::SerializeObject($_.NetworkProfile,  [Newtonsoft.Json.Formatting]::Indented)</ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>DiagnosticsProfile</Label>
                <ScriptBlock>[Newtonsoft.Json.JsonConvert]::SerializeObject($_.DiagnosticsProfile,  [Newtonsoft.Json.Formatting]::Indented)</ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>AvailabilitySet</Label>
                <ScriptBlock>[Newtonsoft.Json.JsonConvert]::SerializeObject($_.AvailabilitySet,  [Newtonsoft.Json.Formatting]::Indented)</ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>ProvisioningState</Label>
                <PropertyName>ProvisioningState</PropertyName>
              </ListItem>
              <ListItem>
                <Label>LicenseType</Label>
                <PropertyName>LicenseType</PropertyName>
              </ListItem>
              <ListItem>
                <Label>Plan</Label>
                <ScriptBlock>[Newtonsoft.Json.JsonConvert]::SerializeObject($_.Plan,  [Newtonsoft.Json.Formatting]::Indented)</ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>Resources.Count</Label>
                <ScriptBlock> if ($_.Resources -eq $null) { 0 } else { $_.Resources.Count }</ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>Resources</Label>
                <ScriptBlock> foreach ($item in $_.Resources) { [Newtonsoft.Json.JsonConvert]::SerializeObject($item,  [Newtonsoft.Json.Formatting]::Indented) } </ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>Id</Label>
                <PropertyName>Id</PropertyName>
              </ListItem>
              <ListItem>
                <Label>Name</Label>
                <PropertyName>Name</PropertyName>
              </ListItem>
              <ListItem>
                <Label>Type</Label>
                <PropertyName>Type</PropertyName>
              </ListItem>
              <ListItem>
                <Label>Location</Label>
                <PropertyName>Location</PropertyName>
              </ListItem>
              <ListItem>
                <Label>Tags.Count</Label>
                <ScriptBlock> if ($_.Tags -eq $null) { 0 } else { $_.Tags.Count }</ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>Tags</Label>
                <ScriptBlock> foreach ($item in $_.Tags) { [Newtonsoft.Json.JsonConvert]::SerializeObject($item,  [Newtonsoft.Json.Formatting]::Indented) } </ScriptBlock>
              </ListItem>
            </ListItems>
          </ListEntry>
        </ListEntries>
      </ListControl>
    </View>
    <View>
      <Name>Microsoft.Azure.Management.Compute.Models.VirtualMachineExtension</Name>
      <ViewSelectedBy>
        <TypeName>Microsoft.Azure.Management.Compute.Models.VirtualMachineExtension</TypeName>
      </ViewSelectedBy>
      <ListControl>
        <ListEntries>
          <ListEntry>
            <ListItems>
              <ListItem>
                <Label>VirtualMachineExtension</Label>
                <ScriptBlock>[Newtonsoft.Json.JsonConvert]::SerializeObject($_,  [Newtonsoft.Json.Formatting]::Indented)</ScriptBlock>
              </ListItem>
            </ListItems>
          </ListEntry>
        </ListEntries>
      </ListControl>
    </View>
    <View>
      <Name>Microsoft.Azure.Management.Compute.Models.VirtualMachineScaleSetVMInstanceView</Name>
      <ViewSelectedBy>
        <TypeName>Microsoft.Azure.Management.Compute.Models.VirtualMachineScaleSetVMInstanceView</TypeName>
      </ViewSelectedBy>
      <ListControl>
        <ListEntries>
          <ListEntry>
            <ListItems>
              <ListItem>
                <Label>PlatformUpdateDomain</Label>
                <PropertyName>PlatformUpdateDomain</PropertyName>
              </ListItem>
              <ListItem>
                <Label>PlatformFaultDomain</Label>
                <PropertyName>PlatformFaultDomain</PropertyName>
              </ListItem>
              <ListItem>
                <Label>RdpThumbPrint</Label>
                <PropertyName>RdpThumbPrint</PropertyName>
              </ListItem>
              <ListItem>
                <Label>VmAgent</Label>
                <ScriptBlock>[Newtonsoft.Json.JsonConvert]::SerializeObject($_.VmAgent,  [Newtonsoft.Json.Formatting]::Indented)</ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>Disks.Count</Label>
                <ScriptBlock> if ($_.Disks -eq $null) { 0 } else { $_.Disks.Count }</ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>Disks</Label>
                <ScriptBlock> foreach ($item in $_.Disks) { [Newtonsoft.Json.JsonConvert]::SerializeObject($item,  [Newtonsoft.Json.Formatting]::Indented) } </ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>Extensions.Count</Label>
                <ScriptBlock> if ($_.Extensions -eq $null) { 0 } else { $_.Extensions.Count }</ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>Extensions</Label>
                <ScriptBlock> foreach ($item in $_.Extensions) { [Newtonsoft.Json.JsonConvert]::SerializeObject($item,  [Newtonsoft.Json.Formatting]::Indented) } </ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>BootDiagnostics</Label>
                <ScriptBlock>[Newtonsoft.Json.JsonConvert]::SerializeObject($_.BootDiagnostics,  [Newtonsoft.Json.Formatting]::Indented)</ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>Statuses.Count</Label>
                <ScriptBlock> if ($_.Statuses -eq $null) { 0 } else { $_.Statuses.Count }</ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>Statuses</Label>
                <ScriptBlock> foreach ($item in $_.Statuses) { [Newtonsoft.Json.JsonConvert]::SerializeObject($item,  [Newtonsoft.Json.Formatting]::Indented) } </ScriptBlock>
              </ListItem>
            </ListItems>
          </ListEntry>
        </ListEntries>
      </ListControl>
    </View>
    <View>
      <Name>Microsoft.Azure.Management.Compute.Models.VirtualMachineExtensionInstanceView</Name>
      <ViewSelectedBy>
        <TypeName>Microsoft.Azure.Management.Compute.Models.VirtualMachineExtensionInstanceView</TypeName>
      </ViewSelectedBy>
      <ListControl>
        <ListEntries>
          <ListEntry>
            <ListItems>
              <ListItem>
                <Label>VirtualMachineExtensionInstanceView</Label>
                <ScriptBlock>[Newtonsoft.Json.JsonConvert]::SerializeObject($_,  [Newtonsoft.Json.Formatting]::Indented)</ScriptBlock>
              </ListItem>
            </ListItems>
          </ListEntry>
        </ListEntries>
      </ListControl>
    </View>
  </ViewDefinitions>
</Configuration>
