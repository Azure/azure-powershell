// Code generated by Microsoft (R) AutoRest Code Generator 0.17.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace Microsoft.Azure.Management.Media
{
    using System;
    using System.Collections.Generic;
    using System.Net.Http;
    using System.Threading;
    using System.Threading.Tasks;
    using Newtonsoft.Json;
    using Microsoft.Rest;
    using Microsoft.Azure.Management.Media.Rest.Models;

    /// <summary>
    /// This swagger is generated by the Api Framework.
    /// </summary>
    public partial interface IAzureMediaServices : IDisposable
    {
        /// <summary>
        /// The base URI of the service.
        /// </summary>
        Uri BaseUri { get; set; }

        /// <summary>
        /// Gets or sets json serialization settings.
        /// </summary>
        JsonSerializerSettings SerializationSettings { get; }

        /// <summary>
        /// Gets or sets json deserialization settings.
        /// </summary>
        JsonSerializerSettings DeserializationSettings { get; }


            /// <param name='subscriptionId'>
        /// </param>
        /// <param name='resourceGroupName'>
        /// </param>
        /// <param name='apiVersion'>
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<HttpOperationResponse<MediaServiceCollection>> GetAllMediaservicesWithHttpMessagesAsync(string subscriptionId, string resourceGroupName, string apiVersion, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));

        /// <param name='subscriptionId'>
        /// </param>
        /// <param name='resourceGroupName'>
        /// </param>
        /// <param name='mediaService'>
        /// </param>
        /// <param name='apiVersion'>
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<HttpOperationResponse<MediaService>> PostAllMediaservicesWithHttpMessagesAsync(string subscriptionId, string resourceGroupName, MediaService mediaService, string apiVersion, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));

        /// <param name='subscriptionId'>
        /// </param>
        /// <param name='resourceGroupName'>
        /// </param>
        /// <param name='mediaServicesName'>
        /// </param>
        /// <param name='apiVersion'>
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<HttpOperationResponse<MediaService>> GetMediaservicesWithHttpMessagesAsync(string subscriptionId, string resourceGroupName, string mediaServicesName, string apiVersion, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));

        /// <param name='subscriptionId'>
        /// </param>
        /// <param name='resourceGroupName'>
        /// </param>
        /// <param name='mediaServicesName'>
        /// </param>
        /// <param name='mediaService'>
        /// </param>
        /// <param name='apiVersion'>
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<HttpOperationResponse<MediaService>> PutMediaservicesWithHttpMessagesAsync(string subscriptionId, string resourceGroupName, string mediaServicesName, MediaService mediaService, string apiVersion, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));

        /// <param name='subscriptionId'>
        /// </param>
        /// <param name='resourceGroupName'>
        /// </param>
        /// <param name='mediaServicesName'>
        /// </param>
        /// <param name='apiVersion'>
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<HttpOperationResponse> DeleteMediaservicesWithHttpMessagesAsync(string subscriptionId, string resourceGroupName, string mediaServicesName, string apiVersion, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));

        /// <param name='subscriptionId'>
        /// </param>
        /// <param name='resourceGroupName'>
        /// </param>
        /// <param name='mediaServicesName'>
        /// </param>
        /// <param name='mediaService'>
        /// </param>
        /// <param name='apiVersion'>
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<HttpOperationResponse<MediaService>> PatchMediaservicesWithHttpMessagesAsync(string subscriptionId, string resourceGroupName, string mediaServicesName, MediaService mediaService, string apiVersion, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));

        /// <param name='subscriptionId'>
        /// </param>
        /// <param name='resourceGroupName'>
        /// </param>
        /// <param name='mediaServicesName'>
        /// </param>
        /// <param name='regenerateKeyInput'>
        /// </param>
        /// <param name='apiVersion'>
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<HttpOperationResponse<RegenerateKeyOutput>> MediaservicesRegenerateKeyWithHttpMessagesAsync(string subscriptionId, string resourceGroupName, string mediaServicesName, RegenerateKeyInput regenerateKeyInput, string apiVersion, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));

        /// <param name='subscriptionId'>
        /// </param>
        /// <param name='resourceGroupName'>
        /// </param>
        /// <param name='mediaServicesName'>
        /// </param>
        /// <param name='apiVersion'>
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<HttpOperationResponse<ServiceKeys>> MediaservicesListKeysWithHttpMessagesAsync(string subscriptionId, string resourceGroupName, string mediaServicesName, string apiVersion, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));

        /// <param name='subscriptionId'>
        /// </param>
        /// <param name='resourceGroupName'>
        /// </param>
        /// <param name='mediaServicesName'>
        /// </param>
        /// <param name='syncStorageKeysInput'>
        /// </param>
        /// <param name='apiVersion'>
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<HttpOperationResponse<MediaService>> MediaservicesSyncStorageKeysWithHttpMessagesAsync(string subscriptionId, string resourceGroupName, string mediaServicesName, SyncStorageKeysInput syncStorageKeysInput, string apiVersion, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));

    }
}
