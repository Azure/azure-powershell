<?xml version="1.0" encoding="utf-8"?>
<helpItems schema="maml" xmlns="http://msh">
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
    <command:details>
      <command:name>Add-Content</command:name>
      <command:verb>Add</command:verb>
      <command:noun>Content</command:noun>
      <maml:description>
        <maml:para>Sets the secret value of a KeyVault Secret.</maml:para>
      </maml:description>
    </command:details>
    <maml:description>
      <maml:para>For the KeyVault Provider, the Add-Content cmdlet takes a SecureString to set the SecretValue of a KeyVault Secret.</maml:para>
      <maml:para>Note: This custom cmdlet help file explains how the Add-Content cmdlet works in a KeyVault drive. For information about the Add-Content cmdlet in all drives, type "Get-Help Add-Content -Path $null" or see Add-Content at http://go.microsoft.com/fwlink/?LinkId=821565.</maml:para>
    </maml:description>
    <command:syntax>
      <command:syntaxItem>
        <maml:name>Add-Content</maml:name>
        <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="True (ByPropertyName, ByValue)" position="2" aliases="none">
          <maml:name>Value</maml:name>
          <maml:Description>
            <maml:para>Specifies the new content for the item. For KeyVault Provider, this object must be of type SecureString.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Object[]</command:parameterValue>
          <dev:type>
            <maml:name>Object[]</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="True (ByPropertyName)" position="named" aliases="PSPath">
          <maml:name>LiteralPath</maml:name>
          <maml:Description>
            <maml:para>Specifies a path to the item. Unlike the Path parameter, the value of LiteralPath is used exactly as it is typed. No characters are interpreted as wildcards. If the path includes escape characters, enclose it in single quotation marks. Single quotation marks tell Windows PowerShell not to interpret any characters as escape sequences.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">String[]</command:parameterValue>
          <dev:type>
            <maml:name>String[]</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
      </command:syntaxItem>
      <command:syntaxItem>
        <maml:name>Add-Content</maml:name>
        <command:parameter required="true" variableLength="true" globbing="true" pipelineInput="True (ByPropertyName, ByValue)" position="1" aliases="none">
          <maml:name>Path</maml:name>
          <maml:Description>
            <maml:para>Specifies the path to an item. This cmdlet gets the item at the specified location. Wildcards are permitted. This parameter is required, but the parameter name ("Path") is optional.</maml:para>
            <maml:para>Use a dot (.) to specify the current location. Use the wildcard character (*) to specify all the items in the current location.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">String[]</command:parameterValue>
          <dev:type>
            <maml:name>String[]</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="True (ByPropertyName, ByValue)" position="2" aliases="none">
          <maml:name>Value</maml:name>
          <maml:Description>
            <maml:para>Specifies the new content for the item. For KeyVault Provider, this object must be of type SecureString.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Object[]</command:parameterValue>
          <dev:type>
            <maml:name>Object[]</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="True (ByPropertyName)" position="named" aliases="PSPath">
        <maml:name>LiteralPath</maml:name>
        <maml:Description>
          <maml:para>Specifies a path to the item. Unlike the Path parameter, the value of LiteralPath is used exactly as it is typed. No characters are interpreted as wildcards. If the path includes escape characters, enclose it in single quotation marks. Single quotation marks tell Windows PowerShell not to interpret any characters as escape sequences.</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">String[]</command:parameterValue>
        <dev:type>
          <maml:name>String[]</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="true" variableLength="true" globbing="true" pipelineInput="True (ByPropertyName, ByValue)" position="1" aliases="none">
        <maml:name>Path</maml:name>
        <maml:Description>
          <maml:para>Specifies the path to an item. This cmdlet gets the item at the specified location. Wildcards are permitted. This parameter is required, but the parameter name ("Path") is optional.</maml:para>
          <maml:para>Use a dot (.) to specify the current location. Use the wildcard character (*) to specify all the items in the current location.</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">String[]</command:parameterValue>
        <dev:type>
          <maml:name>String[]</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="True (ByPropertyName, ByValue)" position="2" aliases="none">
        <maml:name>Value</maml:name>
        <maml:Description>
          <maml:para>Specifies the new content for the item. For KeyVault Provider, this object must be of type SecureString.</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">Object[]</command:parameterValue>
        <dev:type>
          <maml:name>Object[]</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <maml:name>System.Security.SecureString</maml:name>
        </dev:type>
        <maml:description>
          <maml:para></maml:para>
        </maml:description>
      </command:inputType>
    </command:inputTypes>
    <command:returnValues>
      <command:returnValue>
        <dev:type>
          <maml:name>Microsoft.Azure.Commands.KeyVault.Models.PSKeyVaultSecret</maml:name>
        </dev:type>
        <maml:description>
          <maml:para></maml:para>
        </maml:description>
      </command:returnValue>
    </command:returnValues>
    <maml:alertSet>
      <maml:alert>
        <maml:para></maml:para>
      </maml:alert>
    </maml:alertSet>
    <command:examples>
      <command:example>
        <maml:title>---------- Example 1: Set the SecretValue of a Secret ----------</maml:title>
        <dev:code>PS C:\&gt; Import-Module AzureRM.KeyVault
PS C:\&gt; New-PSDrive -Name kv -PSProvider KeyVault -Root C:\Users\Default\
PS C:\&gt; $SecretValue = ConvertTo-SecureSecret -String p@ssw0rd -AsPlainText -Force
PS C:\&gt; Add-Content -Path kv:/vault1/Secrets/secret1 -Value $SecretValue -PassThru

Vault Name   : vault1
Name         : secret1
Version      : xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
Id           : https://vault1.vault.azure.net:443/secrets/secret1/xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
Enabled      : True
Expires      : 
Not Before   : 
Created      : 5/10/2018 6:21:56 PM
Updated      : 5/10/2018 6:21:56 PM
Content Type : 
Tags         :</dev:code>
        <dev:remarks>
          <maml:para></maml:para>
<maml:para></maml:para>
<maml:para></maml:para>
        </dev:remarks>
      </command:example>
    </command:examples>
    <command:relatedLinks>
      <maml:navigationLink>
        <maml:linkText>Online Version:</maml:linkText>
        <maml:uri>https://docs.microsoft.com/en-us/powershell/module/azurerm.keyvault/add-content-for-keyvaultprovider</maml:uri>
      </maml:navigationLink>
    </command:relatedLinks>
  </command:command>
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
    <command:details>
      <command:name>Get-ChildItem</command:name>
      <command:verb>Get</command:verb>
      <command:noun>ChildItem</command:noun>
      <maml:description>
        <maml:para>Gets KeyVault types contained in a directory.</maml:para>
      </maml:description>
    </command:details>
    <maml:description>
      <maml:para>For the KeyVault Provider, the Get-ChildItem cmdlet returns the KeyVault types contained in the directory specified by the path.  These types are: Vaults, Secrets, Certificates, Keys, and AccessPolicies.</maml:para>
      <maml:para>Note: This custom cmdlet help file explains how the Get-ChildItem cmdlet works in a KeyVault drive. For information about the Get-ChildItem cmdlet in all drives, type "Get-Help Get-ChildItem -Path $null" or see Get-ChildItem at http://go.microsoft.com/fwlink/?LinkID=113308.</maml:para>
    </maml:description>
    <command:syntax>
      <command:syntaxItem>
        <maml:name>Get-ChildItem</maml:name>
        <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="True (ByPropertyName)" position="named" aliases="PSPath">
          <maml:name>LiteralPath</maml:name>
          <maml:Description>
            <maml:para>Specifies a path to the item. Unlike the Path parameter, the value of LiteralPath is used exactly as it is typed. No characters are interpreted as wildcards. If the path includes escape characters, enclose it in single quotation marks. Single quotation marks tell Windows PowerShell not to interpret any characters as escape sequences.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">String[]</command:parameterValue>
          <dev:type>
            <maml:name>String[]</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="s">
          <maml:name>Recurse</maml:name>
          <maml:Description>
            <maml:para>Gets the items in the specified locations and in all child items of the locations.</maml:para>
          </maml:Description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Tag</maml:name>
          <maml:Description>
            <maml:para>Filters the output by tags. Available only for filtering Vaults.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Hashtable</command:parameterValue>
          <dev:type>
            <maml:name>Hashtable</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
      </command:syntaxItem>
      <command:syntaxItem>
        <maml:name>Get-ChildItem</maml:name>
        <command:parameter required="true" variableLength="true" globbing="true" pipelineInput="True (ByPropertyName, ByValue)" position="1" aliases="none">
          <maml:name>Path</maml:name>
          <maml:Description>
            <maml:para>Specifies the path to an item. This cmdlet gets the item at the specified location. Wildcards are permitted. This parameter is required, but the parameter name ("Path") is optional.</maml:para>
            <maml:para>Use a dot (.) to specify the current location. Use the wildcard character (*) to specify all the items in the current location.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">String[]</command:parameterValue>
          <dev:type>
            <maml:name>String[]</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="s">
          <maml:name>Recurse</maml:name>
          <maml:Description>
            <maml:para>Gets the items in the specified locations and in all child items of the locations.</maml:para>
          </maml:Description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Tag</maml:name>
          <maml:Description>
            <maml:para>Filters the output by tags. Available only for filtering Vaults.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Hashtable</command:parameterValue>
          <dev:type>
            <maml:name>Hashtable</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="True (ByPropertyName)" position="named" aliases="PSPath">
        <maml:name>LiteralPath</maml:name>
        <maml:Description>
          <maml:para>Specifies a path to the item. Unlike the Path parameter, the value of LiteralPath is used exactly as it is typed. No characters are interpreted as wildcards. If the path includes escape characters, enclose it in single quotation marks. Single quotation marks tell Windows PowerShell not to interpret any characters as escape sequences.</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">String[]</command:parameterValue>
        <dev:type>
          <maml:name>String[]</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="true" variableLength="true" globbing="true" pipelineInput="True (ByPropertyName, ByValue)" position="1" aliases="none">
        <maml:name>Path</maml:name>
        <maml:Description>
          <maml:para>Specifies the path to an item. This cmdlet gets the item at the specified location. Wildcards are permitted. This parameter is required, but the parameter name ("Path") is optional.</maml:para>
          <maml:para>Use a dot (.) to specify the current location. Use the wildcard character (*) to specify all the items in the current location.</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">String[]</command:parameterValue>
        <dev:type>
          <maml:name>String[]</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="s">
        <maml:name>Recurse</maml:name>
        <maml:Description>
          <maml:para>Gets the items in the specified locations and in all child items of the locations.</maml:para>
        </maml:Description>
        <command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>Tag</maml:name>
        <maml:Description>
          <maml:para>Filters the output by tags. Available only for filtering Vaults.</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">Hashtable</command:parameterValue>
        <dev:type>
          <maml:name>Hashtable</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <maml:name>System.String</maml:name>
        </dev:type>
        <maml:description>
          <maml:para></maml:para>
        </maml:description>
      </command:inputType>
    </command:inputTypes>
    <command:returnValues>
      <command:returnValue>
        <dev:type>
          <maml:name>Microsoft.Azure.Commands.KeyVault.Models.PSKeyVault</maml:name>
        </dev:type>
        <maml:description>
          <maml:para></maml:para>
        </maml:description>
      </command:returnValue>
      <command:returnValue>
        <dev:type>
          <maml:name>Microsoft.Azure.Commands.KeyVault.Models.PSKeyVaultCertificate</maml:name>
        </dev:type>
        <maml:description>
          <maml:para></maml:para>
        </maml:description>
      </command:returnValue>
      <command:returnValue>
        <dev:type>
          <maml:name>Microsoft.Azure.Commands.KeyVault.Models.PSKeyVaultKey</maml:name>
        </dev:type>
        <maml:description>
          <maml:para></maml:para>
        </maml:description>
      </command:returnValue>
      <command:returnValue>
        <dev:type>
          <maml:name>Microsoft.Azure.Commands.KeyVault.Models.PSKeyVaultSecret</maml:name>
        </dev:type>
        <maml:description>
          <maml:para></maml:para>
        </maml:description>
      </command:returnValue>
      <command:returnValue>
        <dev:type>
          <maml:name>Microsoft.Azure.Commands.KeyVault.Models.PSKeyVaultAccessPolicy</maml:name>
        </dev:type>
        <maml:description>
          <maml:para></maml:para>
        </maml:description>
      </command:returnValue>
    </command:returnValues>
    <maml:alertSet>
      <maml:alert>
        <maml:para></maml:para>
      </maml:alert>
    </maml:alertSet>
    <command:examples>
      <command:example>
        <maml:title>------ Example 1: Get all vaults in current subscription ------</maml:title>
        <dev:code>PS C:\&gt; Import-Module AzureRM.KeyVault
PS C:\&gt; New-PSDrive -Name kv -PSProvider KeyVault -Root C:\Users\Default\
PS C:\&gt; Get-ChildItem kv:/

Vault Name          : vault1
Resource Group Name : myRG
Location            : westus
Resource ID         : /subscriptions/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxxx/resourceGroups/myRG/providers/Microsoft.Ke
                      yVault/vaults/vault1
Tags                :

Vault Name          : vault2
Resource Group Name : myRG
Location            : westus
Resource ID         : /subscriptions/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxxx/resourceGroups/myRG/providers/Microsoft.Ke
                      yVault/vaults/vault2
Tags                :</dev:code>
        <dev:remarks>
          <maml:para></maml:para>
<maml:para></maml:para>
<maml:para></maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>Example 2: Get all vaults in current subscription with a certain tag</maml:title>
        <dev:code>PS C:\&gt; Import-Module AzureRM.KeyVault
PS C:\&gt; New-PSDrive -Name kv -PSProvider KeyVault -Root C:\Users\Default\
PS C:\&gt; Get-ChildItem kv:/ -Tag @{"a"="b"}

Vault Name          : vault1
Resource Group Name : maddie1
Location            : myRG
Resource ID         : /subscriptions/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxxx/resourceGroups/myRG/providers/Microsoft.Ke
                      yVault/vaults/vault1
Tags                :
                      Name  Value
                      ====  =====
                      a     b</dev:code>
        <dev:remarks>
          <maml:para></maml:para>
<maml:para></maml:para>
<maml:para></maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>----------- Example 3: Get all Secrets in a KeyVault -----------</maml:title>
        <dev:code>PS C:\&gt; Import-Module AzureRM.KeyVault
PS C:\&gt; New-PSDrive -Name kv -PSProvider KeyVault -Root C:\Users\Default\
PS C:\&gt; Get-ChildItem kv:/vault1/Secrets/

Vault Name   : vault1
Name         : secret1
Version      :
Id           : https://vault1.vault.azure.net:443/secrets/secret1
Enabled      : True
Expires      : 
Not Before   :
Created      : 5/7/2018 8:41:52 PM
Updated      : 5/7/2018 8:41:52 PM
Content Type : 
Tags         : 


Vault Name   : vault1
Name         : secret12
Version      :
Id           : https://vault1.vault.azure.net:443/secrets/secret12
Enabled      : True
Expires      :
Not Before   :
Created      : 5/7/2018 9:35:58 PM
Updated      : 5/7/2018 9:35:58 PM
Content Type :
Tags         :</dev:code>
        <dev:remarks>
          <maml:para></maml:para>
<maml:para></maml:para>
<maml:para></maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>-------- Example 4: Get all Certificates in a KeyVault --------</maml:title>
        <dev:code>PS C:\&gt; Import-Module AzureRM.KeyVault
PS C:\&gt; New-PSDrive -Name kv -PSProvider KeyVault -Root C:\Users\Default\
PS C:\&gt; Get-ChildItem kv:/vault1/Certificate/

Enabled       : True
Expires       : 11/7/2018 8:45:14 PM
NotBefore     : 5/7/2018 8:35:14 PM
Created       : 5/7/2018 8:45:15 PM
Updated       : 5/7/2018 8:45:15 PM
Tags          :
VaultName     : vault1
Name          : cert1
Version       :
Id            : https://vault1.vault.azure.net:443/certificates/cert1

Enabled       : True
Expires       : 11/7/2018 8:49:32 PM
NotBefore     : 5/7/2018 8:39:32 PM
Created       : 5/7/2018 8:49:32 PM
Updated       : 5/7/2018 8:49:32 PM
Tags          : {a}
VaultName     : vault1
Name          : cert21
Version       :
Id            : https://vault1.vault.azure.net:443/certificates/cert21</dev:code>
        <dev:remarks>
          <maml:para></maml:para>
<maml:para></maml:para>
<maml:para></maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>------------ Example 5: Get all Keys in a KeyVault ------------</maml:title>
        <dev:code>PS C:\&gt; Import-Module AzureRM.KeyVault
PS C:\&gt; New-PSDrive -Name kv -PSProvider KeyVault -Root C:\Users\Default\
PS C:\&gt; Get-ChildItem kv:/vault1/Keys/

Vault Name     : vault1
Name           : key1
Version        :
Id             : https://vault1.vault.azure.net:443/keys/key1
Enabled        : True
Expires        :
Not Before     :
Created        : 5/7/2018 8:51:40 PM
Updated        : 5/7/2018 8:51:40 PM
Purge Disabled : False
Tags           :

Vault Name     : vault1
Name           : key2
Version        :
Id             : https://vault1.vault.azure.net:443/keys/key2
Enabled        : True
Expires        :
Not Before     :
Created        : 5/7/2018 8:53:05 PM
Updated        : 5/7/2018 8:53:05 PM
Purge Disabled : False
Tags           :</dev:code>
        <dev:remarks>
          <maml:para></maml:para>
<maml:para></maml:para>
<maml:para></maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>------- Example 6: Get all AccessPolicies in a KeyVault -------</maml:title>
        <dev:code>PS C:\&gt; Import-Module AzureRM.KeyVault
PS C:\&gt; New-PSDrive -Name kv -PSProvider KeyVault -Root C:\Users\Default\
PS C:\&gt; Get-ChildItem kv:/vault1/AccessPolicies/

Tenant ID                                  : xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxxx
Object ID                                  : 11111111-1111-1111-1111-111111111111
Application ID                             :
Display Name                               : User1 (user1@microsoft.com)
Permissions to Keys                        : {get, create, delete, list...}
Permissions to Secrets                     : {get, list, set, delete...}
Permissions to Certificates                : {get, delete, list, create...}
Permissions to (Key Vault Managed) Storage : {delete, deletesas, get, getsas...}

Tenant ID                                  : xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxxx
Object ID                                  : 22222222-2222-2222-2222-222222222222
Application ID                             :
Display Name                               : User2 (user2@microsoft.com)
Permissions to Keys                        : {create, get}
Permissions to Secrets                     : {}
Permissions to Certificates                : {}
Permissions to (Key Vault Managed) Storage : {}</dev:code>
        <dev:remarks>
          <maml:para></maml:para>
<maml:para></maml:para>
<maml:para></maml:para>
        </dev:remarks>
      </command:example>
    </command:examples>
    <command:relatedLinks>
      <maml:navigationLink>
        <maml:linkText>Online Version:</maml:linkText>
        <maml:uri>https://docs.microsoft.com/en-us/powershell/module/azurerm.keyvault/get-childitem-for-keyvaultprovider</maml:uri>
      </maml:navigationLink>
    </command:relatedLinks>
  </command:command>
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
    <command:details>
      <command:name>Get-Content</command:name>
      <command:verb>Get</command:verb>
      <command:noun>Content</command:noun>
      <maml:description>
        <maml:para>Gets the content of a KeyVault Key, Certificate, or Secret.</maml:para>
      </maml:description>
    </command:details>
    <maml:description>
      <maml:para>For the KeyVault Provider, the Get-Content cmdlet returns the hidden values of KeyVault Secrets, Certificates, and Key. It returns the SecretValueText of a Secret, the JsonWebKey for a Key, and the X509Certificate2 for a Certificate.</maml:para>
      <maml:para>Note: This custom cmdlet help file explains how the Get-Content cmdlet works in a KeyVault drive. For information about the Get-Content cmdlet in all drives, type "Get-Help Get-Content -Path $null" or see Get-Content at http://go.microsoft.com/fwlink/?LinkID=113310.</maml:para>
    </maml:description>
    <command:syntax>
      <command:syntaxItem>
        <maml:name>Get-Content</maml:name>
        <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="True (ByPropertyName)" position="named" aliases="PSPath">
          <maml:name>LiteralPath</maml:name>
          <maml:Description>
            <maml:para>Specifies a path to the item. Unlike the Path parameter, the value of LiteralPath is used exactly as it is typed. No characters are interpreted as wildcards. If the path includes escape characters, enclose it in single quotation marks. Single quotation marks tell Windows PowerShell not to interpret any characters as escape sequences.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">String[]</command:parameterValue>
          <dev:type>
            <maml:name>String[]</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
      </command:syntaxItem>
      <command:syntaxItem>
        <maml:name>Get-Content</maml:name>
        <command:parameter required="true" variableLength="true" globbing="true" pipelineInput="True (ByPropertyName, ByValue)" position="1" aliases="none">
          <maml:name>Path</maml:name>
          <maml:Description>
            <maml:para>Specifies the path to an item. This cmdlet gets the item at the specified location. Wildcards are permitted. This parameter is required, but the parameter name ("Path") is optional.</maml:para>
            <maml:para>Use a dot (.) to specify the current location. Use the wildcard character (*) to specify all the items in the current location.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">String[]</command:parameterValue>
          <dev:type>
            <maml:name>String[]</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="True (ByPropertyName)" position="named" aliases="PSPath">
        <maml:name>LiteralPath</maml:name>
        <maml:Description>
          <maml:para>Specifies a path to the item. Unlike the Path parameter, the value of LiteralPath is used exactly as it is typed. No characters are interpreted as wildcards. If the path includes escape characters, enclose it in single quotation marks. Single quotation marks tell Windows PowerShell not to interpret any characters as escape sequences.</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">String[]</command:parameterValue>
        <dev:type>
          <maml:name>String[]</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="true" variableLength="true" globbing="true" pipelineInput="True (ByPropertyName, ByValue)" position="1" aliases="none">
        <maml:name>Path</maml:name>
        <maml:Description>
          <maml:para>Specifies the path to an item. This cmdlet gets the item at the specified location. Wildcards are permitted. This parameter is required, but the parameter name ("Path") is optional.</maml:para>
          <maml:para>Use a dot (.) to specify the current location. Use the wildcard character (*) to specify all the items in the current location.</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">String[]</command:parameterValue>
        <dev:type>
          <maml:name>String[]</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <maml:name>System.String</maml:name>
        </dev:type>
        <maml:description>
          <maml:para></maml:para>
        </maml:description>
      </command:inputType>
    </command:inputTypes>
    <command:returnValues>
      <command:returnValue>
        <dev:type>
          <maml:name>System.String</maml:name>
        </dev:type>
        <maml:description>
          <maml:para></maml:para>
        </maml:description>
      </command:returnValue>
      <command:returnValue>
        <dev:type>
          <maml:name>Microsoft.Azure.KeyVault.WebKey.JsonWebKey</maml:name>
        </dev:type>
        <maml:description>
          <maml:para></maml:para>
        </maml:description>
      </command:returnValue>
      <command:returnValue>
        <dev:type>
          <maml:name>System.Security.Cryptography.X509Certificates.X509Certificate2</maml:name>
        </dev:type>
        <maml:description>
          <maml:para></maml:para>
        </maml:description>
      </command:returnValue>
    </command:returnValues>
    <maml:alertSet>
      <maml:alert>
        <maml:para></maml:para>
      </maml:alert>
    </maml:alertSet>
    <command:examples>
      <command:example>
        <maml:title>------- Example 1: Get the SecretValueText from a Secret -------</maml:title>
        <dev:code>PS C:\&gt; Import-Module AzureRM.KeyVault
PS C:\&gt; New-PSDrive -Name kv -PSProvider KeyVault -Root C:\Users\Default\
PS C:\&gt; Get-Content -Path kv:/vault1/Secrets/secret1
P@ssw0rd</dev:code>
        <dev:remarks>
          <maml:para></maml:para>
<maml:para></maml:para>
<maml:para></maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>----------- Example 2: Get the JsonWebKey from a Key -----------</maml:title>
        <dev:code>PS C:\&gt; Import-Module AzureRM.KeyVault
PS C:\&gt; New-PSDrive -Name kv -PSProvider KeyVault -Root C:\Users\Default\
PS C:\&gt; Get-Content -Path kv:/vault1/Keys/key1

ReadCount     : 1
Kid           : https://mvault.vault.azure.net/keys/key1/xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
Kty           : RSA
KeyOps        : {decrypt}
N             : 
E             : 
DP            :
DQ            :
QI            :
P             :
Q             :
CurveName     :
X             :
Y             :
D             :
K             :
T             :
ExtensionData :</dev:code>
        <dev:remarks>
          <maml:para></maml:para>
<maml:para></maml:para>
<maml:para></maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>---- Example 3: Get the X509Certificate2 from a Certificate ----</maml:title>
        <dev:code>PS C:\&gt; Import-Module AzureRM.KeyVault
PS C:\&gt; New-PSDrive -Name kv -PSProvider KeyVault -Root C:\Users\Default\
PS C:\&gt; Get-Content -Path kv:/vault1/Certificates/cert1

   PSParentPath: mykv:\mvault\Certificates

Thumbprint                                Subject
----------                                -------
xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx         CN=contoso.com</dev:code>
        <dev:remarks>
          <maml:para></maml:para>
<maml:para></maml:para>
<maml:para></maml:para>
        </dev:remarks>
      </command:example>
    </command:examples>
    <command:relatedLinks>
      <maml:navigationLink>
        <maml:linkText>Online Version:</maml:linkText>
        <maml:uri>https://docs.microsoft.com/en-us/powershell/module/azurerm.keyvault/get-content-for-keyvaultprovider</maml:uri>
      </maml:navigationLink>
    </command:relatedLinks>
  </command:command>
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
    <command:details>
      <command:name>Get-Item</command:name>
      <command:verb>Get</command:verb>
      <command:noun>Item</command:noun>
      <maml:description>
        <maml:para>Gets KeyVault types: Vaults, Secrets, Certificates, Keys, and AccessPolicies.</maml:para>
      </maml:description>
    </command:details>
    <maml:description>
      <maml:para>For the KeyVault Provider, the Get-Item cmdlet returns the KeyVault type specified by the path.  These types are: Vaults, Secrets, Certificates, Keys, and AccessPolicies.</maml:para>
      <maml:para>Note: This custom cmdlet help file explains how the Get-Item cmdlet works in a KeyVault drive. For information about the Get-Item cmdlet in all drives, type "Get-Help Get-Item -Path $null" or see Get-Item at http://go.microsoft.com/fwlink/?LinkID=113319.</maml:para>
    </maml:description>
    <command:syntax>
      <command:syntaxItem>
        <maml:name>Get-Item</maml:name>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>IncludeVersions</maml:name>
          <maml:Description>
            <maml:para>Indicates that this operation gets all versions of the KeyVault type. Available for Certificates, Keys, and Secrets.</maml:para>
          </maml:Description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="True (ByPropertyName)" position="named" aliases="PSPath">
          <maml:name>LiteralPath</maml:name>
          <maml:Description>
            <maml:para>Specifies a path to the item. Unlike the Path parameter, the value of LiteralPath is used exactly as it is typed. No characters are interpreted as wildcards. If the path includes escape characters, enclose it in single quotation marks. Single quotation marks tell Windows PowerShell not to interpret any characters as escape sequences.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">String[]</command:parameterValue>
          <dev:type>
            <maml:name>String[]</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Version</maml:name>
          <maml:Description>
            <maml:para>Specifies the version of a KeyVault type.  Available for Certificates, Keys, and Secrets.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
          <dev:type>
            <maml:name>String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
      </command:syntaxItem>
      <command:syntaxItem>
        <maml:name>Get-Item</maml:name>
        <command:parameter required="true" variableLength="true" globbing="true" pipelineInput="True (ByPropertyName, ByValue)" position="1" aliases="none">
          <maml:name>Path</maml:name>
          <maml:Description>
            <maml:para>Specifies the path to an item. This cmdlet gets the item at the specified location. Wildcards are permitted. This parameter is required, but the parameter name ("Path") is optional.</maml:para>
            <maml:para>Use a dot (.) to specify the current location. Use the wildcard character (*) to specify all the items in the current location.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">String[]</command:parameterValue>
          <dev:type>
            <maml:name>String[]</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>IncludeVersions</maml:name>
          <maml:Description>
            <maml:para>Indicates that this operation gets all versions of the KeyVault type. Available for Certificates, Keys, and Secrets.</maml:para>
          </maml:Description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Version</maml:name>
          <maml:Description>
            <maml:para>Specifies the version of a KeyVault type.  Available for Certificates, Keys, and Secrets.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
          <dev:type>
            <maml:name>String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>IncludeVersions</maml:name>
        <maml:Description>
          <maml:para>Indicates that this operation gets all versions of the KeyVault type. Available for Certificates, Keys, and Secrets.</maml:para>
        </maml:Description>
        <command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
      <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="True (ByPropertyName)" position="named" aliases="PSPath">
        <maml:name>LiteralPath</maml:name>
        <maml:Description>
          <maml:para>Specifies a path to the item. Unlike the Path parameter, the value of LiteralPath is used exactly as it is typed. No characters are interpreted as wildcards. If the path includes escape characters, enclose it in single quotation marks. Single quotation marks tell Windows PowerShell not to interpret any characters as escape sequences.</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">String[]</command:parameterValue>
        <dev:type>
          <maml:name>String[]</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="true" variableLength="true" globbing="true" pipelineInput="True (ByPropertyName, ByValue)" position="1" aliases="none">
        <maml:name>Path</maml:name>
        <maml:Description>
          <maml:para>Specifies the path to an item. This cmdlet gets the item at the specified location. Wildcards are permitted. This parameter is required, but the parameter name ("Path") is optional.</maml:para>
          <maml:para>Use a dot (.) to specify the current location. Use the wildcard character (*) to specify all the items in the current location.</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">String[]</command:parameterValue>
        <dev:type>
          <maml:name>String[]</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>Version</maml:name>
        <maml:Description>
          <maml:para>Specifies the version of a KeyVault type.  Available for Certificates, Keys, and Secrets.</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
        <dev:type>
          <maml:name>String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <maml:name>System.String</maml:name>
        </dev:type>
        <maml:description>
          <maml:para></maml:para>
        </maml:description>
      </command:inputType>
    </command:inputTypes>
    <command:returnValues>
      <command:returnValue>
        <dev:type>
          <maml:name>Microsoft.Azure.Commands.KeyVault.Models.PSKeyVault</maml:name>
        </dev:type>
        <maml:description>
          <maml:para></maml:para>
        </maml:description>
      </command:returnValue>
      <command:returnValue>
        <dev:type>
          <maml:name>Microsoft.Azure.Commands.KeyVault.Models.PSKeyVaultCertificate</maml:name>
        </dev:type>
        <maml:description>
          <maml:para></maml:para>
        </maml:description>
      </command:returnValue>
      <command:returnValue>
        <dev:type>
          <maml:name>Microsoft.Azure.Commands.KeyVault.Models.PSKeyVaultKey</maml:name>
        </dev:type>
        <maml:description>
          <maml:para></maml:para>
        </maml:description>
      </command:returnValue>
      <command:returnValue>
        <dev:type>
          <maml:name>Microsoft.Azure.Commands.KeyVault.Models.PSKeyVaultSecret</maml:name>
        </dev:type>
        <maml:description>
          <maml:para></maml:para>
        </maml:description>
      </command:returnValue>
      <command:returnValue>
        <dev:type>
          <maml:name>Microsoft.Azure.Commands.KeyVault.Models.PSKeyVaultAccessPolicy</maml:name>
        </dev:type>
        <maml:description>
          <maml:para></maml:para>
        </maml:description>
      </command:returnValue>
    </command:returnValues>
    <maml:alertSet>
      <maml:alert>
        <maml:para></maml:para>
      </maml:alert>
    </maml:alertSet>
    <command:examples>
      <command:example>
        <maml:title>------ Example 1: Get all vaults in current subscription ------</maml:title>
        <dev:code>PS C:\&gt; Import-Module AzureRM.KeyVault
PS C:\&gt; New-PSDrive -Name kv -PSProvider KeyVault -Root C:\Users\Default\
PS C:\&gt; Get-Item kv:/*

Vault Name                       : vault1
Resource Group Name              : myRG
Location                         : westus
Resource ID                      : /subscriptions/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxxx/resourceGroups/myRG/providers
                                   /Microsoft.KeyVault/vaults/vault1
Vault URI                        : https://vault1.vault.azure.net/
Tenant ID                        : xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxxx
SKU                              : Standard
Enabled For Deployment?          : False
Enabled For Template Deployment? : False
Enabled For Disk Encryption?     : False
Soft Delete Enabled?             : True
Access Policies                  :
                                   Tenant ID                                  : xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxxx
                                   Object ID                                  : xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxxx
                                   Application ID                             :
                                   Display Name                               : User Name (user@microsoft.com)
                                   Permissions to Keys                        : backup, create, decrypt, delete,
                                   encrypt, get, import, list, purge, recover, restore, sign, unwrapKey, update,
                                   verify, wrapKey
                                   Permissions to Secrets                     : get, list, set, delete, backup,
                                   restore, recover
                                   Permissions to Certificates                : get, delete, list, create, import,
                                   update, deleteissuers, getissuers, listissuers, managecontacts, manageissuers,
                                   setissuers, recover
                                   Permissions to (Key Vault Managed) Storage : delete, deletesas, get, getsas, list,
                                   listsas, regeneratekey, set, setsas, update


Network Rule Set                 :
                                   Default Action                             : Allow
                                   Bypass                                     : AzureServices
                                   IP Rules                                   :
                                   Virtual Network Rules                      :

Tags                             :</dev:code>
        <dev:remarks>
          <maml:para></maml:para>
<maml:para></maml:para>
<maml:para></maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>------------ Example 2: Get specific KeyVault vault ------------</maml:title>
        <dev:code>PS C:\&gt; Import-Module AzureRM.KeyVault
PS C:\&gt; New-PSDrive -Name kv -PSProvider KeyVault -Root C:\Users\Default\
PS C:\&gt; Get-Item kv:/vault1

Vault Name                       : vault1
Resource Group Name              : myRG
Location                         : westus
Resource ID                      : /subscriptions/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxxx/resourceGroups/myRG/providers
                                   /Microsoft.KeyVault/vaults/vault1
Vault URI                        : https://vault1.vault.azure.net/
Tenant ID                        : xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxxx
SKU                              : Standard
Enabled For Deployment?          : False
Enabled For Template Deployment? : False
Enabled For Disk Encryption?     : False
Soft Delete Enabled?             : True
Access Policies                  :
                                   Tenant ID                                  : xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxxx
                                   Object ID                                  : xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxxx
                                   Application ID                             :
                                   Display Name                               : User Name (user@microsoft.com)
                                   Permissions to Keys                        : backup, create, decrypt, delete,
                                   encrypt, get, import, list, purge, recover, restore, sign, unwrapKey, update,
                                   verify, wrapKey
                                   Permissions to Secrets                     : get, list, set, delete, backup,
                                   restore, recover
                                   Permissions to Certificates                : get, delete, list, create, import,
                                   update, deleteissuers, getissuers, listissuers, managecontacts, manageissuers,
                                   setissuers, recover
                                   Permissions to (Key Vault Managed) Storage : delete, deletesas, get, getsas, list,
                                   listsas, regeneratekey, set, setsas, update


Network Rule Set                 :
                                   Default Action                             : Allow
                                   Bypass                                     : AzureServices
                                   IP Rules                                   :
                                   Virtual Network Rules                      :

Tags                             :</dev:code>
        <dev:remarks>
          <maml:para></maml:para>
<maml:para></maml:para>
<maml:para></maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>---------------- Example 3: Get KeyVault Secret ----------------</maml:title>
        <dev:code>PS C:\&gt; Import-Module AzureRM.KeyVault
PS C:\&gt; New-PSDrive -Name kv -PSProvider KeyVault -Root C:\Users\Default\
PS C:\&gt; Get-Item kv:/vault1/Secrets/secret1

Vault Name   : vault1
Name         : secret1
Version      : xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
Id           : https://mvault.vault.azure.net:443/secrets/secret1/xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
Enabled      : True
Expires      : 
Not Before   :
Created      : 5/7/2018 8:41:52 PM
Updated      : 5/7/2018 8:41:52 PM
Content Type : 
Tags         :</dev:code>
        <dev:remarks>
          <maml:para>To get the SecretValue, run Get-Content kv:/vault1/Secrets/secret1.</maml:para>
<maml:para></maml:para>
<maml:para></maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>------------- Example 4: Get KeyVault Certificate -------------</maml:title>
        <dev:code>PS C:\&gt; Import-Module AzureRM.KeyVault
PS C:\&gt; New-PSDrive -Name kv -PSProvider KeyVault -Root C:\Users\Default\
PS C:\&gt; Get-Item kv:/vault1/Certificate/cert1

Certificate   :
KeyId         : https://vault1.vault.azure.net:443/keys/cert1/xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
SecretId      : https://vault1.vault.azure.net:443/secrets/cert1/xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
Thumbprint    : xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
RecoveryLevel : Recoverable+Purgeable
Policy        : Microsoft.Azure.Commands.KeyVault.Models.PSKeyVaultCertificatePolicy
Enabled       : True
Expires       : 
NotBefore     : 
Created       : 5/7/2018 8:45:15 PM
Updated       : 5/7/2018 8:45:15 PM
Tags          :
VaultName     : vault1
Name          : cert1
Version       : xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
Id            : https://vault1.vault.azure.net:443/certificates/cert1/xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx</dev:code>
        <dev:remarks>
          <maml:para>To get the X509Certificate2, run Get-Content kv:/vault1/Certificate/cert1</maml:para>
<maml:para></maml:para>
<maml:para></maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>----------------- Example 5: Get KeyVault Key -----------------</maml:title>
        <dev:code>PS C:\&gt; Import-Module AzureRM.KeyVault
PS C:\&gt; New-PSDrive -Name kv -PSProvider KeyVault -Root C:\Users\Default\
PS C:\&gt; Get-Item kv:/vault1/Keys/key1

Vault Name     : vault1
Name           : key1
Version        : xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
Id             : https://vault1.vault.azure.net:443/keys/key1/xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
Enabled        : True
Expires        :
Not Before     :
Created        : 5/7/2018 8:51:40 PM
Updated        : 5/7/2018 8:51:40 PM
Purge Disabled : False
Tags           :</dev:code>
        <dev:remarks>
          <maml:para>To get the JsonWebKey, run Get-Content kv:/vault1/Keys/key1</maml:para>
<maml:para></maml:para>
<maml:para></maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>----- Example 6: Get a specific version of a KeyVault Key -----</maml:title>
        <dev:code>PS C:\&gt; Import-Module AzureRM.KeyVault
PS C:\&gt; New-PSDrive -Name kv -PSProvider KeyVault -Root C:\Users\Default\
PS C:\&gt; Get-Item kv:/vault1/Keys/key1 -Version 12345678123456781234567812345678

Vault Name     : vault1
Name           : key1
Version        : 12345678123456781234567812345678
Id             : https://vault1.vault.azure.net:443/keys/key1/12345678123456781234567812345678
Enabled        : True
Expires        :
Not Before     :
Created        : 5/7/2018 8:51:40 PM
Updated        : 5/7/2018 8:51:40 PM
Purge Disabled : False
Tags           :</dev:code>
        <dev:remarks>
          <maml:para>The -Version parameter can also be applied to Certificates and Secrets.</maml:para>
<maml:para></maml:para>
<maml:para></maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>-------- Example 7: Get all versions of a KeyVault Key --------</maml:title>
        <dev:code>PS C:\&gt; Import-Module AzureRM.KeyVault
PS C:\&gt; New-PSDrive -Name kv -PSProvider KeyVault -Root C:\Users\Default\
PS C:\&gt; Get-Item kv:/vault1/Keys/key1 -IncludeVersions

Vault Name     : vault1
Name           : key1
Version        : 87654321876543218765432187654321
Id             : https://vault1.vault.azure.net:443/keys/key1/87654321876543218765432187654321
Enabled        : True
Expires        :
Not Before     :
Created        : 5/7/2018 8:51:40 PM
Updated        : 5/7/2018 8:51:40 PM
Purge Disabled : False
Tags           :

Vault Name     : vault1
Name           : key1
Version        : 12345678123456781234567812345678
Id             : https://vault1.vault.azure.net:443/keys/key1/12345678123456781234567812345678
Enabled        : True
Expires        :
Not Before     :
Created        : 5/7/2018 8:51:40 PM
Updated        : 5/7/2018 8:51:40 PM
Purge Disabled : False
Tags           :</dev:code>
        <dev:remarks>
          <maml:para>The -IncludeVersions parameter can also be applied to Certificates and Secrets.</maml:para>
<maml:para></maml:para>
<maml:para></maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>-------- Example 8: Get an AccessPolicy for a KeyVault --------</maml:title>
        <dev:code>PS C:\&gt; Import-Module AzureRM.KeyVault
PS C:\&gt; New-PSDrive -Name kv -PSProvider KeyVault -Root C:\Users\Default\
PS C:\&gt; Get-Item kv:/vault1/AccessPolicies/11111111-1111-1111-1111-111111111111

Tenant ID                                  : xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxxx
Object ID                                  : 11111111-1111-1111-1111-111111111111
Application ID                             :
Display Name                               : User1 (user1@microsoft.com)
Permissions to Keys                        : {get, create, delete, list...}
Permissions to Secrets                     : {get, list, set, delete...}
Permissions to Certificates                : {get, delete, list, create...}
Permissions to (Key Vault Managed) Storage : {delete, deletesas, get, getsas...}</dev:code>
        <dev:remarks>
          <maml:para></maml:para>
<maml:para></maml:para>
<maml:para></maml:para>
        </dev:remarks>
      </command:example>
    </command:examples>
    <command:relatedLinks>
      <maml:navigationLink>
        <maml:linkText>Online Version:</maml:linkText>
        <maml:uri>https://docs.microsoft.com/en-us/powershell/module/azurerm.keyvault/get-item-for-keyvaultprovider</maml:uri>
      </maml:navigationLink>
    </command:relatedLinks>
  </command:command>
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
    <command:details>
      <command:name>New-Item</command:name>
      <command:verb>New</command:verb>
      <command:noun>Item</command:noun>
      <maml:description>
        <maml:para>Creates KeyVault Vaults, Secrets, Certificates, and Keys.</maml:para>
      </maml:description>
    </command:details>
    <maml:description>
      <maml:para>For the KeyVault Provider, the New-Item cmdlet creates KeyVault types specified by the path.  These types are: Vaults, Secrets, Certificates, Keys, and AccessPolicies.</maml:para>
      <maml:para>Note: This custom cmdlet help file explains how the New-Item cmdlet works in a KeyVault drive. For information about the New-Item cmdlet in all drives, type "Get-Help New-Item -Path $null" or see New-Item at http://go.microsoft.com/fwlink/?LinkID=113373.</maml:para>
    </maml:description>
    <command:syntax>
      <command:syntaxItem>
        <maml:name>New-Item</maml:name>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>ApplicationId</maml:name>
          <maml:Description>
            <maml:para>Dynamic Parameter available when creating KeyVault AccessPolicies. Specifies the ID of application that a user must use to grant permissions.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Guid?</command:parameterValue>
          <dev:type>
            <maml:name>Guid?</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>BypassObjectIdValidation</maml:name>
          <maml:Description>
            <maml:para>Dynamic Parameter available when creating KeyVault AccessPolicies. Enables you to specify an object ID without validating that the object exists in Azure Active Directory.</maml:para>
            <maml:para>Use this parameter only if you want to grant access to your key vault to an object ID that refers to a delegated security group from another Azure tenant.</maml:para>
          </maml:Description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>CertificateCollection</maml:name>
          <maml:Description>
            <maml:para>Dynamic Parameter available when creating KeyVault Certificates. Specifies the certificate collection to add to a key vault.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">X509Certificate2Collection</command:parameterValue>
          <dev:type>
            <maml:name>X509Certificate2Collection</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>CertificateString</maml:name>
          <maml:Description>
            <maml:para>Dynamic Parameter available when creating KeyVault Certificates. Specifies a certificate string.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
          <dev:type>
            <maml:name>String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>CertificatePolicy</maml:name>
          <maml:Description>
            <maml:para>Dynamic Parameter available when creating KeyVault Certificates. Specifies a KeyVaultCertificatePolicy object.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">PSKeyVaultCertificatePolicy</command:parameterValue>
          <dev:type>
            <maml:name>PSKeyVaultCertificatePolicy</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>ContentType</maml:name>
          <maml:Description>
            <maml:para>Dynamic Parameter available when creating KeyVault Secrets. Specifies the content type of a secret. To delete the existing content type, specify an empty string.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
          <dev:type>
            <maml:name>String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Destination</maml:name>
          <maml:Description>
            <maml:para>Dynamic Parameter available when creating KeyVault Keys. Specifies whether to add the key as a software-protected key or an HSM-protected key in the Key Vault service. Valid values are: HSM and Software.</maml:para>
            <maml:para>Note: To use HSM as your destination, you must have a key vault that supports HSMs. For more information about the service tiers and capabilities for Azure Key Vault, see the Azure Key Vault Pricing website.</maml:para>
            <maml:para>This parameter is required when you create a new key. If you import a key by using the KeyFilePath parameter, this parameter is optional:</maml:para>
            <maml:para>If you do not specify this parameter, and this cmdlet imports a key that has .byok file name extension, it imports that key as an HSM-protected key. The cmdlet cannot import that key as software-protected key.</maml:para>
            <maml:para>If you do not specify this parameter, and this cmdlet imports a key that has a .pfx file name extension, it imports the key as a software-protected key.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
          <dev:type>
            <maml:name>String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Disable</maml:name>
          <maml:Description>
            <maml:para>Dynamic Parameter available when creating KeyVault Secrets or Keys. Indicates that this cmdlet disables a secret or key.</maml:para>
          </maml:Description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>EmailAddress</maml:name>
          <maml:Description>
            <maml:para>Dynamic Parameter available when creating KeyVault AccessPolicies.  Specifies the user email address of the user to whom to grant permissions.</maml:para>
            <maml:para>This email address must exist in the directory associated with the current subscription and be unique.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
          <dev:type>
            <maml:name>String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>EnabledForDeployment</maml:name>
          <maml:Description>
            <maml:para>Dynamic Parameter available when creating KeyVault Vaults. Enables the Microsoft.Compute resource provider to retrieve secrets from this key vault when this key vault is referenced in resource creation, for example when creating a virtual machine.</maml:para>
          </maml:Description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>EnabledForDiskEncryption</maml:name>
          <maml:Description>
            <maml:para>Dynamic Parameter available when creating KeyVault Vaults. Enables the Azure disk encryption service to get secrets and unwrap keys from this key vault.</maml:para>
          </maml:Description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>EnabledForTemplateDeployment</maml:name>
          <maml:Description>
            <maml:para>Dynamic Parameter available when creating KeyVault Vaults. Enables Azure Resource Manager to get secrets from this key vault when this key vault is referenced in a template deployment.</maml:para>
          </maml:Description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>EnableSoftDelete</maml:name>
          <maml:Description>
            <maml:para>Dynamic Parameter available when creating KeyVault Vaults. Specifies that the soft-delete functionality is enabled for this key vault. When soft-delete is enabled, for a grace period, you can recover this key vault and its contents after it is deleted.</maml:para>
            <maml:para>For more information about this functionality, see Azure Key Vault soft-delete overview (https://docs.microsoft.com/azure/key-vault/key-vault-ovw-soft-delete). For how-to instructions, see [How to use Key Vault soft-delete with PowerShell](https://docs.microsoft.com/azure/key-vault/key-vault-soft-delete-powershell).</maml:para>
          </maml:Description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Expires</maml:name>
          <maml:Description>
            <maml:para>Dynamic Parameter available when creating KeyVault Secrets or Keys. Specifies the expiration time, as a DateTime object, for the secret that this cmdlet updates. This parameter uses Coordinated Universal Time (UTC). To obtain a DateTime object, use the Get-Date cmdlet. For more information, type Get-Help Get-Date.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">DateTime?</command:parameterValue>
          <dev:type>
            <maml:name>DateTime?</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>FilePath</maml:name>
          <maml:Description>
            <maml:para>Dynamic Parameter available when creating KeyVault Certificates. Specifies the path of the certificate file that this cmdlet imports.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
          <dev:type>
            <maml:name>String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>KeyFilePassword</maml:name>
          <maml:Description>
            <maml:para>Dynamic Parameter available when creating KeyVault Keys. Specifies a password for the imported file as a SecureString object. To obtain a SecureString object, use the ConvertTo-SecureString cmdlet. For more information, type Get-Help ConvertTo-SecureString. You must specify this password to import a file with a .pfx file name extension.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">SecureString</command:parameterValue>
          <dev:type>
            <maml:name>SecureString</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>KeyFilePath</maml:name>
          <maml:Description>
            <maml:para>Dynamic Parameter available when creating KeyVault Keys. Specifies the path of a local file that contains key material that this cmdlet imports. The valid file name extensions are .byok and .pfx.</maml:para>
            <maml:para>If the file is a .byok file, the key is automatically protected by HSMs after the import and you cannot override this default.</maml:para>
            <maml:para>If the file is a .pfx file, the key is automatically protected by software after the import. To override this default, set the Destination parameter to HSM so that the key is HSM-protected.</maml:para>
            <maml:para>When you specify this parameter, the Destination parameter is optional.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
          <dev:type>
            <maml:name>String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>KeyOps</maml:name>
          <maml:Description>
            <maml:para>Dynamic Parameter available when creating KeyVault Keys. Specifies an array of operations that can be performed by using the key that this cmdlet adds. If you do not specify this parameter, all operations can be performed.</maml:para>
            <maml:para>The acceptable values for this parameter are a comma-separated list of key operations as defined by the JSON Web Key (JWK) specification (http://go.microsoft.com/fwlink/?LinkID=613300):</maml:para>
            <maml:para>- Encrypt</maml:para>
            <maml:para>- Decrypt</maml:para>
            <maml:para>- Wrap</maml:para>
            <maml:para>- Unwrap</maml:para>
            <maml:para>- Sign</maml:para>
            <maml:para>- Verify</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">String[]</command:parameterValue>
          <dev:type>
            <maml:name>String[]</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="True (ByPropertyName)" position="named" aliases="Type">
          <maml:name>ItemType</maml:name>
          <maml:Description>
            <maml:para>Specifies the provider-specified type of the new item. Valid values are: Vault, Key, Certificate, Secret, and AccessPolicy.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
          <dev:type>
            <maml:name>String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="True (ByPropertyName)" position="named" aliases="none">
          <maml:name>Name</maml:name>
          <maml:Description>
            <maml:para>Specifies the name of the new item.</maml:para>
            <maml:para>You can specify the name of the new item in the Name or Path parameter value, and you can specify the path of the new item in Name or Path value.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
          <dev:type>
            <maml:name>String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>NotBefore</maml:name>
          <maml:Description>
            <maml:para>Dynamic Parameter available when creating KeyVault Secrets or Keys. Specifies the time, as a DateTime object, before which the secret cannot be used. This parameter uses UTC. To obtain a DateTime object, use the Get-Date cmdlet.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">DateTime?</command:parameterValue>
          <dev:type>
            <maml:name>DateTime?</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Location</maml:name>
          <maml:Description>
            <maml:para>Dynamic Parameter available when creating KeyVault Vaults. Specifies the Azure region in which to create the key vault. Use the command Get-AzureLocation to see your choices.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">string</command:parameterValue>
          <dev:type>
            <maml:name>string</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>ObjectId</maml:name>
          <maml:Description>
            <maml:para>Dynamic Parameter available when creating KeyVault AccessPolicies.  Specifies the object ID of the user or service principal in Azure Active Directory for which to grant permissions.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
          <dev:type>
            <maml:name>String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Password</maml:name>
          <maml:Description>
            <maml:para>Dynamic Parameter available when creating KeyVault Certificates. Specifies the password for a certificate file.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">SecureString</command:parameterValue>
          <dev:type>
            <maml:name>SecureString</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>PermissionsToCertificates</maml:name>
          <maml:Description>
            <maml:para>Dynamic Parameter available when creating KeyVault AccessPolicies.  Specifies an array of certificate permissions to grant to a user or service principal.</maml:para>
            <maml:para>The acceptable values for this parameter:</maml:para>
            <maml:para>- Get</maml:para>
            <maml:para>- List</maml:para>
            <maml:para>- Delete</maml:para>
            <maml:para>- Create</maml:para>
            <maml:para>- Import</maml:para>
            <maml:para>- Update</maml:para>
            <maml:para>- Managecontacts</maml:para>
            <maml:para>- Getissuers</maml:para>
            <maml:para>- Listissuers</maml:para>
            <maml:para>- Setissuers</maml:para>
            <maml:para>- Deleteissuers</maml:para>
            <maml:para>- Manageissuers</maml:para>
          </maml:Description>
          <command:parameterValueGroup>
            <command:parameterValue required="false" command:variableLength="false">get</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">list</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">delete</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">create</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">import</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">update</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">managecontacts</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">getissuers</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">listissuers</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">setissuers</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">deleteissuers</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">manageissuers</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">recover</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">purge</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">backup</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">restore</command:parameterValue>
          </command:parameterValueGroup>
          <command:parameterValue required="true" variableLength="false">String[]</command:parameterValue>
          <dev:type>
            <maml:name>String[]</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>PermissionsToKeys</maml:name>
          <maml:Description>
            <maml:para>Dynamic Parameter available when creating KeyVault AccessPolicies.  Specifies an array of key operation permissions to grant to a user or service principal.</maml:para>
            <maml:para>The acceptable values for this parameter:</maml:para>
            <maml:para>- Decrypt</maml:para>
            <maml:para>- Encrypt</maml:para>
            <maml:para>- UnwrapKey</maml:para>
            <maml:para>- WrapKey</maml:para>
            <maml:para>- Verify</maml:para>
            <maml:para>- Sign</maml:para>
            <maml:para>- Get</maml:para>
            <maml:para>- List</maml:para>
            <maml:para>- Update</maml:para>
            <maml:para>- Create</maml:para>
            <maml:para>- Import</maml:para>
            <maml:para>- Delete</maml:para>
            <maml:para>- Backup</maml:para>
            <maml:para>- Restore</maml:para>
            <maml:para>- Recover</maml:para>
            <maml:para>- Purge</maml:para>
          </maml:Description>
          <command:parameterValueGroup>
            <command:parameterValue required="false" command:variableLength="false">decrypt</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">encrypt</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">unwrapKey</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">wrapKey</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">verify</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">sign</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">get</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">list</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">update</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">create</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">import</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">delete</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">backup</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">restore</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">recover</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">purge</command:parameterValue>
          </command:parameterValueGroup>
          <command:parameterValue required="true" variableLength="false">String[]</command:parameterValue>
          <dev:type>
            <maml:name>String[]</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>PermissionsToSecrets</maml:name>
          <maml:Description>
            <maml:para>Dynamic Parameter available when creating KeyVault AccessPolicies.  Specifies an array of secret operation permissions to grant to a user or service principal.</maml:para>
            <maml:para>The acceptable values for this parameter:</maml:para>
            <maml:para>- Get</maml:para>
            <maml:para>- List</maml:para>
            <maml:para>- Set</maml:para>
            <maml:para>- Delete</maml:para>
            <maml:para>- Backup</maml:para>
            <maml:para>- Restore</maml:para>
            <maml:para>- Recover</maml:para>
            <maml:para>- Purge</maml:para>
          </maml:Description>
          <command:parameterValueGroup>
            <command:parameterValue required="false" command:variableLength="false">get</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">list</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">set</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">delete</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">backup</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">restore</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">recover</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">purge</command:parameterValue>
          </command:parameterValueGroup>
          <command:parameterValue required="true" variableLength="false">String[]</command:parameterValue>
          <dev:type>
            <maml:name>String[]</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>PermissionsToStorage</maml:name>
          <maml:Description>
            <maml:para>Dynamic Parameter available when creating KeyVault AccessPolicies.  Specifies managed storage account and SaS-definition operation permissions to grant to a user or service principal.</maml:para>
            <maml:para>The acceptable values for this parameter:</maml:para>
            <maml:para>- Get</maml:para>
            <maml:para>- List</maml:para>
            <maml:para>- Set</maml:para>
            <maml:para>- Delete</maml:para>
            <maml:para>- Update</maml:para>
            <maml:para>- RegenerateKey</maml:para>
            <maml:para>- GetSAS</maml:para>
            <maml:para>- ListSAS</maml:para>
            <maml:para>- DeleteSAS</maml:para>
            <maml:para>- SetSAS</maml:para>
            <maml:para>- Backup</maml:para>
            <maml:para>- Restore</maml:para>
            <maml:para>- Recover</maml:para>
            <maml:para>- Purge</maml:para>
          </maml:Description>
          <command:parameterValueGroup>
            <command:parameterValue required="false" command:variableLength="false">get</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">list</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">delete</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">set</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">update</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">regeneratekey</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">getsas</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">listsas</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">deletesas</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">setsas</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">recover</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">backup</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">restore</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">purge</command:parameterValue>
          </command:parameterValueGroup>
          <command:parameterValue required="true" variableLength="false">String[]</command:parameterValue>
          <dev:type>
            <maml:name>String[]</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>ResourceGroupName</maml:name>
          <maml:Description>
            <maml:para>Dynamic Parameter available when creating KeyVault Vaults. Specifies the name of an existing resource group in which to create the key vault.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">string</command:parameterValue>
          <dev:type>
            <maml:name>string</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>SecretValue</maml:name>
          <maml:Description>
            <maml:para>Dynamic Parameter available when creating KeyVault Secrets. Specifies the value for the secret as a SecureString object. To obtain a SecureString object, use the ConvertTo-SecureString cmdlet. For more information, type Get-Help ConvertTo-SecureString.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">SecureString</command:parameterValue>
          <dev:type>
            <maml:name>SecureString</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>ServicePrincipalName</maml:name>
          <maml:Description>
            <maml:para>Dynamic Parameter available when creating KeyVault AccessPolicies.  Specifies the service principal name of the application to which to grant permissions.</maml:para>
            <maml:para>Specify the application ID, also known as client ID, registered for the application in AzureActive Directory. The application with the service principal name that this parameter specifies must be registered in the Azure directory that contains your current subscription.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
          <dev:type>
            <maml:name>String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Sku</maml:name>
          <maml:Description>
            <maml:para>Dynamic Parameter available when creating KeyVault Vaults. Specifies the SKU of the key vault instance. For information about which features are available for each SKU, see the Azure Key Vault Pricing website (https://go.microsoft.com/fwlink/?linkid=512521).</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">SkuName</command:parameterValue>
          <dev:type>
            <maml:name>SkuName</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Size</maml:name>
          <maml:Description>
            <maml:para>Dynamic Parameter available when creating KeyVault Keys. RSA key size, in bits. If not specified, the service will provide a safe default.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">int?</command:parameterValue>
          <dev:type>
            <maml:name>int?</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Tag</maml:name>
          <maml:Description>
            <maml:para>Dynamic Parameter available when creating KeyVault Vaults, Secrets, Certificates, or Keys.  Key-value pairs in the form of a hash table. For example:</maml:para>
            <maml:para>@{key0="value0";key1=$null;key2="value2"}</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">HashTable</command:parameterValue>
          <dev:type>
            <maml:name>HashTable</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>UserPrincipalName</maml:name>
          <maml:Description>
            <maml:para>Dynamic Parameter available when creating KeyVault AccessPolicies.  Specifies the user principal name of the user to whom to grant permissions.</maml:para>
            <maml:para>This user principal name must exist in the directory associated with the current subscription.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
          <dev:type>
            <maml:name>String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
      </command:syntaxItem>
      <command:syntaxItem>
        <maml:name>New-Item</maml:name>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>ApplicationId</maml:name>
          <maml:Description>
            <maml:para>Dynamic Parameter available when creating KeyVault AccessPolicies. Specifies the ID of application that a user must use to grant permissions.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Guid?</command:parameterValue>
          <dev:type>
            <maml:name>Guid?</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>BypassObjectIdValidation</maml:name>
          <maml:Description>
            <maml:para>Dynamic Parameter available when creating KeyVault AccessPolicies. Enables you to specify an object ID without validating that the object exists in Azure Active Directory.</maml:para>
            <maml:para>Use this parameter only if you want to grant access to your key vault to an object ID that refers to a delegated security group from another Azure tenant.</maml:para>
          </maml:Description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>CertificateCollection</maml:name>
          <maml:Description>
            <maml:para>Dynamic Parameter available when creating KeyVault Certificates. Specifies the certificate collection to add to a key vault.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">X509Certificate2Collection</command:parameterValue>
          <dev:type>
            <maml:name>X509Certificate2Collection</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>CertificateString</maml:name>
          <maml:Description>
            <maml:para>Dynamic Parameter available when creating KeyVault Certificates. Specifies a certificate string.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
          <dev:type>
            <maml:name>String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>CertificatePolicy</maml:name>
          <maml:Description>
            <maml:para>Dynamic Parameter available when creating KeyVault Certificates. Specifies a KeyVaultCertificatePolicy object.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">PSKeyVaultCertificatePolicy</command:parameterValue>
          <dev:type>
            <maml:name>PSKeyVaultCertificatePolicy</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>ContentType</maml:name>
          <maml:Description>
            <maml:para>Dynamic Parameter available when creating KeyVault Secrets. Specifies the content type of a secret. To delete the existing content type, specify an empty string.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
          <dev:type>
            <maml:name>String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Destination</maml:name>
          <maml:Description>
            <maml:para>Dynamic Parameter available when creating KeyVault Keys. Specifies whether to add the key as a software-protected key or an HSM-protected key in the Key Vault service. Valid values are: HSM and Software.</maml:para>
            <maml:para>Note: To use HSM as your destination, you must have a key vault that supports HSMs. For more information about the service tiers and capabilities for Azure Key Vault, see the Azure Key Vault Pricing website.</maml:para>
            <maml:para>This parameter is required when you create a new key. If you import a key by using the KeyFilePath parameter, this parameter is optional:</maml:para>
            <maml:para>If you do not specify this parameter, and this cmdlet imports a key that has .byok file name extension, it imports that key as an HSM-protected key. The cmdlet cannot import that key as software-protected key.</maml:para>
            <maml:para>If you do not specify this parameter, and this cmdlet imports a key that has a .pfx file name extension, it imports the key as a software-protected key.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
          <dev:type>
            <maml:name>String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Disable</maml:name>
          <maml:Description>
            <maml:para>Dynamic Parameter available when creating KeyVault Secrets or Keys. Indicates that this cmdlet disables a secret or key.</maml:para>
          </maml:Description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>EmailAddress</maml:name>
          <maml:Description>
            <maml:para>Dynamic Parameter available when creating KeyVault AccessPolicies.  Specifies the user email address of the user to whom to grant permissions.</maml:para>
            <maml:para>This email address must exist in the directory associated with the current subscription and be unique.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
          <dev:type>
            <maml:name>String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>EnabledForDeployment</maml:name>
          <maml:Description>
            <maml:para>Dynamic Parameter available when creating KeyVault Vaults. Enables the Microsoft.Compute resource provider to retrieve secrets from this key vault when this key vault is referenced in resource creation, for example when creating a virtual machine.</maml:para>
          </maml:Description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>EnabledForDiskEncryption</maml:name>
          <maml:Description>
            <maml:para>Dynamic Parameter available when creating KeyVault Vaults. Enables the Azure disk encryption service to get secrets and unwrap keys from this key vault.</maml:para>
          </maml:Description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>EnabledForTemplateDeployment</maml:name>
          <maml:Description>
            <maml:para>Dynamic Parameter available when creating KeyVault Vaults. Enables Azure Resource Manager to get secrets from this key vault when this key vault is referenced in a template deployment.</maml:para>
          </maml:Description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>EnableSoftDelete</maml:name>
          <maml:Description>
            <maml:para>Dynamic Parameter available when creating KeyVault Vaults. Specifies that the soft-delete functionality is enabled for this key vault. When soft-delete is enabled, for a grace period, you can recover this key vault and its contents after it is deleted.</maml:para>
            <maml:para>For more information about this functionality, see Azure Key Vault soft-delete overview (https://docs.microsoft.com/azure/key-vault/key-vault-ovw-soft-delete). For how-to instructions, see [How to use Key Vault soft-delete with PowerShell](https://docs.microsoft.com/azure/key-vault/key-vault-soft-delete-powershell).</maml:para>
          </maml:Description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Expires</maml:name>
          <maml:Description>
            <maml:para>Dynamic Parameter available when creating KeyVault Secrets or Keys. Specifies the expiration time, as a DateTime object, for the secret that this cmdlet updates. This parameter uses Coordinated Universal Time (UTC). To obtain a DateTime object, use the Get-Date cmdlet. For more information, type Get-Help Get-Date.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">DateTime?</command:parameterValue>
          <dev:type>
            <maml:name>DateTime?</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>FilePath</maml:name>
          <maml:Description>
            <maml:para>Dynamic Parameter available when creating KeyVault Certificates. Specifies the path of the certificate file that this cmdlet imports.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
          <dev:type>
            <maml:name>String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>KeyFilePassword</maml:name>
          <maml:Description>
            <maml:para>Dynamic Parameter available when creating KeyVault Keys. Specifies a password for the imported file as a SecureString object. To obtain a SecureString object, use the ConvertTo-SecureString cmdlet. For more information, type Get-Help ConvertTo-SecureString. You must specify this password to import a file with a .pfx file name extension.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">SecureString</command:parameterValue>
          <dev:type>
            <maml:name>SecureString</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>KeyFilePath</maml:name>
          <maml:Description>
            <maml:para>Dynamic Parameter available when creating KeyVault Keys. Specifies the path of a local file that contains key material that this cmdlet imports. The valid file name extensions are .byok and .pfx.</maml:para>
            <maml:para>If the file is a .byok file, the key is automatically protected by HSMs after the import and you cannot override this default.</maml:para>
            <maml:para>If the file is a .pfx file, the key is automatically protected by software after the import. To override this default, set the Destination parameter to HSM so that the key is HSM-protected.</maml:para>
            <maml:para>When you specify this parameter, the Destination parameter is optional.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
          <dev:type>
            <maml:name>String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>KeyOps</maml:name>
          <maml:Description>
            <maml:para>Dynamic Parameter available when creating KeyVault Keys. Specifies an array of operations that can be performed by using the key that this cmdlet adds. If you do not specify this parameter, all operations can be performed.</maml:para>
            <maml:para>The acceptable values for this parameter are a comma-separated list of key operations as defined by the JSON Web Key (JWK) specification (http://go.microsoft.com/fwlink/?LinkID=613300):</maml:para>
            <maml:para>- Encrypt</maml:para>
            <maml:para>- Decrypt</maml:para>
            <maml:para>- Wrap</maml:para>
            <maml:para>- Unwrap</maml:para>
            <maml:para>- Sign</maml:para>
            <maml:para>- Verify</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">String[]</command:parameterValue>
          <dev:type>
            <maml:name>String[]</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="True (ByPropertyName)" position="named" aliases="Type">
          <maml:name>ItemType</maml:name>
          <maml:Description>
            <maml:para>Specifies the provider-specified type of the new item. Valid values are: Vault, Key, Certificate, Secret, and AccessPolicy.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
          <dev:type>
            <maml:name>String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>NotBefore</maml:name>
          <maml:Description>
            <maml:para>Dynamic Parameter available when creating KeyVault Secrets or Keys. Specifies the time, as a DateTime object, before which the secret cannot be used. This parameter uses UTC. To obtain a DateTime object, use the Get-Date cmdlet.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">DateTime?</command:parameterValue>
          <dev:type>
            <maml:name>DateTime?</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Location</maml:name>
          <maml:Description>
            <maml:para>Dynamic Parameter available when creating KeyVault Vaults. Specifies the Azure region in which to create the key vault. Use the command Get-AzureLocation to see your choices.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">string</command:parameterValue>
          <dev:type>
            <maml:name>string</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="True (ByPropertyName)" position="named" aliases="PSPath">
          <maml:name>LiteralPath</maml:name>
          <maml:Description>
            <maml:para>Specifies a path to the item. Unlike the Path parameter, the value of LiteralPath is used exactly as it is typed. No characters are interpreted as wildcards. If the path includes escape characters, enclose it in single quotation marks. Single quotation marks tell Windows PowerShell not to interpret any characters as escape sequences.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">String[]</command:parameterValue>
          <dev:type>
            <maml:name>String[]</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>ObjectId</maml:name>
          <maml:Description>
            <maml:para>Dynamic Parameter available when creating KeyVault AccessPolicies.  Specifies the object ID of the user or service principal in Azure Active Directory for which to grant permissions.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
          <dev:type>
            <maml:name>String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Password</maml:name>
          <maml:Description>
            <maml:para>Dynamic Parameter available when creating KeyVault Certificates. Specifies the password for a certificate file.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">SecureString</command:parameterValue>
          <dev:type>
            <maml:name>SecureString</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>PermissionsToCertificates</maml:name>
          <maml:Description>
            <maml:para>Dynamic Parameter available when creating KeyVault AccessPolicies.  Specifies an array of certificate permissions to grant to a user or service principal.</maml:para>
            <maml:para>The acceptable values for this parameter:</maml:para>
            <maml:para>- Get</maml:para>
            <maml:para>- List</maml:para>
            <maml:para>- Delete</maml:para>
            <maml:para>- Create</maml:para>
            <maml:para>- Import</maml:para>
            <maml:para>- Update</maml:para>
            <maml:para>- Managecontacts</maml:para>
            <maml:para>- Getissuers</maml:para>
            <maml:para>- Listissuers</maml:para>
            <maml:para>- Setissuers</maml:para>
            <maml:para>- Deleteissuers</maml:para>
            <maml:para>- Manageissuers</maml:para>
          </maml:Description>
          <command:parameterValueGroup>
            <command:parameterValue required="false" command:variableLength="false">get</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">list</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">delete</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">create</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">import</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">update</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">managecontacts</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">getissuers</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">listissuers</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">setissuers</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">deleteissuers</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">manageissuers</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">recover</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">purge</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">backup</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">restore</command:parameterValue>
          </command:parameterValueGroup>
          <command:parameterValue required="true" variableLength="false">String[]</command:parameterValue>
          <dev:type>
            <maml:name>String[]</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>PermissionsToKeys</maml:name>
          <maml:Description>
            <maml:para>Dynamic Parameter available when creating KeyVault AccessPolicies.  Specifies an array of key operation permissions to grant to a user or service principal.</maml:para>
            <maml:para>The acceptable values for this parameter:</maml:para>
            <maml:para>- Decrypt</maml:para>
            <maml:para>- Encrypt</maml:para>
            <maml:para>- UnwrapKey</maml:para>
            <maml:para>- WrapKey</maml:para>
            <maml:para>- Verify</maml:para>
            <maml:para>- Sign</maml:para>
            <maml:para>- Get</maml:para>
            <maml:para>- List</maml:para>
            <maml:para>- Update</maml:para>
            <maml:para>- Create</maml:para>
            <maml:para>- Import</maml:para>
            <maml:para>- Delete</maml:para>
            <maml:para>- Backup</maml:para>
            <maml:para>- Restore</maml:para>
            <maml:para>- Recover</maml:para>
            <maml:para>- Purge</maml:para>
          </maml:Description>
          <command:parameterValueGroup>
            <command:parameterValue required="false" command:variableLength="false">decrypt</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">encrypt</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">unwrapKey</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">wrapKey</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">verify</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">sign</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">get</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">list</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">update</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">create</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">import</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">delete</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">backup</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">restore</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">recover</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">purge</command:parameterValue>
          </command:parameterValueGroup>
          <command:parameterValue required="true" variableLength="false">String[]</command:parameterValue>
          <dev:type>
            <maml:name>String[]</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>PermissionsToSecrets</maml:name>
          <maml:Description>
            <maml:para>Dynamic Parameter available when creating KeyVault AccessPolicies.  Specifies an array of secret operation permissions to grant to a user or service principal.</maml:para>
            <maml:para>The acceptable values for this parameter:</maml:para>
            <maml:para>- Get</maml:para>
            <maml:para>- List</maml:para>
            <maml:para>- Set</maml:para>
            <maml:para>- Delete</maml:para>
            <maml:para>- Backup</maml:para>
            <maml:para>- Restore</maml:para>
            <maml:para>- Recover</maml:para>
            <maml:para>- Purge</maml:para>
          </maml:Description>
          <command:parameterValueGroup>
            <command:parameterValue required="false" command:variableLength="false">get</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">list</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">set</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">delete</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">backup</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">restore</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">recover</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">purge</command:parameterValue>
          </command:parameterValueGroup>
          <command:parameterValue required="true" variableLength="false">String[]</command:parameterValue>
          <dev:type>
            <maml:name>String[]</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>PermissionsToStorage</maml:name>
          <maml:Description>
            <maml:para>Dynamic Parameter available when creating KeyVault AccessPolicies.  Specifies managed storage account and SaS-definition operation permissions to grant to a user or service principal.</maml:para>
            <maml:para>The acceptable values for this parameter:</maml:para>
            <maml:para>- Get</maml:para>
            <maml:para>- List</maml:para>
            <maml:para>- Set</maml:para>
            <maml:para>- Delete</maml:para>
            <maml:para>- Update</maml:para>
            <maml:para>- RegenerateKey</maml:para>
            <maml:para>- GetSAS</maml:para>
            <maml:para>- ListSAS</maml:para>
            <maml:para>- DeleteSAS</maml:para>
            <maml:para>- SetSAS</maml:para>
            <maml:para>- Backup</maml:para>
            <maml:para>- Restore</maml:para>
            <maml:para>- Recover</maml:para>
            <maml:para>- Purge</maml:para>
          </maml:Description>
          <command:parameterValueGroup>
            <command:parameterValue required="false" command:variableLength="false">get</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">list</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">delete</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">set</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">update</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">regeneratekey</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">getsas</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">listsas</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">deletesas</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">setsas</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">recover</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">backup</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">restore</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">purge</command:parameterValue>
          </command:parameterValueGroup>
          <command:parameterValue required="true" variableLength="false">String[]</command:parameterValue>
          <dev:type>
            <maml:name>String[]</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>ResourceGroupName</maml:name>
          <maml:Description>
            <maml:para>Dynamic Parameter available when creating KeyVault Vaults. Specifies the name of an existing resource group in which to create the key vault.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">string</command:parameterValue>
          <dev:type>
            <maml:name>string</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>SecretValue</maml:name>
          <maml:Description>
            <maml:para>Dynamic Parameter available when creating KeyVault Secrets. Specifies the value for the secret as a SecureString object. To obtain a SecureString object, use the ConvertTo-SecureString cmdlet. For more information, type Get-Help ConvertTo-SecureString.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">SecureString</command:parameterValue>
          <dev:type>
            <maml:name>SecureString</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>ServicePrincipalName</maml:name>
          <maml:Description>
            <maml:para>Dynamic Parameter available when creating KeyVault AccessPolicies.  Specifies the service principal name of the application to which to grant permissions.</maml:para>
            <maml:para>Specify the application ID, also known as client ID, registered for the application in AzureActive Directory. The application with the service principal name that this parameter specifies must be registered in the Azure directory that contains your current subscription.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
          <dev:type>
            <maml:name>String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Sku</maml:name>
          <maml:Description>
            <maml:para>Dynamic Parameter available when creating KeyVault Vaults. Specifies the SKU of the key vault instance. For information about which features are available for each SKU, see the Azure Key Vault Pricing website (https://go.microsoft.com/fwlink/?linkid=512521).</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">SkuName</command:parameterValue>
          <dev:type>
            <maml:name>SkuName</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Size</maml:name>
          <maml:Description>
            <maml:para>Dynamic Parameter available when creating KeyVault Keys. RSA key size, in bits. If not specified, the service will provide a safe default.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">int?</command:parameterValue>
          <dev:type>
            <maml:name>int?</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Tag</maml:name>
          <maml:Description>
            <maml:para>Dynamic Parameter available when creating KeyVault Vaults, Secrets, Certificates, or Keys.  Key-value pairs in the form of a hash table. For example:</maml:para>
            <maml:para>@{key0="value0";key1=$null;key2="value2"}</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">HashTable</command:parameterValue>
          <dev:type>
            <maml:name>HashTable</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>UserPrincipalName</maml:name>
          <maml:Description>
            <maml:para>Dynamic Parameter available when creating KeyVault AccessPolicies.  Specifies the user principal name of the user to whom to grant permissions.</maml:para>
            <maml:para>This user principal name must exist in the directory associated with the current subscription.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
          <dev:type>
            <maml:name>String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
      </command:syntaxItem>
      <command:syntaxItem>
        <maml:name>New-Item</maml:name>
        <command:parameter required="true" variableLength="true" globbing="true" pipelineInput="True (ByPropertyName, ByValue)" position="1" aliases="none">
          <maml:name>Path</maml:name>
          <maml:Description>
            <maml:para>Specifies the path to an item. This cmdlet gets the item at the specified location. Wildcards are permitted. This parameter is required, but the parameter name ("Path") is optional.</maml:para>
            <maml:para>Use a dot (.) to specify the current location. Use the wildcard character (*) to specify all the items in the current location.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">String[]</command:parameterValue>
          <dev:type>
            <maml:name>String[]</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>ApplicationId</maml:name>
          <maml:Description>
            <maml:para>Dynamic Parameter available when creating KeyVault AccessPolicies. Specifies the ID of application that a user must use to grant permissions.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Guid?</command:parameterValue>
          <dev:type>
            <maml:name>Guid?</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>BypassObjectIdValidation</maml:name>
          <maml:Description>
            <maml:para>Dynamic Parameter available when creating KeyVault AccessPolicies. Enables you to specify an object ID without validating that the object exists in Azure Active Directory.</maml:para>
            <maml:para>Use this parameter only if you want to grant access to your key vault to an object ID that refers to a delegated security group from another Azure tenant.</maml:para>
          </maml:Description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>CertificateCollection</maml:name>
          <maml:Description>
            <maml:para>Dynamic Parameter available when creating KeyVault Certificates. Specifies the certificate collection to add to a key vault.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">X509Certificate2Collection</command:parameterValue>
          <dev:type>
            <maml:name>X509Certificate2Collection</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>CertificateString</maml:name>
          <maml:Description>
            <maml:para>Dynamic Parameter available when creating KeyVault Certificates. Specifies a certificate string.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
          <dev:type>
            <maml:name>String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>CertificatePolicy</maml:name>
          <maml:Description>
            <maml:para>Dynamic Parameter available when creating KeyVault Certificates. Specifies a KeyVaultCertificatePolicy object.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">PSKeyVaultCertificatePolicy</command:parameterValue>
          <dev:type>
            <maml:name>PSKeyVaultCertificatePolicy</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>ContentType</maml:name>
          <maml:Description>
            <maml:para>Dynamic Parameter available when creating KeyVault Secrets. Specifies the content type of a secret. To delete the existing content type, specify an empty string.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
          <dev:type>
            <maml:name>String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Destination</maml:name>
          <maml:Description>
            <maml:para>Dynamic Parameter available when creating KeyVault Keys. Specifies whether to add the key as a software-protected key or an HSM-protected key in the Key Vault service. Valid values are: HSM and Software.</maml:para>
            <maml:para>Note: To use HSM as your destination, you must have a key vault that supports HSMs. For more information about the service tiers and capabilities for Azure Key Vault, see the Azure Key Vault Pricing website.</maml:para>
            <maml:para>This parameter is required when you create a new key. If you import a key by using the KeyFilePath parameter, this parameter is optional:</maml:para>
            <maml:para>If you do not specify this parameter, and this cmdlet imports a key that has .byok file name extension, it imports that key as an HSM-protected key. The cmdlet cannot import that key as software-protected key.</maml:para>
            <maml:para>If you do not specify this parameter, and this cmdlet imports a key that has a .pfx file name extension, it imports the key as a software-protected key.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
          <dev:type>
            <maml:name>String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Disable</maml:name>
          <maml:Description>
            <maml:para>Dynamic Parameter available when creating KeyVault Secrets or Keys. Indicates that this cmdlet disables a secret or key.</maml:para>
          </maml:Description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>EmailAddress</maml:name>
          <maml:Description>
            <maml:para>Dynamic Parameter available when creating KeyVault AccessPolicies.  Specifies the user email address of the user to whom to grant permissions.</maml:para>
            <maml:para>This email address must exist in the directory associated with the current subscription and be unique.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
          <dev:type>
            <maml:name>String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>EnabledForDeployment</maml:name>
          <maml:Description>
            <maml:para>Dynamic Parameter available when creating KeyVault Vaults. Enables the Microsoft.Compute resource provider to retrieve secrets from this key vault when this key vault is referenced in resource creation, for example when creating a virtual machine.</maml:para>
          </maml:Description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>EnabledForDiskEncryption</maml:name>
          <maml:Description>
            <maml:para>Dynamic Parameter available when creating KeyVault Vaults. Enables the Azure disk encryption service to get secrets and unwrap keys from this key vault.</maml:para>
          </maml:Description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>EnabledForTemplateDeployment</maml:name>
          <maml:Description>
            <maml:para>Dynamic Parameter available when creating KeyVault Vaults. Enables Azure Resource Manager to get secrets from this key vault when this key vault is referenced in a template deployment.</maml:para>
          </maml:Description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>EnableSoftDelete</maml:name>
          <maml:Description>
            <maml:para>Dynamic Parameter available when creating KeyVault Vaults. Specifies that the soft-delete functionality is enabled for this key vault. When soft-delete is enabled, for a grace period, you can recover this key vault and its contents after it is deleted.</maml:para>
            <maml:para>For more information about this functionality, see Azure Key Vault soft-delete overview (https://docs.microsoft.com/azure/key-vault/key-vault-ovw-soft-delete). For how-to instructions, see [How to use Key Vault soft-delete with PowerShell](https://docs.microsoft.com/azure/key-vault/key-vault-soft-delete-powershell).</maml:para>
          </maml:Description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Expires</maml:name>
          <maml:Description>
            <maml:para>Dynamic Parameter available when creating KeyVault Secrets or Keys. Specifies the expiration time, as a DateTime object, for the secret that this cmdlet updates. This parameter uses Coordinated Universal Time (UTC). To obtain a DateTime object, use the Get-Date cmdlet. For more information, type Get-Help Get-Date.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">DateTime?</command:parameterValue>
          <dev:type>
            <maml:name>DateTime?</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>FilePath</maml:name>
          <maml:Description>
            <maml:para>Dynamic Parameter available when creating KeyVault Certificates. Specifies the path of the certificate file that this cmdlet imports.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
          <dev:type>
            <maml:name>String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>KeyFilePassword</maml:name>
          <maml:Description>
            <maml:para>Dynamic Parameter available when creating KeyVault Keys. Specifies a password for the imported file as a SecureString object. To obtain a SecureString object, use the ConvertTo-SecureString cmdlet. For more information, type Get-Help ConvertTo-SecureString. You must specify this password to import a file with a .pfx file name extension.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">SecureString</command:parameterValue>
          <dev:type>
            <maml:name>SecureString</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>KeyFilePath</maml:name>
          <maml:Description>
            <maml:para>Dynamic Parameter available when creating KeyVault Keys. Specifies the path of a local file that contains key material that this cmdlet imports. The valid file name extensions are .byok and .pfx.</maml:para>
            <maml:para>If the file is a .byok file, the key is automatically protected by HSMs after the import and you cannot override this default.</maml:para>
            <maml:para>If the file is a .pfx file, the key is automatically protected by software after the import. To override this default, set the Destination parameter to HSM so that the key is HSM-protected.</maml:para>
            <maml:para>When you specify this parameter, the Destination parameter is optional.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
          <dev:type>
            <maml:name>String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>KeyOps</maml:name>
          <maml:Description>
            <maml:para>Dynamic Parameter available when creating KeyVault Keys. Specifies an array of operations that can be performed by using the key that this cmdlet adds. If you do not specify this parameter, all operations can be performed.</maml:para>
            <maml:para>The acceptable values for this parameter are a comma-separated list of key operations as defined by the JSON Web Key (JWK) specification (http://go.microsoft.com/fwlink/?LinkID=613300):</maml:para>
            <maml:para>- Encrypt</maml:para>
            <maml:para>- Decrypt</maml:para>
            <maml:para>- Wrap</maml:para>
            <maml:para>- Unwrap</maml:para>
            <maml:para>- Sign</maml:para>
            <maml:para>- Verify</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">String[]</command:parameterValue>
          <dev:type>
            <maml:name>String[]</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="True (ByPropertyName)" position="named" aliases="Type">
          <maml:name>ItemType</maml:name>
          <maml:Description>
            <maml:para>Specifies the provider-specified type of the new item. Valid values are: Vault, Key, Certificate, Secret, and AccessPolicy.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
          <dev:type>
            <maml:name>String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>NotBefore</maml:name>
          <maml:Description>
            <maml:para>Dynamic Parameter available when creating KeyVault Secrets or Keys. Specifies the time, as a DateTime object, before which the secret cannot be used. This parameter uses UTC. To obtain a DateTime object, use the Get-Date cmdlet.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">DateTime?</command:parameterValue>
          <dev:type>
            <maml:name>DateTime?</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Location</maml:name>
          <maml:Description>
            <maml:para>Dynamic Parameter available when creating KeyVault Vaults. Specifies the Azure region in which to create the key vault. Use the command Get-AzureLocation to see your choices.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">string</command:parameterValue>
          <dev:type>
            <maml:name>string</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>ObjectId</maml:name>
          <maml:Description>
            <maml:para>Dynamic Parameter available when creating KeyVault AccessPolicies.  Specifies the object ID of the user or service principal in Azure Active Directory for which to grant permissions.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
          <dev:type>
            <maml:name>String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Password</maml:name>
          <maml:Description>
            <maml:para>Dynamic Parameter available when creating KeyVault Certificates. Specifies the password for a certificate file.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">SecureString</command:parameterValue>
          <dev:type>
            <maml:name>SecureString</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>PermissionsToCertificates</maml:name>
          <maml:Description>
            <maml:para>Dynamic Parameter available when creating KeyVault AccessPolicies.  Specifies an array of certificate permissions to grant to a user or service principal.</maml:para>
            <maml:para>The acceptable values for this parameter:</maml:para>
            <maml:para>- Get</maml:para>
            <maml:para>- List</maml:para>
            <maml:para>- Delete</maml:para>
            <maml:para>- Create</maml:para>
            <maml:para>- Import</maml:para>
            <maml:para>- Update</maml:para>
            <maml:para>- Managecontacts</maml:para>
            <maml:para>- Getissuers</maml:para>
            <maml:para>- Listissuers</maml:para>
            <maml:para>- Setissuers</maml:para>
            <maml:para>- Deleteissuers</maml:para>
            <maml:para>- Manageissuers</maml:para>
          </maml:Description>
          <command:parameterValueGroup>
            <command:parameterValue required="false" command:variableLength="false">get</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">list</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">delete</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">create</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">import</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">update</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">managecontacts</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">getissuers</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">listissuers</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">setissuers</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">deleteissuers</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">manageissuers</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">recover</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">purge</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">backup</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">restore</command:parameterValue>
          </command:parameterValueGroup>
          <command:parameterValue required="true" variableLength="false">String[]</command:parameterValue>
          <dev:type>
            <maml:name>String[]</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>PermissionsToKeys</maml:name>
          <maml:Description>
            <maml:para>Dynamic Parameter available when creating KeyVault AccessPolicies.  Specifies an array of key operation permissions to grant to a user or service principal.</maml:para>
            <maml:para>The acceptable values for this parameter:</maml:para>
            <maml:para>- Decrypt</maml:para>
            <maml:para>- Encrypt</maml:para>
            <maml:para>- UnwrapKey</maml:para>
            <maml:para>- WrapKey</maml:para>
            <maml:para>- Verify</maml:para>
            <maml:para>- Sign</maml:para>
            <maml:para>- Get</maml:para>
            <maml:para>- List</maml:para>
            <maml:para>- Update</maml:para>
            <maml:para>- Create</maml:para>
            <maml:para>- Import</maml:para>
            <maml:para>- Delete</maml:para>
            <maml:para>- Backup</maml:para>
            <maml:para>- Restore</maml:para>
            <maml:para>- Recover</maml:para>
            <maml:para>- Purge</maml:para>
          </maml:Description>
          <command:parameterValueGroup>
            <command:parameterValue required="false" command:variableLength="false">decrypt</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">encrypt</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">unwrapKey</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">wrapKey</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">verify</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">sign</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">get</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">list</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">update</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">create</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">import</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">delete</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">backup</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">restore</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">recover</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">purge</command:parameterValue>
          </command:parameterValueGroup>
          <command:parameterValue required="true" variableLength="false">String[]</command:parameterValue>
          <dev:type>
            <maml:name>String[]</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>PermissionsToSecrets</maml:name>
          <maml:Description>
            <maml:para>Dynamic Parameter available when creating KeyVault AccessPolicies.  Specifies an array of secret operation permissions to grant to a user or service principal.</maml:para>
            <maml:para>The acceptable values for this parameter:</maml:para>
            <maml:para>- Get</maml:para>
            <maml:para>- List</maml:para>
            <maml:para>- Set</maml:para>
            <maml:para>- Delete</maml:para>
            <maml:para>- Backup</maml:para>
            <maml:para>- Restore</maml:para>
            <maml:para>- Recover</maml:para>
            <maml:para>- Purge</maml:para>
          </maml:Description>
          <command:parameterValueGroup>
            <command:parameterValue required="false" command:variableLength="false">get</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">list</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">set</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">delete</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">backup</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">restore</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">recover</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">purge</command:parameterValue>
          </command:parameterValueGroup>
          <command:parameterValue required="true" variableLength="false">String[]</command:parameterValue>
          <dev:type>
            <maml:name>String[]</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>PermissionsToStorage</maml:name>
          <maml:Description>
            <maml:para>Dynamic Parameter available when creating KeyVault AccessPolicies.  Specifies managed storage account and SaS-definition operation permissions to grant to a user or service principal.</maml:para>
            <maml:para>The acceptable values for this parameter:</maml:para>
            <maml:para>- Get</maml:para>
            <maml:para>- List</maml:para>
            <maml:para>- Set</maml:para>
            <maml:para>- Delete</maml:para>
            <maml:para>- Update</maml:para>
            <maml:para>- RegenerateKey</maml:para>
            <maml:para>- GetSAS</maml:para>
            <maml:para>- ListSAS</maml:para>
            <maml:para>- DeleteSAS</maml:para>
            <maml:para>- SetSAS</maml:para>
            <maml:para>- Backup</maml:para>
            <maml:para>- Restore</maml:para>
            <maml:para>- Recover</maml:para>
            <maml:para>- Purge</maml:para>
          </maml:Description>
          <command:parameterValueGroup>
            <command:parameterValue required="false" command:variableLength="false">get</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">list</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">delete</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">set</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">update</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">regeneratekey</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">getsas</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">listsas</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">deletesas</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">setsas</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">recover</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">backup</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">restore</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">purge</command:parameterValue>
          </command:parameterValueGroup>
          <command:parameterValue required="true" variableLength="false">String[]</command:parameterValue>
          <dev:type>
            <maml:name>String[]</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>ResourceGroupName</maml:name>
          <maml:Description>
            <maml:para>Dynamic Parameter available when creating KeyVault Vaults. Specifies the name of an existing resource group in which to create the key vault.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">string</command:parameterValue>
          <dev:type>
            <maml:name>string</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>SecretValue</maml:name>
          <maml:Description>
            <maml:para>Dynamic Parameter available when creating KeyVault Secrets. Specifies the value for the secret as a SecureString object. To obtain a SecureString object, use the ConvertTo-SecureString cmdlet. For more information, type Get-Help ConvertTo-SecureString.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">SecureString</command:parameterValue>
          <dev:type>
            <maml:name>SecureString</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>ServicePrincipalName</maml:name>
          <maml:Description>
            <maml:para>Dynamic Parameter available when creating KeyVault AccessPolicies.  Specifies the service principal name of the application to which to grant permissions.</maml:para>
            <maml:para>Specify the application ID, also known as client ID, registered for the application in AzureActive Directory. The application with the service principal name that this parameter specifies must be registered in the Azure directory that contains your current subscription.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
          <dev:type>
            <maml:name>String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Sku</maml:name>
          <maml:Description>
            <maml:para>Dynamic Parameter available when creating KeyVault Vaults. Specifies the SKU of the key vault instance. For information about which features are available for each SKU, see the Azure Key Vault Pricing website (https://go.microsoft.com/fwlink/?linkid=512521).</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">SkuName</command:parameterValue>
          <dev:type>
            <maml:name>SkuName</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Size</maml:name>
          <maml:Description>
            <maml:para>Dynamic Parameter available when creating KeyVault Keys. RSA key size, in bits. If not specified, the service will provide a safe default.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">int?</command:parameterValue>
          <dev:type>
            <maml:name>int?</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Tag</maml:name>
          <maml:Description>
            <maml:para>Dynamic Parameter available when creating KeyVault Vaults, Secrets, Certificates, or Keys.  Key-value pairs in the form of a hash table. For example:</maml:para>
            <maml:para>@{key0="value0";key1=$null;key2="value2"}</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">HashTable</command:parameterValue>
          <dev:type>
            <maml:name>HashTable</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>UserPrincipalName</maml:name>
          <maml:Description>
            <maml:para>Dynamic Parameter available when creating KeyVault AccessPolicies.  Specifies the user principal name of the user to whom to grant permissions.</maml:para>
            <maml:para>This user principal name must exist in the directory associated with the current subscription.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
          <dev:type>
            <maml:name>String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>ApplicationId</maml:name>
        <maml:Description>
          <maml:para>Dynamic Parameter available when creating KeyVault AccessPolicies. Specifies the ID of application that a user must use to grant permissions.</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">Guid?</command:parameterValue>
        <dev:type>
          <maml:name>Guid?</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>BypassObjectIdValidation</maml:name>
        <maml:Description>
          <maml:para>Dynamic Parameter available when creating KeyVault AccessPolicies. Enables you to specify an object ID without validating that the object exists in Azure Active Directory.</maml:para>
          <maml:para>Use this parameter only if you want to grant access to your key vault to an object ID that refers to a delegated security group from another Azure tenant.</maml:para>
        </maml:Description>
        <command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
      <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>CertificateCollection</maml:name>
        <maml:Description>
          <maml:para>Dynamic Parameter available when creating KeyVault Certificates. Specifies the certificate collection to add to a key vault.</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">X509Certificate2Collection</command:parameterValue>
        <dev:type>
          <maml:name>X509Certificate2Collection</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>CertificateString</maml:name>
        <maml:Description>
          <maml:para>Dynamic Parameter available when creating KeyVault Certificates. Specifies a certificate string.</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
        <dev:type>
          <maml:name>String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>CertificatePolicy</maml:name>
        <maml:Description>
          <maml:para>Dynamic Parameter available when creating KeyVault Certificates. Specifies a KeyVaultCertificatePolicy object.</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">PSKeyVaultCertificatePolicy</command:parameterValue>
        <dev:type>
          <maml:name>PSKeyVaultCertificatePolicy</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>ContentType</maml:name>
        <maml:Description>
          <maml:para>Dynamic Parameter available when creating KeyVault Secrets. Specifies the content type of a secret. To delete the existing content type, specify an empty string.</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
        <dev:type>
          <maml:name>String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>Destination</maml:name>
        <maml:Description>
          <maml:para>Dynamic Parameter available when creating KeyVault Keys. Specifies whether to add the key as a software-protected key or an HSM-protected key in the Key Vault service. Valid values are: HSM and Software.</maml:para>
          <maml:para>Note: To use HSM as your destination, you must have a key vault that supports HSMs. For more information about the service tiers and capabilities for Azure Key Vault, see the Azure Key Vault Pricing website.</maml:para>
          <maml:para>This parameter is required when you create a new key. If you import a key by using the KeyFilePath parameter, this parameter is optional:</maml:para>
          <maml:para>If you do not specify this parameter, and this cmdlet imports a key that has .byok file name extension, it imports that key as an HSM-protected key. The cmdlet cannot import that key as software-protected key.</maml:para>
          <maml:para>If you do not specify this parameter, and this cmdlet imports a key that has a .pfx file name extension, it imports the key as a software-protected key.</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
        <dev:type>
          <maml:name>String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>Disable</maml:name>
        <maml:Description>
          <maml:para>Dynamic Parameter available when creating KeyVault Secrets or Keys. Indicates that this cmdlet disables a secret or key.</maml:para>
        </maml:Description>
        <command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
      <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>EmailAddress</maml:name>
        <maml:Description>
          <maml:para>Dynamic Parameter available when creating KeyVault AccessPolicies.  Specifies the user email address of the user to whom to grant permissions.</maml:para>
          <maml:para>This email address must exist in the directory associated with the current subscription and be unique.</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
        <dev:type>
          <maml:name>String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>EnabledForDeployment</maml:name>
        <maml:Description>
          <maml:para>Dynamic Parameter available when creating KeyVault Vaults. Enables the Microsoft.Compute resource provider to retrieve secrets from this key vault when this key vault is referenced in resource creation, for example when creating a virtual machine.</maml:para>
        </maml:Description>
        <command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>EnabledForDiskEncryption</maml:name>
        <maml:Description>
          <maml:para>Dynamic Parameter available when creating KeyVault Vaults. Enables the Azure disk encryption service to get secrets and unwrap keys from this key vault.</maml:para>
        </maml:Description>
        <command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>EnabledForTemplateDeployment</maml:name>
        <maml:Description>
          <maml:para>Dynamic Parameter available when creating KeyVault Vaults. Enables Azure Resource Manager to get secrets from this key vault when this key vault is referenced in a template deployment.</maml:para>
        </maml:Description>
        <command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>EnableSoftDelete</maml:name>
        <maml:Description>
          <maml:para>Dynamic Parameter available when creating KeyVault Vaults. Specifies that the soft-delete functionality is enabled for this key vault. When soft-delete is enabled, for a grace period, you can recover this key vault and its contents after it is deleted.</maml:para>
          <maml:para>For more information about this functionality, see Azure Key Vault soft-delete overview (https://docs.microsoft.com/azure/key-vault/key-vault-ovw-soft-delete). For how-to instructions, see [How to use Key Vault soft-delete with PowerShell](https://docs.microsoft.com/azure/key-vault/key-vault-soft-delete-powershell).</maml:para>
        </maml:Description>
        <command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>Expires</maml:name>
        <maml:Description>
          <maml:para>Dynamic Parameter available when creating KeyVault Secrets or Keys. Specifies the expiration time, as a DateTime object, for the secret that this cmdlet updates. This parameter uses Coordinated Universal Time (UTC). To obtain a DateTime object, use the Get-Date cmdlet. For more information, type Get-Help Get-Date.</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">DateTime?</command:parameterValue>
        <dev:type>
          <maml:name>DateTime?</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>FilePath</maml:name>
        <maml:Description>
          <maml:para>Dynamic Parameter available when creating KeyVault Certificates. Specifies the path of the certificate file that this cmdlet imports.</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
        <dev:type>
          <maml:name>String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>KeyFilePassword</maml:name>
        <maml:Description>
          <maml:para>Dynamic Parameter available when creating KeyVault Keys. Specifies a password for the imported file as a SecureString object. To obtain a SecureString object, use the ConvertTo-SecureString cmdlet. For more information, type Get-Help ConvertTo-SecureString. You must specify this password to import a file with a .pfx file name extension.</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">SecureString</command:parameterValue>
        <dev:type>
          <maml:name>SecureString</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>KeyFilePath</maml:name>
        <maml:Description>
          <maml:para>Dynamic Parameter available when creating KeyVault Keys. Specifies the path of a local file that contains key material that this cmdlet imports. The valid file name extensions are .byok and .pfx.</maml:para>
          <maml:para>If the file is a .byok file, the key is automatically protected by HSMs after the import and you cannot override this default.</maml:para>
          <maml:para>If the file is a .pfx file, the key is automatically protected by software after the import. To override this default, set the Destination parameter to HSM so that the key is HSM-protected.</maml:para>
          <maml:para>When you specify this parameter, the Destination parameter is optional.</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
        <dev:type>
          <maml:name>String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>KeyOps</maml:name>
        <maml:Description>
          <maml:para>Dynamic Parameter available when creating KeyVault Keys. Specifies an array of operations that can be performed by using the key that this cmdlet adds. If you do not specify this parameter, all operations can be performed.</maml:para>
          <maml:para>The acceptable values for this parameter are a comma-separated list of key operations as defined by the JSON Web Key (JWK) specification (http://go.microsoft.com/fwlink/?LinkID=613300):</maml:para>
          <maml:para>- Encrypt</maml:para>
          <maml:para>- Decrypt</maml:para>
          <maml:para>- Wrap</maml:para>
          <maml:para>- Unwrap</maml:para>
          <maml:para>- Sign</maml:para>
          <maml:para>- Verify</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">String[]</command:parameterValue>
        <dev:type>
          <maml:name>String[]</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="True (ByPropertyName)" position="named" aliases="Type">
        <maml:name>ItemType</maml:name>
        <maml:Description>
          <maml:para>Specifies the provider-specified type of the new item. Valid values are: Vault, Key, Certificate, Secret, and AccessPolicy.</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
        <dev:type>
          <maml:name>String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="True (ByPropertyName)" position="named" aliases="none">
        <maml:name>Name</maml:name>
        <maml:Description>
          <maml:para>Specifies the name of the new item.</maml:para>
          <maml:para>You can specify the name of the new item in the Name or Path parameter value, and you can specify the path of the new item in Name or Path value.</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
        <dev:type>
          <maml:name>String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>NotBefore</maml:name>
        <maml:Description>
          <maml:para>Dynamic Parameter available when creating KeyVault Secrets or Keys. Specifies the time, as a DateTime object, before which the secret cannot be used. This parameter uses UTC. To obtain a DateTime object, use the Get-Date cmdlet.</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">DateTime?</command:parameterValue>
        <dev:type>
          <maml:name>DateTime?</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>Location</maml:name>
        <maml:Description>
          <maml:para>Dynamic Parameter available when creating KeyVault Vaults. Specifies the Azure region in which to create the key vault. Use the command Get-AzureLocation to see your choices.</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">string</command:parameterValue>
        <dev:type>
          <maml:name>string</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="True (ByPropertyName)" position="named" aliases="PSPath">
        <maml:name>LiteralPath</maml:name>
        <maml:Description>
          <maml:para>Specifies a path to the item. Unlike the Path parameter, the value of LiteralPath is used exactly as it is typed. No characters are interpreted as wildcards. If the path includes escape characters, enclose it in single quotation marks. Single quotation marks tell Windows PowerShell not to interpret any characters as escape sequences.</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">String[]</command:parameterValue>
        <dev:type>
          <maml:name>String[]</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>ObjectId</maml:name>
        <maml:Description>
          <maml:para>Dynamic Parameter available when creating KeyVault AccessPolicies.  Specifies the object ID of the user or service principal in Azure Active Directory for which to grant permissions.</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
        <dev:type>
          <maml:name>String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>Password</maml:name>
        <maml:Description>
          <maml:para>Dynamic Parameter available when creating KeyVault Certificates. Specifies the password for a certificate file.</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">SecureString</command:parameterValue>
        <dev:type>
          <maml:name>SecureString</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="true" variableLength="true" globbing="true" pipelineInput="True (ByPropertyName, ByValue)" position="1" aliases="none">
        <maml:name>Path</maml:name>
        <maml:Description>
          <maml:para>Specifies the path to an item. This cmdlet gets the item at the specified location. Wildcards are permitted. This parameter is required, but the parameter name ("Path") is optional.</maml:para>
          <maml:para>Use a dot (.) to specify the current location. Use the wildcard character (*) to specify all the items in the current location.</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">String[]</command:parameterValue>
        <dev:type>
          <maml:name>String[]</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>PermissionsToCertificates</maml:name>
        <maml:Description>
          <maml:para>Dynamic Parameter available when creating KeyVault AccessPolicies.  Specifies an array of certificate permissions to grant to a user or service principal.</maml:para>
          <maml:para>The acceptable values for this parameter:</maml:para>
          <maml:para>- Get</maml:para>
          <maml:para>- List</maml:para>
          <maml:para>- Delete</maml:para>
          <maml:para>- Create</maml:para>
          <maml:para>- Import</maml:para>
          <maml:para>- Update</maml:para>
          <maml:para>- Managecontacts</maml:para>
          <maml:para>- Getissuers</maml:para>
          <maml:para>- Listissuers</maml:para>
          <maml:para>- Setissuers</maml:para>
          <maml:para>- Deleteissuers</maml:para>
          <maml:para>- Manageissuers</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">String[]</command:parameterValue>
        <dev:type>
          <maml:name>String[]</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>PermissionsToKeys</maml:name>
        <maml:Description>
          <maml:para>Dynamic Parameter available when creating KeyVault AccessPolicies.  Specifies an array of key operation permissions to grant to a user or service principal.</maml:para>
          <maml:para>The acceptable values for this parameter:</maml:para>
          <maml:para>- Decrypt</maml:para>
          <maml:para>- Encrypt</maml:para>
          <maml:para>- UnwrapKey</maml:para>
          <maml:para>- WrapKey</maml:para>
          <maml:para>- Verify</maml:para>
          <maml:para>- Sign</maml:para>
          <maml:para>- Get</maml:para>
          <maml:para>- List</maml:para>
          <maml:para>- Update</maml:para>
          <maml:para>- Create</maml:para>
          <maml:para>- Import</maml:para>
          <maml:para>- Delete</maml:para>
          <maml:para>- Backup</maml:para>
          <maml:para>- Restore</maml:para>
          <maml:para>- Recover</maml:para>
          <maml:para>- Purge</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">String[]</command:parameterValue>
        <dev:type>
          <maml:name>String[]</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>PermissionsToSecrets</maml:name>
        <maml:Description>
          <maml:para>Dynamic Parameter available when creating KeyVault AccessPolicies.  Specifies an array of secret operation permissions to grant to a user or service principal.</maml:para>
          <maml:para>The acceptable values for this parameter:</maml:para>
          <maml:para>- Get</maml:para>
          <maml:para>- List</maml:para>
          <maml:para>- Set</maml:para>
          <maml:para>- Delete</maml:para>
          <maml:para>- Backup</maml:para>
          <maml:para>- Restore</maml:para>
          <maml:para>- Recover</maml:para>
          <maml:para>- Purge</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">String[]</command:parameterValue>
        <dev:type>
          <maml:name>String[]</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>PermissionsToStorage</maml:name>
        <maml:Description>
          <maml:para>Dynamic Parameter available when creating KeyVault AccessPolicies.  Specifies managed storage account and SaS-definition operation permissions to grant to a user or service principal.</maml:para>
          <maml:para>The acceptable values for this parameter:</maml:para>
          <maml:para>- Get</maml:para>
          <maml:para>- List</maml:para>
          <maml:para>- Set</maml:para>
          <maml:para>- Delete</maml:para>
          <maml:para>- Update</maml:para>
          <maml:para>- RegenerateKey</maml:para>
          <maml:para>- GetSAS</maml:para>
          <maml:para>- ListSAS</maml:para>
          <maml:para>- DeleteSAS</maml:para>
          <maml:para>- SetSAS</maml:para>
          <maml:para>- Backup</maml:para>
          <maml:para>- Restore</maml:para>
          <maml:para>- Recover</maml:para>
          <maml:para>- Purge</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">String[]</command:parameterValue>
        <dev:type>
          <maml:name>String[]</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>ResourceGroupName</maml:name>
        <maml:Description>
          <maml:para>Dynamic Parameter available when creating KeyVault Vaults. Specifies the name of an existing resource group in which to create the key vault.</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">string</command:parameterValue>
        <dev:type>
          <maml:name>string</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>SecretValue</maml:name>
        <maml:Description>
          <maml:para>Dynamic Parameter available when creating KeyVault Secrets. Specifies the value for the secret as a SecureString object. To obtain a SecureString object, use the ConvertTo-SecureString cmdlet. For more information, type Get-Help ConvertTo-SecureString.</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">SecureString</command:parameterValue>
        <dev:type>
          <maml:name>SecureString</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>ServicePrincipalName</maml:name>
        <maml:Description>
          <maml:para>Dynamic Parameter available when creating KeyVault AccessPolicies.  Specifies the service principal name of the application to which to grant permissions.</maml:para>
          <maml:para>Specify the application ID, also known as client ID, registered for the application in AzureActive Directory. The application with the service principal name that this parameter specifies must be registered in the Azure directory that contains your current subscription.</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
        <dev:type>
          <maml:name>String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>Sku</maml:name>
        <maml:Description>
          <maml:para>Dynamic Parameter available when creating KeyVault Vaults. Specifies the SKU of the key vault instance. For information about which features are available for each SKU, see the Azure Key Vault Pricing website (https://go.microsoft.com/fwlink/?linkid=512521).</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">SkuName</command:parameterValue>
        <dev:type>
          <maml:name>SkuName</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>Size</maml:name>
        <maml:Description>
          <maml:para>Dynamic Parameter available when creating KeyVault Keys. RSA key size, in bits. If not specified, the service will provide a safe default.</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">int?</command:parameterValue>
        <dev:type>
          <maml:name>int?</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>Tag</maml:name>
        <maml:Description>
          <maml:para>Dynamic Parameter available when creating KeyVault Vaults, Secrets, Certificates, or Keys.  Key-value pairs in the form of a hash table. For example:</maml:para>
          <maml:para>@{key0="value0";key1=$null;key2="value2"}</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">HashTable</command:parameterValue>
        <dev:type>
          <maml:name>HashTable</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>UserPrincipalName</maml:name>
        <maml:Description>
          <maml:para>Dynamic Parameter available when creating KeyVault AccessPolicies.  Specifies the user principal name of the user to whom to grant permissions.</maml:para>
          <maml:para>This user principal name must exist in the directory associated with the current subscription.</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
        <dev:type>
          <maml:name>String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <maml:name>System.Collections.Hashtable</maml:name>
        </dev:type>
        <maml:description>
          <maml:para></maml:para>
        </maml:description>
      </command:inputType>
      <command:inputType>
        <dev:type>
          <maml:name>Microsoft.Azure.Commands.KeyVault.Models.PSKeyVault</maml:name>
        </dev:type>
        <maml:description>
          <maml:para></maml:para>
        </maml:description>
      </command:inputType>
      <command:inputType>
        <dev:type>
          <maml:name>Microsoft.Azure.Commands.KeyVault.Models.PSKeyVaultCertificate</maml:name>
        </dev:type>
        <maml:description>
          <maml:para></maml:para>
        </maml:description>
      </command:inputType>
      <command:inputType>
        <dev:type>
          <maml:name>Microsoft.Azure.Commands.KeyVault.Models.PSKeyVaultKey</maml:name>
        </dev:type>
        <maml:description>
          <maml:para></maml:para>
        </maml:description>
      </command:inputType>
      <command:inputType>
        <dev:type>
          <maml:name>Microsoft.Azure.Commands.KeyVault.Models.PSKeyVaultSecret</maml:name>
        </dev:type>
        <maml:description>
          <maml:para></maml:para>
        </maml:description>
      </command:inputType>
      <command:inputType>
        <dev:type>
          <maml:name>Microsoft.Azure.Commands.KeyVault.Models.PSKeyVaultAccessPolicy</maml:name>
        </dev:type>
        <maml:description>
          <maml:para></maml:para>
        </maml:description>
      </command:inputType>
    </command:inputTypes>
    <command:returnValues>
      <command:returnValue>
        <dev:type>
          <maml:name>Microsoft.Azure.Commands.KeyVault.Models.PSKeyVault</maml:name>
        </dev:type>
        <maml:description>
          <maml:para></maml:para>
        </maml:description>
      </command:returnValue>
      <command:returnValue>
        <dev:type>
          <maml:name>Microsoft.Azure.Commands.KeyVault.Models.PSKeyVaultCertificate</maml:name>
        </dev:type>
        <maml:description>
          <maml:para></maml:para>
        </maml:description>
      </command:returnValue>
      <command:returnValue>
        <dev:type>
          <maml:name>Microsoft.Azure.Commands.KeyVault.Models.PSKeyVaultKey</maml:name>
        </dev:type>
        <maml:description>
          <maml:para></maml:para>
        </maml:description>
      </command:returnValue>
      <command:returnValue>
        <dev:type>
          <maml:name>Microsoft.Azure.Commands.KeyVault.Models.PSKeyVaultSecret</maml:name>
        </dev:type>
        <maml:description>
          <maml:para></maml:para>
        </maml:description>
      </command:returnValue>
      <command:returnValue>
        <dev:type>
          <maml:name>Microsoft.Azure.Commands.KeyVault.Models.PSKeyVaultAccessPolicy</maml:name>
        </dev:type>
        <maml:description>
          <maml:para></maml:para>
        </maml:description>
      </command:returnValue>
    </command:returnValues>
    <maml:alertSet>
      <maml:alert>
        <maml:para></maml:para>
      </maml:alert>
    </maml:alertSet>
    <command:examples>
      <command:example>
        <maml:title>-- Example 1: Create KeyVault Vault using dynamic parameters --</maml:title>
        <dev:code>PS C:\&gt; Import-Module AzureRM.KeyVault
PS C:\&gt; New-PSDrive -Name kv -PSProvider KeyVault -Root C:\Users\Default\
PS C:\&gt; New-Item kv:/vault1 -ResourceGroupName myRG -Location westus -EnabledForDeployment -EnabledForTemplateDeployment -EnabledForDiskEncryption -EnableSoftDelete -Sku Standard -Tag @{"a"="b"}

Vault Name                       : vault1
Resource Group Name              : myRG
Location                         : westus
Resource ID                      : /subscriptions/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxxx/resourceGroups/myRG/providers
                                   /Microsoft.KeyVault/vaults/vault1
Vault URI                        : https://vault1.vault.azure.net/
Tenant ID                        : xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxxx
SKU                              : Standard
Enabled For Deployment?          : True
Enabled For Template Deployment? : True
Enabled For Disk Encryption?     : True
Soft Delete Enabled?             : True
Access Policies                  :
                                   Tenant ID                                  : xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxxx
                                   Object ID                                  : xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxxx
                                   Application ID                             :
                                   Display Name                               :
                                   Permissions to Keys                        : get, create, delete, list, update,
                                   import, backup, restore, recover
                                   Permissions to Secrets                     : get, list, set, delete, backup,
                                   restore, recover
                                   Permissions to Certificates                : get, delete, list, create, import,
                                   update, deleteissuers, getissuers, listissuers, managecontacts, manageissuers,
                                   setissuers, recover
                                   Permissions to (Key Vault Managed) Storage : delete, deletesas, get, getsas, list,
                                   listsas, regeneratekey, set, setsas, update


Network Rule Set                 :
                                   Default Action                             : Allow
                                   Bypass                                     : AzureServices
                                   IP Rules                                   :
                                   Virtual Network Rules                      :

Tags                             :
                                   Name  Value
                                   ====  =====
                                   a     b</dev:code>
        <dev:remarks>
          <maml:para></maml:para>
<maml:para></maml:para>
<maml:para></maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>Example 2: Create KeyVault Vault by passing a HashTable of parameters</maml:title>
        <dev:code>PS C:\&gt; Import-Module AzureRM.KeyVault
PS C:\&gt; New-PSDrive -Name kv -PSProvider KeyVault -Root C:\Users\Default\
PS C:\&gt; New-Item kv:/vault1 -Value @{"ResourceGroupName"="myRG";"Location"="westus";"EnabledForDeployment"="true"}

Vault Name                       : vault1
Resource Group Name              : myRG
Location                         : westus
Resource ID                      : /subscriptions/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxxx/resourceGroups/myRG/providers
                                   /Microsoft.KeyVault/vaults/vault1
Vault URI                        : https://vault1.vault.azure.net/
Tenant ID                        : xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxxx
SKU                              : Standard
Enabled For Deployment?          : True
Enabled For Template Deployment? : False
Enabled For Disk Encryption?     : False
Soft Delete Enabled?             : False
Access Policies                  :
                                   Tenant ID                                  : xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxxx
                                   Object ID                                  : xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxxx
                                   Application ID                             :
                                   Display Name                               :
                                   Permissions to Keys                        : get, create, delete, list, update,
                                   import, backup, restore, recover
                                   Permissions to Secrets                     : get, list, set, delete, backup,
                                   restore, recover
                                   Permissions to Certificates                : get, delete, list, create, import,
                                   update, deleteissuers, getissuers, listissuers, managecontacts, manageissuers,
                                   setissuers, recover
                                   Permissions to (Key Vault Managed) Storage : delete, deletesas, get, getsas, list,
                                   listsas, regeneratekey, set, setsas, update


Network Rule Set                 :
                                   Default Action                             : Allow
                                   Bypass                                     : AzureServices
                                   IP Rules                                   :
                                   Virtual Network Rules                      :

Tags                             :</dev:code>
        <dev:remarks>
          <maml:para></maml:para>
<maml:para></maml:para>
<maml:para></maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>Example 3: Create KeyVault Vault by passing a PSObject (PSKeyVault)</maml:title>
        <dev:code>PS C:\&gt; Import-Module AzureRM.KeyVault
PS C:\&gt; New-PSDrive -Name kv -PSProvider KeyVault -Root C:\Users\Default\
PS C:\&gt; $vault = Get-Item kv:/vault
PS C:\&gt; $vault.EnabledForDeployment = $true
PS C:\&gt; $vault.EnableSoftDelete = $true
PS C:\&gt; New-Item kv:/vault1 -Value $vault

Vault Name                       : vault1
Resource Group Name              : myRG
Location                         : westus
Resource ID                      : /subscriptions/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxxx/resourceGroups/myRG/providers
                                   /Microsoft.KeyVault/vaults/vault1
Vault URI                        : https://vault1.vault.azure.net/
Tenant ID                        : xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxxx
SKU                              : Standard
Enabled For Deployment?          : True
Enabled For Template Deployment? : False
Enabled For Disk Encryption?     : False
Soft Delete Enabled?             : True
Access Policies                  :
                                   Tenant ID                                  : xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxxx
                                   Object ID                                  : xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxxx
                                   Application ID                             :
                                   Display Name                               :
                                   Permissions to Keys                        : get, create, delete, list, update,
                                   import, backup, restore, recover
                                   Permissions to Secrets                     : get, list, set, delete, backup,
                                   restore, recover
                                   Permissions to Certificates                : get, delete, list, create, import,
                                   update, deleteissuers, getissuers, listissuers, managecontacts, manageissuers,
                                   setissuers, recover
                                   Permissions to (Key Vault Managed) Storage : delete, deletesas, get, getsas, list,
                                   listsas, regeneratekey, set, setsas, update


Network Rule Set                 :
                                   Default Action                             : Allow
                                   Bypass                                     : AzureServices
                                   IP Rules                                   :
                                   Virtual Network Rules                      :

Tags                             :</dev:code>
        <dev:remarks>
          <maml:para></maml:para>
<maml:para></maml:para>
<maml:para></maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>-------------- Example 4: Create KeyVault Secret --------------</maml:title>
        <dev:code>PS C:\&gt; Import-Module AzureRM.KeyVault
PS C:\&gt; New-PSDrive -Name kv -PSProvider KeyVault -Root C:\Users\Default\
PS C:\&gt; $SecretValue = ConvertTo-SecureSecret -String p@ssw0rd -AsPlainText -Force
PS C:\&gt; $Expires = (Get-Date).AddYears(2).ToUniversalTime()
PS C:\&gt; $Nbf = (Get-Date).ToUniversalTime()
PS C:\&gt; New-Item kv:/vault1/Secrets/secret1 -SecretValue $SecretValue -Disable -Expires $Expires -NotBefore $Nbf -ContentType "xml" -Tag @{"a"="b"}

Vault Name   : vault1
Name         : secret1
Version      : xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
Id           : https://vault1.vault.azure.net:443/secrets/secret1/xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
Enabled      : False
Expires      : 5/9/2020 12:55:41 AM
Not Before   : 5/9/2018 12:55:41 AM
Created      : 5/9/2018 12:55:46 AM
Updated      : 5/9/2018 12:55:46 AM
Content Type : xml
Tags         : Name  Value
               a     b</dev:code>
        <dev:remarks>
          <maml:para></maml:para>
<maml:para></maml:para>
<maml:para></maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>------------ Example 5: Create KeyVault Certificate ------------</maml:title>
        <dev:code>PS C:\&gt; Import-Module AzureRM.KeyVault
PS C:\&gt; New-PSDrive -Name kv -PSProvider KeyVault -Root C:\Users\Default\
PS C:\&gt; $Policy = New-AzureKeyVaultCertificatePolicy -SecretContentType "application/x-pkcs12" -SubjectName "CN=contoso.com" -IssuerName "Self" -ValidityInMonths 6 -ReuseKeyOnRenewal
PS C:\&gt; New-Item kv:/vault1/Certificates/cert1 -CertificatePolicy $Policy -Tag @{"a"="b"}

Id                        : https://vault1.vault.azure.net/certificates/cert1/pending
Status                    : inProgress
StatusDetails             : Pending certificate created. Certificate request is in progress. This may take some time
                            based on the issuer provider. Please check again later.
RequestId                 : xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
Target                    :
Issuer                    : Self
CancellationRequested     : False
CertificateSigningRequest : xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
ErrorCode                 :
ErrorMessage              :
Name                      :
VaultName                 :</dev:code>
        <dev:remarks>
          <maml:para></maml:para>
<maml:para></maml:para>
<maml:para></maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>----- Example 6: Import KeyVault Certificate from FilePath -----</maml:title>
        <dev:code>PS C:\&gt; Import-Module AzureRM.KeyVault
PS C:\&gt; New-PSDrive -Name kv -PSProvider KeyVault -Root C:\Users\Default\
PS C:\&gt; $Password = ConvertTo-SecureString -String "123" -AsPlainText -Force
PS C:\&gt; New-Item kv:/vault1/Certificates/cert1 -FilePath "C:\Users\contosoUser\Desktop\import.pfx" -Password $Password

Id                        : https://vault1.vault.azure.net/certificates/cert1/pending
Status                    : inProgress
StatusDetails             : Pending certificate created. Certificate request is in progress. This may take some time
                            based on the issuer provider. Please check again later.
RequestId                 : xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
Target                    :
Issuer                    : Self
CancellationRequested     : False
CertificateSigningRequest : xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
ErrorCode                 :
ErrorMessage              :
Name                      :
VaultName                 :</dev:code>
        <dev:remarks>
          <maml:para>You can create the certificate to import by using one of the following methods:</maml:para>
          <maml:para>Use the New-AzureKeyVaultCertificateSigningRequest cmdlet to create a certificate signing request and submit it to a certificate authority. Use an existing certificate package file, such as a .pfx or .p12 file, which contains both the certificate and private key.</maml:para>
<maml:para></maml:para>
<maml:para></maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title> Example 7: Import KeyVault Certificate from CertificateString </maml:title>
        <dev:code>PS C:\&gt; Import-Module AzureRM.KeyVault
PS C:\&gt; New-PSDrive -Name kv -PSProvider KeyVault -Root C:\Users\Default\
PS C:\&gt; $Password = ConvertTo-SecureString -String "123" -AsPlainText -Force
PS C:\&gt; New-Item kv:/vault1/Certificates/cert1 -CertificateString $CertificateString -Password $Password

Id                        : https://vault1.vault.azure.net/certificates/cert1/pending
Status                    : inProgress
StatusDetails             : Pending certificate created. Certificate request is in progress. This may take some time
                            based on the issuer provider. Please check again later.
RequestId                 : xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
Target                    :
Issuer                    : Self
CancellationRequested     : False
CertificateSigningRequest : xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
ErrorCode                 :
ErrorMessage              :
Name                      :
VaultName                 :</dev:code>
        <dev:remarks>
          <maml:para>You can create the certificate to import by using one of the following methods:</maml:para>
          <maml:para>Use the New-AzureKeyVaultCertificateSigningRequest cmdlet to create a certificate signing request and submit it to a certificate authority. Use an existing certificate package file, such as a .pfx or .p12 file, which contains both the certificate and private key.</maml:para>
<maml:para></maml:para>
<maml:para></maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>Example 8: Import KeyVault Certificate from CertificateCollection</maml:title>
        <dev:code>PS C:\&gt; Import-Module AzureRM.KeyVault
PS C:\&gt; New-PSDrive -Name kv -PSProvider KeyVault -Root C:\Users\Default\
PS C:\&gt; New-Item kv:/vault1/Certificates/cert1 -CertificateCollection $CertificateCollection

Id                        : https://vault1.vault.azure.net/certificates/cert1/pending
Status                    : inProgress
StatusDetails             : Pending certificate created. Certificate request is in progress. This may take some time
                            based on the issuer provider. Please check again later.
RequestId                 : xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
Target                    :
Issuer                    : Self
CancellationRequested     : False
CertificateSigningRequest : xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
ErrorCode                 :
ErrorMessage              :
Name                      :
VaultName                 :</dev:code>
        <dev:remarks>
          <maml:para>You can create the certificate to import by using one of the following methods:</maml:para>
          <maml:para>Use the New-AzureKeyVaultCertificateSigningRequest cmdlet to create a certificate signing request and submit it to a certificate authority. Use an existing certificate package file, such as a .pfx or .p12 file, which contains both the certificate and private key.</maml:para>
<maml:para></maml:para>
<maml:para></maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>---------------- Example 9: Create KeyVault Key ----------------</maml:title>
        <dev:code>PS C:\&gt; Import-Module AzureRM.KeyVault
PS C:\&gt; New-PSDrive -Name kv -PSProvider KeyVault -Root C:\Users\Default\
PS C:\&gt; $Expires = (Get-Date).AddYears(2).ToUniversalTime()
PS C:\&gt; $Nbf = (Get-Date).ToUniversalTime()
PS C:\&gt; New-Item kv:/vault1/Keys/key1 -Destination Software -Disable -KeyOps decrypt -Expires $Expires -NotBefore $Nbf -Size 2048 -Tag @{"a"="b"}

Vault Name     : vault1
Name           : key1
Version        : xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
Id             : https://vault1.vault.azure.net:443/keys/key1/xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
Enabled        : False
Expires        : 5/9/2020 1:16:31 AM
Not Before     : 5/9/2018 1:16:31 AM
Created        : 5/9/2018 1:16:33 AM
Updated        : 5/9/2018 1:16:33 AM
Purge Disabled : False
Tags           : Name  Value
                 a     b</dev:code>
        <dev:remarks>
          <maml:para></maml:para>
<maml:para></maml:para>
<maml:para></maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>----------- Example 10: Import an HSM-protected key -----------</maml:title>
        <dev:code>PS C:\&gt; Import-Module AzureRM.KeyVault
PS C:\&gt; New-PSDrive -Name kv -PSProvider KeyVault -Root C:\Users\Default\
PS C:\&gt; $Password = ConvertTo-SecureString -String 'Password' -AsPlainText -Force
PS C:\&gt; New-Item kv:/vault1/Keys/key1 -KeyFilePath 'C:\Contoso\ITPfx.pfx' -KeyFilePassword $Password

Vault Name     : vault1
Name           : key1
Version        : xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
Id             : https://vault1.vault.azure.net:443/keys/key1/xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
Enabled        : True
Expires        : 
Not Before     : 
Created        : 5/9/2018 1:16:33 AM
Updated        : 5/9/2018 1:16:33 AM
Purge Disabled : False
Tags           :</dev:code>
        <dev:remarks>
          <maml:para></maml:para>
<maml:para></maml:para>
<maml:para></maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>Example 11: Set AccessPolicy for vault (using UserPrincipalName)</maml:title>
        <dev:code>PS C:\&gt; Import-Module AzureRM.KeyVault
PS C:\&gt; New-PSDrive -Name kv -PSProvider KeyVault -Root C:\Users\Default\
PS C:\&gt; New-Item kv:/vault1/AccessPolicies/policy1 -UserPrincipalName 'UserName@contoso.com' -PermissionsToKeys create, get -PermissionsToSecrets get, list -PermissionsToKeys get, list -PermissionsToStorage get, list

Tenant ID                                  : xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxxx
Object ID                                  : 11111111-1111-1111-1111-111111111111
Application ID                             :
Display Name                               : User Name (UserName@contoso.com)
Permissions to Keys                        : {create, get}
Permissions to Secrets                     : {get, list}
Permissions to Certificates                : {get, list}
Permissions to (Key Vault Managed) Storage : {get, list}</dev:code>
        <dev:remarks>
          <maml:para>Note: The name of the AccessPolicy will be the ObjectId, to ensure that it can be accessed across sessions.  To get this AccessPolicy, run Get-Item kv:/vault1/AccessPolicies/11111111-1111-1111-1111-111111111111.</maml:para>
<maml:para></maml:para>
<maml:para></maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>Example 12: Set AccessPolicy for vault (using ServicePrincipalName)</maml:title>
        <dev:code>PS C:\&gt; Import-Module AzureRM.KeyVault
PS C:\&gt; New-PSDrive -Name kv -PSProvider KeyVault -Root C:\Users\Default\
PS C:\&gt; New-Item kv:/vault1/AccessPolicies/policy1 -ServicePrincipalName 'http://payroll.contoso.com' -PermissionsToSecrets Get,Set

Tenant ID                                  : xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxxx
Object ID                                  : 11111111-1111-1111-1111-111111111111
Application ID                             :
Display Name                               : User Name (http://payroll.contoso.com)
Permissions to Keys                        : {}
Permissions to Secrets                     : {get, set}
Permissions to Certificates                : {}
Permissions to (Key Vault Managed) Storage : {}</dev:code>
        <dev:remarks>
          <maml:para>Note: The name of the AccessPolicy will be the ObjectId, to ensure that it can be accessed across sessions.  To get this AccessPolicy, run Get-Item kv:/vault1/AccessPolicies/11111111-1111-1111-1111-111111111111.</maml:para>
<maml:para></maml:para>
<maml:para></maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>- Example 12: Set AccessPolicy for vault (using EmailAddress) -</maml:title>
        <dev:code>PS C:\&gt; Import-Module AzureRM.KeyVault
PS C:\&gt; New-PSDrive -Name kv -PSProvider KeyVault -Root C:\Users\Default\
PS C:\&gt; New-Item kv:/vault1/AccessPolicies/policy1 -EmailAddress 'username@microsoft.com' -PermissionsToSecrets Get,Set

Tenant ID                                  : xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxxx
Object ID                                  : 11111111-1111-1111-1111-111111111111
Application ID                             :
Display Name                               : User Name (username@microsoft.com)
Permissions to Keys                        : {}
Permissions to Secrets                     : {get, set}
Permissions to Certificates                : {}
Permissions to (Key Vault Managed) Storage : {}</dev:code>
        <dev:remarks>
          <maml:para>Note: The name of the AccessPolicy will be the ObjectId, to ensure that it can be accessed across sessions.  To get this AccessPolicy, run Get-Item kv:/vault1/AccessPolicies/11111111-1111-1111-1111-111111111111.</maml:para>
<maml:para></maml:para>
<maml:para></maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>---- Example 12: Set AccessPolicy for vault (using Object) ----</maml:title>
        <dev:code>PS C:\&gt; Import-Module AzureRM.KeyVault
PS C:\&gt; New-PSDrive -Name kv -PSProvider KeyVault -Root C:\Users\Default\
PS C:\&gt; New-Item kv:/vault1/AccessPolicies/policy1 -ObjectId 11111111-1111-1111-1111-111111111111 -ApplicationId 22222222-2222-2222-2222-222222222222 -BypassObjectIdValidation -PermissionsToSecrets Get,Set

Tenant ID                                  : xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxxx
Object ID                                  : 11111111-1111-1111-1111-111111111111
Application ID                             : 22222222-2222-2222-2222-222222222222
Display Name                               : User Name (username@microsoft.com)
Permissions to Keys                        : {}
Permissions to Secrets                     : {get, set}
Permissions to Certificates                : {}
Permissions to (Key Vault Managed) Storage : {}</dev:code>
        <dev:remarks>
          <maml:para>Note: The name of the AccessPolicy will be the ObjectId, to ensure that it can be accessed across sessions.  To get this AccessPolicy, run Get-Item kv:/vault1/AccessPolicies/11111111-1111-1111-1111-111111111111.</maml:para>
<maml:para></maml:para>
<maml:para></maml:para>
        </dev:remarks>
      </command:example>
    </command:examples>
    <command:relatedLinks>
      <maml:navigationLink>
        <maml:linkText>Online Version:</maml:linkText>
        <maml:uri>https://docs.microsoft.com/en-us/powershell/module/azurerm.keyvault/new-item-for-keyvaultprovider</maml:uri>
      </maml:navigationLink>
    </command:relatedLinks>
  </command:command>
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
    <command:details>
      <command:name>Remove-Item</command:name>
      <command:verb>Remove</command:verb>
      <command:noun>Item</command:noun>
      <maml:description>
        <maml:para>Deletes KeyVault Vaults, Secrets, Certificates, and Keys.</maml:para>
      </maml:description>
    </command:details>
    <maml:description>
      <maml:para>For the KeyVault Provider, the Remove-Item cmdlet deletes KeyVault types specified by the path.  These types are: Vaults, Secrets, Certificates, Keys, and AccessPolicies.</maml:para>
      <maml:para>Note: This custom cmdlet help file explains how the Remove-Item cmdlet works in a KeyVault drive. For information about the Remove-Item cmdlet in all drives, type "Get-Help Remove-Item -Path $null" or see Remove-Item at http://go.microsoft.com/fwlink/?LinkID=113373.</maml:para>
    </maml:description>
    <command:syntax>
      <command:syntaxItem>
        <maml:name>Remove-Item</maml:name>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Force</maml:name>
          <maml:Description>
            <maml:para>Bypasses the confirmation prompt for deleting a KeyVault resource.</maml:para>
          </maml:Description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="True (ByPropertyName)" position="named" aliases="PSPath">
          <maml:name>LiteralPath</maml:name>
          <maml:Description>
            <maml:para>Specifies a path to the item. Unlike the Path parameter, the value of LiteralPath is used exactly as it is typed. No characters are interpreted as wildcards. If the path includes escape characters, enclose it in single quotation marks. Single quotation marks tell Windows PowerShell not to interpret any characters as escape sequences.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">String[]</command:parameterValue>
          <dev:type>
            <maml:name>String[]</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Recurse</maml:name>
          <maml:Description>
            <maml:para>Indicates that this cmdlet deletes the items in the specified locations and in all child items of the locations.</maml:para>
          </maml:Description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
      </command:syntaxItem>
      <command:syntaxItem>
        <maml:name>Remove-Item</maml:name>
        <command:parameter required="true" variableLength="true" globbing="true" pipelineInput="True (ByPropertyName, ByValue)" position="1" aliases="none">
          <maml:name>Path</maml:name>
          <maml:Description>
            <maml:para>Specifies the path to an item. This cmdlet gets the item at the specified location. Wildcards are permitted. This parameter is required, but the parameter name ("Path") is optional.</maml:para>
            <maml:para>Use a dot (.) to specify the current location. Use the wildcard character (*) to specify all the items in the current location.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">String[]</command:parameterValue>
          <dev:type>
            <maml:name>String[]</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Force</maml:name>
          <maml:Description>
            <maml:para>Bypasses the confirmation prompt for deleting a KeyVault resource.</maml:para>
          </maml:Description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Recurse</maml:name>
          <maml:Description>
            <maml:para>Indicates that this cmdlet deletes the items in the specified locations and in all child items of the locations.</maml:para>
          </maml:Description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>Force</maml:name>
        <maml:Description>
          <maml:para>Bypasses the confirmation prompt for deleting a KeyVault resource.</maml:para>
        </maml:Description>
        <command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
      <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="True (ByPropertyName)" position="named" aliases="PSPath">
        <maml:name>LiteralPath</maml:name>
        <maml:Description>
          <maml:para>Specifies a path to the item. Unlike the Path parameter, the value of LiteralPath is used exactly as it is typed. No characters are interpreted as wildcards. If the path includes escape characters, enclose it in single quotation marks. Single quotation marks tell Windows PowerShell not to interpret any characters as escape sequences.</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">String[]</command:parameterValue>
        <dev:type>
          <maml:name>String[]</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="true" variableLength="true" globbing="true" pipelineInput="True (ByPropertyName, ByValue)" position="1" aliases="none">
        <maml:name>Path</maml:name>
        <maml:Description>
          <maml:para>Specifies the path to an item. This cmdlet gets the item at the specified location. Wildcards are permitted. This parameter is required, but the parameter name ("Path") is optional.</maml:para>
          <maml:para>Use a dot (.) to specify the current location. Use the wildcard character (*) to specify all the items in the current location.</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">String[]</command:parameterValue>
        <dev:type>
          <maml:name>String[]</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>Recurse</maml:name>
        <maml:Description>
          <maml:para>Indicates that this cmdlet deletes the items in the specified locations and in all child items of the locations.</maml:para>
        </maml:Description>
        <command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <maml:name>System.String</maml:name>
        </dev:type>
        <maml:description>
          <maml:para></maml:para>
        </maml:description>
      </command:inputType>
    </command:inputTypes>
    <command:returnValues>
      <command:returnValue>
        <dev:type>
          <maml:name>None</maml:name>
        </dev:type>
        <maml:description>
          <maml:para></maml:para>
        </maml:description>
      </command:returnValue>
    </command:returnValues>
    <maml:alertSet>
      <maml:alert>
        <maml:para></maml:para>
      </maml:alert>
    </maml:alertSet>
    <command:examples>
      <command:example>
        <maml:title>--------------- Example 1: Remove KeyVault Vault ---------------</maml:title>
        <dev:code>PS C:\&gt; Import-Module AzureRM.KeyVault
PS C:\&gt; New-PSDrive -Name kv -PSProvider KeyVault -Root C:\Users\Default\
PS C:\&gt; Remove-Item kv:/vault1 -Force</dev:code>
        <dev:remarks>
          <maml:para></maml:para>
<maml:para></maml:para>
<maml:para></maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>------------- Example 2: Remove Secret from Vault -------------</maml:title>
        <dev:code>PS C:\&gt; Import-Module AzureRM.KeyVault
PS C:\&gt; New-PSDrive -Name kv -PSProvider KeyVault -Root C:\Users\Default\
PS C:\&gt; Remove-Item kv:/vault1/Secrets/secret1 -Force</dev:code>
        <dev:remarks>
          <maml:para></maml:para>
<maml:para></maml:para>
<maml:para></maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>----------- Example 3: Remove all Secrets from Vault -----------</maml:title>
        <dev:code>PS C:\&gt; Import-Module AzureRM.KeyVault
PS C:\&gt; New-PSDrive -Name kv -PSProvider KeyVault -Root C:\Users\Default\
PS C:\&gt; Remove-Item kv:/vault1/Secrets/ -Force -Recurse</dev:code>
        <dev:remarks>
          <maml:para></maml:para>
<maml:para></maml:para>
<maml:para></maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>----------- Example 4: Remove Certificate from Vault -----------</maml:title>
        <dev:code>PS C:\&gt; Import-Module AzureRM.KeyVault
PS C:\&gt; New-PSDrive -Name kv -PSProvider KeyVault -Root C:\Users\Default\
PS C:\&gt; Remove-Item kv:/vault1/Certificates/cert1 -Force</dev:code>
        <dev:remarks>
          <maml:para></maml:para>
<maml:para></maml:para>
<maml:para></maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>--------------- Example 5: Remove Key from Vault ---------------</maml:title>
        <dev:code>PS C:\&gt; Import-Module AzureRM.KeyVault
PS C:\&gt; New-PSDrive -Name kv -PSProvider KeyVault -Root C:\Users\Default\
PS C:\&gt; Remove-Item kv:/vault1/Keys/key1 -Force</dev:code>
        <dev:remarks>
          <maml:para></maml:para>
<maml:para></maml:para>
<maml:para></maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>---------- Example 5: Remove AccessPolicy from Vault ----------</maml:title>
        <dev:code>PS C:\&gt; Import-Module AzureRM.KeyVault
PS C:\&gt; New-PSDrive -Name kv -PSProvider KeyVault -Root C:\Users\Default\
PS C:\&gt; Remove-Item kv:/vault1/AccessPolicies/11111111-1111-1111-1111-111111111111 -Force</dev:code>
        <dev:remarks>
          <maml:para></maml:para>
<maml:para></maml:para>
<maml:para></maml:para>
        </dev:remarks>
      </command:example>
    </command:examples>
    <command:relatedLinks>
      <maml:navigationLink>
        <maml:linkText>Online Version:</maml:linkText>
        <maml:uri>https://docs.microsoft.com/en-us/powershell/module/azurerm.keyvault/remove-item-for-keyvaultprovider</maml:uri>
      </maml:navigationLink>
    </command:relatedLinks>
  </command:command>
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
    <command:details>
      <command:name>Set-Content</command:name>
      <command:verb>Set</command:verb>
      <command:noun>Content</command:noun>
      <maml:description>
        <maml:para>Sets the secret value of a KeyVault Secret.</maml:para>
      </maml:description>
    </command:details>
    <maml:description>
      <maml:para>For the KeyVault Provider, the Set-Content cmdlet takes a SecureString to set the SecretValue of a KeyVault Secret.</maml:para>
      <maml:para>Note: This custom cmdlet help file explains how the Set-Content cmdlet works in a KeyVault drive. For information about the Set-Content cmdlet in all drives, type "Get-Help Set-Content -Path $null" or see Set-Content at http://go.microsoft.com/fwlink/?LinkID=113392.</maml:para>
    </maml:description>
    <command:syntax>
      <command:syntaxItem>
        <maml:name>Set-Content</maml:name>
        <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="True (ByPropertyName, ByValue)" position="2" aliases="none">
          <maml:name>Value</maml:name>
          <maml:Description>
            <maml:para>Specifies the new content for the item. For KeyVault Provider, this object must be of type SecureString.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Object[]</command:parameterValue>
          <dev:type>
            <maml:name>Object[]</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="True (ByPropertyName)" position="named" aliases="PSPath">
          <maml:name>LiteralPath</maml:name>
          <maml:Description>
            <maml:para>Specifies a path to the item. Unlike the Path parameter, the value of LiteralPath is used exactly as it is typed. No characters are interpreted as wildcards. If the path includes escape characters, enclose it in single quotation marks. Single quotation marks tell Windows PowerShell not to interpret any characters as escape sequences.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">String[]</command:parameterValue>
          <dev:type>
            <maml:name>String[]</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
      </command:syntaxItem>
      <command:syntaxItem>
        <maml:name>Set-Content</maml:name>
        <command:parameter required="true" variableLength="true" globbing="true" pipelineInput="True (ByPropertyName, ByValue)" position="1" aliases="none">
          <maml:name>Path</maml:name>
          <maml:Description>
            <maml:para>Specifies the path to an item. This cmdlet gets the item at the specified location. Wildcards are permitted. This parameter is required, but the parameter name ("Path") is optional.</maml:para>
            <maml:para>Use a dot (.) to specify the current location. Use the wildcard character (*) to specify all the items in the current location.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">String[]</command:parameterValue>
          <dev:type>
            <maml:name>String[]</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="True (ByPropertyName, ByValue)" position="2" aliases="none">
          <maml:name>Value</maml:name>
          <maml:Description>
            <maml:para>Specifies the new content for the item. For KeyVault Provider, this object must be of type SecureString.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Object[]</command:parameterValue>
          <dev:type>
            <maml:name>Object[]</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="True (ByPropertyName)" position="named" aliases="PSPath">
        <maml:name>LiteralPath</maml:name>
        <maml:Description>
          <maml:para>Specifies a path to the item. Unlike the Path parameter, the value of LiteralPath is used exactly as it is typed. No characters are interpreted as wildcards. If the path includes escape characters, enclose it in single quotation marks. Single quotation marks tell Windows PowerShell not to interpret any characters as escape sequences.</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">String[]</command:parameterValue>
        <dev:type>
          <maml:name>String[]</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="true" variableLength="true" globbing="true" pipelineInput="True (ByPropertyName, ByValue)" position="1" aliases="none">
        <maml:name>Path</maml:name>
        <maml:Description>
          <maml:para>Specifies the path to an item. This cmdlet gets the item at the specified location. Wildcards are permitted. This parameter is required, but the parameter name ("Path") is optional.</maml:para>
          <maml:para>Use a dot (.) to specify the current location. Use the wildcard character (*) to specify all the items in the current location.</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">String[]</command:parameterValue>
        <dev:type>
          <maml:name>String[]</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="True (ByPropertyName, ByValue)" position="2" aliases="none">
        <maml:name>Value</maml:name>
        <maml:Description>
          <maml:para>Specifies the new content for the item. For KeyVault Provider, this object must be of type SecureString.</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">Object[]</command:parameterValue>
        <dev:type>
          <maml:name>Object[]</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <maml:name>System.Security.SecureString</maml:name>
        </dev:type>
        <maml:description>
          <maml:para></maml:para>
        </maml:description>
      </command:inputType>
    </command:inputTypes>
    <command:returnValues>
      <command:returnValue>
        <dev:type>
          <maml:name>Microsoft.Azure.Commands.KeyVault.Models.PSKeyVaultSecret</maml:name>
        </dev:type>
        <maml:description>
          <maml:para></maml:para>
        </maml:description>
      </command:returnValue>
    </command:returnValues>
    <maml:alertSet>
      <maml:alert>
        <maml:para></maml:para>
      </maml:alert>
    </maml:alertSet>
    <command:examples>
      <command:example>
        <maml:title>---------- Example 1: Set the SecretValue of a Secret ----------</maml:title>
        <dev:code>PS C:\&gt; Import-Module AzureRM.KeyVault
PS C:\&gt; New-PSDrive -Name kv -PSProvider KeyVault -Root C:\Users\Default\
PS C:\&gt; $SecretValue = ConvertTo-SecureSecret -String p@ssw0rd -AsPlainText -Force
PS C:\&gt; Set-Content -Path kv:/vault1/Secrets/secret1 -Value $SecretValue -PassThru

Vault Name   : vault1
Name         : secret1
Version      : xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
Id           : https://vault1.vault.azure.net:443/secrets/secret1/xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
Enabled      : True
Expires      : 
Not Before   : 
Created      : 5/10/2018 6:21:56 PM
Updated      : 5/10/2018 6:21:56 PM
Content Type : 
Tags         :</dev:code>
        <dev:remarks>
          <maml:para></maml:para>
<maml:para></maml:para>
<maml:para></maml:para>
        </dev:remarks>
      </command:example>
    </command:examples>
    <command:relatedLinks>
      <maml:navigationLink>
        <maml:linkText>Online Version:</maml:linkText>
        <maml:uri>https://docs.microsoft.com/en-us/powershell/module/azurerm.keyvault/set-content-for-keyvaultprovider</maml:uri>
      </maml:navigationLink>
    </command:relatedLinks>
  </command:command>
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
    <command:details>
      <command:name>Set-Item</command:name>
      <command:verb>Set</command:verb>
      <command:noun>Item</command:noun>
      <maml:description>
        <maml:para>Sets the properties of a KeyVault type: Vaults, Secrets, Certificates, Keys, and AccessPolicies.</maml:para>
      </maml:description>
    </command:details>
    <maml:description>
      <maml:para>For the KeyVault Provider, the Set-Item cmdlet allows the user to set properties of KeyVault types.  These types are: Vaults, Secrets, Certificates, Keys, and AccessPolicies.  Parameters can be passed in using either dynamic parameters, passing a HashTable of the parameter values to -Value, or passing an object of the correct type to -Value.</maml:para>
      <maml:para>Note: This custom cmdlet help file explains how the Set-Item cmdlet works in a KeyVault drive. For information about the Set-Item cmdlet in all drives, type "Get-Help Set-Item -Path $null" or see Set-Item at http://go.microsoft.com/fwlink/?LinkId=821630.</maml:para>
    </maml:description>
    <command:syntax>
      <command:syntaxItem>
        <maml:name>Set-Item</maml:name>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="True (ByPropertyName, ByValue)" position="2" aliases="none">
          <maml:name>Value</maml:name>
          <maml:Description>
            <maml:para>Specifies a new value for the item. Value accepts either a HashTable or a PSObject with the correct type required by the path. Example: For "Set-Item kv:/vault1/Secrets/secret1", Value accepts a PSKeyVaultSecret.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
          <dev:type>
            <maml:name>Object</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>ContentType</maml:name>
          <maml:Description>
            <maml:para>Dynamic Parameter available when setting KeyVault Secrets. Secret's content type. If not specified, the existing value of the secret's content type remains unchanged. Remove the existing content type value by specifying an empty string.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">string</command:parameterValue>
          <dev:type>
            <maml:name>string</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Enable</maml:name>
          <maml:Description>
            <maml:para>Dynamic Parameter available when setting KeyVault Secrets, Certificates, or Keys. Value of true enables the KeyVault object and a value of false disables the KeyVault object. If not specified, the existing enabled/disabled state remains unchanged.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">bool?</command:parameterValue>
          <dev:type>
            <maml:name>bool?</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>EnabledForDeployment</maml:name>
          <maml:Description>
            <maml:para>Dynamic Parameter available when setting KeyVault Vaults. Enables the Microsoft.Compute resource provider to retrieve secrets from this key vault when this key vault is referenced in resource creation, for example when creating a virtual machine.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">bool?</command:parameterValue>
          <dev:type>
            <maml:name>bool?</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>EnabledForDiskEncryption</maml:name>
          <maml:Description>
            <maml:para>Dynamic Parameter available when setting KeyVault Vaults. Enables the Azure disk encryption service to get secrets and unwrap keys from this key vault.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">bool?</command:parameterValue>
          <dev:type>
            <maml:name>bool?</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>EnabledForTemplateDeployment</maml:name>
          <maml:Description>
            <maml:para>Dynamic Parameter available when setting KeyVault Vaults. Enables Azure Resource Manager to get secrets from this key vault when this key vault is referenced in a template deployment.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">bool?</command:parameterValue>
          <dev:type>
            <maml:name>bool?</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Expires</maml:name>
          <maml:Description>
            <maml:para>Dynamic Parameter available when setting KeyVault Secrets or Keys. The expiration time of a secret or key in UTC time. If not specified, the existing expiration time of the secret or key remains unchanged.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">DateTime?</command:parameterValue>
          <dev:type>
            <maml:name>DateTime?</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>KeyOps</maml:name>
          <maml:Description>
            <maml:para>Dynamic Parameter available when setting KeyVault Keys. The operations that can be performed with the key. If not specified, the existing key operations of the key remain unchanged.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">String[]</command:parameterValue>
          <dev:type>
            <maml:name>String[]</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="True (ByPropertyName)" position="named" aliases="PSPath">
          <maml:name>LiteralPath</maml:name>
          <maml:Description>
            <maml:para>Specifies a path to the item. Unlike the Path parameter, the value of LiteralPath is used exactly as it is typed. No characters are interpreted as wildcards. If the path includes escape characters, enclose it in single quotation marks. Single quotation marks tell Windows PowerShell not to interpret any characters as escape sequences.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">String[]</command:parameterValue>
          <dev:type>
            <maml:name>String[]</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>NotBefore</maml:name>
          <maml:Description>
            <maml:para>Dynamic Parameter available when setting KeyVault Secrets or Keys. The UTC time before which key or secret can't be used. If not specified, the existing NotBefore attribute of the key or secret remains unchanged.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">DateTime?</command:parameterValue>
          <dev:type>
            <maml:name>DateTime?</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>PermissionsToCertificates</maml:name>
          <maml:Description>
            <maml:para>Dynamic Parameter available when setting KeyVault Access Policies. Specifies an array of certificate permissions to grant to a user or service principal.</maml:para>
            <maml:para>The acceptable values for this parameter:</maml:para>
            <maml:para>Get List Delete Create Import Update Managecontacts Getissuers Listissuers Setissuers Deleteissuers Manageissuers</maml:para>
          </maml:Description>
          <command:parameterValueGroup>
            <command:parameterValue required="false" command:variableLength="false">get</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">list</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">delete</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">create</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">import</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">update</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">managecontacts</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">getissuers</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">listissuers</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">setissuers</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">deleteissuers</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">manageissuers</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">recover</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">purge</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">backup</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">restore</command:parameterValue>
          </command:parameterValueGroup>
          <command:parameterValue required="true" variableLength="false">String[]</command:parameterValue>
          <dev:type>
            <maml:name>String[]</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>PermissionsToKeys</maml:name>
          <maml:Description>
            <maml:para>Dynamic Parameter available when setting KeyVault Access Policies. Specifies an array of key operation permissions to grant to a user or service principal.</maml:para>
            <maml:para>The acceptable values for this parameter:</maml:para>
            <maml:para>Decrypt Encrypt UnwrapKey WrapKey Verify Sign Get List Update Create Import Delete Backup Restore Recover Purge</maml:para>
          </maml:Description>
          <command:parameterValueGroup>
            <command:parameterValue required="false" command:variableLength="false">decrypt</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">encrypt</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">unwrapKey</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">wrapKey</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">verify</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">sign</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">get</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">list</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">update</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">create</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">import</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">delete</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">backup</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">restore</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">recover</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">purge</command:parameterValue>
          </command:parameterValueGroup>
          <command:parameterValue required="true" variableLength="false">String[]</command:parameterValue>
          <dev:type>
            <maml:name>String[]</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>PermissionsToSecrets</maml:name>
          <maml:Description>
            <maml:para>Dynamic Parameter available when setting KeyVault Access Policies. Specifies an array of secret operation permissions to grant to a user or service principal.</maml:para>
            <maml:para>The acceptable values for this parameter:</maml:para>
            <maml:para>Get List Set Delete Backup Restore Recover Purge</maml:para>
          </maml:Description>
          <command:parameterValueGroup>
            <command:parameterValue required="false" command:variableLength="false">get</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">list</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">set</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">delete</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">backup</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">restore</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">recover</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">purge</command:parameterValue>
          </command:parameterValueGroup>
          <command:parameterValue required="true" variableLength="false">String[]</command:parameterValue>
          <dev:type>
            <maml:name>String[]</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>PermissionsToStorage</maml:name>
          <maml:Description>
            <maml:para>Dynamic Parameter available when setting KeyVault Access Policies. Specifies managed storage account and SaS-definition operation permissions to grant to a user or service principal.</maml:para>
            <maml:para>The acceptable values for this parameter:</maml:para>
            <maml:para>Get List Set Delete Update RegenerateKey GetSAS ListSAS DeleteSAS SetSAS Backup Restore Recover Purge</maml:para>
          </maml:Description>
          <command:parameterValueGroup>
            <command:parameterValue required="false" command:variableLength="false">get</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">list</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">delete</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">set</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">update</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">regeneratekey</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">getsas</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">listsas</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">deletesas</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">setsas</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">recover</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">backup</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">restore</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">purge</command:parameterValue>
          </command:parameterValueGroup>
          <command:parameterValue required="true" variableLength="false">String[]</command:parameterValue>
          <dev:type>
            <maml:name>String[]</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Tag</maml:name>
          <maml:Description>
            <maml:para>Dynamic Parameter available when setting KeyVault Secrets, Certificates, or Keys. A hashtable representing tags. If not specified, the existing tags of the secret remain unchanged. Remove a tag by specifying an empty Hashtable.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Hashtable</command:parameterValue>
          <dev:type>
            <maml:name>Hashtable</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Version</maml:name>
          <maml:Description>
            <maml:para>Dynamic Parameter available when setting a KeyVault Secret, Certificate, or Key. Cmdlet constructs the FQDN from vault name, currently selected environment, name and version.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">string</command:parameterValue>
          <dev:type>
            <maml:name>string</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
      </command:syntaxItem>
      <command:syntaxItem>
        <maml:name>Set-Item</maml:name>
        <command:parameter required="true" variableLength="true" globbing="true" pipelineInput="True (ByPropertyName, ByValue)" position="1" aliases="none">
          <maml:name>Path</maml:name>
          <maml:Description>
            <maml:para>Specifies the path to an item. This cmdlet gets the item at the specified location. Wildcards are permitted. This parameter is required, but the parameter name ("Path") is optional.</maml:para>
            <maml:para>Use a dot (.) to specify the current location. Use the wildcard character (*) to specify all the items in the current location.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">String[]</command:parameterValue>
          <dev:type>
            <maml:name>String[]</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="True (ByPropertyName, ByValue)" position="2" aliases="none">
          <maml:name>Value</maml:name>
          <maml:Description>
            <maml:para>Specifies a new value for the item. Value accepts either a HashTable or a PSObject with the correct type required by the path. Example: For "Set-Item kv:/vault1/Secrets/secret1", Value accepts a PSKeyVaultSecret.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
          <dev:type>
            <maml:name>Object</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>ContentType</maml:name>
          <maml:Description>
            <maml:para>Dynamic Parameter available when setting KeyVault Secrets. Secret's content type. If not specified, the existing value of the secret's content type remains unchanged. Remove the existing content type value by specifying an empty string.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">string</command:parameterValue>
          <dev:type>
            <maml:name>string</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Enable</maml:name>
          <maml:Description>
            <maml:para>Dynamic Parameter available when setting KeyVault Secrets, Certificates, or Keys. Value of true enables the KeyVault object and a value of false disables the KeyVault object. If not specified, the existing enabled/disabled state remains unchanged.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">bool?</command:parameterValue>
          <dev:type>
            <maml:name>bool?</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>EnabledForDeployment</maml:name>
          <maml:Description>
            <maml:para>Dynamic Parameter available when setting KeyVault Vaults. Enables the Microsoft.Compute resource provider to retrieve secrets from this key vault when this key vault is referenced in resource creation, for example when creating a virtual machine.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">bool?</command:parameterValue>
          <dev:type>
            <maml:name>bool?</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>EnabledForDiskEncryption</maml:name>
          <maml:Description>
            <maml:para>Dynamic Parameter available when setting KeyVault Vaults. Enables the Azure disk encryption service to get secrets and unwrap keys from this key vault.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">bool?</command:parameterValue>
          <dev:type>
            <maml:name>bool?</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>EnabledForTemplateDeployment</maml:name>
          <maml:Description>
            <maml:para>Dynamic Parameter available when setting KeyVault Vaults. Enables Azure Resource Manager to get secrets from this key vault when this key vault is referenced in a template deployment.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">bool?</command:parameterValue>
          <dev:type>
            <maml:name>bool?</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Expires</maml:name>
          <maml:Description>
            <maml:para>Dynamic Parameter available when setting KeyVault Secrets or Keys. The expiration time of a secret or key in UTC time. If not specified, the existing expiration time of the secret or key remains unchanged.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">DateTime?</command:parameterValue>
          <dev:type>
            <maml:name>DateTime?</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>KeyOps</maml:name>
          <maml:Description>
            <maml:para>Dynamic Parameter available when setting KeyVault Keys. The operations that can be performed with the key. If not specified, the existing key operations of the key remain unchanged.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">String[]</command:parameterValue>
          <dev:type>
            <maml:name>String[]</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>NotBefore</maml:name>
          <maml:Description>
            <maml:para>Dynamic Parameter available when setting KeyVault Secrets or Keys. The UTC time before which key or secret can't be used. If not specified, the existing NotBefore attribute of the key or secret remains unchanged.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">DateTime?</command:parameterValue>
          <dev:type>
            <maml:name>DateTime?</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>PermissionsToCertificates</maml:name>
          <maml:Description>
            <maml:para>Dynamic Parameter available when setting KeyVault Access Policies. Specifies an array of certificate permissions to grant to a user or service principal.</maml:para>
            <maml:para>The acceptable values for this parameter:</maml:para>
            <maml:para>Get List Delete Create Import Update Managecontacts Getissuers Listissuers Setissuers Deleteissuers Manageissuers</maml:para>
          </maml:Description>
          <command:parameterValueGroup>
            <command:parameterValue required="false" command:variableLength="false">get</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">list</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">delete</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">create</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">import</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">update</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">managecontacts</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">getissuers</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">listissuers</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">setissuers</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">deleteissuers</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">manageissuers</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">recover</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">purge</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">backup</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">restore</command:parameterValue>
          </command:parameterValueGroup>
          <command:parameterValue required="true" variableLength="false">String[]</command:parameterValue>
          <dev:type>
            <maml:name>String[]</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>PermissionsToKeys</maml:name>
          <maml:Description>
            <maml:para>Dynamic Parameter available when setting KeyVault Access Policies. Specifies an array of key operation permissions to grant to a user or service principal.</maml:para>
            <maml:para>The acceptable values for this parameter:</maml:para>
            <maml:para>Decrypt Encrypt UnwrapKey WrapKey Verify Sign Get List Update Create Import Delete Backup Restore Recover Purge</maml:para>
          </maml:Description>
          <command:parameterValueGroup>
            <command:parameterValue required="false" command:variableLength="false">decrypt</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">encrypt</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">unwrapKey</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">wrapKey</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">verify</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">sign</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">get</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">list</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">update</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">create</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">import</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">delete</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">backup</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">restore</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">recover</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">purge</command:parameterValue>
          </command:parameterValueGroup>
          <command:parameterValue required="true" variableLength="false">String[]</command:parameterValue>
          <dev:type>
            <maml:name>String[]</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>PermissionsToSecrets</maml:name>
          <maml:Description>
            <maml:para>Dynamic Parameter available when setting KeyVault Access Policies. Specifies an array of secret operation permissions to grant to a user or service principal.</maml:para>
            <maml:para>The acceptable values for this parameter:</maml:para>
            <maml:para>Get List Set Delete Backup Restore Recover Purge</maml:para>
          </maml:Description>
          <command:parameterValueGroup>
            <command:parameterValue required="false" command:variableLength="false">get</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">list</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">set</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">delete</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">backup</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">restore</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">recover</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">purge</command:parameterValue>
          </command:parameterValueGroup>
          <command:parameterValue required="true" variableLength="false">String[]</command:parameterValue>
          <dev:type>
            <maml:name>String[]</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>PermissionsToStorage</maml:name>
          <maml:Description>
            <maml:para>Dynamic Parameter available when setting KeyVault Access Policies. Specifies managed storage account and SaS-definition operation permissions to grant to a user or service principal.</maml:para>
            <maml:para>The acceptable values for this parameter:</maml:para>
            <maml:para>Get List Set Delete Update RegenerateKey GetSAS ListSAS DeleteSAS SetSAS Backup Restore Recover Purge</maml:para>
          </maml:Description>
          <command:parameterValueGroup>
            <command:parameterValue required="false" command:variableLength="false">get</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">list</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">delete</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">set</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">update</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">regeneratekey</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">getsas</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">listsas</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">deletesas</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">setsas</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">recover</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">backup</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">restore</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">purge</command:parameterValue>
          </command:parameterValueGroup>
          <command:parameterValue required="true" variableLength="false">String[]</command:parameterValue>
          <dev:type>
            <maml:name>String[]</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Tag</maml:name>
          <maml:Description>
            <maml:para>Dynamic Parameter available when setting KeyVault Secrets, Certificates, or Keys. A hashtable representing tags. If not specified, the existing tags of the secret remain unchanged. Remove a tag by specifying an empty Hashtable.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Hashtable</command:parameterValue>
          <dev:type>
            <maml:name>Hashtable</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Version</maml:name>
          <maml:Description>
            <maml:para>Dynamic Parameter available when setting a KeyVault Secret, Certificate, or Key. Cmdlet constructs the FQDN from vault name, currently selected environment, name and version.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">string</command:parameterValue>
          <dev:type>
            <maml:name>string</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>ContentType</maml:name>
        <maml:Description>
          <maml:para>Dynamic Parameter available when setting KeyVault Secrets. Secret's content type. If not specified, the existing value of the secret's content type remains unchanged. Remove the existing content type value by specifying an empty string.</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">string</command:parameterValue>
        <dev:type>
          <maml:name>string</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>Enable</maml:name>
        <maml:Description>
          <maml:para>Dynamic Parameter available when setting KeyVault Secrets, Certificates, or Keys. Value of true enables the KeyVault object and a value of false disables the KeyVault object. If not specified, the existing enabled/disabled state remains unchanged.</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">bool?</command:parameterValue>
        <dev:type>
          <maml:name>bool?</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>EnabledForDeployment</maml:name>
        <maml:Description>
          <maml:para>Dynamic Parameter available when setting KeyVault Vaults. Enables the Microsoft.Compute resource provider to retrieve secrets from this key vault when this key vault is referenced in resource creation, for example when creating a virtual machine.</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">bool?</command:parameterValue>
        <dev:type>
          <maml:name>bool?</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>EnabledForDiskEncryption</maml:name>
        <maml:Description>
          <maml:para>Dynamic Parameter available when setting KeyVault Vaults. Enables the Azure disk encryption service to get secrets and unwrap keys from this key vault.</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">bool?</command:parameterValue>
        <dev:type>
          <maml:name>bool?</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>EnabledForTemplateDeployment</maml:name>
        <maml:Description>
          <maml:para>Dynamic Parameter available when setting KeyVault Vaults. Enables Azure Resource Manager to get secrets from this key vault when this key vault is referenced in a template deployment.</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">bool?</command:parameterValue>
        <dev:type>
          <maml:name>bool?</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>Expires</maml:name>
        <maml:Description>
          <maml:para>Dynamic Parameter available when setting KeyVault Secrets or Keys. The expiration time of a secret or key in UTC time. If not specified, the existing expiration time of the secret or key remains unchanged.</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">DateTime?</command:parameterValue>
        <dev:type>
          <maml:name>DateTime?</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>KeyOps</maml:name>
        <maml:Description>
          <maml:para>Dynamic Parameter available when setting KeyVault Keys. The operations that can be performed with the key. If not specified, the existing key operations of the key remain unchanged.</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">String[]</command:parameterValue>
        <dev:type>
          <maml:name>String[]</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="True (ByPropertyName)" position="named" aliases="PSPath">
        <maml:name>LiteralPath</maml:name>
        <maml:Description>
          <maml:para>Specifies a path to the item. Unlike the Path parameter, the value of LiteralPath is used exactly as it is typed. No characters are interpreted as wildcards. If the path includes escape characters, enclose it in single quotation marks. Single quotation marks tell Windows PowerShell not to interpret any characters as escape sequences.</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">String[]</command:parameterValue>
        <dev:type>
          <maml:name>String[]</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>NotBefore</maml:name>
        <maml:Description>
          <maml:para>Dynamic Parameter available when setting KeyVault Secrets or Keys. The UTC time before which key or secret can't be used. If not specified, the existing NotBefore attribute of the key or secret remains unchanged.</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">DateTime?</command:parameterValue>
        <dev:type>
          <maml:name>DateTime?</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="true" variableLength="true" globbing="true" pipelineInput="True (ByPropertyName, ByValue)" position="1" aliases="none">
        <maml:name>Path</maml:name>
        <maml:Description>
          <maml:para>Specifies the path to an item. This cmdlet gets the item at the specified location. Wildcards are permitted. This parameter is required, but the parameter name ("Path") is optional.</maml:para>
          <maml:para>Use a dot (.) to specify the current location. Use the wildcard character (*) to specify all the items in the current location.</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">String[]</command:parameterValue>
        <dev:type>
          <maml:name>String[]</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>PermissionsToCertificates</maml:name>
        <maml:Description>
          <maml:para>Dynamic Parameter available when setting KeyVault Access Policies. Specifies an array of certificate permissions to grant to a user or service principal.</maml:para>
          <maml:para>The acceptable values for this parameter:</maml:para>
          <maml:para>Get List Delete Create Import Update Managecontacts Getissuers Listissuers Setissuers Deleteissuers Manageissuers</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">String[]</command:parameterValue>
        <dev:type>
          <maml:name>String[]</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>PermissionsToKeys</maml:name>
        <maml:Description>
          <maml:para>Dynamic Parameter available when setting KeyVault Access Policies. Specifies an array of key operation permissions to grant to a user or service principal.</maml:para>
          <maml:para>The acceptable values for this parameter:</maml:para>
          <maml:para>Decrypt Encrypt UnwrapKey WrapKey Verify Sign Get List Update Create Import Delete Backup Restore Recover Purge</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">String[]</command:parameterValue>
        <dev:type>
          <maml:name>String[]</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>PermissionsToSecrets</maml:name>
        <maml:Description>
          <maml:para>Dynamic Parameter available when setting KeyVault Access Policies. Specifies an array of secret operation permissions to grant to a user or service principal.</maml:para>
          <maml:para>The acceptable values for this parameter:</maml:para>
          <maml:para>Get List Set Delete Backup Restore Recover Purge</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">String[]</command:parameterValue>
        <dev:type>
          <maml:name>String[]</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>PermissionsToStorage</maml:name>
        <maml:Description>
          <maml:para>Dynamic Parameter available when setting KeyVault Access Policies. Specifies managed storage account and SaS-definition operation permissions to grant to a user or service principal.</maml:para>
          <maml:para>The acceptable values for this parameter:</maml:para>
          <maml:para>Get List Set Delete Update RegenerateKey GetSAS ListSAS DeleteSAS SetSAS Backup Restore Recover Purge</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">String[]</command:parameterValue>
        <dev:type>
          <maml:name>String[]</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>Tag</maml:name>
        <maml:Description>
          <maml:para>Dynamic Parameter available when setting KeyVault Secrets, Certificates, or Keys. A hashtable representing tags. If not specified, the existing tags of the secret remain unchanged. Remove a tag by specifying an empty Hashtable.</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">Hashtable</command:parameterValue>
        <dev:type>
          <maml:name>Hashtable</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="True (ByPropertyName, ByValue)" position="2" aliases="none">
        <maml:name>Value</maml:name>
        <maml:Description>
          <maml:para>Specifies a new value for the item. Value accepts either a HashTable or a PSObject with the correct type required by the path. Example: For "Set-Item kv:/vault1/Secrets/secret1", Value accepts a PSKeyVaultSecret.</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
        <dev:type>
          <maml:name>Object</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>Version</maml:name>
        <maml:Description>
          <maml:para>Dynamic Parameter available when setting a KeyVault Secret, Certificate, or Key. Cmdlet constructs the FQDN from vault name, currently selected environment, name and version.</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">string</command:parameterValue>
        <dev:type>
          <maml:name>string</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <maml:name>System.Collections.Hashtable</maml:name>
        </dev:type>
        <maml:description>
          <maml:para></maml:para>
        </maml:description>
      </command:inputType>
      <command:inputType>
        <dev:type>
          <maml:name>Microsoft.Azure.Commands.KeyVault.Models.PSKeyVault</maml:name>
        </dev:type>
        <maml:description>
          <maml:para></maml:para>
        </maml:description>
      </command:inputType>
      <command:inputType>
        <dev:type>
          <maml:name>Microsoft.Azure.Commands.KeyVault.Models.PSKeyVaultCertificate</maml:name>
        </dev:type>
        <maml:description>
          <maml:para></maml:para>
        </maml:description>
      </command:inputType>
      <command:inputType>
        <dev:type>
          <maml:name>Microsoft.Azure.Commands.KeyVault.Models.PSKeyVaultKey</maml:name>
        </dev:type>
        <maml:description>
          <maml:para></maml:para>
        </maml:description>
      </command:inputType>
      <command:inputType>
        <dev:type>
          <maml:name>Microsoft.Azure.Commands.KeyVault.Models.PSKeyVaultSecret</maml:name>
        </dev:type>
        <maml:description>
          <maml:para></maml:para>
        </maml:description>
      </command:inputType>
      <command:inputType>
        <dev:type>
          <maml:name>Microsoft.Azure.Commands.KeyVault.Models.PSKeyVaultAccessPolicy</maml:name>
        </dev:type>
        <maml:description>
          <maml:para></maml:para>
        </maml:description>
      </command:inputType>
    </command:inputTypes>
    <command:returnValues>
      <command:returnValue>
        <dev:type>
          <maml:name>Microsoft.Azure.Commands.KeyVault.Models.PSKeyVault</maml:name>
        </dev:type>
        <maml:description>
          <maml:para></maml:para>
        </maml:description>
      </command:returnValue>
      <command:returnValue>
        <dev:type>
          <maml:name>Microsoft.Azure.Commands.KeyVault.Models.PSKeyVaultCertificate</maml:name>
        </dev:type>
        <maml:description>
          <maml:para></maml:para>
        </maml:description>
      </command:returnValue>
      <command:returnValue>
        <dev:type>
          <maml:name>Microsoft.Azure.Commands.KeyVault.Models.PSKeyVaultKey</maml:name>
        </dev:type>
        <maml:description>
          <maml:para></maml:para>
        </maml:description>
      </command:returnValue>
      <command:returnValue>
        <dev:type>
          <maml:name>Microsoft.Azure.Commands.KeyVault.Models.PSKeyVaultSecret</maml:name>
        </dev:type>
        <maml:description>
          <maml:para></maml:para>
        </maml:description>
      </command:returnValue>
      <command:returnValue>
        <dev:type>
          <maml:name>Microsoft.Azure.Commands.KeyVault.Models.PSKeyVaultAccessPolicy</maml:name>
        </dev:type>
        <maml:description>
          <maml:para></maml:para>
        </maml:description>
      </command:returnValue>
    </command:returnValues>
    <maml:alertSet>
      <maml:alert>
        <maml:para></maml:para>
      </maml:alert>
    </maml:alertSet>
    <command:examples>
      <command:example>
        <maml:title>Example 1: Set properties of a KeyVault vault using dynamic parameters</maml:title>
        <dev:code>PS C:\&gt; Import-Module AzureRM.KeyVault
PS C:\&gt; New-PSDrive -Name kv -PSProvider KeyVault -Root C:\Users\Default\
PS C:\&gt; Set-Item kv:/vault1 -EnabledForDeployment $true -EnabledForTemplateDeployment $true -EnabledForDiskEncryption $false -PassThru

Vault Name                       : vault1
Resource Group Name              : myRG
Location                         : westus
Resource ID                      : /subscriptions/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxxx/resourceGroups/myRG/providers
                                   /Microsoft.KeyVault/vaults/vault1
Vault URI                        : https://vault1.vault.azure.net/
Tenant ID                        : xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxxx
SKU                              : Standard
Enabled For Deployment?          : True
Enabled For Template Deployment? : True
Enabled For Disk Encryption?     : False
Soft Delete Enabled?             : True
Access Policies                  :
Network Rule Set                 :
                                   Default Action                             : Allow
                                   Bypass                                     : AzureServices
                                   IP Rules                                   :
                                   Virtual Network Rules                      :
Tags                             :</dev:code>
        <dev:remarks>
          <maml:para></maml:para>
<maml:para></maml:para>
<maml:para></maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>Example 2: Set properties of a KeyVault vault by passing HashTable of parameter values</maml:title>
        <dev:code>PS C:\&gt; Import-Module AzureRM.KeyVault
PS C:\&gt; New-PSDrive -Name kv -PSProvider KeyVault -Root C:\Users\Default\
PS C:\&gt; Set-Item kv:/vault1 -Value @{"EnabledForDeployment"=$true;"EnabledForTemplateDeployment"=$true;"EnabledForDiskEncryption"=$false} -PassThru

Vault Name                       : vault1
Resource Group Name              : myRG
Location                         : westus
Resource ID                      : /subscriptions/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxxx/resourceGroups/myRG/providers
                                   /Microsoft.KeyVault/vaults/vault1
Vault URI                        : https://vault1.vault.azure.net/
Tenant ID                        : xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxxx
SKU                              : Standard
Enabled For Deployment?          : True
Enabled For Template Deployment? : True
Enabled For Disk Encryption?     : False
Soft Delete Enabled?             : True
Access Policies                  :
Network Rule Set                 :
                                   Default Action                             : Allow
                                   Bypass                                     : AzureServices
                                   IP Rules                                   :
                                   Virtual Network Rules                      :
Tags                             :</dev:code>
        <dev:remarks>
          <maml:para></maml:para>
<maml:para></maml:para>
<maml:para></maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>Example 3: Set properties of a KeyVault vault by passing object of type PSVault</maml:title>
        <dev:code>PS C:\&gt; Import-Module AzureRM.KeyVault
PS C:\&gt; New-PSDrive -Name kv -PSProvider KeyVault -Root C:\Users\Default\
PS C:\&gt; $vault = Get-Item kv:/vault1
PS C:\&gt; $vault.EnabledForDeployment = $true
PS C:\&gt; $vault.EnabledForTemplateDeployment = $true
PS C:\&gt; $vault.EnabledForDiskEncription = $false
PS C:\&gt; Set-Item kv:/vault1 -Value $vault -PassThru

Vault Name                       : vault1
Resource Group Name              : myRG
Location                         : westus
Resource ID                      : /subscriptions/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxxx/resourceGroups/myRG/providers
                                   /Microsoft.KeyVault/vaults/vault1
Vault URI                        : https://vault1.vault.azure.net/
Tenant ID                        : xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxxx
SKU                              : Standard
Enabled For Deployment?          : True
Enabled For Template Deployment? : True
Enabled For Disk Encryption?     : False
Soft Delete Enabled?             : True
Access Policies                  :
Network Rule Set                 :
                                   Default Action                             : Allow
                                   Bypass                                     : AzureServices
                                   IP Rules                                   :
                                   Virtual Network Rules                      :
Tags                             :</dev:code>
        <dev:remarks>
          <maml:para></maml:para>
<maml:para></maml:para>
<maml:para></maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>Example 4: Set properties of a KeyVault Secret using dynamic parameters</maml:title>
        <dev:code>PS C:\&gt; Import-Module AzureRM.KeyVault
PS C:\&gt; New-PSDrive -Name kv -PSProvider KeyVault -Root C:\Users\Default\
PS C:\&gt; $Expires = (Get-Date).AddYears(2).ToUniversalTime()
PS C:\&gt; $Nbf = (Get-Date).ToUniversalTime()
PS C:\&gt; Set-Item kv:/vault1/Secrets/secret1 -Enable $true -Expires $Expires -NotBefore $Nbf -ContentType "xml" -Tag @{"a"="b"} -PassThru

Vault Name   : vault1
Name         : secret1
Version      : xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
Id           : https://vault1.vault.azure.net:443/secrets/secret1/xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
Enabled      : True
Expires      : 5/8/2020 9:28:51 PM
Not Before   : 5/8/2018 9:28:51 PM
Created      : 5/7/2018 8:41:52 PM
Updated      : 5/8/2018 9:28:54 PM
Content Type : xml
Tags         : Name  Value
               a     b</dev:code>
        <dev:remarks>
          <maml:para></maml:para>
<maml:para></maml:para>
<maml:para></maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>Example 5: Set properties of a specific version of a KeyVault Secret using dynamic parameters</maml:title>
        <dev:code>PS C:\&gt; Import-Module AzureRM.KeyVault
PS C:\&gt; New-PSDrive -Name kv -PSProvider KeyVault -Root C:\Users\Default\
PS C:\&gt; $Expires = (Get-Date).AddYears(2).ToUniversalTime()
PS C:\&gt; $Nbf = (Get-Date).ToUniversalTime()
PS C:\&gt; Set-Item kv:/vault1/Secrets/secret1 -Enable $true -Expires $Expires -NotBefore $Nbf -ContentType "xml" -Tag @{"a"="b"} -Version 12345678123456781234567812345678 -PassThru

Vault Name   : vault1
Name         : secret1
Version      : 12345678123456781234567812345678
Id           : https://vault1.vault.azure.net:443/secrets/secret1/12345678123456781234567812345678
Enabled      : True
Expires      : 5/8/2020 9:28:51 PM
Not Before   : 5/8/2018 9:28:51 PM
Created      : 5/7/2018 8:41:52 PM
Updated      : 5/8/2018 9:28:54 PM
Content Type : xml
Tags         : Name  Value
               a     b</dev:code>
        <dev:remarks>
          <maml:para>The version parameter is also available for Certificates and Keys.</maml:para>
<maml:para></maml:para>
<maml:para></maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>Example 6: Set properties of a KeyVault Certificate using dynamic parameters</maml:title>
        <dev:code>PS C:\&gt; Import-Module AzureRM.KeyVault
PS C:\&gt; New-PSDrive -Name kv -PSProvider KeyVault -Root C:\Users\Default\
PS C:\&gt; Set-Item kv:/vault1/Certificates/cert1 -Enable $true -Tag @{"a"="b"} -PassThru

Certificate   : 
KeyId         : https://vault1.vault.azure.net:443/keys/cert1/xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
SecretId      : https://vault1.vault.azure.net:443/secrets/cert1/xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
Thumbprint    : xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
RecoveryLevel : Recoverable+Purgeable
Policy        : Microsoft.Azure.Commands.KeyVault.Models.PSKeyVaultCertificatePolicy
Enabled       : True
Expires       : 11/7/2018 8:45:14 PM
NotBefore     : 5/7/2018 8:35:14 PM
Created       : 5/7/2018 8:45:15 PM
Updated       : 5/8/2018 10:27:11 PM
Tags          : {a}
VaultName     : vault1
Name          : cert1
Version       : xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
Id            : https://vault1.vault.azure.net:443/certificates/cert1/xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx</dev:code>
        <dev:remarks>
          <maml:para></maml:para>
<maml:para></maml:para>
<maml:para></maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>Example 7: Set properties of a KeyVault Key using dynamic parameters</maml:title>
        <dev:code>PS C:\&gt; Import-Module AzureRM.KeyVault
PS C:\&gt; New-PSDrive -Name kv -PSProvider KeyVault -Root C:\Users\Default\
PS C:\&gt; $Expires = (Get-Date).AddYears(2).ToUniversalTime()
PS C:\&gt; $Nbf = (Get-Date).ToUniversalTime()
PS C:\&gt; Set-Item kv:/vault1/Keys/key1 -Enable $true -Expires $Expires -NotBefore $Nbf -KeyOps decrypt -Tag @{"a"="b"} -PassThru

Vault Name     : vault1
Name           : key1
Version        : xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
Id             : https://vault1.vault.azure.net:443/keys/key1/xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
Enabled        : True
Expires        : 5/8/2020 10:31:54 PM
Not Before     : 5/8/2018 10:32:00 PM
Created        : 5/7/2018 8:51:40 PM
Updated        : 5/8/2018 10:32:04 PM
Purge Disabled : False
Tags           : Name  Value
                 a     b</dev:code>
        <dev:remarks>
          <maml:para></maml:para>
<maml:para></maml:para>
<maml:para></maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>Example 8: Set properties of a KeyVault AccessPolicy using dynamic parameters</maml:title>
        <dev:code>PS C:\&gt; Import-Module AzureRM.KeyVault
PS C:\&gt; New-PSDrive -Name kv -PSProvider KeyVault -Root C:\Users\Default\
PS C:\&gt; Set-Item kv:/vault1/AccessPolicies/11111111-1111-1111-1111-111111111111 -PermissionsToKeys get, create -PermissionsToSecrets get, list -PermissionsToCertificates get -PermissionsToStorage get -PassThru

Tenant ID                                  : xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxxx
Object ID                                  : 11111111-1111-1111-1111-111111111111
Application ID                             :
Display Name                               : User1 (user1@microsoft.com)
Permissions to Keys                        : {get, create}
Permissions to Secrets                     : {get, list}
Permissions to Certificates                : {get}
Permissions to (Key Vault Managed) Storage : {get}</dev:code>
        <dev:remarks>
          <maml:para></maml:para>
<maml:para></maml:para>
<maml:para></maml:para>
        </dev:remarks>
      </command:example>
    </command:examples>
    <command:relatedLinks>
      <maml:navigationLink>
        <maml:linkText>Online Version:</maml:linkText>
        <maml:uri>https://docs.microsoft.com/en-us/powershell/module/azurerm.keyvault/set-item-for-keyvaultprovider</maml:uri>
      </maml:navigationLink>
    </command:relatedLinks>
  </command:command>
</helpItems>