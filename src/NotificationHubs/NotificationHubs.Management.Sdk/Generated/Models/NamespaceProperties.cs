// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.NotificationHubs.Models
{
    using System.Linq;

    /// <summary>
    /// Namespace properties.
    /// </summary>
    public partial class NamespaceProperties
    {
        /// <summary>
        /// Initializes a new instance of the NamespaceProperties class.
        /// </summary>
        public NamespaceProperties()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the NamespaceProperties class.
        /// </summary>

        /// <param name="name">The name of the namespace.
        /// </param>

        /// <param name="provisioningState">Provisioning state of the Namespace.
        /// </param>

        /// <param name="region">Specifies the targeted region in which the namespace should be created. It
        /// can be any of the following values: Australia EastAustralia
        /// SoutheastCentral USEast USEast US 2West USNorth Central USSouth Central
        /// USEast AsiaSoutheast AsiaBrazil SouthJapan EastJapan WestNorth EuropeWest
        /// Europe
        /// </param>

        /// <param name="status">Status of the namespace. It can be any of these values:1 = Created/Active2
        /// = Creating3 = Suspended4 = Deleting
        /// </param>

        /// <param name="createdAt">The time the namespace was created.
        /// </param>

        /// <param name="serviceBusEndpoint">Endpoint you can use to perform NotificationHub operations.
        /// </param>

        /// <param name="subscriptionId">The Id of the Azure subscription associated with the namespace.
        /// </param>

        /// <param name="scaleUnit">ScaleUnit where the namespace gets created
        /// </param>

        /// <param name="enabled">Whether or not the namespace is currently enabled.
        /// </param>

        /// <param name="critical">Whether or not the namespace is set as Critical.
        /// </param>

        /// <param name="namespaceType">The namespace type.
        /// Possible values include: &#39;Messaging&#39;, &#39;NotificationHub&#39;</param>
        public NamespaceProperties(string name = default(string), string provisioningState = default(string), string region = default(string), string status = default(string), System.DateTime? createdAt = default(System.DateTime?), string serviceBusEndpoint = default(string), string subscriptionId = default(string), string scaleUnit = default(string), bool? enabled = default(bool?), bool? critical = default(bool?), NamespaceType? namespaceType = default(NamespaceType?))

        {
            this.Name = name;
            this.ProvisioningState = provisioningState;
            this.Region = region;
            this.Status = status;
            this.CreatedAt = createdAt;
            this.ServiceBusEndpoint = serviceBusEndpoint;
            this.SubscriptionId = subscriptionId;
            this.ScaleUnit = scaleUnit;
            this.Enabled = enabled;
            this.Critical = critical;
            this.NamespaceType = namespaceType;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets or sets the name of the namespace.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "name")]
        public string Name {get; set; }

        /// <summary>
        /// Gets or sets provisioning state of the Namespace.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "provisioningState")]
        public string ProvisioningState {get; set; }

        /// <summary>
        /// Gets or sets specifies the targeted region in which the namespace should be
        /// created. It can be any of the following values: Australia EastAustralia
        /// SoutheastCentral USEast USEast US 2West USNorth Central USSouth Central
        /// USEast AsiaSoutheast AsiaBrazil SouthJapan EastJapan WestNorth EuropeWest
        /// Europe
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "region")]
        public string Region {get; set; }

        /// <summary>
        /// Gets or sets status of the namespace. It can be any of these values:1 =
        /// Created/Active2 = Creating3 = Suspended4 = Deleting
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "status")]
        public string Status {get; set; }

        /// <summary>
        /// Gets or sets the time the namespace was created.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "createdAt")]
        public System.DateTime? CreatedAt {get; set; }

        /// <summary>
        /// Gets or sets endpoint you can use to perform NotificationHub operations.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "serviceBusEndpoint")]
        public string ServiceBusEndpoint {get; set; }

        /// <summary>
        /// Gets or sets the Id of the Azure subscription associated with the
        /// namespace.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "subscriptionId")]
        public string SubscriptionId {get; set; }

        /// <summary>
        /// Gets or sets scaleUnit where the namespace gets created
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "scaleUnit")]
        public string ScaleUnit {get; set; }

        /// <summary>
        /// Gets or sets whether or not the namespace is currently enabled.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "enabled")]
        public bool? Enabled {get; set; }

        /// <summary>
        /// Gets or sets whether or not the namespace is set as Critical.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "critical")]
        public bool? Critical {get; set; }

        /// <summary>
        /// Gets or sets the namespace type. Possible values include: &#39;Messaging&#39;, &#39;NotificationHub&#39;
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "namespaceType")]
        public NamespaceType? NamespaceType {get; set; }
    }
}