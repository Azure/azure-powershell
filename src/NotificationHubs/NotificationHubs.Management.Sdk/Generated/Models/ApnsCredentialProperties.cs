// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.NotificationHubs.Models
{
    using System.Linq;

    /// <summary>
    /// Description of a NotificationHub ApnsCredential.
    /// </summary>
    public partial class ApnsCredentialProperties
    {
        /// <summary>
        /// Initializes a new instance of the ApnsCredentialProperties class.
        /// </summary>
        public ApnsCredentialProperties()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the ApnsCredentialProperties class.
        /// </summary>

        /// <param name="apnsCertificate">The APNS certificate.
        /// </param>

        /// <param name="certificateKey">The certificate key.
        /// </param>

        /// <param name="endpoint">The endpoint of this credential.
        /// </param>

        /// <param name="thumbprint">The Apns certificate Thumbprint
        /// </param>

        /// <param name="keyId">A 10-character key identifier (kid) key, obtained from your developer
        /// account
        /// </param>

        /// <param name="appName">The name of the application
        /// </param>

        /// <param name="appId">The issuer (iss) registered claim key, whose value is your 10-character
        /// Team ID, obtained from your developer account
        /// </param>

        /// <param name="token">Provider Authentication Token, obtained through your developer account
        /// </param>
        public ApnsCredentialProperties(string apnsCertificate = default(string), string certificateKey = default(string), string endpoint = default(string), string thumbprint = default(string), string keyId = default(string), string appName = default(string), string appId = default(string), string token = default(string))

        {
            this.ApnsCertificate = apnsCertificate;
            this.CertificateKey = certificateKey;
            this.Endpoint = endpoint;
            this.Thumbprint = thumbprint;
            this.KeyId = keyId;
            this.AppName = appName;
            this.AppId = appId;
            this.Token = token;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets or sets the APNS certificate.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "apnsCertificate")]
        public string ApnsCertificate {get; set; }

        /// <summary>
        /// Gets or sets the certificate key.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "certificateKey")]
        public string CertificateKey {get; set; }

        /// <summary>
        /// Gets or sets the endpoint of this credential.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "endpoint")]
        public string Endpoint {get; set; }

        /// <summary>
        /// Gets or sets the Apns certificate Thumbprint
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "thumbprint")]
        public string Thumbprint {get; set; }

        /// <summary>
        /// Gets or sets a 10-character key identifier (kid) key, obtained from your
        /// developer account
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "keyId")]
        public string KeyId {get; set; }

        /// <summary>
        /// Gets or sets the name of the application
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "appName")]
        public string AppName {get; set; }

        /// <summary>
        /// Gets or sets the issuer (iss) registered claim key, whose value is your
        /// 10-character Team ID, obtained from your developer account
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "appId")]
        public string AppId {get; set; }

        /// <summary>
        /// Gets or sets provider Authentication Token, obtained through your developer
        /// account
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "token")]
        public string Token {get; set; }
    }
}