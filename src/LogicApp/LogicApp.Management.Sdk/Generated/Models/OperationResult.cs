// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.Logic.Models
{
    using System.Linq;

    /// <summary>
    /// The operation result definition.
    /// </summary>
    public partial class OperationResult : OperationResultProperties
    {
        /// <summary>
        /// Initializes a new instance of the OperationResult class.
        /// </summary>
        public OperationResult()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the OperationResult class.
        /// </summary>

        /// <param name="startTime">The start time of the workflow scope repetition.
        /// </param>

        /// <param name="endTime">The end time of the workflow scope repetition.
        /// </param>

        /// <param name="correlation">The correlation properties.
        /// </param>

        /// <param name="status">The status of the workflow scope repetition.
        /// Possible values include: &#39;NotSpecified&#39;, &#39;Paused&#39;, &#39;Running&#39;, &#39;Waiting&#39;,
        /// &#39;Succeeded&#39;, &#39;Skipped&#39;, &#39;Suspended&#39;, &#39;Cancelled&#39;, &#39;Failed&#39;, &#39;Faulted&#39;,
        /// &#39;TimedOut&#39;, &#39;Aborted&#39;, &#39;Ignored&#39;</param>

        /// <param name="code">The workflow scope repetition code.
        /// </param>

        /// <param name="error">Anything
        /// </param>

        /// <param name="trackingId">Gets the tracking id.
        /// </param>

        /// <param name="inputs">Gets the inputs.
        /// </param>

        /// <param name="inputsLink">Gets the link to inputs.
        /// </param>

        /// <param name="outputs">Gets the outputs.
        /// </param>

        /// <param name="outputsLink">Gets the link to outputs.
        /// </param>

        /// <param name="trackedProperties">Gets the tracked properties.
        /// </param>

        /// <param name="retryHistory">Gets the retry histories.
        /// </param>

        /// <param name="iterationCount">
        /// </param>
        public OperationResult(System.DateTime? startTime = default(System.DateTime?), System.DateTime? endTime = default(System.DateTime?), RunActionCorrelation correlation = default(RunActionCorrelation), string status = default(string), string code = default(string), object error = default(object), string trackingId = default(string), object inputs = default(object), ContentLink inputsLink = default(ContentLink), object outputs = default(object), ContentLink outputsLink = default(ContentLink), object trackedProperties = default(object), System.Collections.Generic.IList<RetryHistory> retryHistory = default(System.Collections.Generic.IList<RetryHistory>), int? iterationCount = default(int?))

        : base(startTime, endTime, correlation, status, code, error)
        {
            this.TrackingId = trackingId;
            this.Inputs = inputs;
            this.InputsLink = inputsLink;
            this.Outputs = outputs;
            this.OutputsLink = outputsLink;
            this.TrackedProperties = trackedProperties;
            this.RetryHistory = retryHistory;
            this.IterationCount = iterationCount;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets gets the tracking id.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "trackingId")]
        public string TrackingId {get; private set; }

        /// <summary>
        /// Gets gets the inputs.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "inputs")]
        public object Inputs {get; private set; }

        /// <summary>
        /// Gets gets the link to inputs.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "inputsLink")]
        public ContentLink InputsLink {get; private set; }

        /// <summary>
        /// Gets gets the outputs.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "outputs")]
        public object Outputs {get; private set; }

        /// <summary>
        /// Gets gets the link to outputs.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "outputsLink")]
        public ContentLink OutputsLink {get; private set; }

        /// <summary>
        /// Gets gets the tracked properties.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "trackedProperties")]
        public object TrackedProperties {get; private set; }

        /// <summary>
        /// Gets or sets gets the retry histories.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "retryHistory")]
        public System.Collections.Generic.IList<RetryHistory> RetryHistory {get; set; }

        /// <summary>
        /// Gets or sets
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "iterationCount")]
        public int? IterationCount {get; set; }
    }
}