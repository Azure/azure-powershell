// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.Logic.Models
{
    using System.Linq;

    /// <summary>
    /// The batch configuration resource definition.
    /// </summary>
    public partial class BatchConfiguration : Resource
    {
        /// <summary>
        /// Initializes a new instance of the BatchConfiguration class.
        /// </summary>
        public BatchConfiguration()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the BatchConfiguration class.
        /// </summary>

        /// <param name="id">The resource id.
        /// </param>

        /// <param name="name">Gets the resource name.
        /// </param>

        /// <param name="type">Gets the resource type.
        /// </param>

        /// <param name="location">The resource location.
        /// </param>

        /// <param name="tags">The resource tags.
        /// </param>

        /// <param name="properties">The batch configuration properties.
        /// </param>
        public BatchConfiguration(BatchConfigurationProperties properties, string id = default(string), string name = default(string), string type = default(string), string location = default(string), System.Collections.Generic.IDictionary<string, string> tags = default(System.Collections.Generic.IDictionary<string, string>))

        : base(id, name, type, location, tags)
        {
            this.Properties = properties;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets or sets the batch configuration properties.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties")]
        public BatchConfigurationProperties Properties {get; set; }
        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (this.Properties == null)
            {
                throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.CannotBeNull, "Properties");
            }
            if (this.Properties != null)
            {
                this.Properties.Validate();
            }
        }
    }
}