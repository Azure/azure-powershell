// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.Logic.Models
{

    /// <summary>
    /// Defines values for EdifactDecimalIndicator.
    /// </summary>


    [Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
    public enum EdifactDecimalIndicator
    {
        [System.Runtime.Serialization.EnumMember(Value = "NotSpecified")]
        NotSpecified,
        [System.Runtime.Serialization.EnumMember(Value = "Comma")]
        Comma,
        [System.Runtime.Serialization.EnumMember(Value = "Decimal")]
        Decimal
    }
    internal static class EdifactDecimalIndicatorEnumExtension
    {
        internal static string ToSerializedValue(this EdifactDecimalIndicator? value)
        {
            return value == null ? null : ((EdifactDecimalIndicator)value).ToSerializedValue();
        }
        internal static string ToSerializedValue(this EdifactDecimalIndicator value)
        {
            switch( value )
            {
                case EdifactDecimalIndicator.NotSpecified:
                    return "NotSpecified";
                case EdifactDecimalIndicator.Comma:
                    return "Comma";
                case EdifactDecimalIndicator.Decimal:
                    return "Decimal";
            }
            return null;
        }
        internal static EdifactDecimalIndicator? ParseEdifactDecimalIndicator(this string value)
        {
            switch( value )
            {
                case "NotSpecified":
                    return EdifactDecimalIndicator.NotSpecified;
                case "Comma":
                    return EdifactDecimalIndicator.Comma;
                case "Decimal":
                    return EdifactDecimalIndicator.Decimal;
            }
            return null;
        }
    }
}