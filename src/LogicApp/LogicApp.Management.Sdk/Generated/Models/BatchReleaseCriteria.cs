// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.Logic.Models
{
    using System.Linq;

    /// <summary>
    /// The batch release criteria.
    /// </summary>
    public partial class BatchReleaseCriteria
    {
        /// <summary>
        /// Initializes a new instance of the BatchReleaseCriteria class.
        /// </summary>
        public BatchReleaseCriteria()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the BatchReleaseCriteria class.
        /// </summary>

        /// <param name="messageCount">The message count.
        /// </param>

        /// <param name="batchSize">The batch size in bytes.
        /// </param>

        /// <param name="recurrence">The recurrence.
        /// </param>
        public BatchReleaseCriteria(int? messageCount = default(int?), int? batchSize = default(int?), WorkflowTriggerRecurrence recurrence = default(WorkflowTriggerRecurrence))

        {
            this.MessageCount = messageCount;
            this.BatchSize = batchSize;
            this.Recurrence = recurrence;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets or sets the message count.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "messageCount")]
        public int? MessageCount {get; set; }

        /// <summary>
        /// Gets or sets the batch size in bytes.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "batchSize")]
        public int? BatchSize {get; set; }

        /// <summary>
        /// Gets or sets the recurrence.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "recurrence")]
        public WorkflowTriggerRecurrence Recurrence {get; set; }
    }
}