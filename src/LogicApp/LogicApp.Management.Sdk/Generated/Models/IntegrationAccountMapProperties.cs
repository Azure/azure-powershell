// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.Logic.Models
{
    using System.Linq;

    /// <summary>
    /// The integration account map.
    /// </summary>
    public partial class IntegrationAccountMapProperties
    {
        /// <summary>
        /// Initializes a new instance of the IntegrationAccountMapProperties class.
        /// </summary>
        public IntegrationAccountMapProperties()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the IntegrationAccountMapProperties class.
        /// </summary>

        /// <param name="mapType">The map type.
        /// Possible values include: &#39;NotSpecified&#39;, &#39;Xslt&#39;, &#39;Xslt20&#39;, &#39;Xslt30&#39;,
        /// &#39;Liquid&#39;</param>

        /// <param name="parametersSchema">The parameters schema of integration account map.
        /// </param>

        /// <param name="createdTime">The created time.
        /// </param>

        /// <param name="changedTime">The changed time.
        /// </param>

        /// <param name="content">The content.
        /// </param>

        /// <param name="contentType">The content type.
        /// </param>

        /// <param name="contentLink">The content link.
        /// </param>

        /// <param name="metadata">The metadata.
        /// </param>
        public IntegrationAccountMapProperties(string mapType, IntegrationAccountMapPropertiesParametersSchema parametersSchema = default(IntegrationAccountMapPropertiesParametersSchema), System.DateTime? createdTime = default(System.DateTime?), System.DateTime? changedTime = default(System.DateTime?), string content = default(string), string contentType = default(string), ContentLink contentLink = default(ContentLink), object metadata = default(object))

        {
            this.MapType = mapType;
            this.ParametersSchema = parametersSchema;
            this.CreatedTime = createdTime;
            this.ChangedTime = changedTime;
            this.Content = content;
            this.ContentType = contentType;
            this.ContentLink = contentLink;
            this.Metadata = metadata;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets or sets the map type. Possible values include: &#39;NotSpecified&#39;, &#39;Xslt&#39;, &#39;Xslt20&#39;, &#39;Xslt30&#39;, &#39;Liquid&#39;
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "mapType")]
        public string MapType {get; set; }

        /// <summary>
        /// Gets or sets the parameters schema of integration account map.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "parametersSchema")]
        public IntegrationAccountMapPropertiesParametersSchema ParametersSchema {get; set; }

        /// <summary>
        /// Gets the created time.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "createdTime")]
        public System.DateTime? CreatedTime {get; private set; }

        /// <summary>
        /// Gets the changed time.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "changedTime")]
        public System.DateTime? ChangedTime {get; private set; }

        /// <summary>
        /// Gets or sets the content.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "content")]
        public string Content {get; set; }

        /// <summary>
        /// Gets or sets the content type.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "contentType")]
        public string ContentType {get; set; }

        /// <summary>
        /// Gets the content link.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "contentLink")]
        public ContentLink ContentLink {get; private set; }

        /// <summary>
        /// Gets or sets the metadata.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "metadata")]
        public object Metadata {get; set; }
        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (this.MapType == null)
            {
                throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.CannotBeNull, "MapType");
            }






        }
    }
}