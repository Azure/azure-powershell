// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.Logic.Models
{
    using System.Linq;

    /// <summary>
    /// The workflow properties.
    /// </summary>
    public partial class WorkflowProperties
    {
        /// <summary>
        /// Initializes a new instance of the WorkflowProperties class.
        /// </summary>
        public WorkflowProperties()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the WorkflowProperties class.
        /// </summary>

        /// <param name="provisioningState">Gets the provisioning state.
        /// Possible values include: &#39;NotSpecified&#39;, &#39;Accepted&#39;, &#39;Running&#39;, &#39;Ready&#39;,
        /// &#39;Creating&#39;, &#39;Created&#39;, &#39;Deleting&#39;, &#39;Deleted&#39;, &#39;Canceled&#39;, &#39;Failed&#39;,
        /// &#39;Succeeded&#39;, &#39;Moving&#39;, &#39;Updating&#39;, &#39;Registering&#39;, &#39;Registered&#39;,
        /// &#39;Unregistering&#39;, &#39;Unregistered&#39;, &#39;Completed&#39;</param>

        /// <param name="createdTime">Gets the created time.
        /// </param>

        /// <param name="changedTime">Gets the changed time.
        /// </param>

        /// <param name="state">The state.
        /// Possible values include: &#39;NotSpecified&#39;, &#39;Completed&#39;, &#39;Enabled&#39;,
        /// &#39;Disabled&#39;, &#39;Deleted&#39;, &#39;Suspended&#39;</param>

        /// <param name="version">Gets the version.
        /// </param>

        /// <param name="accessEndpoint">Gets the access endpoint.
        /// </param>

        /// <param name="sku">The sku.
        /// </param>

        /// <param name="integrationAccount">The integration account.
        /// </param>

        /// <param name="definition">The definition. See [Schema reference for Workflow Definition Language in
        /// Azure Logic Apps](https://aka.ms/logic-apps-workflow-definition-language).
        /// </param>

        /// <param name="parameters">The parameters.
        /// </param>
        public WorkflowProperties(string provisioningState = default(string), System.DateTime? createdTime = default(System.DateTime?), System.DateTime? changedTime = default(System.DateTime?), string state = default(string), string version = default(string), string accessEndpoint = default(string), Sku sku = default(Sku), ResourceReference integrationAccount = default(ResourceReference), object definition = default(object), System.Collections.Generic.IDictionary<string, WorkflowParameter> parameters = default(System.Collections.Generic.IDictionary<string, WorkflowParameter>))

        {
            this.ProvisioningState = provisioningState;
            this.CreatedTime = createdTime;
            this.ChangedTime = changedTime;
            this.State = state;
            this.Version = version;
            this.AccessEndpoint = accessEndpoint;
            this.Sku = sku;
            this.IntegrationAccount = integrationAccount;
            this.Definition = definition;
            this.Parameters = parameters;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets gets the provisioning state. Possible values include: &#39;NotSpecified&#39;, &#39;Accepted&#39;, &#39;Running&#39;, &#39;Ready&#39;, &#39;Creating&#39;, &#39;Created&#39;, &#39;Deleting&#39;, &#39;Deleted&#39;, &#39;Canceled&#39;, &#39;Failed&#39;, &#39;Succeeded&#39;, &#39;Moving&#39;, &#39;Updating&#39;, &#39;Registering&#39;, &#39;Registered&#39;, &#39;Unregistering&#39;, &#39;Unregistered&#39;, &#39;Completed&#39;
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "provisioningState")]
        public string ProvisioningState {get; private set; }

        /// <summary>
        /// Gets gets the created time.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "createdTime")]
        public System.DateTime? CreatedTime {get; private set; }

        /// <summary>
        /// Gets gets the changed time.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "changedTime")]
        public System.DateTime? ChangedTime {get; private set; }

        /// <summary>
        /// Gets or sets the state. Possible values include: &#39;NotSpecified&#39;, &#39;Completed&#39;, &#39;Enabled&#39;, &#39;Disabled&#39;, &#39;Deleted&#39;, &#39;Suspended&#39;
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "state")]
        public string State {get; set; }

        /// <summary>
        /// Gets gets the version.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "version")]
        public string Version {get; private set; }

        /// <summary>
        /// Gets gets the access endpoint.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "accessEndpoint")]
        public string AccessEndpoint {get; private set; }

        /// <summary>
        /// Gets or sets the sku.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "sku")]
        public Sku Sku {get; set; }

        /// <summary>
        /// Gets or sets the integration account.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "integrationAccount")]
        public ResourceReference IntegrationAccount {get; set; }

        /// <summary>
        /// Gets or sets the definition. See [Schema reference for Workflow Definition
        /// Language in Azure Logic
        /// Apps](https://aka.ms/logic-apps-workflow-definition-language).
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "definition")]
        public object Definition {get; set; }

        /// <summary>
        /// Gets or sets the parameters.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "parameters")]
        public System.Collections.Generic.IDictionary<string, WorkflowParameter> Parameters {get; set; }
        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {




            if (this.Sku != null)
            {
                this.Sku.Validate();
            }



        }
    }
}