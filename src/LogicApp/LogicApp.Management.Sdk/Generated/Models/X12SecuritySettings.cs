// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.Logic.Models
{
    using System.Linq;

    /// <summary>
    /// The X12 agreement security settings.
    /// </summary>
    public partial class X12SecuritySettings
    {
        /// <summary>
        /// Initializes a new instance of the X12SecuritySettings class.
        /// </summary>
        public X12SecuritySettings()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the X12SecuritySettings class.
        /// </summary>

        /// <param name="authorizationQualifier">The authorization qualifier.
        /// </param>

        /// <param name="authorizationValue">The authorization value.
        /// </param>

        /// <param name="securityQualifier">The security qualifier.
        /// </param>

        /// <param name="passwordValue">The password value.
        /// </param>
        public X12SecuritySettings(string authorizationQualifier, string securityQualifier, string authorizationValue = default(string), string passwordValue = default(string))

        {
            this.AuthorizationQualifier = authorizationQualifier;
            this.AuthorizationValue = authorizationValue;
            this.SecurityQualifier = securityQualifier;
            this.PasswordValue = passwordValue;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets or sets the authorization qualifier.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "authorizationQualifier")]
        public string AuthorizationQualifier {get; set; }

        /// <summary>
        /// Gets or sets the authorization value.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "authorizationValue")]
        public string AuthorizationValue {get; set; }

        /// <summary>
        /// Gets or sets the security qualifier.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "securityQualifier")]
        public string SecurityQualifier {get; set; }

        /// <summary>
        /// Gets or sets the password value.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "passwordValue")]
        public string PasswordValue {get; set; }
        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (this.AuthorizationQualifier == null)
            {
                throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.CannotBeNull, "AuthorizationQualifier");
            }
            if (this.SecurityQualifier == null)
            {
                throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.CannotBeNull, "SecurityQualifier");
            }




        }
    }
}