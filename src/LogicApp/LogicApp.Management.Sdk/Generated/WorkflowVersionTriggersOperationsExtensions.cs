// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.
namespace Microsoft.Azure.Management.Logic
{
    using Microsoft.Rest.Azure;
    using Models;

    /// <summary>
    /// Extension methods for WorkflowVersionTriggersOperations
    /// </summary>
    public static partial class WorkflowVersionTriggersOperationsExtensions
    {
        /// <summary>
        /// Get the callback url for a trigger of a workflow version.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='resourceGroupName'>
        /// The resource group name.
        /// </param>
        /// <param name='workflowName'>
        /// The workflow name.
        /// </param>
        /// <param name='versionId'>
        /// The workflow versionId.
        /// </param>
        /// <param name='triggerName'>
        /// The workflow trigger name.
        /// </param>
        public static WorkflowTriggerCallbackUrl ListCallbackUrl(this IWorkflowVersionTriggersOperations operations, string resourceGroupName, string workflowName, string versionId, string triggerName, GetCallbackUrlParameters parameters = default(GetCallbackUrlParameters))
        {
                return ((IWorkflowVersionTriggersOperations)operations).ListCallbackUrlAsync(resourceGroupName, workflowName, versionId, triggerName, parameters).GetAwaiter().GetResult();
        }

        /// <summary>
        /// Get the callback url for a trigger of a workflow version.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='resourceGroupName'>
        /// The resource group name.
        /// </param>
        /// <param name='workflowName'>
        /// The workflow name.
        /// </param>
        /// <param name='versionId'>
        /// The workflow versionId.
        /// </param>
        /// <param name='triggerName'>
        /// The workflow trigger name.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        public static async System.Threading.Tasks.Task<WorkflowTriggerCallbackUrl> ListCallbackUrlAsync(this IWorkflowVersionTriggersOperations operations, string resourceGroupName, string workflowName, string versionId, string triggerName, GetCallbackUrlParameters parameters = default(GetCallbackUrlParameters), System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            using (var _result = await operations.ListCallbackUrlWithHttpMessagesAsync(resourceGroupName, workflowName, versionId, triggerName, parameters, null, cancellationToken).ConfigureAwait(false))
            {
                return _result.Body;
            }
        }
    }
}
