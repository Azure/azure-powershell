// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.DataShare.Models
{
    using System.Linq;

    /// <summary>
    /// Invitation property bag.
    /// </summary>
    public partial class InvitationProperties
    {
        /// <summary>
        /// Initializes a new instance of the InvitationProperties class.
        /// </summary>
        public InvitationProperties()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the InvitationProperties class.
        /// </summary>

        /// <param name="invitationId">unique invitation id
        /// </param>

        /// <param name="invitationStatus">The status of the invitation.
        /// Possible values include: &#39;Pending&#39;, &#39;Accepted&#39;, &#39;Rejected&#39;, &#39;Withdrawn&#39;</param>

        /// <param name="respondedAt">The time the recipient responded to the invitation.
        /// </param>

        /// <param name="sentAt">Gets the time at which the invitation was sent.
        /// </param>

        /// <param name="targetActiveDirectoryId">The target Azure AD Id. Can&#39;t be combined with email.
        /// </param>

        /// <param name="targetEmail">The email the invitation is directed to.
        /// </param>

        /// <param name="targetObjectId">The target user or application Id that invitation is being sent to.
        /// Must be specified along TargetActiveDirectoryId. This enables sending
        /// invitations to specific users or applications in an AD tenant.
        /// </param>

        /// <param name="userEmail">Email of the user who created the resource
        /// </param>

        /// <param name="userName">Name of the user who created the resource
        /// </param>
        public InvitationProperties(string invitationId = default(string), string invitationStatus = default(string), System.DateTime? respondedAt = default(System.DateTime?), System.DateTime? sentAt = default(System.DateTime?), string targetActiveDirectoryId = default(string), string targetEmail = default(string), string targetObjectId = default(string), string userEmail = default(string), string userName = default(string))

        {
            this.InvitationId = invitationId;
            this.InvitationStatus = invitationStatus;
            this.RespondedAt = respondedAt;
            this.SentAt = sentAt;
            this.TargetActiveDirectoryId = targetActiveDirectoryId;
            this.TargetEmail = targetEmail;
            this.TargetObjectId = targetObjectId;
            this.UserEmail = userEmail;
            this.UserName = userName;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets unique invitation id
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "invitationId")]
        public string InvitationId {get; private set; }

        /// <summary>
        /// Gets the status of the invitation. Possible values include: &#39;Pending&#39;, &#39;Accepted&#39;, &#39;Rejected&#39;, &#39;Withdrawn&#39;
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "invitationStatus")]
        public string InvitationStatus {get; private set; }

        /// <summary>
        /// Gets the time the recipient responded to the invitation.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "respondedAt")]
        public System.DateTime? RespondedAt {get; private set; }

        /// <summary>
        /// Gets gets the time at which the invitation was sent.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "sentAt")]
        public System.DateTime? SentAt {get; private set; }

        /// <summary>
        /// Gets or sets the target Azure AD Id. Can&#39;t be combined with email.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "targetActiveDirectoryId")]
        public string TargetActiveDirectoryId {get; set; }

        /// <summary>
        /// Gets or sets the email the invitation is directed to.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "targetEmail")]
        public string TargetEmail {get; set; }

        /// <summary>
        /// Gets or sets the target user or application Id that invitation is being
        /// sent to.
        /// Must be specified along TargetActiveDirectoryId. This enables sending
        /// invitations to specific users or applications in an AD tenant.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "targetObjectId")]
        public string TargetObjectId {get; set; }

        /// <summary>
        /// Gets email of the user who created the resource
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "userEmail")]
        public string UserEmail {get; private set; }

        /// <summary>
        /// Gets name of the user who created the resource
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "userName")]
        public string UserName {get; private set; }
    }
}