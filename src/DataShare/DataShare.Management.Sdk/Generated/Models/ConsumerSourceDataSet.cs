// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.DataShare.Models
{
    using System.Linq;

    /// <summary>
    /// A consumer side dataSet data transfer object.
    /// </summary>
    [Microsoft.Rest.Serialization.JsonTransformation]
    public partial class ConsumerSourceDataSet : ProxyDto
    {
        /// <summary>
        /// Initializes a new instance of the ConsumerSourceDataSet class.
        /// </summary>
        public ConsumerSourceDataSet()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the ConsumerSourceDataSet class.
        /// </summary>

        /// <param name="id">The resource id of the azure resource
        /// </param>

        /// <param name="name">Name of the azure resource
        /// </param>

        /// <param name="type">Type of the azure resource
        /// </param>

        /// <param name="dataSetId">DataSet Id
        /// </param>

        /// <param name="dataSetLocation">Location of the data set.
        /// </param>

        /// <param name="dataSetName">DataSet name
        /// </param>

        /// <param name="dataSetPath">DataSet path
        /// </param>

        /// <param name="dataSetType">Type of data set
        /// Possible values include: &#39;Blob&#39;, &#39;Container&#39;, &#39;BlobFolder&#39;,
        /// &#39;AdlsGen2FileSystem&#39;, &#39;AdlsGen2Folder&#39;, &#39;AdlsGen2File&#39;, &#39;AdlsGen1Folder&#39;,
        /// &#39;AdlsGen1File&#39;, &#39;KustoCluster&#39;, &#39;KustoDatabase&#39;, &#39;SqlDBTable&#39;, &#39;SqlDWTable&#39;</param>
        public ConsumerSourceDataSet(string id = default(string), string name = default(string), string type = default(string), string dataSetId = default(string), string dataSetLocation = default(string), string dataSetName = default(string), string dataSetPath = default(string), string dataSetType = default(string))

        : base(id, name, type)
        {
            this.DataSetId = dataSetId;
            this.DataSetLocation = dataSetLocation;
            this.DataSetName = dataSetName;
            this.DataSetPath = dataSetPath;
            this.DataSetType = dataSetType;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets dataSet Id
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.dataSetId")]
        public string DataSetId {get; private set; }

        /// <summary>
        /// Gets location of the data set.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.dataSetLocation")]
        public string DataSetLocation {get; private set; }

        /// <summary>
        /// Gets dataSet name
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.dataSetName")]
        public string DataSetName {get; private set; }

        /// <summary>
        /// Gets dataSet path
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.dataSetPath")]
        public string DataSetPath {get; private set; }

        /// <summary>
        /// Gets type of data set Possible values include: &#39;Blob&#39;, &#39;Container&#39;, &#39;BlobFolder&#39;, &#39;AdlsGen2FileSystem&#39;, &#39;AdlsGen2Folder&#39;, &#39;AdlsGen2File&#39;, &#39;AdlsGen1Folder&#39;, &#39;AdlsGen1File&#39;, &#39;KustoCluster&#39;, &#39;KustoDatabase&#39;, &#39;SqlDBTable&#39;, &#39;SqlDWTable&#39;
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.dataSetType")]
        public string DataSetType {get; private set; }
    }
}