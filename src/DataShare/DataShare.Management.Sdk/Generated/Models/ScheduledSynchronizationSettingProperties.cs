// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.DataShare.Models
{
    using System.Linq;

    /// <summary>
    /// A Scheduled synchronization setting data transfer object.
    /// </summary>
    public partial class ScheduledSynchronizationSettingProperties
    {
        /// <summary>
        /// Initializes a new instance of the ScheduledSynchronizationSettingProperties class.
        /// </summary>
        public ScheduledSynchronizationSettingProperties()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the ScheduledSynchronizationSettingProperties class.
        /// </summary>

        /// <param name="createdAt">Time at which the synchronization setting was created.
        /// </param>

        /// <param name="provisioningState">Gets or sets the provisioning state
        /// Possible values include: &#39;Succeeded&#39;, &#39;Creating&#39;, &#39;Deleting&#39;, &#39;Moving&#39;,
        /// &#39;Failed&#39;</param>

        /// <param name="recurrenceInterval">Recurrence Interval
        /// Possible values include: &#39;Hour&#39;, &#39;Day&#39;</param>

        /// <param name="synchronizationTime">Synchronization time
        /// </param>

        /// <param name="userName">Name of the user who created the synchronization setting.
        /// </param>
        public ScheduledSynchronizationSettingProperties(string recurrenceInterval, System.DateTime synchronizationTime, System.DateTime? createdAt = default(System.DateTime?), string provisioningState = default(string), string userName = default(string))

        {
            this.CreatedAt = createdAt;
            this.ProvisioningState = provisioningState;
            this.RecurrenceInterval = recurrenceInterval;
            this.SynchronizationTime = synchronizationTime;
            this.UserName = userName;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets time at which the synchronization setting was created.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "createdAt")]
        public System.DateTime? CreatedAt {get; private set; }

        /// <summary>
        /// Gets gets or sets the provisioning state Possible values include: &#39;Succeeded&#39;, &#39;Creating&#39;, &#39;Deleting&#39;, &#39;Moving&#39;, &#39;Failed&#39;
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "provisioningState")]
        public string ProvisioningState {get; private set; }

        /// <summary>
        /// Gets or sets recurrence Interval Possible values include: &#39;Hour&#39;, &#39;Day&#39;
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "recurrenceInterval")]
        public string RecurrenceInterval {get; set; }

        /// <summary>
        /// Gets or sets synchronization time
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "synchronizationTime")]
        public System.DateTime SynchronizationTime {get; set; }

        /// <summary>
        /// Gets name of the user who created the synchronization setting.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "userName")]
        public string UserName {get; private set; }
        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (this.RecurrenceInterval == null)
            {
                throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.CannotBeNull, "RecurrenceInterval");
            }



        }
    }
}