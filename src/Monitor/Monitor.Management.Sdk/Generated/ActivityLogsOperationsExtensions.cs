// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.
namespace Microsoft.Azure.Management.Monitor
{
    using Microsoft.Rest.Azure;
    using Models;

    /// <summary>
    /// Extension methods for ActivityLogsOperations
    /// </summary>
    public static partial class ActivityLogsOperationsExtensions
    {
        /// <summary>
        /// Provides the list of records from the activity logs.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='odataQuery'>
        /// 
        /// </param>
        /// <param name='select'>
        /// Used to fetch events with only the given properties.&lt;br&gt;The **$select**
        /// argument is a comma separated list of property names to be returned.
        /// Possible values are: *authorization*, *claims*, *correlationId*,
        /// *description*, *eventDataId*, *eventName*, *eventTimestamp*, *httpRequest*,
        /// *level*, *operationId*, *operationName*, *properties*, *resourceGroupName*,
        /// *resourceProviderName*, *resourceId*, *status*, *submissionTimestamp*,
        /// *subStatus*, *subscriptionId*
        /// </param>
        public static Microsoft.Rest.Azure.IPage<EventData> List(this IActivityLogsOperations operations, Microsoft.Rest.Azure.OData.ODataQuery<EventData> odataQuery = default(Microsoft.Rest.Azure.OData.ODataQuery<EventData>), string select = default(string))
        {
                return ((IActivityLogsOperations)operations).ListAsync(odataQuery, select).GetAwaiter().GetResult();
        }

        /// <summary>
        /// Provides the list of records from the activity logs.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='odataQuery'>
        /// 
        /// </param>
        /// <param name='select'>
        /// Used to fetch events with only the given properties.&lt;br&gt;The **$select**
        /// argument is a comma separated list of property names to be returned.
        /// Possible values are: *authorization*, *claims*, *correlationId*,
        /// *description*, *eventDataId*, *eventName*, *eventTimestamp*, *httpRequest*,
        /// *level*, *operationId*, *operationName*, *properties*, *resourceGroupName*,
        /// *resourceProviderName*, *resourceId*, *status*, *submissionTimestamp*,
        /// *subStatus*, *subscriptionId*
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        public static async System.Threading.Tasks.Task<Microsoft.Rest.Azure.IPage<EventData>> ListAsync(this IActivityLogsOperations operations, Microsoft.Rest.Azure.OData.ODataQuery<EventData> odataQuery = default(Microsoft.Rest.Azure.OData.ODataQuery<EventData>), string select = default(string), System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            using (var _result = await operations.ListWithHttpMessagesAsync(odataQuery, select, null, cancellationToken).ConfigureAwait(false))
            {
                return _result.Body;
            }
        }
        /// <summary>
        /// Provides the list of records from the activity logs.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='nextPageLink'>
        /// The NextLink from the previous successful call to List operation.
        /// </param>
        public static Microsoft.Rest.Azure.IPage<EventData> ListNext(this IActivityLogsOperations operations, string nextPageLink)
        {
                return ((IActivityLogsOperations)operations).ListNextAsync(nextPageLink).GetAwaiter().GetResult();
        }

        /// <summary>
        /// Provides the list of records from the activity logs.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='nextPageLink'>
        /// The NextLink from the previous successful call to List operation.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        public static async System.Threading.Tasks.Task<Microsoft.Rest.Azure.IPage<EventData>> ListNextAsync(this IActivityLogsOperations operations, string nextPageLink, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            using (var _result = await operations.ListNextWithHttpMessagesAsync(nextPageLink, null, cancellationToken).ConfigureAwait(false))
            {
                return _result.Body;
            }
        }
    }
}
