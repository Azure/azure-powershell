// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.Monitor.Models
{

    /// <summary>
    /// Defines values for MetricStatisticType.
    /// </summary>


    [Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
    public enum MetricStatisticType
    {
        [System.Runtime.Serialization.EnumMember(Value = "Average")]
        Average,
        [System.Runtime.Serialization.EnumMember(Value = "Min")]
        Min,
        [System.Runtime.Serialization.EnumMember(Value = "Max")]
        Max,
        [System.Runtime.Serialization.EnumMember(Value = "Sum")]
        Sum,
        [System.Runtime.Serialization.EnumMember(Value = "Count")]
        Count
    }
    internal static class MetricStatisticTypeEnumExtension
    {
        internal static string ToSerializedValue(this MetricStatisticType? value)
        {
            return value == null ? null : ((MetricStatisticType)value).ToSerializedValue();
        }
        internal static string ToSerializedValue(this MetricStatisticType value)
        {
            switch( value )
            {
                case MetricStatisticType.Average:
                    return "Average";
                case MetricStatisticType.Min:
                    return "Min";
                case MetricStatisticType.Max:
                    return "Max";
                case MetricStatisticType.Sum:
                    return "Sum";
                case MetricStatisticType.Count:
                    return "Count";
            }
            return null;
        }
        internal static MetricStatisticType? ParseMetricStatisticType(this string value)
        {
            switch( value )
            {
                case "Average":
                    return MetricStatisticType.Average;
                case "Min":
                    return MetricStatisticType.Min;
                case "Max":
                    return MetricStatisticType.Max;
                case "Sum":
                    return MetricStatisticType.Sum;
                case "Count":
                    return MetricStatisticType.Count;
            }
            return null;
        }
    }
}