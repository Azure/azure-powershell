// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.Monitor.Models
{
    using System.Linq;

    /// <summary>
    /// The baseline values for a single sensitivity value.
    /// </summary>
    public partial class SingleBaseline
    {
        /// <summary>
        /// Initializes a new instance of the SingleBaseline class.
        /// </summary>
        public SingleBaseline()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the SingleBaseline class.
        /// </summary>

        /// <param name="sensitivity">the sensitivity of the baseline.
        /// Possible values include: &#39;Low&#39;, &#39;Medium&#39;, &#39;High&#39;</param>

        /// <param name="lowThresholds">The low thresholds of the baseline.
        /// </param>

        /// <param name="highThresholds">The high thresholds of the baseline.
        /// </param>
        public SingleBaseline(string sensitivity, System.Collections.Generic.IList<double?> lowThresholds, System.Collections.Generic.IList<double?> highThresholds)

        {
            this.Sensitivity = sensitivity;
            this.LowThresholds = lowThresholds;
            this.HighThresholds = highThresholds;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets or sets the sensitivity of the baseline. Possible values include: &#39;Low&#39;, &#39;Medium&#39;, &#39;High&#39;
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "sensitivity")]
        public string Sensitivity {get; set; }

        /// <summary>
        /// Gets or sets the low thresholds of the baseline.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "lowThresholds")]
        public System.Collections.Generic.IList<double?> LowThresholds {get; set; }

        /// <summary>
        /// Gets or sets the high thresholds of the baseline.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "highThresholds")]
        public System.Collections.Generic.IList<double?> HighThresholds {get; set; }
        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (this.Sensitivity == null)
            {
                throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.CannotBeNull, "Sensitivity");
            }
            if (this.LowThresholds == null)
            {
                throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.CannotBeNull, "LowThresholds");
            }
            if (this.HighThresholds == null)
            {
                throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.CannotBeNull, "HighThresholds");
            }



        }
    }
}