// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.Monitor.Models
{
    using System.Linq;

    /// <summary>
    /// The log profile resource for patch operations.
    /// </summary>
    [Microsoft.Rest.Serialization.JsonTransformation]
    public partial class LogProfileResourcePatch
    {
        /// <summary>
        /// Initializes a new instance of the LogProfileResourcePatch class.
        /// </summary>
        public LogProfileResourcePatch()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the LogProfileResourcePatch class.
        /// </summary>

        /// <param name="tags">Resource tags
        /// </param>

        /// <param name="retentionPolicy">the retention policy for the events in the log.
        /// </param>

        /// <param name="storageAccountId">the resource id of the storage account to which you would like to send the
        /// Activity Log.
        /// </param>

        /// <param name="serviceBusRuleId">The service bus rule ID of the service bus namespace in which you would
        /// like to have Event Hubs created for streaming the Activity Log. The rule ID
        /// is of the format: &#39;{service bus resource ID}/authorizationrules/{key
        /// name}&#39;.
        /// </param>

        /// <param name="locations">List of regions for which Activity Log events should be stored or streamed.
        /// It is a comma separated list of valid ARM locations including the &#39;global&#39;
        /// location.
        /// </param>

        /// <param name="categories">the categories of the logs. These categories are created as is convenient
        /// to the user. Some values are: &#39;Write&#39;, &#39;Delete&#39;, and/or &#39;Action.&#39;
        /// </param>
        public LogProfileResourcePatch(System.Collections.Generic.IDictionary<string, string> tags = default(System.Collections.Generic.IDictionary<string, string>), RetentionPolicy retentionPolicy = default(RetentionPolicy), string storageAccountId = default(string), string serviceBusRuleId = default(string), System.Collections.Generic.IList<string> locations = default(System.Collections.Generic.IList<string>), System.Collections.Generic.IList<string> categories = default(System.Collections.Generic.IList<string>))

        {
            this.Tags = tags;
            this.RetentionPolicy = retentionPolicy;
            this.StorageAccountId = storageAccountId;
            this.ServiceBusRuleId = serviceBusRuleId;
            this.Locations = locations;
            this.Categories = categories;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets or sets resource tags
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "tags")]
        public System.Collections.Generic.IDictionary<string, string> Tags {get; set; }

        /// <summary>
        /// Gets or sets the retention policy for the events in the log.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.retentionPolicy")]
        public RetentionPolicy RetentionPolicy {get; set; }

        /// <summary>
        /// Gets or sets the resource id of the storage account to which you would like
        /// to send the Activity Log.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.storageAccountId")]
        public string StorageAccountId {get; set; }

        /// <summary>
        /// Gets or sets the service bus rule ID of the service bus namespace in which
        /// you would like to have Event Hubs created for streaming the Activity Log.
        /// The rule ID is of the format: &#39;{service bus resource
        /// ID}/authorizationrules/{key name}&#39;.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.serviceBusRuleId")]
        public string ServiceBusRuleId {get; set; }

        /// <summary>
        /// Gets or sets list of regions for which Activity Log events should be stored
        /// or streamed. It is a comma separated list of valid ARM locations including
        /// the &#39;global&#39; location.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.locations")]
        public System.Collections.Generic.IList<string> Locations {get; set; }

        /// <summary>
        /// Gets or sets the categories of the logs. These categories are created as is
        /// convenient to the user. Some values are: &#39;Write&#39;, &#39;Delete&#39;, and/or
        /// &#39;Action.&#39;
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.categories")]
        public System.Collections.Generic.IList<string> Categories {get; set; }
        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {

            if (this.RetentionPolicy != null)
            {
                this.RetentionPolicy.Validate();
            }




        }
    }
}