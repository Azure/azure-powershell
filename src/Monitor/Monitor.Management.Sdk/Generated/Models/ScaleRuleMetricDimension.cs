// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.Monitor.Models
{
    using System.Linq;

    /// <summary>
    /// Specifies an auto scale rule metric dimension.
    /// </summary>
    public partial class ScaleRuleMetricDimension
    {
        /// <summary>
        /// Initializes a new instance of the ScaleRuleMetricDimension class.
        /// </summary>
        public ScaleRuleMetricDimension()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the ScaleRuleMetricDimension class.
        /// </summary>

        /// <param name="dimensionName">Name of the dimension.
        /// </param>

        /// <param name="operatorProperty">the dimension operator. Only &#39;Equals&#39; and &#39;NotEquals&#39; are supported.
        /// &#39;Equals&#39; being equal to any of the values. &#39;NotEquals&#39; being not equal to
        /// all of the values
        /// Possible values include: &#39;Equals&#39;, &#39;NotEquals&#39;</param>

        /// <param name="values">list of dimension values. For example: [&#34;App1&#34;,&#34;App2&#34;].
        /// </param>
        public ScaleRuleMetricDimension(string dimensionName, string operatorProperty, System.Collections.Generic.IList<string> values)

        {
            this.DimensionName = dimensionName;
            this.OperatorProperty = operatorProperty;
            this.Values = values;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets or sets name of the dimension.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "DimensionName")]
        public string DimensionName {get; set; }

        /// <summary>
        /// Gets or sets the dimension operator. Only &#39;Equals&#39; and &#39;NotEquals&#39; are
        /// supported. &#39;Equals&#39; being equal to any of the values. &#39;NotEquals&#39; being not
        /// equal to all of the values Possible values include: &#39;Equals&#39;, &#39;NotEquals&#39;
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "Operator")]
        public string OperatorProperty {get; set; }

        /// <summary>
        /// Gets or sets list of dimension values. For example: [&#34;App1&#34;,&#34;App2&#34;].
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "Values")]
        public System.Collections.Generic.IList<string> Values {get; set; }
        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (this.DimensionName == null)
            {
                throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.CannotBeNull, "DimensionName");
            }
            if (this.OperatorProperty == null)
            {
                throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.CannotBeNull, "OperatorProperty");
            }
            if (this.Values == null)
            {
                throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.CannotBeNull, "Values");
            }



        }
    }
}