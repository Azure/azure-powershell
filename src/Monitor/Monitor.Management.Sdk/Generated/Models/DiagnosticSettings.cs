// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.Monitor.Models
{
    using System.Linq;

    /// <summary>
    /// The diagnostic settings.
    /// </summary>
    public partial class DiagnosticSettings
    {
        /// <summary>
        /// Initializes a new instance of the DiagnosticSettings class.
        /// </summary>
        public DiagnosticSettings()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the DiagnosticSettings class.
        /// </summary>

        /// <param name="storageAccountId">The resource ID of the storage account to which you would like to send
        /// Diagnostic Logs.
        /// </param>

        /// <param name="serviceBusRuleId">The service bus rule Id of the diagnostic setting. This is here to maintain
        /// backwards compatibility.
        /// </param>

        /// <param name="eventHubAuthorizationRuleId">The resource Id for the event hub authorization rule.
        /// </param>

        /// <param name="eventHubName">The name of the event hub. If none is specified, the default event hub will
        /// be selected.
        /// </param>

        /// <param name="metrics">The list of metric settings.
        /// </param>

        /// <param name="logs">The list of logs settings.
        /// </param>

        /// <param name="workspaceId">The full ARM resource ID of the Log Analytics workspace to which you would
        /// like to send Diagnostic Logs. Example:
        /// /subscriptions/4b9e8510-67ab-4e9a-95a9-e2f1e570ea9c/resourceGroups/insights-integration/providers/Microsoft.OperationalInsights/workspaces/viruela2
        /// </param>

        /// <param name="logAnalyticsDestinationType">A string indicating whether the export to Log Analytics should use the
        /// default destination type, i.e. AzureDiagnostics, or use a destination type
        /// constructed as follows: &lt;normalized service identity&gt;_&lt;normalized category
        /// name&gt;. Possible values are: Dedicated and null (null is default.)
        /// </param>
        public DiagnosticSettings(string storageAccountId = default(string), string serviceBusRuleId = default(string), string eventHubAuthorizationRuleId = default(string), string eventHubName = default(string), System.Collections.Generic.IList<MetricSettings> metrics = default(System.Collections.Generic.IList<MetricSettings>), System.Collections.Generic.IList<LogSettings> logs = default(System.Collections.Generic.IList<LogSettings>), string workspaceId = default(string), string logAnalyticsDestinationType = default(string))

        {
            this.StorageAccountId = storageAccountId;
            this.ServiceBusRuleId = serviceBusRuleId;
            this.EventHubAuthorizationRuleId = eventHubAuthorizationRuleId;
            this.EventHubName = eventHubName;
            this.Metrics = metrics;
            this.Logs = logs;
            this.WorkspaceId = workspaceId;
            this.LogAnalyticsDestinationType = logAnalyticsDestinationType;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets or sets the resource ID of the storage account to which you would like
        /// to send Diagnostic Logs.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "storageAccountId")]
        public string StorageAccountId {get; set; }

        /// <summary>
        /// Gets or sets the service bus rule Id of the diagnostic setting. This is
        /// here to maintain backwards compatibility.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "serviceBusRuleId")]
        public string ServiceBusRuleId {get; set; }

        /// <summary>
        /// Gets or sets the resource Id for the event hub authorization rule.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "eventHubAuthorizationRuleId")]
        public string EventHubAuthorizationRuleId {get; set; }

        /// <summary>
        /// Gets or sets the name of the event hub. If none is specified, the default
        /// event hub will be selected.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "eventHubName")]
        public string EventHubName {get; set; }

        /// <summary>
        /// Gets or sets the list of metric settings.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "metrics")]
        public System.Collections.Generic.IList<MetricSettings> Metrics {get; set; }

        /// <summary>
        /// Gets or sets the list of logs settings.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "logs")]
        public System.Collections.Generic.IList<LogSettings> Logs {get; set; }

        /// <summary>
        /// Gets or sets the full ARM resource ID of the Log Analytics workspace to
        /// which you would like to send Diagnostic Logs. Example:
        /// /subscriptions/4b9e8510-67ab-4e9a-95a9-e2f1e570ea9c/resourceGroups/insights-integration/providers/Microsoft.OperationalInsights/workspaces/viruela2
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "workspaceId")]
        public string WorkspaceId {get; set; }

        /// <summary>
        /// Gets or sets a string indicating whether the export to Log Analytics should
        /// use the default destination type, i.e. AzureDiagnostics, or use a
        /// destination type constructed as follows: &lt;normalized service
        /// identity&gt;_&lt;normalized category name&gt;. Possible values are: Dedicated and
        /// null (null is default.)
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "logAnalyticsDestinationType")]
        public string LogAnalyticsDestinationType {get; set; }
    }
}