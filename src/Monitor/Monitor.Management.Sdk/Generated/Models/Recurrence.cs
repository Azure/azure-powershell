// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.Monitor.Models
{
    using System.Linq;

    /// <summary>
    /// The repeating times at which this profile begins. This element is not used
    /// if the FixedDate element is used.
    /// </summary>
    public partial class Recurrence
    {
        /// <summary>
        /// Initializes a new instance of the Recurrence class.
        /// </summary>
        public Recurrence()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the Recurrence class.
        /// </summary>

        /// <param name="frequency">the recurrence frequency. How often the schedule profile should take
        /// effect. This value must be Week, meaning each week will have the same set
        /// of profiles. For example, to set a daily schedule, set **schedule** to
        /// every day of the week. The frequency property specifies that the schedule
        /// is repeated weekly.
        /// Possible values include: &#39;None&#39;, &#39;Second&#39;, &#39;Minute&#39;, &#39;Hour&#39;, &#39;Day&#39;, &#39;Week&#39;,
        /// &#39;Month&#39;, &#39;Year&#39;</param>

        /// <param name="schedule">the scheduling constraints for when the profile begins.
        /// </param>
        public Recurrence(RecurrenceFrequency frequency, RecurrentSchedule schedule)

        {
            this.Frequency = frequency;
            this.Schedule = schedule;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets or sets the recurrence frequency. How often the schedule profile
        /// should take effect. This value must be Week, meaning each week will have
        /// the same set of profiles. For example, to set a daily schedule, set
        /// **schedule** to every day of the week. The frequency property specifies
        /// that the schedule is repeated weekly. Possible values include: &#39;None&#39;, &#39;Second&#39;, &#39;Minute&#39;, &#39;Hour&#39;, &#39;Day&#39;, &#39;Week&#39;, &#39;Month&#39;, &#39;Year&#39;
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "frequency")]
        public RecurrenceFrequency Frequency {get; set; }

        /// <summary>
        /// Gets or sets the scheduling constraints for when the profile begins.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "schedule")]
        public RecurrentSchedule Schedule {get; set; }
        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (this.Schedule == null)
            {
                throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.CannotBeNull, "Schedule");
            }

            if (this.Schedule != null)
            {
                this.Schedule.Validate();
            }
        }
    }
}