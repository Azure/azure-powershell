// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.Monitor.Models
{
    using System.Linq;

    /// <summary>
    /// The alert rule object for patch operations.
    /// </summary>
    [Microsoft.Rest.Serialization.JsonTransformation]
    public partial class AlertRuleResourcePatch
    {
        /// <summary>
        /// Initializes a new instance of the AlertRuleResourcePatch class.
        /// </summary>
        public AlertRuleResourcePatch()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the AlertRuleResourcePatch class.
        /// </summary>

        /// <param name="tags">Resource tags
        /// </param>

        /// <param name="name">the name of the alert rule.
        /// </param>

        /// <param name="description">the description of the alert rule that will be included in the alert email.
        /// </param>

        /// <param name="provisioningState">the provisioning state.
        /// </param>

        /// <param name="isEnabled">the flag that indicates whether the alert rule is enabled.
        /// </param>

        /// <param name="condition">the condition that results in the alert rule being activated.
        /// </param>

        /// <param name="action">action that is performed when the alert rule becomes active, and when an
        /// alert condition is resolved.
        /// </param>

        /// <param name="actions">the array of actions that are performed when the alert rule becomes active,
        /// and when an alert condition is resolved.
        /// </param>

        /// <param name="lastUpdatedTime">Last time the rule was updated in ISO8601 format.
        /// </param>
        public AlertRuleResourcePatch(System.Collections.Generic.IDictionary<string, string> tags = default(System.Collections.Generic.IDictionary<string, string>), string name = default(string), string description = default(string), string provisioningState = default(string), bool? isEnabled = default(bool?), RuleCondition condition = default(RuleCondition), RuleAction action = default(RuleAction), System.Collections.Generic.IList<RuleAction> actions = default(System.Collections.Generic.IList<RuleAction>), System.DateTime? lastUpdatedTime = default(System.DateTime?))

        {
            this.Tags = tags;
            this.Name = name;
            this.Description = description;
            this.ProvisioningState = provisioningState;
            this.IsEnabled = isEnabled;
            this.Condition = condition;
            this.Action = action;
            this.Actions = actions;
            this.LastUpdatedTime = lastUpdatedTime;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets or sets resource tags
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "tags")]
        public System.Collections.Generic.IDictionary<string, string> Tags {get; set; }

        /// <summary>
        /// Gets or sets the name of the alert rule.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.name")]
        public string Name {get; set; }

        /// <summary>
        /// Gets or sets the description of the alert rule that will be included in the
        /// alert email.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.description")]
        public string Description {get; set; }

        /// <summary>
        /// Gets or sets the provisioning state.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.provisioningState")]
        public string ProvisioningState {get; set; }

        /// <summary>
        /// Gets or sets the flag that indicates whether the alert rule is enabled.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.isEnabled")]
        public bool? IsEnabled {get; set; }

        /// <summary>
        /// Gets or sets the condition that results in the alert rule being activated.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.condition")]
        public RuleCondition Condition {get; set; }

        /// <summary>
        /// Gets or sets action that is performed when the alert rule becomes active,
        /// and when an alert condition is resolved.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.action")]
        public RuleAction Action {get; set; }

        /// <summary>
        /// Gets or sets the array of actions that are performed when the alert rule
        /// becomes active, and when an alert condition is resolved.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.actions")]
        public System.Collections.Generic.IList<RuleAction> Actions {get; set; }

        /// <summary>
        /// Gets last time the rule was updated in ISO8601 format.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.lastUpdatedTime")]
        public System.DateTime? LastUpdatedTime {get; private set; }
    }
}