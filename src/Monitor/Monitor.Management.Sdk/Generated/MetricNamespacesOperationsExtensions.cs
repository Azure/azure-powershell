// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.
namespace Microsoft.Azure.Management.Monitor
{
    using Microsoft.Rest.Azure;
    using Models;

    /// <summary>
    /// Extension methods for MetricNamespacesOperations
    /// </summary>
    public static partial class MetricNamespacesOperationsExtensions
    {
        /// <summary>
        /// Lists the metric namespaces for the resource.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='resourceUri'>
        /// The identifier of the resource.
        /// </param>
        /// <param name='startTime'>
        /// The ISO 8601 conform Date start time from which to query for metric
        /// namespaces.
        /// </param>
        public static System.Collections.Generic.IEnumerable<MetricNamespace> List(this IMetricNamespacesOperations operations, string resourceUri, string startTime = default(string))
        {
                return ((IMetricNamespacesOperations)operations).ListAsync(resourceUri, startTime).GetAwaiter().GetResult();
        }

        /// <summary>
        /// Lists the metric namespaces for the resource.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='resourceUri'>
        /// The identifier of the resource.
        /// </param>
        /// <param name='startTime'>
        /// The ISO 8601 conform Date start time from which to query for metric
        /// namespaces.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        public static async System.Threading.Tasks.Task<System.Collections.Generic.IEnumerable<MetricNamespace>> ListAsync(this IMetricNamespacesOperations operations, string resourceUri, string startTime = default(string), System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            using (var _result = await operations.ListWithHttpMessagesAsync(resourceUri, startTime, null, cancellationToken).ConfigureAwait(false))
            {
                return _result.Body;
            }
        }
    }
}
