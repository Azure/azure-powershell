// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Monitor.Autoscale.Models.Api20221001
{
    using static Microsoft.Azure.PowerShell.Cmdlets.Monitor.Autoscale.Runtime.Extensions;

    /// <summary>
    /// The repeating times at which this profile begins. This element is not used if the FixedDate element is used.
    /// </summary>
    public partial class Recurrence :
        Microsoft.Azure.PowerShell.Cmdlets.Monitor.Autoscale.Models.Api20221001.IRecurrence,
        Microsoft.Azure.PowerShell.Cmdlets.Monitor.Autoscale.Models.Api20221001.IRecurrenceInternal
    {

        /// <summary>Backing field for <see cref="Frequency" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Monitor.Autoscale.Support.RecurrenceFrequency _frequency;

        /// <summary>
        /// the recurrence frequency. How often the schedule profile should take effect. This value must be Week, meaning each week
        /// will have the same set of profiles. For example, to set a daily schedule, set **schedule** to every day of the week. The
        /// frequency property specifies that the schedule is repeated weekly.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Monitor.Autoscale.Origin(Microsoft.Azure.PowerShell.Cmdlets.Monitor.Autoscale.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.Monitor.Autoscale.Support.RecurrenceFrequency Frequency { get => this._frequency; set => this._frequency = value; }

        /// <summary>Internal Acessors for Schedule</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Monitor.Autoscale.Models.Api20221001.IRecurrentSchedule Microsoft.Azure.PowerShell.Cmdlets.Monitor.Autoscale.Models.Api20221001.IRecurrenceInternal.Schedule { get => (this._schedule = this._schedule ?? new Microsoft.Azure.PowerShell.Cmdlets.Monitor.Autoscale.Models.Api20221001.RecurrentSchedule()); set { {_schedule = value;} } }

        /// <summary>Backing field for <see cref="Schedule" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Monitor.Autoscale.Models.Api20221001.IRecurrentSchedule _schedule;

        /// <summary>the scheduling constraints for when the profile begins.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Monitor.Autoscale.Origin(Microsoft.Azure.PowerShell.Cmdlets.Monitor.Autoscale.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Monitor.Autoscale.Models.Api20221001.IRecurrentSchedule Schedule { get => (this._schedule = this._schedule ?? new Microsoft.Azure.PowerShell.Cmdlets.Monitor.Autoscale.Models.Api20221001.RecurrentSchedule()); set => this._schedule = value; }

        /// <summary>
        /// the collection of days that the profile takes effect on. Possible values are Sunday through Saturday.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Monitor.Autoscale.Origin(Microsoft.Azure.PowerShell.Cmdlets.Monitor.Autoscale.PropertyOrigin.Inlined)]
        public string[] ScheduleDay { get => ((Microsoft.Azure.PowerShell.Cmdlets.Monitor.Autoscale.Models.Api20221001.IRecurrentScheduleInternal)Schedule).Day; set => ((Microsoft.Azure.PowerShell.Cmdlets.Monitor.Autoscale.Models.Api20221001.IRecurrentScheduleInternal)Schedule).Day = value ; }

        /// <summary>
        /// A collection of hours that the profile takes effect on. Values supported are 0 to 23 on the 24-hour clock (AM/PM times
        /// are not supported).
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Monitor.Autoscale.Origin(Microsoft.Azure.PowerShell.Cmdlets.Monitor.Autoscale.PropertyOrigin.Inlined)]
        public int[] ScheduleHour { get => ((Microsoft.Azure.PowerShell.Cmdlets.Monitor.Autoscale.Models.Api20221001.IRecurrentScheduleInternal)Schedule).Hour; set => ((Microsoft.Azure.PowerShell.Cmdlets.Monitor.Autoscale.Models.Api20221001.IRecurrentScheduleInternal)Schedule).Hour = value ; }

        /// <summary>A collection of minutes at which the profile takes effect at.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Monitor.Autoscale.Origin(Microsoft.Azure.PowerShell.Cmdlets.Monitor.Autoscale.PropertyOrigin.Inlined)]
        public int[] ScheduleMinute { get => ((Microsoft.Azure.PowerShell.Cmdlets.Monitor.Autoscale.Models.Api20221001.IRecurrentScheduleInternal)Schedule).Minute; set => ((Microsoft.Azure.PowerShell.Cmdlets.Monitor.Autoscale.Models.Api20221001.IRecurrentScheduleInternal)Schedule).Minute = value ; }

        /// <summary>
        /// the timezone for the hours of the profile. Some examples of valid time zones are: Dateline Standard Time, UTC-11, Hawaiian
        /// Standard Time, Alaskan Standard Time, Pacific Standard Time (Mexico), Pacific Standard Time, US Mountain Standard Time,
        /// Mountain Standard Time (Mexico), Mountain Standard Time, Central America Standard Time, Central Standard Time, Central
        /// Standard Time (Mexico), Canada Central Standard Time, SA Pacific Standard Time, Eastern Standard Time, US Eastern Standard
        /// Time, Venezuela Standard Time, Paraguay Standard Time, Atlantic Standard Time, Central Brazilian Standard Time, SA Western
        /// Standard Time, Pacific SA Standard Time, Newfoundland Standard Time, E. South America Standard Time, Argentina Standard
        /// Time, SA Eastern Standard Time, Greenland Standard Time, Montevideo Standard Time, Bahia Standard Time, UTC-02, Mid-Atlantic
        /// Standard Time, Azores Standard Time, Cape Verde Standard Time, Morocco Standard Time, UTC, GMT Standard Time, Greenwich
        /// Standard Time, W. Europe Standard Time, Central Europe Standard Time, Romance Standard Time, Central European Standard
        /// Time, W. Central Africa Standard Time, Namibia Standard Time, Jordan Standard Time, GTB Standard Time, Middle East Standard
        /// Time, Egypt Standard Time, Syria Standard Time, E. Europe Standard Time, South Africa Standard Time, FLE Standard Time,
        /// Turkey Standard Time, Israel Standard Time, Kaliningrad Standard Time, Libya Standard Time, Arabic Standard Time, Arab
        /// Standard Time, Belarus Standard Time, Russian Standard Time, E. Africa Standard Time, Iran Standard Time, Arabian Standard
        /// Time, Azerbaijan Standard Time, Russia Time Zone 3, Mauritius Standard Time, Georgian Standard Time, Caucasus Standard
        /// Time, Afghanistan Standard Time, West Asia Standard Time, Ekaterinburg Standard Time, Pakistan Standard Time, India Standard
        /// Time, Sri Lanka Standard Time, Nepal Standard Time, Central Asia Standard Time, Bangladesh Standard Time, N. Central Asia
        /// Standard Time, Myanmar Standard Time, SE Asia Standard Time, North Asia Standard Time, China Standard Time, North Asia
        /// East Standard Time, Singapore Standard Time, W. Australia Standard Time, Taipei Standard Time, Ulaanbaatar Standard Time,
        /// Tokyo Standard Time, Korea Standard Time, Yakutsk Standard Time, Cen. Australia Standard Time, AUS Central Standard Time,
        /// E. Australia Standard Time, AUS Eastern Standard Time, West Pacific Standard Time, Tasmania Standard Time, Magadan Standard
        /// Time, Vladivostok Standard Time, Russia Time Zone 10, Central Pacific Standard Time, Russia Time Zone 11, New Zealand
        /// Standard Time, UTC+12, Fiji Standard Time, Kamchatka Standard Time, Tonga Standard Time, Samoa Standard Time, Line Islands
        /// Standard Time
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Monitor.Autoscale.Origin(Microsoft.Azure.PowerShell.Cmdlets.Monitor.Autoscale.PropertyOrigin.Inlined)]
        public string ScheduleTimeZone { get => ((Microsoft.Azure.PowerShell.Cmdlets.Monitor.Autoscale.Models.Api20221001.IRecurrentScheduleInternal)Schedule).TimeZone; set => ((Microsoft.Azure.PowerShell.Cmdlets.Monitor.Autoscale.Models.Api20221001.IRecurrentScheduleInternal)Schedule).TimeZone = value ; }

        /// <summary>Creates an new <see cref="Recurrence" /> instance.</summary>
        public Recurrence()
        {

        }
    }
    /// The repeating times at which this profile begins. This element is not used if the FixedDate element is used.
    public partial interface IRecurrence :
        Microsoft.Azure.PowerShell.Cmdlets.Monitor.Autoscale.Runtime.IJsonSerializable
    {
        /// <summary>
        /// the recurrence frequency. How often the schedule profile should take effect. This value must be Week, meaning each week
        /// will have the same set of profiles. For example, to set a daily schedule, set **schedule** to every day of the week. The
        /// frequency property specifies that the schedule is repeated weekly.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Monitor.Autoscale.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"the recurrence frequency. How often the schedule profile should take effect. This value must be Week, meaning each week will have the same set of profiles. For example, to set a daily schedule, set **schedule** to every day of the week. The frequency property specifies that the schedule is repeated weekly.",
        SerializedName = @"frequency",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Monitor.Autoscale.Support.RecurrenceFrequency) })]
        Microsoft.Azure.PowerShell.Cmdlets.Monitor.Autoscale.Support.RecurrenceFrequency Frequency { get; set; }
        /// <summary>
        /// the collection of days that the profile takes effect on. Possible values are Sunday through Saturday.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Monitor.Autoscale.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"the collection of days that the profile takes effect on. Possible values are Sunday through Saturday.",
        SerializedName = @"days",
        PossibleTypes = new [] { typeof(string) })]
        string[] ScheduleDay { get; set; }
        /// <summary>
        /// A collection of hours that the profile takes effect on. Values supported are 0 to 23 on the 24-hour clock (AM/PM times
        /// are not supported).
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Monitor.Autoscale.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"A collection of hours that the profile takes effect on. Values supported are 0 to 23 on the 24-hour clock (AM/PM times are not supported).",
        SerializedName = @"hours",
        PossibleTypes = new [] { typeof(int) })]
        int[] ScheduleHour { get; set; }
        /// <summary>A collection of minutes at which the profile takes effect at.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Monitor.Autoscale.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"A collection of minutes at which the profile takes effect at.",
        SerializedName = @"minutes",
        PossibleTypes = new [] { typeof(int) })]
        int[] ScheduleMinute { get; set; }
        /// <summary>
        /// the timezone for the hours of the profile. Some examples of valid time zones are: Dateline Standard Time, UTC-11, Hawaiian
        /// Standard Time, Alaskan Standard Time, Pacific Standard Time (Mexico), Pacific Standard Time, US Mountain Standard Time,
        /// Mountain Standard Time (Mexico), Mountain Standard Time, Central America Standard Time, Central Standard Time, Central
        /// Standard Time (Mexico), Canada Central Standard Time, SA Pacific Standard Time, Eastern Standard Time, US Eastern Standard
        /// Time, Venezuela Standard Time, Paraguay Standard Time, Atlantic Standard Time, Central Brazilian Standard Time, SA Western
        /// Standard Time, Pacific SA Standard Time, Newfoundland Standard Time, E. South America Standard Time, Argentina Standard
        /// Time, SA Eastern Standard Time, Greenland Standard Time, Montevideo Standard Time, Bahia Standard Time, UTC-02, Mid-Atlantic
        /// Standard Time, Azores Standard Time, Cape Verde Standard Time, Morocco Standard Time, UTC, GMT Standard Time, Greenwich
        /// Standard Time, W. Europe Standard Time, Central Europe Standard Time, Romance Standard Time, Central European Standard
        /// Time, W. Central Africa Standard Time, Namibia Standard Time, Jordan Standard Time, GTB Standard Time, Middle East Standard
        /// Time, Egypt Standard Time, Syria Standard Time, E. Europe Standard Time, South Africa Standard Time, FLE Standard Time,
        /// Turkey Standard Time, Israel Standard Time, Kaliningrad Standard Time, Libya Standard Time, Arabic Standard Time, Arab
        /// Standard Time, Belarus Standard Time, Russian Standard Time, E. Africa Standard Time, Iran Standard Time, Arabian Standard
        /// Time, Azerbaijan Standard Time, Russia Time Zone 3, Mauritius Standard Time, Georgian Standard Time, Caucasus Standard
        /// Time, Afghanistan Standard Time, West Asia Standard Time, Ekaterinburg Standard Time, Pakistan Standard Time, India Standard
        /// Time, Sri Lanka Standard Time, Nepal Standard Time, Central Asia Standard Time, Bangladesh Standard Time, N. Central Asia
        /// Standard Time, Myanmar Standard Time, SE Asia Standard Time, North Asia Standard Time, China Standard Time, North Asia
        /// East Standard Time, Singapore Standard Time, W. Australia Standard Time, Taipei Standard Time, Ulaanbaatar Standard Time,
        /// Tokyo Standard Time, Korea Standard Time, Yakutsk Standard Time, Cen. Australia Standard Time, AUS Central Standard Time,
        /// E. Australia Standard Time, AUS Eastern Standard Time, West Pacific Standard Time, Tasmania Standard Time, Magadan Standard
        /// Time, Vladivostok Standard Time, Russia Time Zone 10, Central Pacific Standard Time, Russia Time Zone 11, New Zealand
        /// Standard Time, UTC+12, Fiji Standard Time, Kamchatka Standard Time, Tonga Standard Time, Samoa Standard Time, Line Islands
        /// Standard Time
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Monitor.Autoscale.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"the timezone for the hours of the profile. Some examples of valid time zones are: Dateline Standard Time, UTC-11, Hawaiian Standard Time, Alaskan Standard Time, Pacific Standard Time (Mexico), Pacific Standard Time, US Mountain Standard Time, Mountain Standard Time (Mexico), Mountain Standard Time, Central America Standard Time, Central Standard Time, Central Standard Time (Mexico), Canada Central Standard Time, SA Pacific Standard Time, Eastern Standard Time, US Eastern Standard Time, Venezuela Standard Time, Paraguay Standard Time, Atlantic Standard Time, Central Brazilian Standard Time, SA Western Standard Time, Pacific SA Standard Time, Newfoundland Standard Time, E. South America Standard Time, Argentina Standard Time, SA Eastern Standard Time, Greenland Standard Time, Montevideo Standard Time, Bahia Standard Time, UTC-02, Mid-Atlantic Standard Time, Azores Standard Time, Cape Verde Standard Time, Morocco Standard Time, UTC, GMT Standard Time, Greenwich Standard Time, W. Europe Standard Time, Central Europe Standard Time, Romance Standard Time, Central European Standard Time, W. Central Africa Standard Time, Namibia Standard Time, Jordan Standard Time, GTB Standard Time, Middle East Standard Time, Egypt Standard Time, Syria Standard Time, E. Europe Standard Time, South Africa Standard Time, FLE Standard Time, Turkey Standard Time, Israel Standard Time, Kaliningrad Standard Time, Libya Standard Time, Arabic Standard Time, Arab Standard Time, Belarus Standard Time, Russian Standard Time, E. Africa Standard Time, Iran Standard Time, Arabian Standard Time, Azerbaijan Standard Time, Russia Time Zone 3, Mauritius Standard Time, Georgian Standard Time, Caucasus Standard Time, Afghanistan Standard Time, West Asia Standard Time, Ekaterinburg Standard Time, Pakistan Standard Time, India Standard Time, Sri Lanka Standard Time, Nepal Standard Time, Central Asia Standard Time, Bangladesh Standard Time, N. Central Asia Standard Time, Myanmar Standard Time, SE Asia Standard Time, North Asia Standard Time, China Standard Time, North Asia East Standard Time, Singapore Standard Time, W. Australia Standard Time, Taipei Standard Time, Ulaanbaatar Standard Time, Tokyo Standard Time, Korea Standard Time, Yakutsk Standard Time, Cen. Australia Standard Time, AUS Central Standard Time, E. Australia Standard Time, AUS Eastern Standard Time, West Pacific Standard Time, Tasmania Standard Time, Magadan Standard Time, Vladivostok Standard Time, Russia Time Zone 10, Central Pacific Standard Time, Russia Time Zone 11, New Zealand Standard Time, UTC+12, Fiji Standard Time, Kamchatka Standard Time, Tonga Standard Time, Samoa Standard Time, Line Islands Standard Time",
        SerializedName = @"timeZone",
        PossibleTypes = new [] { typeof(string) })]
        string ScheduleTimeZone { get; set; }

    }
    /// The repeating times at which this profile begins. This element is not used if the FixedDate element is used.
    internal partial interface IRecurrenceInternal

    {
        /// <summary>
        /// the recurrence frequency. How often the schedule profile should take effect. This value must be Week, meaning each week
        /// will have the same set of profiles. For example, to set a daily schedule, set **schedule** to every day of the week. The
        /// frequency property specifies that the schedule is repeated weekly.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Monitor.Autoscale.Support.RecurrenceFrequency Frequency { get; set; }
        /// <summary>the scheduling constraints for when the profile begins.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Monitor.Autoscale.Models.Api20221001.IRecurrentSchedule Schedule { get; set; }
        /// <summary>
        /// the collection of days that the profile takes effect on. Possible values are Sunday through Saturday.
        /// </summary>
        string[] ScheduleDay { get; set; }
        /// <summary>
        /// A collection of hours that the profile takes effect on. Values supported are 0 to 23 on the 24-hour clock (AM/PM times
        /// are not supported).
        /// </summary>
        int[] ScheduleHour { get; set; }
        /// <summary>A collection of minutes at which the profile takes effect at.</summary>
        int[] ScheduleMinute { get; set; }
        /// <summary>
        /// the timezone for the hours of the profile. Some examples of valid time zones are: Dateline Standard Time, UTC-11, Hawaiian
        /// Standard Time, Alaskan Standard Time, Pacific Standard Time (Mexico), Pacific Standard Time, US Mountain Standard Time,
        /// Mountain Standard Time (Mexico), Mountain Standard Time, Central America Standard Time, Central Standard Time, Central
        /// Standard Time (Mexico), Canada Central Standard Time, SA Pacific Standard Time, Eastern Standard Time, US Eastern Standard
        /// Time, Venezuela Standard Time, Paraguay Standard Time, Atlantic Standard Time, Central Brazilian Standard Time, SA Western
        /// Standard Time, Pacific SA Standard Time, Newfoundland Standard Time, E. South America Standard Time, Argentina Standard
        /// Time, SA Eastern Standard Time, Greenland Standard Time, Montevideo Standard Time, Bahia Standard Time, UTC-02, Mid-Atlantic
        /// Standard Time, Azores Standard Time, Cape Verde Standard Time, Morocco Standard Time, UTC, GMT Standard Time, Greenwich
        /// Standard Time, W. Europe Standard Time, Central Europe Standard Time, Romance Standard Time, Central European Standard
        /// Time, W. Central Africa Standard Time, Namibia Standard Time, Jordan Standard Time, GTB Standard Time, Middle East Standard
        /// Time, Egypt Standard Time, Syria Standard Time, E. Europe Standard Time, South Africa Standard Time, FLE Standard Time,
        /// Turkey Standard Time, Israel Standard Time, Kaliningrad Standard Time, Libya Standard Time, Arabic Standard Time, Arab
        /// Standard Time, Belarus Standard Time, Russian Standard Time, E. Africa Standard Time, Iran Standard Time, Arabian Standard
        /// Time, Azerbaijan Standard Time, Russia Time Zone 3, Mauritius Standard Time, Georgian Standard Time, Caucasus Standard
        /// Time, Afghanistan Standard Time, West Asia Standard Time, Ekaterinburg Standard Time, Pakistan Standard Time, India Standard
        /// Time, Sri Lanka Standard Time, Nepal Standard Time, Central Asia Standard Time, Bangladesh Standard Time, N. Central Asia
        /// Standard Time, Myanmar Standard Time, SE Asia Standard Time, North Asia Standard Time, China Standard Time, North Asia
        /// East Standard Time, Singapore Standard Time, W. Australia Standard Time, Taipei Standard Time, Ulaanbaatar Standard Time,
        /// Tokyo Standard Time, Korea Standard Time, Yakutsk Standard Time, Cen. Australia Standard Time, AUS Central Standard Time,
        /// E. Australia Standard Time, AUS Eastern Standard Time, West Pacific Standard Time, Tasmania Standard Time, Magadan Standard
        /// Time, Vladivostok Standard Time, Russia Time Zone 10, Central Pacific Standard Time, Russia Time Zone 11, New Zealand
        /// Standard Time, UTC+12, Fiji Standard Time, Kamchatka Standard Time, Tonga Standard Time, Samoa Standard Time, Line Islands
        /// Standard Time
        /// </summary>
        string ScheduleTimeZone { get; set; }

    }
}