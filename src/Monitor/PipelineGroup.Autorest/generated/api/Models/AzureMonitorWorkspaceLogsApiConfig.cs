// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Monitor.PipelineGroup.Models
{
    using static Microsoft.Azure.PowerShell.Cmdlets.Monitor.PipelineGroup.Runtime.Extensions;

    /// <summary>Azure Monitor Workspace Logs Api configurations.</summary>
    public partial class AzureMonitorWorkspaceLogsApiConfig :
        Microsoft.Azure.PowerShell.Cmdlets.Monitor.PipelineGroup.Models.IAzureMonitorWorkspaceLogsApiConfig,
        Microsoft.Azure.PowerShell.Cmdlets.Monitor.PipelineGroup.Models.IAzureMonitorWorkspaceLogsApiConfigInternal
    {

        /// <summary>Backing field for <see cref="DataCollectionEndpointUrl" /> property.</summary>
        private string _dataCollectionEndpointUrl;

        /// <summary>Data collection endpoint ingestion url.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Monitor.PipelineGroup.Origin(Microsoft.Azure.PowerShell.Cmdlets.Monitor.PipelineGroup.PropertyOrigin.Owned)]
        public string DataCollectionEndpointUrl { get => this._dataCollectionEndpointUrl; set => this._dataCollectionEndpointUrl = value; }

        /// <summary>Backing field for <see cref="DataCollectionRule" /> property.</summary>
        private string _dataCollectionRule;

        /// <summary>Data Collection Rule (DCR) immutable id.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Monitor.PipelineGroup.Origin(Microsoft.Azure.PowerShell.Cmdlets.Monitor.PipelineGroup.PropertyOrigin.Owned)]
        public string DataCollectionRule { get => this._dataCollectionRule; set => this._dataCollectionRule = value; }

        /// <summary>Internal Acessors for Schema</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Monitor.PipelineGroup.Models.ISchemaMap Microsoft.Azure.PowerShell.Cmdlets.Monitor.PipelineGroup.Models.IAzureMonitorWorkspaceLogsApiConfigInternal.Schema { get => (this._schema = this._schema ?? new Microsoft.Azure.PowerShell.Cmdlets.Monitor.PipelineGroup.Models.SchemaMap()); set { {_schema = value;} } }

        /// <summary>Backing field for <see cref="Schema" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Monitor.PipelineGroup.Models.ISchemaMap _schema;

        /// <summary>The schema mapping for incoming data.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Monitor.PipelineGroup.Origin(Microsoft.Azure.PowerShell.Cmdlets.Monitor.PipelineGroup.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Monitor.PipelineGroup.Models.ISchemaMap Schema { get => (this._schema = this._schema ?? new Microsoft.Azure.PowerShell.Cmdlets.Monitor.PipelineGroup.Models.SchemaMap()); set => this._schema = value; }

        /// <summary>Record Map.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Monitor.PipelineGroup.Origin(Microsoft.Azure.PowerShell.Cmdlets.Monitor.PipelineGroup.PropertyOrigin.Inlined)]
        public System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.Monitor.PipelineGroup.Models.IRecordMap> SchemaRecordMap { get => ((Microsoft.Azure.PowerShell.Cmdlets.Monitor.PipelineGroup.Models.ISchemaMapInternal)Schema).RecordMap; set => ((Microsoft.Azure.PowerShell.Cmdlets.Monitor.PipelineGroup.Models.ISchemaMapInternal)Schema).RecordMap = value ; }

        /// <summary>
        /// Resource Map captures information about the entity for which telemetry is recorded. For example, metrics exposed by a
        /// Kubernetes container can be linked to a resource that specifies the cluster, namespace, pod, and container name.Resource
        /// may capture an entire hierarchy of entity identification. It may describe the host in the cloud and specific container
        /// or an application running in the process.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Monitor.PipelineGroup.Origin(Microsoft.Azure.PowerShell.Cmdlets.Monitor.PipelineGroup.PropertyOrigin.Inlined)]
        public System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.Monitor.PipelineGroup.Models.IResourceMap> SchemaResourceMap { get => ((Microsoft.Azure.PowerShell.Cmdlets.Monitor.PipelineGroup.Models.ISchemaMapInternal)Schema).ResourceMap; set => ((Microsoft.Azure.PowerShell.Cmdlets.Monitor.PipelineGroup.Models.ISchemaMapInternal)Schema).ResourceMap = value ?? null /* arrayOf */; }

        /// <summary>
        /// A scope map is a logical unit of the application code with which the emitted telemetry can be associated.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Monitor.PipelineGroup.Origin(Microsoft.Azure.PowerShell.Cmdlets.Monitor.PipelineGroup.PropertyOrigin.Inlined)]
        public System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.Monitor.PipelineGroup.Models.IScopeMap> SchemaScopeMap { get => ((Microsoft.Azure.PowerShell.Cmdlets.Monitor.PipelineGroup.Models.ISchemaMapInternal)Schema).ScopeMap; set => ((Microsoft.Azure.PowerShell.Cmdlets.Monitor.PipelineGroup.Models.ISchemaMapInternal)Schema).ScopeMap = value ?? null /* arrayOf */; }

        /// <summary>Backing field for <see cref="Stream" /> property.</summary>
        private string _stream;

        /// <summary>
        /// Stream name in destination. Azure Monitor stream is related to the destination table.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Monitor.PipelineGroup.Origin(Microsoft.Azure.PowerShell.Cmdlets.Monitor.PipelineGroup.PropertyOrigin.Owned)]
        public string Stream { get => this._stream; set => this._stream = value; }

        /// <summary>Creates an new <see cref="AzureMonitorWorkspaceLogsApiConfig" /> instance.</summary>
        public AzureMonitorWorkspaceLogsApiConfig()
        {

        }
    }
    /// Azure Monitor Workspace Logs Api configurations.
    public partial interface IAzureMonitorWorkspaceLogsApiConfig :
        Microsoft.Azure.PowerShell.Cmdlets.Monitor.PipelineGroup.Runtime.IJsonSerializable
    {
        /// <summary>Data collection endpoint ingestion url.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Monitor.PipelineGroup.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Data collection endpoint ingestion url.",
        SerializedName = @"dataCollectionEndpointUrl",
        PossibleTypes = new [] { typeof(string) })]
        string DataCollectionEndpointUrl { get; set; }
        /// <summary>Data Collection Rule (DCR) immutable id.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Monitor.PipelineGroup.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Data Collection Rule (DCR) immutable id.",
        SerializedName = @"dataCollectionRule",
        PossibleTypes = new [] { typeof(string) })]
        string DataCollectionRule { get; set; }
        /// <summary>Record Map.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Monitor.PipelineGroup.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Record Map.",
        SerializedName = @"recordMap",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Monitor.PipelineGroup.Models.IRecordMap) })]
        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.Monitor.PipelineGroup.Models.IRecordMap> SchemaRecordMap { get; set; }
        /// <summary>
        /// Resource Map captures information about the entity for which telemetry is recorded. For example, metrics exposed by a
        /// Kubernetes container can be linked to a resource that specifies the cluster, namespace, pod, and container name.Resource
        /// may capture an entire hierarchy of entity identification. It may describe the host in the cloud and specific container
        /// or an application running in the process.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Monitor.PipelineGroup.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Resource Map captures information about the entity for which telemetry is recorded. For example, metrics exposed by a Kubernetes container can be linked to a resource that specifies the cluster, namespace, pod, and container name.Resource may capture an entire hierarchy of entity identification. It may describe the host in the cloud and specific container or an application running in the process.",
        SerializedName = @"resourceMap",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Monitor.PipelineGroup.Models.IResourceMap) })]
        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.Monitor.PipelineGroup.Models.IResourceMap> SchemaResourceMap { get; set; }
        /// <summary>
        /// A scope map is a logical unit of the application code with which the emitted telemetry can be associated.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Monitor.PipelineGroup.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"A scope map is a logical unit of the application code with which the emitted telemetry can be associated.",
        SerializedName = @"scopeMap",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Monitor.PipelineGroup.Models.IScopeMap) })]
        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.Monitor.PipelineGroup.Models.IScopeMap> SchemaScopeMap { get; set; }
        /// <summary>
        /// Stream name in destination. Azure Monitor stream is related to the destination table.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Monitor.PipelineGroup.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Stream name in destination. Azure Monitor stream is related to the destination table.",
        SerializedName = @"stream",
        PossibleTypes = new [] { typeof(string) })]
        string Stream { get; set; }

    }
    /// Azure Monitor Workspace Logs Api configurations.
    internal partial interface IAzureMonitorWorkspaceLogsApiConfigInternal

    {
        /// <summary>Data collection endpoint ingestion url.</summary>
        string DataCollectionEndpointUrl { get; set; }
        /// <summary>Data Collection Rule (DCR) immutable id.</summary>
        string DataCollectionRule { get; set; }
        /// <summary>The schema mapping for incoming data.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Monitor.PipelineGroup.Models.ISchemaMap Schema { get; set; }
        /// <summary>Record Map.</summary>
        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.Monitor.PipelineGroup.Models.IRecordMap> SchemaRecordMap { get; set; }
        /// <summary>
        /// Resource Map captures information about the entity for which telemetry is recorded. For example, metrics exposed by a
        /// Kubernetes container can be linked to a resource that specifies the cluster, namespace, pod, and container name.Resource
        /// may capture an entire hierarchy of entity identification. It may describe the host in the cloud and specific container
        /// or an application running in the process.
        /// </summary>
        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.Monitor.PipelineGroup.Models.IResourceMap> SchemaResourceMap { get; set; }
        /// <summary>
        /// A scope map is a logical unit of the application code with which the emitted telemetry can be associated.
        /// </summary>
        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.Monitor.PipelineGroup.Models.IScopeMap> SchemaScopeMap { get; set; }
        /// <summary>
        /// Stream name in destination. Azure Monitor stream is related to the destination table.
        /// </summary>
        string Stream { get; set; }

    }
}