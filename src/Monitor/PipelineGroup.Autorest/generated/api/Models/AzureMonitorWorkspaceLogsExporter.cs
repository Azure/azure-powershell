// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Monitor.PipelineGroup.Models
{
    using static Microsoft.Azure.PowerShell.Cmdlets.Monitor.PipelineGroup.Runtime.Extensions;

    /// <summary>Azure Monitor Workspace Logs specific configurations.</summary>
    public partial class AzureMonitorWorkspaceLogsExporter :
        Microsoft.Azure.PowerShell.Cmdlets.Monitor.PipelineGroup.Models.IAzureMonitorWorkspaceLogsExporter,
        Microsoft.Azure.PowerShell.Cmdlets.Monitor.PipelineGroup.Models.IAzureMonitorWorkspaceLogsExporterInternal
    {

        /// <summary>Backing field for <see cref="Api" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Monitor.PipelineGroup.Models.IAzureMonitorWorkspaceLogsApiConfig _api;

        /// <summary>API configurations for Azure Monitor workspace exporter.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Monitor.PipelineGroup.Origin(Microsoft.Azure.PowerShell.Cmdlets.Monitor.PipelineGroup.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Monitor.PipelineGroup.Models.IAzureMonitorWorkspaceLogsApiConfig Api { get => (this._api = this._api ?? new Microsoft.Azure.PowerShell.Cmdlets.Monitor.PipelineGroup.Models.AzureMonitorWorkspaceLogsApiConfig()); set => this._api = value; }

        /// <summary>Data collection endpoint ingestion url.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Monitor.PipelineGroup.Origin(Microsoft.Azure.PowerShell.Cmdlets.Monitor.PipelineGroup.PropertyOrigin.Inlined)]
        public string ApiDataCollectionEndpointUrl { get => ((Microsoft.Azure.PowerShell.Cmdlets.Monitor.PipelineGroup.Models.IAzureMonitorWorkspaceLogsApiConfigInternal)Api).DataCollectionEndpointUrl; set => ((Microsoft.Azure.PowerShell.Cmdlets.Monitor.PipelineGroup.Models.IAzureMonitorWorkspaceLogsApiConfigInternal)Api).DataCollectionEndpointUrl = value ; }

        /// <summary>Data Collection Rule (DCR) immutable id.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Monitor.PipelineGroup.Origin(Microsoft.Azure.PowerShell.Cmdlets.Monitor.PipelineGroup.PropertyOrigin.Inlined)]
        public string ApiDataCollectionRule { get => ((Microsoft.Azure.PowerShell.Cmdlets.Monitor.PipelineGroup.Models.IAzureMonitorWorkspaceLogsApiConfigInternal)Api).DataCollectionRule; set => ((Microsoft.Azure.PowerShell.Cmdlets.Monitor.PipelineGroup.Models.IAzureMonitorWorkspaceLogsApiConfigInternal)Api).DataCollectionRule = value ; }

        /// <summary>
        /// Stream name in destination. Azure Monitor stream is related to the destination table.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Monitor.PipelineGroup.Origin(Microsoft.Azure.PowerShell.Cmdlets.Monitor.PipelineGroup.PropertyOrigin.Inlined)]
        public string ApiStream { get => ((Microsoft.Azure.PowerShell.Cmdlets.Monitor.PipelineGroup.Models.IAzureMonitorWorkspaceLogsApiConfigInternal)Api).Stream; set => ((Microsoft.Azure.PowerShell.Cmdlets.Monitor.PipelineGroup.Models.IAzureMonitorWorkspaceLogsApiConfigInternal)Api).Stream = value ; }

        /// <summary>Backing field for <see cref="Cache" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Monitor.PipelineGroup.Models.ICacheConfiguration _cache;

        /// <summary>Cache configurations.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Monitor.PipelineGroup.Origin(Microsoft.Azure.PowerShell.Cmdlets.Monitor.PipelineGroup.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Monitor.PipelineGroup.Models.ICacheConfiguration Cache { get => (this._cache = this._cache ?? new Microsoft.Azure.PowerShell.Cmdlets.Monitor.PipelineGroup.Models.CacheConfiguration()); set => this._cache = value; }

        /// <summary>Max storage usage in megabytes.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Monitor.PipelineGroup.Origin(Microsoft.Azure.PowerShell.Cmdlets.Monitor.PipelineGroup.PropertyOrigin.Inlined)]
        public int? CacheMaxStorageUsage { get => ((Microsoft.Azure.PowerShell.Cmdlets.Monitor.PipelineGroup.Models.ICacheConfigurationInternal)Cache).MaxStorageUsage; set => ((Microsoft.Azure.PowerShell.Cmdlets.Monitor.PipelineGroup.Models.ICacheConfigurationInternal)Cache).MaxStorageUsage = value ?? default(int); }

        /// <summary>Retention period in minutes.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Monitor.PipelineGroup.Origin(Microsoft.Azure.PowerShell.Cmdlets.Monitor.PipelineGroup.PropertyOrigin.Inlined)]
        public int? CacheRetentionPeriod { get => ((Microsoft.Azure.PowerShell.Cmdlets.Monitor.PipelineGroup.Models.ICacheConfigurationInternal)Cache).RetentionPeriod; set => ((Microsoft.Azure.PowerShell.Cmdlets.Monitor.PipelineGroup.Models.ICacheConfigurationInternal)Cache).RetentionPeriod = value ?? default(int); }

        /// <summary>Backing field for <see cref="Concurrency" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Monitor.PipelineGroup.Models.IConcurrencyConfiguration _concurrency;

        /// <summary>Concurrency configuration for the exporter.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Monitor.PipelineGroup.Origin(Microsoft.Azure.PowerShell.Cmdlets.Monitor.PipelineGroup.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Monitor.PipelineGroup.Models.IConcurrencyConfiguration Concurrency { get => (this._concurrency = this._concurrency ?? new Microsoft.Azure.PowerShell.Cmdlets.Monitor.PipelineGroup.Models.ConcurrencyConfiguration()); set => this._concurrency = value; }

        /// <summary>Size of the queue for log batches.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Monitor.PipelineGroup.Origin(Microsoft.Azure.PowerShell.Cmdlets.Monitor.PipelineGroup.PropertyOrigin.Inlined)]
        public int? ConcurrencyBatchQueueSize { get => ((Microsoft.Azure.PowerShell.Cmdlets.Monitor.PipelineGroup.Models.IConcurrencyConfigurationInternal)Concurrency).BatchQueueSize; set => ((Microsoft.Azure.PowerShell.Cmdlets.Monitor.PipelineGroup.Models.IConcurrencyConfigurationInternal)Concurrency).BatchQueueSize = value ?? default(int); }

        /// <summary>Number of parallel workers processing the log queues.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Monitor.PipelineGroup.Origin(Microsoft.Azure.PowerShell.Cmdlets.Monitor.PipelineGroup.PropertyOrigin.Inlined)]
        public int? ConcurrencyWorkerCount { get => ((Microsoft.Azure.PowerShell.Cmdlets.Monitor.PipelineGroup.Models.IConcurrencyConfigurationInternal)Concurrency).WorkerCount; set => ((Microsoft.Azure.PowerShell.Cmdlets.Monitor.PipelineGroup.Models.IConcurrencyConfigurationInternal)Concurrency).WorkerCount = value ?? default(int); }

        /// <summary>Internal Acessors for Api</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Monitor.PipelineGroup.Models.IAzureMonitorWorkspaceLogsApiConfig Microsoft.Azure.PowerShell.Cmdlets.Monitor.PipelineGroup.Models.IAzureMonitorWorkspaceLogsExporterInternal.Api { get => (this._api = this._api ?? new Microsoft.Azure.PowerShell.Cmdlets.Monitor.PipelineGroup.Models.AzureMonitorWorkspaceLogsApiConfig()); set { {_api = value;} } }

        /// <summary>Internal Acessors for ApiSchema</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Monitor.PipelineGroup.Models.ISchemaMap Microsoft.Azure.PowerShell.Cmdlets.Monitor.PipelineGroup.Models.IAzureMonitorWorkspaceLogsExporterInternal.ApiSchema { get => ((Microsoft.Azure.PowerShell.Cmdlets.Monitor.PipelineGroup.Models.IAzureMonitorWorkspaceLogsApiConfigInternal)Api).Schema; set => ((Microsoft.Azure.PowerShell.Cmdlets.Monitor.PipelineGroup.Models.IAzureMonitorWorkspaceLogsApiConfigInternal)Api).Schema = value; }

        /// <summary>Internal Acessors for Cache</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Monitor.PipelineGroup.Models.ICacheConfiguration Microsoft.Azure.PowerShell.Cmdlets.Monitor.PipelineGroup.Models.IAzureMonitorWorkspaceLogsExporterInternal.Cache { get => (this._cache = this._cache ?? new Microsoft.Azure.PowerShell.Cmdlets.Monitor.PipelineGroup.Models.CacheConfiguration()); set { {_cache = value;} } }

        /// <summary>Internal Acessors for Concurrency</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Monitor.PipelineGroup.Models.IConcurrencyConfiguration Microsoft.Azure.PowerShell.Cmdlets.Monitor.PipelineGroup.Models.IAzureMonitorWorkspaceLogsExporterInternal.Concurrency { get => (this._concurrency = this._concurrency ?? new Microsoft.Azure.PowerShell.Cmdlets.Monitor.PipelineGroup.Models.ConcurrencyConfiguration()); set { {_concurrency = value;} } }

        /// <summary>Record Map.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Monitor.PipelineGroup.Origin(Microsoft.Azure.PowerShell.Cmdlets.Monitor.PipelineGroup.PropertyOrigin.Inlined)]
        public System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.Monitor.PipelineGroup.Models.IRecordMap> SchemaRecordMap { get => ((Microsoft.Azure.PowerShell.Cmdlets.Monitor.PipelineGroup.Models.IAzureMonitorWorkspaceLogsApiConfigInternal)Api).SchemaRecordMap; set => ((Microsoft.Azure.PowerShell.Cmdlets.Monitor.PipelineGroup.Models.IAzureMonitorWorkspaceLogsApiConfigInternal)Api).SchemaRecordMap = value ; }

        /// <summary>
        /// Resource Map captures information about the entity for which telemetry is recorded. For example, metrics exposed by a
        /// Kubernetes container can be linked to a resource that specifies the cluster, namespace, pod, and container name.Resource
        /// may capture an entire hierarchy of entity identification. It may describe the host in the cloud and specific container
        /// or an application running in the process.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Monitor.PipelineGroup.Origin(Microsoft.Azure.PowerShell.Cmdlets.Monitor.PipelineGroup.PropertyOrigin.Inlined)]
        public System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.Monitor.PipelineGroup.Models.IResourceMap> SchemaResourceMap { get => ((Microsoft.Azure.PowerShell.Cmdlets.Monitor.PipelineGroup.Models.IAzureMonitorWorkspaceLogsApiConfigInternal)Api).SchemaResourceMap; set => ((Microsoft.Azure.PowerShell.Cmdlets.Monitor.PipelineGroup.Models.IAzureMonitorWorkspaceLogsApiConfigInternal)Api).SchemaResourceMap = value ?? null /* arrayOf */; }

        /// <summary>
        /// A scope map is a logical unit of the application code with which the emitted telemetry can be associated.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Monitor.PipelineGroup.Origin(Microsoft.Azure.PowerShell.Cmdlets.Monitor.PipelineGroup.PropertyOrigin.Inlined)]
        public System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.Monitor.PipelineGroup.Models.IScopeMap> SchemaScopeMap { get => ((Microsoft.Azure.PowerShell.Cmdlets.Monitor.PipelineGroup.Models.IAzureMonitorWorkspaceLogsApiConfigInternal)Api).SchemaScopeMap; set => ((Microsoft.Azure.PowerShell.Cmdlets.Monitor.PipelineGroup.Models.IAzureMonitorWorkspaceLogsApiConfigInternal)Api).SchemaScopeMap = value ?? null /* arrayOf */; }

        /// <summary>Creates an new <see cref="AzureMonitorWorkspaceLogsExporter" /> instance.</summary>
        public AzureMonitorWorkspaceLogsExporter()
        {

        }
    }
    /// Azure Monitor Workspace Logs specific configurations.
    public partial interface IAzureMonitorWorkspaceLogsExporter :
        Microsoft.Azure.PowerShell.Cmdlets.Monitor.PipelineGroup.Runtime.IJsonSerializable
    {
        /// <summary>Data collection endpoint ingestion url.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Monitor.PipelineGroup.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Data collection endpoint ingestion url.",
        SerializedName = @"dataCollectionEndpointUrl",
        PossibleTypes = new [] { typeof(string) })]
        string ApiDataCollectionEndpointUrl { get; set; }
        /// <summary>Data Collection Rule (DCR) immutable id.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Monitor.PipelineGroup.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Data Collection Rule (DCR) immutable id.",
        SerializedName = @"dataCollectionRule",
        PossibleTypes = new [] { typeof(string) })]
        string ApiDataCollectionRule { get; set; }
        /// <summary>
        /// Stream name in destination. Azure Monitor stream is related to the destination table.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Monitor.PipelineGroup.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Stream name in destination. Azure Monitor stream is related to the destination table.",
        SerializedName = @"stream",
        PossibleTypes = new [] { typeof(string) })]
        string ApiStream { get; set; }
        /// <summary>Max storage usage in megabytes.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Monitor.PipelineGroup.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Max storage usage in megabytes.",
        SerializedName = @"maxStorageUsage",
        PossibleTypes = new [] { typeof(int) })]
        int? CacheMaxStorageUsage { get; set; }
        /// <summary>Retention period in minutes.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Monitor.PipelineGroup.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Retention period in minutes.",
        SerializedName = @"retentionPeriod",
        PossibleTypes = new [] { typeof(int) })]
        int? CacheRetentionPeriod { get; set; }
        /// <summary>Size of the queue for log batches.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Monitor.PipelineGroup.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Size of the queue for log batches.",
        SerializedName = @"batchQueueSize",
        PossibleTypes = new [] { typeof(int) })]
        int? ConcurrencyBatchQueueSize { get; set; }
        /// <summary>Number of parallel workers processing the log queues.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Monitor.PipelineGroup.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Number of parallel workers processing the log queues.",
        SerializedName = @"workerCount",
        PossibleTypes = new [] { typeof(int) })]
        int? ConcurrencyWorkerCount { get; set; }
        /// <summary>Record Map.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Monitor.PipelineGroup.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Record Map.",
        SerializedName = @"recordMap",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Monitor.PipelineGroup.Models.IRecordMap) })]
        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.Monitor.PipelineGroup.Models.IRecordMap> SchemaRecordMap { get; set; }
        /// <summary>
        /// Resource Map captures information about the entity for which telemetry is recorded. For example, metrics exposed by a
        /// Kubernetes container can be linked to a resource that specifies the cluster, namespace, pod, and container name.Resource
        /// may capture an entire hierarchy of entity identification. It may describe the host in the cloud and specific container
        /// or an application running in the process.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Monitor.PipelineGroup.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Resource Map captures information about the entity for which telemetry is recorded. For example, metrics exposed by a Kubernetes container can be linked to a resource that specifies the cluster, namespace, pod, and container name.Resource may capture an entire hierarchy of entity identification. It may describe the host in the cloud and specific container or an application running in the process.",
        SerializedName = @"resourceMap",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Monitor.PipelineGroup.Models.IResourceMap) })]
        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.Monitor.PipelineGroup.Models.IResourceMap> SchemaResourceMap { get; set; }
        /// <summary>
        /// A scope map is a logical unit of the application code with which the emitted telemetry can be associated.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Monitor.PipelineGroup.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"A scope map is a logical unit of the application code with which the emitted telemetry can be associated.",
        SerializedName = @"scopeMap",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Monitor.PipelineGroup.Models.IScopeMap) })]
        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.Monitor.PipelineGroup.Models.IScopeMap> SchemaScopeMap { get; set; }

    }
    /// Azure Monitor Workspace Logs specific configurations.
    internal partial interface IAzureMonitorWorkspaceLogsExporterInternal

    {
        /// <summary>API configurations for Azure Monitor workspace exporter.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Monitor.PipelineGroup.Models.IAzureMonitorWorkspaceLogsApiConfig Api { get; set; }
        /// <summary>Data collection endpoint ingestion url.</summary>
        string ApiDataCollectionEndpointUrl { get; set; }
        /// <summary>Data Collection Rule (DCR) immutable id.</summary>
        string ApiDataCollectionRule { get; set; }
        /// <summary>The schema mapping for incoming data.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Monitor.PipelineGroup.Models.ISchemaMap ApiSchema { get; set; }
        /// <summary>
        /// Stream name in destination. Azure Monitor stream is related to the destination table.
        /// </summary>
        string ApiStream { get; set; }
        /// <summary>Cache configurations.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Monitor.PipelineGroup.Models.ICacheConfiguration Cache { get; set; }
        /// <summary>Max storage usage in megabytes.</summary>
        int? CacheMaxStorageUsage { get; set; }
        /// <summary>Retention period in minutes.</summary>
        int? CacheRetentionPeriod { get; set; }
        /// <summary>Concurrency configuration for the exporter.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Monitor.PipelineGroup.Models.IConcurrencyConfiguration Concurrency { get; set; }
        /// <summary>Size of the queue for log batches.</summary>
        int? ConcurrencyBatchQueueSize { get; set; }
        /// <summary>Number of parallel workers processing the log queues.</summary>
        int? ConcurrencyWorkerCount { get; set; }
        /// <summary>Record Map.</summary>
        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.Monitor.PipelineGroup.Models.IRecordMap> SchemaRecordMap { get; set; }
        /// <summary>
        /// Resource Map captures information about the entity for which telemetry is recorded. For example, metrics exposed by a
        /// Kubernetes container can be linked to a resource that specifies the cluster, namespace, pod, and container name.Resource
        /// may capture an entire hierarchy of entity identification. It may describe the host in the cloud and specific container
        /// or an application running in the process.
        /// </summary>
        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.Monitor.PipelineGroup.Models.IResourceMap> SchemaResourceMap { get; set; }
        /// <summary>
        /// A scope map is a logical unit of the application code with which the emitted telemetry can be associated.
        /// </summary>
        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.Monitor.PipelineGroup.Models.IScopeMap> SchemaScopeMap { get; set; }

    }
}