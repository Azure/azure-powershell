// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Monitor.ActivityLogAlert.Models.Api20201001
{
    using static Microsoft.Azure.PowerShell.Cmdlets.Monitor.ActivityLogAlert.Runtime.Extensions;

    /// <summary>
    /// An Activity Log Alert rule condition that is met when all its member conditions are met.
    /// Each condition can be of one of the following types:
    /// __Important__: Each type has its unique subset of properties. Properties from different types CANNOT exist in one condition.
    /// * __Leaf Condition -__ must contain 'field' and either 'equals' or 'containsAny'.
    /// _Please note, 'anyOf' should __not__ be set in a Leaf Condition._
    /// * __AnyOf Condition -__ must contain __only__ 'anyOf' (which is an array of Leaf Conditions).
    /// _Please note, 'field', 'equals' and 'containsAny' should __not__ be set in an AnyOf Condition._
    /// </summary>
    public partial class AlertRuleAnyOfOrLeafCondition :
        Microsoft.Azure.PowerShell.Cmdlets.Monitor.ActivityLogAlert.Models.Api20201001.IAlertRuleAnyOfOrLeafCondition,
        Microsoft.Azure.PowerShell.Cmdlets.Monitor.ActivityLogAlert.Models.Api20201001.IAlertRuleAnyOfOrLeafConditionInternal,
        Microsoft.Azure.PowerShell.Cmdlets.Monitor.ActivityLogAlert.Runtime.IValidates
    {
        /// <summary>
        /// Backing field for Inherited model <see cref= "Microsoft.Azure.PowerShell.Cmdlets.Monitor.ActivityLogAlert.Models.Api20201001.IAlertRuleLeafCondition"
        /// />
        /// </summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Monitor.ActivityLogAlert.Models.Api20201001.IAlertRuleLeafCondition __alertRuleLeafCondition = new Microsoft.Azure.PowerShell.Cmdlets.Monitor.ActivityLogAlert.Models.Api20201001.AlertRuleLeafCondition();

        /// <summary>Backing field for <see cref="AnyOf" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Monitor.ActivityLogAlert.Models.Api20201001.IAlertRuleLeafCondition[] _anyOf;

        /// <summary>
        /// An Activity Log Alert rule condition that is met when at least one of its member leaf conditions are met.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Monitor.ActivityLogAlert.Origin(Microsoft.Azure.PowerShell.Cmdlets.Monitor.ActivityLogAlert.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.Monitor.ActivityLogAlert.Models.Api20201001.IAlertRuleLeafCondition[] AnyOf { get => this._anyOf; set => this._anyOf = value; }

        /// <summary>
        /// The value of the event's field will be compared to the values in this array (case-insensitive) to determine if the condition
        /// is met.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Monitor.ActivityLogAlert.Origin(Microsoft.Azure.PowerShell.Cmdlets.Monitor.ActivityLogAlert.PropertyOrigin.Inherited)]
        public string[] ContainsAny { get => ((Microsoft.Azure.PowerShell.Cmdlets.Monitor.ActivityLogAlert.Models.Api20201001.IAlertRuleLeafConditionInternal)__alertRuleLeafCondition).ContainsAny; set => ((Microsoft.Azure.PowerShell.Cmdlets.Monitor.ActivityLogAlert.Models.Api20201001.IAlertRuleLeafConditionInternal)__alertRuleLeafCondition).ContainsAny = value ?? null /* arrayOf */; }

        /// <summary>
        /// The value of the event's field will be compared to this value (case-insensitive) to determine if the condition is met.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Monitor.ActivityLogAlert.Origin(Microsoft.Azure.PowerShell.Cmdlets.Monitor.ActivityLogAlert.PropertyOrigin.Inherited)]
        public string Equal { get => ((Microsoft.Azure.PowerShell.Cmdlets.Monitor.ActivityLogAlert.Models.Api20201001.IAlertRuleLeafConditionInternal)__alertRuleLeafCondition).Equal; set => ((Microsoft.Azure.PowerShell.Cmdlets.Monitor.ActivityLogAlert.Models.Api20201001.IAlertRuleLeafConditionInternal)__alertRuleLeafCondition).Equal = value ?? null; }

        /// <summary>
        /// The name of the Activity Log event's field that this condition will examine.
        /// The possible values for this field are (case-insensitive): 'resourceId', 'category', 'caller', 'level', 'operationName',
        /// 'resourceGroup', 'resourceProvider', 'status', 'subStatus', 'resourceType', or anything beginning with 'properties'.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Monitor.ActivityLogAlert.Origin(Microsoft.Azure.PowerShell.Cmdlets.Monitor.ActivityLogAlert.PropertyOrigin.Inherited)]
        public string Field { get => ((Microsoft.Azure.PowerShell.Cmdlets.Monitor.ActivityLogAlert.Models.Api20201001.IAlertRuleLeafConditionInternal)__alertRuleLeafCondition).Field; set => ((Microsoft.Azure.PowerShell.Cmdlets.Monitor.ActivityLogAlert.Models.Api20201001.IAlertRuleLeafConditionInternal)__alertRuleLeafCondition).Field = value ?? null; }

        /// <summary>Creates an new <see cref="AlertRuleAnyOfOrLeafCondition" /> instance.</summary>
        public AlertRuleAnyOfOrLeafCondition()
        {

        }

        /// <summary>Validates that this object meets the validation criteria.</summary>
        /// <param name="eventListener">an <see cref="Microsoft.Azure.PowerShell.Cmdlets.Monitor.ActivityLogAlert.Runtime.IEventListener" /> instance that will receive validation
        /// events.</param>
        /// <returns>
        /// A <see cref = "global::System.Threading.Tasks.Task" /> that will be complete when validation is completed.
        /// </returns>
        public async global::System.Threading.Tasks.Task Validate(Microsoft.Azure.PowerShell.Cmdlets.Monitor.ActivityLogAlert.Runtime.IEventListener eventListener)
        {
            await eventListener.AssertNotNull(nameof(__alertRuleLeafCondition), __alertRuleLeafCondition);
            await eventListener.AssertObjectIsValid(nameof(__alertRuleLeafCondition), __alertRuleLeafCondition);
        }
    }
    /// An Activity Log Alert rule condition that is met when all its member conditions are met.
    /// Each condition can be of one of the following types:
    /// __Important__: Each type has its unique subset of properties. Properties from different types CANNOT exist in one condition.
    /// * __Leaf Condition -__ must contain 'field' and either 'equals' or 'containsAny'.
    /// _Please note, 'anyOf' should __not__ be set in a Leaf Condition._
    /// * __AnyOf Condition -__ must contain __only__ 'anyOf' (which is an array of Leaf Conditions).
    /// _Please note, 'field', 'equals' and 'containsAny' should __not__ be set in an AnyOf Condition._
    public partial interface IAlertRuleAnyOfOrLeafCondition :
        Microsoft.Azure.PowerShell.Cmdlets.Monitor.ActivityLogAlert.Runtime.IJsonSerializable,
        Microsoft.Azure.PowerShell.Cmdlets.Monitor.ActivityLogAlert.Models.Api20201001.IAlertRuleLeafCondition
    {
        /// <summary>
        /// An Activity Log Alert rule condition that is met when at least one of its member leaf conditions are met.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Monitor.ActivityLogAlert.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"An Activity Log Alert rule condition that is met when at least one of its member leaf conditions are met.",
        SerializedName = @"anyOf",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Monitor.ActivityLogAlert.Models.Api20201001.IAlertRuleLeafCondition) })]
        Microsoft.Azure.PowerShell.Cmdlets.Monitor.ActivityLogAlert.Models.Api20201001.IAlertRuleLeafCondition[] AnyOf { get; set; }

    }
    /// An Activity Log Alert rule condition that is met when all its member conditions are met.
    /// Each condition can be of one of the following types:
    /// __Important__: Each type has its unique subset of properties. Properties from different types CANNOT exist in one condition.
    /// * __Leaf Condition -__ must contain 'field' and either 'equals' or 'containsAny'.
    /// _Please note, 'anyOf' should __not__ be set in a Leaf Condition._
    /// * __AnyOf Condition -__ must contain __only__ 'anyOf' (which is an array of Leaf Conditions).
    /// _Please note, 'field', 'equals' and 'containsAny' should __not__ be set in an AnyOf Condition._
    internal partial interface IAlertRuleAnyOfOrLeafConditionInternal :
        Microsoft.Azure.PowerShell.Cmdlets.Monitor.ActivityLogAlert.Models.Api20201001.IAlertRuleLeafConditionInternal
    {
        /// <summary>
        /// An Activity Log Alert rule condition that is met when at least one of its member leaf conditions are met.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Monitor.ActivityLogAlert.Models.Api20201001.IAlertRuleLeafCondition[] AnyOf { get; set; }

    }
}