// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models
{
    using static Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Runtime.Extensions;

    /// <summary>
    /// Definition of what monitoring data to collect and where that data should be sent.
    /// </summary>
    public partial class DataCollectionRule :
        Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.IDataCollectionRule,
        Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.IDataCollectionRuleInternal
    {

        /// <summary>Backing field for <see cref="DataCollectionEndpointId" /> property.</summary>
        private string _dataCollectionEndpointId;

        /// <summary>
        /// The resource ID of the data collection endpoint that this rule can be used with.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Origin(Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.PropertyOrigin.Owned)]
        public string DataCollectionEndpointId { get => this._dataCollectionEndpointId; set => this._dataCollectionEndpointId = value; }

        /// <summary>Backing field for <see cref="DataFlow" /> property.</summary>
        private System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.IDataFlow> _dataFlow;

        /// <summary>The specification of data flows.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Origin(Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.PropertyOrigin.Owned)]
        public System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.IDataFlow> DataFlow { get => this._dataFlow; set => this._dataFlow = value; }

        /// <summary>Backing field for <see cref="DataSource" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.IDataCollectionRuleDataSources _dataSource;

        /// <summary>
        /// The specification of data sources.
        /// This property is optional and can be omitted if the rule is meant to be used via direct calls to the provisioned endpoint.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Origin(Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.IDataCollectionRuleDataSources DataSource { get => (this._dataSource = this._dataSource ?? new Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.DataCollectionRuleDataSources()); set => this._dataSource = value; }

        /// <summary>Event Hub consumer group name</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Origin(Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.PropertyOrigin.Inlined)]
        public string DataSourceDataImportEventHubConsumerGroup { get => ((Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.IDataSourcesSpecInternal)DataSource).DataImportEventHubConsumerGroup; set => ((Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.IDataSourcesSpecInternal)DataSource).DataImportEventHubConsumerGroup = value ?? null; }

        /// <summary>
        /// A friendly name for the data source.
        /// This name should be unique across all data sources (regardless of type) within the data collection rule.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Origin(Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.PropertyOrigin.Inlined)]
        public string DataSourceDataImportEventHubName { get => ((Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.IDataSourcesSpecInternal)DataSource).DataImportEventHubName; set => ((Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.IDataSourcesSpecInternal)DataSource).DataImportEventHubName = value ?? null; }

        /// <summary>The stream to collect from EventHub</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Origin(Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.PropertyOrigin.Inlined)]
        public string DataSourceDataImportEventHubStream { get => ((Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.IDataSourcesSpecInternal)DataSource).DataImportEventHubStream; set => ((Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.IDataSourcesSpecInternal)DataSource).DataImportEventHubStream = value ?? null; }

        /// <summary>The list of Azure VM extension data source configurations.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Origin(Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.PropertyOrigin.Inlined)]
        public System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.IExtensionDataSource> DataSourceExtension { get => ((Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.IDataSourcesSpecInternal)DataSource).Extension; set => ((Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.IDataSourcesSpecInternal)DataSource).Extension = value ?? null /* arrayOf */; }

        /// <summary>The list of IIS logs source configurations.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Origin(Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.PropertyOrigin.Inlined)]
        public System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.IIisLogsDataSource> DataSourceIisLog { get => ((Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.IDataSourcesSpecInternal)DataSource).IisLog; set => ((Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.IDataSourcesSpecInternal)DataSource).IisLog = value ?? null /* arrayOf */; }

        /// <summary>The list of Log files source configurations.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Origin(Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.PropertyOrigin.Inlined)]
        public System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.ILogFilesDataSource> DataSourceLogFile { get => ((Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.IDataSourcesSpecInternal)DataSource).LogFile; set => ((Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.IDataSourcesSpecInternal)DataSource).LogFile = value ?? null /* arrayOf */; }

        /// <summary>The list of performance counter data source configurations.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Origin(Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.PropertyOrigin.Inlined)]
        public System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.IPerfCounterDataSource> DataSourcePerformanceCounter { get => ((Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.IDataSourcesSpecInternal)DataSource).PerformanceCounter; set => ((Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.IDataSourcesSpecInternal)DataSource).PerformanceCounter = value ?? null /* arrayOf */; }

        /// <summary>The list of platform telemetry configurations</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Origin(Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.PropertyOrigin.Inlined)]
        public System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.IPlatformTelemetryDataSource> DataSourcePlatformTelemetry { get => ((Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.IDataSourcesSpecInternal)DataSource).PlatformTelemetry; set => ((Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.IDataSourcesSpecInternal)DataSource).PlatformTelemetry = value ?? null /* arrayOf */; }

        /// <summary>The list of Prometheus forwarder data source configurations.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Origin(Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.PropertyOrigin.Inlined)]
        public System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.IPrometheusForwarderDataSource> DataSourcePrometheusForwarder { get => ((Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.IDataSourcesSpecInternal)DataSource).PrometheusForwarder; set => ((Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.IDataSourcesSpecInternal)DataSource).PrometheusForwarder = value ?? null /* arrayOf */; }

        /// <summary>The list of Syslog data source configurations.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Origin(Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.PropertyOrigin.Inlined)]
        public System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.ISyslogDataSource> DataSourceSyslog { get => ((Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.IDataSourcesSpecInternal)DataSource).Syslog; set => ((Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.IDataSourcesSpecInternal)DataSource).Syslog = value ?? null /* arrayOf */; }

        /// <summary>The list of Windows Event Log data source configurations.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Origin(Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.PropertyOrigin.Inlined)]
        public System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.IWindowsEventLogDataSource> DataSourceWindowsEventLog { get => ((Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.IDataSourcesSpecInternal)DataSource).WindowsEventLog; set => ((Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.IDataSourcesSpecInternal)DataSource).WindowsEventLog = value ?? null /* arrayOf */; }

        /// <summary>The list of Windows Firewall logs source configurations.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Origin(Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.PropertyOrigin.Inlined)]
        public System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.IWindowsFirewallLogsDataSource> DataSourceWindowsFirewallLog { get => ((Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.IDataSourcesSpecInternal)DataSource).WindowsFirewallLog; set => ((Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.IDataSourcesSpecInternal)DataSource).WindowsFirewallLog = value ?? null /* arrayOf */; }

        /// <summary>Backing field for <see cref="Description" /> property.</summary>
        private string _description;

        /// <summary>Description of the data collection rule.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Origin(Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.PropertyOrigin.Owned)]
        public string Description { get => this._description; set => this._description = value; }

        /// <summary>Backing field for <see cref="Destination" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.IDataCollectionRuleDestinations _destination;

        /// <summary>The specification of destinations.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Origin(Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.IDataCollectionRuleDestinations Destination { get => (this._destination = this._destination ?? new Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.DataCollectionRuleDestinations()); set => this._destination = value; }

        /// <summary>
        /// A friendly name for the destination.
        /// This name should be unique across all destinations (regardless of type) within the data collection rule.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Origin(Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.PropertyOrigin.Inlined)]
        public string DestinationAzureMonitorMetricName { get => ((Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.IDestinationsSpecInternal)Destination).AzureMonitorMetricName; set => ((Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.IDestinationsSpecInternal)Destination).AzureMonitorMetricName = value ?? null; }

        /// <summary>List of Event Hubs destinations.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Origin(Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.PropertyOrigin.Inlined)]
        public System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.IEventHubDestination> DestinationEventHub { get => ((Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.IDestinationsSpecInternal)Destination).EventHub; set => ((Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.IDestinationsSpecInternal)Destination).EventHub = value ?? null /* arrayOf */; }

        /// <summary>List of Event Hubs Direct destinations.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Origin(Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.PropertyOrigin.Inlined)]
        public System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.IEventHubDirectDestination> DestinationEventHubsDirect { get => ((Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.IDestinationsSpecInternal)Destination).EventHubsDirect; set => ((Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.IDestinationsSpecInternal)Destination).EventHubsDirect = value ?? null /* arrayOf */; }

        /// <summary>List of Log Analytics destinations.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Origin(Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.PropertyOrigin.Inlined)]
        public System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.ILogAnalyticsDestination> DestinationLogAnalytic { get => ((Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.IDestinationsSpecInternal)Destination).LogAnalytic; set => ((Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.IDestinationsSpecInternal)Destination).LogAnalytic = value ?? null /* arrayOf */; }

        /// <summary>List of monitoring account destinations.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Origin(Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.PropertyOrigin.Inlined)]
        public System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.IMonitoringAccountDestination> DestinationMonitoringAccount { get => ((Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.IDestinationsSpecInternal)Destination).MonitoringAccount; set => ((Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.IDestinationsSpecInternal)Destination).MonitoringAccount = value ?? null /* arrayOf */; }

        /// <summary>List of storage accounts destinations.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Origin(Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.PropertyOrigin.Inlined)]
        public System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.IStorageBlobDestination> DestinationStorageAccount { get => ((Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.IDestinationsSpecInternal)Destination).StorageAccount; set => ((Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.IDestinationsSpecInternal)Destination).StorageAccount = value ?? null /* arrayOf */; }

        /// <summary>
        /// List of Storage Blob Direct destinations. To be used only for sending data directly to store from the agent.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Origin(Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.PropertyOrigin.Inlined)]
        public System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.IStorageBlobDestination> DestinationStorageBlobsDirect { get => ((Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.IDestinationsSpecInternal)Destination).StorageBlobsDirect; set => ((Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.IDestinationsSpecInternal)Destination).StorageBlobsDirect = value ?? null /* arrayOf */; }

        /// <summary>List of Storage Table Direct destinations.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Origin(Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.PropertyOrigin.Inlined)]
        public System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.IStorageTableDestination> DestinationStorageTablesDirect { get => ((Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.IDestinationsSpecInternal)Destination).StorageTablesDirect; set => ((Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.IDestinationsSpecInternal)Destination).StorageTablesDirect = value ?? null /* arrayOf */; }

        /// <summary>Backing field for <see cref="ImmutableId" /> property.</summary>
        private string _immutableId;

        /// <summary>The immutable ID of this data collection rule. This property is READ-ONLY.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Origin(Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.PropertyOrigin.Owned)]
        public string ImmutableId { get => this._immutableId; }

        /// <summary>Backing field for <see cref="Metadata" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.IDataCollectionRuleMetadata _metadata;

        /// <summary>Metadata about the resource</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Origin(Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.IDataCollectionRuleMetadata Metadata { get => (this._metadata = this._metadata ?? new Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.DataCollectionRuleMetadata()); }

        /// <summary>Azure offering managing this resource on-behalf-of customer.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Origin(Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.PropertyOrigin.Inlined)]
        public string MetadataProvisionedBy { get => ((Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.IMetadataInternal)Metadata).ProvisionedBy; }

        /// <summary>Resource Id of azure offering managing this resource on-behalf-of customer.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Origin(Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.PropertyOrigin.Inlined)]
        public string MetadataProvisionedByResourceId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.IMetadataInternal)Metadata).ProvisionedByResourceId; }

        /// <summary>Internal Acessors for DataSource</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.IDataCollectionRuleDataSources Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.IDataCollectionRuleInternal.DataSource { get => (this._dataSource = this._dataSource ?? new Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.DataCollectionRuleDataSources()); set { {_dataSource = value;} } }

        /// <summary>Internal Acessors for DataSourceDataImport</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.IDataSourcesSpecDataImports Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.IDataCollectionRuleInternal.DataSourceDataImport { get => ((Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.IDataSourcesSpecInternal)DataSource).DataImport; set => ((Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.IDataSourcesSpecInternal)DataSource).DataImport = value; }

        /// <summary>Internal Acessors for DataSourceDataImportEventHub</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.IDataImportSourcesEventHub Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.IDataCollectionRuleInternal.DataSourceDataImportEventHub { get => ((Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.IDataSourcesSpecInternal)DataSource).DataImportEventHub; set => ((Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.IDataSourcesSpecInternal)DataSource).DataImportEventHub = value; }

        /// <summary>Internal Acessors for Destination</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.IDataCollectionRuleDestinations Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.IDataCollectionRuleInternal.Destination { get => (this._destination = this._destination ?? new Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.DataCollectionRuleDestinations()); set { {_destination = value;} } }

        /// <summary>Internal Acessors for DestinationAzureMonitorMetric</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.IDestinationsSpecAzureMonitorMetrics Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.IDataCollectionRuleInternal.DestinationAzureMonitorMetric { get => ((Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.IDestinationsSpecInternal)Destination).AzureMonitorMetric; set => ((Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.IDestinationsSpecInternal)Destination).AzureMonitorMetric = value; }

        /// <summary>Internal Acessors for ImmutableId</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.IDataCollectionRuleInternal.ImmutableId { get => this._immutableId; set { {_immutableId = value;} } }

        /// <summary>Internal Acessors for Metadata</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.IDataCollectionRuleMetadata Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.IDataCollectionRuleInternal.Metadata { get => (this._metadata = this._metadata ?? new Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.DataCollectionRuleMetadata()); set { {_metadata = value;} } }

        /// <summary>Internal Acessors for MetadataProvisionedBy</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.IDataCollectionRuleInternal.MetadataProvisionedBy { get => ((Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.IMetadataInternal)Metadata).ProvisionedBy; set => ((Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.IMetadataInternal)Metadata).ProvisionedBy = value; }

        /// <summary>Internal Acessors for MetadataProvisionedByResourceId</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.IDataCollectionRuleInternal.MetadataProvisionedByResourceId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.IMetadataInternal)Metadata).ProvisionedByResourceId; set => ((Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.IMetadataInternal)Metadata).ProvisionedByResourceId = value; }

        /// <summary>Internal Acessors for ProvisioningState</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.IDataCollectionRuleInternal.ProvisioningState { get => this._provisioningState; set { {_provisioningState = value;} } }

        /// <summary>Backing field for <see cref="ProvisioningState" /> property.</summary>
        private string _provisioningState;

        /// <summary>The resource provisioning state.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Origin(Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.PropertyOrigin.Owned)]
        public string ProvisioningState { get => this._provisioningState; }

        /// <summary>Backing field for <see cref="StreamDeclaration" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.IDataCollectionRuleStreamDeclarations _streamDeclaration;

        /// <summary>Declaration of custom streams used in this rule.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Origin(Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.IDataCollectionRuleStreamDeclarations StreamDeclaration { get => (this._streamDeclaration = this._streamDeclaration ?? new Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.DataCollectionRuleStreamDeclarations()); set => this._streamDeclaration = value; }

        /// <summary>Creates an new <see cref="DataCollectionRule" /> instance.</summary>
        public DataCollectionRule()
        {

        }
    }
    /// Definition of what monitoring data to collect and where that data should be sent.
    public partial interface IDataCollectionRule :
        Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Runtime.IJsonSerializable
    {
        /// <summary>
        /// The resource ID of the data collection endpoint that this rule can be used with.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The resource ID of the data collection endpoint that this rule can be used with.",
        SerializedName = @"dataCollectionEndpointId",
        PossibleTypes = new [] { typeof(string) })]
        string DataCollectionEndpointId { get; set; }
        /// <summary>The specification of data flows.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The specification of data flows.",
        SerializedName = @"dataFlows",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.IDataFlow) })]
        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.IDataFlow> DataFlow { get; set; }
        /// <summary>Event Hub consumer group name</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Event Hub consumer group name",
        SerializedName = @"consumerGroup",
        PossibleTypes = new [] { typeof(string) })]
        string DataSourceDataImportEventHubConsumerGroup { get; set; }
        /// <summary>
        /// A friendly name for the data source.
        /// This name should be unique across all data sources (regardless of type) within the data collection rule.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"A friendly name for the data source.
        This name should be unique across all data sources (regardless of type) within the data collection rule.",
        SerializedName = @"name",
        PossibleTypes = new [] { typeof(string) })]
        string DataSourceDataImportEventHubName { get; set; }
        /// <summary>The stream to collect from EventHub</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The stream to collect from EventHub",
        SerializedName = @"stream",
        PossibleTypes = new [] { typeof(string) })]
        string DataSourceDataImportEventHubStream { get; set; }
        /// <summary>The list of Azure VM extension data source configurations.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The list of Azure VM extension data source configurations.",
        SerializedName = @"extensions",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.IExtensionDataSource) })]
        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.IExtensionDataSource> DataSourceExtension { get; set; }
        /// <summary>The list of IIS logs source configurations.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The list of IIS logs source configurations.",
        SerializedName = @"iisLogs",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.IIisLogsDataSource) })]
        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.IIisLogsDataSource> DataSourceIisLog { get; set; }
        /// <summary>The list of Log files source configurations.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The list of Log files source configurations.",
        SerializedName = @"logFiles",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.ILogFilesDataSource) })]
        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.ILogFilesDataSource> DataSourceLogFile { get; set; }
        /// <summary>The list of performance counter data source configurations.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The list of performance counter data source configurations.",
        SerializedName = @"performanceCounters",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.IPerfCounterDataSource) })]
        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.IPerfCounterDataSource> DataSourcePerformanceCounter { get; set; }
        /// <summary>The list of platform telemetry configurations</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The list of platform telemetry configurations",
        SerializedName = @"platformTelemetry",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.IPlatformTelemetryDataSource) })]
        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.IPlatformTelemetryDataSource> DataSourcePlatformTelemetry { get; set; }
        /// <summary>The list of Prometheus forwarder data source configurations.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The list of Prometheus forwarder data source configurations.",
        SerializedName = @"prometheusForwarder",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.IPrometheusForwarderDataSource) })]
        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.IPrometheusForwarderDataSource> DataSourcePrometheusForwarder { get; set; }
        /// <summary>The list of Syslog data source configurations.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The list of Syslog data source configurations.",
        SerializedName = @"syslog",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.ISyslogDataSource) })]
        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.ISyslogDataSource> DataSourceSyslog { get; set; }
        /// <summary>The list of Windows Event Log data source configurations.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The list of Windows Event Log data source configurations.",
        SerializedName = @"windowsEventLogs",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.IWindowsEventLogDataSource) })]
        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.IWindowsEventLogDataSource> DataSourceWindowsEventLog { get; set; }
        /// <summary>The list of Windows Firewall logs source configurations.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The list of Windows Firewall logs source configurations.",
        SerializedName = @"windowsFirewallLogs",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.IWindowsFirewallLogsDataSource) })]
        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.IWindowsFirewallLogsDataSource> DataSourceWindowsFirewallLog { get; set; }
        /// <summary>Description of the data collection rule.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Description of the data collection rule.",
        SerializedName = @"description",
        PossibleTypes = new [] { typeof(string) })]
        string Description { get; set; }
        /// <summary>
        /// A friendly name for the destination.
        /// This name should be unique across all destinations (regardless of type) within the data collection rule.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"A friendly name for the destination.
        This name should be unique across all destinations (regardless of type) within the data collection rule.",
        SerializedName = @"name",
        PossibleTypes = new [] { typeof(string) })]
        string DestinationAzureMonitorMetricName { get; set; }
        /// <summary>List of Event Hubs destinations.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"List of Event Hubs destinations.",
        SerializedName = @"eventHubs",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.IEventHubDestination) })]
        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.IEventHubDestination> DestinationEventHub { get; set; }
        /// <summary>List of Event Hubs Direct destinations.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"List of Event Hubs Direct destinations.",
        SerializedName = @"eventHubsDirect",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.IEventHubDirectDestination) })]
        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.IEventHubDirectDestination> DestinationEventHubsDirect { get; set; }
        /// <summary>List of Log Analytics destinations.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"List of Log Analytics destinations.",
        SerializedName = @"logAnalytics",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.ILogAnalyticsDestination) })]
        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.ILogAnalyticsDestination> DestinationLogAnalytic { get; set; }
        /// <summary>List of monitoring account destinations.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"List of monitoring account destinations.",
        SerializedName = @"monitoringAccounts",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.IMonitoringAccountDestination) })]
        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.IMonitoringAccountDestination> DestinationMonitoringAccount { get; set; }
        /// <summary>List of storage accounts destinations.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"List of storage accounts destinations.",
        SerializedName = @"storageAccounts",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.IStorageBlobDestination) })]
        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.IStorageBlobDestination> DestinationStorageAccount { get; set; }
        /// <summary>
        /// List of Storage Blob Direct destinations. To be used only for sending data directly to store from the agent.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"List of Storage Blob Direct destinations. To be used only for sending data directly to store from the agent.",
        SerializedName = @"storageBlobsDirect",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.IStorageBlobDestination) })]
        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.IStorageBlobDestination> DestinationStorageBlobsDirect { get; set; }
        /// <summary>List of Storage Table Direct destinations.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"List of Storage Table Direct destinations.",
        SerializedName = @"storageTablesDirect",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.IStorageTableDestination) })]
        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.IStorageTableDestination> DestinationStorageTablesDirect { get; set; }
        /// <summary>The immutable ID of this data collection rule. This property is READ-ONLY.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The immutable ID of this data collection rule. This property is READ-ONLY.",
        SerializedName = @"immutableId",
        PossibleTypes = new [] { typeof(string) })]
        string ImmutableId { get;  }
        /// <summary>Azure offering managing this resource on-behalf-of customer.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"Azure offering managing this resource on-behalf-of customer.",
        SerializedName = @"provisionedBy",
        PossibleTypes = new [] { typeof(string) })]
        string MetadataProvisionedBy { get;  }
        /// <summary>Resource Id of azure offering managing this resource on-behalf-of customer.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"Resource Id of azure offering managing this resource on-behalf-of customer.",
        SerializedName = @"provisionedByResourceId",
        PossibleTypes = new [] { typeof(string) })]
        string MetadataProvisionedByResourceId { get;  }
        /// <summary>The resource provisioning state.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The resource provisioning state.",
        SerializedName = @"provisioningState",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.PSArgumentCompleterAttribute("Creating", "Updating", "Deleting", "Succeeded", "Canceled", "Failed")]
        string ProvisioningState { get;  }
        /// <summary>Declaration of custom streams used in this rule.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Declaration of custom streams used in this rule.",
        SerializedName = @"streamDeclarations",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.IDataCollectionRuleStreamDeclarations) })]
        Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.IDataCollectionRuleStreamDeclarations StreamDeclaration { get; set; }

    }
    /// Definition of what monitoring data to collect and where that data should be sent.
    internal partial interface IDataCollectionRuleInternal

    {
        /// <summary>
        /// The resource ID of the data collection endpoint that this rule can be used with.
        /// </summary>
        string DataCollectionEndpointId { get; set; }
        /// <summary>The specification of data flows.</summary>
        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.IDataFlow> DataFlow { get; set; }
        /// <summary>
        /// The specification of data sources.
        /// This property is optional and can be omitted if the rule is meant to be used via direct calls to the provisioned endpoint.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.IDataCollectionRuleDataSources DataSource { get; set; }
        /// <summary>Specifications of pull based data sources</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.IDataSourcesSpecDataImports DataSourceDataImport { get; set; }
        /// <summary>Definition of Event Hub configuration.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.IDataImportSourcesEventHub DataSourceDataImportEventHub { get; set; }
        /// <summary>Event Hub consumer group name</summary>
        string DataSourceDataImportEventHubConsumerGroup { get; set; }
        /// <summary>
        /// A friendly name for the data source.
        /// This name should be unique across all data sources (regardless of type) within the data collection rule.
        /// </summary>
        string DataSourceDataImportEventHubName { get; set; }
        /// <summary>The stream to collect from EventHub</summary>
        string DataSourceDataImportEventHubStream { get; set; }
        /// <summary>The list of Azure VM extension data source configurations.</summary>
        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.IExtensionDataSource> DataSourceExtension { get; set; }
        /// <summary>The list of IIS logs source configurations.</summary>
        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.IIisLogsDataSource> DataSourceIisLog { get; set; }
        /// <summary>The list of Log files source configurations.</summary>
        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.ILogFilesDataSource> DataSourceLogFile { get; set; }
        /// <summary>The list of performance counter data source configurations.</summary>
        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.IPerfCounterDataSource> DataSourcePerformanceCounter { get; set; }
        /// <summary>The list of platform telemetry configurations</summary>
        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.IPlatformTelemetryDataSource> DataSourcePlatformTelemetry { get; set; }
        /// <summary>The list of Prometheus forwarder data source configurations.</summary>
        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.IPrometheusForwarderDataSource> DataSourcePrometheusForwarder { get; set; }
        /// <summary>The list of Syslog data source configurations.</summary>
        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.ISyslogDataSource> DataSourceSyslog { get; set; }
        /// <summary>The list of Windows Event Log data source configurations.</summary>
        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.IWindowsEventLogDataSource> DataSourceWindowsEventLog { get; set; }
        /// <summary>The list of Windows Firewall logs source configurations.</summary>
        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.IWindowsFirewallLogsDataSource> DataSourceWindowsFirewallLog { get; set; }
        /// <summary>Description of the data collection rule.</summary>
        string Description { get; set; }
        /// <summary>The specification of destinations.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.IDataCollectionRuleDestinations Destination { get; set; }
        /// <summary>Azure Monitor Metrics destination.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.IDestinationsSpecAzureMonitorMetrics DestinationAzureMonitorMetric { get; set; }
        /// <summary>
        /// A friendly name for the destination.
        /// This name should be unique across all destinations (regardless of type) within the data collection rule.
        /// </summary>
        string DestinationAzureMonitorMetricName { get; set; }
        /// <summary>List of Event Hubs destinations.</summary>
        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.IEventHubDestination> DestinationEventHub { get; set; }
        /// <summary>List of Event Hubs Direct destinations.</summary>
        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.IEventHubDirectDestination> DestinationEventHubsDirect { get; set; }
        /// <summary>List of Log Analytics destinations.</summary>
        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.ILogAnalyticsDestination> DestinationLogAnalytic { get; set; }
        /// <summary>List of monitoring account destinations.</summary>
        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.IMonitoringAccountDestination> DestinationMonitoringAccount { get; set; }
        /// <summary>List of storage accounts destinations.</summary>
        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.IStorageBlobDestination> DestinationStorageAccount { get; set; }
        /// <summary>
        /// List of Storage Blob Direct destinations. To be used only for sending data directly to store from the agent.
        /// </summary>
        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.IStorageBlobDestination> DestinationStorageBlobsDirect { get; set; }
        /// <summary>List of Storage Table Direct destinations.</summary>
        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.IStorageTableDestination> DestinationStorageTablesDirect { get; set; }
        /// <summary>The immutable ID of this data collection rule. This property is READ-ONLY.</summary>
        string ImmutableId { get; set; }
        /// <summary>Metadata about the resource</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.IDataCollectionRuleMetadata Metadata { get; set; }
        /// <summary>Azure offering managing this resource on-behalf-of customer.</summary>
        string MetadataProvisionedBy { get; set; }
        /// <summary>Resource Id of azure offering managing this resource on-behalf-of customer.</summary>
        string MetadataProvisionedByResourceId { get; set; }
        /// <summary>The resource provisioning state.</summary>
        [global::Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.PSArgumentCompleterAttribute("Creating", "Updating", "Deleting", "Succeeded", "Canceled", "Failed")]
        string ProvisioningState { get; set; }
        /// <summary>Declaration of custom streams used in this rule.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.IDataCollectionRuleStreamDeclarations StreamDeclaration { get; set; }

    }
}