// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models
{
    using static Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Runtime.Extensions;

    /// <summary>
    /// Definition of which Windows Event Log events will be collected and how they will be collected.
    /// Only collected from Windows machines.
    /// </summary>
    public partial class WindowsEventLogDataSource :
        Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.IWindowsEventLogDataSource,
        Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.IWindowsEventLogDataSourceInternal
    {

        /// <summary>Backing field for <see cref="Name" /> property.</summary>
        private string _name;

        /// <summary>
        /// A friendly name for the data source.
        /// This name should be unique across all data sources (regardless of type) within the data collection rule.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Origin(Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.PropertyOrigin.Owned)]
        public string Name { get => this._name; set => this._name = value; }

        /// <summary>Backing field for <see cref="Stream" /> property.</summary>
        private System.Collections.Generic.List<string> _stream;

        /// <summary>
        /// List of streams that this data source will be sent to.
        /// A stream indicates what schema will be used for this data and usually what table in Log Analytics the data will be sent
        /// to.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Origin(Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.PropertyOrigin.Owned)]
        public System.Collections.Generic.List<string> Stream { get => this._stream; set => this._stream = value; }

        /// <summary>Backing field for <see cref="XPathQuery" /> property.</summary>
        private System.Collections.Generic.List<string> _xPathQuery;

        /// <summary>A list of Windows Event Log queries in XPATH format.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Origin(Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.PropertyOrigin.Owned)]
        public System.Collections.Generic.List<string> XPathQuery { get => this._xPathQuery; set => this._xPathQuery = value; }

        /// <summary>Creates an new <see cref="WindowsEventLogDataSource" /> instance.</summary>
        public WindowsEventLogDataSource()
        {

        }
    }
    /// Definition of which Windows Event Log events will be collected and how they will be collected.
    /// Only collected from Windows machines.
    public partial interface IWindowsEventLogDataSource :
        Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Runtime.IJsonSerializable
    {
        /// <summary>
        /// A friendly name for the data source.
        /// This name should be unique across all data sources (regardless of type) within the data collection rule.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"A friendly name for the data source.
        This name should be unique across all data sources (regardless of type) within the data collection rule.",
        SerializedName = @"name",
        PossibleTypes = new [] { typeof(string) })]
        string Name { get; set; }
        /// <summary>
        /// List of streams that this data source will be sent to.
        /// A stream indicates what schema will be used for this data and usually what table in Log Analytics the data will be sent
        /// to.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"List of streams that this data source will be sent to.
        A stream indicates what schema will be used for this data and usually what table in Log Analytics the data will be sent to.",
        SerializedName = @"streams",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.PSArgumentCompleterAttribute("Microsoft-WindowsEvent", "Microsoft-Event")]
        System.Collections.Generic.List<string> Stream { get; set; }
        /// <summary>A list of Windows Event Log queries in XPATH format.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"A list of Windows Event Log queries in XPATH format.",
        SerializedName = @"xPathQueries",
        PossibleTypes = new [] { typeof(string) })]
        System.Collections.Generic.List<string> XPathQuery { get; set; }

    }
    /// Definition of which Windows Event Log events will be collected and how they will be collected.
    /// Only collected from Windows machines.
    internal partial interface IWindowsEventLogDataSourceInternal

    {
        /// <summary>
        /// A friendly name for the data source.
        /// This name should be unique across all data sources (regardless of type) within the data collection rule.
        /// </summary>
        string Name { get; set; }
        /// <summary>
        /// List of streams that this data source will be sent to.
        /// A stream indicates what schema will be used for this data and usually what table in Log Analytics the data will be sent
        /// to.
        /// </summary>
        [global::Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.PSArgumentCompleterAttribute("Microsoft-WindowsEvent", "Microsoft-Event")]
        System.Collections.Generic.List<string> Stream { get; set; }
        /// <summary>A list of Windows Event Log queries in XPATH format.</summary>
        System.Collections.Generic.List<string> XPathQuery { get; set; }

    }
}