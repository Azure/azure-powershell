// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Metric.Models
{
    using Microsoft.Azure.PowerShell.Cmdlets.Metric.Runtime.PowerShell;

    /// <summary>
    /// Query parameters can also be specified in the body, specifying the same parameter in both the body and query parameters
    /// will result in an error.
    /// </summary>
    [System.ComponentModel.TypeConverter(typeof(SubscriptionScopeMetricsRequestBodyParametersTypeConverter))]
    public partial class SubscriptionScopeMetricsRequestBodyParameters
    {

        /// <summary>
        /// <c>AfterDeserializeDictionary</c> will be called after the deserialization has finished, allowing customization of the
        /// object before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>

        partial void AfterDeserializeDictionary(global::System.Collections.IDictionary content);

        /// <summary>
        /// <c>AfterDeserializePSObject</c> will be called after the deserialization has finished, allowing customization of the object
        /// before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>

        partial void AfterDeserializePSObject(global::System.Management.Automation.PSObject content);

        /// <summary>
        /// <c>BeforeDeserializeDictionary</c> will be called before the deserialization has commenced, allowing complete customization
        /// of the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <paramref name="returnNow" /> output
        /// parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeDeserializeDictionary(global::System.Collections.IDictionary content, ref bool returnNow);

        /// <summary>
        /// <c>BeforeDeserializePSObject</c> will be called before the deserialization has commenced, allowing complete customization
        /// of the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <paramref name="returnNow" /> output
        /// parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeDeserializePSObject(global::System.Management.Automation.PSObject content, ref bool returnNow);

        /// <summary>
        /// <c>OverrideToString</c> will be called if it is implemented. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="stringResult">/// instance serialized to a string, normally it is a Json</param>
        /// <param name="returnNow">/// set returnNow to true if you provide a customized OverrideToString function</param>

        partial void OverrideToString(ref string stringResult, ref bool returnNow);

        /// <summary>
        /// Deserializes a <see cref="global::System.Collections.IDictionary" /> into an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.Metric.Models.SubscriptionScopeMetricsRequestBodyParameters"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        /// <returns>
        /// an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.Metric.Models.ISubscriptionScopeMetricsRequestBodyParameters"
        /// />.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.Metric.Models.ISubscriptionScopeMetricsRequestBodyParameters DeserializeFromDictionary(global::System.Collections.IDictionary content)
        {
            return new SubscriptionScopeMetricsRequestBodyParameters(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Management.Automation.PSObject" /> into an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.Metric.Models.SubscriptionScopeMetricsRequestBodyParameters"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        /// <returns>
        /// an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.Metric.Models.ISubscriptionScopeMetricsRequestBodyParameters"
        /// />.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.Metric.Models.ISubscriptionScopeMetricsRequestBodyParameters DeserializeFromPSObject(global::System.Management.Automation.PSObject content)
        {
            return new SubscriptionScopeMetricsRequestBodyParameters(content);
        }

        /// <summary>
        /// Creates a new instance of <see cref="SubscriptionScopeMetricsRequestBodyParameters" />, deserializing the content from
        /// a json string.
        /// </summary>
        /// <param name="jsonText">a string containing a JSON serialized instance of this model.</param>
        /// <returns>
        /// an instance of the <see cref="SubscriptionScopeMetricsRequestBodyParameters" /> model class.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.Metric.Models.ISubscriptionScopeMetricsRequestBodyParameters FromJsonString(string jsonText) => FromJson(Microsoft.Azure.PowerShell.Cmdlets.Metric.Runtime.Json.JsonNode.Parse(jsonText));

        /// <summary>
        /// Deserializes a <see cref="global::System.Collections.IDictionary" /> into a new instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.Metric.Models.SubscriptionScopeMetricsRequestBodyParameters"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        internal SubscriptionScopeMetricsRequestBodyParameters(global::System.Collections.IDictionary content)
        {
            bool returnNow = false;
            BeforeDeserializeDictionary(content, ref returnNow);
            if (returnNow)
            {
                return;
            }
            // actually deserialize
            if (content.Contains("Timespan"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Metric.Models.ISubscriptionScopeMetricsRequestBodyParametersInternal)this).Timespan = (string) content.GetValueForProperty("Timespan",((Microsoft.Azure.PowerShell.Cmdlets.Metric.Models.ISubscriptionScopeMetricsRequestBodyParametersInternal)this).Timespan, global::System.Convert.ToString);
            }
            if (content.Contains("Interval"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Metric.Models.ISubscriptionScopeMetricsRequestBodyParametersInternal)this).Interval = (string) content.GetValueForProperty("Interval",((Microsoft.Azure.PowerShell.Cmdlets.Metric.Models.ISubscriptionScopeMetricsRequestBodyParametersInternal)this).Interval, global::System.Convert.ToString);
            }
            if (content.Contains("MetricName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Metric.Models.ISubscriptionScopeMetricsRequestBodyParametersInternal)this).MetricName = (string) content.GetValueForProperty("MetricName",((Microsoft.Azure.PowerShell.Cmdlets.Metric.Models.ISubscriptionScopeMetricsRequestBodyParametersInternal)this).MetricName, global::System.Convert.ToString);
            }
            if (content.Contains("Aggregation"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Metric.Models.ISubscriptionScopeMetricsRequestBodyParametersInternal)this).Aggregation = (string) content.GetValueForProperty("Aggregation",((Microsoft.Azure.PowerShell.Cmdlets.Metric.Models.ISubscriptionScopeMetricsRequestBodyParametersInternal)this).Aggregation, global::System.Convert.ToString);
            }
            if (content.Contains("Filter"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Metric.Models.ISubscriptionScopeMetricsRequestBodyParametersInternal)this).Filter = (string) content.GetValueForProperty("Filter",((Microsoft.Azure.PowerShell.Cmdlets.Metric.Models.ISubscriptionScopeMetricsRequestBodyParametersInternal)this).Filter, global::System.Convert.ToString);
            }
            if (content.Contains("Top"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Metric.Models.ISubscriptionScopeMetricsRequestBodyParametersInternal)this).Top = (int?) content.GetValueForProperty("Top",((Microsoft.Azure.PowerShell.Cmdlets.Metric.Models.ISubscriptionScopeMetricsRequestBodyParametersInternal)this).Top, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("OrderBy"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Metric.Models.ISubscriptionScopeMetricsRequestBodyParametersInternal)this).OrderBy = (string) content.GetValueForProperty("OrderBy",((Microsoft.Azure.PowerShell.Cmdlets.Metric.Models.ISubscriptionScopeMetricsRequestBodyParametersInternal)this).OrderBy, global::System.Convert.ToString);
            }
            if (content.Contains("RollUpBy"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Metric.Models.ISubscriptionScopeMetricsRequestBodyParametersInternal)this).RollUpBy = (string) content.GetValueForProperty("RollUpBy",((Microsoft.Azure.PowerShell.Cmdlets.Metric.Models.ISubscriptionScopeMetricsRequestBodyParametersInternal)this).RollUpBy, global::System.Convert.ToString);
            }
            if (content.Contains("ResultType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Metric.Models.ISubscriptionScopeMetricsRequestBodyParametersInternal)this).ResultType = (string) content.GetValueForProperty("ResultType",((Microsoft.Azure.PowerShell.Cmdlets.Metric.Models.ISubscriptionScopeMetricsRequestBodyParametersInternal)this).ResultType, global::System.Convert.ToString);
            }
            if (content.Contains("MetricNamespace"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Metric.Models.ISubscriptionScopeMetricsRequestBodyParametersInternal)this).MetricNamespace = (string) content.GetValueForProperty("MetricNamespace",((Microsoft.Azure.PowerShell.Cmdlets.Metric.Models.ISubscriptionScopeMetricsRequestBodyParametersInternal)this).MetricNamespace, global::System.Convert.ToString);
            }
            if (content.Contains("AutoAdjustTimegrain"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Metric.Models.ISubscriptionScopeMetricsRequestBodyParametersInternal)this).AutoAdjustTimegrain = (bool?) content.GetValueForProperty("AutoAdjustTimegrain",((Microsoft.Azure.PowerShell.Cmdlets.Metric.Models.ISubscriptionScopeMetricsRequestBodyParametersInternal)this).AutoAdjustTimegrain, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("ValidateDimension"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Metric.Models.ISubscriptionScopeMetricsRequestBodyParametersInternal)this).ValidateDimension = (bool?) content.GetValueForProperty("ValidateDimension",((Microsoft.Azure.PowerShell.Cmdlets.Metric.Models.ISubscriptionScopeMetricsRequestBodyParametersInternal)this).ValidateDimension, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            AfterDeserializeDictionary(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Management.Automation.PSObject" /> into a new instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.Metric.Models.SubscriptionScopeMetricsRequestBodyParameters"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        internal SubscriptionScopeMetricsRequestBodyParameters(global::System.Management.Automation.PSObject content)
        {
            bool returnNow = false;
            BeforeDeserializePSObject(content, ref returnNow);
            if (returnNow)
            {
                return;
            }
            // actually deserialize
            if (content.Contains("Timespan"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Metric.Models.ISubscriptionScopeMetricsRequestBodyParametersInternal)this).Timespan = (string) content.GetValueForProperty("Timespan",((Microsoft.Azure.PowerShell.Cmdlets.Metric.Models.ISubscriptionScopeMetricsRequestBodyParametersInternal)this).Timespan, global::System.Convert.ToString);
            }
            if (content.Contains("Interval"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Metric.Models.ISubscriptionScopeMetricsRequestBodyParametersInternal)this).Interval = (string) content.GetValueForProperty("Interval",((Microsoft.Azure.PowerShell.Cmdlets.Metric.Models.ISubscriptionScopeMetricsRequestBodyParametersInternal)this).Interval, global::System.Convert.ToString);
            }
            if (content.Contains("MetricName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Metric.Models.ISubscriptionScopeMetricsRequestBodyParametersInternal)this).MetricName = (string) content.GetValueForProperty("MetricName",((Microsoft.Azure.PowerShell.Cmdlets.Metric.Models.ISubscriptionScopeMetricsRequestBodyParametersInternal)this).MetricName, global::System.Convert.ToString);
            }
            if (content.Contains("Aggregation"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Metric.Models.ISubscriptionScopeMetricsRequestBodyParametersInternal)this).Aggregation = (string) content.GetValueForProperty("Aggregation",((Microsoft.Azure.PowerShell.Cmdlets.Metric.Models.ISubscriptionScopeMetricsRequestBodyParametersInternal)this).Aggregation, global::System.Convert.ToString);
            }
            if (content.Contains("Filter"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Metric.Models.ISubscriptionScopeMetricsRequestBodyParametersInternal)this).Filter = (string) content.GetValueForProperty("Filter",((Microsoft.Azure.PowerShell.Cmdlets.Metric.Models.ISubscriptionScopeMetricsRequestBodyParametersInternal)this).Filter, global::System.Convert.ToString);
            }
            if (content.Contains("Top"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Metric.Models.ISubscriptionScopeMetricsRequestBodyParametersInternal)this).Top = (int?) content.GetValueForProperty("Top",((Microsoft.Azure.PowerShell.Cmdlets.Metric.Models.ISubscriptionScopeMetricsRequestBodyParametersInternal)this).Top, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("OrderBy"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Metric.Models.ISubscriptionScopeMetricsRequestBodyParametersInternal)this).OrderBy = (string) content.GetValueForProperty("OrderBy",((Microsoft.Azure.PowerShell.Cmdlets.Metric.Models.ISubscriptionScopeMetricsRequestBodyParametersInternal)this).OrderBy, global::System.Convert.ToString);
            }
            if (content.Contains("RollUpBy"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Metric.Models.ISubscriptionScopeMetricsRequestBodyParametersInternal)this).RollUpBy = (string) content.GetValueForProperty("RollUpBy",((Microsoft.Azure.PowerShell.Cmdlets.Metric.Models.ISubscriptionScopeMetricsRequestBodyParametersInternal)this).RollUpBy, global::System.Convert.ToString);
            }
            if (content.Contains("ResultType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Metric.Models.ISubscriptionScopeMetricsRequestBodyParametersInternal)this).ResultType = (string) content.GetValueForProperty("ResultType",((Microsoft.Azure.PowerShell.Cmdlets.Metric.Models.ISubscriptionScopeMetricsRequestBodyParametersInternal)this).ResultType, global::System.Convert.ToString);
            }
            if (content.Contains("MetricNamespace"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Metric.Models.ISubscriptionScopeMetricsRequestBodyParametersInternal)this).MetricNamespace = (string) content.GetValueForProperty("MetricNamespace",((Microsoft.Azure.PowerShell.Cmdlets.Metric.Models.ISubscriptionScopeMetricsRequestBodyParametersInternal)this).MetricNamespace, global::System.Convert.ToString);
            }
            if (content.Contains("AutoAdjustTimegrain"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Metric.Models.ISubscriptionScopeMetricsRequestBodyParametersInternal)this).AutoAdjustTimegrain = (bool?) content.GetValueForProperty("AutoAdjustTimegrain",((Microsoft.Azure.PowerShell.Cmdlets.Metric.Models.ISubscriptionScopeMetricsRequestBodyParametersInternal)this).AutoAdjustTimegrain, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("ValidateDimension"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Metric.Models.ISubscriptionScopeMetricsRequestBodyParametersInternal)this).ValidateDimension = (bool?) content.GetValueForProperty("ValidateDimension",((Microsoft.Azure.PowerShell.Cmdlets.Metric.Models.ISubscriptionScopeMetricsRequestBodyParametersInternal)this).ValidateDimension, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            AfterDeserializePSObject(content);
        }

        /// <summary>Serializes this instance to a json string.</summary>

        /// <returns>a <see cref="System.String" /> containing this model serialized to JSON text.</returns>
        public string ToJsonString() => ToJson(null, Microsoft.Azure.PowerShell.Cmdlets.Metric.Runtime.SerializationMode.IncludeAll)?.ToString();

        public override string ToString()
        {
            var returnNow = false;
            var result = global::System.String.Empty;
            OverrideToString(ref result, ref returnNow);
            if (returnNow)
            {
                return result;
            }
            return ToJsonString();
        }
    }
    /// Query parameters can also be specified in the body, specifying the same parameter in both the body and query parameters
    /// will result in an error.
    [System.ComponentModel.TypeConverter(typeof(SubscriptionScopeMetricsRequestBodyParametersTypeConverter))]
    public partial interface ISubscriptionScopeMetricsRequestBodyParameters

    {

    }
}