// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Metric.Models
{
    using static Microsoft.Azure.PowerShell.Cmdlets.Metric.Runtime.Extensions;

    /// <summary>The response to a metrics query.</summary>
    public partial class Response :
        Microsoft.Azure.PowerShell.Cmdlets.Metric.Models.IResponse,
        Microsoft.Azure.PowerShell.Cmdlets.Metric.Models.IResponseInternal
    {

        /// <summary>Backing field for <see cref="Cost" /> property.</summary>
        private int? _cost;

        /// <summary>The integer value representing the relative cost of the query.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Metric.Origin(Microsoft.Azure.PowerShell.Cmdlets.Metric.PropertyOrigin.Owned)]
        public int? Cost { get => this._cost; set => this._cost = value; }

        /// <summary>Backing field for <see cref="Interval" /> property.</summary>
        private string _interval;

        /// <summary>
        /// The interval (window size) for which the metric data was returned in ISO 8601 duration format with a special case for
        /// 'FULL' value that returns single datapoint for entire time span requested (*Examples: PT15M, PT1H, P1D, FULL*).
        /// This may be adjusted and different from what was originally requested if AutoAdjustTimegrain=true is specified. This is
        /// not present if a metadata request was made.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Metric.Origin(Microsoft.Azure.PowerShell.Cmdlets.Metric.PropertyOrigin.Owned)]
        public string Interval { get => this._interval; set => this._interval = value; }

        /// <summary>Backing field for <see cref="Namespace" /> property.</summary>
        private string _namespace;

        /// <summary>The namespace of the metrics being queried</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Metric.Origin(Microsoft.Azure.PowerShell.Cmdlets.Metric.PropertyOrigin.Owned)]
        public string Namespace { get => this._namespace; set => this._namespace = value; }

        /// <summary>Backing field for <see cref="Resourceregion" /> property.</summary>
        private string _resourceregion;

        /// <summary>The region of the resource being queried for metrics.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Metric.Origin(Microsoft.Azure.PowerShell.Cmdlets.Metric.PropertyOrigin.Owned)]
        public string Resourceregion { get => this._resourceregion; set => this._resourceregion = value; }

        /// <summary>Backing field for <see cref="Timespan" /> property.</summary>
        private string _timespan;

        /// <summary>
        /// The timespan for which the data was retrieved. Its value consists of two datetimes concatenated, separated by '/'. This
        /// may be adjusted in the future and returned back from what was originally requested.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Metric.Origin(Microsoft.Azure.PowerShell.Cmdlets.Metric.PropertyOrigin.Owned)]
        public string Timespan { get => this._timespan; set => this._timespan = value; }

        /// <summary>Backing field for <see cref="Value" /> property.</summary>
        private System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.Metric.Models.IMetric> _value;

        /// <summary>The value of the collection.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Metric.Origin(Microsoft.Azure.PowerShell.Cmdlets.Metric.PropertyOrigin.Owned)]
        public System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.Metric.Models.IMetric> Value { get => this._value; set => this._value = value; }

        /// <summary>Creates an new <see cref="Response" /> instance.</summary>
        public Response()
        {

        }
    }
    /// The response to a metrics query.
    public partial interface IResponse :
        Microsoft.Azure.PowerShell.Cmdlets.Metric.Runtime.IJsonSerializable
    {
        /// <summary>The integer value representing the relative cost of the query.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Metric.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The integer value representing the relative cost of the query.",
        SerializedName = @"cost",
        PossibleTypes = new [] { typeof(int) })]
        int? Cost { get; set; }
        /// <summary>
        /// The interval (window size) for which the metric data was returned in ISO 8601 duration format with a special case for
        /// 'FULL' value that returns single datapoint for entire time span requested (*Examples: PT15M, PT1H, P1D, FULL*).
        /// This may be adjusted and different from what was originally requested if AutoAdjustTimegrain=true is specified. This is
        /// not present if a metadata request was made.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Metric.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The interval (window size) for which the metric data was returned in ISO 8601 duration format with a special case for 'FULL' value that returns single datapoint for entire time span requested (*Examples: PT15M, PT1H, P1D, FULL*).
        This may be adjusted and different from what was originally requested if AutoAdjustTimegrain=true is specified. This is not present if a metadata request was made.",
        SerializedName = @"interval",
        PossibleTypes = new [] { typeof(string) })]
        string Interval { get; set; }
        /// <summary>The namespace of the metrics being queried</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Metric.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The namespace of the metrics being queried",
        SerializedName = @"namespace",
        PossibleTypes = new [] { typeof(string) })]
        string Namespace { get; set; }
        /// <summary>The region of the resource being queried for metrics.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Metric.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The region of the resource being queried for metrics.",
        SerializedName = @"resourceregion",
        PossibleTypes = new [] { typeof(string) })]
        string Resourceregion { get; set; }
        /// <summary>
        /// The timespan for which the data was retrieved. Its value consists of two datetimes concatenated, separated by '/'. This
        /// may be adjusted in the future and returned back from what was originally requested.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Metric.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The timespan for which the data was retrieved. Its value consists of two datetimes concatenated, separated by '/'.  This may be adjusted in the future and returned back from what was originally requested.",
        SerializedName = @"timespan",
        PossibleTypes = new [] { typeof(string) })]
        string Timespan { get; set; }
        /// <summary>The value of the collection.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Metric.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The value of the collection.",
        SerializedName = @"value",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Metric.Models.IMetric) })]
        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.Metric.Models.IMetric> Value { get; set; }

    }
    /// The response to a metrics query.
    internal partial interface IResponseInternal

    {
        /// <summary>The integer value representing the relative cost of the query.</summary>
        int? Cost { get; set; }
        /// <summary>
        /// The interval (window size) for which the metric data was returned in ISO 8601 duration format with a special case for
        /// 'FULL' value that returns single datapoint for entire time span requested (*Examples: PT15M, PT1H, P1D, FULL*).
        /// This may be adjusted and different from what was originally requested if AutoAdjustTimegrain=true is specified. This is
        /// not present if a metadata request was made.
        /// </summary>
        string Interval { get; set; }
        /// <summary>The namespace of the metrics being queried</summary>
        string Namespace { get; set; }
        /// <summary>The region of the resource being queried for metrics.</summary>
        string Resourceregion { get; set; }
        /// <summary>
        /// The timespan for which the data was retrieved. Its value consists of two datetimes concatenated, separated by '/'. This
        /// may be adjusted in the future and returned back from what was originally requested.
        /// </summary>
        string Timespan { get; set; }
        /// <summary>The value of the collection.</summary>
        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.Metric.Models.IMetric> Value { get; set; }

    }
}