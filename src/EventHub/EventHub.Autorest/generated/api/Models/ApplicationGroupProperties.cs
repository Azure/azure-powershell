// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.EventHub.Models
{
    using static Microsoft.Azure.PowerShell.Cmdlets.EventHub.Runtime.Extensions;

    [Microsoft.Azure.PowerShell.Cmdlets.EventHub.DoNotFormat]
    public partial class ApplicationGroupProperties :
        Microsoft.Azure.PowerShell.Cmdlets.EventHub.Models.IApplicationGroupProperties,
        Microsoft.Azure.PowerShell.Cmdlets.EventHub.Models.IApplicationGroupPropertiesInternal
    {

        /// <summary>Backing field for <see cref="ClientAppGroupIdentifier" /> property.</summary>
        private string _clientAppGroupIdentifier;

        /// <summary>
        /// The Unique identifier for application group.Supports SAS(SASKeyName=KeyName) or AAD(AADAppID=Guid)
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventHub.Origin(Microsoft.Azure.PowerShell.Cmdlets.EventHub.PropertyOrigin.Owned)]
        public string ClientAppGroupIdentifier { get => this._clientAppGroupIdentifier; set => this._clientAppGroupIdentifier = value; }

        /// <summary>Backing field for <see cref="IsEnabled" /> property.</summary>
        private bool? _isEnabled;

        /// <summary>
        /// Determines if Application Group is allowed to create connection with namespace or not. Once the isEnabled is set to false,
        /// all the existing connections of application group gets dropped and no new connections will be allowed
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventHub.Origin(Microsoft.Azure.PowerShell.Cmdlets.EventHub.PropertyOrigin.Owned)]
        public bool? IsEnabled { get => this._isEnabled; set => this._isEnabled = value; }

        /// <summary>Backing field for <see cref="Policy" /> property.</summary>
        private System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.EventHub.Models.IApplicationGroupPolicy> _policy;

        /// <summary>
        /// List of group policies that define the behavior of application group. The policies can support resource governance scenarios
        /// such as limiting ingress or egress traffic.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventHub.Origin(Microsoft.Azure.PowerShell.Cmdlets.EventHub.PropertyOrigin.Owned)]
        public System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.EventHub.Models.IApplicationGroupPolicy> Policy { get => this._policy; set => this._policy = value; }

        /// <summary>Creates an new <see cref="ApplicationGroupProperties" /> instance.</summary>
        public ApplicationGroupProperties()
        {

        }
    }
    public partial interface IApplicationGroupProperties :
        Microsoft.Azure.PowerShell.Cmdlets.EventHub.Runtime.IJsonSerializable
    {
        /// <summary>
        /// The Unique identifier for application group.Supports SAS(SASKeyName=KeyName) or AAD(AADAppID=Guid)
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventHub.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The Unique identifier for application group.Supports SAS(SASKeyName=KeyName) or AAD(AADAppID=Guid)",
        SerializedName = @"clientAppGroupIdentifier",
        PossibleTypes = new [] { typeof(string) })]
        string ClientAppGroupIdentifier { get; set; }
        /// <summary>
        /// Determines if Application Group is allowed to create connection with namespace or not. Once the isEnabled is set to false,
        /// all the existing connections of application group gets dropped and no new connections will be allowed
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventHub.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Determines if Application Group is allowed to create connection with namespace or not. Once the isEnabled is set to false, all the existing connections of application group gets dropped and no new connections will be allowed",
        SerializedName = @"isEnabled",
        PossibleTypes = new [] { typeof(bool) })]
        bool? IsEnabled { get; set; }
        /// <summary>
        /// List of group policies that define the behavior of application group. The policies can support resource governance scenarios
        /// such as limiting ingress or egress traffic.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventHub.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"List of group policies that define the behavior of application group. The policies can support resource governance scenarios such as limiting ingress or egress traffic.",
        SerializedName = @"policies",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.EventHub.Models.IApplicationGroupPolicy) })]
        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.EventHub.Models.IApplicationGroupPolicy> Policy { get; set; }

    }
    internal partial interface IApplicationGroupPropertiesInternal

    {
        /// <summary>
        /// The Unique identifier for application group.Supports SAS(SASKeyName=KeyName) or AAD(AADAppID=Guid)
        /// </summary>
        string ClientAppGroupIdentifier { get; set; }
        /// <summary>
        /// Determines if Application Group is allowed to create connection with namespace or not. Once the isEnabled is set to false,
        /// all the existing connections of application group gets dropped and no new connections will be allowed
        /// </summary>
        bool? IsEnabled { get; set; }
        /// <summary>
        /// List of group policies that define the behavior of application group. The policies can support resource governance scenarios
        /// such as limiting ingress or egress traffic.
        /// </summary>
        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.EventHub.Models.IApplicationGroupPolicy> Policy { get; set; }

    }
}