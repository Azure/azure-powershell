// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.EventHub.Models
{
    using static Microsoft.Azure.PowerShell.Cmdlets.EventHub.Runtime.Extensions;

    /// <summary>GeoDR Replication properties</summary>
    [Microsoft.Azure.PowerShell.Cmdlets.EventHub.DoNotFormat]
    public partial class GeoDataReplicationProperties :
        Microsoft.Azure.PowerShell.Cmdlets.EventHub.Models.IGeoDataReplicationProperties,
        Microsoft.Azure.PowerShell.Cmdlets.EventHub.Models.IGeoDataReplicationPropertiesInternal
    {

        /// <summary>Backing field for <see cref="Location" /> property.</summary>
        private System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.EventHub.Models.INamespaceReplicaLocation> _location;

        /// <summary>A list of regions where replicas of the namespace are maintained.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventHub.Origin(Microsoft.Azure.PowerShell.Cmdlets.EventHub.PropertyOrigin.Owned)]
        public System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.EventHub.Models.INamespaceReplicaLocation> Location { get => this._location; set => this._location = value; }

        /// <summary>Backing field for <see cref="MaxReplicationLagDurationInSecond" /> property.</summary>
        private int? _maxReplicationLagDurationInSecond;

        /// <summary>
        /// The maximum acceptable lag for data replication operations from the primary replica to a quorum of secondary replicas.
        /// When the lag exceeds the configured amount, operations on the primary replica will be failed. The allowed values are 0
        /// and 5 minutes to 1 day.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventHub.Origin(Microsoft.Azure.PowerShell.Cmdlets.EventHub.PropertyOrigin.Owned)]
        public int? MaxReplicationLagDurationInSecond { get => this._maxReplicationLagDurationInSecond; set => this._maxReplicationLagDurationInSecond = value; }

        /// <summary>Creates an new <see cref="GeoDataReplicationProperties" /> instance.</summary>
        public GeoDataReplicationProperties()
        {

        }
    }
    /// GeoDR Replication properties
    public partial interface IGeoDataReplicationProperties :
        Microsoft.Azure.PowerShell.Cmdlets.EventHub.Runtime.IJsonSerializable
    {
        /// <summary>A list of regions where replicas of the namespace are maintained.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventHub.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"A list of regions where replicas of the namespace are maintained.",
        SerializedName = @"locations",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.EventHub.Models.INamespaceReplicaLocation) })]
        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.EventHub.Models.INamespaceReplicaLocation> Location { get; set; }
        /// <summary>
        /// The maximum acceptable lag for data replication operations from the primary replica to a quorum of secondary replicas.
        /// When the lag exceeds the configured amount, operations on the primary replica will be failed. The allowed values are 0
        /// and 5 minutes to 1 day.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventHub.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The maximum acceptable lag for data replication operations from the primary replica to a quorum of secondary replicas.  When the lag exceeds the configured amount, operations on the primary replica will be failed. The allowed values are 0 and 5 minutes to 1 day.",
        SerializedName = @"maxReplicationLagDurationInSeconds",
        PossibleTypes = new [] { typeof(int) })]
        int? MaxReplicationLagDurationInSecond { get; set; }

    }
    /// GeoDR Replication properties
    internal partial interface IGeoDataReplicationPropertiesInternal

    {
        /// <summary>A list of regions where replicas of the namespace are maintained.</summary>
        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.EventHub.Models.INamespaceReplicaLocation> Location { get; set; }
        /// <summary>
        /// The maximum acceptable lag for data replication operations from the primary replica to a quorum of secondary replicas.
        /// When the lag exceeds the configured amount, operations on the primary replica will be failed. The allowed values are 0
        /// and 5 minutes to 1 day.
        /// </summary>
        int? MaxReplicationLagDurationInSecond { get; set; }

    }
}