// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.EventHub.Models
{
    using System.Linq;

    /// <summary>
    /// Properties to configure Identity for Bring your Own Keys
    /// </summary>
    public partial class Identity
    {
        /// <summary>
        /// Initializes a new instance of the Identity class.
        /// </summary>
        public Identity()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the Identity class.
        /// </summary>

        /// <param name="principalId">ObjectId from the KeyVault
        /// </param>

        /// <param name="tenantId">TenantId from the KeyVault
        /// </param>

        /// <param name="type">Type of managed service identity.
        /// Possible values include: &#39;SystemAssigned&#39;, &#39;UserAssigned&#39;, &#39;SystemAssigned,
        /// UserAssigned&#39;, &#39;None&#39;</param>

        /// <param name="userAssignedIdentities">Properties for User Assigned Identities
        /// </param>
        public Identity(string principalId = default(string), string tenantId = default(string), ManagedServiceIdentityType? type = default(ManagedServiceIdentityType?), System.Collections.Generic.IDictionary<string, UserAssignedIdentity> userAssignedIdentities = default(System.Collections.Generic.IDictionary<string, UserAssignedIdentity>))

        {
            this.PrincipalId = principalId;
            this.TenantId = tenantId;
            this.Type = type;
            this.UserAssignedIdentities = userAssignedIdentities;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets objectId from the KeyVault
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "principalId")]
        public string PrincipalId {get; private set; }

        /// <summary>
        /// Gets tenantId from the KeyVault
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "tenantId")]
        public string TenantId {get; private set; }

        /// <summary>
        /// Gets or sets type of managed service identity. Possible values include: &#39;SystemAssigned&#39;, &#39;UserAssigned&#39;, &#39;SystemAssigned, UserAssigned&#39;, &#39;None&#39;
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "type")]
        public ManagedServiceIdentityType? Type {get; set; }

        /// <summary>
        /// Gets or sets properties for User Assigned Identities
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "userAssignedIdentities")]
        public System.Collections.Generic.IDictionary<string, UserAssignedIdentity> UserAssignedIdentities {get; set; }
    }
}