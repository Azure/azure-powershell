
# ----------------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# http://www.apache.org/licenses/LICENSE-2.0
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# Code generated by Microsoft (R) AutoRest Code Generator.Changes may cause incorrect behavior and will be lost if the code
# is regenerated.
# ----------------------------------------------------------------------------------

<#
.Synopsis
Update an existing Cluster.
.Description
Update an existing Cluster.
.Example
$clusterResourceGroupName = "Group"
$clusterpoolName = "ps-test-pool"
$clusterName = "flinkcluster"
$coreSiteConfigFile = New-AzHdInsightOnAksClusterConfigFileObject -FileName "core-site.xml" -Value @{"testvalue1"="111"}
$yarnComponentConfig = New-AzHdInsightOnAksClusterServiceConfigObject -ComponentName "hadoop-config" -File $coreSiteConfigFile
$yarnServiceConfigProfile = New-AzHdInsightOnAksClusterServiceConfigsProfileObject -ServiceName "yarn-service" -Config $yarnComponentConfig

Update-AzHdInsightOnAksCluster -ResourceGroupName $clusterResourceGroupName -PoolName $clusterpoolName -Name $clusterName -ClusterProfileServiceConfigsProfile $yarnServiceConfigProfile
.Example
$clusterResourceGroupName = "Group"
$clusterpoolName = "ps-test-pool"
$clusterName = "flinkcluster"
$hotfixObj = New-AzHdInsightOnAksClusterHotfixUpgradeObject -ComponentName Webssh -TargetBuildNumber 7 -TargetClusterVersion "1.1.1" -TargetOssVersion "0.4.2"
Update-AzHdInsightOnAksCluster -ResourceGroupName $clusterResourceGroupName -ClusterName $clusterName -ClusterPoolName $clusterpoolName -ClusterUpgradeRequest $hotfixObj

.Inputs
Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterPatch
.Inputs
Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterUpgrade
.Inputs
Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IHdInsightOnAksIdentity
.Outputs
Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.ICluster
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

CLUSTERPATCHREQUEST <IClusterPatch>: The patch for a cluster.
  [ApplicationLogStdErrorEnabled <Boolean?>]: True if stderror is enabled, otherwise false.
  [ApplicationLogStdOutEnabled <Boolean?>]: True if stdout is enabled, otherwise false.
  [AuthorizationProfileGroupId <List<String>>]: AAD group Ids authorized for data plane access.
  [AuthorizationProfileUserId <List<String>>]: AAD user Ids authorized for data plane access.
  [AutoscaleProfileAutoscaleType <String>]: User to specify which type of Autoscale to be implemented - Scheduled Based or Load Based.
  [AutoscaleProfileEnabled <Boolean?>]: This indicates whether auto scale is enabled on HDInsight on AKS cluster.
  [AutoscaleProfileGracefulDecommissionTimeout <Int32?>]: This property is for graceful decommission timeout; It has a default setting of 3600 seconds before forced shutdown takes place. This is the maximal time to wait for running containers and applications to complete before transition a DECOMMISSIONING node into DECOMMISSIONED. The default value is 3600 seconds. Negative value (like -1) is handled as infinite timeout.
  [ClusterProfileScriptActionProfile <List<IScriptActionProfile>>]: The script action profile list.
    Name <String>: Script name.
    Service <List<String>>: List of services to apply the script action.
    Type <String>: Type of the script action. Supported type is bash scripts.
    Url <String>: Url of the script file.
    [Parameter <String>]: Additional parameters for the script action. It should be space-separated list of arguments required for script execution.
    [ShouldPersist <Boolean?>]: Specify if the script should persist on the cluster.
    [TimeoutInMinute <Int32?>]: Timeout duration for the script action in minutes.
  [ClusterProfileServiceConfigsProfile <List<IClusterServiceConfigsProfile>>]: The service configs profiles.
    Config <List<IClusterServiceConfig>>: List of service configs.
      Component <String>: Name of the component the config files should apply to.
      File <List<IClusterConfigFile>>: List of Config Files.
        FileName <String>: Configuration file name.
        [Content <String>]: Free form content of the entire configuration file.
        [Encoding <String>]: This property indicates if the content is encoded and is case-insensitive. Please set the value to base64 if the content is base64 encoded. Set it to none or skip it if the content is plain text.
        [Path <String>]: Path of the config file if content is specified.
        [Value <IClusterConfigFileValues>]: List of key value pairs         where key represents a valid service configuration name and value represents the value of the config.
          [(Any) <String>]: This indicates any property can be added to this object.
    ServiceName <String>: Name of the service the configurations should apply to.
  [DatabaseHost <String>]: The database URL
  [DatabaseName <String>]: The database name
  [DatabasePasswordSecretRef <String>]: Reference for the database password
  [DatabaseUsername <String>]: The name of the database user
  [LoadBasedConfigCooldownPeriod <Int32?>]: This is a cool down period, this is a time period in seconds, which determines the amount of time that must elapse between a scaling activity started by a rule and the start of the next scaling activity, regardless of the rule that triggers it. The default value is 300 seconds.
  [LoadBasedConfigMaxNode <Int32?>]: User needs to set the maximum number of nodes for load based scaling, the load based scaling will use this to scale up and scale down between minimum and maximum number of nodes.
  [LoadBasedConfigMinNode <Int32?>]: User needs to set the minimum number of nodes for load based scaling, the load based scaling will use this to scale up and scale down between minimum and maximum number of nodes.
  [LoadBasedConfigPollInterval <Int32?>]: User can specify the poll interval, this is the time period (in seconds) after which scaling metrics are polled for triggering a scaling operation.
  [LoadBasedConfigScalingRule <List<IScalingRule>>]: The scaling rules.
    ActionType <String>: The action type.
    ComparisonRuleOperator <String>: The comparison operator.
    ComparisonRuleThreshold <Single>: Threshold setting.
    EvaluationCount <Int32>: This is an evaluation count for a scaling condition, the number of times a trigger condition should be successful, before scaling activity is triggered.
    ScalingMetric <String>: Metrics name for individual workloads. For example: cpu
  [LogAnalyticProfileEnabled <Boolean?>]: True if log analytics is enabled for the cluster, otherwise false.
  [LogAnalyticProfileMetricsEnabled <Boolean?>]: True if metrics are enabled, otherwise false.
  [PrometheuProfileEnabled <Boolean?>]: Enable Prometheus for cluster or not.
  [RangerAdmin <List<String>>]: List of usernames that should be marked as ranger admins. These usernames should match the user principal name (UPN) of the respective AAD users.
  [RangerAuditStorageAccount <String>]: Azure storage location of the blobs. MSI should have read/write access to this Storage account.
  [RangerPluginProfileEnabled <Boolean?>]: Enable Ranger for cluster or not.
  [RangerUsersyncEnabled <Boolean?>]: Denotes whether usersync service should be enabled
  [RangerUsersyncGroup <List<String>>]: List of groups that should be synced. These group names should match the object id of the respective AAD groups.
  [RangerUsersyncMode <String>]: User & groups can be synced automatically or via a static list that's refreshed.
  [RangerUsersyncUser <List<String>>]: List of user names that should be synced. These usernames should match the User principal name of the respective AAD users.
  [RangerUsersyncUserMappingLocation <String>]: Azure storage location of a mapping file that lists user & group associations.
  [ScheduleBasedConfigDefaultCount <Int32?>]: Setting default node count of current schedule configuration. Default node count specifies the number of nodes which are default when an specified scaling operation is executed (scale up/scale down)
  [ScheduleBasedConfigSchedule <List<ISchedule>>]: This specifies the schedules where scheduled based Autoscale to be enabled, the user has a choice to set multiple rules within the schedule across days and times (start/end).
    Count <Int32>: User has to set the node count anticipated at end of the scaling operation of the set current schedule configuration, format is integer.
    Day <List<String>>: User has to set the days where schedule has to be set for autoscale operation.
    EndTime <String>: User has to set the end time of current schedule configuration, format like 10:30 (HH:MM).
    StartTime <String>: User has to set the start time of current schedule configuration, format like 10:30 (HH:MM).
  [ScheduleBasedConfigTimeZone <String>]: User has to specify the timezone on which the schedule has to be set for schedule based autoscale configuration.
  [SshProfileCount <Int32?>]: Number of ssh pods per cluster.
  [Tag <IClusterPatchTags>]: Resource tags.
    [(Any) <String>]: This indicates any property can be added to this object.

CLUSTERPOOLINPUTOBJECT <IHdInsightOnAksIdentity>: Identity Parameter
  [ClusterName <String>]: The name of the HDInsight cluster.
  [ClusterPoolName <String>]: The name of the cluster pool.
  [Id <String>]: Resource identity path
  [Location <String>]: The name of the Azure region.
  [ResourceGroupName <String>]: The name of the resource group. The name is case insensitive.
  [SubscriptionId <String>]: The ID of the target subscription. The value must be an UUID.

CLUSTERPROFILESCRIPTACTIONPROFILE <IScriptActionProfile[]>: The script action profile list.
  Name <String>: Script name.
  Service <List<String>>: List of services to apply the script action.
  Type <String>: Type of the script action. Supported type is bash scripts.
  Url <String>: Url of the script file.
  [Parameter <String>]: Additional parameters for the script action. It should be space-separated list of arguments required for script execution.
  [ShouldPersist <Boolean?>]: Specify if the script should persist on the cluster.
  [TimeoutInMinute <Int32?>]: Timeout duration for the script action in minutes.

CLUSTERPROFILESERVICECONFIGSPROFILE <IClusterServiceConfigsProfile[]>: The service configs profiles.
  Config <List<IClusterServiceConfig>>: List of service configs.
    Component <String>: Name of the component the config files should apply to.
    File <List<IClusterConfigFile>>: List of Config Files.
      FileName <String>: Configuration file name.
      [Content <String>]: Free form content of the entire configuration file.
      [Encoding <String>]: This property indicates if the content is encoded and is case-insensitive. Please set the value to base64 if the content is base64 encoded. Set it to none or skip it if the content is plain text.
      [Path <String>]: Path of the config file if content is specified.
      [Value <IClusterConfigFileValues>]: List of key value pairs         where key represents a valid service configuration name and value represents the value of the config.
        [(Any) <String>]: This indicates any property can be added to this object.
  ServiceName <String>: Name of the service the configurations should apply to.

CLUSTERUPGRADEREQUEST <IClusterUpgrade>: Cluster Upgrade.
  UpgradeType <String>: Type of upgrade.

INPUTOBJECT <IHdInsightOnAksIdentity>: Identity Parameter
  [ClusterName <String>]: The name of the HDInsight cluster.
  [ClusterPoolName <String>]: The name of the cluster pool.
  [Id <String>]: Resource identity path
  [Location <String>]: The name of the Azure region.
  [ResourceGroupName <String>]: The name of the resource group. The name is case insensitive.
  [SubscriptionId <String>]: The ID of the target subscription. The value must be an UUID.

LOADBASEDCONFIGSCALINGRULE <IScalingRule[]>: The scaling rules.
  ActionType <String>: The action type.
  ComparisonRuleOperator <String>: The comparison operator.
  ComparisonRuleThreshold <Single>: Threshold setting.
  EvaluationCount <Int32>: This is an evaluation count for a scaling condition, the number of times a trigger condition should be successful, before scaling activity is triggered.
  ScalingMetric <String>: Metrics name for individual workloads. For example: cpu

SCHEDULEBASEDCONFIGSCHEDULE <ISchedule[]>: This specifies the schedules where scheduled based Autoscale to be enabled, the user has a choice to set multiple rules within the schedule across days and times (start/end).
  Count <Int32>: User has to set the node count anticipated at end of the scaling operation of the set current schedule configuration, format is integer.
  Day <List<String>>: User has to set the days where schedule has to be set for autoscale operation.
  EndTime <String>: User has to set the end time of current schedule configuration, format like 10:30 (HH:MM).
  StartTime <String>: User has to set the start time of current schedule configuration, format like 10:30 (HH:MM).
.Link
https://learn.microsoft.com/powershell/module/az.hdinsightonaks/update-azhdinsightonakscluster
#>
function Update-AzHdInsightOnAksCluster {
[OutputType([Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.ICluster])]
[CmdletBinding(DefaultParameterSetName='UpdateExpanded', PositionalBinding=$false, SupportsShouldProcess, ConfirmImpact='Medium')]
param(
    [Parameter(ParameterSetName='Update', Mandatory)]
    [Parameter(ParameterSetName='UpdateExpanded', Mandatory)]
    [Parameter(ParameterSetName='UpdateViaIdentityClusterpool', Mandatory)]
    [Parameter(ParameterSetName='UpdateViaIdentityClusterpoolExpanded', Mandatory)]
    [Parameter(ParameterSetName='UpdateViaJsonFilePath', Mandatory)]
    [Parameter(ParameterSetName='UpdateViaJsonString', Mandatory)]
    [Parameter(ParameterSetName='Upgrade', Mandatory)]
    [Parameter(ParameterSetName='UpgradeExpanded', Mandatory)]
    [Parameter(ParameterSetName='UpgradeViaIdentityClusterpool', Mandatory)]
    [Parameter(ParameterSetName='UpgradeViaIdentityClusterpoolExpanded', Mandatory)]
    [Parameter(ParameterSetName='UpgradeViaJsonFilePath', Mandatory)]
    [Parameter(ParameterSetName='UpgradeViaJsonString', Mandatory)]
    [Alias('ClusterName')]
    [Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Category('Path')]
    [System.String]
    # The name of the HDInsight cluster.
    ${Name},

    [Parameter(ParameterSetName='Update', Mandatory)]
    [Parameter(ParameterSetName='UpdateExpanded', Mandatory)]
    [Parameter(ParameterSetName='UpdateViaJsonFilePath', Mandatory)]
    [Parameter(ParameterSetName='UpdateViaJsonString', Mandatory)]
    [Parameter(ParameterSetName='Upgrade', Mandatory)]
    [Parameter(ParameterSetName='UpgradeExpanded', Mandatory)]
    [Parameter(ParameterSetName='UpgradeViaJsonFilePath', Mandatory)]
    [Parameter(ParameterSetName='UpgradeViaJsonString', Mandatory)]
    [Alias('ClusterPoolName')]
    [Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Category('Path')]
    [System.String]
    # The name of the cluster pool.
    ${PoolName},

    [Parameter(ParameterSetName='Update', Mandatory)]
    [Parameter(ParameterSetName='UpdateExpanded', Mandatory)]
    [Parameter(ParameterSetName='UpdateViaJsonFilePath', Mandatory)]
    [Parameter(ParameterSetName='UpdateViaJsonString', Mandatory)]
    [Parameter(ParameterSetName='Upgrade', Mandatory)]
    [Parameter(ParameterSetName='UpgradeExpanded', Mandatory)]
    [Parameter(ParameterSetName='UpgradeViaJsonFilePath', Mandatory)]
    [Parameter(ParameterSetName='UpgradeViaJsonString', Mandatory)]
    [Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Category('Path')]
    [System.String]
    # The name of the resource group.
    # The name is case insensitive.
    ${ResourceGroupName},

    [Parameter(ParameterSetName='Update')]
    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaJsonFilePath')]
    [Parameter(ParameterSetName='UpdateViaJsonString')]
    [Parameter(ParameterSetName='Upgrade')]
    [Parameter(ParameterSetName='UpgradeExpanded')]
    [Parameter(ParameterSetName='UpgradeViaJsonFilePath')]
    [Parameter(ParameterSetName='UpgradeViaJsonString')]
    [Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Category('Path')]
    [Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Runtime.DefaultInfo(Script='(Get-AzContext).Subscription.Id')]
    [System.String]
    # The ID of the target subscription.
    # The value must be an UUID.
    ${SubscriptionId},

    [Parameter(ParameterSetName='UpdateViaIdentity', Mandatory, ValueFromPipeline)]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded', Mandatory, ValueFromPipeline)]
    [Parameter(ParameterSetName='UpgradeViaIdentity', Mandatory, ValueFromPipeline)]
    [Parameter(ParameterSetName='UpgradeViaIdentityExpanded', Mandatory, ValueFromPipeline)]
    [Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Category('Path')]
    [Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IHdInsightOnAksIdentity]
    # Identity Parameter
    ${InputObject},

    [Parameter(ParameterSetName='UpdateViaIdentityClusterpool', Mandatory, ValueFromPipeline)]
    [Parameter(ParameterSetName='UpdateViaIdentityClusterpoolExpanded', Mandatory, ValueFromPipeline)]
    [Parameter(ParameterSetName='UpgradeViaIdentityClusterpool', Mandatory, ValueFromPipeline)]
    [Parameter(ParameterSetName='UpgradeViaIdentityClusterpoolExpanded', Mandatory, ValueFromPipeline)]
    [Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Category('Path')]
    [Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IHdInsightOnAksIdentity]
    # Identity Parameter
    ${ClusterpoolInputObject},

    [Parameter(ParameterSetName='Update', Mandatory, ValueFromPipeline)]
    [Parameter(ParameterSetName='UpdateViaIdentity', Mandatory, ValueFromPipeline)]
    [Parameter(ParameterSetName='UpdateViaIdentityClusterpool', Mandatory, ValueFromPipeline)]
    [Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Category('Body')]
    [Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterPatch]
    # The patch for a cluster.
    ${ClusterPatchRequest},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityClusterpoolExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Category('Body')]
    [System.Management.Automation.SwitchParameter]
    # True if stderror is enabled, otherwise false.
    ${ApplicationLogStdErrorEnabled},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityClusterpoolExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Category('Body')]
    [System.Management.Automation.SwitchParameter]
    # True if stdout is enabled, otherwise false.
    ${ApplicationLogStdOutEnabled},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityClusterpoolExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [AllowEmptyCollection()]
    [Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Category('Body')]
    [System.String[]]
    # AAD group Ids authorized for data plane access.
    ${AuthorizationProfileGroupId},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityClusterpoolExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [AllowEmptyCollection()]
    [Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Category('Body')]
    [System.String[]]
    # AAD user Ids authorized for data plane access.
    ${AuthorizationProfileUserId},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityClusterpoolExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.PSArgumentCompleterAttribute("ScheduleBased", "LoadBased")]
    [Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Category('Body')]
    [System.String]
    # User to specify which type of Autoscale to be implemented - Scheduled Based or Load Based.
    ${AutoscaleProfileAutoscaleType},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityClusterpoolExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Category('Body')]
    [System.Management.Automation.SwitchParameter]
    # This indicates whether auto scale is enabled on HDInsight on AKS cluster.
    ${AutoscaleProfileEnabled},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityClusterpoolExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Category('Body')]
    [System.Int32]
    # This property is for graceful decommission timeout; It has a default setting of 3600 seconds before forced shutdown takes place.
    # This is the maximal time to wait for running containers and applications to complete before transition a DECOMMISSIONING node into DECOMMISSIONED.
    # The default value is 3600 seconds.
    # Negative value (like -1) is handled as infinite timeout.
    ${AutoscaleProfileGracefulDecommissionTimeout},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityClusterpoolExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [AllowEmptyCollection()]
    [Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Category('Body')]
    [Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IScriptActionProfile[]]
    # The script action profile list.
    ${ClusterProfileScriptActionProfile},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityClusterpoolExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [AllowEmptyCollection()]
    [Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Category('Body')]
    [Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterServiceConfigsProfile[]]
    # The service configs profiles.
    ${ClusterProfileServiceConfigsProfile},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityClusterpoolExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Category('Body')]
    [System.String]
    # The database URL
    ${DatabaseHost},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityClusterpoolExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Category('Body')]
    [System.String]
    # The database name
    ${DatabaseName},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityClusterpoolExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Category('Body')]
    [System.String]
    # Reference for the database password
    ${DatabasePasswordSecretRef},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityClusterpoolExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Category('Body')]
    [System.String]
    # The name of the database user
    ${DatabaseUsername},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityClusterpoolExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Category('Body')]
    [System.Int32]
    # This is a cool down period, this is a time period in seconds, which determines the amount of time that must elapse between a scaling activity started by a rule and the start of the next scaling activity, regardless of the rule that triggers it.
    # The default value is 300 seconds.
    ${LoadBasedConfigCooldownPeriod},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityClusterpoolExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Category('Body')]
    [System.Int32]
    # User needs to set the maximum number of nodes for load based scaling, the load based scaling will use this to scale up and scale down between minimum and maximum number of nodes.
    ${LoadBasedConfigMaxNode},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityClusterpoolExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Category('Body')]
    [System.Int32]
    # User needs to set the minimum number of nodes for load based scaling, the load based scaling will use this to scale up and scale down between minimum and maximum number of nodes.
    ${LoadBasedConfigMinNode},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityClusterpoolExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Category('Body')]
    [System.Int32]
    # User can specify the poll interval, this is the time period (in seconds) after which scaling metrics are polled for triggering a scaling operation.
    ${LoadBasedConfigPollInterval},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityClusterpoolExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [AllowEmptyCollection()]
    [Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Category('Body')]
    [Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IScalingRule[]]
    # The scaling rules.
    ${LoadBasedConfigScalingRule},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityClusterpoolExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Category('Body')]
    [System.Management.Automation.SwitchParameter]
    # True if log analytics is enabled for the cluster, otherwise false.
    ${LogAnalyticProfileEnabled},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityClusterpoolExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Category('Body')]
    [System.Management.Automation.SwitchParameter]
    # True if metrics are enabled, otherwise false.
    ${LogAnalyticProfileMetricsEnabled},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityClusterpoolExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Category('Body')]
    [System.Management.Automation.SwitchParameter]
    # Enable Prometheus for cluster or not.
    ${PrometheuProfileEnabled},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityClusterpoolExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [AllowEmptyCollection()]
    [Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Category('Body')]
    [System.String[]]
    # List of usernames that should be marked as ranger admins.
    # These usernames should match the user principal name (UPN) of the respective AAD users.
    ${RangerAdmin},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityClusterpoolExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Category('Body')]
    [System.String]
    # Azure storage location of the blobs.
    # MSI should have read/write access to this Storage account.
    ${RangerAuditStorageAccount},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityClusterpoolExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Category('Body')]
    [System.Management.Automation.SwitchParameter]
    # Enable Ranger for cluster or not.
    ${RangerPluginProfileEnabled},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityClusterpoolExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Category('Body')]
    [System.Management.Automation.SwitchParameter]
    # Denotes whether usersync service should be enabled
    ${RangerUsersyncEnabled},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityClusterpoolExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [AllowEmptyCollection()]
    [Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Category('Body')]
    [System.String[]]
    # List of groups that should be synced.
    # These group names should match the object id of the respective AAD groups.
    ${RangerUsersyncGroup},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityClusterpoolExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.PSArgumentCompleterAttribute("static", "automatic")]
    [Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Category('Body')]
    [System.String]
    # User & groups can be synced automatically or via a static list that's refreshed.
    ${RangerUsersyncMode},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityClusterpoolExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [AllowEmptyCollection()]
    [Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Category('Body')]
    [System.String[]]
    # List of user names that should be synced.
    # These usernames should match the User principal name of the respective AAD users.
    ${RangerUsersyncUser},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityClusterpoolExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Category('Body')]
    [System.String]
    # Azure storage location of a mapping file that lists user & group associations.
    ${RangerUsersyncUserMappingLocation},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityClusterpoolExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Category('Body')]
    [System.Int32]
    # Setting default node count of current schedule configuration.
    # Default node count specifies the number of nodes which are default when an specified scaling operation is executed (scale up/scale down)
    ${ScheduleBasedConfigDefaultCount},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityClusterpoolExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [AllowEmptyCollection()]
    [Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Category('Body')]
    [Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.ISchedule[]]
    # This specifies the schedules where scheduled based Autoscale to be enabled, the user has a choice to set multiple rules within the schedule across days and times (start/end).
    ${ScheduleBasedConfigSchedule},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityClusterpoolExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Category('Body')]
    [System.String]
    # User has to specify the timezone on which the schedule has to be set for schedule based autoscale configuration.
    ${ScheduleBasedConfigTimeZone},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityClusterpoolExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Category('Body')]
    [System.Int32]
    # Number of ssh pods per cluster.
    ${SshProfileCount},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityClusterpoolExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Category('Body')]
    [Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Runtime.Info(PossibleTypes=([Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterPatchTags]))]
    [System.Collections.Hashtable]
    # Resource tags.
    ${Tag},

    [Parameter(ParameterSetName='UpdateViaJsonFilePath', Mandatory)]
    [Parameter(ParameterSetName='UpgradeViaJsonFilePath', Mandatory)]
    [Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Category('Body')]
    [System.String]
    # Path of Json file supplied to the Update operation
    ${JsonFilePath},

    [Parameter(ParameterSetName='UpdateViaJsonString', Mandatory)]
    [Parameter(ParameterSetName='UpgradeViaJsonString', Mandatory)]
    [Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Category('Body')]
    [System.String]
    # Json string supplied to the Update operation
    ${JsonString},

    [Parameter(ParameterSetName='Upgrade', Mandatory, ValueFromPipeline)]
    [Parameter(ParameterSetName='UpgradeViaIdentity', Mandatory, ValueFromPipeline)]
    [Parameter(ParameterSetName='UpgradeViaIdentityClusterpool', Mandatory, ValueFromPipeline)]
    [Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Category('Body')]
    [Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterUpgrade]
    # Cluster Upgrade.
    ${ClusterUpgradeRequest},

    [Parameter(ParameterSetName='UpgradeExpanded', Mandatory)]
    [Parameter(ParameterSetName='UpgradeViaIdentityClusterpoolExpanded', Mandatory)]
    [Parameter(ParameterSetName='UpgradeViaIdentityExpanded', Mandatory)]
    [Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.PSArgumentCompleterAttribute("AKSPatchUpgrade", "HotfixUpgrade")]
    [Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Category('Body')]
    [System.String]
    # Type of upgrade.
    ${UpgradeType},

    [Parameter()]
    [Alias('AzureRMContext', 'AzureCredential')]
    [ValidateNotNull()]
    [Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Category('Azure')]
    [System.Management.Automation.PSObject]
    # The DefaultProfile parameter is not functional.
    # Use the SubscriptionId parameter when available if executing the cmdlet against a different subscription.
    ${DefaultProfile},

    [Parameter()]
    [Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Run the command as a job
    ${AsJob},

    [Parameter(DontShow)]
    [Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Category('Runtime')]
    [Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Category('Runtime')]
    [Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter()]
    [Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Run the command asynchronously
    ${NoWait},

    [Parameter(DontShow)]
    [Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName

        if ($null -eq [Microsoft.WindowsAzure.Commands.Utilities.Common.AzurePSCmdlet]::PowerShellVersion) {
            [Microsoft.WindowsAzure.Commands.Utilities.Common.AzurePSCmdlet]::PowerShellVersion = $PSVersionTable.PSVersion.ToString()
        }         
        $preTelemetryId = [Microsoft.WindowsAzure.Commands.Common.MetricHelper]::TelemetryId
        if ($preTelemetryId -eq '') {
            [Microsoft.WindowsAzure.Commands.Common.MetricHelper]::TelemetryId =(New-Guid).ToString()
            [Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.module]::Instance.Telemetry.Invoke('Create', $MyInvocation, $parameterSet, $PSCmdlet)
        } else {
            $internalCalledCmdlets = [Microsoft.WindowsAzure.Commands.Common.MetricHelper]::InternalCalledCmdlets
            if ($internalCalledCmdlets -eq '') {
                [Microsoft.WindowsAzure.Commands.Common.MetricHelper]::InternalCalledCmdlets = $MyInvocation.MyCommand.Name
            } else {
                [Microsoft.WindowsAzure.Commands.Common.MetricHelper]::InternalCalledCmdlets += ',' + $MyInvocation.MyCommand.Name
            }
            [Microsoft.WindowsAzure.Commands.Common.MetricHelper]::TelemetryId = 'internal'
        }

        $mapping = @{
            Update = 'Az.HdInsightOnAks.private\Update-AzHdInsightOnAksCluster_Update';
            UpdateExpanded = 'Az.HdInsightOnAks.private\Update-AzHdInsightOnAksCluster_UpdateExpanded';
            UpdateViaIdentity = 'Az.HdInsightOnAks.private\Update-AzHdInsightOnAksCluster_UpdateViaIdentity';
            UpdateViaIdentityClusterpool = 'Az.HdInsightOnAks.private\Update-AzHdInsightOnAksCluster_UpdateViaIdentityClusterpool';
            UpdateViaIdentityClusterpoolExpanded = 'Az.HdInsightOnAks.private\Update-AzHdInsightOnAksCluster_UpdateViaIdentityClusterpoolExpanded';
            UpdateViaIdentityExpanded = 'Az.HdInsightOnAks.private\Update-AzHdInsightOnAksCluster_UpdateViaIdentityExpanded';
            UpdateViaJsonFilePath = 'Az.HdInsightOnAks.private\Update-AzHdInsightOnAksCluster_UpdateViaJsonFilePath';
            UpdateViaJsonString = 'Az.HdInsightOnAks.private\Update-AzHdInsightOnAksCluster_UpdateViaJsonString';
            Upgrade = 'Az.HdInsightOnAks.private\Update-AzHdInsightOnAksCluster_Upgrade';
            UpgradeExpanded = 'Az.HdInsightOnAks.private\Update-AzHdInsightOnAksCluster_UpgradeExpanded';
            UpgradeViaIdentity = 'Az.HdInsightOnAks.private\Update-AzHdInsightOnAksCluster_UpgradeViaIdentity';
            UpgradeViaIdentityClusterpool = 'Az.HdInsightOnAks.private\Update-AzHdInsightOnAksCluster_UpgradeViaIdentityClusterpool';
            UpgradeViaIdentityClusterpoolExpanded = 'Az.HdInsightOnAks.private\Update-AzHdInsightOnAksCluster_UpgradeViaIdentityClusterpoolExpanded';
            UpgradeViaIdentityExpanded = 'Az.HdInsightOnAks.private\Update-AzHdInsightOnAksCluster_UpgradeViaIdentityExpanded';
            UpgradeViaJsonFilePath = 'Az.HdInsightOnAks.private\Update-AzHdInsightOnAksCluster_UpgradeViaJsonFilePath';
            UpgradeViaJsonString = 'Az.HdInsightOnAks.private\Update-AzHdInsightOnAksCluster_UpgradeViaJsonString';
        }
        if (('Update', 'UpdateExpanded', 'UpdateViaJsonFilePath', 'UpdateViaJsonString', 'Upgrade', 'UpgradeExpanded', 'UpgradeViaJsonFilePath', 'UpgradeViaJsonString') -contains $parameterSet -and -not $PSBoundParameters.ContainsKey('SubscriptionId') ) {
            $testPlayback = $false
            $PSBoundParameters['HttpPipelinePrepend'] | Foreach-Object { if ($_) { $testPlayback = $testPlayback -or ('Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Runtime.PipelineMock' -eq $_.Target.GetType().FullName -and 'Playback' -eq $_.Target.Mode) } }
            if ($testPlayback) {
                $PSBoundParameters['SubscriptionId'] = . (Join-Path $PSScriptRoot '..' 'utils' 'Get-SubscriptionIdTestSafe.ps1')
            } else {
                $PSBoundParameters['SubscriptionId'] = (Get-AzContext).Subscription.Id
            }
        }
        $cmdInfo = Get-Command -Name $mapping[$parameterSet]
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Runtime.MessageAttributeHelper]::ProcessCustomAttributesAtRuntime($cmdInfo, $MyInvocation, $parameterSet, $PSCmdlet)
        if ($null -ne $MyInvocation.MyCommand -and [Microsoft.WindowsAzure.Commands.Utilities.Common.AzurePSCmdlet]::PromptedPreviewMessageCmdlets -notcontains $MyInvocation.MyCommand.Name -and [Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Runtime.MessageAttributeHelper]::ContainsPreviewAttribute($cmdInfo, $MyInvocation)){
            [Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Runtime.MessageAttributeHelper]::ProcessPreviewMessageAttributesAtRuntime($cmdInfo, $MyInvocation, $parameterSet, $PSCmdlet)
            [Microsoft.WindowsAzure.Commands.Utilities.Common.AzurePSCmdlet]::PromptedPreviewMessageCmdlets.Enqueue($MyInvocation.MyCommand.Name)
        }
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {
        [Microsoft.WindowsAzure.Commands.Common.MetricHelper]::ClearTelemetryContext()
        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {
        [Microsoft.WindowsAzure.Commands.Common.MetricHelper]::ClearTelemetryContext()
        throw
    }

    finally {
        $backupTelemetryId = [Microsoft.WindowsAzure.Commands.Common.MetricHelper]::TelemetryId
        $backupInternalCalledCmdlets = [Microsoft.WindowsAzure.Commands.Common.MetricHelper]::InternalCalledCmdlets
        [Microsoft.WindowsAzure.Commands.Common.MetricHelper]::ClearTelemetryContext()
    }

}
end {
    try {
        $steppablePipeline.End()

        [Microsoft.WindowsAzure.Commands.Common.MetricHelper]::TelemetryId = $backupTelemetryId
        [Microsoft.WindowsAzure.Commands.Common.MetricHelper]::InternalCalledCmdlets = $backupInternalCalledCmdlets
        if ($preTelemetryId -eq '') {
            [Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.module]::Instance.Telemetry.Invoke('Send', $MyInvocation, $parameterSet, $PSCmdlet)
            [Microsoft.WindowsAzure.Commands.Common.MetricHelper]::ClearTelemetryContext()
        }
        [Microsoft.WindowsAzure.Commands.Common.MetricHelper]::TelemetryId = $preTelemetryId

    } catch {
        [Microsoft.WindowsAzure.Commands.Common.MetricHelper]::ClearTelemetryContext()
        throw
    }
} 
}
