
# ----------------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# http://www.apache.org/licenses/LICENSE-2.0
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# Code generated by Microsoft (R) AutoRest Code Generator.Changes may cause incorrect behavior and will be lost if the code
# is regenerated.
# ----------------------------------------------------------------------------------

<#
.Synopsis
Create an in-memory object for HiveCatalogOption.
.Description
Create an in-memory object for HiveCatalogOption.

.Outputs
Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.HiveCatalogOption
.Link
https://learn.microsoft.com/powershell/module/Az.HdInsightOnAks/new-azhdinsightonakstrinohivecatalogobject
#>
function New-AzHdInsightOnAksTrinoHiveCatalogObject {
    [OutputType('Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.HiveCatalogOption')]
    [CmdletBinding(PositionalBinding=$false)]
    Param(

        [Parameter(Mandatory, HelpMessage="Name of trino catalog which should use specified hive metastore.")]
        [string]
        $CatalogName,
        [Parameter(HelpMessage="The authentication mode to connect to your Hive metastore database. More details: https://learn.microsoft.com/en-us/azure/azure-sql/database/logins-create-manage?view=azuresql#authentication-and-authorization.")]
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.PSArgumentCompleterAttribute("SqlAuth", "IdentityAuth")]
        [string]
        $MetastoreDbConnectionAuthenticationMode,
        [Parameter(HelpMessage="Secret reference name from secretsProfile.secrets containing password for database connection.")]
        [string]
        $MetastoreDbConnectionPasswordSecret,
        [Parameter(Mandatory, HelpMessage="Connection string for hive metastore database.")]
        [string]
        $MetastoreDbConnectionUrl,
        [Parameter(HelpMessage="User name for database connection.")]
        [string]
        $MetastoreDbConnectionUserName,
        [Parameter(Mandatory, HelpMessage="Metastore root directory URI, format: abfs[s]://<container>@<account_name>.dfs.core.windows.net/<path>. More details: https://docs.microsoft.com/en-us/azure/storage/blobs/data-lake-storage-introduction-abfs-uri.")]
        [string]
        $MetastoreWarehouseDir
    )

    process {
        $Object = [Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.HiveCatalogOption]::New()

        if ($PSBoundParameters.ContainsKey('CatalogName')) {
            $Object.CatalogName = $CatalogName
        }
        if ($PSBoundParameters.ContainsKey('MetastoreDbConnectionAuthenticationMode')) {
            $Object.MetastoreDbConnectionAuthenticationMode = $MetastoreDbConnectionAuthenticationMode
        }
        if ($PSBoundParameters.ContainsKey('MetastoreDbConnectionPasswordSecret')) {
            $Object.MetastoreDbConnectionPasswordSecret = $MetastoreDbConnectionPasswordSecret
        }
        if ($PSBoundParameters.ContainsKey('MetastoreDbConnectionUrl')) {
            $Object.MetastoreDbConnectionUrl = $MetastoreDbConnectionUrl
        }
        if ($PSBoundParameters.ContainsKey('MetastoreDbConnectionUserName')) {
            $Object.MetastoreDbConnectionUserName = $MetastoreDbConnectionUserName
        }
        if ($PSBoundParameters.ContainsKey('MetastoreWarehouseDir')) {
            $Object.MetastoreWarehouseDir = $MetastoreWarehouseDir
        }
        return $Object
    }
}

