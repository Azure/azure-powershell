// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models
{
    using static Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Runtime.Extensions;

    /// <summary>Cluster pool resource properties.</summary>
    public partial class ClusterPoolResourceProperties :
        Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterPoolResourceProperties,
        Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterPoolResourcePropertiesInternal
    {

        /// <summary>ClientId of the MSI.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Origin(Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.PropertyOrigin.Inlined)]
        public string AkClusterProfileAkClusterAgentPoolIdentityProfileMsiClientId { get => ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IAksClusterProfileInternal)AksClusterProfile).AkClusterAgentPoolIdentityProfileMsiClientId; set => ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IAksClusterProfileInternal)AksClusterProfile).AkClusterAgentPoolIdentityProfileMsiClientId = value ?? null; }

        /// <summary>ObjectId of the MSI.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Origin(Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.PropertyOrigin.Inlined)]
        public string AkClusterProfileAkClusterAgentPoolIdentityProfileMsiObjectId { get => ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IAksClusterProfileInternal)AksClusterProfile).AkClusterAgentPoolIdentityProfileMsiObjectId; set => ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IAksClusterProfileInternal)AksClusterProfile).AkClusterAgentPoolIdentityProfileMsiObjectId = value ?? null; }

        /// <summary>ResourceId of the MSI.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Origin(Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.PropertyOrigin.Inlined)]
        public string AkClusterProfileAkClusterAgentPoolIdentityProfileMsiResourceId { get => ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IAksClusterProfileInternal)AksClusterProfile).AkClusterAgentPoolIdentityProfileMsiResourceId; set => ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IAksClusterProfileInternal)AksClusterProfile).AkClusterAgentPoolIdentityProfileMsiResourceId = value ?? null; }

        /// <summary>ARM Resource ID of the AKS cluster</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Origin(Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.PropertyOrigin.Inlined)]
        public string AkClusterProfileAksClusterResourceId { get => ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IAksClusterProfileInternal)AksClusterProfile).AksClusterResourceId; set => ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IAksClusterProfileInternal)AksClusterProfile).AksClusterResourceId = value ?? null; }

        /// <summary>AKS control plane and default node pool version of this ClusterPool</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Origin(Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.PropertyOrigin.Inlined)]
        public string AkClusterProfileAksVersion { get => ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IAksClusterProfileInternal)AksClusterProfile).AksVersion; }

        /// <summary>Backing field for <see cref="AksClusterProfile" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterPoolResourcePropertiesAksClusterProfile _aksClusterProfile;

        /// <summary>Properties of underlying AKS cluster.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Origin(Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterPoolResourcePropertiesAksClusterProfile AksClusterProfile { get => (this._aksClusterProfile = this._aksClusterProfile ?? new Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.ClusterPoolResourcePropertiesAksClusterProfile()); }

        /// <summary>Backing field for <see cref="AksManagedResourceGroupName" /> property.</summary>
        private string _aksManagedResourceGroupName;

        /// <summary>
        /// A resource group created by AKS, to hold the infrastructure resources created by AKS on-behalf of customers. It is generated
        /// by cluster pool name and managed resource group name by pattern: MC_{managedResourceGroupName}_{clusterPoolName}_{region}
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Origin(Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.PropertyOrigin.Owned)]
        public string AksManagedResourceGroupName { get => this._aksManagedResourceGroupName; }

        /// <summary>Backing field for <see cref="ClusterPoolProfile" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterPoolResourcePropertiesClusterPoolProfile _clusterPoolProfile;

        /// <summary>CLuster pool profile.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Origin(Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterPoolResourcePropertiesClusterPoolProfile ClusterPoolProfile { get => (this._clusterPoolProfile = this._clusterPoolProfile ?? new Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.ClusterPoolResourcePropertiesClusterPoolProfile()); set => this._clusterPoolProfile = value; }

        /// <summary>Cluster pool version is a 2-part version.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Origin(Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.PropertyOrigin.Inlined)]
        public string ClusterPoolProfileClusterPoolVersion { get => ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterPoolProfileInternal)ClusterPoolProfile).ClusterPoolVersion; set => ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterPoolProfileInternal)ClusterPoolProfile).ClusterPoolVersion = value ?? null; }

        /// <summary>Backing field for <see cref="ComputeProfile" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterPoolResourcePropertiesComputeProfile _computeProfile;

        /// <summary>CLuster pool compute profile.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Origin(Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterPoolResourcePropertiesComputeProfile ComputeProfile { get => (this._computeProfile = this._computeProfile ?? new Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.ClusterPoolResourcePropertiesComputeProfile()); set => this._computeProfile = value; }

        /// <summary>The number of virtual machines.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Origin(Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.PropertyOrigin.Inlined)]
        public int? ComputeProfileCount { get => ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterPoolComputeProfileInternal)ComputeProfile).Count; }

        /// <summary>The virtual machine SKU.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Origin(Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.PropertyOrigin.Inlined)]
        public string ComputeProfileVMSize { get => ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterPoolComputeProfileInternal)ComputeProfile).VMSize; set => ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterPoolComputeProfileInternal)ComputeProfile).VMSize = value ; }

        /// <summary>Backing field for <see cref="DeploymentId" /> property.</summary>
        private string _deploymentId;

        /// <summary>A unique id generated by the RP to identify the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Origin(Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.PropertyOrigin.Owned)]
        public string DeploymentId { get => this._deploymentId; }

        /// <summary>True if log analytics is enabled for cluster pool, otherwise false.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Origin(Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.PropertyOrigin.Inlined)]
        public bool? LogAnalyticProfileEnabled { get => ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterPoolLogAnalyticsProfileInternal)LogAnalyticsProfile).Enabled; set => ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterPoolLogAnalyticsProfileInternal)LogAnalyticsProfile).Enabled = value ?? default(bool); }

        /// <summary>Log analytics workspace to associate with the OMS agent.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Origin(Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.PropertyOrigin.Inlined)]
        public string LogAnalyticProfileWorkspaceId { get => ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterPoolLogAnalyticsProfileInternal)LogAnalyticsProfile).WorkspaceId; set => ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterPoolLogAnalyticsProfileInternal)LogAnalyticsProfile).WorkspaceId = value ?? null; }

        /// <summary>Backing field for <see cref="LogAnalyticsProfile" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterPoolResourcePropertiesLogAnalyticsProfile _logAnalyticsProfile;

        /// <summary>Cluster pool log analytics profile to enable OMS agent for AKS cluster.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Origin(Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterPoolResourcePropertiesLogAnalyticsProfile LogAnalyticsProfile { get => (this._logAnalyticsProfile = this._logAnalyticsProfile ?? new Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.ClusterPoolResourcePropertiesLogAnalyticsProfile()); set => this._logAnalyticsProfile = value; }

        /// <summary>Backing field for <see cref="ManagedResourceGroupName" /> property.</summary>
        private string _managedResourceGroupName;

        /// <summary>
        /// A resource group created by RP, to hold the resources created by RP on-behalf of customers. It will also be used to generate
        /// aksManagedResourceGroupName by pattern: MC_{managedResourceGroupName}_{clusterPoolName}_{region}. Please make sure it
        /// meets resource group name restriction.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Origin(Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.PropertyOrigin.Owned)]
        public string ManagedResourceGroupName { get => this._managedResourceGroupName; set => this._managedResourceGroupName = value; }

        /// <summary>Internal Acessors for AkClusterProfileAksClusterAgentPoolIdentityProfile</summary>
        Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IAksClusterProfileAksClusterAgentPoolIdentityProfile Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterPoolResourcePropertiesInternal.AkClusterProfileAksClusterAgentPoolIdentityProfile { get => ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IAksClusterProfileInternal)AksClusterProfile).AksClusterAgentPoolIdentityProfile; set => ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IAksClusterProfileInternal)AksClusterProfile).AksClusterAgentPoolIdentityProfile = value; }

        /// <summary>Internal Acessors for AkClusterProfileAksVersion</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterPoolResourcePropertiesInternal.AkClusterProfileAksVersion { get => ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IAksClusterProfileInternal)AksClusterProfile).AksVersion; set => ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IAksClusterProfileInternal)AksClusterProfile).AksVersion = value; }

        /// <summary>Internal Acessors for AksClusterProfile</summary>
        Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterPoolResourcePropertiesAksClusterProfile Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterPoolResourcePropertiesInternal.AksClusterProfile { get => (this._aksClusterProfile = this._aksClusterProfile ?? new Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.ClusterPoolResourcePropertiesAksClusterProfile()); set { {_aksClusterProfile = value;} } }

        /// <summary>Internal Acessors for AksManagedResourceGroupName</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterPoolResourcePropertiesInternal.AksManagedResourceGroupName { get => this._aksManagedResourceGroupName; set { {_aksManagedResourceGroupName = value;} } }

        /// <summary>Internal Acessors for ClusterPoolProfile</summary>
        Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterPoolResourcePropertiesClusterPoolProfile Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterPoolResourcePropertiesInternal.ClusterPoolProfile { get => (this._clusterPoolProfile = this._clusterPoolProfile ?? new Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.ClusterPoolResourcePropertiesClusterPoolProfile()); set { {_clusterPoolProfile = value;} } }

        /// <summary>Internal Acessors for ComputeProfile</summary>
        Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterPoolResourcePropertiesComputeProfile Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterPoolResourcePropertiesInternal.ComputeProfile { get => (this._computeProfile = this._computeProfile ?? new Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.ClusterPoolResourcePropertiesComputeProfile()); set { {_computeProfile = value;} } }

        /// <summary>Internal Acessors for ComputeProfileCount</summary>
        int? Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterPoolResourcePropertiesInternal.ComputeProfileCount { get => ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterPoolComputeProfileInternal)ComputeProfile).Count; set => ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterPoolComputeProfileInternal)ComputeProfile).Count = value; }

        /// <summary>Internal Acessors for DeploymentId</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterPoolResourcePropertiesInternal.DeploymentId { get => this._deploymentId; set { {_deploymentId = value;} } }

        /// <summary>Internal Acessors for LogAnalyticsProfile</summary>
        Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterPoolResourcePropertiesLogAnalyticsProfile Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterPoolResourcePropertiesInternal.LogAnalyticsProfile { get => (this._logAnalyticsProfile = this._logAnalyticsProfile ?? new Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.ClusterPoolResourcePropertiesLogAnalyticsProfile()); set { {_logAnalyticsProfile = value;} } }

        /// <summary>Internal Acessors for NetworkProfile</summary>
        Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterPoolResourcePropertiesNetworkProfile Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterPoolResourcePropertiesInternal.NetworkProfile { get => (this._networkProfile = this._networkProfile ?? new Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.ClusterPoolResourcePropertiesNetworkProfile()); set { {_networkProfile = value;} } }

        /// <summary>Internal Acessors for ProvisioningState</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterPoolResourcePropertiesInternal.ProvisioningState { get => this._provisioningState; set { {_provisioningState = value;} } }

        /// <summary>Internal Acessors for Status</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterPoolResourcePropertiesInternal.Status { get => this._status; set { {_status = value;} } }

        /// <summary>Backing field for <see cref="NetworkProfile" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterPoolResourcePropertiesNetworkProfile _networkProfile;

        /// <summary>Cluster pool network profile.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Origin(Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterPoolResourcePropertiesNetworkProfile NetworkProfile { get => (this._networkProfile = this._networkProfile ?? new Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.ClusterPoolResourcePropertiesNetworkProfile()); set => this._networkProfile = value; }

        /// <summary>
        /// IP ranges are specified in CIDR format, e.g. 137.117.106.88/29. This feature is not compatible with private AKS clusters.
        /// So you cannot set enablePrivateApiServer to true and apiServerAuthorizedIpRanges at the same time.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Origin(Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.PropertyOrigin.Inlined)]
        public System.Collections.Generic.List<string> NetworkProfileApiServerAuthorizedIPRange { get => ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterPoolNetworkProfileInternal)NetworkProfile).ApiServerAuthorizedIPRange; set => ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterPoolNetworkProfileInternal)NetworkProfile).ApiServerAuthorizedIPRange = value ?? null /* arrayOf */; }

        /// <summary>
        /// ClusterPool is based on AKS cluster. AKS cluster exposes the API server to public internet by default. If you set this
        /// property to true, a private AKS cluster will be created, and it will use private apiserver, which is not exposed to public
        /// internet.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Origin(Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.PropertyOrigin.Inlined)]
        public bool? NetworkProfileEnablePrivateApiServer { get => ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterPoolNetworkProfileInternal)NetworkProfile).EnablePrivateApiServer; set => ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterPoolNetworkProfileInternal)NetworkProfile).EnablePrivateApiServer = value ?? default(bool); }

        /// <summary>
        /// This can only be set at cluster pool creation time and cannot be changed later.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Origin(Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.PropertyOrigin.Inlined)]
        public string NetworkProfileOutboundType { get => ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterPoolNetworkProfileInternal)NetworkProfile).OutboundType; set => ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterPoolNetworkProfileInternal)NetworkProfile).OutboundType = value ?? null; }

        /// <summary>Cluster pool subnet resource id.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Origin(Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.PropertyOrigin.Inlined)]
        public string NetworkProfileSubnetId { get => ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterPoolNetworkProfileInternal)NetworkProfile).SubnetId; set => ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterPoolNetworkProfileInternal)NetworkProfile).SubnetId = value ?? null; }

        /// <summary>Backing field for <see cref="ProvisioningState" /> property.</summary>
        private string _provisioningState;

        /// <summary>Provisioning state of the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Origin(Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.PropertyOrigin.Owned)]
        public string ProvisioningState { get => this._provisioningState; }

        /// <summary>Backing field for <see cref="Status" /> property.</summary>
        private string _status;

        /// <summary>Business status of the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Origin(Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.PropertyOrigin.Owned)]
        public string Status { get => this._status; }

        /// <summary>Creates an new <see cref="ClusterPoolResourceProperties" /> instance.</summary>
        public ClusterPoolResourceProperties()
        {

        }
    }
    /// Cluster pool resource properties.
    public partial interface IClusterPoolResourceProperties :
        Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Runtime.IJsonSerializable
    {
        /// <summary>ClientId of the MSI.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"ClientId of the MSI.",
        SerializedName = @"msiClientId",
        PossibleTypes = new [] { typeof(string) })]
        string AkClusterProfileAkClusterAgentPoolIdentityProfileMsiClientId { get;  }
        /// <summary>ObjectId of the MSI.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"ObjectId of the MSI.",
        SerializedName = @"msiObjectId",
        PossibleTypes = new [] { typeof(string) })]
        string AkClusterProfileAkClusterAgentPoolIdentityProfileMsiObjectId { get;  }
        /// <summary>ResourceId of the MSI.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"ResourceId of the MSI.",
        SerializedName = @"msiResourceId",
        PossibleTypes = new [] { typeof(string) })]
        string AkClusterProfileAkClusterAgentPoolIdentityProfileMsiResourceId { get;  }
        /// <summary>ARM Resource ID of the AKS cluster</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"ARM Resource ID of the AKS cluster",
        SerializedName = @"aksClusterResourceId",
        PossibleTypes = new [] { typeof(string) })]
        string AkClusterProfileAksClusterResourceId { get;  }
        /// <summary>AKS control plane and default node pool version of this ClusterPool</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"AKS control plane and default node pool version of this ClusterPool",
        SerializedName = @"aksVersion",
        PossibleTypes = new [] { typeof(string) })]
        string AkClusterProfileAksVersion { get;  }
        /// <summary>
        /// A resource group created by AKS, to hold the infrastructure resources created by AKS on-behalf of customers. It is generated
        /// by cluster pool name and managed resource group name by pattern: MC_{managedResourceGroupName}_{clusterPoolName}_{region}
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"A resource group created by AKS, to hold the infrastructure resources created by AKS on-behalf of customers. It is generated by cluster pool name and managed resource group name by pattern: MC_{managedResourceGroupName}_{clusterPoolName}_{region}",
        SerializedName = @"aksManagedResourceGroupName",
        PossibleTypes = new [] { typeof(string) })]
        string AksManagedResourceGroupName { get;  }
        /// <summary>Cluster pool version is a 2-part version.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Cluster pool version is a 2-part version.",
        SerializedName = @"clusterPoolVersion",
        PossibleTypes = new [] { typeof(string) })]
        string ClusterPoolProfileClusterPoolVersion { get; set; }
        /// <summary>The number of virtual machines.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The number of virtual machines.",
        SerializedName = @"count",
        PossibleTypes = new [] { typeof(int) })]
        int? ComputeProfileCount { get;  }
        /// <summary>The virtual machine SKU.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The virtual machine SKU.",
        SerializedName = @"vmSize",
        PossibleTypes = new [] { typeof(string) })]
        string ComputeProfileVMSize { get; set; }
        /// <summary>A unique id generated by the RP to identify the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"A unique id generated by the RP to identify the resource.",
        SerializedName = @"deploymentId",
        PossibleTypes = new [] { typeof(string) })]
        string DeploymentId { get;  }
        /// <summary>True if log analytics is enabled for cluster pool, otherwise false.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"True if log analytics is enabled for cluster pool, otherwise false.",
        SerializedName = @"enabled",
        PossibleTypes = new [] { typeof(bool) })]
        bool? LogAnalyticProfileEnabled { get; set; }
        /// <summary>Log analytics workspace to associate with the OMS agent.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Log analytics workspace to associate with the OMS agent.",
        SerializedName = @"workspaceId",
        PossibleTypes = new [] { typeof(string) })]
        string LogAnalyticProfileWorkspaceId { get; set; }
        /// <summary>
        /// A resource group created by RP, to hold the resources created by RP on-behalf of customers. It will also be used to generate
        /// aksManagedResourceGroupName by pattern: MC_{managedResourceGroupName}_{clusterPoolName}_{region}. Please make sure it
        /// meets resource group name restriction.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"A resource group created by RP, to hold the resources created by RP on-behalf of customers. It will also be used to generate aksManagedResourceGroupName by pattern: MC_{managedResourceGroupName}_{clusterPoolName}_{region}. Please make sure it meets resource group name restriction.",
        SerializedName = @"managedResourceGroupName",
        PossibleTypes = new [] { typeof(string) })]
        string ManagedResourceGroupName { get; set; }
        /// <summary>
        /// IP ranges are specified in CIDR format, e.g. 137.117.106.88/29. This feature is not compatible with private AKS clusters.
        /// So you cannot set enablePrivateApiServer to true and apiServerAuthorizedIpRanges at the same time.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"IP ranges are specified in CIDR format, e.g. 137.117.106.88/29. This feature is not compatible with private AKS clusters. So you cannot set enablePrivateApiServer to true and apiServerAuthorizedIpRanges at the same time.",
        SerializedName = @"apiServerAuthorizedIpRanges",
        PossibleTypes = new [] { typeof(string) })]
        System.Collections.Generic.List<string> NetworkProfileApiServerAuthorizedIPRange { get; set; }
        /// <summary>
        /// ClusterPool is based on AKS cluster. AKS cluster exposes the API server to public internet by default. If you set this
        /// property to true, a private AKS cluster will be created, and it will use private apiserver, which is not exposed to public
        /// internet.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = false,
        Description = @"ClusterPool is based on AKS cluster. AKS cluster exposes the API server to public internet by default. If you set this property to true, a private AKS cluster will be created, and it will use private apiserver, which is not exposed to public internet.",
        SerializedName = @"enablePrivateApiServer",
        PossibleTypes = new [] { typeof(bool) })]
        bool? NetworkProfileEnablePrivateApiServer { get; set; }
        /// <summary>
        /// This can only be set at cluster pool creation time and cannot be changed later.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"This can only be set at cluster pool creation time and cannot be changed later. ",
        SerializedName = @"outboundType",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.PSArgumentCompleterAttribute("loadBalancer", "userDefinedRouting")]
        string NetworkProfileOutboundType { get; set; }
        /// <summary>Cluster pool subnet resource id.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Cluster pool subnet resource id.",
        SerializedName = @"subnetId",
        PossibleTypes = new [] { typeof(string) })]
        string NetworkProfileSubnetId { get; set; }
        /// <summary>Provisioning state of the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"Provisioning state of the resource.",
        SerializedName = @"provisioningState",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.PSArgumentCompleterAttribute("Accepted", "Succeeded", "Canceled", "Failed")]
        string ProvisioningState { get;  }
        /// <summary>Business status of the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"Business status of the resource.",
        SerializedName = @"status",
        PossibleTypes = new [] { typeof(string) })]
        string Status { get;  }

    }
    /// Cluster pool resource properties.
    internal partial interface IClusterPoolResourcePropertiesInternal

    {
        /// <summary>ClientId of the MSI.</summary>
        string AkClusterProfileAkClusterAgentPoolIdentityProfileMsiClientId { get; set; }
        /// <summary>ObjectId of the MSI.</summary>
        string AkClusterProfileAkClusterAgentPoolIdentityProfileMsiObjectId { get; set; }
        /// <summary>ResourceId of the MSI.</summary>
        string AkClusterProfileAkClusterAgentPoolIdentityProfileMsiResourceId { get; set; }
        /// <summary>Identity properties of the AKS cluster agentpool MSI</summary>
        Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IAksClusterProfileAksClusterAgentPoolIdentityProfile AkClusterProfileAksClusterAgentPoolIdentityProfile { get; set; }
        /// <summary>ARM Resource ID of the AKS cluster</summary>
        string AkClusterProfileAksClusterResourceId { get; set; }
        /// <summary>AKS control plane and default node pool version of this ClusterPool</summary>
        string AkClusterProfileAksVersion { get; set; }
        /// <summary>Properties of underlying AKS cluster.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterPoolResourcePropertiesAksClusterProfile AksClusterProfile { get; set; }
        /// <summary>
        /// A resource group created by AKS, to hold the infrastructure resources created by AKS on-behalf of customers. It is generated
        /// by cluster pool name and managed resource group name by pattern: MC_{managedResourceGroupName}_{clusterPoolName}_{region}
        /// </summary>
        string AksManagedResourceGroupName { get; set; }
        /// <summary>CLuster pool profile.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterPoolResourcePropertiesClusterPoolProfile ClusterPoolProfile { get; set; }
        /// <summary>Cluster pool version is a 2-part version.</summary>
        string ClusterPoolProfileClusterPoolVersion { get; set; }
        /// <summary>CLuster pool compute profile.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterPoolResourcePropertiesComputeProfile ComputeProfile { get; set; }
        /// <summary>The number of virtual machines.</summary>
        int? ComputeProfileCount { get; set; }
        /// <summary>The virtual machine SKU.</summary>
        string ComputeProfileVMSize { get; set; }
        /// <summary>A unique id generated by the RP to identify the resource.</summary>
        string DeploymentId { get; set; }
        /// <summary>True if log analytics is enabled for cluster pool, otherwise false.</summary>
        bool? LogAnalyticProfileEnabled { get; set; }
        /// <summary>Log analytics workspace to associate with the OMS agent.</summary>
        string LogAnalyticProfileWorkspaceId { get; set; }
        /// <summary>Cluster pool log analytics profile to enable OMS agent for AKS cluster.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterPoolResourcePropertiesLogAnalyticsProfile LogAnalyticsProfile { get; set; }
        /// <summary>
        /// A resource group created by RP, to hold the resources created by RP on-behalf of customers. It will also be used to generate
        /// aksManagedResourceGroupName by pattern: MC_{managedResourceGroupName}_{clusterPoolName}_{region}. Please make sure it
        /// meets resource group name restriction.
        /// </summary>
        string ManagedResourceGroupName { get; set; }
        /// <summary>Cluster pool network profile.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterPoolResourcePropertiesNetworkProfile NetworkProfile { get; set; }
        /// <summary>
        /// IP ranges are specified in CIDR format, e.g. 137.117.106.88/29. This feature is not compatible with private AKS clusters.
        /// So you cannot set enablePrivateApiServer to true and apiServerAuthorizedIpRanges at the same time.
        /// </summary>
        System.Collections.Generic.List<string> NetworkProfileApiServerAuthorizedIPRange { get; set; }
        /// <summary>
        /// ClusterPool is based on AKS cluster. AKS cluster exposes the API server to public internet by default. If you set this
        /// property to true, a private AKS cluster will be created, and it will use private apiserver, which is not exposed to public
        /// internet.
        /// </summary>
        bool? NetworkProfileEnablePrivateApiServer { get; set; }
        /// <summary>
        /// This can only be set at cluster pool creation time and cannot be changed later.
        /// </summary>
        [global::Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.PSArgumentCompleterAttribute("loadBalancer", "userDefinedRouting")]
        string NetworkProfileOutboundType { get; set; }
        /// <summary>Cluster pool subnet resource id.</summary>
        string NetworkProfileSubnetId { get; set; }
        /// <summary>Provisioning state of the resource.</summary>
        [global::Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.PSArgumentCompleterAttribute("Accepted", "Succeeded", "Canceled", "Failed")]
        string ProvisioningState { get; set; }
        /// <summary>Business status of the resource.</summary>
        string Status { get; set; }

    }
}