// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models
{
    using static Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Runtime.Extensions;

    /// <summary>The Kafka cluster profile.</summary>
    public partial class KafkaProfile :
        Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IKafkaProfile,
        Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IKafkaProfileInternal
    {

        /// <summary>Backing field for <see cref="ClusterIdentity" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IIdentityProfile _clusterIdentity;

        /// <summary>Identity of the internal service components inside the Kafka cluster.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Origin(Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IIdentityProfile ClusterIdentity { get => (this._clusterIdentity = this._clusterIdentity ?? new Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IdentityProfile()); }

        /// <summary>ClientId of the MSI.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Origin(Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.PropertyOrigin.Inlined)]
        public string ClusterIdentityMsiClientId { get => ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IIdentityProfileInternal)ClusterIdentity).MsiClientId; set => ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IIdentityProfileInternal)ClusterIdentity).MsiClientId = value ?? null; }

        /// <summary>ObjectId of the MSI.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Origin(Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.PropertyOrigin.Inlined)]
        public string ClusterIdentityMsiObjectId { get => ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IIdentityProfileInternal)ClusterIdentity).MsiObjectId; set => ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IIdentityProfileInternal)ClusterIdentity).MsiObjectId = value ?? null; }

        /// <summary>ResourceId of the MSI.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Origin(Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.PropertyOrigin.Inlined)]
        public string ClusterIdentityMsiResourceId { get => ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IIdentityProfileInternal)ClusterIdentity).MsiResourceId; set => ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IIdentityProfileInternal)ClusterIdentity).MsiResourceId = value ?? null; }

        /// <summary>Backing field for <see cref="ConnectivityEndpoint" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IKafkaConnectivityEndpoints _connectivityEndpoint;

        /// <summary>Kafka bootstrap server and brokers related connectivity endpoints.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Origin(Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IKafkaConnectivityEndpoints ConnectivityEndpoint { get => (this._connectivityEndpoint = this._connectivityEndpoint ?? new Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.KafkaConnectivityEndpoints()); }

        /// <summary>bootstrap server connectivity endpoint.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Origin(Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.PropertyOrigin.Inlined)]
        public string ConnectivityEndpointBootstrapServerEndpoint { get => ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IKafkaConnectivityEndpointsInternal)ConnectivityEndpoint).BootstrapServerEndpoint; set => ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IKafkaConnectivityEndpointsInternal)ConnectivityEndpoint).BootstrapServerEndpoint = value ?? null; }

        /// <summary>Kafka broker endpoint list.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Origin(Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.PropertyOrigin.Inlined)]
        public System.Collections.Generic.List<string> ConnectivityEndpointBrokerEndpoint { get => ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IKafkaConnectivityEndpointsInternal)ConnectivityEndpoint).BrokerEndpoint; set => ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IKafkaConnectivityEndpointsInternal)ConnectivityEndpoint).BrokerEndpoint = value ?? null /* arrayOf */; }

        /// <summary>Backing field for <see cref="DiskStorage" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IDiskStorageProfile _diskStorage;

        /// <summary>Kafka disk storage profile.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Origin(Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IDiskStorageProfile DiskStorage { get => (this._diskStorage = this._diskStorage ?? new Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.DiskStorageProfile()); set => this._diskStorage = value; }

        /// <summary>
        /// Managed Disk size in GB. The maximum supported disk size for Standard and Premium HDD/SSD is 32TB, except for Premium
        /// SSD v2, which supports up to 64TB.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Origin(Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.PropertyOrigin.Inlined)]
        public int DiskStorageDataDiskSize { get => ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IDiskStorageProfileInternal)DiskStorage).DataDiskSize; set => ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IDiskStorageProfileInternal)DiskStorage).DataDiskSize = value ; }

        /// <summary>Managed Disk Type.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Origin(Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.PropertyOrigin.Inlined)]
        public string DiskStorageDataDiskType { get => ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IDiskStorageProfileInternal)DiskStorage).DataDiskType; set => ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IDiskStorageProfileInternal)DiskStorage).DataDiskType = value ; }

        /// <summary>Backing field for <see cref="EnableKRaft" /> property.</summary>
        private bool? _enableKRaft;

        /// <summary>Expose Kafka cluster in KRaft mode.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Origin(Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.PropertyOrigin.Owned)]
        public bool? EnableKRaft { get => this._enableKRaft; set => this._enableKRaft = value; }

        /// <summary>Backing field for <see cref="EnablePublicEndpoint" /> property.</summary>
        private bool? _enablePublicEndpoint;

        /// <summary>Expose worker nodes as public endpoints.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Origin(Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.PropertyOrigin.Owned)]
        public bool? EnablePublicEndpoint { get => this._enablePublicEndpoint; set => this._enablePublicEndpoint = value; }

        /// <summary>Internal Acessors for ClusterIdentity</summary>
        Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IIdentityProfile Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IKafkaProfileInternal.ClusterIdentity { get => (this._clusterIdentity = this._clusterIdentity ?? new Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IdentityProfile()); set { {_clusterIdentity = value;} } }

        /// <summary>Internal Acessors for ConnectivityEndpoint</summary>
        Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IKafkaConnectivityEndpoints Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IKafkaProfileInternal.ConnectivityEndpoint { get => (this._connectivityEndpoint = this._connectivityEndpoint ?? new Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.KafkaConnectivityEndpoints()); set { {_connectivityEndpoint = value;} } }

        /// <summary>Internal Acessors for DiskStorage</summary>
        Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IDiskStorageProfile Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IKafkaProfileInternal.DiskStorage { get => (this._diskStorage = this._diskStorage ?? new Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.DiskStorageProfile()); set { {_diskStorage = value;} } }

        /// <summary>Backing field for <see cref="RemoteStorageUri" /> property.</summary>
        private string _remoteStorageUri;

        /// <summary>Fully qualified path of Azure Storage container used for Tiered Storage.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Origin(Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.PropertyOrigin.Owned)]
        public string RemoteStorageUri { get => this._remoteStorageUri; set => this._remoteStorageUri = value; }

        /// <summary>Creates an new <see cref="KafkaProfile" /> instance.</summary>
        public KafkaProfile()
        {

        }
    }
    /// The Kafka cluster profile.
    public partial interface IKafkaProfile :
        Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Runtime.IJsonSerializable
    {
        /// <summary>ClientId of the MSI.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"ClientId of the MSI.",
        SerializedName = @"msiClientId",
        PossibleTypes = new [] { typeof(string) })]
        string ClusterIdentityMsiClientId { get;  }
        /// <summary>ObjectId of the MSI.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"ObjectId of the MSI.",
        SerializedName = @"msiObjectId",
        PossibleTypes = new [] { typeof(string) })]
        string ClusterIdentityMsiObjectId { get;  }
        /// <summary>ResourceId of the MSI.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"ResourceId of the MSI.",
        SerializedName = @"msiResourceId",
        PossibleTypes = new [] { typeof(string) })]
        string ClusterIdentityMsiResourceId { get;  }
        /// <summary>bootstrap server connectivity endpoint.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"bootstrap server connectivity endpoint.",
        SerializedName = @"bootstrapServerEndpoint",
        PossibleTypes = new [] { typeof(string) })]
        string ConnectivityEndpointBootstrapServerEndpoint { get;  }
        /// <summary>Kafka broker endpoint list.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"Kafka broker endpoint list.",
        SerializedName = @"brokerEndpoints",
        PossibleTypes = new [] { typeof(string) })]
        System.Collections.Generic.List<string> ConnectivityEndpointBrokerEndpoint { get;  }
        /// <summary>
        /// Managed Disk size in GB. The maximum supported disk size for Standard and Premium HDD/SSD is 32TB, except for Premium
        /// SSD v2, which supports up to 64TB.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Managed Disk size in GB. The maximum supported disk size for Standard and Premium HDD/SSD is 32TB, except for Premium SSD v2, which supports up to 64TB.",
        SerializedName = @"dataDiskSize",
        PossibleTypes = new [] { typeof(int) })]
        int DiskStorageDataDiskSize { get; set; }
        /// <summary>Managed Disk Type.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Managed Disk Type.",
        SerializedName = @"dataDiskType",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.PSArgumentCompleterAttribute("Standard_HDD_LRS", "Standard_SSD_LRS", "Standard_SSD_ZRS", "Premium_SSD_LRS", "Premium_SSD_ZRS", "Premium_SSD_v2_LRS")]
        string DiskStorageDataDiskType { get; set; }
        /// <summary>Expose Kafka cluster in KRaft mode.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Expose Kafka cluster in KRaft mode.",
        SerializedName = @"enableKRaft",
        PossibleTypes = new [] { typeof(bool) })]
        bool? EnableKRaft { get; set; }
        /// <summary>Expose worker nodes as public endpoints.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Expose worker nodes as public endpoints.",
        SerializedName = @"enablePublicEndpoints",
        PossibleTypes = new [] { typeof(bool) })]
        bool? EnablePublicEndpoint { get; set; }
        /// <summary>Fully qualified path of Azure Storage container used for Tiered Storage.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Fully qualified path of Azure Storage container used for Tiered Storage.",
        SerializedName = @"remoteStorageUri",
        PossibleTypes = new [] { typeof(string) })]
        string RemoteStorageUri { get; set; }

    }
    /// The Kafka cluster profile.
    internal partial interface IKafkaProfileInternal

    {
        /// <summary>Identity of the internal service components inside the Kafka cluster.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IIdentityProfile ClusterIdentity { get; set; }
        /// <summary>ClientId of the MSI.</summary>
        string ClusterIdentityMsiClientId { get; set; }
        /// <summary>ObjectId of the MSI.</summary>
        string ClusterIdentityMsiObjectId { get; set; }
        /// <summary>ResourceId of the MSI.</summary>
        string ClusterIdentityMsiResourceId { get; set; }
        /// <summary>Kafka bootstrap server and brokers related connectivity endpoints.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IKafkaConnectivityEndpoints ConnectivityEndpoint { get; set; }
        /// <summary>bootstrap server connectivity endpoint.</summary>
        string ConnectivityEndpointBootstrapServerEndpoint { get; set; }
        /// <summary>Kafka broker endpoint list.</summary>
        System.Collections.Generic.List<string> ConnectivityEndpointBrokerEndpoint { get; set; }
        /// <summary>Kafka disk storage profile.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IDiskStorageProfile DiskStorage { get; set; }
        /// <summary>
        /// Managed Disk size in GB. The maximum supported disk size for Standard and Premium HDD/SSD is 32TB, except for Premium
        /// SSD v2, which supports up to 64TB.
        /// </summary>
        int DiskStorageDataDiskSize { get; set; }
        /// <summary>Managed Disk Type.</summary>
        [global::Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.PSArgumentCompleterAttribute("Standard_HDD_LRS", "Standard_SSD_LRS", "Standard_SSD_ZRS", "Premium_SSD_LRS", "Premium_SSD_ZRS", "Premium_SSD_v2_LRS")]
        string DiskStorageDataDiskType { get; set; }
        /// <summary>Expose Kafka cluster in KRaft mode.</summary>
        bool? EnableKRaft { get; set; }
        /// <summary>Expose worker nodes as public endpoints.</summary>
        bool? EnablePublicEndpoint { get; set; }
        /// <summary>Fully qualified path of Azure Storage container used for Tiered Storage.</summary>
        string RemoteStorageUri { get; set; }

    }
}