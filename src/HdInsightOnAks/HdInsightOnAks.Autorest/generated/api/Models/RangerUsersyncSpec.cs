// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models
{
    using static Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Runtime.Extensions;

    /// <summary>Specification for the Ranger Usersync service</summary>
    public partial class RangerUsersyncSpec :
        Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IRangerUsersyncSpec,
        Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IRangerUsersyncSpecInternal
    {

        /// <summary>Backing field for <see cref="Enabled" /> property.</summary>
        private bool? _enabled;

        /// <summary>Denotes whether usersync service should be enabled</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Origin(Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.PropertyOrigin.Owned)]
        public bool? Enabled { get => this._enabled; set => this._enabled = value; }

        /// <summary>Backing field for <see cref="Group" /> property.</summary>
        private System.Collections.Generic.List<string> _group;

        /// <summary>
        /// List of groups that should be synced. These group names should match the object id of the respective AAD groups.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Origin(Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.PropertyOrigin.Owned)]
        public System.Collections.Generic.List<string> Group { get => this._group; set => this._group = value; }

        /// <summary>Backing field for <see cref="Mode" /> property.</summary>
        private string _mode;

        /// <summary>
        /// User & groups can be synced automatically or via a static list that's refreshed.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Origin(Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.PropertyOrigin.Owned)]
        public string Mode { get => this._mode; set => this._mode = value; }

        /// <summary>Backing field for <see cref="User" /> property.</summary>
        private System.Collections.Generic.List<string> _user;

        /// <summary>
        /// List of user names that should be synced. These usernames should match the User principal name of the respective AAD users.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Origin(Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.PropertyOrigin.Owned)]
        public System.Collections.Generic.List<string> User { get => this._user; set => this._user = value; }

        /// <summary>Backing field for <see cref="UserMappingLocation" /> property.</summary>
        private string _userMappingLocation;

        /// <summary>Azure storage location of a mapping file that lists user & group associations.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Origin(Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.PropertyOrigin.Owned)]
        public string UserMappingLocation { get => this._userMappingLocation; set => this._userMappingLocation = value; }

        /// <summary>Creates an new <see cref="RangerUsersyncSpec" /> instance.</summary>
        public RangerUsersyncSpec()
        {

        }
    }
    /// Specification for the Ranger Usersync service
    public partial interface IRangerUsersyncSpec :
        Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Runtime.IJsonSerializable
    {
        /// <summary>Denotes whether usersync service should be enabled</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Denotes whether usersync service should be enabled",
        SerializedName = @"enabled",
        PossibleTypes = new [] { typeof(bool) })]
        bool? Enabled { get; set; }
        /// <summary>
        /// List of groups that should be synced. These group names should match the object id of the respective AAD groups.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"List of groups that should be synced. These group names should match the object id of the respective AAD groups.",
        SerializedName = @"groups",
        PossibleTypes = new [] { typeof(string) })]
        System.Collections.Generic.List<string> Group { get; set; }
        /// <summary>
        /// User & groups can be synced automatically or via a static list that's refreshed.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"User & groups can be synced automatically or via a static list that's refreshed.",
        SerializedName = @"mode",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.PSArgumentCompleterAttribute("static", "automatic")]
        string Mode { get; set; }
        /// <summary>
        /// List of user names that should be synced. These usernames should match the User principal name of the respective AAD users.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"List of user names that should be synced. These usernames should match the User principal name of the respective AAD users.",
        SerializedName = @"users",
        PossibleTypes = new [] { typeof(string) })]
        System.Collections.Generic.List<string> User { get; set; }
        /// <summary>Azure storage location of a mapping file that lists user & group associations.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Azure storage location of a mapping file that lists user & group associations.",
        SerializedName = @"userMappingLocation",
        PossibleTypes = new [] { typeof(string) })]
        string UserMappingLocation { get; set; }

    }
    /// Specification for the Ranger Usersync service
    internal partial interface IRangerUsersyncSpecInternal

    {
        /// <summary>Denotes whether usersync service should be enabled</summary>
        bool? Enabled { get; set; }
        /// <summary>
        /// List of groups that should be synced. These group names should match the object id of the respective AAD groups.
        /// </summary>
        System.Collections.Generic.List<string> Group { get; set; }
        /// <summary>
        /// User & groups can be synced automatically or via a static list that's refreshed.
        /// </summary>
        [global::Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.PSArgumentCompleterAttribute("static", "automatic")]
        string Mode { get; set; }
        /// <summary>
        /// List of user names that should be synced. These usernames should match the User principal name of the respective AAD users.
        /// </summary>
        System.Collections.Generic.List<string> User { get; set; }
        /// <summary>Azure storage location of a mapping file that lists user & group associations.</summary>
        string UserMappingLocation { get; set; }

    }
}