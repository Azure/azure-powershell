// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models
{
    using Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Runtime.PowerShell;

    /// <summary>The cluster.</summary>
    [System.ComponentModel.TypeConverter(typeof(ClusterTypeConverter))]
    public partial class Cluster
    {

        /// <summary>
        /// <c>AfterDeserializeDictionary</c> will be called after the deserialization has finished, allowing customization of the
        /// object before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>

        partial void AfterDeserializeDictionary(global::System.Collections.IDictionary content);

        /// <summary>
        /// <c>AfterDeserializePSObject</c> will be called after the deserialization has finished, allowing customization of the object
        /// before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>

        partial void AfterDeserializePSObject(global::System.Management.Automation.PSObject content);

        /// <summary>
        /// <c>BeforeDeserializeDictionary</c> will be called before the deserialization has commenced, allowing complete customization
        /// of the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <paramref name="returnNow" /> output
        /// parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeDeserializeDictionary(global::System.Collections.IDictionary content, ref bool returnNow);

        /// <summary>
        /// <c>BeforeDeserializePSObject</c> will be called before the deserialization has commenced, allowing complete customization
        /// of the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <paramref name="returnNow" /> output
        /// parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeDeserializePSObject(global::System.Management.Automation.PSObject content, ref bool returnNow);

        /// <summary>
        /// <c>OverrideToString</c> will be called if it is implemented. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="stringResult">/// instance serialized to a string, normally it is a Json</param>
        /// <param name="returnNow">/// set returnNow to true if you provide a customized OverrideToString function</param>

        partial void OverrideToString(ref string stringResult, ref bool returnNow);

        /// <summary>
        /// Deserializes a <see cref="global::System.Collections.IDictionary" /> into a new instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.Cluster"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        internal Cluster(global::System.Collections.IDictionary content)
        {
            bool returnNow = false;
            BeforeDeserializeDictionary(content, ref returnNow);
            if (returnNow)
            {
                return;
            }
            // actually deserialize
            if (content.Contains("Property"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).Property = (Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterResourceProperties) content.GetValueForProperty("Property",((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).Property, Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.ClusterResourcePropertiesTypeConverter.ConvertFrom);
            }
            if (content.Contains("SystemDataCreatedBy"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IResourceInternal)this).SystemDataCreatedBy = (string) content.GetValueForProperty("SystemDataCreatedBy",((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IResourceInternal)this).SystemDataCreatedBy, global::System.Convert.ToString);
            }
            if (content.Contains("SystemDataCreatedAt"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IResourceInternal)this).SystemDataCreatedAt = (global::System.DateTime?) content.GetValueForProperty("SystemDataCreatedAt",((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IResourceInternal)this).SystemDataCreatedAt, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            if (content.Contains("SystemDataCreatedByType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IResourceInternal)this).SystemDataCreatedByType = (string) content.GetValueForProperty("SystemDataCreatedByType",((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IResourceInternal)this).SystemDataCreatedByType, global::System.Convert.ToString);
            }
            if (content.Contains("SystemDataLastModifiedBy"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IResourceInternal)this).SystemDataLastModifiedBy = (string) content.GetValueForProperty("SystemDataLastModifiedBy",((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IResourceInternal)this).SystemDataLastModifiedBy, global::System.Convert.ToString);
            }
            if (content.Contains("SystemDataLastModifiedByType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IResourceInternal)this).SystemDataLastModifiedByType = (string) content.GetValueForProperty("SystemDataLastModifiedByType",((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IResourceInternal)this).SystemDataLastModifiedByType, global::System.Convert.ToString);
            }
            if (content.Contains("SystemDataLastModifiedAt"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IResourceInternal)this).SystemDataLastModifiedAt = (global::System.DateTime?) content.GetValueForProperty("SystemDataLastModifiedAt",((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IResourceInternal)this).SystemDataLastModifiedAt, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            if (content.Contains("SystemData"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IResourceInternal)this).SystemData = (Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.ISystemData) content.GetValueForProperty("SystemData",((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IResourceInternal)this).SystemData, Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.SystemDataTypeConverter.ConvertFrom);
            }
            if (content.Contains("Id"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IResourceInternal)this).Id = (string) content.GetValueForProperty("Id",((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IResourceInternal)this).Id, global::System.Convert.ToString);
            }
            if (content.Contains("Name"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IResourceInternal)this).Name = (string) content.GetValueForProperty("Name",((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IResourceInternal)this).Name, global::System.Convert.ToString);
            }
            if (content.Contains("Type"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IResourceInternal)this).Type = (string) content.GetValueForProperty("Type",((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IResourceInternal)this).Type, global::System.Convert.ToString);
            }
            if (content.Contains("Tag"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.ITrackedResourceInternal)this).Tag = (Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.ITrackedResourceTags) content.GetValueForProperty("Tag",((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.ITrackedResourceInternal)this).Tag, Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.TrackedResourceTagsTypeConverter.ConvertFrom);
            }
            if (content.Contains("Location"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.ITrackedResourceInternal)this).Location = (string) content.GetValueForProperty("Location",((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.ITrackedResourceInternal)this).Location, global::System.Convert.ToString);
            }
            if (content.Contains("ComputeProfile"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).ComputeProfile = (Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IComputeProfile) content.GetValueForProperty("ComputeProfile",((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).ComputeProfile, Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.ComputeProfileTypeConverter.ConvertFrom);
            }
            if (content.Contains("Profile"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).Profile = (Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterProfile) content.GetValueForProperty("Profile",((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).Profile, Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.ClusterProfileTypeConverter.ConvertFrom);
            }
            if (content.Contains("ProvisioningState"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).ProvisioningState = (string) content.GetValueForProperty("ProvisioningState",((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).ProvisioningState, global::System.Convert.ToString);
            }
            if (content.Contains("ClusterType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).ClusterType = (string) content.GetValueForProperty("ClusterType",((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).ClusterType, global::System.Convert.ToString);
            }
            if (content.Contains("DeploymentId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).DeploymentId = (string) content.GetValueForProperty("DeploymentId",((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).DeploymentId, global::System.Convert.ToString);
            }
            if (content.Contains("Status"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).Status = (string) content.GetValueForProperty("Status",((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).Status, global::System.Convert.ToString);
            }
            if (content.Contains("ComputeProfileNode"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).ComputeProfileNode = (System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.INodeProfile>) content.GetValueForProperty("ComputeProfileNode",((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).ComputeProfileNode, __y => TypeConverterExtensions.SelectToList<Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.INodeProfile>(__y, Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.NodeProfileTypeConverter.ConvertFrom));
            }
            if (content.Contains("ProfileIdentityProfile"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).ProfileIdentityProfile = (Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IIdentityProfile) content.GetValueForProperty("ProfileIdentityProfile",((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).ProfileIdentityProfile, Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IdentityProfileTypeConverter.ConvertFrom);
            }
            if (content.Contains("ProfileAuthorizationProfile"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).ProfileAuthorizationProfile = (Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IAuthorizationProfile) content.GetValueForProperty("ProfileAuthorizationProfile",((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).ProfileAuthorizationProfile, Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.AuthorizationProfileTypeConverter.ConvertFrom);
            }
            if (content.Contains("ProfileSecretsProfile"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).ProfileSecretsProfile = (Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.ISecretsProfile) content.GetValueForProperty("ProfileSecretsProfile",((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).ProfileSecretsProfile, Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.SecretsProfileTypeConverter.ConvertFrom);
            }
            if (content.Contains("ProfileConnectivityProfile"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).ProfileConnectivityProfile = (Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IConnectivityProfile) content.GetValueForProperty("ProfileConnectivityProfile",((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).ProfileConnectivityProfile, Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.ConnectivityProfileTypeConverter.ConvertFrom);
            }
            if (content.Contains("ProfileSshProfile"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).ProfileSshProfile = (Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.ISshProfile) content.GetValueForProperty("ProfileSshProfile",((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).ProfileSshProfile, Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.SshProfileTypeConverter.ConvertFrom);
            }
            if (content.Contains("ProfileAutoscaleProfile"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).ProfileAutoscaleProfile = (Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IAutoscaleProfile) content.GetValueForProperty("ProfileAutoscaleProfile",((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).ProfileAutoscaleProfile, Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.AutoscaleProfileTypeConverter.ConvertFrom);
            }
            if (content.Contains("ProfileKafkaProfile"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).ProfileKafkaProfile = (Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IKafkaProfile) content.GetValueForProperty("ProfileKafkaProfile",((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).ProfileKafkaProfile, Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.KafkaProfileTypeConverter.ConvertFrom);
            }
            if (content.Contains("ProfileTrinoProfile"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).ProfileTrinoProfile = (Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.ITrinoProfile) content.GetValueForProperty("ProfileTrinoProfile",((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).ProfileTrinoProfile, Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.TrinoProfileTypeConverter.ConvertFrom);
            }
            if (content.Contains("ProfileFlinkProfile"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).ProfileFlinkProfile = (Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IFlinkProfile) content.GetValueForProperty("ProfileFlinkProfile",((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).ProfileFlinkProfile, Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.FlinkProfileTypeConverter.ConvertFrom);
            }
            if (content.Contains("ProfileSparkProfile"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).ProfileSparkProfile = (Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.ISparkProfile) content.GetValueForProperty("ProfileSparkProfile",((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).ProfileSparkProfile, Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.SparkProfileTypeConverter.ConvertFrom);
            }
            if (content.Contains("ProfileRangerProfile"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).ProfileRangerProfile = (Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IRangerProfile) content.GetValueForProperty("ProfileRangerProfile",((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).ProfileRangerProfile, Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.RangerProfileTypeConverter.ConvertFrom);
            }
            if (content.Contains("ProfileLlapProfile"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).ProfileLlapProfile = (Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterProfileLlapProfile) content.GetValueForProperty("ProfileLlapProfile",((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).ProfileLlapProfile, Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.ClusterProfileLlapProfileTypeConverter.ConvertFrom);
            }
            if (content.Contains("ProfileStubProfile"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).ProfileStubProfile = (Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterProfileStubProfile) content.GetValueForProperty("ProfileStubProfile",((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).ProfileStubProfile, Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.ClusterProfileStubProfileTypeConverter.ConvertFrom);
            }
            if (content.Contains("ProfileClusterAccessProfile"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).ProfileClusterAccessProfile = (Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterAccessProfile) content.GetValueForProperty("ProfileClusterAccessProfile",((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).ProfileClusterAccessProfile, Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.ClusterAccessProfileTypeConverter.ConvertFrom);
            }
            if (content.Contains("ProfileLogAnalyticsProfile"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).ProfileLogAnalyticsProfile = (Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterLogAnalyticsProfile) content.GetValueForProperty("ProfileLogAnalyticsProfile",((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).ProfileLogAnalyticsProfile, Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.ClusterLogAnalyticsProfileTypeConverter.ConvertFrom);
            }
            if (content.Contains("ProfilePrometheusProfile"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).ProfilePrometheusProfile = (Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterPrometheusProfile) content.GetValueForProperty("ProfilePrometheusProfile",((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).ProfilePrometheusProfile, Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.ClusterPrometheusProfileTypeConverter.ConvertFrom);
            }
            if (content.Contains("ProfileRangerPluginProfile"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).ProfileRangerPluginProfile = (Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterRangerPluginProfile) content.GetValueForProperty("ProfileRangerPluginProfile",((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).ProfileRangerPluginProfile, Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.ClusterRangerPluginProfileTypeConverter.ConvertFrom);
            }
            if (content.Contains("ProfileClusterVersion"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).ProfileClusterVersion = (string) content.GetValueForProperty("ProfileClusterVersion",((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).ProfileClusterVersion, global::System.Convert.ToString);
            }
            if (content.Contains("ProfileOssVersion"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).ProfileOssVersion = (string) content.GetValueForProperty("ProfileOssVersion",((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).ProfileOssVersion, global::System.Convert.ToString);
            }
            if (content.Contains("ProfileComponent"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).ProfileComponent = (System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterComponentsItem>) content.GetValueForProperty("ProfileComponent",((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).ProfileComponent, __y => TypeConverterExtensions.SelectToList<Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterComponentsItem>(__y, Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.ClusterComponentsItemTypeConverter.ConvertFrom));
            }
            if (content.Contains("ProfileServiceConfigsProfile"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).ProfileServiceConfigsProfile = (System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterServiceConfigsProfile>) content.GetValueForProperty("ProfileServiceConfigsProfile",((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).ProfileServiceConfigsProfile, __y => TypeConverterExtensions.SelectToList<Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterServiceConfigsProfile>(__y, Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.ClusterServiceConfigsProfileTypeConverter.ConvertFrom));
            }
            if (content.Contains("ProfileScriptActionProfile"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).ProfileScriptActionProfile = (System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IScriptActionProfile>) content.GetValueForProperty("ProfileScriptActionProfile",((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).ProfileScriptActionProfile, __y => TypeConverterExtensions.SelectToList<Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IScriptActionProfile>(__y, Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.ScriptActionProfileTypeConverter.ConvertFrom));
            }
            if (content.Contains("AuthorizationProfileUserId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).AuthorizationProfileUserId = (System.Collections.Generic.List<string>) content.GetValueForProperty("AuthorizationProfileUserId",((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).AuthorizationProfileUserId, __y => TypeConverterExtensions.SelectToList<string>(__y, global::System.Convert.ToString));
            }
            if (content.Contains("AuthorizationProfileGroupId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).AuthorizationProfileGroupId = (System.Collections.Generic.List<string>) content.GetValueForProperty("AuthorizationProfileGroupId",((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).AuthorizationProfileGroupId, __y => TypeConverterExtensions.SelectToList<string>(__y, global::System.Convert.ToString));
            }
            if (content.Contains("SecretProfileSecret"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).SecretProfileSecret = (System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.ISecretReference>) content.GetValueForProperty("SecretProfileSecret",((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).SecretProfileSecret, __y => TypeConverterExtensions.SelectToList<Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.ISecretReference>(__y, Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.SecretReferenceTypeConverter.ConvertFrom));
            }
            if (content.Contains("ConnectivityProfileWeb"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).ConnectivityProfileWeb = (Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IConnectivityProfileWeb) content.GetValueForProperty("ConnectivityProfileWeb",((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).ConnectivityProfileWeb, Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.ConnectivityProfileWebTypeConverter.ConvertFrom);
            }
            if (content.Contains("ConnectivityProfileSsh"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).ConnectivityProfileSsh = (System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.ISshConnectivityEndpoint>) content.GetValueForProperty("ConnectivityProfileSsh",((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).ConnectivityProfileSsh, __y => TypeConverterExtensions.SelectToList<Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.ISshConnectivityEndpoint>(__y, Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.SshConnectivityEndpointTypeConverter.ConvertFrom));
            }
            if (content.Contains("SshProfileCount"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).SshProfileCount = (int) content.GetValueForProperty("SshProfileCount",((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).SshProfileCount, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("SshProfilePodPrefix"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).SshProfilePodPrefix = (string) content.GetValueForProperty("SshProfilePodPrefix",((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).SshProfilePodPrefix, global::System.Convert.ToString);
            }
            if (content.Contains("AutoscaleProfileAutoscaleType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).AutoscaleProfileAutoscaleType = (string) content.GetValueForProperty("AutoscaleProfileAutoscaleType",((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).AutoscaleProfileAutoscaleType, global::System.Convert.ToString);
            }
            if (content.Contains("TrinoProfileCatalogOption"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).TrinoProfileCatalogOption = (Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.ICatalogOptions) content.GetValueForProperty("TrinoProfileCatalogOption",((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).TrinoProfileCatalogOption, Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.CatalogOptionsTypeConverter.ConvertFrom);
            }
            if (content.Contains("FlinkProfileNumReplica"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).FlinkProfileNumReplica = (int?) content.GetValueForProperty("FlinkProfileNumReplica",((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).FlinkProfileNumReplica, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("FlinkProfileDeploymentMode"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).FlinkProfileDeploymentMode = (string) content.GetValueForProperty("FlinkProfileDeploymentMode",((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).FlinkProfileDeploymentMode, global::System.Convert.ToString);
            }
            if (content.Contains("IdentityProfileMsiResourceId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).IdentityProfileMsiResourceId = (string) content.GetValueForProperty("IdentityProfileMsiResourceId",((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).IdentityProfileMsiResourceId, global::System.Convert.ToString);
            }
            if (content.Contains("IdentityProfileMsiClientId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).IdentityProfileMsiClientId = (string) content.GetValueForProperty("IdentityProfileMsiClientId",((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).IdentityProfileMsiClientId, global::System.Convert.ToString);
            }
            if (content.Contains("IdentityProfileMsiObjectId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).IdentityProfileMsiObjectId = (string) content.GetValueForProperty("IdentityProfileMsiObjectId",((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).IdentityProfileMsiObjectId, global::System.Convert.ToString);
            }
            if (content.Contains("SecretProfileKeyVaultResourceId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).SecretProfileKeyVaultResourceId = (string) content.GetValueForProperty("SecretProfileKeyVaultResourceId",((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).SecretProfileKeyVaultResourceId, global::System.Convert.ToString);
            }
            if (content.Contains("AccessProfileEnableInternalIngress"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).AccessProfileEnableInternalIngress = (bool) content.GetValueForProperty("AccessProfileEnableInternalIngress",((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).AccessProfileEnableInternalIngress, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("AccessProfilePrivateLinkServiceId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).AccessProfilePrivateLinkServiceId = (string) content.GetValueForProperty("AccessProfilePrivateLinkServiceId",((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).AccessProfilePrivateLinkServiceId, global::System.Convert.ToString);
            }
            if (content.Contains("LogAnalyticProfileApplicationLog"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).LogAnalyticProfileApplicationLog = (Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterLogAnalyticsApplicationLogs) content.GetValueForProperty("LogAnalyticProfileApplicationLog",((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).LogAnalyticProfileApplicationLog, Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.ClusterLogAnalyticsApplicationLogsTypeConverter.ConvertFrom);
            }
            if (content.Contains("LogAnalyticProfileEnabled"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).LogAnalyticProfileEnabled = (bool) content.GetValueForProperty("LogAnalyticProfileEnabled",((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).LogAnalyticProfileEnabled, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("LogAnalyticProfileMetricsEnabled"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).LogAnalyticProfileMetricsEnabled = (bool?) content.GetValueForProperty("LogAnalyticProfileMetricsEnabled",((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).LogAnalyticProfileMetricsEnabled, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("PrometheuProfileEnabled"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).PrometheuProfileEnabled = (bool) content.GetValueForProperty("PrometheuProfileEnabled",((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).PrometheuProfileEnabled, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("AutoscaleProfileScheduleBasedConfig"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).AutoscaleProfileScheduleBasedConfig = (Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IScheduleBasedConfig) content.GetValueForProperty("AutoscaleProfileScheduleBasedConfig",((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).AutoscaleProfileScheduleBasedConfig, Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.ScheduleBasedConfigTypeConverter.ConvertFrom);
            }
            if (content.Contains("AutoscaleProfileLoadBasedConfig"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).AutoscaleProfileLoadBasedConfig = (Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.ILoadBasedConfig) content.GetValueForProperty("AutoscaleProfileLoadBasedConfig",((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).AutoscaleProfileLoadBasedConfig, Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.LoadBasedConfigTypeConverter.ConvertFrom);
            }
            if (content.Contains("AutoscaleProfileEnabled"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).AutoscaleProfileEnabled = (bool) content.GetValueForProperty("AutoscaleProfileEnabled",((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).AutoscaleProfileEnabled, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("AutoscaleProfileGracefulDecommissionTimeout"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).AutoscaleProfileGracefulDecommissionTimeout = (int?) content.GetValueForProperty("AutoscaleProfileGracefulDecommissionTimeout",((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).AutoscaleProfileGracefulDecommissionTimeout, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("ScheduleBasedConfigTimeZone"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).ScheduleBasedConfigTimeZone = (string) content.GetValueForProperty("ScheduleBasedConfigTimeZone",((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).ScheduleBasedConfigTimeZone, global::System.Convert.ToString);
            }
            if (content.Contains("ScheduleBasedConfigDefaultCount"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).ScheduleBasedConfigDefaultCount = (int) content.GetValueForProperty("ScheduleBasedConfigDefaultCount",((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).ScheduleBasedConfigDefaultCount, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("ScheduleBasedConfigSchedule"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).ScheduleBasedConfigSchedule = (System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.ISchedule>) content.GetValueForProperty("ScheduleBasedConfigSchedule",((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).ScheduleBasedConfigSchedule, __y => TypeConverterExtensions.SelectToList<Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.ISchedule>(__y, Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.ScheduleTypeConverter.ConvertFrom));
            }
            if (content.Contains("LoadBasedConfigMinNode"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).LoadBasedConfigMinNode = (int) content.GetValueForProperty("LoadBasedConfigMinNode",((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).LoadBasedConfigMinNode, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("LoadBasedConfigMaxNode"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).LoadBasedConfigMaxNode = (int) content.GetValueForProperty("LoadBasedConfigMaxNode",((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).LoadBasedConfigMaxNode, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("LoadBasedConfigPollInterval"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).LoadBasedConfigPollInterval = (int?) content.GetValueForProperty("LoadBasedConfigPollInterval",((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).LoadBasedConfigPollInterval, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("LoadBasedConfigCooldownPeriod"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).LoadBasedConfigCooldownPeriod = (int?) content.GetValueForProperty("LoadBasedConfigCooldownPeriod",((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).LoadBasedConfigCooldownPeriod, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("LoadBasedConfigScalingRule"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).LoadBasedConfigScalingRule = (System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IScalingRule>) content.GetValueForProperty("LoadBasedConfigScalingRule",((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).LoadBasedConfigScalingRule, __y => TypeConverterExtensions.SelectToList<Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IScalingRule>(__y, Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.ScalingRuleTypeConverter.ConvertFrom));
            }
            if (content.Contains("RangerPluginProfileEnabled"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).RangerPluginProfileEnabled = (bool) content.GetValueForProperty("RangerPluginProfileEnabled",((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).RangerPluginProfileEnabled, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("KafkaProfileDiskStorage"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).KafkaProfileDiskStorage = (Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IDiskStorageProfile) content.GetValueForProperty("KafkaProfileDiskStorage",((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).KafkaProfileDiskStorage, Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.DiskStorageProfileTypeConverter.ConvertFrom);
            }
            if (content.Contains("KafkaProfileClusterIdentity"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).KafkaProfileClusterIdentity = (Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IIdentityProfile) content.GetValueForProperty("KafkaProfileClusterIdentity",((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).KafkaProfileClusterIdentity, Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IdentityProfileTypeConverter.ConvertFrom);
            }
            if (content.Contains("KafkaProfileConnectivityEndpoint"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).KafkaProfileConnectivityEndpoint = (Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IKafkaConnectivityEndpoints) content.GetValueForProperty("KafkaProfileConnectivityEndpoint",((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).KafkaProfileConnectivityEndpoint, Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.KafkaConnectivityEndpointsTypeConverter.ConvertFrom);
            }
            if (content.Contains("KafkaProfileEnableKRaft"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).KafkaProfileEnableKRaft = (bool?) content.GetValueForProperty("KafkaProfileEnableKRaft",((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).KafkaProfileEnableKRaft, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("KafkaProfileEnablePublicEndpoint"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).KafkaProfileEnablePublicEndpoint = (bool?) content.GetValueForProperty("KafkaProfileEnablePublicEndpoint",((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).KafkaProfileEnablePublicEndpoint, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("KafkaProfileRemoteStorageUri"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).KafkaProfileRemoteStorageUri = (string) content.GetValueForProperty("KafkaProfileRemoteStorageUri",((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).KafkaProfileRemoteStorageUri, global::System.Convert.ToString);
            }
            if (content.Contains("TrinoProfileCoordinator"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).TrinoProfileCoordinator = (Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.ITrinoCoordinator) content.GetValueForProperty("TrinoProfileCoordinator",((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).TrinoProfileCoordinator, Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.TrinoCoordinatorTypeConverter.ConvertFrom);
            }
            if (content.Contains("TrinoProfileUserPluginsSpec"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).TrinoProfileUserPluginsSpec = (Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.ITrinoUserPlugins) content.GetValueForProperty("TrinoProfileUserPluginsSpec",((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).TrinoProfileUserPluginsSpec, Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.TrinoUserPluginsTypeConverter.ConvertFrom);
            }
            if (content.Contains("TrinoProfileUserTelemetrySpec"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).TrinoProfileUserTelemetrySpec = (Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.ITrinoUserTelemetry) content.GetValueForProperty("TrinoProfileUserTelemetrySpec",((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).TrinoProfileUserTelemetrySpec, Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.TrinoUserTelemetryTypeConverter.ConvertFrom);
            }
            if (content.Contains("TrinoProfileWorker"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).TrinoProfileWorker = (Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.ITrinoWorker) content.GetValueForProperty("TrinoProfileWorker",((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).TrinoProfileWorker, Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.TrinoWorkerTypeConverter.ConvertFrom);
            }
            if (content.Contains("TrinoProfileCatalogOptionsHive"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).TrinoProfileCatalogOptionsHive = (System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IHiveCatalogOption>) content.GetValueForProperty("TrinoProfileCatalogOptionsHive",((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).TrinoProfileCatalogOptionsHive, __y => TypeConverterExtensions.SelectToList<Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IHiveCatalogOption>(__y, Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.HiveCatalogOptionTypeConverter.ConvertFrom));
            }
            if (content.Contains("FlinkProfileStorage"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).FlinkProfileStorage = (Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IFlinkStorageProfile) content.GetValueForProperty("FlinkProfileStorage",((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).FlinkProfileStorage, Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.FlinkStorageProfileTypeConverter.ConvertFrom);
            }
            if (content.Contains("FlinkProfileJobManager"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).FlinkProfileJobManager = (Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IComputeResourceDefinition) content.GetValueForProperty("FlinkProfileJobManager",((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).FlinkProfileJobManager, Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.ComputeResourceDefinitionTypeConverter.ConvertFrom);
            }
            if (content.Contains("FlinkProfileHistoryServer"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).FlinkProfileHistoryServer = (Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IComputeResourceDefinition) content.GetValueForProperty("FlinkProfileHistoryServer",((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).FlinkProfileHistoryServer, Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.ComputeResourceDefinitionTypeConverter.ConvertFrom);
            }
            if (content.Contains("FlinkProfileTaskManager"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).FlinkProfileTaskManager = (Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IComputeResourceDefinition) content.GetValueForProperty("FlinkProfileTaskManager",((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).FlinkProfileTaskManager, Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.ComputeResourceDefinitionTypeConverter.ConvertFrom);
            }
            if (content.Contains("FlinkProfileCatalogOption"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).FlinkProfileCatalogOption = (Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IFlinkCatalogOptions) content.GetValueForProperty("FlinkProfileCatalogOption",((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).FlinkProfileCatalogOption, Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.FlinkCatalogOptionsTypeConverter.ConvertFrom);
            }
            if (content.Contains("FlinkProfileJobSpec"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).FlinkProfileJobSpec = (Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IFlinkJobProfile) content.GetValueForProperty("FlinkProfileJobSpec",((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).FlinkProfileJobSpec, Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.FlinkJobProfileTypeConverter.ConvertFrom);
            }
            if (content.Contains("JobSpecUpgradeMode"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).JobSpecUpgradeMode = (string) content.GetValueForProperty("JobSpecUpgradeMode",((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).JobSpecUpgradeMode, global::System.Convert.ToString);
            }
            if (content.Contains("SparkProfileMetastoreSpec"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).SparkProfileMetastoreSpec = (Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.ISparkMetastoreSpec) content.GetValueForProperty("SparkProfileMetastoreSpec",((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).SparkProfileMetastoreSpec, Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.SparkMetastoreSpecTypeConverter.ConvertFrom);
            }
            if (content.Contains("SparkProfileUserPluginsSpec"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).SparkProfileUserPluginsSpec = (Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.ISparkUserPlugins) content.GetValueForProperty("SparkProfileUserPluginsSpec",((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).SparkProfileUserPluginsSpec, Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.SparkUserPluginsTypeConverter.ConvertFrom);
            }
            if (content.Contains("SparkProfileDefaultStorageUrl"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).SparkProfileDefaultStorageUrl = (string) content.GetValueForProperty("SparkProfileDefaultStorageUrl",((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).SparkProfileDefaultStorageUrl, global::System.Convert.ToString);
            }
            if (content.Contains("RangerProfileRangerAdmin"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).RangerProfileRangerAdmin = (Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IRangerAdminSpec) content.GetValueForProperty("RangerProfileRangerAdmin",((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).RangerProfileRangerAdmin, Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.RangerAdminSpecTypeConverter.ConvertFrom);
            }
            if (content.Contains("RangerProfileRangerAudit"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).RangerProfileRangerAudit = (Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IRangerAuditSpec) content.GetValueForProperty("RangerProfileRangerAudit",((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).RangerProfileRangerAudit, Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.RangerAuditSpecTypeConverter.ConvertFrom);
            }
            if (content.Contains("RangerProfileRangerUsersync"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).RangerProfileRangerUsersync = (Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IRangerUsersyncSpec) content.GetValueForProperty("RangerProfileRangerUsersync",((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).RangerProfileRangerUsersync, Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.RangerUsersyncSpecTypeConverter.ConvertFrom);
            }
            if (content.Contains("RangerUsersyncMode"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).RangerUsersyncMode = (string) content.GetValueForProperty("RangerUsersyncMode",((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).RangerUsersyncMode, global::System.Convert.ToString);
            }
            if (content.Contains("WebFqdn"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).WebFqdn = (string) content.GetValueForProperty("WebFqdn",((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).WebFqdn, global::System.Convert.ToString);
            }
            if (content.Contains("WebPrivateFqdn"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).WebPrivateFqdn = (string) content.GetValueForProperty("WebPrivateFqdn",((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).WebPrivateFqdn, global::System.Convert.ToString);
            }
            if (content.Contains("ApplicationLogStdOutEnabled"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).ApplicationLogStdOutEnabled = (bool?) content.GetValueForProperty("ApplicationLogStdOutEnabled",((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).ApplicationLogStdOutEnabled, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("ApplicationLogStdErrorEnabled"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).ApplicationLogStdErrorEnabled = (bool?) content.GetValueForProperty("ApplicationLogStdErrorEnabled",((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).ApplicationLogStdErrorEnabled, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("DiskStorageDataDiskSize"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).DiskStorageDataDiskSize = (int) content.GetValueForProperty("DiskStorageDataDiskSize",((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).DiskStorageDataDiskSize, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("DiskStorageDataDiskType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).DiskStorageDataDiskType = (string) content.GetValueForProperty("DiskStorageDataDiskType",((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).DiskStorageDataDiskType, global::System.Convert.ToString);
            }
            if (content.Contains("IdentityMsiResourceId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).IdentityMsiResourceId = (string) content.GetValueForProperty("IdentityMsiResourceId",((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).IdentityMsiResourceId, global::System.Convert.ToString);
            }
            if (content.Contains("IdentityMsiClientId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).IdentityMsiClientId = (string) content.GetValueForProperty("IdentityMsiClientId",((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).IdentityMsiClientId, global::System.Convert.ToString);
            }
            if (content.Contains("IdentityMsiObjectId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).IdentityMsiObjectId = (string) content.GetValueForProperty("IdentityMsiObjectId",((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).IdentityMsiObjectId, global::System.Convert.ToString);
            }
            if (content.Contains("ConnectivityEndpointBootstrapServerEndpoint"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).ConnectivityEndpointBootstrapServerEndpoint = (string) content.GetValueForProperty("ConnectivityEndpointBootstrapServerEndpoint",((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).ConnectivityEndpointBootstrapServerEndpoint, global::System.Convert.ToString);
            }
            if (content.Contains("ConnectivityEndpointBrokerEndpoint"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).ConnectivityEndpointBrokerEndpoint = (System.Collections.Generic.List<string>) content.GetValueForProperty("ConnectivityEndpointBrokerEndpoint",((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).ConnectivityEndpointBrokerEndpoint, __y => TypeConverterExtensions.SelectToList<string>(__y, global::System.Convert.ToString));
            }
            if (content.Contains("CoordinatorDebug"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).CoordinatorDebug = (Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.ITrinoDebugConfig) content.GetValueForProperty("CoordinatorDebug",((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).CoordinatorDebug, Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.TrinoDebugConfigTypeConverter.ConvertFrom);
            }
            if (content.Contains("CoordinatorHighAvailabilityEnabled"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).CoordinatorHighAvailabilityEnabled = (bool?) content.GetValueForProperty("CoordinatorHighAvailabilityEnabled",((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).CoordinatorHighAvailabilityEnabled, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("TrinoProfileUserPluginsSpecPlugin"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).TrinoProfileUserPluginsSpecPlugin = (System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.ITrinoUserPlugin>) content.GetValueForProperty("TrinoProfileUserPluginsSpecPlugin",((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).TrinoProfileUserPluginsSpecPlugin, __y => TypeConverterExtensions.SelectToList<Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.ITrinoUserPlugin>(__y, Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.TrinoUserPluginTypeConverter.ConvertFrom));
            }
            if (content.Contains("UserTelemetrySpecStorage"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).UserTelemetrySpecStorage = (Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.ITrinoTelemetryConfig) content.GetValueForProperty("UserTelemetrySpecStorage",((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).UserTelemetrySpecStorage, Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.TrinoTelemetryConfigTypeConverter.ConvertFrom);
            }
            if (content.Contains("WorkerDebug"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).WorkerDebug = (Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.ITrinoDebugConfig) content.GetValueForProperty("WorkerDebug",((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).WorkerDebug, Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.TrinoDebugConfigTypeConverter.ConvertFrom);
            }
            if (content.Contains("StorageUri"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).StorageUri = (string) content.GetValueForProperty("StorageUri",((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).StorageUri, global::System.Convert.ToString);
            }
            if (content.Contains("StorageStoragekey"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).StorageStoragekey = (string) content.GetValueForProperty("StorageStoragekey",((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).StorageStoragekey, global::System.Convert.ToString);
            }
            if (content.Contains("JobManagerCpu"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).JobManagerCpu = (float) content.GetValueForProperty("JobManagerCpu",((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).JobManagerCpu, (__y)=> (float) global::System.Convert.ChangeType(__y, typeof(float)));
            }
            if (content.Contains("JobManagerMemory"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).JobManagerMemory = (long) content.GetValueForProperty("JobManagerMemory",((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).JobManagerMemory, (__y)=> (long) global::System.Convert.ChangeType(__y, typeof(long)));
            }
            if (content.Contains("HistoryServerCpu"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).HistoryServerCpu = (float) content.GetValueForProperty("HistoryServerCpu",((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).HistoryServerCpu, (__y)=> (float) global::System.Convert.ChangeType(__y, typeof(float)));
            }
            if (content.Contains("HistoryServerMemory"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).HistoryServerMemory = (long) content.GetValueForProperty("HistoryServerMemory",((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).HistoryServerMemory, (__y)=> (long) global::System.Convert.ChangeType(__y, typeof(long)));
            }
            if (content.Contains("TaskManagerCpu"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).TaskManagerCpu = (float) content.GetValueForProperty("TaskManagerCpu",((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).TaskManagerCpu, (__y)=> (float) global::System.Convert.ChangeType(__y, typeof(float)));
            }
            if (content.Contains("TaskManagerMemory"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).TaskManagerMemory = (long) content.GetValueForProperty("TaskManagerMemory",((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).TaskManagerMemory, (__y)=> (long) global::System.Convert.ChangeType(__y, typeof(long)));
            }
            if (content.Contains("FlinkProfileCatalogOptionsHive"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).FlinkProfileCatalogOptionsHive = (Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IFlinkHiveCatalogOption) content.GetValueForProperty("FlinkProfileCatalogOptionsHive",((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).FlinkProfileCatalogOptionsHive, Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.FlinkHiveCatalogOptionTypeConverter.ConvertFrom);
            }
            if (content.Contains("JobSpecJobJarDirectory"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).JobSpecJobJarDirectory = (string) content.GetValueForProperty("JobSpecJobJarDirectory",((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).JobSpecJobJarDirectory, global::System.Convert.ToString);
            }
            if (content.Contains("JobSpecJarName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).JobSpecJarName = (string) content.GetValueForProperty("JobSpecJarName",((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).JobSpecJarName, global::System.Convert.ToString);
            }
            if (content.Contains("JobSpecEntryClass"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).JobSpecEntryClass = (string) content.GetValueForProperty("JobSpecEntryClass",((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).JobSpecEntryClass, global::System.Convert.ToString);
            }
            if (content.Contains("JobSpecArg"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).JobSpecArg = (string) content.GetValueForProperty("JobSpecArg",((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).JobSpecArg, global::System.Convert.ToString);
            }
            if (content.Contains("JobSpecSavePointName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).JobSpecSavePointName = (string) content.GetValueForProperty("JobSpecSavePointName",((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).JobSpecSavePointName, global::System.Convert.ToString);
            }
            if (content.Contains("MetastoreSpecDbServerHost"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).MetastoreSpecDbServerHost = (string) content.GetValueForProperty("MetastoreSpecDbServerHost",((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).MetastoreSpecDbServerHost, global::System.Convert.ToString);
            }
            if (content.Contains("MetastoreSpecDbName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).MetastoreSpecDbName = (string) content.GetValueForProperty("MetastoreSpecDbName",((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).MetastoreSpecDbName, global::System.Convert.ToString);
            }
            if (content.Contains("MetastoreSpecDbConnectionAuthenticationMode"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).MetastoreSpecDbConnectionAuthenticationMode = (string) content.GetValueForProperty("MetastoreSpecDbConnectionAuthenticationMode",((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).MetastoreSpecDbConnectionAuthenticationMode, global::System.Convert.ToString);
            }
            if (content.Contains("MetastoreSpecDbUserName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).MetastoreSpecDbUserName = (string) content.GetValueForProperty("MetastoreSpecDbUserName",((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).MetastoreSpecDbUserName, global::System.Convert.ToString);
            }
            if (content.Contains("MetastoreSpecDbPasswordSecretName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).MetastoreSpecDbPasswordSecretName = (string) content.GetValueForProperty("MetastoreSpecDbPasswordSecretName",((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).MetastoreSpecDbPasswordSecretName, global::System.Convert.ToString);
            }
            if (content.Contains("MetastoreSpecKeyVaultId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).MetastoreSpecKeyVaultId = (string) content.GetValueForProperty("MetastoreSpecKeyVaultId",((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).MetastoreSpecKeyVaultId, global::System.Convert.ToString);
            }
            if (content.Contains("MetastoreSpecThriftUrl"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).MetastoreSpecThriftUrl = (string) content.GetValueForProperty("MetastoreSpecThriftUrl",((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).MetastoreSpecThriftUrl, global::System.Convert.ToString);
            }
            if (content.Contains("SparkProfileUserPluginsSpecPlugin"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).SparkProfileUserPluginsSpecPlugin = (System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.ISparkUserPlugin>) content.GetValueForProperty("SparkProfileUserPluginsSpecPlugin",((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).SparkProfileUserPluginsSpecPlugin, __y => TypeConverterExtensions.SelectToList<Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.ISparkUserPlugin>(__y, Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.SparkUserPluginTypeConverter.ConvertFrom));
            }
            if (content.Contains("RangerAdminDatabase"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).RangerAdminDatabase = (Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IRangerAdminSpecDatabase) content.GetValueForProperty("RangerAdminDatabase",((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).RangerAdminDatabase, Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.RangerAdminSpecDatabaseTypeConverter.ConvertFrom);
            }
            if (content.Contains("RangerAdmin"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).RangerAdmin = (System.Collections.Generic.List<string>) content.GetValueForProperty("RangerAdmin",((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).RangerAdmin, __y => TypeConverterExtensions.SelectToList<string>(__y, global::System.Convert.ToString));
            }
            if (content.Contains("RangerAuditStorageAccount"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).RangerAuditStorageAccount = (string) content.GetValueForProperty("RangerAuditStorageAccount",((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).RangerAuditStorageAccount, global::System.Convert.ToString);
            }
            if (content.Contains("RangerUsersyncEnabled"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).RangerUsersyncEnabled = (bool?) content.GetValueForProperty("RangerUsersyncEnabled",((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).RangerUsersyncEnabled, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("RangerUsersyncGroup"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).RangerUsersyncGroup = (System.Collections.Generic.List<string>) content.GetValueForProperty("RangerUsersyncGroup",((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).RangerUsersyncGroup, __y => TypeConverterExtensions.SelectToList<string>(__y, global::System.Convert.ToString));
            }
            if (content.Contains("RangerUsersyncUserMappingLocation"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).RangerUsersyncUserMappingLocation = (string) content.GetValueForProperty("RangerUsersyncUserMappingLocation",((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).RangerUsersyncUserMappingLocation, global::System.Convert.ToString);
            }
            if (content.Contains("RangerUsersyncUser"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).RangerUsersyncUser = (System.Collections.Generic.List<string>) content.GetValueForProperty("RangerUsersyncUser",((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).RangerUsersyncUser, __y => TypeConverterExtensions.SelectToList<string>(__y, global::System.Convert.ToString));
            }
            if (content.Contains("CoordinatorDebugEnable"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).CoordinatorDebugEnable = (bool?) content.GetValueForProperty("CoordinatorDebugEnable",((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).CoordinatorDebugEnable, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("CoordinatorDebugPort"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).CoordinatorDebugPort = (int?) content.GetValueForProperty("CoordinatorDebugPort",((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).CoordinatorDebugPort, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("CoordinatorDebugSuspend"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).CoordinatorDebugSuspend = (bool?) content.GetValueForProperty("CoordinatorDebugSuspend",((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).CoordinatorDebugSuspend, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("StorageHivecatalogName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).StorageHivecatalogName = (string) content.GetValueForProperty("StorageHivecatalogName",((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).StorageHivecatalogName, global::System.Convert.ToString);
            }
            if (content.Contains("StorageHivecatalogSchema"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).StorageHivecatalogSchema = (string) content.GetValueForProperty("StorageHivecatalogSchema",((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).StorageHivecatalogSchema, global::System.Convert.ToString);
            }
            if (content.Contains("StoragePartitionRetentionInDay"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).StoragePartitionRetentionInDay = (int?) content.GetValueForProperty("StoragePartitionRetentionInDay",((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).StoragePartitionRetentionInDay, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("StoragePath"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).StoragePath = (string) content.GetValueForProperty("StoragePath",((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).StoragePath, global::System.Convert.ToString);
            }
            if (content.Contains("WorkerDebugEnable"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).WorkerDebugEnable = (bool?) content.GetValueForProperty("WorkerDebugEnable",((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).WorkerDebugEnable, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("WorkerDebugPort"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).WorkerDebugPort = (int?) content.GetValueForProperty("WorkerDebugPort",((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).WorkerDebugPort, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("WorkerDebugSuspend"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).WorkerDebugSuspend = (bool?) content.GetValueForProperty("WorkerDebugSuspend",((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).WorkerDebugSuspend, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("HiveMetastoreDbConnectionAuthenticationMode"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).HiveMetastoreDbConnectionAuthenticationMode = (string) content.GetValueForProperty("HiveMetastoreDbConnectionAuthenticationMode",((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).HiveMetastoreDbConnectionAuthenticationMode, global::System.Convert.ToString);
            }
            if (content.Contains("HiveMetastoreDbConnectionPasswordSecret"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).HiveMetastoreDbConnectionPasswordSecret = (string) content.GetValueForProperty("HiveMetastoreDbConnectionPasswordSecret",((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).HiveMetastoreDbConnectionPasswordSecret, global::System.Convert.ToString);
            }
            if (content.Contains("HiveMetastoreDbConnectionUrl"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).HiveMetastoreDbConnectionUrl = (string) content.GetValueForProperty("HiveMetastoreDbConnectionUrl",((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).HiveMetastoreDbConnectionUrl, global::System.Convert.ToString);
            }
            if (content.Contains("HiveMetastoreDbConnectionUserName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).HiveMetastoreDbConnectionUserName = (string) content.GetValueForProperty("HiveMetastoreDbConnectionUserName",((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).HiveMetastoreDbConnectionUserName, global::System.Convert.ToString);
            }
            if (content.Contains("DatabaseHost"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).DatabaseHost = (string) content.GetValueForProperty("DatabaseHost",((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).DatabaseHost, global::System.Convert.ToString);
            }
            if (content.Contains("DatabaseName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).DatabaseName = (string) content.GetValueForProperty("DatabaseName",((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).DatabaseName, global::System.Convert.ToString);
            }
            if (content.Contains("DatabasePasswordSecretRef"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).DatabasePasswordSecretRef = (string) content.GetValueForProperty("DatabasePasswordSecretRef",((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).DatabasePasswordSecretRef, global::System.Convert.ToString);
            }
            if (content.Contains("DatabaseUsername"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).DatabaseUsername = (string) content.GetValueForProperty("DatabaseUsername",((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).DatabaseUsername, global::System.Convert.ToString);
            }
            AfterDeserializeDictionary(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Management.Automation.PSObject" /> into a new instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.Cluster"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        internal Cluster(global::System.Management.Automation.PSObject content)
        {
            bool returnNow = false;
            BeforeDeserializePSObject(content, ref returnNow);
            if (returnNow)
            {
                return;
            }
            // actually deserialize
            if (content.Contains("Property"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).Property = (Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterResourceProperties) content.GetValueForProperty("Property",((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).Property, Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.ClusterResourcePropertiesTypeConverter.ConvertFrom);
            }
            if (content.Contains("SystemDataCreatedBy"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IResourceInternal)this).SystemDataCreatedBy = (string) content.GetValueForProperty("SystemDataCreatedBy",((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IResourceInternal)this).SystemDataCreatedBy, global::System.Convert.ToString);
            }
            if (content.Contains("SystemDataCreatedAt"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IResourceInternal)this).SystemDataCreatedAt = (global::System.DateTime?) content.GetValueForProperty("SystemDataCreatedAt",((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IResourceInternal)this).SystemDataCreatedAt, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            if (content.Contains("SystemDataCreatedByType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IResourceInternal)this).SystemDataCreatedByType = (string) content.GetValueForProperty("SystemDataCreatedByType",((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IResourceInternal)this).SystemDataCreatedByType, global::System.Convert.ToString);
            }
            if (content.Contains("SystemDataLastModifiedBy"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IResourceInternal)this).SystemDataLastModifiedBy = (string) content.GetValueForProperty("SystemDataLastModifiedBy",((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IResourceInternal)this).SystemDataLastModifiedBy, global::System.Convert.ToString);
            }
            if (content.Contains("SystemDataLastModifiedByType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IResourceInternal)this).SystemDataLastModifiedByType = (string) content.GetValueForProperty("SystemDataLastModifiedByType",((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IResourceInternal)this).SystemDataLastModifiedByType, global::System.Convert.ToString);
            }
            if (content.Contains("SystemDataLastModifiedAt"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IResourceInternal)this).SystemDataLastModifiedAt = (global::System.DateTime?) content.GetValueForProperty("SystemDataLastModifiedAt",((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IResourceInternal)this).SystemDataLastModifiedAt, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            if (content.Contains("SystemData"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IResourceInternal)this).SystemData = (Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.ISystemData) content.GetValueForProperty("SystemData",((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IResourceInternal)this).SystemData, Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.SystemDataTypeConverter.ConvertFrom);
            }
            if (content.Contains("Id"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IResourceInternal)this).Id = (string) content.GetValueForProperty("Id",((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IResourceInternal)this).Id, global::System.Convert.ToString);
            }
            if (content.Contains("Name"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IResourceInternal)this).Name = (string) content.GetValueForProperty("Name",((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IResourceInternal)this).Name, global::System.Convert.ToString);
            }
            if (content.Contains("Type"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IResourceInternal)this).Type = (string) content.GetValueForProperty("Type",((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IResourceInternal)this).Type, global::System.Convert.ToString);
            }
            if (content.Contains("Tag"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.ITrackedResourceInternal)this).Tag = (Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.ITrackedResourceTags) content.GetValueForProperty("Tag",((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.ITrackedResourceInternal)this).Tag, Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.TrackedResourceTagsTypeConverter.ConvertFrom);
            }
            if (content.Contains("Location"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.ITrackedResourceInternal)this).Location = (string) content.GetValueForProperty("Location",((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.ITrackedResourceInternal)this).Location, global::System.Convert.ToString);
            }
            if (content.Contains("ComputeProfile"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).ComputeProfile = (Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IComputeProfile) content.GetValueForProperty("ComputeProfile",((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).ComputeProfile, Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.ComputeProfileTypeConverter.ConvertFrom);
            }
            if (content.Contains("Profile"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).Profile = (Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterProfile) content.GetValueForProperty("Profile",((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).Profile, Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.ClusterProfileTypeConverter.ConvertFrom);
            }
            if (content.Contains("ProvisioningState"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).ProvisioningState = (string) content.GetValueForProperty("ProvisioningState",((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).ProvisioningState, global::System.Convert.ToString);
            }
            if (content.Contains("ClusterType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).ClusterType = (string) content.GetValueForProperty("ClusterType",((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).ClusterType, global::System.Convert.ToString);
            }
            if (content.Contains("DeploymentId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).DeploymentId = (string) content.GetValueForProperty("DeploymentId",((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).DeploymentId, global::System.Convert.ToString);
            }
            if (content.Contains("Status"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).Status = (string) content.GetValueForProperty("Status",((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).Status, global::System.Convert.ToString);
            }
            if (content.Contains("ComputeProfileNode"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).ComputeProfileNode = (System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.INodeProfile>) content.GetValueForProperty("ComputeProfileNode",((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).ComputeProfileNode, __y => TypeConverterExtensions.SelectToList<Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.INodeProfile>(__y, Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.NodeProfileTypeConverter.ConvertFrom));
            }
            if (content.Contains("ProfileIdentityProfile"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).ProfileIdentityProfile = (Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IIdentityProfile) content.GetValueForProperty("ProfileIdentityProfile",((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).ProfileIdentityProfile, Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IdentityProfileTypeConverter.ConvertFrom);
            }
            if (content.Contains("ProfileAuthorizationProfile"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).ProfileAuthorizationProfile = (Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IAuthorizationProfile) content.GetValueForProperty("ProfileAuthorizationProfile",((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).ProfileAuthorizationProfile, Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.AuthorizationProfileTypeConverter.ConvertFrom);
            }
            if (content.Contains("ProfileSecretsProfile"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).ProfileSecretsProfile = (Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.ISecretsProfile) content.GetValueForProperty("ProfileSecretsProfile",((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).ProfileSecretsProfile, Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.SecretsProfileTypeConverter.ConvertFrom);
            }
            if (content.Contains("ProfileConnectivityProfile"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).ProfileConnectivityProfile = (Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IConnectivityProfile) content.GetValueForProperty("ProfileConnectivityProfile",((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).ProfileConnectivityProfile, Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.ConnectivityProfileTypeConverter.ConvertFrom);
            }
            if (content.Contains("ProfileSshProfile"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).ProfileSshProfile = (Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.ISshProfile) content.GetValueForProperty("ProfileSshProfile",((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).ProfileSshProfile, Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.SshProfileTypeConverter.ConvertFrom);
            }
            if (content.Contains("ProfileAutoscaleProfile"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).ProfileAutoscaleProfile = (Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IAutoscaleProfile) content.GetValueForProperty("ProfileAutoscaleProfile",((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).ProfileAutoscaleProfile, Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.AutoscaleProfileTypeConverter.ConvertFrom);
            }
            if (content.Contains("ProfileKafkaProfile"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).ProfileKafkaProfile = (Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IKafkaProfile) content.GetValueForProperty("ProfileKafkaProfile",((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).ProfileKafkaProfile, Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.KafkaProfileTypeConverter.ConvertFrom);
            }
            if (content.Contains("ProfileTrinoProfile"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).ProfileTrinoProfile = (Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.ITrinoProfile) content.GetValueForProperty("ProfileTrinoProfile",((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).ProfileTrinoProfile, Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.TrinoProfileTypeConverter.ConvertFrom);
            }
            if (content.Contains("ProfileFlinkProfile"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).ProfileFlinkProfile = (Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IFlinkProfile) content.GetValueForProperty("ProfileFlinkProfile",((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).ProfileFlinkProfile, Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.FlinkProfileTypeConverter.ConvertFrom);
            }
            if (content.Contains("ProfileSparkProfile"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).ProfileSparkProfile = (Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.ISparkProfile) content.GetValueForProperty("ProfileSparkProfile",((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).ProfileSparkProfile, Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.SparkProfileTypeConverter.ConvertFrom);
            }
            if (content.Contains("ProfileRangerProfile"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).ProfileRangerProfile = (Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IRangerProfile) content.GetValueForProperty("ProfileRangerProfile",((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).ProfileRangerProfile, Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.RangerProfileTypeConverter.ConvertFrom);
            }
            if (content.Contains("ProfileLlapProfile"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).ProfileLlapProfile = (Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterProfileLlapProfile) content.GetValueForProperty("ProfileLlapProfile",((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).ProfileLlapProfile, Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.ClusterProfileLlapProfileTypeConverter.ConvertFrom);
            }
            if (content.Contains("ProfileStubProfile"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).ProfileStubProfile = (Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterProfileStubProfile) content.GetValueForProperty("ProfileStubProfile",((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).ProfileStubProfile, Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.ClusterProfileStubProfileTypeConverter.ConvertFrom);
            }
            if (content.Contains("ProfileClusterAccessProfile"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).ProfileClusterAccessProfile = (Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterAccessProfile) content.GetValueForProperty("ProfileClusterAccessProfile",((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).ProfileClusterAccessProfile, Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.ClusterAccessProfileTypeConverter.ConvertFrom);
            }
            if (content.Contains("ProfileLogAnalyticsProfile"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).ProfileLogAnalyticsProfile = (Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterLogAnalyticsProfile) content.GetValueForProperty("ProfileLogAnalyticsProfile",((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).ProfileLogAnalyticsProfile, Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.ClusterLogAnalyticsProfileTypeConverter.ConvertFrom);
            }
            if (content.Contains("ProfilePrometheusProfile"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).ProfilePrometheusProfile = (Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterPrometheusProfile) content.GetValueForProperty("ProfilePrometheusProfile",((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).ProfilePrometheusProfile, Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.ClusterPrometheusProfileTypeConverter.ConvertFrom);
            }
            if (content.Contains("ProfileRangerPluginProfile"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).ProfileRangerPluginProfile = (Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterRangerPluginProfile) content.GetValueForProperty("ProfileRangerPluginProfile",((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).ProfileRangerPluginProfile, Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.ClusterRangerPluginProfileTypeConverter.ConvertFrom);
            }
            if (content.Contains("ProfileClusterVersion"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).ProfileClusterVersion = (string) content.GetValueForProperty("ProfileClusterVersion",((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).ProfileClusterVersion, global::System.Convert.ToString);
            }
            if (content.Contains("ProfileOssVersion"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).ProfileOssVersion = (string) content.GetValueForProperty("ProfileOssVersion",((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).ProfileOssVersion, global::System.Convert.ToString);
            }
            if (content.Contains("ProfileComponent"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).ProfileComponent = (System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterComponentsItem>) content.GetValueForProperty("ProfileComponent",((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).ProfileComponent, __y => TypeConverterExtensions.SelectToList<Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterComponentsItem>(__y, Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.ClusterComponentsItemTypeConverter.ConvertFrom));
            }
            if (content.Contains("ProfileServiceConfigsProfile"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).ProfileServiceConfigsProfile = (System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterServiceConfigsProfile>) content.GetValueForProperty("ProfileServiceConfigsProfile",((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).ProfileServiceConfigsProfile, __y => TypeConverterExtensions.SelectToList<Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterServiceConfigsProfile>(__y, Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.ClusterServiceConfigsProfileTypeConverter.ConvertFrom));
            }
            if (content.Contains("ProfileScriptActionProfile"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).ProfileScriptActionProfile = (System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IScriptActionProfile>) content.GetValueForProperty("ProfileScriptActionProfile",((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).ProfileScriptActionProfile, __y => TypeConverterExtensions.SelectToList<Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IScriptActionProfile>(__y, Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.ScriptActionProfileTypeConverter.ConvertFrom));
            }
            if (content.Contains("AuthorizationProfileUserId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).AuthorizationProfileUserId = (System.Collections.Generic.List<string>) content.GetValueForProperty("AuthorizationProfileUserId",((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).AuthorizationProfileUserId, __y => TypeConverterExtensions.SelectToList<string>(__y, global::System.Convert.ToString));
            }
            if (content.Contains("AuthorizationProfileGroupId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).AuthorizationProfileGroupId = (System.Collections.Generic.List<string>) content.GetValueForProperty("AuthorizationProfileGroupId",((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).AuthorizationProfileGroupId, __y => TypeConverterExtensions.SelectToList<string>(__y, global::System.Convert.ToString));
            }
            if (content.Contains("SecretProfileSecret"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).SecretProfileSecret = (System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.ISecretReference>) content.GetValueForProperty("SecretProfileSecret",((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).SecretProfileSecret, __y => TypeConverterExtensions.SelectToList<Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.ISecretReference>(__y, Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.SecretReferenceTypeConverter.ConvertFrom));
            }
            if (content.Contains("ConnectivityProfileWeb"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).ConnectivityProfileWeb = (Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IConnectivityProfileWeb) content.GetValueForProperty("ConnectivityProfileWeb",((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).ConnectivityProfileWeb, Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.ConnectivityProfileWebTypeConverter.ConvertFrom);
            }
            if (content.Contains("ConnectivityProfileSsh"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).ConnectivityProfileSsh = (System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.ISshConnectivityEndpoint>) content.GetValueForProperty("ConnectivityProfileSsh",((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).ConnectivityProfileSsh, __y => TypeConverterExtensions.SelectToList<Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.ISshConnectivityEndpoint>(__y, Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.SshConnectivityEndpointTypeConverter.ConvertFrom));
            }
            if (content.Contains("SshProfileCount"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).SshProfileCount = (int) content.GetValueForProperty("SshProfileCount",((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).SshProfileCount, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("SshProfilePodPrefix"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).SshProfilePodPrefix = (string) content.GetValueForProperty("SshProfilePodPrefix",((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).SshProfilePodPrefix, global::System.Convert.ToString);
            }
            if (content.Contains("AutoscaleProfileAutoscaleType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).AutoscaleProfileAutoscaleType = (string) content.GetValueForProperty("AutoscaleProfileAutoscaleType",((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).AutoscaleProfileAutoscaleType, global::System.Convert.ToString);
            }
            if (content.Contains("TrinoProfileCatalogOption"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).TrinoProfileCatalogOption = (Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.ICatalogOptions) content.GetValueForProperty("TrinoProfileCatalogOption",((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).TrinoProfileCatalogOption, Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.CatalogOptionsTypeConverter.ConvertFrom);
            }
            if (content.Contains("FlinkProfileNumReplica"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).FlinkProfileNumReplica = (int?) content.GetValueForProperty("FlinkProfileNumReplica",((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).FlinkProfileNumReplica, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("FlinkProfileDeploymentMode"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).FlinkProfileDeploymentMode = (string) content.GetValueForProperty("FlinkProfileDeploymentMode",((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).FlinkProfileDeploymentMode, global::System.Convert.ToString);
            }
            if (content.Contains("IdentityProfileMsiResourceId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).IdentityProfileMsiResourceId = (string) content.GetValueForProperty("IdentityProfileMsiResourceId",((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).IdentityProfileMsiResourceId, global::System.Convert.ToString);
            }
            if (content.Contains("IdentityProfileMsiClientId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).IdentityProfileMsiClientId = (string) content.GetValueForProperty("IdentityProfileMsiClientId",((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).IdentityProfileMsiClientId, global::System.Convert.ToString);
            }
            if (content.Contains("IdentityProfileMsiObjectId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).IdentityProfileMsiObjectId = (string) content.GetValueForProperty("IdentityProfileMsiObjectId",((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).IdentityProfileMsiObjectId, global::System.Convert.ToString);
            }
            if (content.Contains("SecretProfileKeyVaultResourceId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).SecretProfileKeyVaultResourceId = (string) content.GetValueForProperty("SecretProfileKeyVaultResourceId",((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).SecretProfileKeyVaultResourceId, global::System.Convert.ToString);
            }
            if (content.Contains("AccessProfileEnableInternalIngress"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).AccessProfileEnableInternalIngress = (bool) content.GetValueForProperty("AccessProfileEnableInternalIngress",((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).AccessProfileEnableInternalIngress, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("AccessProfilePrivateLinkServiceId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).AccessProfilePrivateLinkServiceId = (string) content.GetValueForProperty("AccessProfilePrivateLinkServiceId",((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).AccessProfilePrivateLinkServiceId, global::System.Convert.ToString);
            }
            if (content.Contains("LogAnalyticProfileApplicationLog"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).LogAnalyticProfileApplicationLog = (Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterLogAnalyticsApplicationLogs) content.GetValueForProperty("LogAnalyticProfileApplicationLog",((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).LogAnalyticProfileApplicationLog, Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.ClusterLogAnalyticsApplicationLogsTypeConverter.ConvertFrom);
            }
            if (content.Contains("LogAnalyticProfileEnabled"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).LogAnalyticProfileEnabled = (bool) content.GetValueForProperty("LogAnalyticProfileEnabled",((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).LogAnalyticProfileEnabled, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("LogAnalyticProfileMetricsEnabled"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).LogAnalyticProfileMetricsEnabled = (bool?) content.GetValueForProperty("LogAnalyticProfileMetricsEnabled",((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).LogAnalyticProfileMetricsEnabled, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("PrometheuProfileEnabled"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).PrometheuProfileEnabled = (bool) content.GetValueForProperty("PrometheuProfileEnabled",((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).PrometheuProfileEnabled, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("AutoscaleProfileScheduleBasedConfig"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).AutoscaleProfileScheduleBasedConfig = (Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IScheduleBasedConfig) content.GetValueForProperty("AutoscaleProfileScheduleBasedConfig",((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).AutoscaleProfileScheduleBasedConfig, Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.ScheduleBasedConfigTypeConverter.ConvertFrom);
            }
            if (content.Contains("AutoscaleProfileLoadBasedConfig"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).AutoscaleProfileLoadBasedConfig = (Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.ILoadBasedConfig) content.GetValueForProperty("AutoscaleProfileLoadBasedConfig",((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).AutoscaleProfileLoadBasedConfig, Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.LoadBasedConfigTypeConverter.ConvertFrom);
            }
            if (content.Contains("AutoscaleProfileEnabled"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).AutoscaleProfileEnabled = (bool) content.GetValueForProperty("AutoscaleProfileEnabled",((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).AutoscaleProfileEnabled, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("AutoscaleProfileGracefulDecommissionTimeout"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).AutoscaleProfileGracefulDecommissionTimeout = (int?) content.GetValueForProperty("AutoscaleProfileGracefulDecommissionTimeout",((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).AutoscaleProfileGracefulDecommissionTimeout, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("ScheduleBasedConfigTimeZone"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).ScheduleBasedConfigTimeZone = (string) content.GetValueForProperty("ScheduleBasedConfigTimeZone",((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).ScheduleBasedConfigTimeZone, global::System.Convert.ToString);
            }
            if (content.Contains("ScheduleBasedConfigDefaultCount"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).ScheduleBasedConfigDefaultCount = (int) content.GetValueForProperty("ScheduleBasedConfigDefaultCount",((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).ScheduleBasedConfigDefaultCount, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("ScheduleBasedConfigSchedule"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).ScheduleBasedConfigSchedule = (System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.ISchedule>) content.GetValueForProperty("ScheduleBasedConfigSchedule",((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).ScheduleBasedConfigSchedule, __y => TypeConverterExtensions.SelectToList<Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.ISchedule>(__y, Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.ScheduleTypeConverter.ConvertFrom));
            }
            if (content.Contains("LoadBasedConfigMinNode"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).LoadBasedConfigMinNode = (int) content.GetValueForProperty("LoadBasedConfigMinNode",((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).LoadBasedConfigMinNode, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("LoadBasedConfigMaxNode"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).LoadBasedConfigMaxNode = (int) content.GetValueForProperty("LoadBasedConfigMaxNode",((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).LoadBasedConfigMaxNode, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("LoadBasedConfigPollInterval"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).LoadBasedConfigPollInterval = (int?) content.GetValueForProperty("LoadBasedConfigPollInterval",((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).LoadBasedConfigPollInterval, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("LoadBasedConfigCooldownPeriod"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).LoadBasedConfigCooldownPeriod = (int?) content.GetValueForProperty("LoadBasedConfigCooldownPeriod",((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).LoadBasedConfigCooldownPeriod, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("LoadBasedConfigScalingRule"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).LoadBasedConfigScalingRule = (System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IScalingRule>) content.GetValueForProperty("LoadBasedConfigScalingRule",((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).LoadBasedConfigScalingRule, __y => TypeConverterExtensions.SelectToList<Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IScalingRule>(__y, Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.ScalingRuleTypeConverter.ConvertFrom));
            }
            if (content.Contains("RangerPluginProfileEnabled"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).RangerPluginProfileEnabled = (bool) content.GetValueForProperty("RangerPluginProfileEnabled",((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).RangerPluginProfileEnabled, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("KafkaProfileDiskStorage"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).KafkaProfileDiskStorage = (Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IDiskStorageProfile) content.GetValueForProperty("KafkaProfileDiskStorage",((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).KafkaProfileDiskStorage, Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.DiskStorageProfileTypeConverter.ConvertFrom);
            }
            if (content.Contains("KafkaProfileClusterIdentity"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).KafkaProfileClusterIdentity = (Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IIdentityProfile) content.GetValueForProperty("KafkaProfileClusterIdentity",((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).KafkaProfileClusterIdentity, Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IdentityProfileTypeConverter.ConvertFrom);
            }
            if (content.Contains("KafkaProfileConnectivityEndpoint"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).KafkaProfileConnectivityEndpoint = (Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IKafkaConnectivityEndpoints) content.GetValueForProperty("KafkaProfileConnectivityEndpoint",((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).KafkaProfileConnectivityEndpoint, Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.KafkaConnectivityEndpointsTypeConverter.ConvertFrom);
            }
            if (content.Contains("KafkaProfileEnableKRaft"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).KafkaProfileEnableKRaft = (bool?) content.GetValueForProperty("KafkaProfileEnableKRaft",((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).KafkaProfileEnableKRaft, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("KafkaProfileEnablePublicEndpoint"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).KafkaProfileEnablePublicEndpoint = (bool?) content.GetValueForProperty("KafkaProfileEnablePublicEndpoint",((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).KafkaProfileEnablePublicEndpoint, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("KafkaProfileRemoteStorageUri"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).KafkaProfileRemoteStorageUri = (string) content.GetValueForProperty("KafkaProfileRemoteStorageUri",((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).KafkaProfileRemoteStorageUri, global::System.Convert.ToString);
            }
            if (content.Contains("TrinoProfileCoordinator"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).TrinoProfileCoordinator = (Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.ITrinoCoordinator) content.GetValueForProperty("TrinoProfileCoordinator",((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).TrinoProfileCoordinator, Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.TrinoCoordinatorTypeConverter.ConvertFrom);
            }
            if (content.Contains("TrinoProfileUserPluginsSpec"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).TrinoProfileUserPluginsSpec = (Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.ITrinoUserPlugins) content.GetValueForProperty("TrinoProfileUserPluginsSpec",((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).TrinoProfileUserPluginsSpec, Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.TrinoUserPluginsTypeConverter.ConvertFrom);
            }
            if (content.Contains("TrinoProfileUserTelemetrySpec"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).TrinoProfileUserTelemetrySpec = (Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.ITrinoUserTelemetry) content.GetValueForProperty("TrinoProfileUserTelemetrySpec",((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).TrinoProfileUserTelemetrySpec, Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.TrinoUserTelemetryTypeConverter.ConvertFrom);
            }
            if (content.Contains("TrinoProfileWorker"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).TrinoProfileWorker = (Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.ITrinoWorker) content.GetValueForProperty("TrinoProfileWorker",((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).TrinoProfileWorker, Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.TrinoWorkerTypeConverter.ConvertFrom);
            }
            if (content.Contains("TrinoProfileCatalogOptionsHive"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).TrinoProfileCatalogOptionsHive = (System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IHiveCatalogOption>) content.GetValueForProperty("TrinoProfileCatalogOptionsHive",((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).TrinoProfileCatalogOptionsHive, __y => TypeConverterExtensions.SelectToList<Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IHiveCatalogOption>(__y, Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.HiveCatalogOptionTypeConverter.ConvertFrom));
            }
            if (content.Contains("FlinkProfileStorage"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).FlinkProfileStorage = (Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IFlinkStorageProfile) content.GetValueForProperty("FlinkProfileStorage",((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).FlinkProfileStorage, Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.FlinkStorageProfileTypeConverter.ConvertFrom);
            }
            if (content.Contains("FlinkProfileJobManager"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).FlinkProfileJobManager = (Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IComputeResourceDefinition) content.GetValueForProperty("FlinkProfileJobManager",((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).FlinkProfileJobManager, Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.ComputeResourceDefinitionTypeConverter.ConvertFrom);
            }
            if (content.Contains("FlinkProfileHistoryServer"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).FlinkProfileHistoryServer = (Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IComputeResourceDefinition) content.GetValueForProperty("FlinkProfileHistoryServer",((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).FlinkProfileHistoryServer, Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.ComputeResourceDefinitionTypeConverter.ConvertFrom);
            }
            if (content.Contains("FlinkProfileTaskManager"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).FlinkProfileTaskManager = (Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IComputeResourceDefinition) content.GetValueForProperty("FlinkProfileTaskManager",((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).FlinkProfileTaskManager, Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.ComputeResourceDefinitionTypeConverter.ConvertFrom);
            }
            if (content.Contains("FlinkProfileCatalogOption"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).FlinkProfileCatalogOption = (Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IFlinkCatalogOptions) content.GetValueForProperty("FlinkProfileCatalogOption",((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).FlinkProfileCatalogOption, Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.FlinkCatalogOptionsTypeConverter.ConvertFrom);
            }
            if (content.Contains("FlinkProfileJobSpec"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).FlinkProfileJobSpec = (Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IFlinkJobProfile) content.GetValueForProperty("FlinkProfileJobSpec",((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).FlinkProfileJobSpec, Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.FlinkJobProfileTypeConverter.ConvertFrom);
            }
            if (content.Contains("JobSpecUpgradeMode"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).JobSpecUpgradeMode = (string) content.GetValueForProperty("JobSpecUpgradeMode",((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).JobSpecUpgradeMode, global::System.Convert.ToString);
            }
            if (content.Contains("SparkProfileMetastoreSpec"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).SparkProfileMetastoreSpec = (Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.ISparkMetastoreSpec) content.GetValueForProperty("SparkProfileMetastoreSpec",((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).SparkProfileMetastoreSpec, Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.SparkMetastoreSpecTypeConverter.ConvertFrom);
            }
            if (content.Contains("SparkProfileUserPluginsSpec"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).SparkProfileUserPluginsSpec = (Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.ISparkUserPlugins) content.GetValueForProperty("SparkProfileUserPluginsSpec",((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).SparkProfileUserPluginsSpec, Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.SparkUserPluginsTypeConverter.ConvertFrom);
            }
            if (content.Contains("SparkProfileDefaultStorageUrl"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).SparkProfileDefaultStorageUrl = (string) content.GetValueForProperty("SparkProfileDefaultStorageUrl",((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).SparkProfileDefaultStorageUrl, global::System.Convert.ToString);
            }
            if (content.Contains("RangerProfileRangerAdmin"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).RangerProfileRangerAdmin = (Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IRangerAdminSpec) content.GetValueForProperty("RangerProfileRangerAdmin",((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).RangerProfileRangerAdmin, Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.RangerAdminSpecTypeConverter.ConvertFrom);
            }
            if (content.Contains("RangerProfileRangerAudit"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).RangerProfileRangerAudit = (Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IRangerAuditSpec) content.GetValueForProperty("RangerProfileRangerAudit",((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).RangerProfileRangerAudit, Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.RangerAuditSpecTypeConverter.ConvertFrom);
            }
            if (content.Contains("RangerProfileRangerUsersync"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).RangerProfileRangerUsersync = (Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IRangerUsersyncSpec) content.GetValueForProperty("RangerProfileRangerUsersync",((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).RangerProfileRangerUsersync, Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.RangerUsersyncSpecTypeConverter.ConvertFrom);
            }
            if (content.Contains("RangerUsersyncMode"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).RangerUsersyncMode = (string) content.GetValueForProperty("RangerUsersyncMode",((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).RangerUsersyncMode, global::System.Convert.ToString);
            }
            if (content.Contains("WebFqdn"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).WebFqdn = (string) content.GetValueForProperty("WebFqdn",((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).WebFqdn, global::System.Convert.ToString);
            }
            if (content.Contains("WebPrivateFqdn"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).WebPrivateFqdn = (string) content.GetValueForProperty("WebPrivateFqdn",((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).WebPrivateFqdn, global::System.Convert.ToString);
            }
            if (content.Contains("ApplicationLogStdOutEnabled"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).ApplicationLogStdOutEnabled = (bool?) content.GetValueForProperty("ApplicationLogStdOutEnabled",((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).ApplicationLogStdOutEnabled, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("ApplicationLogStdErrorEnabled"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).ApplicationLogStdErrorEnabled = (bool?) content.GetValueForProperty("ApplicationLogStdErrorEnabled",((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).ApplicationLogStdErrorEnabled, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("DiskStorageDataDiskSize"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).DiskStorageDataDiskSize = (int) content.GetValueForProperty("DiskStorageDataDiskSize",((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).DiskStorageDataDiskSize, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("DiskStorageDataDiskType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).DiskStorageDataDiskType = (string) content.GetValueForProperty("DiskStorageDataDiskType",((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).DiskStorageDataDiskType, global::System.Convert.ToString);
            }
            if (content.Contains("IdentityMsiResourceId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).IdentityMsiResourceId = (string) content.GetValueForProperty("IdentityMsiResourceId",((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).IdentityMsiResourceId, global::System.Convert.ToString);
            }
            if (content.Contains("IdentityMsiClientId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).IdentityMsiClientId = (string) content.GetValueForProperty("IdentityMsiClientId",((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).IdentityMsiClientId, global::System.Convert.ToString);
            }
            if (content.Contains("IdentityMsiObjectId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).IdentityMsiObjectId = (string) content.GetValueForProperty("IdentityMsiObjectId",((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).IdentityMsiObjectId, global::System.Convert.ToString);
            }
            if (content.Contains("ConnectivityEndpointBootstrapServerEndpoint"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).ConnectivityEndpointBootstrapServerEndpoint = (string) content.GetValueForProperty("ConnectivityEndpointBootstrapServerEndpoint",((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).ConnectivityEndpointBootstrapServerEndpoint, global::System.Convert.ToString);
            }
            if (content.Contains("ConnectivityEndpointBrokerEndpoint"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).ConnectivityEndpointBrokerEndpoint = (System.Collections.Generic.List<string>) content.GetValueForProperty("ConnectivityEndpointBrokerEndpoint",((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).ConnectivityEndpointBrokerEndpoint, __y => TypeConverterExtensions.SelectToList<string>(__y, global::System.Convert.ToString));
            }
            if (content.Contains("CoordinatorDebug"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).CoordinatorDebug = (Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.ITrinoDebugConfig) content.GetValueForProperty("CoordinatorDebug",((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).CoordinatorDebug, Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.TrinoDebugConfigTypeConverter.ConvertFrom);
            }
            if (content.Contains("CoordinatorHighAvailabilityEnabled"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).CoordinatorHighAvailabilityEnabled = (bool?) content.GetValueForProperty("CoordinatorHighAvailabilityEnabled",((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).CoordinatorHighAvailabilityEnabled, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("TrinoProfileUserPluginsSpecPlugin"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).TrinoProfileUserPluginsSpecPlugin = (System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.ITrinoUserPlugin>) content.GetValueForProperty("TrinoProfileUserPluginsSpecPlugin",((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).TrinoProfileUserPluginsSpecPlugin, __y => TypeConverterExtensions.SelectToList<Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.ITrinoUserPlugin>(__y, Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.TrinoUserPluginTypeConverter.ConvertFrom));
            }
            if (content.Contains("UserTelemetrySpecStorage"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).UserTelemetrySpecStorage = (Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.ITrinoTelemetryConfig) content.GetValueForProperty("UserTelemetrySpecStorage",((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).UserTelemetrySpecStorage, Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.TrinoTelemetryConfigTypeConverter.ConvertFrom);
            }
            if (content.Contains("WorkerDebug"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).WorkerDebug = (Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.ITrinoDebugConfig) content.GetValueForProperty("WorkerDebug",((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).WorkerDebug, Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.TrinoDebugConfigTypeConverter.ConvertFrom);
            }
            if (content.Contains("StorageUri"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).StorageUri = (string) content.GetValueForProperty("StorageUri",((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).StorageUri, global::System.Convert.ToString);
            }
            if (content.Contains("StorageStoragekey"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).StorageStoragekey = (string) content.GetValueForProperty("StorageStoragekey",((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).StorageStoragekey, global::System.Convert.ToString);
            }
            if (content.Contains("JobManagerCpu"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).JobManagerCpu = (float) content.GetValueForProperty("JobManagerCpu",((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).JobManagerCpu, (__y)=> (float) global::System.Convert.ChangeType(__y, typeof(float)));
            }
            if (content.Contains("JobManagerMemory"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).JobManagerMemory = (long) content.GetValueForProperty("JobManagerMemory",((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).JobManagerMemory, (__y)=> (long) global::System.Convert.ChangeType(__y, typeof(long)));
            }
            if (content.Contains("HistoryServerCpu"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).HistoryServerCpu = (float) content.GetValueForProperty("HistoryServerCpu",((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).HistoryServerCpu, (__y)=> (float) global::System.Convert.ChangeType(__y, typeof(float)));
            }
            if (content.Contains("HistoryServerMemory"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).HistoryServerMemory = (long) content.GetValueForProperty("HistoryServerMemory",((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).HistoryServerMemory, (__y)=> (long) global::System.Convert.ChangeType(__y, typeof(long)));
            }
            if (content.Contains("TaskManagerCpu"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).TaskManagerCpu = (float) content.GetValueForProperty("TaskManagerCpu",((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).TaskManagerCpu, (__y)=> (float) global::System.Convert.ChangeType(__y, typeof(float)));
            }
            if (content.Contains("TaskManagerMemory"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).TaskManagerMemory = (long) content.GetValueForProperty("TaskManagerMemory",((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).TaskManagerMemory, (__y)=> (long) global::System.Convert.ChangeType(__y, typeof(long)));
            }
            if (content.Contains("FlinkProfileCatalogOptionsHive"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).FlinkProfileCatalogOptionsHive = (Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IFlinkHiveCatalogOption) content.GetValueForProperty("FlinkProfileCatalogOptionsHive",((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).FlinkProfileCatalogOptionsHive, Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.FlinkHiveCatalogOptionTypeConverter.ConvertFrom);
            }
            if (content.Contains("JobSpecJobJarDirectory"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).JobSpecJobJarDirectory = (string) content.GetValueForProperty("JobSpecJobJarDirectory",((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).JobSpecJobJarDirectory, global::System.Convert.ToString);
            }
            if (content.Contains("JobSpecJarName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).JobSpecJarName = (string) content.GetValueForProperty("JobSpecJarName",((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).JobSpecJarName, global::System.Convert.ToString);
            }
            if (content.Contains("JobSpecEntryClass"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).JobSpecEntryClass = (string) content.GetValueForProperty("JobSpecEntryClass",((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).JobSpecEntryClass, global::System.Convert.ToString);
            }
            if (content.Contains("JobSpecArg"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).JobSpecArg = (string) content.GetValueForProperty("JobSpecArg",((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).JobSpecArg, global::System.Convert.ToString);
            }
            if (content.Contains("JobSpecSavePointName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).JobSpecSavePointName = (string) content.GetValueForProperty("JobSpecSavePointName",((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).JobSpecSavePointName, global::System.Convert.ToString);
            }
            if (content.Contains("MetastoreSpecDbServerHost"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).MetastoreSpecDbServerHost = (string) content.GetValueForProperty("MetastoreSpecDbServerHost",((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).MetastoreSpecDbServerHost, global::System.Convert.ToString);
            }
            if (content.Contains("MetastoreSpecDbName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).MetastoreSpecDbName = (string) content.GetValueForProperty("MetastoreSpecDbName",((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).MetastoreSpecDbName, global::System.Convert.ToString);
            }
            if (content.Contains("MetastoreSpecDbConnectionAuthenticationMode"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).MetastoreSpecDbConnectionAuthenticationMode = (string) content.GetValueForProperty("MetastoreSpecDbConnectionAuthenticationMode",((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).MetastoreSpecDbConnectionAuthenticationMode, global::System.Convert.ToString);
            }
            if (content.Contains("MetastoreSpecDbUserName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).MetastoreSpecDbUserName = (string) content.GetValueForProperty("MetastoreSpecDbUserName",((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).MetastoreSpecDbUserName, global::System.Convert.ToString);
            }
            if (content.Contains("MetastoreSpecDbPasswordSecretName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).MetastoreSpecDbPasswordSecretName = (string) content.GetValueForProperty("MetastoreSpecDbPasswordSecretName",((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).MetastoreSpecDbPasswordSecretName, global::System.Convert.ToString);
            }
            if (content.Contains("MetastoreSpecKeyVaultId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).MetastoreSpecKeyVaultId = (string) content.GetValueForProperty("MetastoreSpecKeyVaultId",((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).MetastoreSpecKeyVaultId, global::System.Convert.ToString);
            }
            if (content.Contains("MetastoreSpecThriftUrl"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).MetastoreSpecThriftUrl = (string) content.GetValueForProperty("MetastoreSpecThriftUrl",((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).MetastoreSpecThriftUrl, global::System.Convert.ToString);
            }
            if (content.Contains("SparkProfileUserPluginsSpecPlugin"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).SparkProfileUserPluginsSpecPlugin = (System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.ISparkUserPlugin>) content.GetValueForProperty("SparkProfileUserPluginsSpecPlugin",((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).SparkProfileUserPluginsSpecPlugin, __y => TypeConverterExtensions.SelectToList<Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.ISparkUserPlugin>(__y, Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.SparkUserPluginTypeConverter.ConvertFrom));
            }
            if (content.Contains("RangerAdminDatabase"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).RangerAdminDatabase = (Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IRangerAdminSpecDatabase) content.GetValueForProperty("RangerAdminDatabase",((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).RangerAdminDatabase, Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.RangerAdminSpecDatabaseTypeConverter.ConvertFrom);
            }
            if (content.Contains("RangerAdmin"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).RangerAdmin = (System.Collections.Generic.List<string>) content.GetValueForProperty("RangerAdmin",((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).RangerAdmin, __y => TypeConverterExtensions.SelectToList<string>(__y, global::System.Convert.ToString));
            }
            if (content.Contains("RangerAuditStorageAccount"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).RangerAuditStorageAccount = (string) content.GetValueForProperty("RangerAuditStorageAccount",((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).RangerAuditStorageAccount, global::System.Convert.ToString);
            }
            if (content.Contains("RangerUsersyncEnabled"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).RangerUsersyncEnabled = (bool?) content.GetValueForProperty("RangerUsersyncEnabled",((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).RangerUsersyncEnabled, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("RangerUsersyncGroup"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).RangerUsersyncGroup = (System.Collections.Generic.List<string>) content.GetValueForProperty("RangerUsersyncGroup",((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).RangerUsersyncGroup, __y => TypeConverterExtensions.SelectToList<string>(__y, global::System.Convert.ToString));
            }
            if (content.Contains("RangerUsersyncUserMappingLocation"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).RangerUsersyncUserMappingLocation = (string) content.GetValueForProperty("RangerUsersyncUserMappingLocation",((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).RangerUsersyncUserMappingLocation, global::System.Convert.ToString);
            }
            if (content.Contains("RangerUsersyncUser"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).RangerUsersyncUser = (System.Collections.Generic.List<string>) content.GetValueForProperty("RangerUsersyncUser",((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).RangerUsersyncUser, __y => TypeConverterExtensions.SelectToList<string>(__y, global::System.Convert.ToString));
            }
            if (content.Contains("CoordinatorDebugEnable"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).CoordinatorDebugEnable = (bool?) content.GetValueForProperty("CoordinatorDebugEnable",((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).CoordinatorDebugEnable, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("CoordinatorDebugPort"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).CoordinatorDebugPort = (int?) content.GetValueForProperty("CoordinatorDebugPort",((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).CoordinatorDebugPort, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("CoordinatorDebugSuspend"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).CoordinatorDebugSuspend = (bool?) content.GetValueForProperty("CoordinatorDebugSuspend",((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).CoordinatorDebugSuspend, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("StorageHivecatalogName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).StorageHivecatalogName = (string) content.GetValueForProperty("StorageHivecatalogName",((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).StorageHivecatalogName, global::System.Convert.ToString);
            }
            if (content.Contains("StorageHivecatalogSchema"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).StorageHivecatalogSchema = (string) content.GetValueForProperty("StorageHivecatalogSchema",((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).StorageHivecatalogSchema, global::System.Convert.ToString);
            }
            if (content.Contains("StoragePartitionRetentionInDay"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).StoragePartitionRetentionInDay = (int?) content.GetValueForProperty("StoragePartitionRetentionInDay",((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).StoragePartitionRetentionInDay, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("StoragePath"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).StoragePath = (string) content.GetValueForProperty("StoragePath",((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).StoragePath, global::System.Convert.ToString);
            }
            if (content.Contains("WorkerDebugEnable"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).WorkerDebugEnable = (bool?) content.GetValueForProperty("WorkerDebugEnable",((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).WorkerDebugEnable, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("WorkerDebugPort"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).WorkerDebugPort = (int?) content.GetValueForProperty("WorkerDebugPort",((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).WorkerDebugPort, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("WorkerDebugSuspend"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).WorkerDebugSuspend = (bool?) content.GetValueForProperty("WorkerDebugSuspend",((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).WorkerDebugSuspend, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("HiveMetastoreDbConnectionAuthenticationMode"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).HiveMetastoreDbConnectionAuthenticationMode = (string) content.GetValueForProperty("HiveMetastoreDbConnectionAuthenticationMode",((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).HiveMetastoreDbConnectionAuthenticationMode, global::System.Convert.ToString);
            }
            if (content.Contains("HiveMetastoreDbConnectionPasswordSecret"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).HiveMetastoreDbConnectionPasswordSecret = (string) content.GetValueForProperty("HiveMetastoreDbConnectionPasswordSecret",((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).HiveMetastoreDbConnectionPasswordSecret, global::System.Convert.ToString);
            }
            if (content.Contains("HiveMetastoreDbConnectionUrl"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).HiveMetastoreDbConnectionUrl = (string) content.GetValueForProperty("HiveMetastoreDbConnectionUrl",((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).HiveMetastoreDbConnectionUrl, global::System.Convert.ToString);
            }
            if (content.Contains("HiveMetastoreDbConnectionUserName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).HiveMetastoreDbConnectionUserName = (string) content.GetValueForProperty("HiveMetastoreDbConnectionUserName",((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).HiveMetastoreDbConnectionUserName, global::System.Convert.ToString);
            }
            if (content.Contains("DatabaseHost"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).DatabaseHost = (string) content.GetValueForProperty("DatabaseHost",((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).DatabaseHost, global::System.Convert.ToString);
            }
            if (content.Contains("DatabaseName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).DatabaseName = (string) content.GetValueForProperty("DatabaseName",((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).DatabaseName, global::System.Convert.ToString);
            }
            if (content.Contains("DatabasePasswordSecretRef"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).DatabasePasswordSecretRef = (string) content.GetValueForProperty("DatabasePasswordSecretRef",((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).DatabasePasswordSecretRef, global::System.Convert.ToString);
            }
            if (content.Contains("DatabaseUsername"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).DatabaseUsername = (string) content.GetValueForProperty("DatabaseUsername",((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterInternal)this).DatabaseUsername, global::System.Convert.ToString);
            }
            AfterDeserializePSObject(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Collections.IDictionary" /> into an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.Cluster"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        /// <returns>
        /// an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.ICluster" />.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.ICluster DeserializeFromDictionary(global::System.Collections.IDictionary content)
        {
            return new Cluster(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Management.Automation.PSObject" /> into an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.Cluster"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        /// <returns>
        /// an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.ICluster" />.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.ICluster DeserializeFromPSObject(global::System.Management.Automation.PSObject content)
        {
            return new Cluster(content);
        }

        /// <summary>
        /// Creates a new instance of <see cref="Cluster" />, deserializing the content from a json string.
        /// </summary>
        /// <param name="jsonText">a string containing a JSON serialized instance of this model.</param>
        /// <returns>an instance of the <see cref="Cluster" /> model class.</returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.ICluster FromJsonString(string jsonText) => FromJson(Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Runtime.Json.JsonNode.Parse(jsonText));

        /// <summary>Serializes this instance to a json string.</summary>

        /// <returns>a <see cref="System.String" /> containing this model serialized to JSON text.</returns>
        public string ToJsonString() => ToJson(null, Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Runtime.SerializationMode.IncludeAll)?.ToString();

        public override string ToString()
        {
            var returnNow = false;
            var result = global::System.String.Empty;
            OverrideToString(ref result, ref returnNow);
            if (returnNow)
            {
                return result;
            }
            return ToJsonString();
        }
    }
    /// The cluster.
    [System.ComponentModel.TypeConverter(typeof(ClusterTypeConverter))]
    public partial interface ICluster

    {

    }
}