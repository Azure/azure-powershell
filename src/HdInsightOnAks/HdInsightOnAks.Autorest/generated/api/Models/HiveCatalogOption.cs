// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models
{
    using static Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Runtime.Extensions;

    /// <summary>Hive Catalog Option</summary>
    public partial class HiveCatalogOption :
        Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IHiveCatalogOption,
        Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IHiveCatalogOptionInternal
    {

        /// <summary>Backing field for <see cref="CatalogName" /> property.</summary>
        private string _catalogName;

        /// <summary>Name of trino catalog which should use specified hive metastore.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Origin(Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.PropertyOrigin.Owned)]
        public string CatalogName { get => this._catalogName; set => this._catalogName = value; }

        /// <summary>Backing field for <see cref="MetastoreDbConnectionPasswordSecret" /> property.</summary>
        private string _metastoreDbConnectionPasswordSecret;

        /// <summary>
        /// Secret reference name from secretsProfile.secrets containing password for database connection.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Origin(Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.PropertyOrigin.Owned)]
        public string MetastoreDbConnectionPasswordSecret { get => this._metastoreDbConnectionPasswordSecret; set => this._metastoreDbConnectionPasswordSecret = value; }

        /// <summary>Backing field for <see cref="MetastoreDbConnectionUrl" /> property.</summary>
        private string _metastoreDbConnectionUrl;

        /// <summary>Connection string for hive metastore database.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Origin(Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.PropertyOrigin.Owned)]
        public string MetastoreDbConnectionUrl { get => this._metastoreDbConnectionUrl; set => this._metastoreDbConnectionUrl = value; }

        /// <summary>Backing field for <see cref="MetastoreDbConnectionUserName" /> property.</summary>
        private string _metastoreDbConnectionUserName;

        /// <summary>User name for database connection.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Origin(Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.PropertyOrigin.Owned)]
        public string MetastoreDbConnectionUserName { get => this._metastoreDbConnectionUserName; set => this._metastoreDbConnectionUserName = value; }

        /// <summary>Backing field for <see cref="MetastoreWarehouseDir" /> property.</summary>
        private string _metastoreWarehouseDir;

        /// <summary>
        /// Metastore root directory URI, format: abfs[s]://<container>@<account_name>.dfs.core.windows.net/<path>. More details:
        /// https://docs.microsoft.com/en-us/azure/storage/blobs/data-lake-storage-introduction-abfs-uri
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Origin(Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.PropertyOrigin.Owned)]
        public string MetastoreWarehouseDir { get => this._metastoreWarehouseDir; set => this._metastoreWarehouseDir = value; }

        /// <summary>Creates an new <see cref="HiveCatalogOption" /> instance.</summary>
        public HiveCatalogOption()
        {

        }
    }
    /// Hive Catalog Option
    public partial interface IHiveCatalogOption :
        Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Runtime.IJsonSerializable
    {
        /// <summary>Name of trino catalog which should use specified hive metastore.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Name of trino catalog which should use specified hive metastore.",
        SerializedName = @"catalogName",
        PossibleTypes = new [] { typeof(string) })]
        string CatalogName { get; set; }
        /// <summary>
        /// Secret reference name from secretsProfile.secrets containing password for database connection.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Secret reference name from secretsProfile.secrets containing password for database connection.",
        SerializedName = @"metastoreDbConnectionPasswordSecret",
        PossibleTypes = new [] { typeof(string) })]
        string MetastoreDbConnectionPasswordSecret { get; set; }
        /// <summary>Connection string for hive metastore database.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Connection string for hive metastore database.",
        SerializedName = @"metastoreDbConnectionURL",
        PossibleTypes = new [] { typeof(string) })]
        string MetastoreDbConnectionUrl { get; set; }
        /// <summary>User name for database connection.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"User name for database connection.",
        SerializedName = @"metastoreDbConnectionUserName",
        PossibleTypes = new [] { typeof(string) })]
        string MetastoreDbConnectionUserName { get; set; }
        /// <summary>
        /// Metastore root directory URI, format: abfs[s]://<container>@<account_name>.dfs.core.windows.net/<path>. More details:
        /// https://docs.microsoft.com/en-us/azure/storage/blobs/data-lake-storage-introduction-abfs-uri
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Metastore root directory URI, format: abfs[s]://<container>@<account_name>.dfs.core.windows.net/<path>. More details: https://docs.microsoft.com/en-us/azure/storage/blobs/data-lake-storage-introduction-abfs-uri",
        SerializedName = @"metastoreWarehouseDir",
        PossibleTypes = new [] { typeof(string) })]
        string MetastoreWarehouseDir { get; set; }

    }
    /// Hive Catalog Option
    internal partial interface IHiveCatalogOptionInternal

    {
        /// <summary>Name of trino catalog which should use specified hive metastore.</summary>
        string CatalogName { get; set; }
        /// <summary>
        /// Secret reference name from secretsProfile.secrets containing password for database connection.
        /// </summary>
        string MetastoreDbConnectionPasswordSecret { get; set; }
        /// <summary>Connection string for hive metastore database.</summary>
        string MetastoreDbConnectionUrl { get; set; }
        /// <summary>User name for database connection.</summary>
        string MetastoreDbConnectionUserName { get; set; }
        /// <summary>
        /// Metastore root directory URI, format: abfs[s]://<container>@<account_name>.dfs.core.windows.net/<path>. More details:
        /// https://docs.microsoft.com/en-us/azure/storage/blobs/data-lake-storage-introduction-abfs-uri
        /// </summary>
        string MetastoreWarehouseDir { get; set; }

    }
}