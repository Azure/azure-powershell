// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models
{
    using Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Runtime.PowerShell;

    /// <summary>The Flink cluster profile.</summary>
    [System.ComponentModel.TypeConverter(typeof(FlinkProfileTypeConverter))]
    public partial class FlinkProfile
    {

        /// <summary>
        /// <c>AfterDeserializeDictionary</c> will be called after the deserialization has finished, allowing customization of the
        /// object before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>

        partial void AfterDeserializeDictionary(global::System.Collections.IDictionary content);

        /// <summary>
        /// <c>AfterDeserializePSObject</c> will be called after the deserialization has finished, allowing customization of the object
        /// before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>

        partial void AfterDeserializePSObject(global::System.Management.Automation.PSObject content);

        /// <summary>
        /// <c>BeforeDeserializeDictionary</c> will be called before the deserialization has commenced, allowing complete customization
        /// of the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <paramref name="returnNow" /> output
        /// parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeDeserializeDictionary(global::System.Collections.IDictionary content, ref bool returnNow);

        /// <summary>
        /// <c>BeforeDeserializePSObject</c> will be called before the deserialization has commenced, allowing complete customization
        /// of the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <paramref name="returnNow" /> output
        /// parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeDeserializePSObject(global::System.Management.Automation.PSObject content, ref bool returnNow);

        /// <summary>
        /// <c>OverrideToString</c> will be called if it is implemented. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="stringResult">/// instance serialized to a string, normally it is a Json</param>
        /// <param name="returnNow">/// set returnNow to true if you provide a customized OverrideToString function</param>

        partial void OverrideToString(ref string stringResult, ref bool returnNow);

        /// <summary>
        /// Deserializes a <see cref="global::System.Collections.IDictionary" /> into an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.FlinkProfile"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        /// <returns>
        /// an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IFlinkProfile" />.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IFlinkProfile DeserializeFromDictionary(global::System.Collections.IDictionary content)
        {
            return new FlinkProfile(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Management.Automation.PSObject" /> into an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.FlinkProfile"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        /// <returns>
        /// an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IFlinkProfile" />.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IFlinkProfile DeserializeFromPSObject(global::System.Management.Automation.PSObject content)
        {
            return new FlinkProfile(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Collections.IDictionary" /> into a new instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.FlinkProfile"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        internal FlinkProfile(global::System.Collections.IDictionary content)
        {
            bool returnNow = false;
            BeforeDeserializeDictionary(content, ref returnNow);
            if (returnNow)
            {
                return;
            }
            // actually deserialize
            if (content.Contains("Storage"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IFlinkProfileInternal)this).Storage = (Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IFlinkStorageProfile) content.GetValueForProperty("Storage",((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IFlinkProfileInternal)this).Storage, Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.FlinkStorageProfileTypeConverter.ConvertFrom);
            }
            if (content.Contains("JobManager"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IFlinkProfileInternal)this).JobManager = (Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IComputeResourceDefinition) content.GetValueForProperty("JobManager",((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IFlinkProfileInternal)this).JobManager, Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.ComputeResourceDefinitionTypeConverter.ConvertFrom);
            }
            if (content.Contains("HistoryServer"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IFlinkProfileInternal)this).HistoryServer = (Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IComputeResourceDefinition) content.GetValueForProperty("HistoryServer",((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IFlinkProfileInternal)this).HistoryServer, Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.ComputeResourceDefinitionTypeConverter.ConvertFrom);
            }
            if (content.Contains("TaskManager"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IFlinkProfileInternal)this).TaskManager = (Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IComputeResourceDefinition) content.GetValueForProperty("TaskManager",((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IFlinkProfileInternal)this).TaskManager, Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.ComputeResourceDefinitionTypeConverter.ConvertFrom);
            }
            if (content.Contains("CatalogOption"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IFlinkProfileInternal)this).CatalogOption = (Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IFlinkCatalogOptions) content.GetValueForProperty("CatalogOption",((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IFlinkProfileInternal)this).CatalogOption, Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.FlinkCatalogOptionsTypeConverter.ConvertFrom);
            }
            if (content.Contains("JobSpec"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IFlinkProfileInternal)this).JobSpec = (Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IFlinkJobProfile) content.GetValueForProperty("JobSpec",((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IFlinkProfileInternal)this).JobSpec, Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.FlinkJobProfileTypeConverter.ConvertFrom);
            }
            if (content.Contains("NumReplica"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IFlinkProfileInternal)this).NumReplica = (int?) content.GetValueForProperty("NumReplica",((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IFlinkProfileInternal)this).NumReplica, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("DeploymentMode"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IFlinkProfileInternal)this).DeploymentMode = (string) content.GetValueForProperty("DeploymentMode",((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IFlinkProfileInternal)this).DeploymentMode, global::System.Convert.ToString);
            }
            if (content.Contains("JobSpecUpgradeMode"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IFlinkProfileInternal)this).JobSpecUpgradeMode = (string) content.GetValueForProperty("JobSpecUpgradeMode",((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IFlinkProfileInternal)this).JobSpecUpgradeMode, global::System.Convert.ToString);
            }
            if (content.Contains("StorageUri"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IFlinkProfileInternal)this).StorageUri = (string) content.GetValueForProperty("StorageUri",((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IFlinkProfileInternal)this).StorageUri, global::System.Convert.ToString);
            }
            if (content.Contains("StorageStoragekey"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IFlinkProfileInternal)this).StorageStoragekey = (string) content.GetValueForProperty("StorageStoragekey",((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IFlinkProfileInternal)this).StorageStoragekey, global::System.Convert.ToString);
            }
            if (content.Contains("JobManagerCpu"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IFlinkProfileInternal)this).JobManagerCpu = (float) content.GetValueForProperty("JobManagerCpu",((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IFlinkProfileInternal)this).JobManagerCpu, (__y)=> (float) global::System.Convert.ChangeType(__y, typeof(float)));
            }
            if (content.Contains("JobManagerMemory"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IFlinkProfileInternal)this).JobManagerMemory = (long) content.GetValueForProperty("JobManagerMemory",((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IFlinkProfileInternal)this).JobManagerMemory, (__y)=> (long) global::System.Convert.ChangeType(__y, typeof(long)));
            }
            if (content.Contains("HistoryServerCpu"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IFlinkProfileInternal)this).HistoryServerCpu = (float) content.GetValueForProperty("HistoryServerCpu",((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IFlinkProfileInternal)this).HistoryServerCpu, (__y)=> (float) global::System.Convert.ChangeType(__y, typeof(float)));
            }
            if (content.Contains("HistoryServerMemory"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IFlinkProfileInternal)this).HistoryServerMemory = (long) content.GetValueForProperty("HistoryServerMemory",((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IFlinkProfileInternal)this).HistoryServerMemory, (__y)=> (long) global::System.Convert.ChangeType(__y, typeof(long)));
            }
            if (content.Contains("TaskManagerCpu"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IFlinkProfileInternal)this).TaskManagerCpu = (float) content.GetValueForProperty("TaskManagerCpu",((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IFlinkProfileInternal)this).TaskManagerCpu, (__y)=> (float) global::System.Convert.ChangeType(__y, typeof(float)));
            }
            if (content.Contains("TaskManagerMemory"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IFlinkProfileInternal)this).TaskManagerMemory = (long) content.GetValueForProperty("TaskManagerMemory",((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IFlinkProfileInternal)this).TaskManagerMemory, (__y)=> (long) global::System.Convert.ChangeType(__y, typeof(long)));
            }
            if (content.Contains("CatalogOptionHive"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IFlinkProfileInternal)this).CatalogOptionHive = (Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IFlinkHiveCatalogOption) content.GetValueForProperty("CatalogOptionHive",((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IFlinkProfileInternal)this).CatalogOptionHive, Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.FlinkHiveCatalogOptionTypeConverter.ConvertFrom);
            }
            if (content.Contains("JobSpecJobJarDirectory"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IFlinkProfileInternal)this).JobSpecJobJarDirectory = (string) content.GetValueForProperty("JobSpecJobJarDirectory",((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IFlinkProfileInternal)this).JobSpecJobJarDirectory, global::System.Convert.ToString);
            }
            if (content.Contains("JobSpecJarName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IFlinkProfileInternal)this).JobSpecJarName = (string) content.GetValueForProperty("JobSpecJarName",((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IFlinkProfileInternal)this).JobSpecJarName, global::System.Convert.ToString);
            }
            if (content.Contains("JobSpecEntryClass"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IFlinkProfileInternal)this).JobSpecEntryClass = (string) content.GetValueForProperty("JobSpecEntryClass",((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IFlinkProfileInternal)this).JobSpecEntryClass, global::System.Convert.ToString);
            }
            if (content.Contains("JobSpecArg"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IFlinkProfileInternal)this).JobSpecArg = (string) content.GetValueForProperty("JobSpecArg",((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IFlinkProfileInternal)this).JobSpecArg, global::System.Convert.ToString);
            }
            if (content.Contains("JobSpecSavePointName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IFlinkProfileInternal)this).JobSpecSavePointName = (string) content.GetValueForProperty("JobSpecSavePointName",((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IFlinkProfileInternal)this).JobSpecSavePointName, global::System.Convert.ToString);
            }
            if (content.Contains("HiveMetastoreDbConnectionAuthenticationMode"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IFlinkProfileInternal)this).HiveMetastoreDbConnectionAuthenticationMode = (string) content.GetValueForProperty("HiveMetastoreDbConnectionAuthenticationMode",((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IFlinkProfileInternal)this).HiveMetastoreDbConnectionAuthenticationMode, global::System.Convert.ToString);
            }
            if (content.Contains("HiveMetastoreDbConnectionPasswordSecret"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IFlinkProfileInternal)this).HiveMetastoreDbConnectionPasswordSecret = (string) content.GetValueForProperty("HiveMetastoreDbConnectionPasswordSecret",((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IFlinkProfileInternal)this).HiveMetastoreDbConnectionPasswordSecret, global::System.Convert.ToString);
            }
            if (content.Contains("HiveMetastoreDbConnectionUrl"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IFlinkProfileInternal)this).HiveMetastoreDbConnectionUrl = (string) content.GetValueForProperty("HiveMetastoreDbConnectionUrl",((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IFlinkProfileInternal)this).HiveMetastoreDbConnectionUrl, global::System.Convert.ToString);
            }
            if (content.Contains("HiveMetastoreDbConnectionUserName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IFlinkProfileInternal)this).HiveMetastoreDbConnectionUserName = (string) content.GetValueForProperty("HiveMetastoreDbConnectionUserName",((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IFlinkProfileInternal)this).HiveMetastoreDbConnectionUserName, global::System.Convert.ToString);
            }
            AfterDeserializeDictionary(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Management.Automation.PSObject" /> into a new instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.FlinkProfile"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        internal FlinkProfile(global::System.Management.Automation.PSObject content)
        {
            bool returnNow = false;
            BeforeDeserializePSObject(content, ref returnNow);
            if (returnNow)
            {
                return;
            }
            // actually deserialize
            if (content.Contains("Storage"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IFlinkProfileInternal)this).Storage = (Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IFlinkStorageProfile) content.GetValueForProperty("Storage",((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IFlinkProfileInternal)this).Storage, Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.FlinkStorageProfileTypeConverter.ConvertFrom);
            }
            if (content.Contains("JobManager"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IFlinkProfileInternal)this).JobManager = (Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IComputeResourceDefinition) content.GetValueForProperty("JobManager",((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IFlinkProfileInternal)this).JobManager, Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.ComputeResourceDefinitionTypeConverter.ConvertFrom);
            }
            if (content.Contains("HistoryServer"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IFlinkProfileInternal)this).HistoryServer = (Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IComputeResourceDefinition) content.GetValueForProperty("HistoryServer",((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IFlinkProfileInternal)this).HistoryServer, Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.ComputeResourceDefinitionTypeConverter.ConvertFrom);
            }
            if (content.Contains("TaskManager"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IFlinkProfileInternal)this).TaskManager = (Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IComputeResourceDefinition) content.GetValueForProperty("TaskManager",((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IFlinkProfileInternal)this).TaskManager, Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.ComputeResourceDefinitionTypeConverter.ConvertFrom);
            }
            if (content.Contains("CatalogOption"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IFlinkProfileInternal)this).CatalogOption = (Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IFlinkCatalogOptions) content.GetValueForProperty("CatalogOption",((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IFlinkProfileInternal)this).CatalogOption, Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.FlinkCatalogOptionsTypeConverter.ConvertFrom);
            }
            if (content.Contains("JobSpec"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IFlinkProfileInternal)this).JobSpec = (Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IFlinkJobProfile) content.GetValueForProperty("JobSpec",((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IFlinkProfileInternal)this).JobSpec, Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.FlinkJobProfileTypeConverter.ConvertFrom);
            }
            if (content.Contains("NumReplica"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IFlinkProfileInternal)this).NumReplica = (int?) content.GetValueForProperty("NumReplica",((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IFlinkProfileInternal)this).NumReplica, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("DeploymentMode"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IFlinkProfileInternal)this).DeploymentMode = (string) content.GetValueForProperty("DeploymentMode",((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IFlinkProfileInternal)this).DeploymentMode, global::System.Convert.ToString);
            }
            if (content.Contains("JobSpecUpgradeMode"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IFlinkProfileInternal)this).JobSpecUpgradeMode = (string) content.GetValueForProperty("JobSpecUpgradeMode",((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IFlinkProfileInternal)this).JobSpecUpgradeMode, global::System.Convert.ToString);
            }
            if (content.Contains("StorageUri"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IFlinkProfileInternal)this).StorageUri = (string) content.GetValueForProperty("StorageUri",((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IFlinkProfileInternal)this).StorageUri, global::System.Convert.ToString);
            }
            if (content.Contains("StorageStoragekey"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IFlinkProfileInternal)this).StorageStoragekey = (string) content.GetValueForProperty("StorageStoragekey",((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IFlinkProfileInternal)this).StorageStoragekey, global::System.Convert.ToString);
            }
            if (content.Contains("JobManagerCpu"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IFlinkProfileInternal)this).JobManagerCpu = (float) content.GetValueForProperty("JobManagerCpu",((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IFlinkProfileInternal)this).JobManagerCpu, (__y)=> (float) global::System.Convert.ChangeType(__y, typeof(float)));
            }
            if (content.Contains("JobManagerMemory"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IFlinkProfileInternal)this).JobManagerMemory = (long) content.GetValueForProperty("JobManagerMemory",((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IFlinkProfileInternal)this).JobManagerMemory, (__y)=> (long) global::System.Convert.ChangeType(__y, typeof(long)));
            }
            if (content.Contains("HistoryServerCpu"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IFlinkProfileInternal)this).HistoryServerCpu = (float) content.GetValueForProperty("HistoryServerCpu",((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IFlinkProfileInternal)this).HistoryServerCpu, (__y)=> (float) global::System.Convert.ChangeType(__y, typeof(float)));
            }
            if (content.Contains("HistoryServerMemory"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IFlinkProfileInternal)this).HistoryServerMemory = (long) content.GetValueForProperty("HistoryServerMemory",((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IFlinkProfileInternal)this).HistoryServerMemory, (__y)=> (long) global::System.Convert.ChangeType(__y, typeof(long)));
            }
            if (content.Contains("TaskManagerCpu"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IFlinkProfileInternal)this).TaskManagerCpu = (float) content.GetValueForProperty("TaskManagerCpu",((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IFlinkProfileInternal)this).TaskManagerCpu, (__y)=> (float) global::System.Convert.ChangeType(__y, typeof(float)));
            }
            if (content.Contains("TaskManagerMemory"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IFlinkProfileInternal)this).TaskManagerMemory = (long) content.GetValueForProperty("TaskManagerMemory",((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IFlinkProfileInternal)this).TaskManagerMemory, (__y)=> (long) global::System.Convert.ChangeType(__y, typeof(long)));
            }
            if (content.Contains("CatalogOptionHive"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IFlinkProfileInternal)this).CatalogOptionHive = (Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IFlinkHiveCatalogOption) content.GetValueForProperty("CatalogOptionHive",((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IFlinkProfileInternal)this).CatalogOptionHive, Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.FlinkHiveCatalogOptionTypeConverter.ConvertFrom);
            }
            if (content.Contains("JobSpecJobJarDirectory"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IFlinkProfileInternal)this).JobSpecJobJarDirectory = (string) content.GetValueForProperty("JobSpecJobJarDirectory",((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IFlinkProfileInternal)this).JobSpecJobJarDirectory, global::System.Convert.ToString);
            }
            if (content.Contains("JobSpecJarName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IFlinkProfileInternal)this).JobSpecJarName = (string) content.GetValueForProperty("JobSpecJarName",((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IFlinkProfileInternal)this).JobSpecJarName, global::System.Convert.ToString);
            }
            if (content.Contains("JobSpecEntryClass"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IFlinkProfileInternal)this).JobSpecEntryClass = (string) content.GetValueForProperty("JobSpecEntryClass",((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IFlinkProfileInternal)this).JobSpecEntryClass, global::System.Convert.ToString);
            }
            if (content.Contains("JobSpecArg"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IFlinkProfileInternal)this).JobSpecArg = (string) content.GetValueForProperty("JobSpecArg",((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IFlinkProfileInternal)this).JobSpecArg, global::System.Convert.ToString);
            }
            if (content.Contains("JobSpecSavePointName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IFlinkProfileInternal)this).JobSpecSavePointName = (string) content.GetValueForProperty("JobSpecSavePointName",((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IFlinkProfileInternal)this).JobSpecSavePointName, global::System.Convert.ToString);
            }
            if (content.Contains("HiveMetastoreDbConnectionAuthenticationMode"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IFlinkProfileInternal)this).HiveMetastoreDbConnectionAuthenticationMode = (string) content.GetValueForProperty("HiveMetastoreDbConnectionAuthenticationMode",((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IFlinkProfileInternal)this).HiveMetastoreDbConnectionAuthenticationMode, global::System.Convert.ToString);
            }
            if (content.Contains("HiveMetastoreDbConnectionPasswordSecret"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IFlinkProfileInternal)this).HiveMetastoreDbConnectionPasswordSecret = (string) content.GetValueForProperty("HiveMetastoreDbConnectionPasswordSecret",((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IFlinkProfileInternal)this).HiveMetastoreDbConnectionPasswordSecret, global::System.Convert.ToString);
            }
            if (content.Contains("HiveMetastoreDbConnectionUrl"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IFlinkProfileInternal)this).HiveMetastoreDbConnectionUrl = (string) content.GetValueForProperty("HiveMetastoreDbConnectionUrl",((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IFlinkProfileInternal)this).HiveMetastoreDbConnectionUrl, global::System.Convert.ToString);
            }
            if (content.Contains("HiveMetastoreDbConnectionUserName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IFlinkProfileInternal)this).HiveMetastoreDbConnectionUserName = (string) content.GetValueForProperty("HiveMetastoreDbConnectionUserName",((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IFlinkProfileInternal)this).HiveMetastoreDbConnectionUserName, global::System.Convert.ToString);
            }
            AfterDeserializePSObject(content);
        }

        /// <summary>
        /// Creates a new instance of <see cref="FlinkProfile" />, deserializing the content from a json string.
        /// </summary>
        /// <param name="jsonText">a string containing a JSON serialized instance of this model.</param>
        /// <returns>an instance of the <see cref="FlinkProfile" /> model class.</returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IFlinkProfile FromJsonString(string jsonText) => FromJson(Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Runtime.Json.JsonNode.Parse(jsonText));

        /// <summary>Serializes this instance to a json string.</summary>

        /// <returns>a <see cref="System.String" /> containing this model serialized to JSON text.</returns>
        public string ToJsonString() => ToJson(null, Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Runtime.SerializationMode.IncludeAll)?.ToString();

        public override string ToString()
        {
            var returnNow = false;
            var result = global::System.String.Empty;
            OverrideToString(ref result, ref returnNow);
            if (returnNow)
            {
                return result;
            }
            return ToJsonString();
        }
    }
    /// The Flink cluster profile.
    [System.ComponentModel.TypeConverter(typeof(FlinkProfileTypeConverter))]
    public partial interface IFlinkProfile

    {

    }
}