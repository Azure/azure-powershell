// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models
{
    using static Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Runtime.Extensions;

    /// <summary>The Flink cluster profile.</summary>
    public partial class FlinkProfile :
        Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IFlinkProfile,
        Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IFlinkProfileInternal
    {

        /// <summary>Backing field for <see cref="CatalogOption" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IFlinkCatalogOptions _catalogOption;

        /// <summary>Flink cluster catalog options.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Origin(Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IFlinkCatalogOptions CatalogOption { get => (this._catalogOption = this._catalogOption ?? new Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.FlinkCatalogOptions()); set => this._catalogOption = value; }

        /// <summary>Backing field for <see cref="HistoryServer" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IComputeResourceDefinition _historyServer;

        /// <summary>History Server container/ process CPU and memory requirements</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Origin(Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IComputeResourceDefinition HistoryServer { get => (this._historyServer = this._historyServer ?? new Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.ComputeResourceDefinition()); set => this._historyServer = value; }

        /// <summary>The required CPU.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Origin(Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.PropertyOrigin.Inlined)]
        public float? HistoryServerCpu { get => ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IComputeResourceDefinitionInternal)HistoryServer).Cpu; set => ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IComputeResourceDefinitionInternal)HistoryServer).Cpu = value ?? default(float); }

        /// <summary>The required memory in MB, Container memory will be 110 percentile</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Origin(Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.PropertyOrigin.Inlined)]
        public long? HistoryServerMemory { get => ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IComputeResourceDefinitionInternal)HistoryServer).Memory; set => ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IComputeResourceDefinitionInternal)HistoryServer).Memory = value ?? default(long); }

        /// <summary>
        /// Secret reference name from secretsProfile.secrets containing password for database connection.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Origin(Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.PropertyOrigin.Inlined)]
        public string HiveMetastoreDbConnectionPasswordSecret { get => ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IFlinkCatalogOptionsInternal)CatalogOption).HiveMetastoreDbConnectionPasswordSecret; set => ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IFlinkCatalogOptionsInternal)CatalogOption).HiveMetastoreDbConnectionPasswordSecret = value ?? null; }

        /// <summary>Connection string for hive metastore database.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Origin(Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.PropertyOrigin.Inlined)]
        public string HiveMetastoreDbConnectionUrl { get => ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IFlinkCatalogOptionsInternal)CatalogOption).HiveMetastoreDbConnectionUrl; set => ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IFlinkCatalogOptionsInternal)CatalogOption).HiveMetastoreDbConnectionUrl = value ?? null; }

        /// <summary>User name for database connection.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Origin(Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.PropertyOrigin.Inlined)]
        public string HiveMetastoreDbConnectionUserName { get => ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IFlinkCatalogOptionsInternal)CatalogOption).HiveMetastoreDbConnectionUserName; set => ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IFlinkCatalogOptionsInternal)CatalogOption).HiveMetastoreDbConnectionUserName = value ?? null; }

        /// <summary>Backing field for <see cref="JobManager" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IComputeResourceDefinition _jobManager;

        /// <summary>Job Manager container/ process CPU and memory requirements</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Origin(Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IComputeResourceDefinition JobManager { get => (this._jobManager = this._jobManager ?? new Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.ComputeResourceDefinition()); set => this._jobManager = value; }

        /// <summary>The required CPU.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Origin(Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.PropertyOrigin.Inlined)]
        public float JobManagerCpu { get => ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IComputeResourceDefinitionInternal)JobManager).Cpu; set => ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IComputeResourceDefinitionInternal)JobManager).Cpu = value ; }

        /// <summary>The required memory in MB, Container memory will be 110 percentile</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Origin(Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.PropertyOrigin.Inlined)]
        public long JobManagerMemory { get => ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IComputeResourceDefinitionInternal)JobManager).Memory; set => ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IComputeResourceDefinitionInternal)JobManager).Memory = value ; }

        /// <summary>Internal Acessors for CatalogOption</summary>
        Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IFlinkCatalogOptions Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IFlinkProfileInternal.CatalogOption { get => (this._catalogOption = this._catalogOption ?? new Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.FlinkCatalogOptions()); set { {_catalogOption = value;} } }

        /// <summary>Internal Acessors for CatalogOptionHive</summary>
        Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IFlinkHiveCatalogOption Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IFlinkProfileInternal.CatalogOptionHive { get => ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IFlinkCatalogOptionsInternal)CatalogOption).Hive; set => ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IFlinkCatalogOptionsInternal)CatalogOption).Hive = value; }

        /// <summary>Internal Acessors for HistoryServer</summary>
        Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IComputeResourceDefinition Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IFlinkProfileInternal.HistoryServer { get => (this._historyServer = this._historyServer ?? new Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.ComputeResourceDefinition()); set { {_historyServer = value;} } }

        /// <summary>Internal Acessors for JobManager</summary>
        Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IComputeResourceDefinition Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IFlinkProfileInternal.JobManager { get => (this._jobManager = this._jobManager ?? new Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.ComputeResourceDefinition()); set { {_jobManager = value;} } }

        /// <summary>Internal Acessors for Storage</summary>
        Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IFlinkStorageProfile Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IFlinkProfileInternal.Storage { get => (this._storage = this._storage ?? new Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.FlinkStorageProfile()); set { {_storage = value;} } }

        /// <summary>Internal Acessors for TaskManager</summary>
        Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IComputeResourceDefinition Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IFlinkProfileInternal.TaskManager { get => (this._taskManager = this._taskManager ?? new Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.ComputeResourceDefinition()); set { {_taskManager = value;} } }

        /// <summary>Backing field for <see cref="NumReplica" /> property.</summary>
        private int? _numReplica;

        /// <summary>The number of task managers.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Origin(Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.PropertyOrigin.Owned)]
        public int? NumReplica { get => this._numReplica; set => this._numReplica = value; }

        /// <summary>Backing field for <see cref="Storage" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IFlinkStorageProfile _storage;

        /// <summary>The storage profile</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Origin(Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IFlinkStorageProfile Storage { get => (this._storage = this._storage ?? new Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.FlinkStorageProfile()); set => this._storage = value; }

        /// <summary>Storage key is only required for wasb(s) storage.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Origin(Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.PropertyOrigin.Inlined)]
        public string StorageStoragekey { get => ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IFlinkStorageProfileInternal)Storage).Storagekey; set => ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IFlinkStorageProfileInternal)Storage).Storagekey = value ?? null; }

        /// <summary>Storage account uri which is used for savepoint and checkpoint state.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Origin(Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.PropertyOrigin.Inlined)]
        public string StorageUri { get => ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IFlinkStorageProfileInternal)Storage).StorageUri; set => ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IFlinkStorageProfileInternal)Storage).StorageUri = value ; }

        /// <summary>Backing field for <see cref="TaskManager" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IComputeResourceDefinition _taskManager;

        /// <summary>Task Manager container/ process CPU and memory requirements</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Origin(Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IComputeResourceDefinition TaskManager { get => (this._taskManager = this._taskManager ?? new Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.ComputeResourceDefinition()); set => this._taskManager = value; }

        /// <summary>The required CPU.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Origin(Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.PropertyOrigin.Inlined)]
        public float TaskManagerCpu { get => ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IComputeResourceDefinitionInternal)TaskManager).Cpu; set => ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IComputeResourceDefinitionInternal)TaskManager).Cpu = value ; }

        /// <summary>The required memory in MB, Container memory will be 110 percentile</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Origin(Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.PropertyOrigin.Inlined)]
        public long TaskManagerMemory { get => ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IComputeResourceDefinitionInternal)TaskManager).Memory; set => ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IComputeResourceDefinitionInternal)TaskManager).Memory = value ; }

        /// <summary>Creates an new <see cref="FlinkProfile" /> instance.</summary>
        public FlinkProfile()
        {

        }
    }
    /// The Flink cluster profile.
    public partial interface IFlinkProfile :
        Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Runtime.IJsonSerializable
    {
        /// <summary>The required CPU.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The required CPU.",
        SerializedName = @"cpu",
        PossibleTypes = new [] { typeof(float) })]
        float? HistoryServerCpu { get; set; }
        /// <summary>The required memory in MB, Container memory will be 110 percentile</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The required memory in MB, Container memory will be 110 percentile",
        SerializedName = @"memory",
        PossibleTypes = new [] { typeof(long) })]
        long? HistoryServerMemory { get; set; }
        /// <summary>
        /// Secret reference name from secretsProfile.secrets containing password for database connection.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Secret reference name from secretsProfile.secrets containing password for database connection.",
        SerializedName = @"metastoreDbConnectionPasswordSecret",
        PossibleTypes = new [] { typeof(string) })]
        string HiveMetastoreDbConnectionPasswordSecret { get; set; }
        /// <summary>Connection string for hive metastore database.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Connection string for hive metastore database.",
        SerializedName = @"metastoreDbConnectionURL",
        PossibleTypes = new [] { typeof(string) })]
        string HiveMetastoreDbConnectionUrl { get; set; }
        /// <summary>User name for database connection.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"User name for database connection.",
        SerializedName = @"metastoreDbConnectionUserName",
        PossibleTypes = new [] { typeof(string) })]
        string HiveMetastoreDbConnectionUserName { get; set; }
        /// <summary>The required CPU.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The required CPU.",
        SerializedName = @"cpu",
        PossibleTypes = new [] { typeof(float) })]
        float JobManagerCpu { get; set; }
        /// <summary>The required memory in MB, Container memory will be 110 percentile</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The required memory in MB, Container memory will be 110 percentile",
        SerializedName = @"memory",
        PossibleTypes = new [] { typeof(long) })]
        long JobManagerMemory { get; set; }
        /// <summary>The number of task managers.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The number of task managers.",
        SerializedName = @"numReplicas",
        PossibleTypes = new [] { typeof(int) })]
        int? NumReplica { get; set; }
        /// <summary>Storage key is only required for wasb(s) storage.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Storage key is only required for wasb(s) storage.",
        SerializedName = @"storagekey",
        PossibleTypes = new [] { typeof(string) })]
        string StorageStoragekey { get; set; }
        /// <summary>Storage account uri which is used for savepoint and checkpoint state.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Storage account uri which is used for savepoint and checkpoint state.",
        SerializedName = @"storageUri",
        PossibleTypes = new [] { typeof(string) })]
        string StorageUri { get; set; }
        /// <summary>The required CPU.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The required CPU.",
        SerializedName = @"cpu",
        PossibleTypes = new [] { typeof(float) })]
        float TaskManagerCpu { get; set; }
        /// <summary>The required memory in MB, Container memory will be 110 percentile</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The required memory in MB, Container memory will be 110 percentile",
        SerializedName = @"memory",
        PossibleTypes = new [] { typeof(long) })]
        long TaskManagerMemory { get; set; }

    }
    /// The Flink cluster profile.
    internal partial interface IFlinkProfileInternal

    {
        /// <summary>Flink cluster catalog options.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IFlinkCatalogOptions CatalogOption { get; set; }
        /// <summary>Hive Catalog Option for Flink cluster.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IFlinkHiveCatalogOption CatalogOptionHive { get; set; }
        /// <summary>History Server container/ process CPU and memory requirements</summary>
        Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IComputeResourceDefinition HistoryServer { get; set; }
        /// <summary>The required CPU.</summary>
        float? HistoryServerCpu { get; set; }
        /// <summary>The required memory in MB, Container memory will be 110 percentile</summary>
        long? HistoryServerMemory { get; set; }
        /// <summary>
        /// Secret reference name from secretsProfile.secrets containing password for database connection.
        /// </summary>
        string HiveMetastoreDbConnectionPasswordSecret { get; set; }
        /// <summary>Connection string for hive metastore database.</summary>
        string HiveMetastoreDbConnectionUrl { get; set; }
        /// <summary>User name for database connection.</summary>
        string HiveMetastoreDbConnectionUserName { get; set; }
        /// <summary>Job Manager container/ process CPU and memory requirements</summary>
        Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IComputeResourceDefinition JobManager { get; set; }
        /// <summary>The required CPU.</summary>
        float JobManagerCpu { get; set; }
        /// <summary>The required memory in MB, Container memory will be 110 percentile</summary>
        long JobManagerMemory { get; set; }
        /// <summary>The number of task managers.</summary>
        int? NumReplica { get; set; }
        /// <summary>The storage profile</summary>
        Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IFlinkStorageProfile Storage { get; set; }
        /// <summary>Storage key is only required for wasb(s) storage.</summary>
        string StorageStoragekey { get; set; }
        /// <summary>Storage account uri which is used for savepoint and checkpoint state.</summary>
        string StorageUri { get; set; }
        /// <summary>Task Manager container/ process CPU and memory requirements</summary>
        Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IComputeResourceDefinition TaskManager { get; set; }
        /// <summary>The required CPU.</summary>
        float TaskManagerCpu { get; set; }
        /// <summary>The required memory in MB, Container memory will be 110 percentile</summary>
        long TaskManagerMemory { get; set; }

    }
}