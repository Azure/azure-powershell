// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models
{
    using static Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Runtime.Extensions;

    /// <summary>Flink cluster catalog options.</summary>
    public partial class FlinkCatalogOptions :
        Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IFlinkCatalogOptions,
        Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IFlinkCatalogOptionsInternal
    {

        /// <summary>Backing field for <see cref="Hive" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IFlinkHiveCatalogOption _hive;

        /// <summary>Hive Catalog Option for Flink cluster.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Origin(Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IFlinkHiveCatalogOption Hive { get => (this._hive = this._hive ?? new Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.FlinkHiveCatalogOption()); set => this._hive = value; }

        /// <summary>
        /// Secret reference name from secretsProfile.secrets containing password for database connection.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Origin(Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.PropertyOrigin.Inlined)]
        public string HiveMetastoreDbConnectionPasswordSecret { get => ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IFlinkHiveCatalogOptionInternal)Hive).MetastoreDbConnectionPasswordSecret; set => ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IFlinkHiveCatalogOptionInternal)Hive).MetastoreDbConnectionPasswordSecret = value ?? null; }

        /// <summary>Connection string for hive metastore database.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Origin(Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.PropertyOrigin.Inlined)]
        public string HiveMetastoreDbConnectionUrl { get => ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IFlinkHiveCatalogOptionInternal)Hive).MetastoreDbConnectionUrl; set => ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IFlinkHiveCatalogOptionInternal)Hive).MetastoreDbConnectionUrl = value ?? null; }

        /// <summary>User name for database connection.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Origin(Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.PropertyOrigin.Inlined)]
        public string HiveMetastoreDbConnectionUserName { get => ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IFlinkHiveCatalogOptionInternal)Hive).MetastoreDbConnectionUserName; set => ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IFlinkHiveCatalogOptionInternal)Hive).MetastoreDbConnectionUserName = value ?? null; }

        /// <summary>Internal Acessors for Hive</summary>
        Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IFlinkHiveCatalogOption Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IFlinkCatalogOptionsInternal.Hive { get => (this._hive = this._hive ?? new Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.FlinkHiveCatalogOption()); set { {_hive = value;} } }

        /// <summary>Creates an new <see cref="FlinkCatalogOptions" /> instance.</summary>
        public FlinkCatalogOptions()
        {

        }
    }
    /// Flink cluster catalog options.
    public partial interface IFlinkCatalogOptions :
        Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Runtime.IJsonSerializable
    {
        /// <summary>
        /// Secret reference name from secretsProfile.secrets containing password for database connection.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Secret reference name from secretsProfile.secrets containing password for database connection.",
        SerializedName = @"metastoreDbConnectionPasswordSecret",
        PossibleTypes = new [] { typeof(string) })]
        string HiveMetastoreDbConnectionPasswordSecret { get; set; }
        /// <summary>Connection string for hive metastore database.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Connection string for hive metastore database.",
        SerializedName = @"metastoreDbConnectionURL",
        PossibleTypes = new [] { typeof(string) })]
        string HiveMetastoreDbConnectionUrl { get; set; }
        /// <summary>User name for database connection.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"User name for database connection.",
        SerializedName = @"metastoreDbConnectionUserName",
        PossibleTypes = new [] { typeof(string) })]
        string HiveMetastoreDbConnectionUserName { get; set; }

    }
    /// Flink cluster catalog options.
    internal partial interface IFlinkCatalogOptionsInternal

    {
        /// <summary>Hive Catalog Option for Flink cluster.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IFlinkHiveCatalogOption Hive { get; set; }
        /// <summary>
        /// Secret reference name from secretsProfile.secrets containing password for database connection.
        /// </summary>
        string HiveMetastoreDbConnectionPasswordSecret { get; set; }
        /// <summary>Connection string for hive metastore database.</summary>
        string HiveMetastoreDbConnectionUrl { get; set; }
        /// <summary>User name for database connection.</summary>
        string HiveMetastoreDbConnectionUserName { get; set; }

    }
}