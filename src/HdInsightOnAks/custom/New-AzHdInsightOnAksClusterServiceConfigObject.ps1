# ----------------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# ----------------------------------------------------------------------------------

<#
.Synopsis
Create a component config.
.Description
Create a component config.
.Example
$coreSiteConfigFile=New-AzHDInsightAksClusterConfigFile -FileName "core-site.xml" -Value @{"fs.defaultFS"="abfs://testcontainer@$teststorage.dfs.core.windows.net"}
$yarnComponentConfig= New-AzHdInsightOnAksClusterServiceConfigObject -ComponentName "yarn-config" -File $coreSiteConfigFile

.Inputs
Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterConfigFile[]
.Outputs
Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterServiceConfig
.Notes

.Link
https://learn.microsoft.com/powershell/module/az.hdinsightonaks/New-AzHdInsightOnAksClusterServiceConfigObject
#>
function New-AzHdInsightOnAksClusterServiceConfigObject {
    [OutputType([Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterServiceConfig])]
    [CmdletBinding(DefaultParameterSetName = 'Create', PositionalBinding = $false, SupportsShouldProcess)]
    param(
        [Parameter(ParameterSetName = 'Create', Mandatory)]
        [Alias('Name')]
        [System.String]
        # Name of the component the config files should apply to.
        ${ComponentName},

        [Parameter(ParameterSetName = 'Create', Mandatory)]
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterConfigFile[]]
        # List of Config Files.
        ${File}
    )

    begin {
        try {

        }
        catch {
            throw
        }
    }

    process {
        try {
            $clusterServiceConfig = New-Object Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.ClusterServiceConfig -Property @{Component = $ComponentName; File = $File }
            return $clusterServiceConfig
        }
        catch {
       
            throw
        }

        finally {
      
        }

    }
    end {
        try {
      
        }
        catch {
            throw
        }
    } 

}