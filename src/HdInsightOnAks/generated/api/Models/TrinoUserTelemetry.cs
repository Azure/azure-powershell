// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models
{
    using static Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Runtime.Extensions;

    /// <summary>User telemetry</summary>
    public partial class TrinoUserTelemetry :
        Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.ITrinoUserTelemetry,
        Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.ITrinoUserTelemetryInternal
    {

        /// <summary>Internal Acessors for Storage</summary>
        Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.ITrinoTelemetryConfig Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.ITrinoUserTelemetryInternal.Storage { get => (this._storage = this._storage ?? new Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.TrinoTelemetryConfig()); set { {_storage = value;} } }

        /// <summary>Backing field for <see cref="Storage" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.ITrinoTelemetryConfig _storage;

        /// <summary>Trino user telemetry definition.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Origin(Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.ITrinoTelemetryConfig Storage { get => (this._storage = this._storage ?? new Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.TrinoTelemetryConfig()); set => this._storage = value; }

        /// <summary>
        /// Hive Catalog name used to mount external tables on the logs written by trino, if not specified there tables are not created.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Origin(Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.PropertyOrigin.Inlined)]
        public string StorageHivecatalogName { get => ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.ITrinoTelemetryConfigInternal)Storage).HivecatalogName; set => ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.ITrinoTelemetryConfigInternal)Storage).HivecatalogName = value ?? null; }

        /// <summary>
        /// Schema of the above catalog to use, to mount query logs as external tables, if not specified tables will be mounted under
        /// schema trinologs.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Origin(Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.PropertyOrigin.Inlined)]
        public string StorageHivecatalogSchema { get => ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.ITrinoTelemetryConfigInternal)Storage).HivecatalogSchema; set => ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.ITrinoTelemetryConfigInternal)Storage).HivecatalogSchema = value ?? null; }

        /// <summary>
        /// Retention period for query log table partitions, this doesn't have any affect on actual data.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Origin(Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.PropertyOrigin.Inlined)]
        public int? StoragePartitionRetentionInDay { get => ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.ITrinoTelemetryConfigInternal)Storage).PartitionRetentionInDay; set => ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.ITrinoTelemetryConfigInternal)Storage).PartitionRetentionInDay = value ?? default(int); }

        /// <summary>Azure storage location of the blobs.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Origin(Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.PropertyOrigin.Inlined)]
        public string StoragePath { get => ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.ITrinoTelemetryConfigInternal)Storage).Path; set => ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.ITrinoTelemetryConfigInternal)Storage).Path = value ?? null; }

        /// <summary>Creates an new <see cref="TrinoUserTelemetry" /> instance.</summary>
        public TrinoUserTelemetry()
        {

        }
    }
    /// User telemetry
    public partial interface ITrinoUserTelemetry :
        Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Runtime.IJsonSerializable
    {
        /// <summary>
        /// Hive Catalog name used to mount external tables on the logs written by trino, if not specified there tables are not created.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Hive Catalog name used to mount external tables on the logs written by trino, if not specified there tables are not created.",
        SerializedName = @"hivecatalogName",
        PossibleTypes = new [] { typeof(string) })]
        string StorageHivecatalogName { get; set; }
        /// <summary>
        /// Schema of the above catalog to use, to mount query logs as external tables, if not specified tables will be mounted under
        /// schema trinologs.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Schema of the above catalog to use, to mount query logs as external tables, if not specified tables will be mounted under schema trinologs.",
        SerializedName = @"hivecatalogSchema",
        PossibleTypes = new [] { typeof(string) })]
        string StorageHivecatalogSchema { get; set; }
        /// <summary>
        /// Retention period for query log table partitions, this doesn't have any affect on actual data.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Retention period for query log table partitions, this doesn't have any affect on actual data.",
        SerializedName = @"partitionRetentionInDays",
        PossibleTypes = new [] { typeof(int) })]
        int? StoragePartitionRetentionInDay { get; set; }
        /// <summary>Azure storage location of the blobs.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Azure storage location of the blobs.",
        SerializedName = @"path",
        PossibleTypes = new [] { typeof(string) })]
        string StoragePath { get; set; }

    }
    /// User telemetry
    internal partial interface ITrinoUserTelemetryInternal

    {
        /// <summary>Trino user telemetry definition.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.ITrinoTelemetryConfig Storage { get; set; }
        /// <summary>
        /// Hive Catalog name used to mount external tables on the logs written by trino, if not specified there tables are not created.
        /// </summary>
        string StorageHivecatalogName { get; set; }
        /// <summary>
        /// Schema of the above catalog to use, to mount query logs as external tables, if not specified tables will be mounted under
        /// schema trinologs.
        /// </summary>
        string StorageHivecatalogSchema { get; set; }
        /// <summary>
        /// Retention period for query log table partitions, this doesn't have any affect on actual data.
        /// </summary>
        int? StoragePartitionRetentionInDay { get; set; }
        /// <summary>Azure storage location of the blobs.</summary>
        string StoragePath { get; set; }

    }
}