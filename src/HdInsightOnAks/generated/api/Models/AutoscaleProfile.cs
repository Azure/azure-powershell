// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models
{
    using static Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Runtime.Extensions;

    /// <summary>
    /// This is the Autoscale profile for the cluster. This will allow customer to create cluster enabled with Autoscale.
    /// </summary>
    public partial class AutoscaleProfile :
        Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IAutoscaleProfile,
        Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IAutoscaleProfileInternal
    {

        /// <summary>Backing field for <see cref="AutoscaleType" /> property.</summary>
        private string _autoscaleType;

        /// <summary>
        /// User to specify which type of Autoscale to be implemented - Scheduled Based or Load Based.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Origin(Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.PropertyOrigin.Owned)]
        public string AutoscaleType { get => this._autoscaleType; set => this._autoscaleType = value; }

        /// <summary>Backing field for <see cref="Enabled" /> property.</summary>
        private bool _enabled;

        /// <summary>This indicates whether auto scale is enabled on HDInsight on AKS cluster.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Origin(Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.PropertyOrigin.Owned)]
        public bool Enabled { get => this._enabled; set => this._enabled = value; }

        /// <summary>Backing field for <see cref="GracefulDecommissionTimeout" /> property.</summary>
        private int? _gracefulDecommissionTimeout;

        /// <summary>
        /// This property is for graceful decommission timeout; It has a default setting of 3600 seconds before forced shutdown takes
        /// place. This is the maximal time to wait for running containers and applications to complete before transition a DECOMMISSIONING
        /// node into DECOMMISSIONED. The default value is 3600 seconds. Negative value (like -1) is handled as infinite timeout.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Origin(Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.PropertyOrigin.Owned)]
        public int? GracefulDecommissionTimeout { get => this._gracefulDecommissionTimeout; set => this._gracefulDecommissionTimeout = value; }

        /// <summary>Backing field for <see cref="LoadBasedConfig" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.ILoadBasedConfig _loadBasedConfig;

        /// <summary>Profiles of load based Autoscale.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Origin(Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.ILoadBasedConfig LoadBasedConfig { get => (this._loadBasedConfig = this._loadBasedConfig ?? new Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.LoadBasedConfig()); set => this._loadBasedConfig = value; }

        /// <summary>
        /// This is a cool down period, this is a time period in seconds, which determines the amount of time that must elapse between
        /// a scaling activity started by a rule and the start of the next scaling activity, regardless of the rule that triggers
        /// it. The default value is 300 seconds.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Origin(Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.PropertyOrigin.Inlined)]
        public int? LoadBasedConfigCooldownPeriod { get => ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.ILoadBasedConfigInternal)LoadBasedConfig).CooldownPeriod; set => ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.ILoadBasedConfigInternal)LoadBasedConfig).CooldownPeriod = value ?? default(int); }

        /// <summary>
        /// User needs to set the maximum number of nodes for load based scaling, the load based scaling will use this to scale up
        /// and scale down between minimum and maximum number of nodes.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Origin(Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.PropertyOrigin.Inlined)]
        public int? LoadBasedConfigMaxNode { get => ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.ILoadBasedConfigInternal)LoadBasedConfig).MaxNode; set => ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.ILoadBasedConfigInternal)LoadBasedConfig).MaxNode = value ?? default(int); }

        /// <summary>
        /// User needs to set the minimum number of nodes for load based scaling, the load based scaling will use this to scale up
        /// and scale down between minimum and maximum number of nodes.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Origin(Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.PropertyOrigin.Inlined)]
        public int? LoadBasedConfigMinNode { get => ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.ILoadBasedConfigInternal)LoadBasedConfig).MinNode; set => ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.ILoadBasedConfigInternal)LoadBasedConfig).MinNode = value ?? default(int); }

        /// <summary>
        /// User can specify the poll interval, this is the time period (in seconds) after which scaling metrics are polled for triggering
        /// a scaling operation.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Origin(Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.PropertyOrigin.Inlined)]
        public int? LoadBasedConfigPollInterval { get => ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.ILoadBasedConfigInternal)LoadBasedConfig).PollInterval; set => ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.ILoadBasedConfigInternal)LoadBasedConfig).PollInterval = value ?? default(int); }

        /// <summary>The scaling rules.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Origin(Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.PropertyOrigin.Inlined)]
        public System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IScalingRule> LoadBasedConfigScalingRule { get => ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.ILoadBasedConfigInternal)LoadBasedConfig).ScalingRule; set => ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.ILoadBasedConfigInternal)LoadBasedConfig).ScalingRule = value ?? null /* arrayOf */; }

        /// <summary>Internal Acessors for LoadBasedConfig</summary>
        Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.ILoadBasedConfig Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IAutoscaleProfileInternal.LoadBasedConfig { get => (this._loadBasedConfig = this._loadBasedConfig ?? new Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.LoadBasedConfig()); set { {_loadBasedConfig = value;} } }

        /// <summary>Internal Acessors for ScheduleBasedConfig</summary>
        Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IScheduleBasedConfig Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IAutoscaleProfileInternal.ScheduleBasedConfig { get => (this._scheduleBasedConfig = this._scheduleBasedConfig ?? new Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.ScheduleBasedConfig()); set { {_scheduleBasedConfig = value;} } }

        /// <summary>Backing field for <see cref="ScheduleBasedConfig" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IScheduleBasedConfig _scheduleBasedConfig;

        /// <summary>Profiles of schedule based Autoscale.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Origin(Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IScheduleBasedConfig ScheduleBasedConfig { get => (this._scheduleBasedConfig = this._scheduleBasedConfig ?? new Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.ScheduleBasedConfig()); set => this._scheduleBasedConfig = value; }

        /// <summary>
        /// Setting default node count of current schedule configuration. Default node count specifies the number of nodes which are
        /// default when an specified scaling operation is executed (scale up/scale down)
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Origin(Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.PropertyOrigin.Inlined)]
        public int? ScheduleBasedConfigDefaultCount { get => ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IScheduleBasedConfigInternal)ScheduleBasedConfig).DefaultCount; set => ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IScheduleBasedConfigInternal)ScheduleBasedConfig).DefaultCount = value ?? default(int); }

        /// <summary>
        /// This specifies the schedules where scheduled based Autoscale to be enabled, the user has a choice to set multiple rules
        /// within the schedule across days and times (start/end).
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Origin(Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.PropertyOrigin.Inlined)]
        public System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.ISchedule> ScheduleBasedConfigSchedule { get => ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IScheduleBasedConfigInternal)ScheduleBasedConfig).Schedule; set => ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IScheduleBasedConfigInternal)ScheduleBasedConfig).Schedule = value ?? null /* arrayOf */; }

        /// <summary>
        /// User has to specify the timezone on which the schedule has to be set for schedule based autoscale configuration.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Origin(Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.PropertyOrigin.Inlined)]
        public string ScheduleBasedConfigTimeZone { get => ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IScheduleBasedConfigInternal)ScheduleBasedConfig).TimeZone; set => ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IScheduleBasedConfigInternal)ScheduleBasedConfig).TimeZone = value ?? null; }

        /// <summary>Creates an new <see cref="AutoscaleProfile" /> instance.</summary>
        public AutoscaleProfile()
        {

        }
    }
    /// This is the Autoscale profile for the cluster. This will allow customer to create cluster enabled with Autoscale.
    public partial interface IAutoscaleProfile :
        Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Runtime.IJsonSerializable
    {
        /// <summary>
        /// User to specify which type of Autoscale to be implemented - Scheduled Based or Load Based.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"User to specify which type of Autoscale to be implemented - Scheduled Based or Load Based.",
        SerializedName = @"autoscaleType",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.PSArgumentCompleterAttribute("ScheduleBased", "LoadBased")]
        string AutoscaleType { get; set; }
        /// <summary>This indicates whether auto scale is enabled on HDInsight on AKS cluster.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"This indicates whether auto scale is enabled on HDInsight on AKS cluster.",
        SerializedName = @"enabled",
        PossibleTypes = new [] { typeof(bool) })]
        bool Enabled { get; set; }
        /// <summary>
        /// This property is for graceful decommission timeout; It has a default setting of 3600 seconds before forced shutdown takes
        /// place. This is the maximal time to wait for running containers and applications to complete before transition a DECOMMISSIONING
        /// node into DECOMMISSIONED. The default value is 3600 seconds. Negative value (like -1) is handled as infinite timeout.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"This property is for graceful decommission timeout; It has a default setting of 3600 seconds before forced shutdown takes place. This is the maximal time to wait for running containers and applications to complete before transition a DECOMMISSIONING node into DECOMMISSIONED. The default value is 3600 seconds. Negative value (like -1) is handled as infinite timeout.",
        SerializedName = @"gracefulDecommissionTimeout",
        PossibleTypes = new [] { typeof(int) })]
        int? GracefulDecommissionTimeout { get; set; }
        /// <summary>
        /// This is a cool down period, this is a time period in seconds, which determines the amount of time that must elapse between
        /// a scaling activity started by a rule and the start of the next scaling activity, regardless of the rule that triggers
        /// it. The default value is 300 seconds.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"This is a cool down period, this is a time period in seconds, which determines the amount of time that must elapse between a scaling activity started by a rule and the start of the next scaling activity, regardless of the rule that triggers it. The default value is 300 seconds.",
        SerializedName = @"cooldownPeriod",
        PossibleTypes = new [] { typeof(int) })]
        int? LoadBasedConfigCooldownPeriod { get; set; }
        /// <summary>
        /// User needs to set the maximum number of nodes for load based scaling, the load based scaling will use this to scale up
        /// and scale down between minimum and maximum number of nodes.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"User needs to set the maximum number of nodes for load based scaling, the load based scaling will use this to scale up and scale down between minimum and maximum number of nodes.",
        SerializedName = @"maxNodes",
        PossibleTypes = new [] { typeof(int) })]
        int? LoadBasedConfigMaxNode { get; set; }
        /// <summary>
        /// User needs to set the minimum number of nodes for load based scaling, the load based scaling will use this to scale up
        /// and scale down between minimum and maximum number of nodes.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"User needs to set the minimum number of nodes for load based scaling, the load based scaling will use this to scale up and scale down between minimum and maximum number of nodes.",
        SerializedName = @"minNodes",
        PossibleTypes = new [] { typeof(int) })]
        int? LoadBasedConfigMinNode { get; set; }
        /// <summary>
        /// User can specify the poll interval, this is the time period (in seconds) after which scaling metrics are polled for triggering
        /// a scaling operation.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"User can specify the poll interval, this is the time period (in seconds) after which scaling metrics are polled for triggering a scaling operation.",
        SerializedName = @"pollInterval",
        PossibleTypes = new [] { typeof(int) })]
        int? LoadBasedConfigPollInterval { get; set; }
        /// <summary>The scaling rules.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The scaling rules.",
        SerializedName = @"scalingRules",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IScalingRule) })]
        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IScalingRule> LoadBasedConfigScalingRule { get; set; }
        /// <summary>
        /// Setting default node count of current schedule configuration. Default node count specifies the number of nodes which are
        /// default when an specified scaling operation is executed (scale up/scale down)
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Setting default node count of current schedule configuration. Default node count specifies the number of nodes which are default when an specified scaling operation is executed (scale up/scale down)",
        SerializedName = @"defaultCount",
        PossibleTypes = new [] { typeof(int) })]
        int? ScheduleBasedConfigDefaultCount { get; set; }
        /// <summary>
        /// This specifies the schedules where scheduled based Autoscale to be enabled, the user has a choice to set multiple rules
        /// within the schedule across days and times (start/end).
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"This specifies the schedules where scheduled based Autoscale to be enabled, the user has a choice to set multiple rules within the schedule across days and times (start/end).",
        SerializedName = @"schedules",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.ISchedule) })]
        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.ISchedule> ScheduleBasedConfigSchedule { get; set; }
        /// <summary>
        /// User has to specify the timezone on which the schedule has to be set for schedule based autoscale configuration.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"User has to specify the timezone on which the schedule has to be set for schedule based autoscale configuration.",
        SerializedName = @"timeZone",
        PossibleTypes = new [] { typeof(string) })]
        string ScheduleBasedConfigTimeZone { get; set; }

    }
    /// This is the Autoscale profile for the cluster. This will allow customer to create cluster enabled with Autoscale.
    internal partial interface IAutoscaleProfileInternal

    {
        /// <summary>
        /// User to specify which type of Autoscale to be implemented - Scheduled Based or Load Based.
        /// </summary>
        [global::Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.PSArgumentCompleterAttribute("ScheduleBased", "LoadBased")]
        string AutoscaleType { get; set; }
        /// <summary>This indicates whether auto scale is enabled on HDInsight on AKS cluster.</summary>
        bool Enabled { get; set; }
        /// <summary>
        /// This property is for graceful decommission timeout; It has a default setting of 3600 seconds before forced shutdown takes
        /// place. This is the maximal time to wait for running containers and applications to complete before transition a DECOMMISSIONING
        /// node into DECOMMISSIONED. The default value is 3600 seconds. Negative value (like -1) is handled as infinite timeout.
        /// </summary>
        int? GracefulDecommissionTimeout { get; set; }
        /// <summary>Profiles of load based Autoscale.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.ILoadBasedConfig LoadBasedConfig { get; set; }
        /// <summary>
        /// This is a cool down period, this is a time period in seconds, which determines the amount of time that must elapse between
        /// a scaling activity started by a rule and the start of the next scaling activity, regardless of the rule that triggers
        /// it. The default value is 300 seconds.
        /// </summary>
        int? LoadBasedConfigCooldownPeriod { get; set; }
        /// <summary>
        /// User needs to set the maximum number of nodes for load based scaling, the load based scaling will use this to scale up
        /// and scale down between minimum and maximum number of nodes.
        /// </summary>
        int? LoadBasedConfigMaxNode { get; set; }
        /// <summary>
        /// User needs to set the minimum number of nodes for load based scaling, the load based scaling will use this to scale up
        /// and scale down between minimum and maximum number of nodes.
        /// </summary>
        int? LoadBasedConfigMinNode { get; set; }
        /// <summary>
        /// User can specify the poll interval, this is the time period (in seconds) after which scaling metrics are polled for triggering
        /// a scaling operation.
        /// </summary>
        int? LoadBasedConfigPollInterval { get; set; }
        /// <summary>The scaling rules.</summary>
        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IScalingRule> LoadBasedConfigScalingRule { get; set; }
        /// <summary>Profiles of schedule based Autoscale.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IScheduleBasedConfig ScheduleBasedConfig { get; set; }
        /// <summary>
        /// Setting default node count of current schedule configuration. Default node count specifies the number of nodes which are
        /// default when an specified scaling operation is executed (scale up/scale down)
        /// </summary>
        int? ScheduleBasedConfigDefaultCount { get; set; }
        /// <summary>
        /// This specifies the schedules where scheduled based Autoscale to be enabled, the user has a choice to set multiple rules
        /// within the schedule across days and times (start/end).
        /// </summary>
        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.ISchedule> ScheduleBasedConfigSchedule { get; set; }
        /// <summary>
        /// User has to specify the timezone on which the schedule has to be set for schedule based autoscale configuration.
        /// </summary>
        string ScheduleBasedConfigTimeZone { get; set; }

    }
}