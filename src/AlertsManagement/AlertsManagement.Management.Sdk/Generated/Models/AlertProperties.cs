// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.AlertsManagement.Models
{
    using System.Linq;

    /// <summary>
    /// Alert property bag
    /// </summary>
    public partial class AlertProperties
    {
        /// <summary>
        /// Initializes a new instance of the AlertProperties class.
        /// </summary>
        public AlertProperties()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the AlertProperties class.
        /// </summary>

        /// <param name="essentials">This object contains consistent fields across different monitor services.
        /// </param>

        /// <param name="context">Information specific to the monitor service that gives more contextual
        /// details about the alert.
        /// </param>

        /// <param name="egressConfig">Config which would be used for displaying the data in portal.
        /// </param>
        public AlertProperties(Essentials essentials = default(Essentials), object context = default(object), object egressConfig = default(object))

        {
            this.Essentials = essentials;
            this.Context = context;
            this.EgressConfig = egressConfig;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets or sets this object contains consistent fields across different
        /// monitor services.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "essentials")]
        public Essentials Essentials {get; set; }

        /// <summary>
        /// Gets information specific to the monitor service that gives more contextual
        /// details about the alert.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "context")]
        public object Context {get; private set; }

        /// <summary>
        /// Gets config which would be used for displaying the data in portal.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "egressConfig")]
        public object EgressConfig {get; private set; }
    }
}