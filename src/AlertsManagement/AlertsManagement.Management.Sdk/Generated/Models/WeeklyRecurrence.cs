// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.AlertsManagement.Models
{
    using System.Linq;

    /// <summary>
    /// Weekly recurrence object.
    /// </summary>
    [Newtonsoft.Json.JsonObject("Weekly")]
    public partial class WeeklyRecurrence : Recurrence
    {
        /// <summary>
        /// Initializes a new instance of the WeeklyRecurrence class.
        /// </summary>
        public WeeklyRecurrence()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the WeeklyRecurrence class.
        /// </summary>

        /// <param name="startTime">Start time for recurrence.
        /// </param>

        /// <param name="endTime">End time for recurrence.
        /// </param>

        /// <param name="daysOfWeek">Specifies the values for weekly recurrence pattern.
        /// </param>
        public WeeklyRecurrence(System.Collections.Generic.IList<string> daysOfWeek, string startTime = default(string), string endTime = default(string))

        : base(startTime, endTime)
        {
            this.DaysOfWeek = daysOfWeek;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets or sets specifies the values for weekly recurrence pattern.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "daysOfWeek")]
        public System.Collections.Generic.IList<string> DaysOfWeek {get; set; }
        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (this.DaysOfWeek == null)
            {
                throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.CannotBeNull, "DaysOfWeek");
            }

        }
    }
}