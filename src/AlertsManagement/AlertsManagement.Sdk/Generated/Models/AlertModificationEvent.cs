// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.AlertsManagement.Models
{

    /// <summary>
    /// Defines values for AlertModificationEvent.
    /// </summary>


    [Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
    public enum AlertModificationEvent
    {
        [System.Runtime.Serialization.EnumMember(Value = "AlertCreated")]
        AlertCreated,
        [System.Runtime.Serialization.EnumMember(Value = "StateChange")]
        StateChange,
        [System.Runtime.Serialization.EnumMember(Value = "MonitorConditionChange")]
        MonitorConditionChange,
        [System.Runtime.Serialization.EnumMember(Value = "SeverityChange")]
        SeverityChange,
        [System.Runtime.Serialization.EnumMember(Value = "ActionRuleTriggered")]
        ActionRuleTriggered,
        [System.Runtime.Serialization.EnumMember(Value = "ActionRuleSuppressed")]
        ActionRuleSuppressed,
        [System.Runtime.Serialization.EnumMember(Value = "ActionsTriggered")]
        ActionsTriggered,
        [System.Runtime.Serialization.EnumMember(Value = "ActionsSuppressed")]
        ActionsSuppressed,
        [System.Runtime.Serialization.EnumMember(Value = "ActionsFailed")]
        ActionsFailed
    }
    internal static class AlertModificationEventEnumExtension
    {
        internal static string ToSerializedValue(this AlertModificationEvent? value)
        {
            return value == null ? null : ((AlertModificationEvent)value).ToSerializedValue();
        }
        internal static string ToSerializedValue(this AlertModificationEvent value)
        {
            switch( value )
            {
                case AlertModificationEvent.AlertCreated:
                    return "AlertCreated";
                case AlertModificationEvent.StateChange:
                    return "StateChange";
                case AlertModificationEvent.MonitorConditionChange:
                    return "MonitorConditionChange";
                case AlertModificationEvent.SeverityChange:
                    return "SeverityChange";
                case AlertModificationEvent.ActionRuleTriggered:
                    return "ActionRuleTriggered";
                case AlertModificationEvent.ActionRuleSuppressed:
                    return "ActionRuleSuppressed";
                case AlertModificationEvent.ActionsTriggered:
                    return "ActionsTriggered";
                case AlertModificationEvent.ActionsSuppressed:
                    return "ActionsSuppressed";
                case AlertModificationEvent.ActionsFailed:
                    return "ActionsFailed";
            }
            return null;
        }
        internal static AlertModificationEvent? ParseAlertModificationEvent(this string value)
        {
            switch( value )
            {
                case "AlertCreated":
                    return AlertModificationEvent.AlertCreated;
                case "StateChange":
                    return AlertModificationEvent.StateChange;
                case "MonitorConditionChange":
                    return AlertModificationEvent.MonitorConditionChange;
                case "SeverityChange":
                    return AlertModificationEvent.SeverityChange;
                case "ActionRuleTriggered":
                    return AlertModificationEvent.ActionRuleTriggered;
                case "ActionRuleSuppressed":
                    return AlertModificationEvent.ActionRuleSuppressed;
                case "ActionsTriggered":
                    return AlertModificationEvent.ActionsTriggered;
                case "ActionsSuppressed":
                    return AlertModificationEvent.ActionsSuppressed;
                case "ActionsFailed":
                    return AlertModificationEvent.ActionsFailed;
            }
            return null;
        }
    }
}