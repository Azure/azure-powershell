// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.AlertsManagement.Models
{
    using System.Linq;

    /// <summary>
    /// Alert modification item.
    /// </summary>
    public partial class AlertModificationItem
    {
        /// <summary>
        /// Initializes a new instance of the AlertModificationItem class.
        /// </summary>
        public AlertModificationItem()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the AlertModificationItem class.
        /// </summary>

        /// <param name="modificationEvent">Reason for the modification
        /// Possible values include: 'AlertCreated', 'StateChange',
        /// 'MonitorConditionChange', 'SeverityChange', 'ActionRuleTriggered',
        /// 'ActionRuleSuppressed', 'ActionsTriggered', 'ActionsSuppressed',
        /// 'ActionsFailed'</param>

        /// <param name="oldValue">Old value
        /// </param>

        /// <param name="newValue">New value
        /// </param>

        /// <param name="modifiedAt">Modified date and time
        /// </param>

        /// <param name="modifiedBy">Modified user details (Principal client name)
        /// </param>

        /// <param name="comments">Modification comments
        /// </param>

        /// <param name="description">Description of the modification
        /// </param>
        public AlertModificationItem(AlertModificationEvent? modificationEvent = default(AlertModificationEvent?), string oldValue = default(string), string newValue = default(string), string modifiedAt = default(string), string modifiedBy = default(string), string comments = default(string), string description = default(string))

        {
            this.ModificationEvent = modificationEvent;
            this.OldValue = oldValue;
            this.NewValue = newValue;
            this.ModifiedAt = modifiedAt;
            this.ModifiedBy = modifiedBy;
            this.Comments = comments;
            this.Description = description;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets or sets reason for the modification Possible values include: &#39;AlertCreated&#39;, &#39;StateChange&#39;, &#39;MonitorConditionChange&#39;, &#39;SeverityChange&#39;, &#39;ActionRuleTriggered&#39;, &#39;ActionRuleSuppressed&#39;, &#39;ActionsTriggered&#39;, &#39;ActionsSuppressed&#39;, &#39;ActionsFailed&#39;
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "modificationEvent")]
        public AlertModificationEvent? ModificationEvent {get; set; }

        /// <summary>
        /// Gets or sets old value
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "oldValue")]
        public string OldValue {get; set; }

        /// <summary>
        /// Gets or sets new value
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "newValue")]
        public string NewValue {get; set; }

        /// <summary>
        /// Gets or sets modified date and time
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "modifiedAt")]
        public string ModifiedAt {get; set; }

        /// <summary>
        /// Gets or sets modified user details (Principal client name)
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "modifiedBy")]
        public string ModifiedBy {get; set; }

        /// <summary>
        /// Gets or sets modification comments
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "comments")]
        public string Comments {get; set; }

        /// <summary>
        /// Gets or sets description of the modification
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "description")]
        public string Description {get; set; }
    }
}