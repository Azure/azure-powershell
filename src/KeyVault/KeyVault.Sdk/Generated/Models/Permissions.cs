// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.KeyVault.Models
{
    using System.Linq;

    /// <summary>
    /// Permissions the identity has for keys, secrets, certificates and storage.
    /// </summary>
    public partial class Permissions
    {
        /// <summary>
        /// Initializes a new instance of the Permissions class.
        /// </summary>
        public Permissions()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the Permissions class.
        /// </summary>

        /// <param name="keys">Permissions to keys
        /// </param>

        /// <param name="secrets">Permissions to secrets
        /// </param>

        /// <param name="certificates">Permissions to certificates
        /// </param>

        /// <param name="storage">Permissions to storage accounts
        /// </param>
        public Permissions(System.Collections.Generic.IList<string> keys = default(System.Collections.Generic.IList<string>), System.Collections.Generic.IList<string> secrets = default(System.Collections.Generic.IList<string>), System.Collections.Generic.IList<string> certificates = default(System.Collections.Generic.IList<string>), System.Collections.Generic.IList<string> storage = default(System.Collections.Generic.IList<string>))

        {
            this.Keys = keys;
            this.Secrets = secrets;
            this.Certificates = certificates;
            this.Storage = storage;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets or sets permissions to keys
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "keys")]
        public System.Collections.Generic.IList<string> Keys {get; set; }

        /// <summary>
        /// Gets or sets permissions to secrets
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "secrets")]
        public System.Collections.Generic.IList<string> Secrets {get; set; }

        /// <summary>
        /// Gets or sets permissions to certificates
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "certificates")]
        public System.Collections.Generic.IList<string> Certificates {get; set; }

        /// <summary>
        /// Gets or sets permissions to storage accounts
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "storage")]
        public System.Collections.Generic.IList<string> Storage {get; set; }
    }
}