// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.KeyVault.Models
{
    using System.Linq;

    /// <summary>
    /// Properties of the deleted vault.
    /// </summary>
    public partial class DeletedVaultProperties
    {
        /// <summary>
        /// Initializes a new instance of the DeletedVaultProperties class.
        /// </summary>
        public DeletedVaultProperties()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the DeletedVaultProperties class.
        /// </summary>

        /// <param name="vaultId">The resource id of the original vault.
        /// </param>

        /// <param name="location">The location of the original vault.
        /// </param>

        /// <param name="deletionDate">The deleted date.
        /// </param>

        /// <param name="scheduledPurgeDate">The scheduled purged date.
        /// </param>

        /// <param name="tags">Tags of the original vault.
        /// </param>

        /// <param name="purgeProtectionEnabled">Purge protection status of the original vault.
        /// </param>
        public DeletedVaultProperties(string vaultId = default(string), string location = default(string), System.DateTime? deletionDate = default(System.DateTime?), System.DateTime? scheduledPurgeDate = default(System.DateTime?), System.Collections.Generic.IDictionary<string, string> tags = default(System.Collections.Generic.IDictionary<string, string>), bool? purgeProtectionEnabled = default(bool?))

        {
            this.VaultId = vaultId;
            this.Location = location;
            this.DeletionDate = deletionDate;
            this.ScheduledPurgeDate = scheduledPurgeDate;
            this.Tags = tags;
            this.PurgeProtectionEnabled = purgeProtectionEnabled;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets the resource id of the original vault.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "vaultId")]
        public string VaultId {get; private set; }

        /// <summary>
        /// Gets the location of the original vault.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "location")]
        public string Location {get; private set; }

        /// <summary>
        /// Gets the deleted date.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "deletionDate")]
        public System.DateTime? DeletionDate {get; private set; }

        /// <summary>
        /// Gets the scheduled purged date.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "scheduledPurgeDate")]
        public System.DateTime? ScheduledPurgeDate {get; private set; }

        /// <summary>
        /// Gets tags of the original vault.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "tags")]
        public System.Collections.Generic.IDictionary<string, string> Tags {get; private set; }

        /// <summary>
        /// Gets purge protection status of the original vault.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "purgeProtectionEnabled")]
        public bool? PurgeProtectionEnabled {get; private set; }
    }
}