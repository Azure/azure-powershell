// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.
namespace Microsoft.Azure.Management.KeyVault
{
    using Microsoft.Rest.Azure;
    using Models;

    /// <summary>
    /// Extension methods for MhsmPrivateEndpointConnectionsOperations
    /// </summary>
    public static partial class MhsmPrivateEndpointConnectionsOperationsExtensions
    {
        /// <summary>
        /// The List operation gets information about the private endpoint connections associated with the managed HSM Pool.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='resourceGroupName'>
        /// Name of the resource group that contains the managed HSM pool.
        /// </param>
        /// <param name='name'>
        /// Name of the managed HSM Pool
        /// </param>
        public static Microsoft.Rest.Azure.IPage<MhsmPrivateEndpointConnection> ListByResource(this IMhsmPrivateEndpointConnectionsOperations operations, string resourceGroupName, string name)
        {
                return ((IMhsmPrivateEndpointConnectionsOperations)operations).ListByResourceAsync(resourceGroupName, name).GetAwaiter().GetResult();
        }

        /// <summary>
        /// The List operation gets information about the private endpoint connections associated with the managed HSM Pool.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='resourceGroupName'>
        /// Name of the resource group that contains the managed HSM pool.
        /// </param>
        /// <param name='name'>
        /// Name of the managed HSM Pool
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        public static async System.Threading.Tasks.Task<Microsoft.Rest.Azure.IPage<MhsmPrivateEndpointConnection>> ListByResourceAsync(this IMhsmPrivateEndpointConnectionsOperations operations, string resourceGroupName, string name, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            using (var _result = await operations.ListByResourceWithHttpMessagesAsync(resourceGroupName, name, null, cancellationToken).ConfigureAwait(false))
            {
                return _result.Body;
            }
        }
        /// <summary>
        /// Gets the specified private endpoint connection associated with the managed HSM Pool.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='resourceGroupName'>
        /// Name of the resource group that contains the managed HSM pool.
        /// </param>
        /// <param name='name'>
        /// Name of the managed HSM Pool
        /// </param>
        /// <param name='privateEndpointConnectionName'>
        /// Name of the private endpoint connection associated with the managed hsm pool.
        /// </param>
        public static MhsmPrivateEndpointConnection Get(this IMhsmPrivateEndpointConnectionsOperations operations, string resourceGroupName, string name, string privateEndpointConnectionName)
        {
                return ((IMhsmPrivateEndpointConnectionsOperations)operations).GetAsync(resourceGroupName, name, privateEndpointConnectionName).GetAwaiter().GetResult();
        }

        /// <summary>
        /// Gets the specified private endpoint connection associated with the managed HSM Pool.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='resourceGroupName'>
        /// Name of the resource group that contains the managed HSM pool.
        /// </param>
        /// <param name='name'>
        /// Name of the managed HSM Pool
        /// </param>
        /// <param name='privateEndpointConnectionName'>
        /// Name of the private endpoint connection associated with the managed hsm pool.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        public static async System.Threading.Tasks.Task<MhsmPrivateEndpointConnection> GetAsync(this IMhsmPrivateEndpointConnectionsOperations operations, string resourceGroupName, string name, string privateEndpointConnectionName, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            using (var _result = await operations.GetWithHttpMessagesAsync(resourceGroupName, name, privateEndpointConnectionName, null, cancellationToken).ConfigureAwait(false))
            {
                return _result.Body;
            }
        }
        /// <summary>
        /// Updates the specified private endpoint connection associated with the managed hsm pool.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='resourceGroupName'>
        /// Name of the resource group that contains the managed HSM pool.
        /// </param>
        /// <param name='name'>
        /// Name of the managed HSM Pool
        /// </param>
        /// <param name='privateEndpointConnectionName'>
        /// Name of the private endpoint connection associated with the managed hsm pool.
        /// </param>
        public static MhsmPrivateEndpointConnection Put(this IMhsmPrivateEndpointConnectionsOperations operations, string resourceGroupName, string name, string privateEndpointConnectionName, MhsmPrivateEndpointConnection properties)
        {
                return ((IMhsmPrivateEndpointConnectionsOperations)operations).PutAsync(resourceGroupName, name, privateEndpointConnectionName, properties).GetAwaiter().GetResult();
        }

        /// <summary>
        /// Updates the specified private endpoint connection associated with the managed hsm pool.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='resourceGroupName'>
        /// Name of the resource group that contains the managed HSM pool.
        /// </param>
        /// <param name='name'>
        /// Name of the managed HSM Pool
        /// </param>
        /// <param name='privateEndpointConnectionName'>
        /// Name of the private endpoint connection associated with the managed hsm pool.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        public static async System.Threading.Tasks.Task<MhsmPrivateEndpointConnection> PutAsync(this IMhsmPrivateEndpointConnectionsOperations operations, string resourceGroupName, string name, string privateEndpointConnectionName, MhsmPrivateEndpointConnection properties, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            using (var _result = await operations.PutWithHttpMessagesAsync(resourceGroupName, name, privateEndpointConnectionName, properties, null, cancellationToken).ConfigureAwait(false))
            {
                return _result.Body;
            }
        }
        /// <summary>
        /// Deletes the specified private endpoint connection associated with the managed hsm pool.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='resourceGroupName'>
        /// Name of the resource group that contains the managed HSM pool.
        /// </param>
        /// <param name='name'>
        /// Name of the managed HSM Pool
        /// </param>
        /// <param name='privateEndpointConnectionName'>
        /// Name of the private endpoint connection associated with the managed hsm pool.
        /// </param>
        public static MhsmPrivateEndpointConnection Delete(this IMhsmPrivateEndpointConnectionsOperations operations, string resourceGroupName, string name, string privateEndpointConnectionName)
        {
                return ((IMhsmPrivateEndpointConnectionsOperations)operations).DeleteAsync(resourceGroupName, name, privateEndpointConnectionName).GetAwaiter().GetResult();
        }

        /// <summary>
        /// Deletes the specified private endpoint connection associated with the managed hsm pool.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='resourceGroupName'>
        /// Name of the resource group that contains the managed HSM pool.
        /// </param>
        /// <param name='name'>
        /// Name of the managed HSM Pool
        /// </param>
        /// <param name='privateEndpointConnectionName'>
        /// Name of the private endpoint connection associated with the managed hsm pool.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        public static async System.Threading.Tasks.Task<MhsmPrivateEndpointConnection> DeleteAsync(this IMhsmPrivateEndpointConnectionsOperations operations, string resourceGroupName, string name, string privateEndpointConnectionName, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            using (var _result = await operations.DeleteWithHttpMessagesAsync(resourceGroupName, name, privateEndpointConnectionName, null, cancellationToken).ConfigureAwait(false))
            {
                return _result.Body;
            }
        }
        /// <summary>
        /// Deletes the specified private endpoint connection associated with the managed hsm pool.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='resourceGroupName'>
        /// Name of the resource group that contains the managed HSM pool.
        /// </param>
        /// <param name='name'>
        /// Name of the managed HSM Pool
        /// </param>
        /// <param name='privateEndpointConnectionName'>
        /// Name of the private endpoint connection associated with the managed hsm pool.
        /// </param>
        public static MhsmPrivateEndpointConnection BeginDelete(this IMhsmPrivateEndpointConnectionsOperations operations, string resourceGroupName, string name, string privateEndpointConnectionName)
        {
                return ((IMhsmPrivateEndpointConnectionsOperations)operations).BeginDeleteAsync(resourceGroupName, name, privateEndpointConnectionName).GetAwaiter().GetResult();
        }

        /// <summary>
        /// Deletes the specified private endpoint connection associated with the managed hsm pool.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='resourceGroupName'>
        /// Name of the resource group that contains the managed HSM pool.
        /// </param>
        /// <param name='name'>
        /// Name of the managed HSM Pool
        /// </param>
        /// <param name='privateEndpointConnectionName'>
        /// Name of the private endpoint connection associated with the managed hsm pool.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        public static async System.Threading.Tasks.Task<MhsmPrivateEndpointConnection> BeginDeleteAsync(this IMhsmPrivateEndpointConnectionsOperations operations, string resourceGroupName, string name, string privateEndpointConnectionName, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            using (var _result = await operations.BeginDeleteWithHttpMessagesAsync(resourceGroupName, name, privateEndpointConnectionName, null, cancellationToken).ConfigureAwait(false))
            {
                return _result.Body;
            }
        }
        /// <summary>
        /// The List operation gets information about the private endpoint connections associated with the managed HSM Pool.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='nextPageLink'>
        /// The NextLink from the previous successful call to List operation.
        /// </param>
        public static Microsoft.Rest.Azure.IPage<MhsmPrivateEndpointConnection> ListByResourceNext(this IMhsmPrivateEndpointConnectionsOperations operations, string nextPageLink)
        {
                return ((IMhsmPrivateEndpointConnectionsOperations)operations).ListByResourceNextAsync(nextPageLink).GetAwaiter().GetResult();
        }

        /// <summary>
        /// The List operation gets information about the private endpoint connections associated with the managed HSM Pool.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='nextPageLink'>
        /// The NextLink from the previous successful call to List operation.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        public static async System.Threading.Tasks.Task<Microsoft.Rest.Azure.IPage<MhsmPrivateEndpointConnection>> ListByResourceNextAsync(this IMhsmPrivateEndpointConnectionsOperations operations, string nextPageLink, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            using (var _result = await operations.ListByResourceNextWithHttpMessagesAsync(nextPageLink, null, cancellationToken).ConfigureAwait(false))
            {
                return _result.Body;
            }
        }
    }
}
