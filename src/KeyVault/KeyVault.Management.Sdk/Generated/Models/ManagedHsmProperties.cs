// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.KeyVault.Models
{
    using System.Linq;

    /// <summary>
    /// Properties of the managed HSM Pool
    /// </summary>
    public partial class ManagedHsmProperties
    {
        /// <summary>
        /// Initializes a new instance of the ManagedHsmProperties class.
        /// </summary>
        public ManagedHsmProperties()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the ManagedHsmProperties class.
        /// </summary>

        /// <param name="tenantId">The Azure Active Directory tenant ID that should be used for authenticating
        /// requests to the managed HSM pool.
        /// </param>

        /// <param name="initialAdminObjectIds">Array of initial administrators object ids for this managed hsm pool.
        /// </param>

        /// <param name="hsmUri">The URI of the managed hsm pool for performing operations on keys.
        /// </param>

        /// <param name="enableSoftDelete">Property to specify whether the &#39;soft delete&#39; functionality is enabled for
        /// this managed HSM pool. Soft delete is enabled by default for all managed
        /// HSMs and is immutable.
        /// </param>

        /// <param name="softDeleteRetentionInDays">Soft deleted data retention days. When you delete an HSM or a key, it will
        /// remain recoverable for the configured retention period or for a default
        /// period of 90 days. It accepts values between 7 and 90.
        /// </param>

        /// <param name="enablePurgeProtection">Property specifying whether protection against purge is enabled for this
        /// managed HSM pool. Setting this property to true activates protection
        /// against purge for this managed HSM pool and its content - only the Managed
        /// HSM service may initiate a hard, irrecoverable deletion. Enabling this
        /// functionality is irreversible.
        /// </param>

        /// <param name="createMode">The create mode to indicate whether the resource is being created or is
        /// being recovered from a deleted resource.
        /// Possible values include: 'recover', 'default'</param>

        /// <param name="statusMessage">Resource Status Message.
        /// </param>

        /// <param name="provisioningState">Provisioning state.
        /// Possible values include: 'Succeeded', 'Provisioning', 'Failed', 'Updating',
        /// 'Deleting', 'Activated', 'SecurityDomainRestore', 'Restoring'</param>

        /// <param name="networkAcls">Rules governing the accessibility of the key vault from specific network
        /// locations.
        /// </param>

        /// <param name="regions">List of all regions associated with the managed hsm pool.
        /// </param>

        /// <param name="privateEndpointConnections">List of private endpoint connections associated with the managed hsm pool.
        /// </param>

        /// <param name="publicNetworkAccess">Control permission to the managed HSM from public networks.
        /// Possible values include: 'Enabled', 'Disabled'</param>

        /// <param name="scheduledPurgeDate">The scheduled purge date in UTC.
        /// </param>

        /// <param name="securityDomainProperties">Managed HSM security domain properties.
        /// </param>
        public ManagedHsmProperties(System.Guid? tenantId = default(System.Guid?), System.Collections.Generic.IList<string> initialAdminObjectIds = default(System.Collections.Generic.IList<string>), string hsmUri = default(string), bool? enableSoftDelete = default(bool?), int? softDeleteRetentionInDays = default(int?), bool? enablePurgeProtection = default(bool?), CreateMode? createMode = default(CreateMode?), string statusMessage = default(string), string provisioningState = default(string), MhsmNetworkRuleSet networkAcls = default(MhsmNetworkRuleSet), System.Collections.Generic.IList<MhsmGeoReplicatedRegion> regions = default(System.Collections.Generic.IList<MhsmGeoReplicatedRegion>), System.Collections.Generic.IList<MhsmPrivateEndpointConnectionItem> privateEndpointConnections = default(System.Collections.Generic.IList<MhsmPrivateEndpointConnectionItem>), string publicNetworkAccess = default(string), System.DateTime? scheduledPurgeDate = default(System.DateTime?), ManagedHSMSecurityDomainProperties securityDomainProperties = default(ManagedHSMSecurityDomainProperties))

        {
            this.TenantId = tenantId;
            this.InitialAdminObjectIds = initialAdminObjectIds;
            this.HsmUri = hsmUri;
            this.EnableSoftDelete = enableSoftDelete;
            this.SoftDeleteRetentionInDays = softDeleteRetentionInDays;
            this.EnablePurgeProtection = enablePurgeProtection;
            this.CreateMode = createMode;
            this.StatusMessage = statusMessage;
            this.ProvisioningState = provisioningState;
            this.NetworkAcls = networkAcls;
            this.Regions = regions;
            this.PrivateEndpointConnections = privateEndpointConnections;
            this.PublicNetworkAccess = publicNetworkAccess;
            this.ScheduledPurgeDate = scheduledPurgeDate;
            this.SecurityDomainProperties = securityDomainProperties;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets or sets the Azure Active Directory tenant ID that should be used for
        /// authenticating requests to the managed HSM pool.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "tenantId")]
        public System.Guid? TenantId {get; set; }

        /// <summary>
        /// Gets or sets array of initial administrators object ids for this managed
        /// hsm pool.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "initialAdminObjectIds")]
        public System.Collections.Generic.IList<string> InitialAdminObjectIds {get; set; }

        /// <summary>
        /// Gets the URI of the managed hsm pool for performing operations on keys.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "hsmUri")]
        public string HsmUri {get; private set; }

        /// <summary>
        /// Gets or sets property to specify whether the &#39;soft delete&#39; functionality is
        /// enabled for this managed HSM pool. Soft delete is enabled by default for
        /// all managed HSMs and is immutable.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "enableSoftDelete")]
        public bool? EnableSoftDelete {get; set; }

        /// <summary>
        /// Gets or sets soft deleted data retention days. When you delete an HSM or a
        /// key, it will remain recoverable for the configured retention period or for
        /// a default period of 90 days. It accepts values between 7 and 90.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "softDeleteRetentionInDays")]
        public int? SoftDeleteRetentionInDays {get; set; }

        /// <summary>
        /// Gets or sets property specifying whether protection against purge is
        /// enabled for this managed HSM pool. Setting this property to true activates
        /// protection against purge for this managed HSM pool and its content - only
        /// the Managed HSM service may initiate a hard, irrecoverable deletion.
        /// Enabling this functionality is irreversible.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "enablePurgeProtection")]
        public bool? EnablePurgeProtection {get; set; }

        /// <summary>
        /// Gets or sets the create mode to indicate whether the resource is being
        /// created or is being recovered from a deleted resource. Possible values include: &#39;recover&#39;, &#39;default&#39;
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "createMode")]
        public CreateMode? CreateMode {get; set; }

        /// <summary>
        /// Gets resource Status Message.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "statusMessage")]
        public string StatusMessage {get; private set; }

        /// <summary>
        /// Gets provisioning state. Possible values include: &#39;Succeeded&#39;, &#39;Provisioning&#39;, &#39;Failed&#39;, &#39;Updating&#39;, &#39;Deleting&#39;, &#39;Activated&#39;, &#39;SecurityDomainRestore&#39;, &#39;Restoring&#39;
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "provisioningState")]
        public string ProvisioningState {get; private set; }

        /// <summary>
        /// Gets or sets rules governing the accessibility of the key vault from
        /// specific network locations.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "networkAcls")]
        public MhsmNetworkRuleSet NetworkAcls {get; set; }

        /// <summary>
        /// Gets or sets list of all regions associated with the managed hsm pool.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "regions")]
        public System.Collections.Generic.IList<MhsmGeoReplicatedRegion> Regions {get; set; }

        /// <summary>
        /// Gets list of private endpoint connections associated with the managed hsm
        /// pool.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "privateEndpointConnections")]
        public System.Collections.Generic.IList<MhsmPrivateEndpointConnectionItem> PrivateEndpointConnections {get; private set; }

        /// <summary>
        /// Gets or sets control permission to the managed HSM from public networks. Possible values include: &#39;Enabled&#39;, &#39;Disabled&#39;
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "publicNetworkAccess")]
        public string PublicNetworkAccess {get; set; }

        /// <summary>
        /// Gets the scheduled purge date in UTC.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "scheduledPurgeDate")]
        public System.DateTime? ScheduledPurgeDate {get; private set; }

        /// <summary>
        /// Gets managed HSM security domain properties.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "securityDomainProperties")]
        public ManagedHSMSecurityDomainProperties SecurityDomainProperties {get; private set; }
    }
}