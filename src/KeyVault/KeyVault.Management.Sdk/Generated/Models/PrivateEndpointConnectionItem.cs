// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.KeyVault.Models
{
    using System.Linq;

    /// <summary>
    /// Private endpoint connection item.
    /// </summary>
    [Microsoft.Rest.Serialization.JsonTransformation]
    public partial class PrivateEndpointConnectionItem
    {
        /// <summary>
        /// Initializes a new instance of the PrivateEndpointConnectionItem class.
        /// </summary>
        public PrivateEndpointConnectionItem()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the PrivateEndpointConnectionItem class.
        /// </summary>

        /// <param name="id">Id of private endpoint connection.
        /// </param>

        /// <param name="etag">Modified whenever there is a change in the state of private endpoint
        /// connection.
        /// </param>

        /// <param name="privateEndpoint">Properties of the private endpoint object.
        /// </param>

        /// <param name="privateLinkServiceConnectionState">Approval state of the private link connection.
        /// </param>

        /// <param name="provisioningState">Provisioning state of the private endpoint connection.
        /// Possible values include: 'Succeeded', 'Creating', 'Updating', 'Deleting',
        /// 'Failed', 'Disconnected'</param>
        public PrivateEndpointConnectionItem(string id = default(string), string etag = default(string), PrivateEndpoint privateEndpoint = default(PrivateEndpoint), PrivateLinkServiceConnectionState privateLinkServiceConnectionState = default(PrivateLinkServiceConnectionState), string provisioningState = default(string))

        {
            this.Id = id;
            this.Etag = etag;
            this.PrivateEndpoint = privateEndpoint;
            this.PrivateLinkServiceConnectionState = privateLinkServiceConnectionState;
            this.ProvisioningState = provisioningState;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets or sets id of private endpoint connection.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "id")]
        public string Id {get; set; }

        /// <summary>
        /// Gets or sets modified whenever there is a change in the state of private
        /// endpoint connection.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "etag")]
        public string Etag {get; set; }

        /// <summary>
        /// Gets or sets properties of the private endpoint object.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.privateEndpoint")]
        public PrivateEndpoint PrivateEndpoint {get; set; }

        /// <summary>
        /// Gets or sets approval state of the private link connection.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.privateLinkServiceConnectionState")]
        public PrivateLinkServiceConnectionState PrivateLinkServiceConnectionState {get; set; }

        /// <summary>
        /// Gets or sets provisioning state of the private endpoint connection. Possible values include: &#39;Succeeded&#39;, &#39;Creating&#39;, &#39;Updating&#39;, &#39;Deleting&#39;, &#39;Failed&#39;, &#39;Disconnected&#39;
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.provisioningState")]
        public string ProvisioningState {get; set; }
    }
}