// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.StorageSync.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// Server endpoint provisioning step status object.
    /// </summary>
    public partial class ServerEndpointProvisioningStepStatus
    {
        /// <summary>
        /// Initializes a new instance of the
        /// ServerEndpointProvisioningStepStatus class.
        /// </summary>
        public ServerEndpointProvisioningStepStatus()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the
        /// ServerEndpointProvisioningStepStatus class.
        /// </summary>
        /// <param name="name">Name of the provisioning step</param>
        /// <param name="status">Status of the provisioning step</param>
        /// <param name="startTime">Start time of the provisioning step</param>
        /// <param name="minutesLeft">Estimated completion time of the
        /// provisioning step in minutes</param>
        /// <param name="progressPercentage">Estimated progress
        /// percentage</param>
        /// <param name="endTime">End time of the provisioning step</param>
        /// <param name="errorCode">Error code (HResult) for the provisioning
        /// step</param>
        /// <param name="additionalInformation">Additional information for the
        /// provisioning step</param>
        public ServerEndpointProvisioningStepStatus(string name = default(string), string status = default(string), System.DateTime? startTime = default(System.DateTime?), int? minutesLeft = default(int?), int? progressPercentage = default(int?), System.DateTime? endTime = default(System.DateTime?), int? errorCode = default(int?), IDictionary<string, string> additionalInformation = default(IDictionary<string, string>))
        {
            Name = name;
            Status = status;
            StartTime = startTime;
            MinutesLeft = minutesLeft;
            ProgressPercentage = progressPercentage;
            EndTime = endTime;
            ErrorCode = errorCode;
            AdditionalInformation = additionalInformation;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets name of the provisioning step
        /// </summary>
        [JsonProperty(PropertyName = "name")]
        public string Name { get; private set; }

        /// <summary>
        /// Gets status of the provisioning step
        /// </summary>
        [JsonProperty(PropertyName = "status")]
        public string Status { get; private set; }

        /// <summary>
        /// Gets start time of the provisioning step
        /// </summary>
        [JsonProperty(PropertyName = "startTime")]
        public System.DateTime? StartTime { get; private set; }

        /// <summary>
        /// Gets estimated completion time of the provisioning step in minutes
        /// </summary>
        [JsonProperty(PropertyName = "minutesLeft")]
        public int? MinutesLeft { get; private set; }

        /// <summary>
        /// Gets estimated progress percentage
        /// </summary>
        [JsonProperty(PropertyName = "progressPercentage")]
        public int? ProgressPercentage { get; private set; }

        /// <summary>
        /// Gets end time of the provisioning step
        /// </summary>
        [JsonProperty(PropertyName = "endTime")]
        public System.DateTime? EndTime { get; private set; }

        /// <summary>
        /// Gets error code (HResult) for the provisioning step
        /// </summary>
        [JsonProperty(PropertyName = "errorCode")]
        public int? ErrorCode { get; private set; }

        /// <summary>
        /// Gets additional information for the provisioning step
        /// </summary>
        [JsonProperty(PropertyName = "additionalInformation")]
        public IDictionary<string, string> AdditionalInformation { get; private set; }

    }
}
