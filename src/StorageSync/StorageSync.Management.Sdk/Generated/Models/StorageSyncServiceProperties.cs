// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.StorageSync.Models
{
    using System.Linq;

    /// <summary>
    /// Storage Sync Service Properties object.
    /// </summary>
    public partial class StorageSyncServiceProperties
    {
        /// <summary>
        /// Initializes a new instance of the StorageSyncServiceProperties class.
        /// </summary>
        public StorageSyncServiceProperties()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the StorageSyncServiceProperties class.
        /// </summary>

        /// <param name="incomingTrafficPolicy">Incoming Traffic Policy
        /// Possible values include: &#39;AllowAllTraffic&#39;, &#39;AllowVirtualNetworksOnly&#39;</param>

        /// <param name="storageSyncServiceStatus">Storage Sync service status.
        /// </param>

        /// <param name="storageSyncServiceUid">Storage Sync service Uid
        /// </param>

        /// <param name="provisioningState">StorageSyncService Provisioning State
        /// </param>

        /// <param name="useIdentity">Use Identity authorization when customer have finished setup RBAC
        /// permissions.
        /// </param>

        /// <param name="lastWorkflowId">StorageSyncService lastWorkflowId
        /// </param>

        /// <param name="lastOperationName">Resource Last Operation Name
        /// </param>

        /// <param name="privateEndpointConnections">List of private endpoint connection associated with the specified storage
        /// sync service
        /// </param>
        public StorageSyncServiceProperties(string incomingTrafficPolicy = default(string), int? storageSyncServiceStatus = default(int?), string storageSyncServiceUid = default(string), string provisioningState = default(string), bool? useIdentity = default(bool?), string lastWorkflowId = default(string), string lastOperationName = default(string), System.Collections.Generic.IList<PrivateEndpointConnection> privateEndpointConnections = default(System.Collections.Generic.IList<PrivateEndpointConnection>))

        {
            this.IncomingTrafficPolicy = incomingTrafficPolicy;
            this.StorageSyncServiceStatus = storageSyncServiceStatus;
            this.StorageSyncServiceUid = storageSyncServiceUid;
            this.ProvisioningState = provisioningState;
            this.UseIdentity = useIdentity;
            this.LastWorkflowId = lastWorkflowId;
            this.LastOperationName = lastOperationName;
            this.PrivateEndpointConnections = privateEndpointConnections;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets or sets incoming Traffic Policy Possible values include: &#39;AllowAllTraffic&#39;, &#39;AllowVirtualNetworksOnly&#39;
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "incomingTrafficPolicy")]
        public string IncomingTrafficPolicy {get; set; }

        /// <summary>
        /// Gets storage Sync service status.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "storageSyncServiceStatus")]
        public int? StorageSyncServiceStatus {get; private set; }

        /// <summary>
        /// Gets storage Sync service Uid
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "storageSyncServiceUid")]
        public string StorageSyncServiceUid {get; private set; }

        /// <summary>
        /// Gets storageSyncService Provisioning State
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "provisioningState")]
        public string ProvisioningState {get; private set; }

        /// <summary>
        /// Gets use Identity authorization when customer have finished setup RBAC
        /// permissions.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "useIdentity")]
        public bool? UseIdentity {get; private set; }

        /// <summary>
        /// Gets storageSyncService lastWorkflowId
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "lastWorkflowId")]
        public string LastWorkflowId {get; private set; }

        /// <summary>
        /// Gets resource Last Operation Name
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "lastOperationName")]
        public string LastOperationName {get; private set; }

        /// <summary>
        /// Gets list of private endpoint connection associated with the specified
        /// storage sync service
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "privateEndpointConnections")]
        public System.Collections.Generic.IList<PrivateEndpointConnection> PrivateEndpointConnections {get; private set; }
    }
}