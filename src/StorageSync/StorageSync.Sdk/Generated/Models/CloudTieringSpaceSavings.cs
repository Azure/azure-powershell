// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.StorageSync.Models
{
    using System.Linq;

    /// <summary>
    /// Server endpoint cloud tiering status object.
    /// </summary>
    public partial class CloudTieringSpaceSavings
    {
        /// <summary>
        /// Initializes a new instance of the CloudTieringSpaceSavings class.
        /// </summary>
        public CloudTieringSpaceSavings()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the CloudTieringSpaceSavings class.
        /// </summary>

        /// <param name="lastUpdatedTimestamp">Last updated timestamp
        /// </param>

        /// <param name="volumeSizeBytes">Volume size
        /// </param>

        /// <param name="totalSizeCloudBytes">Total size of content in the azure file share
        /// </param>

        /// <param name="cachedSizeBytes">Cached content size on the server
        /// </param>

        /// <param name="spaceSavingsPercent">Percentage of cached size over total size
        /// </param>

        /// <param name="spaceSavingsBytes">Count of bytes saved on the server
        /// </param>
        public CloudTieringSpaceSavings(System.DateTime? lastUpdatedTimestamp = default(System.DateTime?), long? volumeSizeBytes = default(long?), long? totalSizeCloudBytes = default(long?), long? cachedSizeBytes = default(long?), int? spaceSavingsPercent = default(int?), long? spaceSavingsBytes = default(long?))

        {
            this.LastUpdatedTimestamp = lastUpdatedTimestamp;
            this.VolumeSizeBytes = volumeSizeBytes;
            this.TotalSizeCloudBytes = totalSizeCloudBytes;
            this.CachedSizeBytes = cachedSizeBytes;
            this.SpaceSavingsPercent = spaceSavingsPercent;
            this.SpaceSavingsBytes = spaceSavingsBytes;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets last updated timestamp
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "lastUpdatedTimestamp")]
        public System.DateTime? LastUpdatedTimestamp {get; private set; }

        /// <summary>
        /// Gets volume size
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "volumeSizeBytes")]
        public long? VolumeSizeBytes {get; private set; }

        /// <summary>
        /// Gets total size of content in the azure file share
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "totalSizeCloudBytes")]
        public long? TotalSizeCloudBytes {get; private set; }

        /// <summary>
        /// Gets cached content size on the server
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "cachedSizeBytes")]
        public long? CachedSizeBytes {get; private set; }

        /// <summary>
        /// Gets percentage of cached size over total size
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "spaceSavingsPercent")]
        public int? SpaceSavingsPercent {get; private set; }

        /// <summary>
        /// Gets count of bytes saved on the server
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "spaceSavingsBytes")]
        public long? SpaceSavingsBytes {get; private set; }
        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (this.VolumeSizeBytes != null)
            {
                if (this.VolumeSizeBytes < 0)
                {
                    throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.InclusiveMinimum, "VolumeSizeBytes", 0);
                }
            }
            if (this.TotalSizeCloudBytes != null)
            {
                if (this.TotalSizeCloudBytes < 0)
                {
                    throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.InclusiveMinimum, "TotalSizeCloudBytes", 0);
                }
            }
            if (this.CachedSizeBytes != null)
            {
                if (this.CachedSizeBytes < 0)
                {
                    throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.InclusiveMinimum, "CachedSizeBytes", 0);
                }
            }
            if (this.SpaceSavingsPercent != null)
            {
                if (this.SpaceSavingsPercent > 100)
                {
                    throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.InclusiveMaximum, "SpaceSavingsPercent", 100);
                }
                if (this.SpaceSavingsPercent < 0)
                {
                    throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.InclusiveMinimum, "SpaceSavingsPercent", 0);
                }
            }
            if (this.SpaceSavingsBytes != null)
            {
                if (this.SpaceSavingsBytes < 0)
                {
                    throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.InclusiveMinimum, "SpaceSavingsBytes", 0);
                }
            }
        }
    }
}