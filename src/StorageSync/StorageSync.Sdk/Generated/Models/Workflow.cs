// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.StorageSync.Models
{
    using System.Linq;

    /// <summary>
    /// Workflow resource.
    /// </summary>
    [Microsoft.Rest.Serialization.JsonTransformation]
    public partial class Workflow : ProxyResource
    {
        /// <summary>
        /// Initializes a new instance of the Workflow class.
        /// </summary>
        public Workflow()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the Workflow class.
        /// </summary>

        /// <param name="id">Fully qualified resource ID for the resource. E.g.
        /// &#34;/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}&#34;
        /// </param>

        /// <param name="name">The name of the resource
        /// </param>

        /// <param name="type">The type of the resource. E.g. &#34;Microsoft.Compute/virtualMachines&#34; or
        /// &#34;Microsoft.Storage/storageAccounts&#34;
        /// </param>

        /// <param name="systemData">Azure Resource Manager metadata containing createdBy and modifiedBy
        /// information.
        /// </param>

        /// <param name="lastStepName">last step name
        /// </param>

        /// <param name="status">workflow status.
        /// Possible values include: &#39;active&#39;, &#39;expired&#39;, &#39;succeeded&#39;, &#39;aborted&#39;,
        /// &#39;failed&#39;</param>

        /// <param name="operation">operation direction.
        /// Possible values include: &#39;do&#39;, &#39;undo&#39;, &#39;cancel&#39;</param>

        /// <param name="steps">workflow steps
        /// </param>

        /// <param name="lastOperationId">workflow last operation identifier.
        /// </param>

        /// <param name="commandName">workflow command name.
        /// </param>

        /// <param name="createdTimestamp">workflow created timestamp.
        /// </param>

        /// <param name="lastStatusTimestamp">workflow last status timestamp.
        /// </param>
        public Workflow(string id = default(string), string name = default(string), string type = default(string), SystemData systemData = default(SystemData), string lastStepName = default(string), string status = default(string), string operation = default(string), string steps = default(string), string lastOperationId = default(string), string commandName = default(string), System.DateTime? createdTimestamp = default(System.DateTime?), System.DateTime? lastStatusTimestamp = default(System.DateTime?))

        : base(id, name, type, systemData)
        {
            this.LastStepName = lastStepName;
            this.Status = status;
            this.Operation = operation;
            this.Steps = steps;
            this.LastOperationId = lastOperationId;
            this.CommandName = commandName;
            this.CreatedTimestamp = createdTimestamp;
            this.LastStatusTimestamp = lastStatusTimestamp;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets or sets last step name
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.lastStepName")]
        public string LastStepName {get; set; }

        /// <summary>
        /// Gets or sets workflow status. Possible values include: &#39;active&#39;, &#39;expired&#39;, &#39;succeeded&#39;, &#39;aborted&#39;, &#39;failed&#39;
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.status")]
        public string Status {get; set; }

        /// <summary>
        /// Gets or sets operation direction. Possible values include: &#39;do&#39;, &#39;undo&#39;, &#39;cancel&#39;
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.operation")]
        public string Operation {get; set; }

        /// <summary>
        /// Gets or sets workflow steps
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.steps")]
        public string Steps {get; set; }

        /// <summary>
        /// Gets or sets workflow last operation identifier.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.lastOperationId")]
        public string LastOperationId {get; set; }

        /// <summary>
        /// Gets workflow command name.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.commandName")]
        public string CommandName {get; private set; }

        /// <summary>
        /// Gets workflow created timestamp.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.createdTimestamp")]
        public System.DateTime? CreatedTimestamp {get; private set; }

        /// <summary>
        /// Gets workflow last status timestamp.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.lastStatusTimestamp")]
        public System.DateTime? LastStatusTimestamp {get; private set; }
    }
}