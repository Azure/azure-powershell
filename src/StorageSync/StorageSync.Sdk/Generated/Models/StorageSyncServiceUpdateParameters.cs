// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.StorageSync.Models
{
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// Parameters for updating an Storage sync service.
    /// </summary>
    [Rest.Serialization.JsonTransformation]
    public partial class StorageSyncServiceUpdateParameters
    {
        /// <summary>
        /// Initializes a new instance of the
        /// StorageSyncServiceUpdateParameters class.
        /// </summary>
        public StorageSyncServiceUpdateParameters()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the
        /// StorageSyncServiceUpdateParameters class.
        /// </summary>
        /// <param name="tags">The user-specified tags associated with the
        /// storage sync service.</param>
        /// <param name="identity">managed identities for the Container App to
        /// interact with other Azure services without maintaining any secrets
        /// or credentials in code.</param>
        /// <param name="incomingTrafficPolicy">Incoming Traffic Policy.
        /// Possible values include: 'AllowAllTraffic',
        /// 'AllowVirtualNetworksOnly'</param>
        /// <param name="useIdentity">Use Identity authorization when customer
        /// have finished setup RBAC permissions.</param>
        public StorageSyncServiceUpdateParameters(IDictionary<string, string> tags = default(IDictionary<string, string>), ManagedServiceIdentity identity = default(ManagedServiceIdentity), string incomingTrafficPolicy = default(string), bool? useIdentity = default(bool?))
        {
            Tags = tags;
            Identity = identity;
            IncomingTrafficPolicy = incomingTrafficPolicy;
            UseIdentity = useIdentity;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the user-specified tags associated with the storage
        /// sync service.
        /// </summary>
        [JsonProperty(PropertyName = "tags")]
        public IDictionary<string, string> Tags { get; set; }

        /// <summary>
        /// Gets or sets managed identities for the Container App to interact
        /// with other Azure services without maintaining any secrets or
        /// credentials in code.
        /// </summary>
        [JsonProperty(PropertyName = "identity")]
        public ManagedServiceIdentity Identity { get; set; }

        /// <summary>
        /// Gets or sets incoming Traffic Policy. Possible values include:
        /// 'AllowAllTraffic', 'AllowVirtualNetworksOnly'
        /// </summary>
        [JsonProperty(PropertyName = "properties.incomingTrafficPolicy")]
        public string IncomingTrafficPolicy { get; set; }

        /// <summary>
        /// Gets or sets use Identity authorization when customer have finished
        /// setup RBAC permissions.
        /// </summary>
        [JsonProperty(PropertyName = "properties.useIdentity")]
        public bool? UseIdentity { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (Identity != null)
            {
                Identity.Validate();
            }
        }
    }
}
