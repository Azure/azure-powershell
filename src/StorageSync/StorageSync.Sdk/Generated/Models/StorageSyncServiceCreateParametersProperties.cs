// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.StorageSync.Models
{
    using System.Linq;

    /// <summary>
    /// StorageSyncService Properties object.
    /// </summary>
    public partial class StorageSyncServiceCreateParametersProperties
    {
        /// <summary>
        /// Initializes a new instance of the StorageSyncServiceCreateParametersProperties class.
        /// </summary>
        public StorageSyncServiceCreateParametersProperties()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the StorageSyncServiceCreateParametersProperties class.
        /// </summary>

        /// <param name="incomingTrafficPolicy">Incoming Traffic Policy
        /// Possible values include: &#39;AllowAllTraffic&#39;, &#39;AllowVirtualNetworksOnly&#39;</param>

        /// <param name="useIdentity">Use Identity authorization when customer have finished setup RBAC
        /// permissions.
        /// </param>
        public StorageSyncServiceCreateParametersProperties(string incomingTrafficPolicy = default(string), bool? useIdentity = default(bool?))

        {
            this.IncomingTrafficPolicy = incomingTrafficPolicy;
            this.UseIdentity = useIdentity;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets or sets incoming Traffic Policy Possible values include: &#39;AllowAllTraffic&#39;, &#39;AllowVirtualNetworksOnly&#39;
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "incomingTrafficPolicy")]
        public string IncomingTrafficPolicy {get; set; }

        /// <summary>
        /// Gets or sets use Identity authorization when customer have finished setup
        /// RBAC permissions.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "useIdentity")]
        public bool? UseIdentity {get; set; }
    }
}