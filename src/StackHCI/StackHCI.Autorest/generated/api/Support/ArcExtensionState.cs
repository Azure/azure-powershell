// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Support
{

    /// <summary>Arc extension installation state.</summary>
    public partial struct ArcExtensionState :
        System.IEquatable<ArcExtensionState>
    {
        /// <summary>Arc extension state is Accepted when extension installation triggered.</summary>
        public static Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Support.ArcExtensionState Accepted = @"Accepted";

        /// <summary>Arc extension state is Canceled.</summary>
        public static Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Support.ArcExtensionState Canceled = @"Canceled";

        /// <summary>Arc extension is in Creating State.</summary>
        public static Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Support.ArcExtensionState Creating = @"Creating";

        /// <summary>Arc extension is in Deleted State.</summary>
        public static Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Support.ArcExtensionState Deleted = @"Deleted";

        /// <summary>Arc extension is in Deleting State.</summary>
        public static Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Support.ArcExtensionState Deleting = @"Deleting";

        /// <summary>Arc extension state is Failed.</summary>
        public static Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Support.ArcExtensionState Failed = @"Failed";

        /// <summary>Arc extension is in Moving State.</summary>
        public static Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Support.ArcExtensionState Moving = @"Moving";

        /// <summary>Arc extension state is not specified.</summary>
        public static Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Support.ArcExtensionState NotSpecified = @"NotSpecified";

        /// <summary>Arc extension state is Succeeded.</summary>
        public static Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Support.ArcExtensionState Succeeded = @"Succeeded";

        /// <summary>Arc extension is in Updating State.</summary>
        public static Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Support.ArcExtensionState Updating = @"Updating";

        /// <summary>the value for an instance of the <see cref="ArcExtensionState" /> Enum.</summary>
        private string _value { get; set; }

        /// <summary>Creates an instance of the <see cref="ArcExtensionState"/> Enum class.</summary>
        /// <param name="underlyingValue">the value to create an instance for.</param>
        private ArcExtensionState(string underlyingValue)
        {
            this._value = underlyingValue;
        }

        /// <summary>Conversion from arbitrary object to ArcExtensionState</summary>
        /// <param name="value">the value to convert to an instance of <see cref="ArcExtensionState" />.</param>
        internal static object CreateFrom(object value)
        {
            return new ArcExtensionState(global::System.Convert.ToString(value));
        }

        /// <summary>Compares values of enum type ArcExtensionState</summary>
        /// <param name="e">the value to compare against this instance.</param>
        /// <returns><c>true</c> if the two instances are equal to the same value</returns>
        public bool Equals(Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Support.ArcExtensionState e)
        {
            return _value.Equals(e._value);
        }

        /// <summary>Compares values of enum type ArcExtensionState (override for Object)</summary>
        /// <param name="obj">the value to compare against this instance.</param>
        /// <returns><c>true</c> if the two instances are equal to the same value</returns>
        public override bool Equals(object obj)
        {
            return obj is ArcExtensionState && Equals((ArcExtensionState)obj);
        }

        /// <summary>Returns hashCode for enum ArcExtensionState</summary>
        /// <returns>The hashCode of the value</returns>
        public override int GetHashCode()
        {
            return this._value.GetHashCode();
        }

        /// <summary>Returns string representation for ArcExtensionState</summary>
        /// <returns>A string for this value.</returns>
        public override string ToString()
        {
            return this._value;
        }

        /// <summary>Implicit operator to convert string to ArcExtensionState</summary>
        /// <param name="value">the value to convert to an instance of <see cref="ArcExtensionState" />.</param>

        public static implicit operator ArcExtensionState(string value)
        {
            return new ArcExtensionState(value);
        }

        /// <summary>Implicit operator to convert ArcExtensionState to string</summary>
        /// <param name="e">the value to convert to an instance of <see cref="ArcExtensionState" />.</param>

        public static implicit operator string(Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Support.ArcExtensionState e)
        {
            return e._value;
        }

        /// <summary>Overriding != operator for enum ArcExtensionState</summary>
        /// <param name="e1">the value to compare against <paramref name="e2" /></param>
        /// <param name="e2">the value to compare against <paramref name="e1" /></param>
        /// <returns><c>true</c> if the two instances are not equal to the same value</returns>
        public static bool operator !=(Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Support.ArcExtensionState e1, Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Support.ArcExtensionState e2)
        {
            return !e2.Equals(e1);
        }

        /// <summary>Overriding == operator for enum ArcExtensionState</summary>
        /// <param name="e1">the value to compare against <paramref name="e2" /></param>
        /// <param name="e2">the value to compare against <paramref name="e1" /></param>
        /// <returns><c>true</c> if the two instances are equal to the same value</returns>
        public static bool operator ==(Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Support.ArcExtensionState e1, Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Support.ArcExtensionState e2)
        {
            return e2.Equals(e1);
        }
    }
}