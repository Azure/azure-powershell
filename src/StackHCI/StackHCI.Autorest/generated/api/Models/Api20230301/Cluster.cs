// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20230301
{
    using static Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Runtime.Extensions;

    /// <summary>Cluster details.</summary>
    public partial class Cluster :
        Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20230301.ICluster,
        Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20230301.IClusterInternal,
        Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Runtime.IValidates
    {
        /// <summary>
        /// Backing field for Inherited model <see cref= "Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api30.ITrackedResource"
        /// />
        /// </summary>
        private Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api30.ITrackedResource __trackedResource = new Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api30.TrackedResource();

        /// <summary>Object id of cluster AAD identity.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Origin(Microsoft.Azure.PowerShell.Cmdlets.StackHCI.PropertyOrigin.Inlined)]
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.DoNotFormat]
        public string AadApplicationObjectId { get => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20230301.IClusterPropertiesInternal)Property).AadApplicationObjectId; set => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20230301.IClusterPropertiesInternal)Property).AadApplicationObjectId = value ?? null; }

        /// <summary>App id of cluster AAD identity.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Origin(Microsoft.Azure.PowerShell.Cmdlets.StackHCI.PropertyOrigin.Inlined)]
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.DoNotFormat]
        public string AadClientId { get => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20230301.IClusterPropertiesInternal)Property).AadClientId; set => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20230301.IClusterPropertiesInternal)Property).AadClientId = value ?? null; }

        /// <summary>Id of cluster identity service principal.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Origin(Microsoft.Azure.PowerShell.Cmdlets.StackHCI.PropertyOrigin.Inlined)]
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.DoNotFormat]
        public string AadServicePrincipalObjectId { get => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20230301.IClusterPropertiesInternal)Property).AadServicePrincipalObjectId; set => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20230301.IClusterPropertiesInternal)Property).AadServicePrincipalObjectId = value ?? null; }

        /// <summary>Tenant id of cluster AAD identity.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Origin(Microsoft.Azure.PowerShell.Cmdlets.StackHCI.PropertyOrigin.Inlined)]
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.DoNotFormat]
        public string AadTenantId { get => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20230301.IClusterPropertiesInternal)Property).AadTenantId; set => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20230301.IClusterPropertiesInternal)Property).AadTenantId = value ?? null; }

        /// <summary>Type of billing applied to the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Origin(Microsoft.Azure.PowerShell.Cmdlets.StackHCI.PropertyOrigin.Inlined)]
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.DoNotFormat]
        public string BillingModel { get => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20230301.IClusterPropertiesInternal)Property).BillingModel; }

        /// <summary>Unique, immutable resource id.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Origin(Microsoft.Azure.PowerShell.Cmdlets.StackHCI.PropertyOrigin.Inlined)]
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.DoNotFormat]
        public string CloudId { get => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20230301.IClusterPropertiesInternal)Property).CloudId; }

        /// <summary>Endpoint configured for management from the Azure portal.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Origin(Microsoft.Azure.PowerShell.Cmdlets.StackHCI.PropertyOrigin.Inlined)]
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.DoNotFormat]
        public string CloudManagementEndpoint { get => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20230301.IClusterPropertiesInternal)Property).CloudManagementEndpoint; set => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20230301.IClusterPropertiesInternal)Property).CloudManagementEndpoint = value ?? null; }

        /// <summary>Desired level of diagnostic data emitted by the cluster.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Origin(Microsoft.Azure.PowerShell.Cmdlets.StackHCI.PropertyOrigin.Inlined)]
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.DoNotFormat]
        public Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Support.DiagnosticLevel? DesiredPropertyDiagnosticLevel { get => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20230301.IClusterPropertiesInternal)Property).DesiredPropertyDiagnosticLevel; set => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20230301.IClusterPropertiesInternal)Property).DesiredPropertyDiagnosticLevel = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Support.DiagnosticLevel)""); }

        /// <summary>Desired state of Windows Server Subscription.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Origin(Microsoft.Azure.PowerShell.Cmdlets.StackHCI.PropertyOrigin.Inlined)]
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.DoNotFormat]
        public Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Support.WindowsServerSubscription? DesiredPropertyWindowsServerSubscription { get => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20230301.IClusterPropertiesInternal)Property).DesiredPropertyWindowsServerSubscription; set => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20230301.IClusterPropertiesInternal)Property).DesiredPropertyWindowsServerSubscription = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Support.WindowsServerSubscription)""); }

        /// <summary>
        /// Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Origin(Microsoft.Azure.PowerShell.Cmdlets.StackHCI.PropertyOrigin.Inherited)]
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.DoNotFormat]
        public string Id { get => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api30.IResourceInternal)__trackedResource).Id; }

        /// <summary>Backing field for <see cref="Identity" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api40.IManagedServiceIdentity _identity;

        /// <summary>Identity of Cluster resource</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Origin(Microsoft.Azure.PowerShell.Cmdlets.StackHCI.PropertyOrigin.Owned)]
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.DoNotFormat]
        internal Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api40.IManagedServiceIdentity Identity { get => (this._identity = this._identity ?? new Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api40.ManagedServiceIdentity()); set => this._identity = value; }

        /// <summary>
        /// The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Origin(Microsoft.Azure.PowerShell.Cmdlets.StackHCI.PropertyOrigin.Inlined)]
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.DoNotFormat]
        public string IdentityPrincipalId { get => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api40.IManagedServiceIdentityInternal)Identity).PrincipalId; }

        /// <summary>
        /// The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Origin(Microsoft.Azure.PowerShell.Cmdlets.StackHCI.PropertyOrigin.Inlined)]
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.DoNotFormat]
        public string IdentityTenantId { get => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api40.IManagedServiceIdentityInternal)Identity).TenantId; }

        /// <summary>
        /// Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Origin(Microsoft.Azure.PowerShell.Cmdlets.StackHCI.PropertyOrigin.Inlined)]
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.DoNotFormat]
        public Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Support.ManagedServiceIdentityType? IdentityType { get => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api40.IManagedServiceIdentityInternal)Identity).Type; set => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api40.IManagedServiceIdentityInternal)Identity).Type = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Support.ManagedServiceIdentityType)""); }

        /// <summary>
        /// The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM
        /// resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}.
        /// The dictionary values can be empty objects ({}) in requests.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Origin(Microsoft.Azure.PowerShell.Cmdlets.StackHCI.PropertyOrigin.Inlined)]
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.DoNotFormat]
        public Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api40.IUserAssignedIdentities IdentityUserAssignedIdentity { get => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api40.IManagedServiceIdentityInternal)Identity).UserAssignedIdentity; set => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api40.IManagedServiceIdentityInternal)Identity).UserAssignedIdentity = value ?? null /* model class */; }

        /// <summary>Most recent billing meter timestamp.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Origin(Microsoft.Azure.PowerShell.Cmdlets.StackHCI.PropertyOrigin.Inlined)]
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.DoNotFormat]
        public global::System.DateTime? LastBillingTimestamp { get => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20230301.IClusterPropertiesInternal)Property).LastBillingTimestamp; }

        /// <summary>Most recent cluster sync timestamp.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Origin(Microsoft.Azure.PowerShell.Cmdlets.StackHCI.PropertyOrigin.Inlined)]
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.DoNotFormat]
        public global::System.DateTime? LastSyncTimestamp { get => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20230301.IClusterPropertiesInternal)Property).LastSyncTimestamp; }

        /// <summary>The geo-location where the resource lives</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Origin(Microsoft.Azure.PowerShell.Cmdlets.StackHCI.PropertyOrigin.Inherited)]
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.FormatTable(Index = 0)]
        public string Location { get => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api30.ITrackedResourceInternal)__trackedResource).Location; set => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api30.ITrackedResourceInternal)__trackedResource).Location = value ; }

        /// <summary>Internal Acessors for BillingModel</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20230301.IClusterInternal.BillingModel { get => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20230301.IClusterPropertiesInternal)Property).BillingModel; set => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20230301.IClusterPropertiesInternal)Property).BillingModel = value; }

        /// <summary>Internal Acessors for CloudId</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20230301.IClusterInternal.CloudId { get => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20230301.IClusterPropertiesInternal)Property).CloudId; set => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20230301.IClusterPropertiesInternal)Property).CloudId = value; }

        /// <summary>Internal Acessors for DesiredProperty</summary>
        Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20230301.IClusterDesiredProperties Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20230301.IClusterInternal.DesiredProperty { get => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20230301.IClusterPropertiesInternal)Property).DesiredProperty; set => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20230301.IClusterPropertiesInternal)Property).DesiredProperty = value; }

        /// <summary>Internal Acessors for Identity</summary>
        Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api40.IManagedServiceIdentity Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20230301.IClusterInternal.Identity { get => (this._identity = this._identity ?? new Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api40.ManagedServiceIdentity()); set { {_identity = value;} } }

        /// <summary>Internal Acessors for IdentityPrincipalId</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20230301.IClusterInternal.IdentityPrincipalId { get => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api40.IManagedServiceIdentityInternal)Identity).PrincipalId; set => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api40.IManagedServiceIdentityInternal)Identity).PrincipalId = value; }

        /// <summary>Internal Acessors for IdentityTenantId</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20230301.IClusterInternal.IdentityTenantId { get => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api40.IManagedServiceIdentityInternal)Identity).TenantId; set => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api40.IManagedServiceIdentityInternal)Identity).TenantId = value; }

        /// <summary>Internal Acessors for LastBillingTimestamp</summary>
        global::System.DateTime? Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20230301.IClusterInternal.LastBillingTimestamp { get => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20230301.IClusterPropertiesInternal)Property).LastBillingTimestamp; set => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20230301.IClusterPropertiesInternal)Property).LastBillingTimestamp = value; }

        /// <summary>Internal Acessors for LastSyncTimestamp</summary>
        global::System.DateTime? Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20230301.IClusterInternal.LastSyncTimestamp { get => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20230301.IClusterPropertiesInternal)Property).LastSyncTimestamp; set => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20230301.IClusterPropertiesInternal)Property).LastSyncTimestamp = value; }

        /// <summary>Internal Acessors for Property</summary>
        Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20230301.IClusterProperties Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20230301.IClusterInternal.Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20230301.ClusterProperties()); set { {_property = value;} } }

        /// <summary>Internal Acessors for ProvisioningState</summary>
        Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Support.ProvisioningState? Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20230301.IClusterInternal.ProvisioningState { get => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20230301.IClusterPropertiesInternal)Property).ProvisioningState; set => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20230301.IClusterPropertiesInternal)Property).ProvisioningState = value; }

        /// <summary>Internal Acessors for RegistrationTimestamp</summary>
        global::System.DateTime? Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20230301.IClusterInternal.RegistrationTimestamp { get => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20230301.IClusterPropertiesInternal)Property).RegistrationTimestamp; set => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20230301.IClusterPropertiesInternal)Property).RegistrationTimestamp = value; }

        /// <summary>Internal Acessors for ReportedProperty</summary>
        Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20230301.IClusterReportedProperties Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20230301.IClusterInternal.ReportedProperty { get => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20230301.IClusterPropertiesInternal)Property).ReportedProperty; set => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20230301.IClusterPropertiesInternal)Property).ReportedProperty = value; }

        /// <summary>Internal Acessors for ReportedPropertyClusterId</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20230301.IClusterInternal.ReportedPropertyClusterId { get => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20230301.IClusterPropertiesInternal)Property).ReportedPropertyClusterId; set => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20230301.IClusterPropertiesInternal)Property).ReportedPropertyClusterId = value; }

        /// <summary>Internal Acessors for ReportedPropertyClusterName</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20230301.IClusterInternal.ReportedPropertyClusterName { get => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20230301.IClusterPropertiesInternal)Property).ReportedPropertyClusterName; set => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20230301.IClusterPropertiesInternal)Property).ReportedPropertyClusterName = value; }

        /// <summary>Internal Acessors for ReportedPropertyClusterType</summary>
        Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Support.ClusterNodeType? Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20230301.IClusterInternal.ReportedPropertyClusterType { get => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20230301.IClusterPropertiesInternal)Property).ReportedPropertyClusterType; set => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20230301.IClusterPropertiesInternal)Property).ReportedPropertyClusterType = value; }

        /// <summary>Internal Acessors for ReportedPropertyClusterVersion</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20230301.IClusterInternal.ReportedPropertyClusterVersion { get => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20230301.IClusterPropertiesInternal)Property).ReportedPropertyClusterVersion; set => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20230301.IClusterPropertiesInternal)Property).ReportedPropertyClusterVersion = value; }

        /// <summary>Internal Acessors for ReportedPropertyImdsAttestation</summary>
        Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Support.ImdsAttestation? Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20230301.IClusterInternal.ReportedPropertyImdsAttestation { get => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20230301.IClusterPropertiesInternal)Property).ReportedPropertyImdsAttestation; set => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20230301.IClusterPropertiesInternal)Property).ReportedPropertyImdsAttestation = value; }

        /// <summary>Internal Acessors for ReportedPropertyLastUpdated</summary>
        global::System.DateTime? Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20230301.IClusterInternal.ReportedPropertyLastUpdated { get => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20230301.IClusterPropertiesInternal)Property).ReportedPropertyLastUpdated; set => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20230301.IClusterPropertiesInternal)Property).ReportedPropertyLastUpdated = value; }

        /// <summary>Internal Acessors for ReportedPropertyManufacturer</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20230301.IClusterInternal.ReportedPropertyManufacturer { get => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20230301.IClusterPropertiesInternal)Property).ReportedPropertyManufacturer; set => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20230301.IClusterPropertiesInternal)Property).ReportedPropertyManufacturer = value; }

        /// <summary>Internal Acessors for ReportedPropertyNode</summary>
        Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20230301.IClusterNode[] Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20230301.IClusterInternal.ReportedPropertyNode { get => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20230301.IClusterPropertiesInternal)Property).ReportedPropertyNode; set => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20230301.IClusterPropertiesInternal)Property).ReportedPropertyNode = value; }

        /// <summary>Internal Acessors for ReportedPropertySupportedCapability</summary>
        string[] Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20230301.IClusterInternal.ReportedPropertySupportedCapability { get => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20230301.IClusterPropertiesInternal)Property).ReportedPropertySupportedCapability; set => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20230301.IClusterPropertiesInternal)Property).ReportedPropertySupportedCapability = value; }

        /// <summary>Internal Acessors for ResourceProviderObjectId</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20230301.IClusterInternal.ResourceProviderObjectId { get => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20230301.IClusterPropertiesInternal)Property).ResourceProviderObjectId; set => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20230301.IClusterPropertiesInternal)Property).ResourceProviderObjectId = value; }

        /// <summary>Internal Acessors for ServiceEndpoint</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20230301.IClusterInternal.ServiceEndpoint { get => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20230301.IClusterPropertiesInternal)Property).ServiceEndpoint; set => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20230301.IClusterPropertiesInternal)Property).ServiceEndpoint = value; }

        /// <summary>Internal Acessors for SoftwareAssuranceProperty</summary>
        Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20230301.ISoftwareAssuranceProperties Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20230301.IClusterInternal.SoftwareAssuranceProperty { get => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20230301.IClusterPropertiesInternal)Property).SoftwareAssuranceProperty; set => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20230301.IClusterPropertiesInternal)Property).SoftwareAssuranceProperty = value; }

        /// <summary>Internal Acessors for SoftwareAssurancePropertyLastUpdated</summary>
        global::System.DateTime? Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20230301.IClusterInternal.SoftwareAssurancePropertyLastUpdated { get => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20230301.IClusterPropertiesInternal)Property).SoftwareAssurancePropertyLastUpdated; set => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20230301.IClusterPropertiesInternal)Property).SoftwareAssurancePropertyLastUpdated = value; }

        /// <summary>Internal Acessors for Status</summary>
        Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Support.Status? Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20230301.IClusterInternal.Status { get => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20230301.IClusterPropertiesInternal)Property).Status; set => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20230301.IClusterPropertiesInternal)Property).Status = value; }

        /// <summary>Internal Acessors for TrialDaysRemaining</summary>
        float? Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20230301.IClusterInternal.TrialDaysRemaining { get => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20230301.IClusterPropertiesInternal)Property).TrialDaysRemaining; set => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20230301.IClusterPropertiesInternal)Property).TrialDaysRemaining = value; }

        /// <summary>Internal Acessors for Id</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api30.IResourceInternal.Id { get => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api30.IResourceInternal)__trackedResource).Id; set => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api30.IResourceInternal)__trackedResource).Id = value; }

        /// <summary>Internal Acessors for Name</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api30.IResourceInternal.Name { get => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api30.IResourceInternal)__trackedResource).Name; set => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api30.IResourceInternal)__trackedResource).Name = value; }

        /// <summary>Internal Acessors for SystemData</summary>
        Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api30.ISystemData Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api30.IResourceInternal.SystemData { get => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api30.IResourceInternal)__trackedResource).SystemData; set => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api30.IResourceInternal)__trackedResource).SystemData = value; }

        /// <summary>Internal Acessors for Type</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api30.IResourceInternal.Type { get => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api30.IResourceInternal)__trackedResource).Type; set => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api30.IResourceInternal)__trackedResource).Type = value; }

        /// <summary>The name of the resource</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Origin(Microsoft.Azure.PowerShell.Cmdlets.StackHCI.PropertyOrigin.Inherited)]
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.FormatTable(Index = 1)]
        public string Name { get => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api30.IResourceInternal)__trackedResource).Name; }

        /// <summary>Backing field for <see cref="Property" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20230301.IClusterProperties _property;

        /// <summary>Cluster properties.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Origin(Microsoft.Azure.PowerShell.Cmdlets.StackHCI.PropertyOrigin.Owned)]
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.DoNotFormat]
        internal Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20230301.IClusterProperties Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20230301.ClusterProperties()); set => this._property = value; }

        /// <summary>Provisioning state.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Origin(Microsoft.Azure.PowerShell.Cmdlets.StackHCI.PropertyOrigin.Inlined)]
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.DoNotFormat]
        public Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Support.ProvisioningState? ProvisioningState { get => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20230301.IClusterPropertiesInternal)Property).ProvisioningState; }

        /// <summary>First cluster sync timestamp.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Origin(Microsoft.Azure.PowerShell.Cmdlets.StackHCI.PropertyOrigin.Inlined)]
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.DoNotFormat]
        public global::System.DateTime? RegistrationTimestamp { get => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20230301.IClusterPropertiesInternal)Property).RegistrationTimestamp; }

        /// <summary>Unique id generated by the on-prem cluster.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Origin(Microsoft.Azure.PowerShell.Cmdlets.StackHCI.PropertyOrigin.Inlined)]
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.DoNotFormat]
        public string ReportedPropertyClusterId { get => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20230301.IClusterPropertiesInternal)Property).ReportedPropertyClusterId; }

        /// <summary>Name of the on-prem cluster connected to this resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Origin(Microsoft.Azure.PowerShell.Cmdlets.StackHCI.PropertyOrigin.Inlined)]
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.DoNotFormat]
        public string ReportedPropertyClusterName { get => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20230301.IClusterPropertiesInternal)Property).ReportedPropertyClusterName; }

        /// <summary>The node type of all the nodes of the cluster.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Origin(Microsoft.Azure.PowerShell.Cmdlets.StackHCI.PropertyOrigin.Inlined)]
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.DoNotFormat]
        public Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Support.ClusterNodeType? ReportedPropertyClusterType { get => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20230301.IClusterPropertiesInternal)Property).ReportedPropertyClusterType; }

        /// <summary>Version of the cluster software.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Origin(Microsoft.Azure.PowerShell.Cmdlets.StackHCI.PropertyOrigin.Inlined)]
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.DoNotFormat]
        public string ReportedPropertyClusterVersion { get => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20230301.IClusterPropertiesInternal)Property).ReportedPropertyClusterVersion; }

        /// <summary>Level of diagnostic data emitted by the cluster.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Origin(Microsoft.Azure.PowerShell.Cmdlets.StackHCI.PropertyOrigin.Inlined)]
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.DoNotFormat]
        public Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Support.DiagnosticLevel? ReportedPropertyDiagnosticLevel { get => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20230301.IClusterPropertiesInternal)Property).ReportedPropertyDiagnosticLevel; set => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20230301.IClusterPropertiesInternal)Property).ReportedPropertyDiagnosticLevel = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Support.DiagnosticLevel)""); }

        /// <summary>IMDS attestation status of the cluster.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Origin(Microsoft.Azure.PowerShell.Cmdlets.StackHCI.PropertyOrigin.Inlined)]
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.DoNotFormat]
        public Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Support.ImdsAttestation? ReportedPropertyImdsAttestation { get => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20230301.IClusterPropertiesInternal)Property).ReportedPropertyImdsAttestation; }

        /// <summary>Last time the cluster reported the data.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Origin(Microsoft.Azure.PowerShell.Cmdlets.StackHCI.PropertyOrigin.Inlined)]
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.DoNotFormat]
        public global::System.DateTime? ReportedPropertyLastUpdated { get => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20230301.IClusterPropertiesInternal)Property).ReportedPropertyLastUpdated; }

        /// <summary>The manufacturer of all the nodes of the cluster.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Origin(Microsoft.Azure.PowerShell.Cmdlets.StackHCI.PropertyOrigin.Inlined)]
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.DoNotFormat]
        public string ReportedPropertyManufacturer { get => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20230301.IClusterPropertiesInternal)Property).ReportedPropertyManufacturer; }

        /// <summary>List of nodes reported by the cluster.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Origin(Microsoft.Azure.PowerShell.Cmdlets.StackHCI.PropertyOrigin.Inlined)]
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.DoNotFormat]
        public Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20230301.IClusterNode[] ReportedPropertyNode { get => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20230301.IClusterPropertiesInternal)Property).ReportedPropertyNode; }

        /// <summary>Capabilities supported by the cluster.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Origin(Microsoft.Azure.PowerShell.Cmdlets.StackHCI.PropertyOrigin.Inlined)]
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.DoNotFormat]
        public string[] ReportedPropertySupportedCapability { get => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20230301.IClusterPropertiesInternal)Property).ReportedPropertySupportedCapability; }

        /// <summary>Gets the resource group name</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Origin(Microsoft.Azure.PowerShell.Cmdlets.StackHCI.PropertyOrigin.Owned)]
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.FormatTable(Index = 2, Label = @"Resource Group")]
        public string ResourceGroupName { get => (new global::System.Text.RegularExpressions.Regex("^/subscriptions/(?<subscriptionId>[^/]+)/resourceGroups/(?<resourceGroupName>[^/]+)/providers/", global::System.Text.RegularExpressions.RegexOptions.IgnoreCase).Match(this.Id).Success ? new global::System.Text.RegularExpressions.Regex("^/subscriptions/(?<subscriptionId>[^/]+)/resourceGroups/(?<resourceGroupName>[^/]+)/providers/", global::System.Text.RegularExpressions.RegexOptions.IgnoreCase).Match(this.Id).Groups["resourceGroupName"].Value : null); }

        /// <summary>Object id of RP Service Principal</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Origin(Microsoft.Azure.PowerShell.Cmdlets.StackHCI.PropertyOrigin.Inlined)]
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.DoNotFormat]
        public string ResourceProviderObjectId { get => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20230301.IClusterPropertiesInternal)Property).ResourceProviderObjectId; }

        /// <summary>Region specific DataPath Endpoint of the cluster.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Origin(Microsoft.Azure.PowerShell.Cmdlets.StackHCI.PropertyOrigin.Inlined)]
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.DoNotFormat]
        public string ServiceEndpoint { get => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20230301.IClusterPropertiesInternal)Property).ServiceEndpoint; }

        /// <summary>TimeStamp denoting the latest SA benefit applicability is validated.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Origin(Microsoft.Azure.PowerShell.Cmdlets.StackHCI.PropertyOrigin.Inlined)]
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.DoNotFormat]
        public global::System.DateTime? SoftwareAssurancePropertyLastUpdated { get => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20230301.IClusterPropertiesInternal)Property).SoftwareAssurancePropertyLastUpdated; }

        /// <summary>Customer Intent for Software Assurance Benefit.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Origin(Microsoft.Azure.PowerShell.Cmdlets.StackHCI.PropertyOrigin.Inlined)]
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.DoNotFormat]
        public Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Support.SoftwareAssuranceIntent? SoftwareAssurancePropertySoftwareAssuranceIntent { get => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20230301.IClusterPropertiesInternal)Property).SoftwareAssurancePropertySoftwareAssuranceIntent; set => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20230301.IClusterPropertiesInternal)Property).SoftwareAssurancePropertySoftwareAssuranceIntent = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Support.SoftwareAssuranceIntent)""); }

        /// <summary>Status of the Software Assurance for the cluster.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Origin(Microsoft.Azure.PowerShell.Cmdlets.StackHCI.PropertyOrigin.Inlined)]
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.DoNotFormat]
        public Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Support.SoftwareAssuranceStatus? SoftwareAssurancePropertySoftwareAssuranceStatus { get => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20230301.IClusterPropertiesInternal)Property).SoftwareAssurancePropertySoftwareAssuranceStatus; set => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20230301.IClusterPropertiesInternal)Property).SoftwareAssurancePropertySoftwareAssuranceStatus = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Support.SoftwareAssuranceStatus)""); }

        /// <summary>Status of the cluster agent.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Origin(Microsoft.Azure.PowerShell.Cmdlets.StackHCI.PropertyOrigin.Inlined)]
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.DoNotFormat]
        public Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Support.Status? Status { get => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20230301.IClusterPropertiesInternal)Property).Status; }

        /// <summary>
        /// Azure Resource Manager metadata containing createdBy and modifiedBy information.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Origin(Microsoft.Azure.PowerShell.Cmdlets.StackHCI.PropertyOrigin.Inherited)]
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.DoNotFormat]
        public Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api30.ISystemData SystemData { get => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api30.IResourceInternal)__trackedResource).SystemData; }

        /// <summary>The timestamp of resource creation (UTC).</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Origin(Microsoft.Azure.PowerShell.Cmdlets.StackHCI.PropertyOrigin.Inherited)]
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.DoNotFormat]
        public global::System.DateTime? SystemDataCreatedAt { get => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api30.IResourceInternal)__trackedResource).SystemDataCreatedAt; set => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api30.IResourceInternal)__trackedResource).SystemDataCreatedAt = value ?? default(global::System.DateTime); }

        /// <summary>The identity that created the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Origin(Microsoft.Azure.PowerShell.Cmdlets.StackHCI.PropertyOrigin.Inherited)]
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.DoNotFormat]
        public string SystemDataCreatedBy { get => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api30.IResourceInternal)__trackedResource).SystemDataCreatedBy; set => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api30.IResourceInternal)__trackedResource).SystemDataCreatedBy = value ?? null; }

        /// <summary>The type of identity that created the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Origin(Microsoft.Azure.PowerShell.Cmdlets.StackHCI.PropertyOrigin.Inherited)]
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.DoNotFormat]
        public Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Support.CreatedByType? SystemDataCreatedByType { get => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api30.IResourceInternal)__trackedResource).SystemDataCreatedByType; set => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api30.IResourceInternal)__trackedResource).SystemDataCreatedByType = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Support.CreatedByType)""); }

        /// <summary>The timestamp of resource last modification (UTC)</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Origin(Microsoft.Azure.PowerShell.Cmdlets.StackHCI.PropertyOrigin.Inherited)]
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.DoNotFormat]
        public global::System.DateTime? SystemDataLastModifiedAt { get => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api30.IResourceInternal)__trackedResource).SystemDataLastModifiedAt; set => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api30.IResourceInternal)__trackedResource).SystemDataLastModifiedAt = value ?? default(global::System.DateTime); }

        /// <summary>The identity that last modified the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Origin(Microsoft.Azure.PowerShell.Cmdlets.StackHCI.PropertyOrigin.Inherited)]
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.DoNotFormat]
        public string SystemDataLastModifiedBy { get => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api30.IResourceInternal)__trackedResource).SystemDataLastModifiedBy; set => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api30.IResourceInternal)__trackedResource).SystemDataLastModifiedBy = value ?? null; }

        /// <summary>The type of identity that last modified the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Origin(Microsoft.Azure.PowerShell.Cmdlets.StackHCI.PropertyOrigin.Inherited)]
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.DoNotFormat]
        public Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Support.CreatedByType? SystemDataLastModifiedByType { get => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api30.IResourceInternal)__trackedResource).SystemDataLastModifiedByType; set => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api30.IResourceInternal)__trackedResource).SystemDataLastModifiedByType = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Support.CreatedByType)""); }

        /// <summary>Resource tags.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Origin(Microsoft.Azure.PowerShell.Cmdlets.StackHCI.PropertyOrigin.Inherited)]
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.DoNotFormat]
        public Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api30.ITrackedResourceTags Tag { get => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api30.ITrackedResourceInternal)__trackedResource).Tag; set => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api30.ITrackedResourceInternal)__trackedResource).Tag = value ?? null /* model class */; }

        /// <summary>Number of days remaining in the trial period.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Origin(Microsoft.Azure.PowerShell.Cmdlets.StackHCI.PropertyOrigin.Inlined)]
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.DoNotFormat]
        public float? TrialDaysRemaining { get => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20230301.IClusterPropertiesInternal)Property).TrialDaysRemaining; }

        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Origin(Microsoft.Azure.PowerShell.Cmdlets.StackHCI.PropertyOrigin.Inherited)]
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.DoNotFormat]
        public string Type { get => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api30.IResourceInternal)__trackedResource).Type; }

        /// <summary>Creates an new <see cref="Cluster" /> instance.</summary>
        public Cluster()
        {

        }

        /// <summary>Validates that this object meets the validation criteria.</summary>
        /// <param name="eventListener">an <see cref="Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Runtime.IEventListener" /> instance that will receive validation
        /// events.</param>
        /// <returns>
        /// A <see cref = "global::System.Threading.Tasks.Task" /> that will be complete when validation is completed.
        /// </returns>
        public async global::System.Threading.Tasks.Task Validate(Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Runtime.IEventListener eventListener)
        {
            await eventListener.AssertNotNull(nameof(__trackedResource), __trackedResource);
            await eventListener.AssertObjectIsValid(nameof(__trackedResource), __trackedResource);
        }
    }
    /// Cluster details.
    public partial interface ICluster :
        Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Runtime.IJsonSerializable,
        Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api30.ITrackedResource
    {
        /// <summary>Object id of cluster AAD identity.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Object id of cluster AAD identity.",
        SerializedName = @"aadApplicationObjectId",
        PossibleTypes = new [] { typeof(string) })]
        string AadApplicationObjectId { get; set; }
        /// <summary>App id of cluster AAD identity.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"App id of cluster AAD identity.",
        SerializedName = @"aadClientId",
        PossibleTypes = new [] { typeof(string) })]
        string AadClientId { get; set; }
        /// <summary>Id of cluster identity service principal.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Id of cluster identity service principal.",
        SerializedName = @"aadServicePrincipalObjectId",
        PossibleTypes = new [] { typeof(string) })]
        string AadServicePrincipalObjectId { get; set; }
        /// <summary>Tenant id of cluster AAD identity.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Tenant id of cluster AAD identity.",
        SerializedName = @"aadTenantId",
        PossibleTypes = new [] { typeof(string) })]
        string AadTenantId { get; set; }
        /// <summary>Type of billing applied to the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Type of billing applied to the resource.",
        SerializedName = @"billingModel",
        PossibleTypes = new [] { typeof(string) })]
        string BillingModel { get;  }
        /// <summary>Unique, immutable resource id.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Unique, immutable resource id.",
        SerializedName = @"cloudId",
        PossibleTypes = new [] { typeof(string) })]
        string CloudId { get;  }
        /// <summary>Endpoint configured for management from the Azure portal.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Endpoint configured for management from the Azure portal.",
        SerializedName = @"cloudManagementEndpoint",
        PossibleTypes = new [] { typeof(string) })]
        string CloudManagementEndpoint { get; set; }
        /// <summary>Desired level of diagnostic data emitted by the cluster.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Desired level of diagnostic data emitted by the cluster.",
        SerializedName = @"diagnosticLevel",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Support.DiagnosticLevel) })]
        Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Support.DiagnosticLevel? DesiredPropertyDiagnosticLevel { get; set; }
        /// <summary>Desired state of Windows Server Subscription.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Desired state of Windows Server Subscription.",
        SerializedName = @"windowsServerSubscription",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Support.WindowsServerSubscription) })]
        Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Support.WindowsServerSubscription? DesiredPropertyWindowsServerSubscription { get; set; }
        /// <summary>
        /// The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.",
        SerializedName = @"principalId",
        PossibleTypes = new [] { typeof(string) })]
        string IdentityPrincipalId { get;  }
        /// <summary>
        /// The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.",
        SerializedName = @"tenantId",
        PossibleTypes = new [] { typeof(string) })]
        string IdentityTenantId { get;  }
        /// <summary>
        /// Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).",
        SerializedName = @"type",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Support.ManagedServiceIdentityType) })]
        Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Support.ManagedServiceIdentityType? IdentityType { get; set; }
        /// <summary>
        /// The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM
        /// resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}.
        /// The dictionary values can be empty objects ({}) in requests.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.",
        SerializedName = @"userAssignedIdentities",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api40.IUserAssignedIdentities) })]
        Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api40.IUserAssignedIdentities IdentityUserAssignedIdentity { get; set; }
        /// <summary>Most recent billing meter timestamp.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Most recent billing meter timestamp.",
        SerializedName = @"lastBillingTimestamp",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? LastBillingTimestamp { get;  }
        /// <summary>Most recent cluster sync timestamp.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Most recent cluster sync timestamp.",
        SerializedName = @"lastSyncTimestamp",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? LastSyncTimestamp { get;  }
        /// <summary>Provisioning state.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Provisioning state.",
        SerializedName = @"provisioningState",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Support.ProvisioningState) })]
        Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Support.ProvisioningState? ProvisioningState { get;  }
        /// <summary>First cluster sync timestamp.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"First cluster sync timestamp.",
        SerializedName = @"registrationTimestamp",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? RegistrationTimestamp { get;  }
        /// <summary>Unique id generated by the on-prem cluster.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Unique id generated by the on-prem cluster.",
        SerializedName = @"clusterId",
        PossibleTypes = new [] { typeof(string) })]
        string ReportedPropertyClusterId { get;  }
        /// <summary>Name of the on-prem cluster connected to this resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Name of the on-prem cluster connected to this resource.",
        SerializedName = @"clusterName",
        PossibleTypes = new [] { typeof(string) })]
        string ReportedPropertyClusterName { get;  }
        /// <summary>The node type of all the nodes of the cluster.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The node type of all the nodes of the cluster.",
        SerializedName = @"clusterType",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Support.ClusterNodeType) })]
        Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Support.ClusterNodeType? ReportedPropertyClusterType { get;  }
        /// <summary>Version of the cluster software.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Version of the cluster software.",
        SerializedName = @"clusterVersion",
        PossibleTypes = new [] { typeof(string) })]
        string ReportedPropertyClusterVersion { get;  }
        /// <summary>Level of diagnostic data emitted by the cluster.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Level of diagnostic data emitted by the cluster.",
        SerializedName = @"diagnosticLevel",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Support.DiagnosticLevel) })]
        Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Support.DiagnosticLevel? ReportedPropertyDiagnosticLevel { get; set; }
        /// <summary>IMDS attestation status of the cluster.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"IMDS attestation status of the cluster.",
        SerializedName = @"imdsAttestation",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Support.ImdsAttestation) })]
        Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Support.ImdsAttestation? ReportedPropertyImdsAttestation { get;  }
        /// <summary>Last time the cluster reported the data.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Last time the cluster reported the data.",
        SerializedName = @"lastUpdated",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? ReportedPropertyLastUpdated { get;  }
        /// <summary>The manufacturer of all the nodes of the cluster.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The manufacturer of all the nodes of the cluster.",
        SerializedName = @"manufacturer",
        PossibleTypes = new [] { typeof(string) })]
        string ReportedPropertyManufacturer { get;  }
        /// <summary>List of nodes reported by the cluster.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"List of nodes reported by the cluster.",
        SerializedName = @"nodes",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20230301.IClusterNode) })]
        Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20230301.IClusterNode[] ReportedPropertyNode { get;  }
        /// <summary>Capabilities supported by the cluster.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Capabilities supported by the cluster.",
        SerializedName = @"supportedCapabilities",
        PossibleTypes = new [] { typeof(string) })]
        string[] ReportedPropertySupportedCapability { get;  }
        /// <summary>Object id of RP Service Principal</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Object id of RP Service Principal",
        SerializedName = @"resourceProviderObjectId",
        PossibleTypes = new [] { typeof(string) })]
        string ResourceProviderObjectId { get;  }
        /// <summary>Region specific DataPath Endpoint of the cluster.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Region specific DataPath Endpoint of the cluster.",
        SerializedName = @"serviceEndpoint",
        PossibleTypes = new [] { typeof(string) })]
        string ServiceEndpoint { get;  }
        /// <summary>TimeStamp denoting the latest SA benefit applicability is validated.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"TimeStamp denoting the latest SA benefit applicability is validated.",
        SerializedName = @"lastUpdated",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? SoftwareAssurancePropertyLastUpdated { get;  }
        /// <summary>Customer Intent for Software Assurance Benefit.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Customer Intent for Software Assurance Benefit.",
        SerializedName = @"softwareAssuranceIntent",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Support.SoftwareAssuranceIntent) })]
        Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Support.SoftwareAssuranceIntent? SoftwareAssurancePropertySoftwareAssuranceIntent { get; set; }
        /// <summary>Status of the Software Assurance for the cluster.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Status of the Software Assurance for the cluster.",
        SerializedName = @"softwareAssuranceStatus",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Support.SoftwareAssuranceStatus) })]
        Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Support.SoftwareAssuranceStatus? SoftwareAssurancePropertySoftwareAssuranceStatus { get; set; }
        /// <summary>Status of the cluster agent.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Status of the cluster agent.",
        SerializedName = @"status",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Support.Status) })]
        Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Support.Status? Status { get;  }
        /// <summary>Number of days remaining in the trial period.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Number of days remaining in the trial period.",
        SerializedName = @"trialDaysRemaining",
        PossibleTypes = new [] { typeof(float) })]
        float? TrialDaysRemaining { get;  }

    }
    /// Cluster details.
    internal partial interface IClusterInternal :
        Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api30.ITrackedResourceInternal
    {
        /// <summary>Object id of cluster AAD identity.</summary>
        string AadApplicationObjectId { get; set; }
        /// <summary>App id of cluster AAD identity.</summary>
        string AadClientId { get; set; }
        /// <summary>Id of cluster identity service principal.</summary>
        string AadServicePrincipalObjectId { get; set; }
        /// <summary>Tenant id of cluster AAD identity.</summary>
        string AadTenantId { get; set; }
        /// <summary>Type of billing applied to the resource.</summary>
        string BillingModel { get; set; }
        /// <summary>Unique, immutable resource id.</summary>
        string CloudId { get; set; }
        /// <summary>Endpoint configured for management from the Azure portal.</summary>
        string CloudManagementEndpoint { get; set; }
        /// <summary>Desired properties of the cluster.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20230301.IClusterDesiredProperties DesiredProperty { get; set; }
        /// <summary>Desired level of diagnostic data emitted by the cluster.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Support.DiagnosticLevel? DesiredPropertyDiagnosticLevel { get; set; }
        /// <summary>Desired state of Windows Server Subscription.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Support.WindowsServerSubscription? DesiredPropertyWindowsServerSubscription { get; set; }
        /// <summary>Identity of Cluster resource</summary>
        Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api40.IManagedServiceIdentity Identity { get; set; }
        /// <summary>
        /// The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.
        /// </summary>
        string IdentityPrincipalId { get; set; }
        /// <summary>
        /// The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.
        /// </summary>
        string IdentityTenantId { get; set; }
        /// <summary>
        /// Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Support.ManagedServiceIdentityType? IdentityType { get; set; }
        /// <summary>
        /// The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM
        /// resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}.
        /// The dictionary values can be empty objects ({}) in requests.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api40.IUserAssignedIdentities IdentityUserAssignedIdentity { get; set; }
        /// <summary>Most recent billing meter timestamp.</summary>
        global::System.DateTime? LastBillingTimestamp { get; set; }
        /// <summary>Most recent cluster sync timestamp.</summary>
        global::System.DateTime? LastSyncTimestamp { get; set; }
        /// <summary>Cluster properties.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20230301.IClusterProperties Property { get; set; }
        /// <summary>Provisioning state.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Support.ProvisioningState? ProvisioningState { get; set; }
        /// <summary>First cluster sync timestamp.</summary>
        global::System.DateTime? RegistrationTimestamp { get; set; }
        /// <summary>Properties reported by cluster agent.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20230301.IClusterReportedProperties ReportedProperty { get; set; }
        /// <summary>Unique id generated by the on-prem cluster.</summary>
        string ReportedPropertyClusterId { get; set; }
        /// <summary>Name of the on-prem cluster connected to this resource.</summary>
        string ReportedPropertyClusterName { get; set; }
        /// <summary>The node type of all the nodes of the cluster.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Support.ClusterNodeType? ReportedPropertyClusterType { get; set; }
        /// <summary>Version of the cluster software.</summary>
        string ReportedPropertyClusterVersion { get; set; }
        /// <summary>Level of diagnostic data emitted by the cluster.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Support.DiagnosticLevel? ReportedPropertyDiagnosticLevel { get; set; }
        /// <summary>IMDS attestation status of the cluster.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Support.ImdsAttestation? ReportedPropertyImdsAttestation { get; set; }
        /// <summary>Last time the cluster reported the data.</summary>
        global::System.DateTime? ReportedPropertyLastUpdated { get; set; }
        /// <summary>The manufacturer of all the nodes of the cluster.</summary>
        string ReportedPropertyManufacturer { get; set; }
        /// <summary>List of nodes reported by the cluster.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20230301.IClusterNode[] ReportedPropertyNode { get; set; }
        /// <summary>Capabilities supported by the cluster.</summary>
        string[] ReportedPropertySupportedCapability { get; set; }
        /// <summary>Object id of RP Service Principal</summary>
        string ResourceProviderObjectId { get; set; }
        /// <summary>Region specific DataPath Endpoint of the cluster.</summary>
        string ServiceEndpoint { get; set; }
        /// <summary>Software Assurance properties of the cluster.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20230301.ISoftwareAssuranceProperties SoftwareAssuranceProperty { get; set; }
        /// <summary>TimeStamp denoting the latest SA benefit applicability is validated.</summary>
        global::System.DateTime? SoftwareAssurancePropertyLastUpdated { get; set; }
        /// <summary>Customer Intent for Software Assurance Benefit.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Support.SoftwareAssuranceIntent? SoftwareAssurancePropertySoftwareAssuranceIntent { get; set; }
        /// <summary>Status of the Software Assurance for the cluster.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Support.SoftwareAssuranceStatus? SoftwareAssurancePropertySoftwareAssuranceStatus { get; set; }
        /// <summary>Status of the cluster agent.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Support.Status? Status { get; set; }
        /// <summary>Number of days remaining in the trial period.</summary>
        float? TrialDaysRemaining { get; set; }

    }
}