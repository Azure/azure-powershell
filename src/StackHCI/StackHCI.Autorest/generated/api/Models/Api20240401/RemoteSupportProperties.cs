// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401
{
    using static Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Runtime.Extensions;

    /// <summary>Remote Support properties of the cluster.</summary>
    public partial class RemoteSupportProperties :
        Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.IRemoteSupportProperties,
        Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.IRemoteSupportPropertiesInternal
    {

        /// <summary>Backing field for <see cref="AccessLevel" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Support.AccessLevel? _accessLevel;

        /// <summary>Remote Support Access Level</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Origin(Microsoft.Azure.PowerShell.Cmdlets.StackHCI.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Support.AccessLevel? AccessLevel { get => this._accessLevel; }

        /// <summary>Backing field for <see cref="ExpirationTimeStamp" /> property.</summary>
        private global::System.DateTime? _expirationTimeStamp;

        /// <summary>Expiration DateTimeStamp when Remote Support Access will be expired</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Origin(Microsoft.Azure.PowerShell.Cmdlets.StackHCI.PropertyOrigin.Owned)]
        public global::System.DateTime? ExpirationTimeStamp { get => this._expirationTimeStamp; }

        /// <summary>Internal Acessors for AccessLevel</summary>
        Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Support.AccessLevel? Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.IRemoteSupportPropertiesInternal.AccessLevel { get => this._accessLevel; set { {_accessLevel = value;} } }

        /// <summary>Internal Acessors for ExpirationTimeStamp</summary>
        global::System.DateTime? Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.IRemoteSupportPropertiesInternal.ExpirationTimeStamp { get => this._expirationTimeStamp; set { {_expirationTimeStamp = value;} } }

        /// <summary>Internal Acessors for RemoteSupportNodeSetting</summary>
        Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.IRemoteSupportNodeSettings[] Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.IRemoteSupportPropertiesInternal.RemoteSupportNodeSetting { get => this._remoteSupportNodeSetting; set { {_remoteSupportNodeSetting = value;} } }

        /// <summary>Internal Acessors for RemoteSupportSessionDetail</summary>
        Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.IPerNodeRemoteSupportSession[] Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.IRemoteSupportPropertiesInternal.RemoteSupportSessionDetail { get => this._remoteSupportSessionDetail; set { {_remoteSupportSessionDetail = value;} } }

        /// <summary>Internal Acessors for RemoteSupportType</summary>
        Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Support.RemoteSupportType? Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.IRemoteSupportPropertiesInternal.RemoteSupportType { get => this._remoteSupportType; set { {_remoteSupportType = value;} } }

        /// <summary>Backing field for <see cref="RemoteSupportNodeSetting" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.IRemoteSupportNodeSettings[] _remoteSupportNodeSetting;

        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Origin(Microsoft.Azure.PowerShell.Cmdlets.StackHCI.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.IRemoteSupportNodeSettings[] RemoteSupportNodeSetting { get => this._remoteSupportNodeSetting; }

        /// <summary>Backing field for <see cref="RemoteSupportSessionDetail" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.IPerNodeRemoteSupportSession[] _remoteSupportSessionDetail;

        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Origin(Microsoft.Azure.PowerShell.Cmdlets.StackHCI.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.IPerNodeRemoteSupportSession[] RemoteSupportSessionDetail { get => this._remoteSupportSessionDetail; }

        /// <summary>Backing field for <see cref="RemoteSupportType" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Support.RemoteSupportType? _remoteSupportType;

        /// <summary>Remote Support Type for cluster</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Origin(Microsoft.Azure.PowerShell.Cmdlets.StackHCI.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Support.RemoteSupportType? RemoteSupportType { get => this._remoteSupportType; }

        /// <summary>Creates an new <see cref="RemoteSupportProperties" /> instance.</summary>
        public RemoteSupportProperties()
        {

        }
    }
    /// Remote Support properties of the cluster.
    public partial interface IRemoteSupportProperties :
        Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Runtime.IJsonSerializable
    {
        /// <summary>Remote Support Access Level</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Remote Support Access Level",
        SerializedName = @"accessLevel",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Support.AccessLevel) })]
        Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Support.AccessLevel? AccessLevel { get;  }
        /// <summary>Expiration DateTimeStamp when Remote Support Access will be expired</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Expiration DateTimeStamp when Remote Support Access will be expired",
        SerializedName = @"expirationTimeStamp",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? ExpirationTimeStamp { get;  }

        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"",
        SerializedName = @"remoteSupportNodeSettings",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.IRemoteSupportNodeSettings) })]
        Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.IRemoteSupportNodeSettings[] RemoteSupportNodeSetting { get;  }

        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"",
        SerializedName = @"remoteSupportSessionDetails",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.IPerNodeRemoteSupportSession) })]
        Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.IPerNodeRemoteSupportSession[] RemoteSupportSessionDetail { get;  }
        /// <summary>Remote Support Type for cluster</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Remote Support Type for cluster",
        SerializedName = @"remoteSupportType",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Support.RemoteSupportType) })]
        Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Support.RemoteSupportType? RemoteSupportType { get;  }

    }
    /// Remote Support properties of the cluster.
    internal partial interface IRemoteSupportPropertiesInternal

    {
        /// <summary>Remote Support Access Level</summary>
        Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Support.AccessLevel? AccessLevel { get; set; }
        /// <summary>Expiration DateTimeStamp when Remote Support Access will be expired</summary>
        global::System.DateTime? ExpirationTimeStamp { get; set; }

        Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.IRemoteSupportNodeSettings[] RemoteSupportNodeSetting { get; set; }

        Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.IPerNodeRemoteSupportSession[] RemoteSupportSessionDetail { get; set; }
        /// <summary>Remote Support Type for cluster</summary>
        Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Support.RemoteSupportType? RemoteSupportType { get; set; }

    }
}