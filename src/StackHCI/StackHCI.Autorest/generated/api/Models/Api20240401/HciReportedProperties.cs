// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401
{
    using static Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Runtime.Extensions;

    /// <summary>The device Configuration for HCI device.</summary>
    public partial class HciReportedProperties :
        Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.IHciReportedProperties,
        Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.IHciReportedPropertiesInternal,
        Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Runtime.IValidates
    {
        /// <summary>
        /// Backing field for Inherited model <see cref= "Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.IReportedProperties"
        /// />
        /// </summary>
        private Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.IReportedProperties __reportedProperties = new Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.ReportedProperties();

        /// <summary>edge device state.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Origin(Microsoft.Azure.PowerShell.Cmdlets.StackHCI.PropertyOrigin.Inherited)]
        public Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Support.DeviceState? DeviceState { get => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.IReportedPropertiesInternal)__reportedProperties).DeviceState; }

        /// <summary>Extensions details for edge device.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Origin(Microsoft.Azure.PowerShell.Cmdlets.StackHCI.PropertyOrigin.Inherited)]
        public Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.IExtensionProfile ExtensionProfile { get => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.IReportedPropertiesInternal)__reportedProperties).ExtensionProfile; }

        /// <summary>List of Arc extensions installed on edge device.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Origin(Microsoft.Azure.PowerShell.Cmdlets.StackHCI.PropertyOrigin.Inherited)]
        public Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.IExtensionAutoGenerated[] ExtensionProfileExtension { get => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.IReportedPropertiesInternal)__reportedProperties).ExtensionProfileExtension; }

        /// <summary>
        /// Optional parameter required only for 3 Nodes Switchless deployments. This allows users to specify IPs and Mask for Storage
        /// NICs when Network ATC is not assigning the IPs for storage automatically.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Origin(Microsoft.Azure.PowerShell.Cmdlets.StackHCI.PropertyOrigin.Inlined)]
        public bool? HostNetworkEnableStorageAutoIP { get => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.IHciNetworkProfileInternal)NetworkProfile).HostNetworkEnableStorageAutoIP; }

        /// <summary>
        /// The network intents assigned to the network reference pattern used for the deployment. Each intent will define its own
        /// name, traffic type, adapter names, and overrides as recommended by your OEM.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Origin(Microsoft.Azure.PowerShell.Cmdlets.StackHCI.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.IIntentsAutoGenerated[] HostNetworkIntent { get => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.IHciNetworkProfileInternal)NetworkProfile).HostNetworkIntent; }

        /// <summary>
        /// Defines how the storage adapters between nodes are connected either switch or switch less.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Origin(Microsoft.Azure.PowerShell.Cmdlets.StackHCI.PropertyOrigin.Inlined)]
        public bool? HostNetworkStorageConnectivitySwitchless { get => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.IHciNetworkProfileInternal)NetworkProfile).HostNetworkStorageConnectivitySwitchless; }

        /// <summary>List of StorageNetworks config to deploy AzureStackHCI Cluster.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Origin(Microsoft.Azure.PowerShell.Cmdlets.StackHCI.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.IStorageNetworksAutoGenerated[] HostNetworkStorageNetwork { get => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.IHciNetworkProfileInternal)NetworkProfile).HostNetworkStorageNetwork; }

        /// <summary>Internal Acessors for HostNetworkEnableStorageAutoIP</summary>
        bool? Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.IHciReportedPropertiesInternal.HostNetworkEnableStorageAutoIP { get => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.IHciNetworkProfileInternal)NetworkProfile).HostNetworkEnableStorageAutoIP; set => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.IHciNetworkProfileInternal)NetworkProfile).HostNetworkEnableStorageAutoIP = value; }

        /// <summary>Internal Acessors for HostNetworkIntent</summary>
        Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.IIntentsAutoGenerated[] Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.IHciReportedPropertiesInternal.HostNetworkIntent { get => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.IHciNetworkProfileInternal)NetworkProfile).HostNetworkIntent; set => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.IHciNetworkProfileInternal)NetworkProfile).HostNetworkIntent = value; }

        /// <summary>Internal Acessors for HostNetworkStorageConnectivitySwitchless</summary>
        bool? Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.IHciReportedPropertiesInternal.HostNetworkStorageConnectivitySwitchless { get => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.IHciNetworkProfileInternal)NetworkProfile).HostNetworkStorageConnectivitySwitchless; set => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.IHciNetworkProfileInternal)NetworkProfile).HostNetworkStorageConnectivitySwitchless = value; }

        /// <summary>Internal Acessors for HostNetworkStorageNetwork</summary>
        Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.IStorageNetworksAutoGenerated[] Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.IHciReportedPropertiesInternal.HostNetworkStorageNetwork { get => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.IHciNetworkProfileInternal)NetworkProfile).HostNetworkStorageNetwork; set => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.IHciNetworkProfileInternal)NetworkProfile).HostNetworkStorageNetwork = value; }

        /// <summary>Internal Acessors for NetworkProfile</summary>
        Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.IHciNetworkProfile Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.IHciReportedPropertiesInternal.NetworkProfile { get => (this._networkProfile = this._networkProfile ?? new Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.HciNetworkProfile()); set { {_networkProfile = value;} } }

        /// <summary>Internal Acessors for NetworkProfileHostNetwork</summary>
        Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.IHostNetworkAutoGenerated Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.IHciReportedPropertiesInternal.NetworkProfileHostNetwork { get => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.IHciNetworkProfileInternal)NetworkProfile).HostNetwork; set => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.IHciNetworkProfileInternal)NetworkProfile).HostNetwork = value; }

        /// <summary>Internal Acessors for NetworkProfileNicDetail</summary>
        Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.IHciNicDetail[] Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.IHciReportedPropertiesInternal.NetworkProfileNicDetail { get => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.IHciNetworkProfileInternal)NetworkProfile).NicDetail; set => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.IHciNetworkProfileInternal)NetworkProfile).NicDetail = value; }

        /// <summary>Internal Acessors for NetworkProfileSwitchDetail</summary>
        Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.ISwitchDetail[] Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.IHciReportedPropertiesInternal.NetworkProfileSwitchDetail { get => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.IHciNetworkProfileInternal)NetworkProfile).SwitchDetail; set => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.IHciNetworkProfileInternal)NetworkProfile).SwitchDetail = value; }

        /// <summary>Internal Acessors for OSProfile</summary>
        Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.IHciOSProfile Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.IHciReportedPropertiesInternal.OSProfile { get => (this._oSProfile = this._oSProfile ?? new Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.HciOSProfile()); set { {_oSProfile = value;} } }

        /// <summary>Internal Acessors for OSProfileAssemblyVersion</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.IHciReportedPropertiesInternal.OSProfileAssemblyVersion { get => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.IHciOSProfileInternal)OSProfile).AssemblyVersion; set => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.IHciOSProfileInternal)OSProfile).AssemblyVersion = value; }

        /// <summary>Internal Acessors for OSProfileBootType</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.IHciReportedPropertiesInternal.OSProfileBootType { get => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.IHciOSProfileInternal)OSProfile).BootType; set => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.IHciOSProfileInternal)OSProfile).BootType = value; }

        /// <summary>Internal Acessors for SbeDeploymentPackageInfo</summary>
        Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.ISbeDeploymentPackageInfo Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.IHciReportedPropertiesInternal.SbeDeploymentPackageInfo { get => (this._sbeDeploymentPackageInfo = this._sbeDeploymentPackageInfo ?? new Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.SbeDeploymentPackageInfo()); set { {_sbeDeploymentPackageInfo = value;} } }

        /// <summary>Internal Acessors for SbeDeploymentPackageInfoCode</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.IHciReportedPropertiesInternal.SbeDeploymentPackageInfoCode { get => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.ISbeDeploymentPackageInfoInternal)SbeDeploymentPackageInfo).Code; set => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.ISbeDeploymentPackageInfoInternal)SbeDeploymentPackageInfo).Code = value; }

        /// <summary>Internal Acessors for SbeDeploymentPackageInfoMessage</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.IHciReportedPropertiesInternal.SbeDeploymentPackageInfoMessage { get => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.ISbeDeploymentPackageInfoInternal)SbeDeploymentPackageInfo).Message; set => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.ISbeDeploymentPackageInfoInternal)SbeDeploymentPackageInfo).Message = value; }

        /// <summary>Internal Acessors for SbeDeploymentPackageInfoSbeManifest</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.IHciReportedPropertiesInternal.SbeDeploymentPackageInfoSbeManifest { get => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.ISbeDeploymentPackageInfoInternal)SbeDeploymentPackageInfo).SbeManifest; set => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.ISbeDeploymentPackageInfoInternal)SbeDeploymentPackageInfo).SbeManifest = value; }

        /// <summary>Internal Acessors for DeviceState</summary>
        Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Support.DeviceState? Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.IReportedPropertiesInternal.DeviceState { get => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.IReportedPropertiesInternal)__reportedProperties).DeviceState; set => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.IReportedPropertiesInternal)__reportedProperties).DeviceState = value; }

        /// <summary>Internal Acessors for ExtensionProfile</summary>
        Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.IExtensionProfile Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.IReportedPropertiesInternal.ExtensionProfile { get => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.IReportedPropertiesInternal)__reportedProperties).ExtensionProfile; set => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.IReportedPropertiesInternal)__reportedProperties).ExtensionProfile = value; }

        /// <summary>Internal Acessors for ExtensionProfileExtension</summary>
        Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.IExtensionAutoGenerated[] Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.IReportedPropertiesInternal.ExtensionProfileExtension { get => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.IReportedPropertiesInternal)__reportedProperties).ExtensionProfileExtension; set => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.IReportedPropertiesInternal)__reportedProperties).ExtensionProfileExtension = value; }

        /// <summary>Backing field for <see cref="NetworkProfile" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.IHciNetworkProfile _networkProfile;

        /// <summary>HCI device network information.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Origin(Microsoft.Azure.PowerShell.Cmdlets.StackHCI.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.IHciNetworkProfile NetworkProfile { get => (this._networkProfile = this._networkProfile ?? new Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.HciNetworkProfile()); }

        /// <summary>List of NIC Details of device.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Origin(Microsoft.Azure.PowerShell.Cmdlets.StackHCI.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.IHciNicDetail[] NetworkProfileNicDetail { get => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.IHciNetworkProfileInternal)NetworkProfile).NicDetail; }

        /// <summary>List of switch details for edge device.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Origin(Microsoft.Azure.PowerShell.Cmdlets.StackHCI.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.ISwitchDetail[] NetworkProfileSwitchDetail { get => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.IHciNetworkProfileInternal)NetworkProfile).SwitchDetail; }

        /// <summary>Backing field for <see cref="OSProfile" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.IHciOSProfile _oSProfile;

        /// <summary>HCI device OS specific information.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Origin(Microsoft.Azure.PowerShell.Cmdlets.StackHCI.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.IHciOSProfile OSProfile { get => (this._oSProfile = this._oSProfile ?? new Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.HciOSProfile()); }

        /// <summary>Version of assembly present on device</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Origin(Microsoft.Azure.PowerShell.Cmdlets.StackHCI.PropertyOrigin.Inlined)]
        public string OSProfileAssemblyVersion { get => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.IHciOSProfileInternal)OSProfile).AssemblyVersion; }

        /// <summary>The boot type of the device. e.g. UEFI, Legacy etc</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Origin(Microsoft.Azure.PowerShell.Cmdlets.StackHCI.PropertyOrigin.Inlined)]
        public string OSProfileBootType { get => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.IHciOSProfileInternal)OSProfile).BootType; }

        /// <summary>Backing field for <see cref="SbeDeploymentPackageInfo" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.ISbeDeploymentPackageInfo _sbeDeploymentPackageInfo;

        /// <summary>Solution builder extension (SBE) deployment package information.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Origin(Microsoft.Azure.PowerShell.Cmdlets.StackHCI.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.ISbeDeploymentPackageInfo SbeDeploymentPackageInfo { get => (this._sbeDeploymentPackageInfo = this._sbeDeploymentPackageInfo ?? new Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.SbeDeploymentPackageInfo()); }

        /// <summary>SBE deployment validation code.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Origin(Microsoft.Azure.PowerShell.Cmdlets.StackHCI.PropertyOrigin.Inlined)]
        public string SbeDeploymentPackageInfoCode { get => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.ISbeDeploymentPackageInfoInternal)SbeDeploymentPackageInfo).Code; }

        /// <summary>A detailed message that explains the SBE package validation result.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Origin(Microsoft.Azure.PowerShell.Cmdlets.StackHCI.PropertyOrigin.Inlined)]
        public string SbeDeploymentPackageInfoMessage { get => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.ISbeDeploymentPackageInfoInternal)SbeDeploymentPackageInfo).Message; }

        /// <summary>
        /// This represents discovered update results for matching updates and store it as SBE manifest.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Origin(Microsoft.Azure.PowerShell.Cmdlets.StackHCI.PropertyOrigin.Inlined)]
        public string SbeDeploymentPackageInfoSbeManifest { get => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.ISbeDeploymentPackageInfoInternal)SbeDeploymentPackageInfo).SbeManifest; }

        /// <summary>Creates an new <see cref="HciReportedProperties" /> instance.</summary>
        public HciReportedProperties()
        {

        }

        /// <summary>Validates that this object meets the validation criteria.</summary>
        /// <param name="eventListener">an <see cref="Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Runtime.IEventListener" /> instance that will receive validation
        /// events.</param>
        /// <returns>
        /// A <see cref = "global::System.Threading.Tasks.Task" /> that will be complete when validation is completed.
        /// </returns>
        public async global::System.Threading.Tasks.Task Validate(Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Runtime.IEventListener eventListener)
        {
            await eventListener.AssertNotNull(nameof(__reportedProperties), __reportedProperties);
            await eventListener.AssertObjectIsValid(nameof(__reportedProperties), __reportedProperties);
        }
    }
    /// The device Configuration for HCI device.
    public partial interface IHciReportedProperties :
        Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Runtime.IJsonSerializable,
        Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.IReportedProperties
    {
        /// <summary>
        /// Optional parameter required only for 3 Nodes Switchless deployments. This allows users to specify IPs and Mask for Storage
        /// NICs when Network ATC is not assigning the IPs for storage automatically.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Optional parameter required only for 3 Nodes Switchless deployments. This allows users to specify IPs and Mask for Storage NICs when Network ATC is not assigning the IPs for storage automatically.",
        SerializedName = @"enableStorageAutoIp",
        PossibleTypes = new [] { typeof(bool) })]
        bool? HostNetworkEnableStorageAutoIP { get;  }
        /// <summary>
        /// The network intents assigned to the network reference pattern used for the deployment. Each intent will define its own
        /// name, traffic type, adapter names, and overrides as recommended by your OEM.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The network intents assigned to the network reference pattern used for the deployment. Each intent will define its own name, traffic type, adapter names, and overrides as recommended by your OEM.",
        SerializedName = @"intents",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.IIntentsAutoGenerated) })]
        Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.IIntentsAutoGenerated[] HostNetworkIntent { get;  }
        /// <summary>
        /// Defines how the storage adapters between nodes are connected either switch or switch less.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Defines how the storage adapters between nodes are connected either switch or switch less.",
        SerializedName = @"storageConnectivitySwitchless",
        PossibleTypes = new [] { typeof(bool) })]
        bool? HostNetworkStorageConnectivitySwitchless { get;  }
        /// <summary>List of StorageNetworks config to deploy AzureStackHCI Cluster.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"List of StorageNetworks config to deploy AzureStackHCI Cluster.",
        SerializedName = @"storageNetworks",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.IStorageNetworksAutoGenerated) })]
        Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.IStorageNetworksAutoGenerated[] HostNetworkStorageNetwork { get;  }
        /// <summary>List of NIC Details of device.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"List of NIC Details of device.",
        SerializedName = @"nicDetails",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.IHciNicDetail) })]
        Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.IHciNicDetail[] NetworkProfileNicDetail { get;  }
        /// <summary>List of switch details for edge device.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"List of switch details for edge device.",
        SerializedName = @"switchDetails",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.ISwitchDetail) })]
        Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.ISwitchDetail[] NetworkProfileSwitchDetail { get;  }
        /// <summary>Version of assembly present on device</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Version of assembly present on device",
        SerializedName = @"assemblyVersion",
        PossibleTypes = new [] { typeof(string) })]
        string OSProfileAssemblyVersion { get;  }
        /// <summary>The boot type of the device. e.g. UEFI, Legacy etc</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The boot type of the device. e.g. UEFI, Legacy etc",
        SerializedName = @"bootType",
        PossibleTypes = new [] { typeof(string) })]
        string OSProfileBootType { get;  }
        /// <summary>SBE deployment validation code.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"SBE deployment validation code.",
        SerializedName = @"code",
        PossibleTypes = new [] { typeof(string) })]
        string SbeDeploymentPackageInfoCode { get;  }
        /// <summary>A detailed message that explains the SBE package validation result.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"A detailed message that explains the SBE package validation result.",
        SerializedName = @"message",
        PossibleTypes = new [] { typeof(string) })]
        string SbeDeploymentPackageInfoMessage { get;  }
        /// <summary>
        /// This represents discovered update results for matching updates and store it as SBE manifest.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"This represents discovered update results for matching updates and store it as SBE manifest.",
        SerializedName = @"sbeManifest",
        PossibleTypes = new [] { typeof(string) })]
        string SbeDeploymentPackageInfoSbeManifest { get;  }

    }
    /// The device Configuration for HCI device.
    internal partial interface IHciReportedPropertiesInternal :
        Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.IReportedPropertiesInternal
    {
        /// <summary>
        /// Optional parameter required only for 3 Nodes Switchless deployments. This allows users to specify IPs and Mask for Storage
        /// NICs when Network ATC is not assigning the IPs for storage automatically.
        /// </summary>
        bool? HostNetworkEnableStorageAutoIP { get; set; }
        /// <summary>
        /// The network intents assigned to the network reference pattern used for the deployment. Each intent will define its own
        /// name, traffic type, adapter names, and overrides as recommended by your OEM.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.IIntentsAutoGenerated[] HostNetworkIntent { get; set; }
        /// <summary>
        /// Defines how the storage adapters between nodes are connected either switch or switch less.
        /// </summary>
        bool? HostNetworkStorageConnectivitySwitchless { get; set; }
        /// <summary>List of StorageNetworks config to deploy AzureStackHCI Cluster.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.IStorageNetworksAutoGenerated[] HostNetworkStorageNetwork { get; set; }
        /// <summary>HCI device network information.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.IHciNetworkProfile NetworkProfile { get; set; }
        /// <summary>HostNetwork config to deploy AzureStackHCI Cluster.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.IHostNetworkAutoGenerated NetworkProfileHostNetwork { get; set; }
        /// <summary>List of NIC Details of device.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.IHciNicDetail[] NetworkProfileNicDetail { get; set; }
        /// <summary>List of switch details for edge device.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.ISwitchDetail[] NetworkProfileSwitchDetail { get; set; }
        /// <summary>HCI device OS specific information.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.IHciOSProfile OSProfile { get; set; }
        /// <summary>Version of assembly present on device</summary>
        string OSProfileAssemblyVersion { get; set; }
        /// <summary>The boot type of the device. e.g. UEFI, Legacy etc</summary>
        string OSProfileBootType { get; set; }
        /// <summary>Solution builder extension (SBE) deployment package information.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.ISbeDeploymentPackageInfo SbeDeploymentPackageInfo { get; set; }
        /// <summary>SBE deployment validation code.</summary>
        string SbeDeploymentPackageInfoCode { get; set; }
        /// <summary>A detailed message that explains the SBE package validation result.</summary>
        string SbeDeploymentPackageInfoMessage { get; set; }
        /// <summary>
        /// This represents discovered update results for matching updates and store it as SBE manifest.
        /// </summary>
        string SbeDeploymentPackageInfoSbeManifest { get; set; }

    }
}