// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401
{
    using static Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Runtime.Extensions;

    /// <summary>Attestation configurations for isolated VM (e.g. TVM, CVM) of the cluster.</summary>
    public partial class IsolatedVMAttestationConfiguration :
        Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.IIsolatedVMAttestationConfiguration,
        Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.IIsolatedVMAttestationConfigurationInternal
    {

        /// <summary>Backing field for <see cref="AttestationResourceId" /> property.</summary>
        private string _attestationResourceId;

        /// <summary>
        /// Fully qualified Azure resource id of the Microsoft Azure attestation resource associated with this cluster.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Origin(Microsoft.Azure.PowerShell.Cmdlets.StackHCI.PropertyOrigin.Owned)]
        public string AttestationResourceId { get => this._attestationResourceId; }

        /// <summary>Backing field for <see cref="AttestationServiceEndpoint" /> property.</summary>
        private string _attestationServiceEndpoint;

        /// <summary>
        /// Region specific endpoint for Microsoft Azure Attestation service for the cluster
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Origin(Microsoft.Azure.PowerShell.Cmdlets.StackHCI.PropertyOrigin.Owned)]
        public string AttestationServiceEndpoint { get => this._attestationServiceEndpoint; }

        /// <summary>Internal Acessors for AttestationResourceId</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.IIsolatedVMAttestationConfigurationInternal.AttestationResourceId { get => this._attestationResourceId; set { {_attestationResourceId = value;} } }

        /// <summary>Internal Acessors for AttestationServiceEndpoint</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.IIsolatedVMAttestationConfigurationInternal.AttestationServiceEndpoint { get => this._attestationServiceEndpoint; set { {_attestationServiceEndpoint = value;} } }

        /// <summary>Internal Acessors for RelyingPartyServiceEndpoint</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.IIsolatedVMAttestationConfigurationInternal.RelyingPartyServiceEndpoint { get => this._relyingPartyServiceEndpoint; set { {_relyingPartyServiceEndpoint = value;} } }

        /// <summary>Backing field for <see cref="RelyingPartyServiceEndpoint" /> property.</summary>
        private string _relyingPartyServiceEndpoint;

        /// <summary>Region specific endpoint for relying party service.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Origin(Microsoft.Azure.PowerShell.Cmdlets.StackHCI.PropertyOrigin.Owned)]
        public string RelyingPartyServiceEndpoint { get => this._relyingPartyServiceEndpoint; }

        /// <summary>Creates an new <see cref="IsolatedVMAttestationConfiguration" /> instance.</summary>
        public IsolatedVMAttestationConfiguration()
        {

        }
    }
    /// Attestation configurations for isolated VM (e.g. TVM, CVM) of the cluster.
    public partial interface IIsolatedVMAttestationConfiguration :
        Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Runtime.IJsonSerializable
    {
        /// <summary>
        /// Fully qualified Azure resource id of the Microsoft Azure attestation resource associated with this cluster.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Fully qualified Azure resource id of the Microsoft Azure attestation resource associated with this cluster.",
        SerializedName = @"attestationResourceId",
        PossibleTypes = new [] { typeof(string) })]
        string AttestationResourceId { get;  }
        /// <summary>
        /// Region specific endpoint for Microsoft Azure Attestation service for the cluster
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Region specific endpoint for Microsoft Azure Attestation service for the cluster",
        SerializedName = @"attestationServiceEndpoint",
        PossibleTypes = new [] { typeof(string) })]
        string AttestationServiceEndpoint { get;  }
        /// <summary>Region specific endpoint for relying party service.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Region specific endpoint for relying party service.",
        SerializedName = @"relyingPartyServiceEndpoint",
        PossibleTypes = new [] { typeof(string) })]
        string RelyingPartyServiceEndpoint { get;  }

    }
    /// Attestation configurations for isolated VM (e.g. TVM, CVM) of the cluster.
    internal partial interface IIsolatedVMAttestationConfigurationInternal

    {
        /// <summary>
        /// Fully qualified Azure resource id of the Microsoft Azure attestation resource associated with this cluster.
        /// </summary>
        string AttestationResourceId { get; set; }
        /// <summary>
        /// Region specific endpoint for Microsoft Azure Attestation service for the cluster
        /// </summary>
        string AttestationServiceEndpoint { get; set; }
        /// <summary>Region specific endpoint for relying party service.</summary>
        string RelyingPartyServiceEndpoint { get; set; }

    }
}