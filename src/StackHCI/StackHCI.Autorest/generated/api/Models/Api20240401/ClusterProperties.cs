// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401
{
    using static Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Runtime.Extensions;

    /// <summary>Cluster properties.</summary>
    public partial class ClusterProperties :
        Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.IClusterProperties,
        Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.IClusterPropertiesInternal
    {

        /// <summary>Backing field for <see cref="AadApplicationObjectId" /> property.</summary>
        private string _aadApplicationObjectId;

        /// <summary>Object id of cluster AAD identity.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Origin(Microsoft.Azure.PowerShell.Cmdlets.StackHCI.PropertyOrigin.Owned)]
        public string AadApplicationObjectId { get => this._aadApplicationObjectId; set => this._aadApplicationObjectId = value; }

        /// <summary>Backing field for <see cref="AadClientId" /> property.</summary>
        private string _aadClientId;

        /// <summary>App id of cluster AAD identity.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Origin(Microsoft.Azure.PowerShell.Cmdlets.StackHCI.PropertyOrigin.Owned)]
        public string AadClientId { get => this._aadClientId; set => this._aadClientId = value; }

        /// <summary>Backing field for <see cref="AadServicePrincipalObjectId" /> property.</summary>
        private string _aadServicePrincipalObjectId;

        /// <summary>Id of cluster identity service principal.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Origin(Microsoft.Azure.PowerShell.Cmdlets.StackHCI.PropertyOrigin.Owned)]
        public string AadServicePrincipalObjectId { get => this._aadServicePrincipalObjectId; set => this._aadServicePrincipalObjectId = value; }

        /// <summary>Backing field for <see cref="AadTenantId" /> property.</summary>
        private string _aadTenantId;

        /// <summary>Tenant id of cluster AAD identity.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Origin(Microsoft.Azure.PowerShell.Cmdlets.StackHCI.PropertyOrigin.Owned)]
        public string AadTenantId { get => this._aadTenantId; set => this._aadTenantId = value; }

        /// <summary>Backing field for <see cref="BillingModel" /> property.</summary>
        private string _billingModel;

        /// <summary>Type of billing applied to the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Origin(Microsoft.Azure.PowerShell.Cmdlets.StackHCI.PropertyOrigin.Owned)]
        public string BillingModel { get => this._billingModel; }

        /// <summary>Backing field for <see cref="CloudId" /> property.</summary>
        private string _cloudId;

        /// <summary>Unique, immutable resource id.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Origin(Microsoft.Azure.PowerShell.Cmdlets.StackHCI.PropertyOrigin.Owned)]
        public string CloudId { get => this._cloudId; }

        /// <summary>Backing field for <see cref="CloudManagementEndpoint" /> property.</summary>
        private string _cloudManagementEndpoint;

        /// <summary>Endpoint configured for management from the Azure portal.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Origin(Microsoft.Azure.PowerShell.Cmdlets.StackHCI.PropertyOrigin.Owned)]
        public string CloudManagementEndpoint { get => this._cloudManagementEndpoint; set => this._cloudManagementEndpoint = value; }

        /// <summary>Backing field for <see cref="ConnectivityStatus" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Support.ConnectivityStatus? _connectivityStatus;

        /// <summary>Overall connectivity status for the cluster resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Origin(Microsoft.Azure.PowerShell.Cmdlets.StackHCI.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Support.ConnectivityStatus? ConnectivityStatus { get => this._connectivityStatus; }

        /// <summary>Backing field for <see cref="DesiredProperty" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.IClusterDesiredProperties _desiredProperty;

        /// <summary>Desired properties of the cluster.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Origin(Microsoft.Azure.PowerShell.Cmdlets.StackHCI.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.IClusterDesiredProperties DesiredProperty { get => (this._desiredProperty = this._desiredProperty ?? new Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.ClusterDesiredProperties()); set => this._desiredProperty = value; }

        /// <summary>Desired level of diagnostic data emitted by the cluster.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Origin(Microsoft.Azure.PowerShell.Cmdlets.StackHCI.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Support.DiagnosticLevel? DesiredPropertyDiagnosticLevel { get => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.IClusterDesiredPropertiesInternal)DesiredProperty).DiagnosticLevel; set => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.IClusterDesiredPropertiesInternal)DesiredProperty).DiagnosticLevel = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Support.DiagnosticLevel)""); }

        /// <summary>Desired state of Windows Server Subscription.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Origin(Microsoft.Azure.PowerShell.Cmdlets.StackHCI.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Support.WindowsServerSubscription? DesiredPropertyWindowsServerSubscription { get => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.IClusterDesiredPropertiesInternal)DesiredProperty).WindowsServerSubscription; set => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.IClusterDesiredPropertiesInternal)DesiredProperty).WindowsServerSubscription = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Support.WindowsServerSubscription)""); }

        /// <summary>Backing field for <see cref="IsolatedVMAttestationConfiguration" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.IIsolatedVMAttestationConfiguration _isolatedVMAttestationConfiguration;

        /// <summary>Attestation configurations for isolated VM (e.g. TVM, CVM) of the cluster.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Origin(Microsoft.Azure.PowerShell.Cmdlets.StackHCI.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.IIsolatedVMAttestationConfiguration IsolatedVMAttestationConfiguration { get => (this._isolatedVMAttestationConfiguration = this._isolatedVMAttestationConfiguration ?? new Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.IsolatedVMAttestationConfiguration()); }

        /// <summary>
        /// Fully qualified Azure resource id of the Microsoft Azure attestation resource associated with this cluster.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Origin(Microsoft.Azure.PowerShell.Cmdlets.StackHCI.PropertyOrigin.Inlined)]
        public string IsolatedVMAttestationConfigurationAttestationResourceId { get => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.IIsolatedVMAttestationConfigurationInternal)IsolatedVMAttestationConfiguration).AttestationResourceId; }

        /// <summary>
        /// Region specific endpoint for Microsoft Azure Attestation service for the cluster
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Origin(Microsoft.Azure.PowerShell.Cmdlets.StackHCI.PropertyOrigin.Inlined)]
        public string IsolatedVMAttestationConfigurationAttestationServiceEndpoint { get => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.IIsolatedVMAttestationConfigurationInternal)IsolatedVMAttestationConfiguration).AttestationServiceEndpoint; }

        /// <summary>Region specific endpoint for relying party service.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Origin(Microsoft.Azure.PowerShell.Cmdlets.StackHCI.PropertyOrigin.Inlined)]
        public string IsolatedVMAttestationConfigurationRelyingPartyServiceEndpoint { get => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.IIsolatedVMAttestationConfigurationInternal)IsolatedVMAttestationConfiguration).RelyingPartyServiceEndpoint; }

        /// <summary>Backing field for <see cref="LastBillingTimestamp" /> property.</summary>
        private global::System.DateTime? _lastBillingTimestamp;

        /// <summary>Most recent billing meter timestamp.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Origin(Microsoft.Azure.PowerShell.Cmdlets.StackHCI.PropertyOrigin.Owned)]
        public global::System.DateTime? LastBillingTimestamp { get => this._lastBillingTimestamp; }

        /// <summary>Backing field for <see cref="LastSyncTimestamp" /> property.</summary>
        private global::System.DateTime? _lastSyncTimestamp;

        /// <summary>Most recent cluster sync timestamp.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Origin(Microsoft.Azure.PowerShell.Cmdlets.StackHCI.PropertyOrigin.Owned)]
        public global::System.DateTime? LastSyncTimestamp { get => this._lastSyncTimestamp; }

        /// <summary>Backing field for <see cref="LogCollectionProperty" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.ILogCollectionProperties _logCollectionProperty;

        /// <summary>Log Collection properties of the cluster.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Origin(Microsoft.Azure.PowerShell.Cmdlets.StackHCI.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.ILogCollectionProperties LogCollectionProperty { get => (this._logCollectionProperty = this._logCollectionProperty ?? new Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.LogCollectionProperties()); set => this._logCollectionProperty = value; }

        /// <summary>From DateTimeStamp from when logs need to be connected</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Origin(Microsoft.Azure.PowerShell.Cmdlets.StackHCI.PropertyOrigin.Inlined)]
        public global::System.DateTime? LogCollectionPropertyFromDate { get => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.ILogCollectionPropertiesInternal)LogCollectionProperty).FromDate; }

        /// <summary>Recent DateTimeStamp where logs are successfully generated</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Origin(Microsoft.Azure.PowerShell.Cmdlets.StackHCI.PropertyOrigin.Inlined)]
        public global::System.DateTime? LogCollectionPropertyLastLogGenerated { get => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.ILogCollectionPropertiesInternal)LogCollectionProperty).LastLogGenerated; }

        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Origin(Microsoft.Azure.PowerShell.Cmdlets.StackHCI.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.ILogCollectionSession[] LogCollectionPropertyLogCollectionSessionDetail { get => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.ILogCollectionPropertiesInternal)LogCollectionProperty).LogCollectionSessionDetail; }

        /// <summary>To DateTimeStamp till when logs need to be connected</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Origin(Microsoft.Azure.PowerShell.Cmdlets.StackHCI.PropertyOrigin.Inlined)]
        public global::System.DateTime? LogCollectionPropertyToDate { get => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.ILogCollectionPropertiesInternal)LogCollectionProperty).ToDate; }

        /// <summary>Internal Acessors for BillingModel</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.IClusterPropertiesInternal.BillingModel { get => this._billingModel; set { {_billingModel = value;} } }

        /// <summary>Internal Acessors for CloudId</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.IClusterPropertiesInternal.CloudId { get => this._cloudId; set { {_cloudId = value;} } }

        /// <summary>Internal Acessors for ConnectivityStatus</summary>
        Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Support.ConnectivityStatus? Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.IClusterPropertiesInternal.ConnectivityStatus { get => this._connectivityStatus; set { {_connectivityStatus = value;} } }

        /// <summary>Internal Acessors for DesiredProperty</summary>
        Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.IClusterDesiredProperties Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.IClusterPropertiesInternal.DesiredProperty { get => (this._desiredProperty = this._desiredProperty ?? new Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.ClusterDesiredProperties()); set { {_desiredProperty = value;} } }

        /// <summary>Internal Acessors for IsolatedVMAttestationConfiguration</summary>
        Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.IIsolatedVMAttestationConfiguration Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.IClusterPropertiesInternal.IsolatedVMAttestationConfiguration { get => (this._isolatedVMAttestationConfiguration = this._isolatedVMAttestationConfiguration ?? new Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.IsolatedVMAttestationConfiguration()); set { {_isolatedVMAttestationConfiguration = value;} } }

        /// <summary>Internal Acessors for IsolatedVMAttestationConfigurationAttestationResourceId</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.IClusterPropertiesInternal.IsolatedVMAttestationConfigurationAttestationResourceId { get => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.IIsolatedVMAttestationConfigurationInternal)IsolatedVMAttestationConfiguration).AttestationResourceId; set => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.IIsolatedVMAttestationConfigurationInternal)IsolatedVMAttestationConfiguration).AttestationResourceId = value; }

        /// <summary>
        /// Internal Acessors for IsolatedVMAttestationConfigurationAttestationServiceEndpoint
        /// </summary>
        string Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.IClusterPropertiesInternal.IsolatedVMAttestationConfigurationAttestationServiceEndpoint { get => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.IIsolatedVMAttestationConfigurationInternal)IsolatedVMAttestationConfiguration).AttestationServiceEndpoint; set => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.IIsolatedVMAttestationConfigurationInternal)IsolatedVMAttestationConfiguration).AttestationServiceEndpoint = value; }

        /// <summary>
        /// Internal Acessors for IsolatedVMAttestationConfigurationRelyingPartyServiceEndpoint
        /// </summary>
        string Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.IClusterPropertiesInternal.IsolatedVMAttestationConfigurationRelyingPartyServiceEndpoint { get => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.IIsolatedVMAttestationConfigurationInternal)IsolatedVMAttestationConfiguration).RelyingPartyServiceEndpoint; set => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.IIsolatedVMAttestationConfigurationInternal)IsolatedVMAttestationConfiguration).RelyingPartyServiceEndpoint = value; }

        /// <summary>Internal Acessors for LastBillingTimestamp</summary>
        global::System.DateTime? Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.IClusterPropertiesInternal.LastBillingTimestamp { get => this._lastBillingTimestamp; set { {_lastBillingTimestamp = value;} } }

        /// <summary>Internal Acessors for LastSyncTimestamp</summary>
        global::System.DateTime? Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.IClusterPropertiesInternal.LastSyncTimestamp { get => this._lastSyncTimestamp; set { {_lastSyncTimestamp = value;} } }

        /// <summary>Internal Acessors for LogCollectionProperty</summary>
        Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.ILogCollectionProperties Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.IClusterPropertiesInternal.LogCollectionProperty { get => (this._logCollectionProperty = this._logCollectionProperty ?? new Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.LogCollectionProperties()); set { {_logCollectionProperty = value;} } }

        /// <summary>Internal Acessors for LogCollectionPropertyFromDate</summary>
        global::System.DateTime? Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.IClusterPropertiesInternal.LogCollectionPropertyFromDate { get => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.ILogCollectionPropertiesInternal)LogCollectionProperty).FromDate; set => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.ILogCollectionPropertiesInternal)LogCollectionProperty).FromDate = value; }

        /// <summary>Internal Acessors for LogCollectionPropertyLastLogGenerated</summary>
        global::System.DateTime? Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.IClusterPropertiesInternal.LogCollectionPropertyLastLogGenerated { get => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.ILogCollectionPropertiesInternal)LogCollectionProperty).LastLogGenerated; set => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.ILogCollectionPropertiesInternal)LogCollectionProperty).LastLogGenerated = value; }

        /// <summary>Internal Acessors for LogCollectionPropertyLogCollectionSessionDetail</summary>
        Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.ILogCollectionSession[] Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.IClusterPropertiesInternal.LogCollectionPropertyLogCollectionSessionDetail { get => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.ILogCollectionPropertiesInternal)LogCollectionProperty).LogCollectionSessionDetail; set => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.ILogCollectionPropertiesInternal)LogCollectionProperty).LogCollectionSessionDetail = value; }

        /// <summary>Internal Acessors for LogCollectionPropertyToDate</summary>
        global::System.DateTime? Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.IClusterPropertiesInternal.LogCollectionPropertyToDate { get => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.ILogCollectionPropertiesInternal)LogCollectionProperty).ToDate; set => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.ILogCollectionPropertiesInternal)LogCollectionProperty).ToDate = value; }

        /// <summary>Internal Acessors for ProvisioningState</summary>
        Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Support.ProvisioningState? Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.IClusterPropertiesInternal.ProvisioningState { get => this._provisioningState; set { {_provisioningState = value;} } }

        /// <summary>Internal Acessors for RegistrationTimestamp</summary>
        global::System.DateTime? Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.IClusterPropertiesInternal.RegistrationTimestamp { get => this._registrationTimestamp; set { {_registrationTimestamp = value;} } }

        /// <summary>Internal Acessors for RemoteSupportProperty</summary>
        Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.IRemoteSupportProperties Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.IClusterPropertiesInternal.RemoteSupportProperty { get => (this._remoteSupportProperty = this._remoteSupportProperty ?? new Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.RemoteSupportProperties()); set { {_remoteSupportProperty = value;} } }

        /// <summary>Internal Acessors for RemoteSupportPropertyAccessLevel</summary>
        Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Support.AccessLevel? Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.IClusterPropertiesInternal.RemoteSupportPropertyAccessLevel { get => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.IRemoteSupportPropertiesInternal)RemoteSupportProperty).AccessLevel; set => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.IRemoteSupportPropertiesInternal)RemoteSupportProperty).AccessLevel = value; }

        /// <summary>Internal Acessors for RemoteSupportPropertyExpirationTimeStamp</summary>
        global::System.DateTime? Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.IClusterPropertiesInternal.RemoteSupportPropertyExpirationTimeStamp { get => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.IRemoteSupportPropertiesInternal)RemoteSupportProperty).ExpirationTimeStamp; set => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.IRemoteSupportPropertiesInternal)RemoteSupportProperty).ExpirationTimeStamp = value; }

        /// <summary>Internal Acessors for RemoteSupportPropertyRemoteSupportNodeSetting</summary>
        Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.IRemoteSupportNodeSettings[] Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.IClusterPropertiesInternal.RemoteSupportPropertyRemoteSupportNodeSetting { get => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.IRemoteSupportPropertiesInternal)RemoteSupportProperty).RemoteSupportNodeSetting; set => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.IRemoteSupportPropertiesInternal)RemoteSupportProperty).RemoteSupportNodeSetting = value; }

        /// <summary>Internal Acessors for RemoteSupportPropertyRemoteSupportSessionDetail</summary>
        Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.IPerNodeRemoteSupportSession[] Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.IClusterPropertiesInternal.RemoteSupportPropertyRemoteSupportSessionDetail { get => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.IRemoteSupportPropertiesInternal)RemoteSupportProperty).RemoteSupportSessionDetail; set => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.IRemoteSupportPropertiesInternal)RemoteSupportProperty).RemoteSupportSessionDetail = value; }

        /// <summary>Internal Acessors for RemoteSupportPropertyRemoteSupportType</summary>
        Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Support.RemoteSupportType? Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.IClusterPropertiesInternal.RemoteSupportPropertyRemoteSupportType { get => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.IRemoteSupportPropertiesInternal)RemoteSupportProperty).RemoteSupportType; set => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.IRemoteSupportPropertiesInternal)RemoteSupportProperty).RemoteSupportType = value; }

        /// <summary>Internal Acessors for ReportedProperty</summary>
        Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.IClusterReportedProperties Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.IClusterPropertiesInternal.ReportedProperty { get => (this._reportedProperty = this._reportedProperty ?? new Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.ClusterReportedProperties()); set { {_reportedProperty = value;} } }

        /// <summary>Internal Acessors for ReportedPropertyClusterId</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.IClusterPropertiesInternal.ReportedPropertyClusterId { get => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.IClusterReportedPropertiesInternal)ReportedProperty).ClusterId; set => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.IClusterReportedPropertiesInternal)ReportedProperty).ClusterId = value; }

        /// <summary>Internal Acessors for ReportedPropertyClusterName</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.IClusterPropertiesInternal.ReportedPropertyClusterName { get => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.IClusterReportedPropertiesInternal)ReportedProperty).ClusterName; set => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.IClusterReportedPropertiesInternal)ReportedProperty).ClusterName = value; }

        /// <summary>Internal Acessors for ReportedPropertyClusterType</summary>
        Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Support.ClusterNodeType? Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.IClusterPropertiesInternal.ReportedPropertyClusterType { get => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.IClusterReportedPropertiesInternal)ReportedProperty).ClusterType; set => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.IClusterReportedPropertiesInternal)ReportedProperty).ClusterType = value; }

        /// <summary>Internal Acessors for ReportedPropertyClusterVersion</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.IClusterPropertiesInternal.ReportedPropertyClusterVersion { get => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.IClusterReportedPropertiesInternal)ReportedProperty).ClusterVersion; set => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.IClusterReportedPropertiesInternal)ReportedProperty).ClusterVersion = value; }

        /// <summary>Internal Acessors for ReportedPropertyImdsAttestation</summary>
        Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Support.ImdsAttestation? Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.IClusterPropertiesInternal.ReportedPropertyImdsAttestation { get => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.IClusterReportedPropertiesInternal)ReportedProperty).ImdsAttestation; set => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.IClusterReportedPropertiesInternal)ReportedProperty).ImdsAttestation = value; }

        /// <summary>Internal Acessors for ReportedPropertyLastUpdated</summary>
        global::System.DateTime? Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.IClusterPropertiesInternal.ReportedPropertyLastUpdated { get => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.IClusterReportedPropertiesInternal)ReportedProperty).LastUpdated; set => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.IClusterReportedPropertiesInternal)ReportedProperty).LastUpdated = value; }

        /// <summary>Internal Acessors for ReportedPropertyManufacturer</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.IClusterPropertiesInternal.ReportedPropertyManufacturer { get => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.IClusterReportedPropertiesInternal)ReportedProperty).Manufacturer; set => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.IClusterReportedPropertiesInternal)ReportedProperty).Manufacturer = value; }

        /// <summary>Internal Acessors for ReportedPropertyNode</summary>
        Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.IClusterNode[] Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.IClusterPropertiesInternal.ReportedPropertyNode { get => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.IClusterReportedPropertiesInternal)ReportedProperty).Node; set => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.IClusterReportedPropertiesInternal)ReportedProperty).Node = value; }

        /// <summary>Internal Acessors for ReportedPropertyOemActivation</summary>
        Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Support.OemActivation? Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.IClusterPropertiesInternal.ReportedPropertyOemActivation { get => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.IClusterReportedPropertiesInternal)ReportedProperty).OemActivation; set => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.IClusterReportedPropertiesInternal)ReportedProperty).OemActivation = value; }

        /// <summary>Internal Acessors for ReportedPropertySupportedCapability</summary>
        string[] Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.IClusterPropertiesInternal.ReportedPropertySupportedCapability { get => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.IClusterReportedPropertiesInternal)ReportedProperty).SupportedCapability; set => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.IClusterReportedPropertiesInternal)ReportedProperty).SupportedCapability = value; }

        /// <summary>Internal Acessors for ResourceProviderObjectId</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.IClusterPropertiesInternal.ResourceProviderObjectId { get => this._resourceProviderObjectId; set { {_resourceProviderObjectId = value;} } }

        /// <summary>Internal Acessors for ServiceEndpoint</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.IClusterPropertiesInternal.ServiceEndpoint { get => this._serviceEndpoint; set { {_serviceEndpoint = value;} } }

        /// <summary>Internal Acessors for SoftwareAssuranceProperty</summary>
        Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.ISoftwareAssuranceProperties Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.IClusterPropertiesInternal.SoftwareAssuranceProperty { get => (this._softwareAssuranceProperty = this._softwareAssuranceProperty ?? new Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.SoftwareAssuranceProperties()); set { {_softwareAssuranceProperty = value;} } }

        /// <summary>Internal Acessors for SoftwareAssurancePropertyLastUpdated</summary>
        global::System.DateTime? Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.IClusterPropertiesInternal.SoftwareAssurancePropertyLastUpdated { get => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.ISoftwareAssurancePropertiesInternal)SoftwareAssuranceProperty).LastUpdated; set => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.ISoftwareAssurancePropertiesInternal)SoftwareAssuranceProperty).LastUpdated = value; }

        /// <summary>Internal Acessors for SoftwareAssurancePropertySoftwareAssuranceStatus</summary>
        Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Support.SoftwareAssuranceStatus? Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.IClusterPropertiesInternal.SoftwareAssurancePropertySoftwareAssuranceStatus { get => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.ISoftwareAssurancePropertiesInternal)SoftwareAssuranceProperty).SoftwareAssuranceStatus; set => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.ISoftwareAssurancePropertiesInternal)SoftwareAssuranceProperty).SoftwareAssuranceStatus = value; }

        /// <summary>Internal Acessors for Status</summary>
        Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Support.Status? Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.IClusterPropertiesInternal.Status { get => this._status; set { {_status = value;} } }

        /// <summary>Internal Acessors for TrialDaysRemaining</summary>
        float? Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.IClusterPropertiesInternal.TrialDaysRemaining { get => this._trialDaysRemaining; set { {_trialDaysRemaining = value;} } }

        /// <summary>Backing field for <see cref="ProvisioningState" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Support.ProvisioningState? _provisioningState;

        /// <summary>Provisioning state.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Origin(Microsoft.Azure.PowerShell.Cmdlets.StackHCI.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Support.ProvisioningState? ProvisioningState { get => this._provisioningState; }

        /// <summary>Backing field for <see cref="RegistrationTimestamp" /> property.</summary>
        private global::System.DateTime? _registrationTimestamp;

        /// <summary>First cluster sync timestamp.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Origin(Microsoft.Azure.PowerShell.Cmdlets.StackHCI.PropertyOrigin.Owned)]
        public global::System.DateTime? RegistrationTimestamp { get => this._registrationTimestamp; }

        /// <summary>Backing field for <see cref="RemoteSupportProperty" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.IRemoteSupportProperties _remoteSupportProperty;

        /// <summary>RemoteSupport properties of the cluster.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Origin(Microsoft.Azure.PowerShell.Cmdlets.StackHCI.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.IRemoteSupportProperties RemoteSupportProperty { get => (this._remoteSupportProperty = this._remoteSupportProperty ?? new Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.RemoteSupportProperties()); set => this._remoteSupportProperty = value; }

        /// <summary>Remote Support Access Level</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Origin(Microsoft.Azure.PowerShell.Cmdlets.StackHCI.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Support.AccessLevel? RemoteSupportPropertyAccessLevel { get => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.IRemoteSupportPropertiesInternal)RemoteSupportProperty).AccessLevel; }

        /// <summary>Expiration DateTimeStamp when Remote Support Access will be expired</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Origin(Microsoft.Azure.PowerShell.Cmdlets.StackHCI.PropertyOrigin.Inlined)]
        public global::System.DateTime? RemoteSupportPropertyExpirationTimeStamp { get => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.IRemoteSupportPropertiesInternal)RemoteSupportProperty).ExpirationTimeStamp; }

        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Origin(Microsoft.Azure.PowerShell.Cmdlets.StackHCI.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.IRemoteSupportNodeSettings[] RemoteSupportPropertyRemoteSupportNodeSetting { get => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.IRemoteSupportPropertiesInternal)RemoteSupportProperty).RemoteSupportNodeSetting; }

        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Origin(Microsoft.Azure.PowerShell.Cmdlets.StackHCI.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.IPerNodeRemoteSupportSession[] RemoteSupportPropertyRemoteSupportSessionDetail { get => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.IRemoteSupportPropertiesInternal)RemoteSupportProperty).RemoteSupportSessionDetail; }

        /// <summary>Remote Support Type for cluster</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Origin(Microsoft.Azure.PowerShell.Cmdlets.StackHCI.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Support.RemoteSupportType? RemoteSupportPropertyRemoteSupportType { get => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.IRemoteSupportPropertiesInternal)RemoteSupportProperty).RemoteSupportType; }

        /// <summary>Backing field for <see cref="ReportedProperty" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.IClusterReportedProperties _reportedProperty;

        /// <summary>Properties reported by cluster agent.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Origin(Microsoft.Azure.PowerShell.Cmdlets.StackHCI.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.IClusterReportedProperties ReportedProperty { get => (this._reportedProperty = this._reportedProperty ?? new Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.ClusterReportedProperties()); }

        /// <summary>Unique id generated by the on-prem cluster.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Origin(Microsoft.Azure.PowerShell.Cmdlets.StackHCI.PropertyOrigin.Inlined)]
        public string ReportedPropertyClusterId { get => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.IClusterReportedPropertiesInternal)ReportedProperty).ClusterId; }

        /// <summary>Name of the on-prem cluster connected to this resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Origin(Microsoft.Azure.PowerShell.Cmdlets.StackHCI.PropertyOrigin.Inlined)]
        public string ReportedPropertyClusterName { get => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.IClusterReportedPropertiesInternal)ReportedProperty).ClusterName; }

        /// <summary>The node type of all the nodes of the cluster.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Origin(Microsoft.Azure.PowerShell.Cmdlets.StackHCI.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Support.ClusterNodeType? ReportedPropertyClusterType { get => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.IClusterReportedPropertiesInternal)ReportedProperty).ClusterType; }

        /// <summary>Version of the cluster software.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Origin(Microsoft.Azure.PowerShell.Cmdlets.StackHCI.PropertyOrigin.Inlined)]
        public string ReportedPropertyClusterVersion { get => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.IClusterReportedPropertiesInternal)ReportedProperty).ClusterVersion; }

        /// <summary>Level of diagnostic data emitted by the cluster.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Origin(Microsoft.Azure.PowerShell.Cmdlets.StackHCI.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Support.DiagnosticLevel? ReportedPropertyDiagnosticLevel { get => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.IClusterReportedPropertiesInternal)ReportedProperty).DiagnosticLevel; set => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.IClusterReportedPropertiesInternal)ReportedProperty).DiagnosticLevel = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Support.DiagnosticLevel)""); }

        /// <summary>IMDS attestation status of the cluster.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Origin(Microsoft.Azure.PowerShell.Cmdlets.StackHCI.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Support.ImdsAttestation? ReportedPropertyImdsAttestation { get => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.IClusterReportedPropertiesInternal)ReportedProperty).ImdsAttestation; }

        /// <summary>Last time the cluster reported the data.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Origin(Microsoft.Azure.PowerShell.Cmdlets.StackHCI.PropertyOrigin.Inlined)]
        public global::System.DateTime? ReportedPropertyLastUpdated { get => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.IClusterReportedPropertiesInternal)ReportedProperty).LastUpdated; }

        /// <summary>The manufacturer of all the nodes of the cluster.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Origin(Microsoft.Azure.PowerShell.Cmdlets.StackHCI.PropertyOrigin.Inlined)]
        public string ReportedPropertyManufacturer { get => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.IClusterReportedPropertiesInternal)ReportedProperty).Manufacturer; }

        /// <summary>List of nodes reported by the cluster.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Origin(Microsoft.Azure.PowerShell.Cmdlets.StackHCI.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.IClusterNode[] ReportedPropertyNode { get => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.IClusterReportedPropertiesInternal)ReportedProperty).Node; }

        /// <summary>OEM activation status of the cluster.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Origin(Microsoft.Azure.PowerShell.Cmdlets.StackHCI.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Support.OemActivation? ReportedPropertyOemActivation { get => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.IClusterReportedPropertiesInternal)ReportedProperty).OemActivation; }

        /// <summary>Capabilities supported by the cluster.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Origin(Microsoft.Azure.PowerShell.Cmdlets.StackHCI.PropertyOrigin.Inlined)]
        public string[] ReportedPropertySupportedCapability { get => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.IClusterReportedPropertiesInternal)ReportedProperty).SupportedCapability; }

        /// <summary>Backing field for <see cref="ResourceProviderObjectId" /> property.</summary>
        private string _resourceProviderObjectId;

        /// <summary>Object id of RP Service Principal</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Origin(Microsoft.Azure.PowerShell.Cmdlets.StackHCI.PropertyOrigin.Owned)]
        public string ResourceProviderObjectId { get => this._resourceProviderObjectId; }

        /// <summary>Backing field for <see cref="ServiceEndpoint" /> property.</summary>
        private string _serviceEndpoint;

        /// <summary>Region specific DataPath Endpoint of the cluster.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Origin(Microsoft.Azure.PowerShell.Cmdlets.StackHCI.PropertyOrigin.Owned)]
        public string ServiceEndpoint { get => this._serviceEndpoint; }

        /// <summary>Backing field for <see cref="SoftwareAssuranceProperty" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.ISoftwareAssuranceProperties _softwareAssuranceProperty;

        /// <summary>Software Assurance properties of the cluster.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Origin(Microsoft.Azure.PowerShell.Cmdlets.StackHCI.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.ISoftwareAssuranceProperties SoftwareAssuranceProperty { get => (this._softwareAssuranceProperty = this._softwareAssuranceProperty ?? new Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.SoftwareAssuranceProperties()); set => this._softwareAssuranceProperty = value; }

        /// <summary>TimeStamp denoting the latest SA benefit applicability is validated.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Origin(Microsoft.Azure.PowerShell.Cmdlets.StackHCI.PropertyOrigin.Inlined)]
        public global::System.DateTime? SoftwareAssurancePropertyLastUpdated { get => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.ISoftwareAssurancePropertiesInternal)SoftwareAssuranceProperty).LastUpdated; }

        /// <summary>Customer Intent for Software Assurance Benefit.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Origin(Microsoft.Azure.PowerShell.Cmdlets.StackHCI.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Support.SoftwareAssuranceIntent? SoftwareAssurancePropertySoftwareAssuranceIntent { get => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.ISoftwareAssurancePropertiesInternal)SoftwareAssuranceProperty).SoftwareAssuranceIntent; set => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.ISoftwareAssurancePropertiesInternal)SoftwareAssuranceProperty).SoftwareAssuranceIntent = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Support.SoftwareAssuranceIntent)""); }

        /// <summary>Status of the Software Assurance for the cluster.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Origin(Microsoft.Azure.PowerShell.Cmdlets.StackHCI.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Support.SoftwareAssuranceStatus? SoftwareAssurancePropertySoftwareAssuranceStatus { get => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.ISoftwareAssurancePropertiesInternal)SoftwareAssuranceProperty).SoftwareAssuranceStatus; }

        /// <summary>Backing field for <see cref="Status" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Support.Status? _status;

        /// <summary>Status of the cluster agent.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Origin(Microsoft.Azure.PowerShell.Cmdlets.StackHCI.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Support.Status? Status { get => this._status; }

        /// <summary>Backing field for <see cref="TrialDaysRemaining" /> property.</summary>
        private float? _trialDaysRemaining;

        /// <summary>Number of days remaining in the trial period.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Origin(Microsoft.Azure.PowerShell.Cmdlets.StackHCI.PropertyOrigin.Owned)]
        public float? TrialDaysRemaining { get => this._trialDaysRemaining; }

        /// <summary>Creates an new <see cref="ClusterProperties" /> instance.</summary>
        public ClusterProperties()
        {

        }
    }
    /// Cluster properties.
    public partial interface IClusterProperties :
        Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Runtime.IJsonSerializable
    {
        /// <summary>Object id of cluster AAD identity.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Object id of cluster AAD identity.",
        SerializedName = @"aadApplicationObjectId",
        PossibleTypes = new [] { typeof(string) })]
        string AadApplicationObjectId { get; set; }
        /// <summary>App id of cluster AAD identity.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"App id of cluster AAD identity.",
        SerializedName = @"aadClientId",
        PossibleTypes = new [] { typeof(string) })]
        string AadClientId { get; set; }
        /// <summary>Id of cluster identity service principal.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Id of cluster identity service principal.",
        SerializedName = @"aadServicePrincipalObjectId",
        PossibleTypes = new [] { typeof(string) })]
        string AadServicePrincipalObjectId { get; set; }
        /// <summary>Tenant id of cluster AAD identity.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Tenant id of cluster AAD identity.",
        SerializedName = @"aadTenantId",
        PossibleTypes = new [] { typeof(string) })]
        string AadTenantId { get; set; }
        /// <summary>Type of billing applied to the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Type of billing applied to the resource.",
        SerializedName = @"billingModel",
        PossibleTypes = new [] { typeof(string) })]
        string BillingModel { get;  }
        /// <summary>Unique, immutable resource id.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Unique, immutable resource id.",
        SerializedName = @"cloudId",
        PossibleTypes = new [] { typeof(string) })]
        string CloudId { get;  }
        /// <summary>Endpoint configured for management from the Azure portal.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Endpoint configured for management from the Azure portal.",
        SerializedName = @"cloudManagementEndpoint",
        PossibleTypes = new [] { typeof(string) })]
        string CloudManagementEndpoint { get; set; }
        /// <summary>Overall connectivity status for the cluster resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Overall connectivity status for the cluster resource.",
        SerializedName = @"connectivityStatus",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Support.ConnectivityStatus) })]
        Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Support.ConnectivityStatus? ConnectivityStatus { get;  }
        /// <summary>Desired level of diagnostic data emitted by the cluster.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Desired level of diagnostic data emitted by the cluster.",
        SerializedName = @"diagnosticLevel",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Support.DiagnosticLevel) })]
        Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Support.DiagnosticLevel? DesiredPropertyDiagnosticLevel { get; set; }
        /// <summary>Desired state of Windows Server Subscription.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Desired state of Windows Server Subscription.",
        SerializedName = @"windowsServerSubscription",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Support.WindowsServerSubscription) })]
        Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Support.WindowsServerSubscription? DesiredPropertyWindowsServerSubscription { get; set; }
        /// <summary>
        /// Fully qualified Azure resource id of the Microsoft Azure attestation resource associated with this cluster.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Fully qualified Azure resource id of the Microsoft Azure attestation resource associated with this cluster.",
        SerializedName = @"attestationResourceId",
        PossibleTypes = new [] { typeof(string) })]
        string IsolatedVMAttestationConfigurationAttestationResourceId { get;  }
        /// <summary>
        /// Region specific endpoint for Microsoft Azure Attestation service for the cluster
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Region specific endpoint for Microsoft Azure Attestation service for the cluster",
        SerializedName = @"attestationServiceEndpoint",
        PossibleTypes = new [] { typeof(string) })]
        string IsolatedVMAttestationConfigurationAttestationServiceEndpoint { get;  }
        /// <summary>Region specific endpoint for relying party service.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Region specific endpoint for relying party service.",
        SerializedName = @"relyingPartyServiceEndpoint",
        PossibleTypes = new [] { typeof(string) })]
        string IsolatedVMAttestationConfigurationRelyingPartyServiceEndpoint { get;  }
        /// <summary>Most recent billing meter timestamp.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Most recent billing meter timestamp.",
        SerializedName = @"lastBillingTimestamp",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? LastBillingTimestamp { get;  }
        /// <summary>Most recent cluster sync timestamp.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Most recent cluster sync timestamp.",
        SerializedName = @"lastSyncTimestamp",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? LastSyncTimestamp { get;  }
        /// <summary>From DateTimeStamp from when logs need to be connected</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"From DateTimeStamp from when logs need to be connected",
        SerializedName = @"fromDate",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? LogCollectionPropertyFromDate { get;  }
        /// <summary>Recent DateTimeStamp where logs are successfully generated</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Recent DateTimeStamp where logs are successfully generated",
        SerializedName = @"lastLogGenerated",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? LogCollectionPropertyLastLogGenerated { get;  }

        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"",
        SerializedName = @"logCollectionSessionDetails",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.ILogCollectionSession) })]
        Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.ILogCollectionSession[] LogCollectionPropertyLogCollectionSessionDetail { get;  }
        /// <summary>To DateTimeStamp till when logs need to be connected</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"To DateTimeStamp till when logs need to be connected",
        SerializedName = @"toDate",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? LogCollectionPropertyToDate { get;  }
        /// <summary>Provisioning state.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Provisioning state.",
        SerializedName = @"provisioningState",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Support.ProvisioningState) })]
        Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Support.ProvisioningState? ProvisioningState { get;  }
        /// <summary>First cluster sync timestamp.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"First cluster sync timestamp.",
        SerializedName = @"registrationTimestamp",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? RegistrationTimestamp { get;  }
        /// <summary>Remote Support Access Level</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Remote Support Access Level",
        SerializedName = @"accessLevel",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Support.AccessLevel) })]
        Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Support.AccessLevel? RemoteSupportPropertyAccessLevel { get;  }
        /// <summary>Expiration DateTimeStamp when Remote Support Access will be expired</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Expiration DateTimeStamp when Remote Support Access will be expired",
        SerializedName = @"expirationTimeStamp",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? RemoteSupportPropertyExpirationTimeStamp { get;  }

        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"",
        SerializedName = @"remoteSupportNodeSettings",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.IRemoteSupportNodeSettings) })]
        Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.IRemoteSupportNodeSettings[] RemoteSupportPropertyRemoteSupportNodeSetting { get;  }

        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"",
        SerializedName = @"remoteSupportSessionDetails",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.IPerNodeRemoteSupportSession) })]
        Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.IPerNodeRemoteSupportSession[] RemoteSupportPropertyRemoteSupportSessionDetail { get;  }
        /// <summary>Remote Support Type for cluster</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Remote Support Type for cluster",
        SerializedName = @"remoteSupportType",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Support.RemoteSupportType) })]
        Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Support.RemoteSupportType? RemoteSupportPropertyRemoteSupportType { get;  }
        /// <summary>Unique id generated by the on-prem cluster.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Unique id generated by the on-prem cluster.",
        SerializedName = @"clusterId",
        PossibleTypes = new [] { typeof(string) })]
        string ReportedPropertyClusterId { get;  }
        /// <summary>Name of the on-prem cluster connected to this resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Name of the on-prem cluster connected to this resource.",
        SerializedName = @"clusterName",
        PossibleTypes = new [] { typeof(string) })]
        string ReportedPropertyClusterName { get;  }
        /// <summary>The node type of all the nodes of the cluster.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The node type of all the nodes of the cluster.",
        SerializedName = @"clusterType",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Support.ClusterNodeType) })]
        Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Support.ClusterNodeType? ReportedPropertyClusterType { get;  }
        /// <summary>Version of the cluster software.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Version of the cluster software.",
        SerializedName = @"clusterVersion",
        PossibleTypes = new [] { typeof(string) })]
        string ReportedPropertyClusterVersion { get;  }
        /// <summary>Level of diagnostic data emitted by the cluster.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Level of diagnostic data emitted by the cluster.",
        SerializedName = @"diagnosticLevel",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Support.DiagnosticLevel) })]
        Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Support.DiagnosticLevel? ReportedPropertyDiagnosticLevel { get; set; }
        /// <summary>IMDS attestation status of the cluster.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"IMDS attestation status of the cluster.",
        SerializedName = @"imdsAttestation",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Support.ImdsAttestation) })]
        Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Support.ImdsAttestation? ReportedPropertyImdsAttestation { get;  }
        /// <summary>Last time the cluster reported the data.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Last time the cluster reported the data.",
        SerializedName = @"lastUpdated",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? ReportedPropertyLastUpdated { get;  }
        /// <summary>The manufacturer of all the nodes of the cluster.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The manufacturer of all the nodes of the cluster.",
        SerializedName = @"manufacturer",
        PossibleTypes = new [] { typeof(string) })]
        string ReportedPropertyManufacturer { get;  }
        /// <summary>List of nodes reported by the cluster.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"List of nodes reported by the cluster.",
        SerializedName = @"nodes",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.IClusterNode) })]
        Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.IClusterNode[] ReportedPropertyNode { get;  }
        /// <summary>OEM activation status of the cluster.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"OEM activation status of the cluster.",
        SerializedName = @"oemActivation",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Support.OemActivation) })]
        Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Support.OemActivation? ReportedPropertyOemActivation { get;  }
        /// <summary>Capabilities supported by the cluster.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Capabilities supported by the cluster.",
        SerializedName = @"supportedCapabilities",
        PossibleTypes = new [] { typeof(string) })]
        string[] ReportedPropertySupportedCapability { get;  }
        /// <summary>Object id of RP Service Principal</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Object id of RP Service Principal",
        SerializedName = @"resourceProviderObjectId",
        PossibleTypes = new [] { typeof(string) })]
        string ResourceProviderObjectId { get;  }
        /// <summary>Region specific DataPath Endpoint of the cluster.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Region specific DataPath Endpoint of the cluster.",
        SerializedName = @"serviceEndpoint",
        PossibleTypes = new [] { typeof(string) })]
        string ServiceEndpoint { get;  }
        /// <summary>TimeStamp denoting the latest SA benefit applicability is validated.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"TimeStamp denoting the latest SA benefit applicability is validated.",
        SerializedName = @"lastUpdated",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? SoftwareAssurancePropertyLastUpdated { get;  }
        /// <summary>Customer Intent for Software Assurance Benefit.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Customer Intent for Software Assurance Benefit.",
        SerializedName = @"softwareAssuranceIntent",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Support.SoftwareAssuranceIntent) })]
        Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Support.SoftwareAssuranceIntent? SoftwareAssurancePropertySoftwareAssuranceIntent { get; set; }
        /// <summary>Status of the Software Assurance for the cluster.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Status of the Software Assurance for the cluster.",
        SerializedName = @"softwareAssuranceStatus",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Support.SoftwareAssuranceStatus) })]
        Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Support.SoftwareAssuranceStatus? SoftwareAssurancePropertySoftwareAssuranceStatus { get;  }
        /// <summary>Status of the cluster agent.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Status of the cluster agent.",
        SerializedName = @"status",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Support.Status) })]
        Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Support.Status? Status { get;  }
        /// <summary>Number of days remaining in the trial period.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Number of days remaining in the trial period.",
        SerializedName = @"trialDaysRemaining",
        PossibleTypes = new [] { typeof(float) })]
        float? TrialDaysRemaining { get;  }

    }
    /// Cluster properties.
    internal partial interface IClusterPropertiesInternal

    {
        /// <summary>Object id of cluster AAD identity.</summary>
        string AadApplicationObjectId { get; set; }
        /// <summary>App id of cluster AAD identity.</summary>
        string AadClientId { get; set; }
        /// <summary>Id of cluster identity service principal.</summary>
        string AadServicePrincipalObjectId { get; set; }
        /// <summary>Tenant id of cluster AAD identity.</summary>
        string AadTenantId { get; set; }
        /// <summary>Type of billing applied to the resource.</summary>
        string BillingModel { get; set; }
        /// <summary>Unique, immutable resource id.</summary>
        string CloudId { get; set; }
        /// <summary>Endpoint configured for management from the Azure portal.</summary>
        string CloudManagementEndpoint { get; set; }
        /// <summary>Overall connectivity status for the cluster resource.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Support.ConnectivityStatus? ConnectivityStatus { get; set; }
        /// <summary>Desired properties of the cluster.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.IClusterDesiredProperties DesiredProperty { get; set; }
        /// <summary>Desired level of diagnostic data emitted by the cluster.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Support.DiagnosticLevel? DesiredPropertyDiagnosticLevel { get; set; }
        /// <summary>Desired state of Windows Server Subscription.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Support.WindowsServerSubscription? DesiredPropertyWindowsServerSubscription { get; set; }
        /// <summary>Attestation configurations for isolated VM (e.g. TVM, CVM) of the cluster.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.IIsolatedVMAttestationConfiguration IsolatedVMAttestationConfiguration { get; set; }
        /// <summary>
        /// Fully qualified Azure resource id of the Microsoft Azure attestation resource associated with this cluster.
        /// </summary>
        string IsolatedVMAttestationConfigurationAttestationResourceId { get; set; }
        /// <summary>
        /// Region specific endpoint for Microsoft Azure Attestation service for the cluster
        /// </summary>
        string IsolatedVMAttestationConfigurationAttestationServiceEndpoint { get; set; }
        /// <summary>Region specific endpoint for relying party service.</summary>
        string IsolatedVMAttestationConfigurationRelyingPartyServiceEndpoint { get; set; }
        /// <summary>Most recent billing meter timestamp.</summary>
        global::System.DateTime? LastBillingTimestamp { get; set; }
        /// <summary>Most recent cluster sync timestamp.</summary>
        global::System.DateTime? LastSyncTimestamp { get; set; }
        /// <summary>Log Collection properties of the cluster.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.ILogCollectionProperties LogCollectionProperty { get; set; }
        /// <summary>From DateTimeStamp from when logs need to be connected</summary>
        global::System.DateTime? LogCollectionPropertyFromDate { get; set; }
        /// <summary>Recent DateTimeStamp where logs are successfully generated</summary>
        global::System.DateTime? LogCollectionPropertyLastLogGenerated { get; set; }

        Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.ILogCollectionSession[] LogCollectionPropertyLogCollectionSessionDetail { get; set; }
        /// <summary>To DateTimeStamp till when logs need to be connected</summary>
        global::System.DateTime? LogCollectionPropertyToDate { get; set; }
        /// <summary>Provisioning state.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Support.ProvisioningState? ProvisioningState { get; set; }
        /// <summary>First cluster sync timestamp.</summary>
        global::System.DateTime? RegistrationTimestamp { get; set; }
        /// <summary>RemoteSupport properties of the cluster.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.IRemoteSupportProperties RemoteSupportProperty { get; set; }
        /// <summary>Remote Support Access Level</summary>
        Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Support.AccessLevel? RemoteSupportPropertyAccessLevel { get; set; }
        /// <summary>Expiration DateTimeStamp when Remote Support Access will be expired</summary>
        global::System.DateTime? RemoteSupportPropertyExpirationTimeStamp { get; set; }

        Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.IRemoteSupportNodeSettings[] RemoteSupportPropertyRemoteSupportNodeSetting { get; set; }

        Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.IPerNodeRemoteSupportSession[] RemoteSupportPropertyRemoteSupportSessionDetail { get; set; }
        /// <summary>Remote Support Type for cluster</summary>
        Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Support.RemoteSupportType? RemoteSupportPropertyRemoteSupportType { get; set; }
        /// <summary>Properties reported by cluster agent.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.IClusterReportedProperties ReportedProperty { get; set; }
        /// <summary>Unique id generated by the on-prem cluster.</summary>
        string ReportedPropertyClusterId { get; set; }
        /// <summary>Name of the on-prem cluster connected to this resource.</summary>
        string ReportedPropertyClusterName { get; set; }
        /// <summary>The node type of all the nodes of the cluster.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Support.ClusterNodeType? ReportedPropertyClusterType { get; set; }
        /// <summary>Version of the cluster software.</summary>
        string ReportedPropertyClusterVersion { get; set; }
        /// <summary>Level of diagnostic data emitted by the cluster.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Support.DiagnosticLevel? ReportedPropertyDiagnosticLevel { get; set; }
        /// <summary>IMDS attestation status of the cluster.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Support.ImdsAttestation? ReportedPropertyImdsAttestation { get; set; }
        /// <summary>Last time the cluster reported the data.</summary>
        global::System.DateTime? ReportedPropertyLastUpdated { get; set; }
        /// <summary>The manufacturer of all the nodes of the cluster.</summary>
        string ReportedPropertyManufacturer { get; set; }
        /// <summary>List of nodes reported by the cluster.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.IClusterNode[] ReportedPropertyNode { get; set; }
        /// <summary>OEM activation status of the cluster.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Support.OemActivation? ReportedPropertyOemActivation { get; set; }
        /// <summary>Capabilities supported by the cluster.</summary>
        string[] ReportedPropertySupportedCapability { get; set; }
        /// <summary>Object id of RP Service Principal</summary>
        string ResourceProviderObjectId { get; set; }
        /// <summary>Region specific DataPath Endpoint of the cluster.</summary>
        string ServiceEndpoint { get; set; }
        /// <summary>Software Assurance properties of the cluster.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.ISoftwareAssuranceProperties SoftwareAssuranceProperty { get; set; }
        /// <summary>TimeStamp denoting the latest SA benefit applicability is validated.</summary>
        global::System.DateTime? SoftwareAssurancePropertyLastUpdated { get; set; }
        /// <summary>Customer Intent for Software Assurance Benefit.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Support.SoftwareAssuranceIntent? SoftwareAssurancePropertySoftwareAssuranceIntent { get; set; }
        /// <summary>Status of the Software Assurance for the cluster.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Support.SoftwareAssuranceStatus? SoftwareAssurancePropertySoftwareAssuranceStatus { get; set; }
        /// <summary>Status of the cluster agent.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Support.Status? Status { get; set; }
        /// <summary>Number of days remaining in the trial period.</summary>
        float? TrialDaysRemaining { get; set; }

    }
}