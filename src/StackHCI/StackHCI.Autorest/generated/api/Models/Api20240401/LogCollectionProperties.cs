// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401
{
    using static Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Runtime.Extensions;

    /// <summary>Log Collection properties of the cluster.</summary>
    public partial class LogCollectionProperties :
        Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.ILogCollectionProperties,
        Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.ILogCollectionPropertiesInternal
    {

        /// <summary>Backing field for <see cref="FromDate" /> property.</summary>
        private global::System.DateTime? _fromDate;

        /// <summary>From DateTimeStamp from when logs need to be connected</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Origin(Microsoft.Azure.PowerShell.Cmdlets.StackHCI.PropertyOrigin.Owned)]
        public global::System.DateTime? FromDate { get => this._fromDate; }

        /// <summary>Backing field for <see cref="LastLogGenerated" /> property.</summary>
        private global::System.DateTime? _lastLogGenerated;

        /// <summary>Recent DateTimeStamp where logs are successfully generated</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Origin(Microsoft.Azure.PowerShell.Cmdlets.StackHCI.PropertyOrigin.Owned)]
        public global::System.DateTime? LastLogGenerated { get => this._lastLogGenerated; }

        /// <summary>Backing field for <see cref="LogCollectionSessionDetail" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.ILogCollectionSession[] _logCollectionSessionDetail;

        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Origin(Microsoft.Azure.PowerShell.Cmdlets.StackHCI.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.ILogCollectionSession[] LogCollectionSessionDetail { get => this._logCollectionSessionDetail; }

        /// <summary>Internal Acessors for FromDate</summary>
        global::System.DateTime? Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.ILogCollectionPropertiesInternal.FromDate { get => this._fromDate; set { {_fromDate = value;} } }

        /// <summary>Internal Acessors for LastLogGenerated</summary>
        global::System.DateTime? Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.ILogCollectionPropertiesInternal.LastLogGenerated { get => this._lastLogGenerated; set { {_lastLogGenerated = value;} } }

        /// <summary>Internal Acessors for LogCollectionSessionDetail</summary>
        Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.ILogCollectionSession[] Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.ILogCollectionPropertiesInternal.LogCollectionSessionDetail { get => this._logCollectionSessionDetail; set { {_logCollectionSessionDetail = value;} } }

        /// <summary>Internal Acessors for ToDate</summary>
        global::System.DateTime? Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.ILogCollectionPropertiesInternal.ToDate { get => this._toDate; set { {_toDate = value;} } }

        /// <summary>Backing field for <see cref="ToDate" /> property.</summary>
        private global::System.DateTime? _toDate;

        /// <summary>To DateTimeStamp till when logs need to be connected</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Origin(Microsoft.Azure.PowerShell.Cmdlets.StackHCI.PropertyOrigin.Owned)]
        public global::System.DateTime? ToDate { get => this._toDate; }

        /// <summary>Creates an new <see cref="LogCollectionProperties" /> instance.</summary>
        public LogCollectionProperties()
        {

        }
    }
    /// Log Collection properties of the cluster.
    public partial interface ILogCollectionProperties :
        Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Runtime.IJsonSerializable
    {
        /// <summary>From DateTimeStamp from when logs need to be connected</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"From DateTimeStamp from when logs need to be connected",
        SerializedName = @"fromDate",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? FromDate { get;  }
        /// <summary>Recent DateTimeStamp where logs are successfully generated</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Recent DateTimeStamp where logs are successfully generated",
        SerializedName = @"lastLogGenerated",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? LastLogGenerated { get;  }

        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"",
        SerializedName = @"logCollectionSessionDetails",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.ILogCollectionSession) })]
        Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.ILogCollectionSession[] LogCollectionSessionDetail { get;  }
        /// <summary>To DateTimeStamp till when logs need to be connected</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"To DateTimeStamp till when logs need to be connected",
        SerializedName = @"toDate",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? ToDate { get;  }

    }
    /// Log Collection properties of the cluster.
    internal partial interface ILogCollectionPropertiesInternal

    {
        /// <summary>From DateTimeStamp from when logs need to be connected</summary>
        global::System.DateTime? FromDate { get; set; }
        /// <summary>Recent DateTimeStamp where logs are successfully generated</summary>
        global::System.DateTime? LastLogGenerated { get; set; }

        Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.ILogCollectionSession[] LogCollectionSessionDetail { get; set; }
        /// <summary>To DateTimeStamp till when logs need to be connected</summary>
        global::System.DateTime? ToDate { get; set; }

    }
}