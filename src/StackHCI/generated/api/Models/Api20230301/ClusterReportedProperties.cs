// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20230301
{
    using static Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Runtime.Extensions;

    /// <summary>Properties reported by cluster agent.</summary>
    public partial class ClusterReportedProperties :
        Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20230301.IClusterReportedProperties,
        Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20230301.IClusterReportedPropertiesInternal
    {

        /// <summary>Backing field for <see cref="ClusterId" /> property.</summary>
        private string _clusterId;

        /// <summary>Unique id generated by the on-prem cluster.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Origin(Microsoft.Azure.PowerShell.Cmdlets.StackHCI.PropertyOrigin.Owned)]
        public string ClusterId { get => this._clusterId; }

        /// <summary>Backing field for <see cref="ClusterName" /> property.</summary>
        private string _clusterName;

        /// <summary>Name of the on-prem cluster connected to this resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Origin(Microsoft.Azure.PowerShell.Cmdlets.StackHCI.PropertyOrigin.Owned)]
        public string ClusterName { get => this._clusterName; }

        /// <summary>Backing field for <see cref="ClusterType" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Support.ClusterNodeType? _clusterType;

        /// <summary>The node type of all the nodes of the cluster.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Origin(Microsoft.Azure.PowerShell.Cmdlets.StackHCI.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Support.ClusterNodeType? ClusterType { get => this._clusterType; }

        /// <summary>Backing field for <see cref="ClusterVersion" /> property.</summary>
        private string _clusterVersion;

        /// <summary>Version of the cluster software.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Origin(Microsoft.Azure.PowerShell.Cmdlets.StackHCI.PropertyOrigin.Owned)]
        public string ClusterVersion { get => this._clusterVersion; }

        /// <summary>Backing field for <see cref="DiagnosticLevel" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Support.DiagnosticLevel? _diagnosticLevel;

        /// <summary>Level of diagnostic data emitted by the cluster.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Origin(Microsoft.Azure.PowerShell.Cmdlets.StackHCI.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Support.DiagnosticLevel? DiagnosticLevel { get => this._diagnosticLevel; set => this._diagnosticLevel = value; }

        /// <summary>Backing field for <see cref="ImdsAttestation" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Support.ImdsAttestation? _imdsAttestation;

        /// <summary>IMDS attestation status of the cluster.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Origin(Microsoft.Azure.PowerShell.Cmdlets.StackHCI.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Support.ImdsAttestation? ImdsAttestation { get => this._imdsAttestation; }

        /// <summary>Backing field for <see cref="LastUpdated" /> property.</summary>
        private global::System.DateTime? _lastUpdated;

        /// <summary>Last time the cluster reported the data.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Origin(Microsoft.Azure.PowerShell.Cmdlets.StackHCI.PropertyOrigin.Owned)]
        public global::System.DateTime? LastUpdated { get => this._lastUpdated; }

        /// <summary>Backing field for <see cref="Manufacturer" /> property.</summary>
        private string _manufacturer;

        /// <summary>The manufacturer of all the nodes of the cluster.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Origin(Microsoft.Azure.PowerShell.Cmdlets.StackHCI.PropertyOrigin.Owned)]
        public string Manufacturer { get => this._manufacturer; }

        /// <summary>Internal Acessors for ClusterId</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20230301.IClusterReportedPropertiesInternal.ClusterId { get => this._clusterId; set { {_clusterId = value;} } }

        /// <summary>Internal Acessors for ClusterName</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20230301.IClusterReportedPropertiesInternal.ClusterName { get => this._clusterName; set { {_clusterName = value;} } }

        /// <summary>Internal Acessors for ClusterType</summary>
        Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Support.ClusterNodeType? Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20230301.IClusterReportedPropertiesInternal.ClusterType { get => this._clusterType; set { {_clusterType = value;} } }

        /// <summary>Internal Acessors for ClusterVersion</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20230301.IClusterReportedPropertiesInternal.ClusterVersion { get => this._clusterVersion; set { {_clusterVersion = value;} } }

        /// <summary>Internal Acessors for ImdsAttestation</summary>
        Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Support.ImdsAttestation? Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20230301.IClusterReportedPropertiesInternal.ImdsAttestation { get => this._imdsAttestation; set { {_imdsAttestation = value;} } }

        /// <summary>Internal Acessors for LastUpdated</summary>
        global::System.DateTime? Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20230301.IClusterReportedPropertiesInternal.LastUpdated { get => this._lastUpdated; set { {_lastUpdated = value;} } }

        /// <summary>Internal Acessors for Manufacturer</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20230301.IClusterReportedPropertiesInternal.Manufacturer { get => this._manufacturer; set { {_manufacturer = value;} } }

        /// <summary>Internal Acessors for Node</summary>
        Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20230301.IClusterNode[] Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20230301.IClusterReportedPropertiesInternal.Node { get => this._node; set { {_node = value;} } }

        /// <summary>Internal Acessors for SupportedCapability</summary>
        string[] Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20230301.IClusterReportedPropertiesInternal.SupportedCapability { get => this._supportedCapability; set { {_supportedCapability = value;} } }

        /// <summary>Backing field for <see cref="Node" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20230301.IClusterNode[] _node;

        /// <summary>List of nodes reported by the cluster.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Origin(Microsoft.Azure.PowerShell.Cmdlets.StackHCI.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20230301.IClusterNode[] Node { get => this._node; }

        /// <summary>Backing field for <see cref="SupportedCapability" /> property.</summary>
        private string[] _supportedCapability;

        /// <summary>Capabilities supported by the cluster.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Origin(Microsoft.Azure.PowerShell.Cmdlets.StackHCI.PropertyOrigin.Owned)]
        public string[] SupportedCapability { get => this._supportedCapability; }

        /// <summary>Creates an new <see cref="ClusterReportedProperties" /> instance.</summary>
        public ClusterReportedProperties()
        {

        }
    }
    /// Properties reported by cluster agent.
    public partial interface IClusterReportedProperties :
        Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Runtime.IJsonSerializable
    {
        /// <summary>Unique id generated by the on-prem cluster.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Unique id generated by the on-prem cluster.",
        SerializedName = @"clusterId",
        PossibleTypes = new [] { typeof(string) })]
        string ClusterId { get;  }
        /// <summary>Name of the on-prem cluster connected to this resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Name of the on-prem cluster connected to this resource.",
        SerializedName = @"clusterName",
        PossibleTypes = new [] { typeof(string) })]
        string ClusterName { get;  }
        /// <summary>The node type of all the nodes of the cluster.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The node type of all the nodes of the cluster.",
        SerializedName = @"clusterType",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Support.ClusterNodeType) })]
        Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Support.ClusterNodeType? ClusterType { get;  }
        /// <summary>Version of the cluster software.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Version of the cluster software.",
        SerializedName = @"clusterVersion",
        PossibleTypes = new [] { typeof(string) })]
        string ClusterVersion { get;  }
        /// <summary>Level of diagnostic data emitted by the cluster.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Level of diagnostic data emitted by the cluster.",
        SerializedName = @"diagnosticLevel",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Support.DiagnosticLevel) })]
        Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Support.DiagnosticLevel? DiagnosticLevel { get; set; }
        /// <summary>IMDS attestation status of the cluster.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"IMDS attestation status of the cluster.",
        SerializedName = @"imdsAttestation",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Support.ImdsAttestation) })]
        Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Support.ImdsAttestation? ImdsAttestation { get;  }
        /// <summary>Last time the cluster reported the data.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Last time the cluster reported the data.",
        SerializedName = @"lastUpdated",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? LastUpdated { get;  }
        /// <summary>The manufacturer of all the nodes of the cluster.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The manufacturer of all the nodes of the cluster.",
        SerializedName = @"manufacturer",
        PossibleTypes = new [] { typeof(string) })]
        string Manufacturer { get;  }
        /// <summary>List of nodes reported by the cluster.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"List of nodes reported by the cluster.",
        SerializedName = @"nodes",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20230301.IClusterNode) })]
        Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20230301.IClusterNode[] Node { get;  }
        /// <summary>Capabilities supported by the cluster.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Capabilities supported by the cluster.",
        SerializedName = @"supportedCapabilities",
        PossibleTypes = new [] { typeof(string) })]
        string[] SupportedCapability { get;  }

    }
    /// Properties reported by cluster agent.
    internal partial interface IClusterReportedPropertiesInternal

    {
        /// <summary>Unique id generated by the on-prem cluster.</summary>
        string ClusterId { get; set; }
        /// <summary>Name of the on-prem cluster connected to this resource.</summary>
        string ClusterName { get; set; }
        /// <summary>The node type of all the nodes of the cluster.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Support.ClusterNodeType? ClusterType { get; set; }
        /// <summary>Version of the cluster software.</summary>
        string ClusterVersion { get; set; }
        /// <summary>Level of diagnostic data emitted by the cluster.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Support.DiagnosticLevel? DiagnosticLevel { get; set; }
        /// <summary>IMDS attestation status of the cluster.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Support.ImdsAttestation? ImdsAttestation { get; set; }
        /// <summary>Last time the cluster reported the data.</summary>
        global::System.DateTime? LastUpdated { get; set; }
        /// <summary>The manufacturer of all the nodes of the cluster.</summary>
        string Manufacturer { get; set; }
        /// <summary>List of nodes reported by the cluster.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20230301.IClusterNode[] Node { get; set; }
        /// <summary>Capabilities supported by the cluster.</summary>
        string[] SupportedCapability { get; set; }

    }
}