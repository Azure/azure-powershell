// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20230301
{
    using static Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Runtime.Extensions;

    /// <summary>Cluster properties.</summary>
    public partial class ClusterProperties :
        Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20230301.IClusterProperties,
        Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20230301.IClusterPropertiesInternal
    {

        /// <summary>Backing field for <see cref="AadApplicationObjectId" /> property.</summary>
        private string _aadApplicationObjectId;

        /// <summary>Object id of cluster AAD identity.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Origin(Microsoft.Azure.PowerShell.Cmdlets.StackHCI.PropertyOrigin.Owned)]
        public string AadApplicationObjectId { get => this._aadApplicationObjectId; set => this._aadApplicationObjectId = value; }

        /// <summary>Backing field for <see cref="AadClientId" /> property.</summary>
        private string _aadClientId;

        /// <summary>App id of cluster AAD identity.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Origin(Microsoft.Azure.PowerShell.Cmdlets.StackHCI.PropertyOrigin.Owned)]
        public string AadClientId { get => this._aadClientId; set => this._aadClientId = value; }

        /// <summary>Backing field for <see cref="AadServicePrincipalObjectId" /> property.</summary>
        private string _aadServicePrincipalObjectId;

        /// <summary>Id of cluster identity service principal.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Origin(Microsoft.Azure.PowerShell.Cmdlets.StackHCI.PropertyOrigin.Owned)]
        public string AadServicePrincipalObjectId { get => this._aadServicePrincipalObjectId; set => this._aadServicePrincipalObjectId = value; }

        /// <summary>Backing field for <see cref="AadTenantId" /> property.</summary>
        private string _aadTenantId;

        /// <summary>Tenant id of cluster AAD identity.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Origin(Microsoft.Azure.PowerShell.Cmdlets.StackHCI.PropertyOrigin.Owned)]
        public string AadTenantId { get => this._aadTenantId; set => this._aadTenantId = value; }

        /// <summary>Backing field for <see cref="BillingModel" /> property.</summary>
        private string _billingModel;

        /// <summary>Type of billing applied to the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Origin(Microsoft.Azure.PowerShell.Cmdlets.StackHCI.PropertyOrigin.Owned)]
        public string BillingModel { get => this._billingModel; }

        /// <summary>Backing field for <see cref="CloudId" /> property.</summary>
        private string _cloudId;

        /// <summary>Unique, immutable resource id.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Origin(Microsoft.Azure.PowerShell.Cmdlets.StackHCI.PropertyOrigin.Owned)]
        public string CloudId { get => this._cloudId; }

        /// <summary>Backing field for <see cref="CloudManagementEndpoint" /> property.</summary>
        private string _cloudManagementEndpoint;

        /// <summary>Endpoint configured for management from the Azure portal.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Origin(Microsoft.Azure.PowerShell.Cmdlets.StackHCI.PropertyOrigin.Owned)]
        public string CloudManagementEndpoint { get => this._cloudManagementEndpoint; set => this._cloudManagementEndpoint = value; }

        /// <summary>Backing field for <see cref="DesiredProperty" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20230301.IClusterDesiredProperties _desiredProperty;

        /// <summary>Desired properties of the cluster.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Origin(Microsoft.Azure.PowerShell.Cmdlets.StackHCI.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20230301.IClusterDesiredProperties DesiredProperty { get => (this._desiredProperty = this._desiredProperty ?? new Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20230301.ClusterDesiredProperties()); set => this._desiredProperty = value; }

        /// <summary>Desired level of diagnostic data emitted by the cluster.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Origin(Microsoft.Azure.PowerShell.Cmdlets.StackHCI.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Support.DiagnosticLevel? DesiredPropertyDiagnosticLevel { get => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20230301.IClusterDesiredPropertiesInternal)DesiredProperty).DiagnosticLevel; set => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20230301.IClusterDesiredPropertiesInternal)DesiredProperty).DiagnosticLevel = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Support.DiagnosticLevel)""); }

        /// <summary>Desired state of Windows Server Subscription.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Origin(Microsoft.Azure.PowerShell.Cmdlets.StackHCI.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Support.WindowsServerSubscription? DesiredPropertyWindowsServerSubscription { get => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20230301.IClusterDesiredPropertiesInternal)DesiredProperty).WindowsServerSubscription; set => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20230301.IClusterDesiredPropertiesInternal)DesiredProperty).WindowsServerSubscription = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Support.WindowsServerSubscription)""); }

        /// <summary>Backing field for <see cref="LastBillingTimestamp" /> property.</summary>
        private global::System.DateTime? _lastBillingTimestamp;

        /// <summary>Most recent billing meter timestamp.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Origin(Microsoft.Azure.PowerShell.Cmdlets.StackHCI.PropertyOrigin.Owned)]
        public global::System.DateTime? LastBillingTimestamp { get => this._lastBillingTimestamp; }

        /// <summary>Backing field for <see cref="LastSyncTimestamp" /> property.</summary>
        private global::System.DateTime? _lastSyncTimestamp;

        /// <summary>Most recent cluster sync timestamp.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Origin(Microsoft.Azure.PowerShell.Cmdlets.StackHCI.PropertyOrigin.Owned)]
        public global::System.DateTime? LastSyncTimestamp { get => this._lastSyncTimestamp; }

        /// <summary>Internal Acessors for BillingModel</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20230301.IClusterPropertiesInternal.BillingModel { get => this._billingModel; set { {_billingModel = value;} } }

        /// <summary>Internal Acessors for CloudId</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20230301.IClusterPropertiesInternal.CloudId { get => this._cloudId; set { {_cloudId = value;} } }

        /// <summary>Internal Acessors for DesiredProperty</summary>
        Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20230301.IClusterDesiredProperties Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20230301.IClusterPropertiesInternal.DesiredProperty { get => (this._desiredProperty = this._desiredProperty ?? new Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20230301.ClusterDesiredProperties()); set { {_desiredProperty = value;} } }

        /// <summary>Internal Acessors for LastBillingTimestamp</summary>
        global::System.DateTime? Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20230301.IClusterPropertiesInternal.LastBillingTimestamp { get => this._lastBillingTimestamp; set { {_lastBillingTimestamp = value;} } }

        /// <summary>Internal Acessors for LastSyncTimestamp</summary>
        global::System.DateTime? Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20230301.IClusterPropertiesInternal.LastSyncTimestamp { get => this._lastSyncTimestamp; set { {_lastSyncTimestamp = value;} } }

        /// <summary>Internal Acessors for ProvisioningState</summary>
        Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Support.ProvisioningState? Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20230301.IClusterPropertiesInternal.ProvisioningState { get => this._provisioningState; set { {_provisioningState = value;} } }

        /// <summary>Internal Acessors for RegistrationTimestamp</summary>
        global::System.DateTime? Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20230301.IClusterPropertiesInternal.RegistrationTimestamp { get => this._registrationTimestamp; set { {_registrationTimestamp = value;} } }

        /// <summary>Internal Acessors for ReportedProperty</summary>
        Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20230301.IClusterReportedProperties Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20230301.IClusterPropertiesInternal.ReportedProperty { get => (this._reportedProperty = this._reportedProperty ?? new Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20230301.ClusterReportedProperties()); set { {_reportedProperty = value;} } }

        /// <summary>Internal Acessors for ReportedPropertyClusterId</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20230301.IClusterPropertiesInternal.ReportedPropertyClusterId { get => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20230301.IClusterReportedPropertiesInternal)ReportedProperty).ClusterId; set => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20230301.IClusterReportedPropertiesInternal)ReportedProperty).ClusterId = value; }

        /// <summary>Internal Acessors for ReportedPropertyClusterName</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20230301.IClusterPropertiesInternal.ReportedPropertyClusterName { get => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20230301.IClusterReportedPropertiesInternal)ReportedProperty).ClusterName; set => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20230301.IClusterReportedPropertiesInternal)ReportedProperty).ClusterName = value; }

        /// <summary>Internal Acessors for ReportedPropertyClusterType</summary>
        Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Support.ClusterNodeType? Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20230301.IClusterPropertiesInternal.ReportedPropertyClusterType { get => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20230301.IClusterReportedPropertiesInternal)ReportedProperty).ClusterType; set => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20230301.IClusterReportedPropertiesInternal)ReportedProperty).ClusterType = value; }

        /// <summary>Internal Acessors for ReportedPropertyClusterVersion</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20230301.IClusterPropertiesInternal.ReportedPropertyClusterVersion { get => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20230301.IClusterReportedPropertiesInternal)ReportedProperty).ClusterVersion; set => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20230301.IClusterReportedPropertiesInternal)ReportedProperty).ClusterVersion = value; }

        /// <summary>Internal Acessors for ReportedPropertyImdsAttestation</summary>
        Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Support.ImdsAttestation? Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20230301.IClusterPropertiesInternal.ReportedPropertyImdsAttestation { get => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20230301.IClusterReportedPropertiesInternal)ReportedProperty).ImdsAttestation; set => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20230301.IClusterReportedPropertiesInternal)ReportedProperty).ImdsAttestation = value; }

        /// <summary>Internal Acessors for ReportedPropertyLastUpdated</summary>
        global::System.DateTime? Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20230301.IClusterPropertiesInternal.ReportedPropertyLastUpdated { get => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20230301.IClusterReportedPropertiesInternal)ReportedProperty).LastUpdated; set => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20230301.IClusterReportedPropertiesInternal)ReportedProperty).LastUpdated = value; }

        /// <summary>Internal Acessors for ReportedPropertyManufacturer</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20230301.IClusterPropertiesInternal.ReportedPropertyManufacturer { get => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20230301.IClusterReportedPropertiesInternal)ReportedProperty).Manufacturer; set => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20230301.IClusterReportedPropertiesInternal)ReportedProperty).Manufacturer = value; }

        /// <summary>Internal Acessors for ReportedPropertyNode</summary>
        Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20230301.IClusterNode[] Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20230301.IClusterPropertiesInternal.ReportedPropertyNode { get => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20230301.IClusterReportedPropertiesInternal)ReportedProperty).Node; set => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20230301.IClusterReportedPropertiesInternal)ReportedProperty).Node = value; }

        /// <summary>Internal Acessors for ReportedPropertySupportedCapability</summary>
        string[] Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20230301.IClusterPropertiesInternal.ReportedPropertySupportedCapability { get => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20230301.IClusterReportedPropertiesInternal)ReportedProperty).SupportedCapability; set => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20230301.IClusterReportedPropertiesInternal)ReportedProperty).SupportedCapability = value; }

        /// <summary>Internal Acessors for ResourceProviderObjectId</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20230301.IClusterPropertiesInternal.ResourceProviderObjectId { get => this._resourceProviderObjectId; set { {_resourceProviderObjectId = value;} } }

        /// <summary>Internal Acessors for ServiceEndpoint</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20230301.IClusterPropertiesInternal.ServiceEndpoint { get => this._serviceEndpoint; set { {_serviceEndpoint = value;} } }

        /// <summary>Internal Acessors for SoftwareAssuranceProperty</summary>
        Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20230301.ISoftwareAssuranceProperties Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20230301.IClusterPropertiesInternal.SoftwareAssuranceProperty { get => (this._softwareAssuranceProperty = this._softwareAssuranceProperty ?? new Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20230301.SoftwareAssuranceProperties()); set { {_softwareAssuranceProperty = value;} } }

        /// <summary>Internal Acessors for SoftwareAssurancePropertyLastUpdated</summary>
        global::System.DateTime? Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20230301.IClusterPropertiesInternal.SoftwareAssurancePropertyLastUpdated { get => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20230301.ISoftwareAssurancePropertiesInternal)SoftwareAssuranceProperty).LastUpdated; set => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20230301.ISoftwareAssurancePropertiesInternal)SoftwareAssuranceProperty).LastUpdated = value; }

        /// <summary>Internal Acessors for Status</summary>
        Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Support.Status? Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20230301.IClusterPropertiesInternal.Status { get => this._status; set { {_status = value;} } }

        /// <summary>Internal Acessors for TrialDaysRemaining</summary>
        float? Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20230301.IClusterPropertiesInternal.TrialDaysRemaining { get => this._trialDaysRemaining; set { {_trialDaysRemaining = value;} } }

        /// <summary>Backing field for <see cref="ProvisioningState" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Support.ProvisioningState? _provisioningState;

        /// <summary>Provisioning state.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Origin(Microsoft.Azure.PowerShell.Cmdlets.StackHCI.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Support.ProvisioningState? ProvisioningState { get => this._provisioningState; }

        /// <summary>Backing field for <see cref="RegistrationTimestamp" /> property.</summary>
        private global::System.DateTime? _registrationTimestamp;

        /// <summary>First cluster sync timestamp.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Origin(Microsoft.Azure.PowerShell.Cmdlets.StackHCI.PropertyOrigin.Owned)]
        public global::System.DateTime? RegistrationTimestamp { get => this._registrationTimestamp; }

        /// <summary>Backing field for <see cref="ReportedProperty" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20230301.IClusterReportedProperties _reportedProperty;

        /// <summary>Properties reported by cluster agent.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Origin(Microsoft.Azure.PowerShell.Cmdlets.StackHCI.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20230301.IClusterReportedProperties ReportedProperty { get => (this._reportedProperty = this._reportedProperty ?? new Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20230301.ClusterReportedProperties()); }

        /// <summary>Unique id generated by the on-prem cluster.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Origin(Microsoft.Azure.PowerShell.Cmdlets.StackHCI.PropertyOrigin.Inlined)]
        public string ReportedPropertyClusterId { get => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20230301.IClusterReportedPropertiesInternal)ReportedProperty).ClusterId; }

        /// <summary>Name of the on-prem cluster connected to this resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Origin(Microsoft.Azure.PowerShell.Cmdlets.StackHCI.PropertyOrigin.Inlined)]
        public string ReportedPropertyClusterName { get => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20230301.IClusterReportedPropertiesInternal)ReportedProperty).ClusterName; }

        /// <summary>The node type of all the nodes of the cluster.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Origin(Microsoft.Azure.PowerShell.Cmdlets.StackHCI.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Support.ClusterNodeType? ReportedPropertyClusterType { get => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20230301.IClusterReportedPropertiesInternal)ReportedProperty).ClusterType; }

        /// <summary>Version of the cluster software.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Origin(Microsoft.Azure.PowerShell.Cmdlets.StackHCI.PropertyOrigin.Inlined)]
        public string ReportedPropertyClusterVersion { get => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20230301.IClusterReportedPropertiesInternal)ReportedProperty).ClusterVersion; }

        /// <summary>Level of diagnostic data emitted by the cluster.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Origin(Microsoft.Azure.PowerShell.Cmdlets.StackHCI.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Support.DiagnosticLevel? ReportedPropertyDiagnosticLevel { get => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20230301.IClusterReportedPropertiesInternal)ReportedProperty).DiagnosticLevel; set => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20230301.IClusterReportedPropertiesInternal)ReportedProperty).DiagnosticLevel = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Support.DiagnosticLevel)""); }

        /// <summary>IMDS attestation status of the cluster.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Origin(Microsoft.Azure.PowerShell.Cmdlets.StackHCI.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Support.ImdsAttestation? ReportedPropertyImdsAttestation { get => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20230301.IClusterReportedPropertiesInternal)ReportedProperty).ImdsAttestation; }

        /// <summary>Last time the cluster reported the data.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Origin(Microsoft.Azure.PowerShell.Cmdlets.StackHCI.PropertyOrigin.Inlined)]
        public global::System.DateTime? ReportedPropertyLastUpdated { get => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20230301.IClusterReportedPropertiesInternal)ReportedProperty).LastUpdated; }

        /// <summary>The manufacturer of all the nodes of the cluster.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Origin(Microsoft.Azure.PowerShell.Cmdlets.StackHCI.PropertyOrigin.Inlined)]
        public string ReportedPropertyManufacturer { get => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20230301.IClusterReportedPropertiesInternal)ReportedProperty).Manufacturer; }

        /// <summary>List of nodes reported by the cluster.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Origin(Microsoft.Azure.PowerShell.Cmdlets.StackHCI.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20230301.IClusterNode[] ReportedPropertyNode { get => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20230301.IClusterReportedPropertiesInternal)ReportedProperty).Node; }

        /// <summary>Capabilities supported by the cluster.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Origin(Microsoft.Azure.PowerShell.Cmdlets.StackHCI.PropertyOrigin.Inlined)]
        public string[] ReportedPropertySupportedCapability { get => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20230301.IClusterReportedPropertiesInternal)ReportedProperty).SupportedCapability; }

        /// <summary>Backing field for <see cref="ResourceProviderObjectId" /> property.</summary>
        private string _resourceProviderObjectId;

        /// <summary>Object id of RP Service Principal</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Origin(Microsoft.Azure.PowerShell.Cmdlets.StackHCI.PropertyOrigin.Owned)]
        public string ResourceProviderObjectId { get => this._resourceProviderObjectId; }

        /// <summary>Backing field for <see cref="ServiceEndpoint" /> property.</summary>
        private string _serviceEndpoint;

        /// <summary>Region specific DataPath Endpoint of the cluster.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Origin(Microsoft.Azure.PowerShell.Cmdlets.StackHCI.PropertyOrigin.Owned)]
        public string ServiceEndpoint { get => this._serviceEndpoint; }

        /// <summary>Backing field for <see cref="SoftwareAssuranceProperty" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20230301.ISoftwareAssuranceProperties _softwareAssuranceProperty;

        /// <summary>Software Assurance properties of the cluster.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Origin(Microsoft.Azure.PowerShell.Cmdlets.StackHCI.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20230301.ISoftwareAssuranceProperties SoftwareAssuranceProperty { get => (this._softwareAssuranceProperty = this._softwareAssuranceProperty ?? new Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20230301.SoftwareAssuranceProperties()); set => this._softwareAssuranceProperty = value; }

        /// <summary>TimeStamp denoting the latest SA benefit applicability is validated.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Origin(Microsoft.Azure.PowerShell.Cmdlets.StackHCI.PropertyOrigin.Inlined)]
        public global::System.DateTime? SoftwareAssurancePropertyLastUpdated { get => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20230301.ISoftwareAssurancePropertiesInternal)SoftwareAssuranceProperty).LastUpdated; }

        /// <summary>Customer Intent for Software Assurance Benefit.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Origin(Microsoft.Azure.PowerShell.Cmdlets.StackHCI.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Support.SoftwareAssuranceIntent? SoftwareAssurancePropertySoftwareAssuranceIntent { get => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20230301.ISoftwareAssurancePropertiesInternal)SoftwareAssuranceProperty).SoftwareAssuranceIntent; set => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20230301.ISoftwareAssurancePropertiesInternal)SoftwareAssuranceProperty).SoftwareAssuranceIntent = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Support.SoftwareAssuranceIntent)""); }

        /// <summary>Status of the Software Assurance for the cluster.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Origin(Microsoft.Azure.PowerShell.Cmdlets.StackHCI.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Support.SoftwareAssuranceStatus? SoftwareAssurancePropertySoftwareAssuranceStatus { get => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20230301.ISoftwareAssurancePropertiesInternal)SoftwareAssuranceProperty).SoftwareAssuranceStatus; set => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20230301.ISoftwareAssurancePropertiesInternal)SoftwareAssuranceProperty).SoftwareAssuranceStatus = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Support.SoftwareAssuranceStatus)""); }

        /// <summary>Backing field for <see cref="Status" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Support.Status? _status;

        /// <summary>Status of the cluster agent.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Origin(Microsoft.Azure.PowerShell.Cmdlets.StackHCI.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Support.Status? Status { get => this._status; }

        /// <summary>Backing field for <see cref="TrialDaysRemaining" /> property.</summary>
        private float? _trialDaysRemaining;

        /// <summary>Number of days remaining in the trial period.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Origin(Microsoft.Azure.PowerShell.Cmdlets.StackHCI.PropertyOrigin.Owned)]
        public float? TrialDaysRemaining { get => this._trialDaysRemaining; }

        /// <summary>Creates an new <see cref="ClusterProperties" /> instance.</summary>
        public ClusterProperties()
        {

        }
    }
    /// Cluster properties.
    public partial interface IClusterProperties :
        Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Runtime.IJsonSerializable
    {
        /// <summary>Object id of cluster AAD identity.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Object id of cluster AAD identity.",
        SerializedName = @"aadApplicationObjectId",
        PossibleTypes = new [] { typeof(string) })]
        string AadApplicationObjectId { get; set; }
        /// <summary>App id of cluster AAD identity.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"App id of cluster AAD identity.",
        SerializedName = @"aadClientId",
        PossibleTypes = new [] { typeof(string) })]
        string AadClientId { get; set; }
        /// <summary>Id of cluster identity service principal.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Id of cluster identity service principal.",
        SerializedName = @"aadServicePrincipalObjectId",
        PossibleTypes = new [] { typeof(string) })]
        string AadServicePrincipalObjectId { get; set; }
        /// <summary>Tenant id of cluster AAD identity.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Tenant id of cluster AAD identity.",
        SerializedName = @"aadTenantId",
        PossibleTypes = new [] { typeof(string) })]
        string AadTenantId { get; set; }
        /// <summary>Type of billing applied to the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Type of billing applied to the resource.",
        SerializedName = @"billingModel",
        PossibleTypes = new [] { typeof(string) })]
        string BillingModel { get;  }
        /// <summary>Unique, immutable resource id.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Unique, immutable resource id.",
        SerializedName = @"cloudId",
        PossibleTypes = new [] { typeof(string) })]
        string CloudId { get;  }
        /// <summary>Endpoint configured for management from the Azure portal.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Endpoint configured for management from the Azure portal.",
        SerializedName = @"cloudManagementEndpoint",
        PossibleTypes = new [] { typeof(string) })]
        string CloudManagementEndpoint { get; set; }
        /// <summary>Desired level of diagnostic data emitted by the cluster.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Desired level of diagnostic data emitted by the cluster.",
        SerializedName = @"diagnosticLevel",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Support.DiagnosticLevel) })]
        Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Support.DiagnosticLevel? DesiredPropertyDiagnosticLevel { get; set; }
        /// <summary>Desired state of Windows Server Subscription.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Desired state of Windows Server Subscription.",
        SerializedName = @"windowsServerSubscription",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Support.WindowsServerSubscription) })]
        Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Support.WindowsServerSubscription? DesiredPropertyWindowsServerSubscription { get; set; }
        /// <summary>Most recent billing meter timestamp.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Most recent billing meter timestamp.",
        SerializedName = @"lastBillingTimestamp",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? LastBillingTimestamp { get;  }
        /// <summary>Most recent cluster sync timestamp.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Most recent cluster sync timestamp.",
        SerializedName = @"lastSyncTimestamp",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? LastSyncTimestamp { get;  }
        /// <summary>Provisioning state.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Provisioning state.",
        SerializedName = @"provisioningState",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Support.ProvisioningState) })]
        Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Support.ProvisioningState? ProvisioningState { get;  }
        /// <summary>First cluster sync timestamp.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"First cluster sync timestamp.",
        SerializedName = @"registrationTimestamp",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? RegistrationTimestamp { get;  }
        /// <summary>Unique id generated by the on-prem cluster.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Unique id generated by the on-prem cluster.",
        SerializedName = @"clusterId",
        PossibleTypes = new [] { typeof(string) })]
        string ReportedPropertyClusterId { get;  }
        /// <summary>Name of the on-prem cluster connected to this resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Name of the on-prem cluster connected to this resource.",
        SerializedName = @"clusterName",
        PossibleTypes = new [] { typeof(string) })]
        string ReportedPropertyClusterName { get;  }
        /// <summary>The node type of all the nodes of the cluster.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The node type of all the nodes of the cluster.",
        SerializedName = @"clusterType",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Support.ClusterNodeType) })]
        Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Support.ClusterNodeType? ReportedPropertyClusterType { get;  }
        /// <summary>Version of the cluster software.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Version of the cluster software.",
        SerializedName = @"clusterVersion",
        PossibleTypes = new [] { typeof(string) })]
        string ReportedPropertyClusterVersion { get;  }
        /// <summary>Level of diagnostic data emitted by the cluster.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Level of diagnostic data emitted by the cluster.",
        SerializedName = @"diagnosticLevel",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Support.DiagnosticLevel) })]
        Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Support.DiagnosticLevel? ReportedPropertyDiagnosticLevel { get; set; }
        /// <summary>IMDS attestation status of the cluster.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"IMDS attestation status of the cluster.",
        SerializedName = @"imdsAttestation",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Support.ImdsAttestation) })]
        Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Support.ImdsAttestation? ReportedPropertyImdsAttestation { get;  }
        /// <summary>Last time the cluster reported the data.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Last time the cluster reported the data.",
        SerializedName = @"lastUpdated",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? ReportedPropertyLastUpdated { get;  }
        /// <summary>The manufacturer of all the nodes of the cluster.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The manufacturer of all the nodes of the cluster.",
        SerializedName = @"manufacturer",
        PossibleTypes = new [] { typeof(string) })]
        string ReportedPropertyManufacturer { get;  }
        /// <summary>List of nodes reported by the cluster.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"List of nodes reported by the cluster.",
        SerializedName = @"nodes",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20230301.IClusterNode) })]
        Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20230301.IClusterNode[] ReportedPropertyNode { get;  }
        /// <summary>Capabilities supported by the cluster.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Capabilities supported by the cluster.",
        SerializedName = @"supportedCapabilities",
        PossibleTypes = new [] { typeof(string) })]
        string[] ReportedPropertySupportedCapability { get;  }
        /// <summary>Object id of RP Service Principal</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Object id of RP Service Principal",
        SerializedName = @"resourceProviderObjectId",
        PossibleTypes = new [] { typeof(string) })]
        string ResourceProviderObjectId { get;  }
        /// <summary>Region specific DataPath Endpoint of the cluster.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Region specific DataPath Endpoint of the cluster.",
        SerializedName = @"serviceEndpoint",
        PossibleTypes = new [] { typeof(string) })]
        string ServiceEndpoint { get;  }
        /// <summary>TimeStamp denoting the latest SA benefit applicability is validated.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"TimeStamp denoting the latest SA benefit applicability is validated.",
        SerializedName = @"lastUpdated",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? SoftwareAssurancePropertyLastUpdated { get;  }
        /// <summary>Customer Intent for Software Assurance Benefit.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Customer Intent for Software Assurance Benefit.",
        SerializedName = @"softwareAssuranceIntent",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Support.SoftwareAssuranceIntent) })]
        Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Support.SoftwareAssuranceIntent? SoftwareAssurancePropertySoftwareAssuranceIntent { get; set; }
        /// <summary>Status of the Software Assurance for the cluster.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Status of the Software Assurance for the cluster.",
        SerializedName = @"softwareAssuranceStatus",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Support.SoftwareAssuranceStatus) })]
        Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Support.SoftwareAssuranceStatus? SoftwareAssurancePropertySoftwareAssuranceStatus { get; set; }
        /// <summary>Status of the cluster agent.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Status of the cluster agent.",
        SerializedName = @"status",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Support.Status) })]
        Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Support.Status? Status { get;  }
        /// <summary>Number of days remaining in the trial period.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Number of days remaining in the trial period.",
        SerializedName = @"trialDaysRemaining",
        PossibleTypes = new [] { typeof(float) })]
        float? TrialDaysRemaining { get;  }

    }
    /// Cluster properties.
    internal partial interface IClusterPropertiesInternal

    {
        /// <summary>Object id of cluster AAD identity.</summary>
        string AadApplicationObjectId { get; set; }
        /// <summary>App id of cluster AAD identity.</summary>
        string AadClientId { get; set; }
        /// <summary>Id of cluster identity service principal.</summary>
        string AadServicePrincipalObjectId { get; set; }
        /// <summary>Tenant id of cluster AAD identity.</summary>
        string AadTenantId { get; set; }
        /// <summary>Type of billing applied to the resource.</summary>
        string BillingModel { get; set; }
        /// <summary>Unique, immutable resource id.</summary>
        string CloudId { get; set; }
        /// <summary>Endpoint configured for management from the Azure portal.</summary>
        string CloudManagementEndpoint { get; set; }
        /// <summary>Desired properties of the cluster.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20230301.IClusterDesiredProperties DesiredProperty { get; set; }
        /// <summary>Desired level of diagnostic data emitted by the cluster.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Support.DiagnosticLevel? DesiredPropertyDiagnosticLevel { get; set; }
        /// <summary>Desired state of Windows Server Subscription.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Support.WindowsServerSubscription? DesiredPropertyWindowsServerSubscription { get; set; }
        /// <summary>Most recent billing meter timestamp.</summary>
        global::System.DateTime? LastBillingTimestamp { get; set; }
        /// <summary>Most recent cluster sync timestamp.</summary>
        global::System.DateTime? LastSyncTimestamp { get; set; }
        /// <summary>Provisioning state.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Support.ProvisioningState? ProvisioningState { get; set; }
        /// <summary>First cluster sync timestamp.</summary>
        global::System.DateTime? RegistrationTimestamp { get; set; }
        /// <summary>Properties reported by cluster agent.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20230301.IClusterReportedProperties ReportedProperty { get; set; }
        /// <summary>Unique id generated by the on-prem cluster.</summary>
        string ReportedPropertyClusterId { get; set; }
        /// <summary>Name of the on-prem cluster connected to this resource.</summary>
        string ReportedPropertyClusterName { get; set; }
        /// <summary>The node type of all the nodes of the cluster.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Support.ClusterNodeType? ReportedPropertyClusterType { get; set; }
        /// <summary>Version of the cluster software.</summary>
        string ReportedPropertyClusterVersion { get; set; }
        /// <summary>Level of diagnostic data emitted by the cluster.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Support.DiagnosticLevel? ReportedPropertyDiagnosticLevel { get; set; }
        /// <summary>IMDS attestation status of the cluster.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Support.ImdsAttestation? ReportedPropertyImdsAttestation { get; set; }
        /// <summary>Last time the cluster reported the data.</summary>
        global::System.DateTime? ReportedPropertyLastUpdated { get; set; }
        /// <summary>The manufacturer of all the nodes of the cluster.</summary>
        string ReportedPropertyManufacturer { get; set; }
        /// <summary>List of nodes reported by the cluster.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20230301.IClusterNode[] ReportedPropertyNode { get; set; }
        /// <summary>Capabilities supported by the cluster.</summary>
        string[] ReportedPropertySupportedCapability { get; set; }
        /// <summary>Object id of RP Service Principal</summary>
        string ResourceProviderObjectId { get; set; }
        /// <summary>Region specific DataPath Endpoint of the cluster.</summary>
        string ServiceEndpoint { get; set; }
        /// <summary>Software Assurance properties of the cluster.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20230301.ISoftwareAssuranceProperties SoftwareAssuranceProperty { get; set; }
        /// <summary>TimeStamp denoting the latest SA benefit applicability is validated.</summary>
        global::System.DateTime? SoftwareAssurancePropertyLastUpdated { get; set; }
        /// <summary>Customer Intent for Software Assurance Benefit.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Support.SoftwareAssuranceIntent? SoftwareAssurancePropertySoftwareAssuranceIntent { get; set; }
        /// <summary>Status of the Software Assurance for the cluster.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Support.SoftwareAssuranceStatus? SoftwareAssurancePropertySoftwareAssuranceStatus { get; set; }
        /// <summary>Status of the cluster agent.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Support.Status? Status { get; set; }
        /// <summary>Number of days remaining in the trial period.</summary>
        float? TrialDaysRemaining { get; set; }

    }
}