// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20230301
{
    using static Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Runtime.Extensions;

    /// <summary>Status of Arc Extension for a particular node in HCI Cluster.</summary>
    public partial class PerNodeExtensionState :
        Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20230301.IPerNodeExtensionState,
        Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20230301.IPerNodeExtensionStateInternal
    {

        /// <summary>Backing field for <see cref="Extension" /> property.</summary>
        private string _extension;

        /// <summary>Fully qualified resource ID for the particular Arc Extension on this node.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Origin(Microsoft.Azure.PowerShell.Cmdlets.StackHCI.PropertyOrigin.Owned)]
        public string Extension { get => this._extension; }

        /// <summary>Backing field for <see cref="InstanceView" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20230301.IExtensionInstanceView _instanceView;

        /// <summary>The extension instance view.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Origin(Microsoft.Azure.PowerShell.Cmdlets.StackHCI.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20230301.IExtensionInstanceView InstanceView { get => (this._instanceView = this._instanceView ?? new Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20230301.ExtensionInstanceView()); }

        /// <summary>The extension name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Origin(Microsoft.Azure.PowerShell.Cmdlets.StackHCI.PropertyOrigin.Inlined)]
        public string InstanceViewName { get => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20230301.IExtensionInstanceViewInternal)InstanceView).Name; set => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20230301.IExtensionInstanceViewInternal)InstanceView).Name = value ?? null; }

        /// <summary>Specifies the type of the extension; an example is "MicrosoftMonitoringAgent".</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Origin(Microsoft.Azure.PowerShell.Cmdlets.StackHCI.PropertyOrigin.Inlined)]
        public string InstanceViewType { get => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20230301.IExtensionInstanceViewInternal)InstanceView).Type; set => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20230301.IExtensionInstanceViewInternal)InstanceView).Type = value ?? null; }

        /// <summary>Specifies the version of the script handler.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Origin(Microsoft.Azure.PowerShell.Cmdlets.StackHCI.PropertyOrigin.Inlined)]
        public string InstanceViewTypeHandlerVersion { get => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20230301.IExtensionInstanceViewInternal)InstanceView).TypeHandlerVersion; set => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20230301.IExtensionInstanceViewInternal)InstanceView).TypeHandlerVersion = value ?? null; }

        /// <summary>Internal Acessors for Extension</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20230301.IPerNodeExtensionStateInternal.Extension { get => this._extension; set { {_extension = value;} } }

        /// <summary>Internal Acessors for InstanceView</summary>
        Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20230301.IExtensionInstanceView Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20230301.IPerNodeExtensionStateInternal.InstanceView { get => (this._instanceView = this._instanceView ?? new Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20230301.ExtensionInstanceView()); set { {_instanceView = value;} } }

        /// <summary>Internal Acessors for InstanceViewStatus</summary>
        Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20230301.IExtensionInstanceViewStatus Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20230301.IPerNodeExtensionStateInternal.InstanceViewStatus { get => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20230301.IExtensionInstanceViewInternal)InstanceView).Status; set => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20230301.IExtensionInstanceViewInternal)InstanceView).Status = value; }

        /// <summary>Internal Acessors for Name</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20230301.IPerNodeExtensionStateInternal.Name { get => this._name; set { {_name = value;} } }

        /// <summary>Internal Acessors for State</summary>
        Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Support.NodeExtensionState? Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20230301.IPerNodeExtensionStateInternal.State { get => this._state; set { {_state = value;} } }

        /// <summary>Internal Acessors for TypeHandlerVersion</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20230301.IPerNodeExtensionStateInternal.TypeHandlerVersion { get => this._typeHandlerVersion; set { {_typeHandlerVersion = value;} } }

        /// <summary>Backing field for <see cref="Name" /> property.</summary>
        private string _name;

        /// <summary>Name of the node in HCI Cluster.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Origin(Microsoft.Azure.PowerShell.Cmdlets.StackHCI.PropertyOrigin.Owned)]
        public string Name { get => this._name; }

        /// <summary>Backing field for <see cref="State" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Support.NodeExtensionState? _state;

        /// <summary>State of Arc Extension in this node.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Origin(Microsoft.Azure.PowerShell.Cmdlets.StackHCI.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Support.NodeExtensionState? State { get => this._state; }

        /// <summary>The status code.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Origin(Microsoft.Azure.PowerShell.Cmdlets.StackHCI.PropertyOrigin.Inlined)]
        public string StatusCode { get => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20230301.IExtensionInstanceViewInternal)InstanceView).StatusCode; set => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20230301.IExtensionInstanceViewInternal)InstanceView).StatusCode = value ?? null; }

        /// <summary>The short localizable label for the status.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Origin(Microsoft.Azure.PowerShell.Cmdlets.StackHCI.PropertyOrigin.Inlined)]
        public string StatusDisplayStatus { get => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20230301.IExtensionInstanceViewInternal)InstanceView).StatusDisplayStatus; set => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20230301.IExtensionInstanceViewInternal)InstanceView).StatusDisplayStatus = value ?? null; }

        /// <summary>The level code.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Origin(Microsoft.Azure.PowerShell.Cmdlets.StackHCI.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Support.StatusLevelTypes? StatusLevel { get => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20230301.IExtensionInstanceViewInternal)InstanceView).StatusLevel; set => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20230301.IExtensionInstanceViewInternal)InstanceView).StatusLevel = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Support.StatusLevelTypes)""); }

        /// <summary>The detailed status message, including for alerts and error messages.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Origin(Microsoft.Azure.PowerShell.Cmdlets.StackHCI.PropertyOrigin.Inlined)]
        public string StatusMessage { get => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20230301.IExtensionInstanceViewInternal)InstanceView).StatusMessage; set => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20230301.IExtensionInstanceViewInternal)InstanceView).StatusMessage = value ?? null; }

        /// <summary>The time of the status.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Origin(Microsoft.Azure.PowerShell.Cmdlets.StackHCI.PropertyOrigin.Inlined)]
        public global::System.DateTime? StatusTime { get => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20230301.IExtensionInstanceViewInternal)InstanceView).StatusTime; set => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20230301.IExtensionInstanceViewInternal)InstanceView).StatusTime = value ?? default(global::System.DateTime); }

        /// <summary>Backing field for <see cref="TypeHandlerVersion" /> property.</summary>
        private string _typeHandlerVersion;

        /// <summary>Specifies the version of the script handler.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Origin(Microsoft.Azure.PowerShell.Cmdlets.StackHCI.PropertyOrigin.Owned)]
        public string TypeHandlerVersion { get => this._typeHandlerVersion; }

        /// <summary>Creates an new <see cref="PerNodeExtensionState" /> instance.</summary>
        public PerNodeExtensionState()
        {

        }
    }
    /// Status of Arc Extension for a particular node in HCI Cluster.
    public partial interface IPerNodeExtensionState :
        Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Runtime.IJsonSerializable
    {
        /// <summary>Fully qualified resource ID for the particular Arc Extension on this node.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Fully qualified resource ID for the particular Arc Extension on this node.",
        SerializedName = @"extension",
        PossibleTypes = new [] { typeof(string) })]
        string Extension { get;  }
        /// <summary>The extension name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The extension name.",
        SerializedName = @"name",
        PossibleTypes = new [] { typeof(string) })]
        string InstanceViewName { get; set; }
        /// <summary>Specifies the type of the extension; an example is "MicrosoftMonitoringAgent".</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Specifies the type of the extension; an example is ""MicrosoftMonitoringAgent"".",
        SerializedName = @"type",
        PossibleTypes = new [] { typeof(string) })]
        string InstanceViewType { get; set; }
        /// <summary>Specifies the version of the script handler.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Specifies the version of the script handler.",
        SerializedName = @"typeHandlerVersion",
        PossibleTypes = new [] { typeof(string) })]
        string InstanceViewTypeHandlerVersion { get; set; }
        /// <summary>Name of the node in HCI Cluster.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Name of the node in HCI Cluster.",
        SerializedName = @"name",
        PossibleTypes = new [] { typeof(string) })]
        string Name { get;  }
        /// <summary>State of Arc Extension in this node.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"State of Arc Extension in this node.",
        SerializedName = @"state",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Support.NodeExtensionState) })]
        Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Support.NodeExtensionState? State { get;  }
        /// <summary>The status code.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The status code.",
        SerializedName = @"code",
        PossibleTypes = new [] { typeof(string) })]
        string StatusCode { get; set; }
        /// <summary>The short localizable label for the status.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The short localizable label for the status.",
        SerializedName = @"displayStatus",
        PossibleTypes = new [] { typeof(string) })]
        string StatusDisplayStatus { get; set; }
        /// <summary>The level code.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The level code.",
        SerializedName = @"level",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Support.StatusLevelTypes) })]
        Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Support.StatusLevelTypes? StatusLevel { get; set; }
        /// <summary>The detailed status message, including for alerts and error messages.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The detailed status message, including for alerts and error messages.",
        SerializedName = @"message",
        PossibleTypes = new [] { typeof(string) })]
        string StatusMessage { get; set; }
        /// <summary>The time of the status.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The time of the status.",
        SerializedName = @"time",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? StatusTime { get; set; }
        /// <summary>Specifies the version of the script handler.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Specifies the version of the script handler.",
        SerializedName = @"typeHandlerVersion",
        PossibleTypes = new [] { typeof(string) })]
        string TypeHandlerVersion { get;  }

    }
    /// Status of Arc Extension for a particular node in HCI Cluster.
    internal partial interface IPerNodeExtensionStateInternal

    {
        /// <summary>Fully qualified resource ID for the particular Arc Extension on this node.</summary>
        string Extension { get; set; }
        /// <summary>The extension instance view.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20230301.IExtensionInstanceView InstanceView { get; set; }
        /// <summary>The extension name.</summary>
        string InstanceViewName { get; set; }
        /// <summary>Instance view status.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20230301.IExtensionInstanceViewStatus InstanceViewStatus { get; set; }
        /// <summary>Specifies the type of the extension; an example is "MicrosoftMonitoringAgent".</summary>
        string InstanceViewType { get; set; }
        /// <summary>Specifies the version of the script handler.</summary>
        string InstanceViewTypeHandlerVersion { get; set; }
        /// <summary>Name of the node in HCI Cluster.</summary>
        string Name { get; set; }
        /// <summary>State of Arc Extension in this node.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Support.NodeExtensionState? State { get; set; }
        /// <summary>The status code.</summary>
        string StatusCode { get; set; }
        /// <summary>The short localizable label for the status.</summary>
        string StatusDisplayStatus { get; set; }
        /// <summary>The level code.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Support.StatusLevelTypes? StatusLevel { get; set; }
        /// <summary>The detailed status message, including for alerts and error messages.</summary>
        string StatusMessage { get; set; }
        /// <summary>The time of the status.</summary>
        global::System.DateTime? StatusTime { get; set; }
        /// <summary>Specifies the version of the script handler.</summary>
        string TypeHandlerVersion { get; set; }

    }
}