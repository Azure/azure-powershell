// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20220501
{
    using static Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Runtime.Extensions;

    /// <summary>Cluster node details.</summary>
    public partial class ClusterNode :
        Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20220501.IClusterNode,
        Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20220501.IClusterNodeInternal
    {

        /// <summary>Backing field for <see cref="CoreCount" /> property.</summary>
        private float? _coreCount;

        /// <summary>Number of physical cores on the cluster node.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Origin(Microsoft.Azure.PowerShell.Cmdlets.StackHCI.PropertyOrigin.Owned)]
        public float? CoreCount { get => this._coreCount; }

        /// <summary>Backing field for <see cref="Id" /> property.</summary>
        private float? _id;

        /// <summary>Id of the node in the cluster.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Origin(Microsoft.Azure.PowerShell.Cmdlets.StackHCI.PropertyOrigin.Owned)]
        public float? Id { get => this._id; }

        /// <summary>Backing field for <see cref="Manufacturer" /> property.</summary>
        private string _manufacturer;

        /// <summary>Manufacturer of the cluster node hardware.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Origin(Microsoft.Azure.PowerShell.Cmdlets.StackHCI.PropertyOrigin.Owned)]
        public string Manufacturer { get => this._manufacturer; }

        /// <summary>Backing field for <see cref="MemoryInGiB" /> property.</summary>
        private float? _memoryInGiB;

        /// <summary>Total available memory on the cluster node (in GiB).</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Origin(Microsoft.Azure.PowerShell.Cmdlets.StackHCI.PropertyOrigin.Owned)]
        public float? MemoryInGiB { get => this._memoryInGiB; }

        /// <summary>Internal Acessors for CoreCount</summary>
        float? Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20220501.IClusterNodeInternal.CoreCount { get => this._coreCount; set { {_coreCount = value;} } }

        /// <summary>Internal Acessors for Id</summary>
        float? Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20220501.IClusterNodeInternal.Id { get => this._id; set { {_id = value;} } }

        /// <summary>Internal Acessors for Manufacturer</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20220501.IClusterNodeInternal.Manufacturer { get => this._manufacturer; set { {_manufacturer = value;} } }

        /// <summary>Internal Acessors for MemoryInGiB</summary>
        float? Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20220501.IClusterNodeInternal.MemoryInGiB { get => this._memoryInGiB; set { {_memoryInGiB = value;} } }

        /// <summary>Internal Acessors for Model</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20220501.IClusterNodeInternal.Model { get => this._model; set { {_model = value;} } }

        /// <summary>Internal Acessors for Name</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20220501.IClusterNodeInternal.Name { get => this._name; set { {_name = value;} } }

        /// <summary>Internal Acessors for OSName</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20220501.IClusterNodeInternal.OSName { get => this._oSName; set { {_oSName = value;} } }

        /// <summary>Internal Acessors for OSVersion</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20220501.IClusterNodeInternal.OSVersion { get => this._oSVersion; set { {_oSVersion = value;} } }

        /// <summary>Internal Acessors for SerialNumber</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20220501.IClusterNodeInternal.SerialNumber { get => this._serialNumber; set { {_serialNumber = value;} } }

        /// <summary>Internal Acessors for WindowsServerSubscription</summary>
        Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Support.WindowsServerSubscription? Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20220501.IClusterNodeInternal.WindowsServerSubscription { get => this._windowsServerSubscription; set { {_windowsServerSubscription = value;} } }

        /// <summary>Backing field for <see cref="Model" /> property.</summary>
        private string _model;

        /// <summary>Model name of the cluster node hardware.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Origin(Microsoft.Azure.PowerShell.Cmdlets.StackHCI.PropertyOrigin.Owned)]
        public string Model { get => this._model; }

        /// <summary>Backing field for <see cref="Name" /> property.</summary>
        private string _name;

        /// <summary>Name of the cluster node.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Origin(Microsoft.Azure.PowerShell.Cmdlets.StackHCI.PropertyOrigin.Owned)]
        public string Name { get => this._name; }

        /// <summary>Backing field for <see cref="OSName" /> property.</summary>
        private string _oSName;

        /// <summary>Operating system running on the cluster node.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Origin(Microsoft.Azure.PowerShell.Cmdlets.StackHCI.PropertyOrigin.Owned)]
        public string OSName { get => this._oSName; }

        /// <summary>Backing field for <see cref="OSVersion" /> property.</summary>
        private string _oSVersion;

        /// <summary>Version of the operating system running on the cluster node.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Origin(Microsoft.Azure.PowerShell.Cmdlets.StackHCI.PropertyOrigin.Owned)]
        public string OSVersion { get => this._oSVersion; }

        /// <summary>Backing field for <see cref="SerialNumber" /> property.</summary>
        private string _serialNumber;

        /// <summary>Immutable id of the cluster node.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Origin(Microsoft.Azure.PowerShell.Cmdlets.StackHCI.PropertyOrigin.Owned)]
        public string SerialNumber { get => this._serialNumber; }

        /// <summary>Backing field for <see cref="WindowsServerSubscription" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Support.WindowsServerSubscription? _windowsServerSubscription;

        /// <summary>State of Windows Server Subscription.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Origin(Microsoft.Azure.PowerShell.Cmdlets.StackHCI.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Support.WindowsServerSubscription? WindowsServerSubscription { get => this._windowsServerSubscription; }

        /// <summary>Creates an new <see cref="ClusterNode" /> instance.</summary>
        public ClusterNode()
        {

        }
    }
    /// Cluster node details.
    public partial interface IClusterNode :
        Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Runtime.IJsonSerializable
    {
        /// <summary>Number of physical cores on the cluster node.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Number of physical cores on the cluster node.",
        SerializedName = @"coreCount",
        PossibleTypes = new [] { typeof(float) })]
        float? CoreCount { get;  }
        /// <summary>Id of the node in the cluster.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Id of the node in the cluster.",
        SerializedName = @"id",
        PossibleTypes = new [] { typeof(float) })]
        float? Id { get;  }
        /// <summary>Manufacturer of the cluster node hardware.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Manufacturer of the cluster node hardware.",
        SerializedName = @"manufacturer",
        PossibleTypes = new [] { typeof(string) })]
        string Manufacturer { get;  }
        /// <summary>Total available memory on the cluster node (in GiB).</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Total available memory on the cluster node (in GiB).",
        SerializedName = @"memoryInGiB",
        PossibleTypes = new [] { typeof(float) })]
        float? MemoryInGiB { get;  }
        /// <summary>Model name of the cluster node hardware.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Model name of the cluster node hardware.",
        SerializedName = @"model",
        PossibleTypes = new [] { typeof(string) })]
        string Model { get;  }
        /// <summary>Name of the cluster node.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Name of the cluster node.",
        SerializedName = @"name",
        PossibleTypes = new [] { typeof(string) })]
        string Name { get;  }
        /// <summary>Operating system running on the cluster node.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Operating system running on the cluster node.",
        SerializedName = @"osName",
        PossibleTypes = new [] { typeof(string) })]
        string OSName { get;  }
        /// <summary>Version of the operating system running on the cluster node.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Version of the operating system running on the cluster node.",
        SerializedName = @"osVersion",
        PossibleTypes = new [] { typeof(string) })]
        string OSVersion { get;  }
        /// <summary>Immutable id of the cluster node.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Immutable id of the cluster node.",
        SerializedName = @"serialNumber",
        PossibleTypes = new [] { typeof(string) })]
        string SerialNumber { get;  }
        /// <summary>State of Windows Server Subscription.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"State of Windows Server Subscription.",
        SerializedName = @"windowsServerSubscription",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Support.WindowsServerSubscription) })]
        Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Support.WindowsServerSubscription? WindowsServerSubscription { get;  }

    }
    /// Cluster node details.
    internal partial interface IClusterNodeInternal

    {
        /// <summary>Number of physical cores on the cluster node.</summary>
        float? CoreCount { get; set; }
        /// <summary>Id of the node in the cluster.</summary>
        float? Id { get; set; }
        /// <summary>Manufacturer of the cluster node hardware.</summary>
        string Manufacturer { get; set; }
        /// <summary>Total available memory on the cluster node (in GiB).</summary>
        float? MemoryInGiB { get; set; }
        /// <summary>Model name of the cluster node hardware.</summary>
        string Model { get; set; }
        /// <summary>Name of the cluster node.</summary>
        string Name { get; set; }
        /// <summary>Operating system running on the cluster node.</summary>
        string OSName { get; set; }
        /// <summary>Version of the operating system running on the cluster node.</summary>
        string OSVersion { get; set; }
        /// <summary>Immutable id of the cluster node.</summary>
        string SerialNumber { get; set; }
        /// <summary>State of Windows Server Subscription.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Support.WindowsServerSubscription? WindowsServerSubscription { get; set; }

    }
}