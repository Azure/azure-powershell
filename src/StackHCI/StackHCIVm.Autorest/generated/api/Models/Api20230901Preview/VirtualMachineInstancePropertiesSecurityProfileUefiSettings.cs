// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Models.Api20230901Preview
{
    using static Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Runtime.Extensions;

    public partial class VirtualMachineInstancePropertiesSecurityProfileUefiSettings :
        Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Models.Api20230901Preview.IVirtualMachineInstancePropertiesSecurityProfileUefiSettings,
        Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Models.Api20230901Preview.IVirtualMachineInstancePropertiesSecurityProfileUefiSettingsInternal
    {

        /// <summary>Backing field for <see cref="SecureBootEnabled" /> property.</summary>
        private bool? _secureBootEnabled;

        /// <summary>
        /// Specifies whether secure boot should be enabled on the virtual machine instance.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Origin(Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.PropertyOrigin.Owned)]
        public bool? SecureBootEnabled { get => this._secureBootEnabled; set => this._secureBootEnabled = value; }

        /// <summary>
        /// Creates an new <see cref="VirtualMachineInstancePropertiesSecurityProfileUefiSettings" /> instance.
        /// </summary>
        public VirtualMachineInstancePropertiesSecurityProfileUefiSettings()
        {

        }
    }
    public partial interface IVirtualMachineInstancePropertiesSecurityProfileUefiSettings :
        Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Runtime.IJsonSerializable
    {
        /// <summary>
        /// Specifies whether secure boot should be enabled on the virtual machine instance.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Specifies whether secure boot should be enabled on the virtual machine instance.",
        SerializedName = @"secureBootEnabled",
        PossibleTypes = new [] { typeof(bool) })]
        bool? SecureBootEnabled { get; set; }

    }
    internal partial interface IVirtualMachineInstancePropertiesSecurityProfileUefiSettingsInternal

    {
        /// <summary>
        /// Specifies whether secure boot should be enabled on the virtual machine instance.
        /// </summary>
        bool? SecureBootEnabled { get; set; }

    }
}