// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Models.Api20230901Preview
{
    using Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Runtime.PowerShell;

    /// <summary>
    /// OsProfile - describes the configuration of the operating system and sets login data
    /// </summary>
    [System.ComponentModel.TypeConverter(typeof(VirtualMachineInstancePropertiesOSProfileTypeConverter))]
    public partial class VirtualMachineInstancePropertiesOSProfile
    {

        /// <summary>
        /// <c>AfterDeserializeDictionary</c> will be called after the deserialization has finished, allowing customization of the
        /// object before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>

        partial void AfterDeserializeDictionary(global::System.Collections.IDictionary content);

        /// <summary>
        /// <c>AfterDeserializePSObject</c> will be called after the deserialization has finished, allowing customization of the object
        /// before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>

        partial void AfterDeserializePSObject(global::System.Management.Automation.PSObject content);

        /// <summary>
        /// <c>BeforeDeserializeDictionary</c> will be called before the deserialization has commenced, allowing complete customization
        /// of the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <paramref name="returnNow" /> output
        /// parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeDeserializeDictionary(global::System.Collections.IDictionary content, ref bool returnNow);

        /// <summary>
        /// <c>BeforeDeserializePSObject</c> will be called before the deserialization has commenced, allowing complete customization
        /// of the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <paramref name="returnNow" /> output
        /// parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeDeserializePSObject(global::System.Management.Automation.PSObject content, ref bool returnNow);

        /// <summary>
        /// Deserializes a <see cref="global::System.Collections.IDictionary" /> into an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Models.Api20230901Preview.VirtualMachineInstancePropertiesOSProfile"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        /// <returns>
        /// an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Models.Api20230901Preview.IVirtualMachineInstancePropertiesOSProfile"
        /// />.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Models.Api20230901Preview.IVirtualMachineInstancePropertiesOSProfile DeserializeFromDictionary(global::System.Collections.IDictionary content)
        {
            return new VirtualMachineInstancePropertiesOSProfile(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Management.Automation.PSObject" /> into an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Models.Api20230901Preview.VirtualMachineInstancePropertiesOSProfile"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        /// <returns>
        /// an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Models.Api20230901Preview.IVirtualMachineInstancePropertiesOSProfile"
        /// />.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Models.Api20230901Preview.IVirtualMachineInstancePropertiesOSProfile DeserializeFromPSObject(global::System.Management.Automation.PSObject content)
        {
            return new VirtualMachineInstancePropertiesOSProfile(content);
        }

        /// <summary>
        /// Creates a new instance of <see cref="VirtualMachineInstancePropertiesOSProfile" />, deserializing the content from a json
        /// string.
        /// </summary>
        /// <param name="jsonText">a string containing a JSON serialized instance of this model.</param>
        /// <returns>
        /// an instance of the <see cref="VirtualMachineInstancePropertiesOSProfile" /> model class.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Models.Api20230901Preview.IVirtualMachineInstancePropertiesOSProfile FromJsonString(string jsonText) => FromJson(Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Runtime.Json.JsonNode.Parse(jsonText));

        /// <summary>Serializes this instance to a json string.</summary>

        /// <returns>a <see cref="System.String" /> containing this model serialized to JSON text.</returns>
        public string ToJsonString() => ToJson(null, Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Runtime.SerializationMode.IncludeAll)?.ToString();

        /// <summary>
        /// Deserializes a <see cref="global::System.Collections.IDictionary" /> into a new instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Models.Api20230901Preview.VirtualMachineInstancePropertiesOSProfile"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        internal VirtualMachineInstancePropertiesOSProfile(global::System.Collections.IDictionary content)
        {
            bool returnNow = false;
            BeforeDeserializeDictionary(content, ref returnNow);
            if (returnNow)
            {
                return;
            }
            // actually deserialize
            if (content.Contains("LinuxConfiguration"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Models.Api20230901Preview.IVirtualMachineInstancePropertiesOSProfileInternal)this).LinuxConfiguration = (Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Models.Api20230901Preview.IVirtualMachineInstancePropertiesOSProfileLinuxConfiguration) content.GetValueForProperty("LinuxConfiguration",((Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Models.Api20230901Preview.IVirtualMachineInstancePropertiesOSProfileInternal)this).LinuxConfiguration, Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Models.Api20230901Preview.VirtualMachineInstancePropertiesOSProfileLinuxConfigurationTypeConverter.ConvertFrom);
            }
            if (content.Contains("WindowsConfiguration"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Models.Api20230901Preview.IVirtualMachineInstancePropertiesOSProfileInternal)this).WindowsConfiguration = (Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Models.Api20230901Preview.IVirtualMachineInstancePropertiesOSProfileWindowsConfiguration) content.GetValueForProperty("WindowsConfiguration",((Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Models.Api20230901Preview.IVirtualMachineInstancePropertiesOSProfileInternal)this).WindowsConfiguration, Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Models.Api20230901Preview.VirtualMachineInstancePropertiesOSProfileWindowsConfigurationTypeConverter.ConvertFrom);
            }
            if (content.Contains("AdminPassword"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Models.Api20230901Preview.IVirtualMachineInstancePropertiesOSProfileInternal)this).AdminPassword = (string) content.GetValueForProperty("AdminPassword",((Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Models.Api20230901Preview.IVirtualMachineInstancePropertiesOSProfileInternal)this).AdminPassword, global::System.Convert.ToString);
            }
            if (content.Contains("AdminUsername"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Models.Api20230901Preview.IVirtualMachineInstancePropertiesOSProfileInternal)this).AdminUsername = (string) content.GetValueForProperty("AdminUsername",((Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Models.Api20230901Preview.IVirtualMachineInstancePropertiesOSProfileInternal)this).AdminUsername, global::System.Convert.ToString);
            }
            if (content.Contains("ComputerName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Models.Api20230901Preview.IVirtualMachineInstancePropertiesOSProfileInternal)this).ComputerName = (string) content.GetValueForProperty("ComputerName",((Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Models.Api20230901Preview.IVirtualMachineInstancePropertiesOSProfileInternal)this).ComputerName, global::System.Convert.ToString);
            }
            if (content.Contains("LinuxConfigurationSsh"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Models.Api20230901Preview.IVirtualMachineInstancePropertiesOSProfileInternal)this).LinuxConfigurationSsh = (Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Models.Api20230901Preview.ISshConfiguration) content.GetValueForProperty("LinuxConfigurationSsh",((Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Models.Api20230901Preview.IVirtualMachineInstancePropertiesOSProfileInternal)this).LinuxConfigurationSsh, Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Models.Api20230901Preview.SshConfigurationTypeConverter.ConvertFrom);
            }
            if (content.Contains("LinuxConfigurationDisablePasswordAuthentication"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Models.Api20230901Preview.IVirtualMachineInstancePropertiesOSProfileInternal)this).LinuxConfigurationDisablePasswordAuthentication = (bool?) content.GetValueForProperty("LinuxConfigurationDisablePasswordAuthentication",((Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Models.Api20230901Preview.IVirtualMachineInstancePropertiesOSProfileInternal)this).LinuxConfigurationDisablePasswordAuthentication, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("LinuxConfigurationProvisionVMAgent"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Models.Api20230901Preview.IVirtualMachineInstancePropertiesOSProfileInternal)this).LinuxConfigurationProvisionVMAgent = (bool?) content.GetValueForProperty("LinuxConfigurationProvisionVMAgent",((Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Models.Api20230901Preview.IVirtualMachineInstancePropertiesOSProfileInternal)this).LinuxConfigurationProvisionVMAgent, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("LinuxConfigurationProvisionVMConfigAgent"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Models.Api20230901Preview.IVirtualMachineInstancePropertiesOSProfileInternal)this).LinuxConfigurationProvisionVMConfigAgent = (bool?) content.GetValueForProperty("LinuxConfigurationProvisionVMConfigAgent",((Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Models.Api20230901Preview.IVirtualMachineInstancePropertiesOSProfileInternal)this).LinuxConfigurationProvisionVMConfigAgent, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("WindowConfigurationSsh"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Models.Api20230901Preview.IVirtualMachineInstancePropertiesOSProfileInternal)this).WindowConfigurationSsh = (Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Models.Api20230901Preview.ISshConfiguration) content.GetValueForProperty("WindowConfigurationSsh",((Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Models.Api20230901Preview.IVirtualMachineInstancePropertiesOSProfileInternal)this).WindowConfigurationSsh, Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Models.Api20230901Preview.SshConfigurationTypeConverter.ConvertFrom);
            }
            if (content.Contains("WindowConfigurationEnableAutomaticUpdate"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Models.Api20230901Preview.IVirtualMachineInstancePropertiesOSProfileInternal)this).WindowConfigurationEnableAutomaticUpdate = (bool?) content.GetValueForProperty("WindowConfigurationEnableAutomaticUpdate",((Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Models.Api20230901Preview.IVirtualMachineInstancePropertiesOSProfileInternal)this).WindowConfigurationEnableAutomaticUpdate, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("WindowConfigurationTimeZone"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Models.Api20230901Preview.IVirtualMachineInstancePropertiesOSProfileInternal)this).WindowConfigurationTimeZone = (string) content.GetValueForProperty("WindowConfigurationTimeZone",((Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Models.Api20230901Preview.IVirtualMachineInstancePropertiesOSProfileInternal)this).WindowConfigurationTimeZone, global::System.Convert.ToString);
            }
            if (content.Contains("WindowConfigurationProvisionVMAgent"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Models.Api20230901Preview.IVirtualMachineInstancePropertiesOSProfileInternal)this).WindowConfigurationProvisionVMAgent = (bool?) content.GetValueForProperty("WindowConfigurationProvisionVMAgent",((Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Models.Api20230901Preview.IVirtualMachineInstancePropertiesOSProfileInternal)this).WindowConfigurationProvisionVMAgent, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("WindowConfigurationProvisionVMConfigAgent"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Models.Api20230901Preview.IVirtualMachineInstancePropertiesOSProfileInternal)this).WindowConfigurationProvisionVMConfigAgent = (bool?) content.GetValueForProperty("WindowConfigurationProvisionVMConfigAgent",((Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Models.Api20230901Preview.IVirtualMachineInstancePropertiesOSProfileInternal)this).WindowConfigurationProvisionVMConfigAgent, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("LinuxConfigurationSshPublicKey"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Models.Api20230901Preview.IVirtualMachineInstancePropertiesOSProfileInternal)this).LinuxConfigurationSshPublicKey = (Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Models.Api20230901Preview.ISshPublicKey[]) content.GetValueForProperty("LinuxConfigurationSshPublicKey",((Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Models.Api20230901Preview.IVirtualMachineInstancePropertiesOSProfileInternal)this).LinuxConfigurationSshPublicKey, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Models.Api20230901Preview.ISshPublicKey>(__y, Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Models.Api20230901Preview.SshPublicKeyTypeConverter.ConvertFrom));
            }
            if (content.Contains("WindowsConfigurationSshPublicKey"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Models.Api20230901Preview.IVirtualMachineInstancePropertiesOSProfileInternal)this).WindowsConfigurationSshPublicKey = (Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Models.Api20230901Preview.ISshPublicKey[]) content.GetValueForProperty("WindowsConfigurationSshPublicKey",((Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Models.Api20230901Preview.IVirtualMachineInstancePropertiesOSProfileInternal)this).WindowsConfigurationSshPublicKey, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Models.Api20230901Preview.ISshPublicKey>(__y, Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Models.Api20230901Preview.SshPublicKeyTypeConverter.ConvertFrom));
            }
            AfterDeserializeDictionary(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Management.Automation.PSObject" /> into a new instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Models.Api20230901Preview.VirtualMachineInstancePropertiesOSProfile"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        internal VirtualMachineInstancePropertiesOSProfile(global::System.Management.Automation.PSObject content)
        {
            bool returnNow = false;
            BeforeDeserializePSObject(content, ref returnNow);
            if (returnNow)
            {
                return;
            }
            // actually deserialize
            if (content.Contains("LinuxConfiguration"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Models.Api20230901Preview.IVirtualMachineInstancePropertiesOSProfileInternal)this).LinuxConfiguration = (Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Models.Api20230901Preview.IVirtualMachineInstancePropertiesOSProfileLinuxConfiguration) content.GetValueForProperty("LinuxConfiguration",((Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Models.Api20230901Preview.IVirtualMachineInstancePropertiesOSProfileInternal)this).LinuxConfiguration, Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Models.Api20230901Preview.VirtualMachineInstancePropertiesOSProfileLinuxConfigurationTypeConverter.ConvertFrom);
            }
            if (content.Contains("WindowsConfiguration"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Models.Api20230901Preview.IVirtualMachineInstancePropertiesOSProfileInternal)this).WindowsConfiguration = (Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Models.Api20230901Preview.IVirtualMachineInstancePropertiesOSProfileWindowsConfiguration) content.GetValueForProperty("WindowsConfiguration",((Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Models.Api20230901Preview.IVirtualMachineInstancePropertiesOSProfileInternal)this).WindowsConfiguration, Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Models.Api20230901Preview.VirtualMachineInstancePropertiesOSProfileWindowsConfigurationTypeConverter.ConvertFrom);
            }
            if (content.Contains("AdminPassword"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Models.Api20230901Preview.IVirtualMachineInstancePropertiesOSProfileInternal)this).AdminPassword = (string) content.GetValueForProperty("AdminPassword",((Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Models.Api20230901Preview.IVirtualMachineInstancePropertiesOSProfileInternal)this).AdminPassword, global::System.Convert.ToString);
            }
            if (content.Contains("AdminUsername"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Models.Api20230901Preview.IVirtualMachineInstancePropertiesOSProfileInternal)this).AdminUsername = (string) content.GetValueForProperty("AdminUsername",((Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Models.Api20230901Preview.IVirtualMachineInstancePropertiesOSProfileInternal)this).AdminUsername, global::System.Convert.ToString);
            }
            if (content.Contains("ComputerName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Models.Api20230901Preview.IVirtualMachineInstancePropertiesOSProfileInternal)this).ComputerName = (string) content.GetValueForProperty("ComputerName",((Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Models.Api20230901Preview.IVirtualMachineInstancePropertiesOSProfileInternal)this).ComputerName, global::System.Convert.ToString);
            }
            if (content.Contains("LinuxConfigurationSsh"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Models.Api20230901Preview.IVirtualMachineInstancePropertiesOSProfileInternal)this).LinuxConfigurationSsh = (Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Models.Api20230901Preview.ISshConfiguration) content.GetValueForProperty("LinuxConfigurationSsh",((Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Models.Api20230901Preview.IVirtualMachineInstancePropertiesOSProfileInternal)this).LinuxConfigurationSsh, Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Models.Api20230901Preview.SshConfigurationTypeConverter.ConvertFrom);
            }
            if (content.Contains("LinuxConfigurationDisablePasswordAuthentication"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Models.Api20230901Preview.IVirtualMachineInstancePropertiesOSProfileInternal)this).LinuxConfigurationDisablePasswordAuthentication = (bool?) content.GetValueForProperty("LinuxConfigurationDisablePasswordAuthentication",((Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Models.Api20230901Preview.IVirtualMachineInstancePropertiesOSProfileInternal)this).LinuxConfigurationDisablePasswordAuthentication, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("LinuxConfigurationProvisionVMAgent"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Models.Api20230901Preview.IVirtualMachineInstancePropertiesOSProfileInternal)this).LinuxConfigurationProvisionVMAgent = (bool?) content.GetValueForProperty("LinuxConfigurationProvisionVMAgent",((Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Models.Api20230901Preview.IVirtualMachineInstancePropertiesOSProfileInternal)this).LinuxConfigurationProvisionVMAgent, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("LinuxConfigurationProvisionVMConfigAgent"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Models.Api20230901Preview.IVirtualMachineInstancePropertiesOSProfileInternal)this).LinuxConfigurationProvisionVMConfigAgent = (bool?) content.GetValueForProperty("LinuxConfigurationProvisionVMConfigAgent",((Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Models.Api20230901Preview.IVirtualMachineInstancePropertiesOSProfileInternal)this).LinuxConfigurationProvisionVMConfigAgent, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("WindowConfigurationSsh"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Models.Api20230901Preview.IVirtualMachineInstancePropertiesOSProfileInternal)this).WindowConfigurationSsh = (Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Models.Api20230901Preview.ISshConfiguration) content.GetValueForProperty("WindowConfigurationSsh",((Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Models.Api20230901Preview.IVirtualMachineInstancePropertiesOSProfileInternal)this).WindowConfigurationSsh, Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Models.Api20230901Preview.SshConfigurationTypeConverter.ConvertFrom);
            }
            if (content.Contains("WindowConfigurationEnableAutomaticUpdate"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Models.Api20230901Preview.IVirtualMachineInstancePropertiesOSProfileInternal)this).WindowConfigurationEnableAutomaticUpdate = (bool?) content.GetValueForProperty("WindowConfigurationEnableAutomaticUpdate",((Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Models.Api20230901Preview.IVirtualMachineInstancePropertiesOSProfileInternal)this).WindowConfigurationEnableAutomaticUpdate, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("WindowConfigurationTimeZone"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Models.Api20230901Preview.IVirtualMachineInstancePropertiesOSProfileInternal)this).WindowConfigurationTimeZone = (string) content.GetValueForProperty("WindowConfigurationTimeZone",((Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Models.Api20230901Preview.IVirtualMachineInstancePropertiesOSProfileInternal)this).WindowConfigurationTimeZone, global::System.Convert.ToString);
            }
            if (content.Contains("WindowConfigurationProvisionVMAgent"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Models.Api20230901Preview.IVirtualMachineInstancePropertiesOSProfileInternal)this).WindowConfigurationProvisionVMAgent = (bool?) content.GetValueForProperty("WindowConfigurationProvisionVMAgent",((Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Models.Api20230901Preview.IVirtualMachineInstancePropertiesOSProfileInternal)this).WindowConfigurationProvisionVMAgent, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("WindowConfigurationProvisionVMConfigAgent"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Models.Api20230901Preview.IVirtualMachineInstancePropertiesOSProfileInternal)this).WindowConfigurationProvisionVMConfigAgent = (bool?) content.GetValueForProperty("WindowConfigurationProvisionVMConfigAgent",((Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Models.Api20230901Preview.IVirtualMachineInstancePropertiesOSProfileInternal)this).WindowConfigurationProvisionVMConfigAgent, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("LinuxConfigurationSshPublicKey"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Models.Api20230901Preview.IVirtualMachineInstancePropertiesOSProfileInternal)this).LinuxConfigurationSshPublicKey = (Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Models.Api20230901Preview.ISshPublicKey[]) content.GetValueForProperty("LinuxConfigurationSshPublicKey",((Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Models.Api20230901Preview.IVirtualMachineInstancePropertiesOSProfileInternal)this).LinuxConfigurationSshPublicKey, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Models.Api20230901Preview.ISshPublicKey>(__y, Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Models.Api20230901Preview.SshPublicKeyTypeConverter.ConvertFrom));
            }
            if (content.Contains("WindowsConfigurationSshPublicKey"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Models.Api20230901Preview.IVirtualMachineInstancePropertiesOSProfileInternal)this).WindowsConfigurationSshPublicKey = (Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Models.Api20230901Preview.ISshPublicKey[]) content.GetValueForProperty("WindowsConfigurationSshPublicKey",((Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Models.Api20230901Preview.IVirtualMachineInstancePropertiesOSProfileInternal)this).WindowsConfigurationSshPublicKey, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Models.Api20230901Preview.ISshPublicKey>(__y, Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Models.Api20230901Preview.SshPublicKeyTypeConverter.ConvertFrom));
            }
            AfterDeserializePSObject(content);
        }
    }
    /// OsProfile - describes the configuration of the operating system and sets login data
    [System.ComponentModel.TypeConverter(typeof(VirtualMachineInstancePropertiesOSProfileTypeConverter))]
    public partial interface IVirtualMachineInstancePropertiesOSProfile

    {

    }
}