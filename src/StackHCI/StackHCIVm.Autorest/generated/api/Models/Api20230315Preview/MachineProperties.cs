// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Models.Api20230315Preview
{
    using static Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Runtime.Extensions;

    /// <summary>Describes the properties of a hybrid machine.</summary>
    public partial class MachineProperties :
        Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Models.Api20230315Preview.IMachineProperties,
        Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Models.Api20230315Preview.IMachinePropertiesInternal
    {

        /// <summary>Backing field for <see cref="AdFqdn" /> property.</summary>
        private string _adFqdn;

        /// <summary>Specifies the AD fully qualified display name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Origin(Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.PropertyOrigin.Owned)]
        public string AdFqdn { get => this._adFqdn; }

        /// <summary>Backing field for <see cref="AgentConfiguration" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Models.Api20230315Preview.IAgentConfiguration _agentConfiguration;

        /// <summary>
        /// Configurable properties that the user can set locally via the azcmagent config command, or remotely via ARM.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Origin(Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Models.Api20230315Preview.IAgentConfiguration AgentConfiguration { get => (this._agentConfiguration = this._agentConfiguration ?? new Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Models.Api20230315Preview.AgentConfiguration()); }

        /// <summary>
        /// Name of configuration mode to use. Modes are pre-defined configurations of security controls, extension allowlists and
        /// guest configuration, maintained by Microsoft.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Origin(Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Support.AgentConfigurationMode? AgentConfigurationConfigMode { get => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Models.Api20230315Preview.IAgentConfigurationInternal)AgentConfiguration).ConfigMode; }

        /// <summary>Array of extensions that are allowed to be installed or updated.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Origin(Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Models.Api20230315Preview.IConfigurationExtension[] AgentConfigurationExtensionsAllowList { get => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Models.Api20230315Preview.IAgentConfigurationInternal)AgentConfiguration).ExtensionsAllowList; }

        /// <summary>Array of extensions that are blocked (cannot be installed or updated)</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Origin(Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Models.Api20230315Preview.IConfigurationExtension[] AgentConfigurationExtensionsBlockList { get => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Models.Api20230315Preview.IAgentConfigurationInternal)AgentConfiguration).ExtensionsBlockList; }

        /// <summary>Specifies whether the extension service is enabled or disabled.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Origin(Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.PropertyOrigin.Inlined)]
        public string AgentConfigurationExtensionsEnabled { get => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Models.Api20230315Preview.IAgentConfigurationInternal)AgentConfiguration).ExtensionsEnabled; }

        /// <summary>Specified whether the guest configuration service is enabled or disabled.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Origin(Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.PropertyOrigin.Inlined)]
        public string AgentConfigurationGuestConfigurationEnabled { get => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Models.Api20230315Preview.IAgentConfigurationInternal)AgentConfiguration).GuestConfigurationEnabled; }

        /// <summary>Specifies the list of ports that the agent will be able to listen on.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Origin(Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.PropertyOrigin.Inlined)]
        public string[] AgentConfigurationIncomingConnectionsPort { get => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Models.Api20230315Preview.IAgentConfigurationInternal)AgentConfiguration).IncomingConnectionsPort; }

        /// <summary>List of service names which should not use the specified proxy server.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Origin(Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.PropertyOrigin.Inlined)]
        public string[] AgentConfigurationProxyBypass { get => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Models.Api20230315Preview.IAgentConfigurationInternal)AgentConfiguration).ProxyBypass; }

        /// <summary>Specifies the URL of the proxy to be used.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Origin(Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.PropertyOrigin.Inlined)]
        public string AgentConfigurationProxyUrl { get => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Models.Api20230315Preview.IAgentConfigurationInternal)AgentConfiguration).ProxyUrl; }

        /// <summary>Backing field for <see cref="AgentUpgrade" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Models.Api20230315Preview.IAgentUpgrade _agentUpgrade;

        /// <summary>The info of the machine w.r.t Agent Upgrade</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Origin(Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Models.Api20230315Preview.IAgentUpgrade AgentUpgrade { get => (this._agentUpgrade = this._agentUpgrade ?? new Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Models.Api20230315Preview.AgentUpgrade()); set => this._agentUpgrade = value; }

        /// <summary>The correlation ID passed in from RSM per upgrade.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Origin(Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.PropertyOrigin.Inlined)]
        public string AgentUpgradeCorrelationId { get => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Models.Api20230315Preview.IAgentUpgradeInternal)AgentUpgrade).CorrelationId; set => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Models.Api20230315Preview.IAgentUpgradeInternal)AgentUpgrade).CorrelationId = value ?? null; }

        /// <summary>Specifies the version info w.r.t AgentUpgrade for the machine.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Origin(Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.PropertyOrigin.Inlined)]
        public string AgentUpgradeDesiredVersion { get => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Models.Api20230315Preview.IAgentUpgradeInternal)AgentUpgrade).DesiredVersion; set => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Models.Api20230315Preview.IAgentUpgradeInternal)AgentUpgrade).DesiredVersion = value ?? null; }

        /// <summary>Specifies if RSM should try to upgrade this machine</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Origin(Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.PropertyOrigin.Inlined)]
        public bool? AgentUpgradeEnableAutomaticUpgrade { get => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Models.Api20230315Preview.IAgentUpgradeInternal)AgentUpgrade).EnableAutomaticUpgrade; set => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Models.Api20230315Preview.IAgentUpgradeInternal)AgentUpgrade).EnableAutomaticUpgrade = value ?? default(bool); }

        /// <summary>Specifies the version of the last attempt</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Origin(Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.PropertyOrigin.Inlined)]
        public string AgentUpgradeLastAttemptDesiredVersion { get => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Models.Api20230315Preview.IAgentUpgradeInternal)AgentUpgrade).LastAttemptDesiredVersion; }

        /// <summary>Failure message of last upgrade attempt if any.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Origin(Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.PropertyOrigin.Inlined)]
        public string AgentUpgradeLastAttemptMessage { get => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Models.Api20230315Preview.IAgentUpgradeInternal)AgentUpgrade).LastAttemptMessage; }

        /// <summary>Specifies the status of Agent Upgrade.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Origin(Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Support.LastAttemptStatusEnum? AgentUpgradeLastAttemptStatus { get => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Models.Api20230315Preview.IAgentUpgradeInternal)AgentUpgrade).LastAttemptStatus; }

        /// <summary>Timestamp of last upgrade attempt</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Origin(Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.PropertyOrigin.Inlined)]
        public string AgentUpgradeLastAttemptTimestamp { get => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Models.Api20230315Preview.IAgentUpgradeInternal)AgentUpgrade).LastAttemptTimestamp; }

        /// <summary>Backing field for <see cref="AgentVersion" /> property.</summary>
        private string _agentVersion;

        /// <summary>The hybrid machine agent full version.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Origin(Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.PropertyOrigin.Owned)]
        public string AgentVersion { get => this._agentVersion; }

        /// <summary>Backing field for <see cref="ClientPublicKey" /> property.</summary>
        private string _clientPublicKey;

        /// <summary>
        /// Public Key that the client provides to be used during initial resource onboarding
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Origin(Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.PropertyOrigin.Owned)]
        public string ClientPublicKey { get => this._clientPublicKey; set => this._clientPublicKey = value; }

        /// <summary>Backing field for <see cref="CloudMetadata" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Models.Api20230315Preview.ICloudMetadata _cloudMetadata;

        /// <summary>The metadata of the cloud environment (Azure/GCP/AWS/OCI...).</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Origin(Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Models.Api20230315Preview.ICloudMetadata CloudMetadata { get => (this._cloudMetadata = this._cloudMetadata ?? new Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Models.Api20230315Preview.CloudMetadata()); set => this._cloudMetadata = value; }

        /// <summary>Specifies the cloud provider (Azure/AWS/GCP...).</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Origin(Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.PropertyOrigin.Inlined)]
        public string CloudMetadataProvider { get => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Models.Api20230315Preview.ICloudMetadataInternal)CloudMetadata).Provider; }

        /// <summary>Backing field for <see cref="DetectedProperty" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Models.Api20230315Preview.IDetectedProperties _detectedProperty;

        /// <summary>Detected properties from the machine.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Origin(Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Models.Api20230315Preview.IDetectedProperties DetectedProperty { get => (this._detectedProperty = this._detectedProperty ?? new Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Models.Api20230315Preview.DetectedProperties()); }

        /// <summary>Backing field for <see cref="DisplayName" /> property.</summary>
        private string _displayName;

        /// <summary>Specifies the hybrid machine display name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Origin(Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.PropertyOrigin.Owned)]
        public string DisplayName { get => this._displayName; }

        /// <summary>Backing field for <see cref="DnsFqdn" /> property.</summary>
        private string _dnsFqdn;

        /// <summary>Specifies the DNS fully qualified display name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Origin(Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.PropertyOrigin.Owned)]
        public string DnsFqdn { get => this._dnsFqdn; }

        /// <summary>Backing field for <see cref="DomainName" /> property.</summary>
        private string _domainName;

        /// <summary>Specifies the Windows domain name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Origin(Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.PropertyOrigin.Owned)]
        public string DomainName { get => this._domainName; }

        /// <summary>Backing field for <see cref="ErrorDetail" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Models.Api30.IErrorDetail[] _errorDetail;

        /// <summary>Details about the error state.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Origin(Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Models.Api30.IErrorDetail[] ErrorDetail { get => this._errorDetail; }

        /// <summary>Backing field for <see cref="Extension" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Models.Api20230315Preview.IMachineExtensionInstanceView[] _extension;

        /// <summary>Machine Extensions information (deprecated field)</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Origin(Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Models.Api20230315Preview.IMachineExtensionInstanceView[] Extension { get => this._extension; set => this._extension = value; }

        /// <summary>The behavior of the service when the Arc-enabled machine starts up.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Origin(Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.PropertyOrigin.Inlined)]
        public string ExtensionServiceStartupType { get => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Models.Api20230315Preview.IServiceStatusesInternal)ServiceStatuses).ExtensionServiceStartupType; set => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Models.Api20230315Preview.IServiceStatusesInternal)ServiceStatuses).ExtensionServiceStartupType = value ?? null; }

        /// <summary>The current status of the service.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Origin(Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.PropertyOrigin.Inlined)]
        public string ExtensionServiceStatus { get => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Models.Api20230315Preview.IServiceStatusesInternal)ServiceStatuses).ExtensionServiceStatus; set => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Models.Api20230315Preview.IServiceStatusesInternal)ServiceStatuses).ExtensionServiceStatus = value ?? null; }

        /// <summary>The behavior of the service when the Arc-enabled machine starts up.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Origin(Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.PropertyOrigin.Inlined)]
        public string GuestConfigurationServiceStartupType { get => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Models.Api20230315Preview.IServiceStatusesInternal)ServiceStatuses).GuestConfigurationServiceStartupType; set => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Models.Api20230315Preview.IServiceStatusesInternal)ServiceStatuses).GuestConfigurationServiceStartupType = value ?? null; }

        /// <summary>The current status of the service.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Origin(Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.PropertyOrigin.Inlined)]
        public string GuestConfigurationServiceStatus { get => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Models.Api20230315Preview.IServiceStatusesInternal)ServiceStatuses).GuestConfigurationServiceStatus; set => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Models.Api20230315Preview.IServiceStatusesInternal)ServiceStatuses).GuestConfigurationServiceStatus = value ?? null; }

        /// <summary>Backing field for <see cref="LastStatusChange" /> property.</summary>
        private global::System.DateTime? _lastStatusChange;

        /// <summary>The time of the last status change.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Origin(Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.PropertyOrigin.Owned)]
        public global::System.DateTime? LastStatusChange { get => this._lastStatusChange; }

        /// <summary>Specifies the assessment mode.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Origin(Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Support.AssessmentModeTypes? LinuxConfigurationPatchSettingsAssessmentMode { get => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Models.Api20230315Preview.IOSProfileInternal)OSProfile).LinuxConfigurationPatchSettingsAssessmentMode; set => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Models.Api20230315Preview.IOSProfileInternal)OSProfile).LinuxConfigurationPatchSettingsAssessmentMode = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Support.AssessmentModeTypes)""); }

        /// <summary>Specifies the patch mode.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Origin(Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Support.PatchModeTypes? LinuxConfigurationPatchSettingsPatchMode { get => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Models.Api20230315Preview.IOSProfileInternal)OSProfile).LinuxConfigurationPatchSettingsPatchMode; set => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Models.Api20230315Preview.IOSProfileInternal)OSProfile).LinuxConfigurationPatchSettingsPatchMode = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Support.PatchModeTypes)""); }

        /// <summary>Backing field for <see cref="LocationData" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Models.Api30.ILocationData _locationData;

        /// <summary>Metadata pertaining to the geographic location of the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Origin(Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Models.Api30.ILocationData LocationData { get => (this._locationData = this._locationData ?? new Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Models.Api30.LocationData()); set => this._locationData = value; }

        /// <summary>The city or locality where the resource is located.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Origin(Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.PropertyOrigin.Inlined)]
        public string LocationDataCity { get => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Models.Api30.ILocationDataInternal)LocationData).City; set => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Models.Api30.ILocationDataInternal)LocationData).City = value ?? null; }

        /// <summary>The country or region where the resource is located</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Origin(Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.PropertyOrigin.Inlined)]
        public string LocationDataCountryOrRegion { get => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Models.Api30.ILocationDataInternal)LocationData).CountryOrRegion; set => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Models.Api30.ILocationDataInternal)LocationData).CountryOrRegion = value ?? null; }

        /// <summary>The district, state, or province where the resource is located.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Origin(Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.PropertyOrigin.Inlined)]
        public string LocationDataDistrict { get => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Models.Api30.ILocationDataInternal)LocationData).District; set => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Models.Api30.ILocationDataInternal)LocationData).District = value ?? null; }

        /// <summary>A canonical name for the geographic or physical location.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Origin(Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.PropertyOrigin.Inlined)]
        public string LocationDataName { get => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Models.Api30.ILocationDataInternal)LocationData).Name; set => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Models.Api30.ILocationDataInternal)LocationData).Name = value ?? null; }

        /// <summary>Backing field for <see cref="MachineFqdn" /> property.</summary>
        private string _machineFqdn;

        /// <summary>Specifies the hybrid machine FQDN.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Origin(Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.PropertyOrigin.Owned)]
        public string MachineFqdn { get => this._machineFqdn; }

        /// <summary>Internal Acessors for AdFqdn</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Models.Api20230315Preview.IMachinePropertiesInternal.AdFqdn { get => this._adFqdn; set { {_adFqdn = value;} } }

        /// <summary>Internal Acessors for AgentConfiguration</summary>
        Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Models.Api20230315Preview.IAgentConfiguration Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Models.Api20230315Preview.IMachinePropertiesInternal.AgentConfiguration { get => (this._agentConfiguration = this._agentConfiguration ?? new Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Models.Api20230315Preview.AgentConfiguration()); set { {_agentConfiguration = value;} } }

        /// <summary>Internal Acessors for AgentConfigurationConfigMode</summary>
        Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Support.AgentConfigurationMode? Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Models.Api20230315Preview.IMachinePropertiesInternal.AgentConfigurationConfigMode { get => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Models.Api20230315Preview.IAgentConfigurationInternal)AgentConfiguration).ConfigMode; set => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Models.Api20230315Preview.IAgentConfigurationInternal)AgentConfiguration).ConfigMode = value; }

        /// <summary>Internal Acessors for AgentConfigurationExtensionsAllowList</summary>
        Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Models.Api20230315Preview.IConfigurationExtension[] Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Models.Api20230315Preview.IMachinePropertiesInternal.AgentConfigurationExtensionsAllowList { get => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Models.Api20230315Preview.IAgentConfigurationInternal)AgentConfiguration).ExtensionsAllowList; set => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Models.Api20230315Preview.IAgentConfigurationInternal)AgentConfiguration).ExtensionsAllowList = value; }

        /// <summary>Internal Acessors for AgentConfigurationExtensionsBlockList</summary>
        Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Models.Api20230315Preview.IConfigurationExtension[] Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Models.Api20230315Preview.IMachinePropertiesInternal.AgentConfigurationExtensionsBlockList { get => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Models.Api20230315Preview.IAgentConfigurationInternal)AgentConfiguration).ExtensionsBlockList; set => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Models.Api20230315Preview.IAgentConfigurationInternal)AgentConfiguration).ExtensionsBlockList = value; }

        /// <summary>Internal Acessors for AgentConfigurationExtensionsEnabled</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Models.Api20230315Preview.IMachinePropertiesInternal.AgentConfigurationExtensionsEnabled { get => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Models.Api20230315Preview.IAgentConfigurationInternal)AgentConfiguration).ExtensionsEnabled; set => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Models.Api20230315Preview.IAgentConfigurationInternal)AgentConfiguration).ExtensionsEnabled = value; }

        /// <summary>Internal Acessors for AgentConfigurationGuestConfigurationEnabled</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Models.Api20230315Preview.IMachinePropertiesInternal.AgentConfigurationGuestConfigurationEnabled { get => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Models.Api20230315Preview.IAgentConfigurationInternal)AgentConfiguration).GuestConfigurationEnabled; set => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Models.Api20230315Preview.IAgentConfigurationInternal)AgentConfiguration).GuestConfigurationEnabled = value; }

        /// <summary>Internal Acessors for AgentConfigurationIncomingConnectionsPort</summary>
        string[] Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Models.Api20230315Preview.IMachinePropertiesInternal.AgentConfigurationIncomingConnectionsPort { get => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Models.Api20230315Preview.IAgentConfigurationInternal)AgentConfiguration).IncomingConnectionsPort; set => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Models.Api20230315Preview.IAgentConfigurationInternal)AgentConfiguration).IncomingConnectionsPort = value; }

        /// <summary>Internal Acessors for AgentConfigurationProxyBypass</summary>
        string[] Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Models.Api20230315Preview.IMachinePropertiesInternal.AgentConfigurationProxyBypass { get => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Models.Api20230315Preview.IAgentConfigurationInternal)AgentConfiguration).ProxyBypass; set => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Models.Api20230315Preview.IAgentConfigurationInternal)AgentConfiguration).ProxyBypass = value; }

        /// <summary>Internal Acessors for AgentConfigurationProxyUrl</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Models.Api20230315Preview.IMachinePropertiesInternal.AgentConfigurationProxyUrl { get => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Models.Api20230315Preview.IAgentConfigurationInternal)AgentConfiguration).ProxyUrl; set => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Models.Api20230315Preview.IAgentConfigurationInternal)AgentConfiguration).ProxyUrl = value; }

        /// <summary>Internal Acessors for AgentUpgrade</summary>
        Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Models.Api20230315Preview.IAgentUpgrade Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Models.Api20230315Preview.IMachinePropertiesInternal.AgentUpgrade { get => (this._agentUpgrade = this._agentUpgrade ?? new Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Models.Api20230315Preview.AgentUpgrade()); set { {_agentUpgrade = value;} } }

        /// <summary>Internal Acessors for AgentUpgradeLastAttemptDesiredVersion</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Models.Api20230315Preview.IMachinePropertiesInternal.AgentUpgradeLastAttemptDesiredVersion { get => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Models.Api20230315Preview.IAgentUpgradeInternal)AgentUpgrade).LastAttemptDesiredVersion; set => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Models.Api20230315Preview.IAgentUpgradeInternal)AgentUpgrade).LastAttemptDesiredVersion = value; }

        /// <summary>Internal Acessors for AgentUpgradeLastAttemptMessage</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Models.Api20230315Preview.IMachinePropertiesInternal.AgentUpgradeLastAttemptMessage { get => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Models.Api20230315Preview.IAgentUpgradeInternal)AgentUpgrade).LastAttemptMessage; set => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Models.Api20230315Preview.IAgentUpgradeInternal)AgentUpgrade).LastAttemptMessage = value; }

        /// <summary>Internal Acessors for AgentUpgradeLastAttemptStatus</summary>
        Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Support.LastAttemptStatusEnum? Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Models.Api20230315Preview.IMachinePropertiesInternal.AgentUpgradeLastAttemptStatus { get => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Models.Api20230315Preview.IAgentUpgradeInternal)AgentUpgrade).LastAttemptStatus; set => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Models.Api20230315Preview.IAgentUpgradeInternal)AgentUpgrade).LastAttemptStatus = value; }

        /// <summary>Internal Acessors for AgentUpgradeLastAttemptTimestamp</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Models.Api20230315Preview.IMachinePropertiesInternal.AgentUpgradeLastAttemptTimestamp { get => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Models.Api20230315Preview.IAgentUpgradeInternal)AgentUpgrade).LastAttemptTimestamp; set => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Models.Api20230315Preview.IAgentUpgradeInternal)AgentUpgrade).LastAttemptTimestamp = value; }

        /// <summary>Internal Acessors for AgentVersion</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Models.Api20230315Preview.IMachinePropertiesInternal.AgentVersion { get => this._agentVersion; set { {_agentVersion = value;} } }

        /// <summary>Internal Acessors for CloudMetadata</summary>
        Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Models.Api20230315Preview.ICloudMetadata Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Models.Api20230315Preview.IMachinePropertiesInternal.CloudMetadata { get => (this._cloudMetadata = this._cloudMetadata ?? new Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Models.Api20230315Preview.CloudMetadata()); set { {_cloudMetadata = value;} } }

        /// <summary>Internal Acessors for CloudMetadataProvider</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Models.Api20230315Preview.IMachinePropertiesInternal.CloudMetadataProvider { get => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Models.Api20230315Preview.ICloudMetadataInternal)CloudMetadata).Provider; set => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Models.Api20230315Preview.ICloudMetadataInternal)CloudMetadata).Provider = value; }

        /// <summary>Internal Acessors for DetectedProperty</summary>
        Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Models.Api20230315Preview.IDetectedProperties Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Models.Api20230315Preview.IMachinePropertiesInternal.DetectedProperty { get => (this._detectedProperty = this._detectedProperty ?? new Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Models.Api20230315Preview.DetectedProperties()); set { {_detectedProperty = value;} } }

        /// <summary>Internal Acessors for DisplayName</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Models.Api20230315Preview.IMachinePropertiesInternal.DisplayName { get => this._displayName; set { {_displayName = value;} } }

        /// <summary>Internal Acessors for DnsFqdn</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Models.Api20230315Preview.IMachinePropertiesInternal.DnsFqdn { get => this._dnsFqdn; set { {_dnsFqdn = value;} } }

        /// <summary>Internal Acessors for DomainName</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Models.Api20230315Preview.IMachinePropertiesInternal.DomainName { get => this._domainName; set { {_domainName = value;} } }

        /// <summary>Internal Acessors for ErrorDetail</summary>
        Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Models.Api30.IErrorDetail[] Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Models.Api20230315Preview.IMachinePropertiesInternal.ErrorDetail { get => this._errorDetail; set { {_errorDetail = value;} } }

        /// <summary>Internal Acessors for LastStatusChange</summary>
        global::System.DateTime? Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Models.Api20230315Preview.IMachinePropertiesInternal.LastStatusChange { get => this._lastStatusChange; set { {_lastStatusChange = value;} } }

        /// <summary>Internal Acessors for LinuxConfigurationPatchSetting</summary>
        Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Models.Api20230315Preview.IPatchSettings Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Models.Api20230315Preview.IMachinePropertiesInternal.LinuxConfigurationPatchSetting { get => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Models.Api20230315Preview.IOSProfileInternal)OSProfile).LinuxConfigurationPatchSetting; set => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Models.Api20230315Preview.IOSProfileInternal)OSProfile).LinuxConfigurationPatchSetting = value; }

        /// <summary>Internal Acessors for LocationData</summary>
        Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Models.Api30.ILocationData Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Models.Api20230315Preview.IMachinePropertiesInternal.LocationData { get => (this._locationData = this._locationData ?? new Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Models.Api30.LocationData()); set { {_locationData = value;} } }

        /// <summary>Internal Acessors for MachineFqdn</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Models.Api20230315Preview.IMachinePropertiesInternal.MachineFqdn { get => this._machineFqdn; set { {_machineFqdn = value;} } }

        /// <summary>Internal Acessors for NetworkProfile</summary>
        Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Models.Api20230315Preview.INetworkProfile Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Models.Api20230315Preview.IMachinePropertiesInternal.NetworkProfile { get => (this._networkProfile = this._networkProfile ?? new Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Models.Api20230315Preview.NetworkProfile()); set { {_networkProfile = value;} } }

        /// <summary>Internal Acessors for OSName</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Models.Api20230315Preview.IMachinePropertiesInternal.OSName { get => this._oSName; set { {_oSName = value;} } }

        /// <summary>Internal Acessors for OSProfile</summary>
        Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Models.Api20230315Preview.IOSProfile Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Models.Api20230315Preview.IMachinePropertiesInternal.OSProfile { get => (this._oSProfile = this._oSProfile ?? new Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Models.Api20230315Preview.OSProfile()); set { {_oSProfile = value;} } }

        /// <summary>Internal Acessors for OSProfileComputerName</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Models.Api20230315Preview.IMachinePropertiesInternal.OSProfileComputerName { get => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Models.Api20230315Preview.IOSProfileInternal)OSProfile).ComputerName; set => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Models.Api20230315Preview.IOSProfileInternal)OSProfile).ComputerName = value; }

        /// <summary>Internal Acessors for OSProfileLinuxConfiguration</summary>
        Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Models.Api20230315Preview.IOSProfileLinuxConfiguration Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Models.Api20230315Preview.IMachinePropertiesInternal.OSProfileLinuxConfiguration { get => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Models.Api20230315Preview.IOSProfileInternal)OSProfile).LinuxConfiguration; set => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Models.Api20230315Preview.IOSProfileInternal)OSProfile).LinuxConfiguration = value; }

        /// <summary>Internal Acessors for OSProfileWindowsConfiguration</summary>
        Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Models.Api20230315Preview.IOSProfileWindowsConfiguration Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Models.Api20230315Preview.IMachinePropertiesInternal.OSProfileWindowsConfiguration { get => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Models.Api20230315Preview.IOSProfileInternal)OSProfile).WindowsConfiguration; set => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Models.Api20230315Preview.IOSProfileInternal)OSProfile).WindowsConfiguration = value; }

        /// <summary>Internal Acessors for OSSku</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Models.Api20230315Preview.IMachinePropertiesInternal.OSSku { get => this._oSSku; set { {_oSSku = value;} } }

        /// <summary>Internal Acessors for OSVersion</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Models.Api20230315Preview.IMachinePropertiesInternal.OSVersion { get => this._oSVersion; set { {_oSVersion = value;} } }

        /// <summary>Internal Acessors for ProvisioningState</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Models.Api20230315Preview.IMachinePropertiesInternal.ProvisioningState { get => this._provisioningState; set { {_provisioningState = value;} } }

        /// <summary>Internal Acessors for ServiceStatuses</summary>
        Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Models.Api20230315Preview.IServiceStatuses Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Models.Api20230315Preview.IMachinePropertiesInternal.ServiceStatuses { get => (this._serviceStatuses = this._serviceStatuses ?? new Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Models.Api20230315Preview.ServiceStatuses()); set { {_serviceStatuses = value;} } }

        /// <summary>Internal Acessors for ServiceStatusesExtensionService</summary>
        Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Models.Api20230315Preview.IServiceStatus Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Models.Api20230315Preview.IMachinePropertiesInternal.ServiceStatusesExtensionService { get => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Models.Api20230315Preview.IServiceStatusesInternal)ServiceStatuses).ExtensionService; set => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Models.Api20230315Preview.IServiceStatusesInternal)ServiceStatuses).ExtensionService = value; }

        /// <summary>Internal Acessors for ServiceStatusesGuestConfigurationService</summary>
        Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Models.Api20230315Preview.IServiceStatus Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Models.Api20230315Preview.IMachinePropertiesInternal.ServiceStatusesGuestConfigurationService { get => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Models.Api20230315Preview.IServiceStatusesInternal)ServiceStatuses).GuestConfigurationService; set => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Models.Api20230315Preview.IServiceStatusesInternal)ServiceStatuses).GuestConfigurationService = value; }

        /// <summary>Internal Acessors for Status</summary>
        Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Support.StatusTypes? Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Models.Api20230315Preview.IMachinePropertiesInternal.Status { get => this._status; set { {_status = value;} } }

        /// <summary>Internal Acessors for VMUuid</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Models.Api20230315Preview.IMachinePropertiesInternal.VMUuid { get => this._vMUuid; set { {_vMUuid = value;} } }

        /// <summary>Internal Acessors for WindowConfigurationPatchSetting</summary>
        Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Models.Api20230315Preview.IPatchSettings Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Models.Api20230315Preview.IMachinePropertiesInternal.WindowConfigurationPatchSetting { get => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Models.Api20230315Preview.IOSProfileInternal)OSProfile).WindowConfigurationPatchSetting; set => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Models.Api20230315Preview.IOSProfileInternal)OSProfile).WindowConfigurationPatchSetting = value; }

        /// <summary>Backing field for <see cref="MssqlDiscovered" /> property.</summary>
        private string _mssqlDiscovered;

        /// <summary>Specifies whether any MS SQL instance is discovered on the machine.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Origin(Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.PropertyOrigin.Owned)]
        public string MssqlDiscovered { get => this._mssqlDiscovered; set => this._mssqlDiscovered = value; }

        /// <summary>Backing field for <see cref="NetworkProfile" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Models.Api20230315Preview.INetworkProfile _networkProfile;

        /// <summary>Information about the network the machine is on.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Origin(Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Models.Api20230315Preview.INetworkProfile NetworkProfile { get => (this._networkProfile = this._networkProfile ?? new Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Models.Api20230315Preview.NetworkProfile()); }

        /// <summary>The list of network interfaces.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Origin(Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Models.Api20230315Preview.INetworkInterface[] NetworkProfileNetworkInterface { get => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Models.Api20230315Preview.INetworkProfileInternal)NetworkProfile).NetworkInterface; set => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Models.Api20230315Preview.INetworkProfileInternal)NetworkProfile).NetworkInterface = value ?? null /* arrayOf */; }

        /// <summary>Backing field for <see cref="OSName" /> property.</summary>
        private string _oSName;

        /// <summary>The Operating System running on the hybrid machine.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Origin(Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.PropertyOrigin.Owned)]
        public string OSName { get => this._oSName; }

        /// <summary>Backing field for <see cref="OSProfile" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Models.Api20230315Preview.IOSProfile _oSProfile;

        /// <summary>Specifies the operating system settings for the hybrid machine.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Origin(Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Models.Api20230315Preview.IOSProfile OSProfile { get => (this._oSProfile = this._oSProfile ?? new Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Models.Api20230315Preview.OSProfile()); set => this._oSProfile = value; }

        /// <summary>Specifies the host OS name of the hybrid machine.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Origin(Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.PropertyOrigin.Inlined)]
        public string OSProfileComputerName { get => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Models.Api20230315Preview.IOSProfileInternal)OSProfile).ComputerName; }

        /// <summary>Backing field for <see cref="OSSku" /> property.</summary>
        private string _oSSku;

        /// <summary>Specifies the Operating System product SKU.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Origin(Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.PropertyOrigin.Owned)]
        public string OSSku { get => this._oSSku; }

        /// <summary>Backing field for <see cref="OSType" /> property.</summary>
        private string _oSType;

        /// <summary>The type of Operating System (windows/linux).</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Origin(Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.PropertyOrigin.Owned)]
        public string OSType { get => this._oSType; set => this._oSType = value; }

        /// <summary>Backing field for <see cref="OSVersion" /> property.</summary>
        private string _oSVersion;

        /// <summary>The version of Operating System running on the hybrid machine.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Origin(Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.PropertyOrigin.Owned)]
        public string OSVersion { get => this._oSVersion; }

        /// <summary>Backing field for <see cref="ParentClusterResourceId" /> property.</summary>
        private string _parentClusterResourceId;

        /// <summary>
        /// The resource id of the parent cluster (Azure HCI) this machine is assigned to, if any.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Origin(Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.PropertyOrigin.Owned)]
        public string ParentClusterResourceId { get => this._parentClusterResourceId; set => this._parentClusterResourceId = value; }

        /// <summary>Backing field for <see cref="PrivateLinkScopeResourceId" /> property.</summary>
        private string _privateLinkScopeResourceId;

        /// <summary>The resource id of the private link scope this machine is assigned to, if any.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Origin(Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.PropertyOrigin.Owned)]
        public string PrivateLinkScopeResourceId { get => this._privateLinkScopeResourceId; set => this._privateLinkScopeResourceId = value; }

        /// <summary>Backing field for <see cref="ProvisioningState" /> property.</summary>
        private string _provisioningState;

        /// <summary>The provisioning state, which only appears in the response.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Origin(Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.PropertyOrigin.Owned)]
        public string ProvisioningState { get => this._provisioningState; }

        /// <summary>Backing field for <see cref="ServiceStatuses" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Models.Api20230315Preview.IServiceStatuses _serviceStatuses;

        /// <summary>Statuses of dependent services that are reported back to ARM.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Origin(Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Models.Api20230315Preview.IServiceStatuses ServiceStatuses { get => (this._serviceStatuses = this._serviceStatuses ?? new Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Models.Api20230315Preview.ServiceStatuses()); set => this._serviceStatuses = value; }

        /// <summary>Backing field for <see cref="Status" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Support.StatusTypes? _status;

        /// <summary>The status of the hybrid machine agent.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Origin(Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Support.StatusTypes? Status { get => this._status; }

        /// <summary>Backing field for <see cref="VMId" /> property.</summary>
        private string _vMId;

        /// <summary>Specifies the hybrid machine unique ID.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Origin(Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.PropertyOrigin.Owned)]
        public string VMId { get => this._vMId; set => this._vMId = value; }

        /// <summary>Backing field for <see cref="VMUuid" /> property.</summary>
        private string _vMUuid;

        /// <summary>Specifies the Arc Machine's unique SMBIOS ID</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Origin(Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.PropertyOrigin.Owned)]
        public string VMUuid { get => this._vMUuid; }

        /// <summary>Specifies the assessment mode.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Origin(Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Support.AssessmentModeTypes? WindowsConfigurationPatchSettingsAssessmentMode { get => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Models.Api20230315Preview.IOSProfileInternal)OSProfile).WindowsConfigurationPatchSettingsAssessmentMode; set => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Models.Api20230315Preview.IOSProfileInternal)OSProfile).WindowsConfigurationPatchSettingsAssessmentMode = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Support.AssessmentModeTypes)""); }

        /// <summary>Specifies the patch mode.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Origin(Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Support.PatchModeTypes? WindowsConfigurationPatchSettingsPatchMode { get => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Models.Api20230315Preview.IOSProfileInternal)OSProfile).WindowsConfigurationPatchSettingsPatchMode; set => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Models.Api20230315Preview.IOSProfileInternal)OSProfile).WindowsConfigurationPatchSettingsPatchMode = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Support.PatchModeTypes)""); }

        /// <summary>Creates an new <see cref="MachineProperties" /> instance.</summary>
        public MachineProperties()
        {

        }
    }
    /// Describes the properties of a hybrid machine.
    public partial interface IMachineProperties :
        Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Runtime.IJsonSerializable
    {
        /// <summary>Specifies the AD fully qualified display name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Specifies the AD fully qualified display name.",
        SerializedName = @"adFqdn",
        PossibleTypes = new [] { typeof(string) })]
        string AdFqdn { get;  }
        /// <summary>
        /// Name of configuration mode to use. Modes are pre-defined configurations of security controls, extension allowlists and
        /// guest configuration, maintained by Microsoft.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Name of configuration mode to use. Modes are pre-defined configurations of security controls, extension allowlists and guest configuration, maintained by Microsoft.",
        SerializedName = @"configMode",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Support.AgentConfigurationMode) })]
        Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Support.AgentConfigurationMode? AgentConfigurationConfigMode { get;  }
        /// <summary>Array of extensions that are allowed to be installed or updated.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Array of extensions that are allowed to be installed or updated.",
        SerializedName = @"extensionsAllowList",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Models.Api20230315Preview.IConfigurationExtension) })]
        Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Models.Api20230315Preview.IConfigurationExtension[] AgentConfigurationExtensionsAllowList { get;  }
        /// <summary>Array of extensions that are blocked (cannot be installed or updated)</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Array of extensions that are blocked (cannot be installed or updated)",
        SerializedName = @"extensionsBlockList",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Models.Api20230315Preview.IConfigurationExtension) })]
        Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Models.Api20230315Preview.IConfigurationExtension[] AgentConfigurationExtensionsBlockList { get;  }
        /// <summary>Specifies whether the extension service is enabled or disabled.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Specifies whether the extension service is enabled or disabled.",
        SerializedName = @"extensionsEnabled",
        PossibleTypes = new [] { typeof(string) })]
        string AgentConfigurationExtensionsEnabled { get;  }
        /// <summary>Specified whether the guest configuration service is enabled or disabled.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Specified whether the guest configuration service is enabled or disabled.",
        SerializedName = @"guestConfigurationEnabled",
        PossibleTypes = new [] { typeof(string) })]
        string AgentConfigurationGuestConfigurationEnabled { get;  }
        /// <summary>Specifies the list of ports that the agent will be able to listen on.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Specifies the list of ports that the agent will be able to listen on.",
        SerializedName = @"incomingConnectionsPorts",
        PossibleTypes = new [] { typeof(string) })]
        string[] AgentConfigurationIncomingConnectionsPort { get;  }
        /// <summary>List of service names which should not use the specified proxy server.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"List of service names which should not use the specified proxy server.",
        SerializedName = @"proxyBypass",
        PossibleTypes = new [] { typeof(string) })]
        string[] AgentConfigurationProxyBypass { get;  }
        /// <summary>Specifies the URL of the proxy to be used.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Specifies the URL of the proxy to be used.",
        SerializedName = @"proxyUrl",
        PossibleTypes = new [] { typeof(string) })]
        string AgentConfigurationProxyUrl { get;  }
        /// <summary>The correlation ID passed in from RSM per upgrade.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The correlation ID passed in from RSM per upgrade.",
        SerializedName = @"correlationId",
        PossibleTypes = new [] { typeof(string) })]
        string AgentUpgradeCorrelationId { get; set; }
        /// <summary>Specifies the version info w.r.t AgentUpgrade for the machine.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Specifies the version info w.r.t AgentUpgrade for the machine.",
        SerializedName = @"desiredVersion",
        PossibleTypes = new [] { typeof(string) })]
        string AgentUpgradeDesiredVersion { get; set; }
        /// <summary>Specifies if RSM should try to upgrade this machine</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Specifies if RSM should try to upgrade this machine",
        SerializedName = @"enableAutomaticUpgrade",
        PossibleTypes = new [] { typeof(bool) })]
        bool? AgentUpgradeEnableAutomaticUpgrade { get; set; }
        /// <summary>Specifies the version of the last attempt</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Specifies the version of the last attempt",
        SerializedName = @"lastAttemptDesiredVersion",
        PossibleTypes = new [] { typeof(string) })]
        string AgentUpgradeLastAttemptDesiredVersion { get;  }
        /// <summary>Failure message of last upgrade attempt if any.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Failure message of last upgrade attempt if any.",
        SerializedName = @"lastAttemptMessage",
        PossibleTypes = new [] { typeof(string) })]
        string AgentUpgradeLastAttemptMessage { get;  }
        /// <summary>Specifies the status of Agent Upgrade.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Specifies the status of Agent Upgrade.",
        SerializedName = @"lastAttemptStatus",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Support.LastAttemptStatusEnum) })]
        Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Support.LastAttemptStatusEnum? AgentUpgradeLastAttemptStatus { get;  }
        /// <summary>Timestamp of last upgrade attempt</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Timestamp of last upgrade attempt",
        SerializedName = @"lastAttemptTimestamp",
        PossibleTypes = new [] { typeof(string) })]
        string AgentUpgradeLastAttemptTimestamp { get;  }
        /// <summary>The hybrid machine agent full version.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The hybrid machine agent full version.",
        SerializedName = @"agentVersion",
        PossibleTypes = new [] { typeof(string) })]
        string AgentVersion { get;  }
        /// <summary>
        /// Public Key that the client provides to be used during initial resource onboarding
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Public Key that the client provides to be used during initial resource onboarding",
        SerializedName = @"clientPublicKey",
        PossibleTypes = new [] { typeof(string) })]
        string ClientPublicKey { get; set; }
        /// <summary>Specifies the cloud provider (Azure/AWS/GCP...).</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Specifies the cloud provider (Azure/AWS/GCP...).",
        SerializedName = @"provider",
        PossibleTypes = new [] { typeof(string) })]
        string CloudMetadataProvider { get;  }
        /// <summary>Detected properties from the machine.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Detected properties from the machine.",
        SerializedName = @"detectedProperties",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Models.Api20230315Preview.IDetectedProperties) })]
        Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Models.Api20230315Preview.IDetectedProperties DetectedProperty { get;  }
        /// <summary>Specifies the hybrid machine display name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Specifies the hybrid machine display name.",
        SerializedName = @"displayName",
        PossibleTypes = new [] { typeof(string) })]
        string DisplayName { get;  }
        /// <summary>Specifies the DNS fully qualified display name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Specifies the DNS fully qualified display name.",
        SerializedName = @"dnsFqdn",
        PossibleTypes = new [] { typeof(string) })]
        string DnsFqdn { get;  }
        /// <summary>Specifies the Windows domain name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Specifies the Windows domain name.",
        SerializedName = @"domainName",
        PossibleTypes = new [] { typeof(string) })]
        string DomainName { get;  }
        /// <summary>Details about the error state.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Details about the error state.",
        SerializedName = @"errorDetails",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Models.Api30.IErrorDetail) })]
        Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Models.Api30.IErrorDetail[] ErrorDetail { get;  }
        /// <summary>Machine Extensions information (deprecated field)</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Machine Extensions information (deprecated field)",
        SerializedName = @"extensions",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Models.Api20230315Preview.IMachineExtensionInstanceView) })]
        Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Models.Api20230315Preview.IMachineExtensionInstanceView[] Extension { get; set; }
        /// <summary>The behavior of the service when the Arc-enabled machine starts up.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The behavior of the service when the Arc-enabled machine starts up.",
        SerializedName = @"startupType",
        PossibleTypes = new [] { typeof(string) })]
        string ExtensionServiceStartupType { get; set; }
        /// <summary>The current status of the service.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The current status of the service.",
        SerializedName = @"status",
        PossibleTypes = new [] { typeof(string) })]
        string ExtensionServiceStatus { get; set; }
        /// <summary>The behavior of the service when the Arc-enabled machine starts up.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The behavior of the service when the Arc-enabled machine starts up.",
        SerializedName = @"startupType",
        PossibleTypes = new [] { typeof(string) })]
        string GuestConfigurationServiceStartupType { get; set; }
        /// <summary>The current status of the service.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The current status of the service.",
        SerializedName = @"status",
        PossibleTypes = new [] { typeof(string) })]
        string GuestConfigurationServiceStatus { get; set; }
        /// <summary>The time of the last status change.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The time of the last status change.",
        SerializedName = @"lastStatusChange",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? LastStatusChange { get;  }
        /// <summary>Specifies the assessment mode.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Specifies the assessment mode.",
        SerializedName = @"assessmentMode",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Support.AssessmentModeTypes) })]
        Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Support.AssessmentModeTypes? LinuxConfigurationPatchSettingsAssessmentMode { get; set; }
        /// <summary>Specifies the patch mode.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Specifies the patch mode.",
        SerializedName = @"patchMode",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Support.PatchModeTypes) })]
        Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Support.PatchModeTypes? LinuxConfigurationPatchSettingsPatchMode { get; set; }
        /// <summary>The city or locality where the resource is located.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The city or locality where the resource is located.",
        SerializedName = @"city",
        PossibleTypes = new [] { typeof(string) })]
        string LocationDataCity { get; set; }
        /// <summary>The country or region where the resource is located</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The country or region where the resource is located",
        SerializedName = @"countryOrRegion",
        PossibleTypes = new [] { typeof(string) })]
        string LocationDataCountryOrRegion { get; set; }
        /// <summary>The district, state, or province where the resource is located.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The district, state, or province where the resource is located.",
        SerializedName = @"district",
        PossibleTypes = new [] { typeof(string) })]
        string LocationDataDistrict { get; set; }
        /// <summary>A canonical name for the geographic or physical location.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"A canonical name for the geographic or physical location.",
        SerializedName = @"name",
        PossibleTypes = new [] { typeof(string) })]
        string LocationDataName { get; set; }
        /// <summary>Specifies the hybrid machine FQDN.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Specifies the hybrid machine FQDN.",
        SerializedName = @"machineFqdn",
        PossibleTypes = new [] { typeof(string) })]
        string MachineFqdn { get;  }
        /// <summary>Specifies whether any MS SQL instance is discovered on the machine.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Specifies whether any MS SQL instance is discovered on the machine.",
        SerializedName = @"mssqlDiscovered",
        PossibleTypes = new [] { typeof(string) })]
        string MssqlDiscovered { get; set; }
        /// <summary>The list of network interfaces.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The list of network interfaces.",
        SerializedName = @"networkInterfaces",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Models.Api20230315Preview.INetworkInterface) })]
        Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Models.Api20230315Preview.INetworkInterface[] NetworkProfileNetworkInterface { get; set; }
        /// <summary>The Operating System running on the hybrid machine.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The Operating System running on the hybrid machine.",
        SerializedName = @"osName",
        PossibleTypes = new [] { typeof(string) })]
        string OSName { get;  }
        /// <summary>Specifies the host OS name of the hybrid machine.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Specifies the host OS name of the hybrid machine.",
        SerializedName = @"computerName",
        PossibleTypes = new [] { typeof(string) })]
        string OSProfileComputerName { get;  }
        /// <summary>Specifies the Operating System product SKU.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Specifies the Operating System product SKU.",
        SerializedName = @"osSku",
        PossibleTypes = new [] { typeof(string) })]
        string OSSku { get;  }
        /// <summary>The type of Operating System (windows/linux).</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The type of Operating System (windows/linux).",
        SerializedName = @"osType",
        PossibleTypes = new [] { typeof(string) })]
        string OSType { get; set; }
        /// <summary>The version of Operating System running on the hybrid machine.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The version of Operating System running on the hybrid machine.",
        SerializedName = @"osVersion",
        PossibleTypes = new [] { typeof(string) })]
        string OSVersion { get;  }
        /// <summary>
        /// The resource id of the parent cluster (Azure HCI) this machine is assigned to, if any.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The resource id of the parent cluster (Azure HCI) this machine is assigned to, if any.",
        SerializedName = @"parentClusterResourceId",
        PossibleTypes = new [] { typeof(string) })]
        string ParentClusterResourceId { get; set; }
        /// <summary>The resource id of the private link scope this machine is assigned to, if any.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The resource id of the private link scope this machine is assigned to, if any.",
        SerializedName = @"privateLinkScopeResourceId",
        PossibleTypes = new [] { typeof(string) })]
        string PrivateLinkScopeResourceId { get; set; }
        /// <summary>The provisioning state, which only appears in the response.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The provisioning state, which only appears in the response.",
        SerializedName = @"provisioningState",
        PossibleTypes = new [] { typeof(string) })]
        string ProvisioningState { get;  }
        /// <summary>The status of the hybrid machine agent.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The status of the hybrid machine agent.",
        SerializedName = @"status",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Support.StatusTypes) })]
        Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Support.StatusTypes? Status { get;  }
        /// <summary>Specifies the hybrid machine unique ID.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Specifies the hybrid machine unique ID.",
        SerializedName = @"vmId",
        PossibleTypes = new [] { typeof(string) })]
        string VMId { get; set; }
        /// <summary>Specifies the Arc Machine's unique SMBIOS ID</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Specifies the Arc Machine's unique SMBIOS ID",
        SerializedName = @"vmUuid",
        PossibleTypes = new [] { typeof(string) })]
        string VMUuid { get;  }
        /// <summary>Specifies the assessment mode.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Specifies the assessment mode.",
        SerializedName = @"assessmentMode",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Support.AssessmentModeTypes) })]
        Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Support.AssessmentModeTypes? WindowsConfigurationPatchSettingsAssessmentMode { get; set; }
        /// <summary>Specifies the patch mode.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Specifies the patch mode.",
        SerializedName = @"patchMode",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Support.PatchModeTypes) })]
        Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Support.PatchModeTypes? WindowsConfigurationPatchSettingsPatchMode { get; set; }

    }
    /// Describes the properties of a hybrid machine.
    internal partial interface IMachinePropertiesInternal

    {
        /// <summary>Specifies the AD fully qualified display name.</summary>
        string AdFqdn { get; set; }
        /// <summary>
        /// Configurable properties that the user can set locally via the azcmagent config command, or remotely via ARM.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Models.Api20230315Preview.IAgentConfiguration AgentConfiguration { get; set; }
        /// <summary>
        /// Name of configuration mode to use. Modes are pre-defined configurations of security controls, extension allowlists and
        /// guest configuration, maintained by Microsoft.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Support.AgentConfigurationMode? AgentConfigurationConfigMode { get; set; }
        /// <summary>Array of extensions that are allowed to be installed or updated.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Models.Api20230315Preview.IConfigurationExtension[] AgentConfigurationExtensionsAllowList { get; set; }
        /// <summary>Array of extensions that are blocked (cannot be installed or updated)</summary>
        Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Models.Api20230315Preview.IConfigurationExtension[] AgentConfigurationExtensionsBlockList { get; set; }
        /// <summary>Specifies whether the extension service is enabled or disabled.</summary>
        string AgentConfigurationExtensionsEnabled { get; set; }
        /// <summary>Specified whether the guest configuration service is enabled or disabled.</summary>
        string AgentConfigurationGuestConfigurationEnabled { get; set; }
        /// <summary>Specifies the list of ports that the agent will be able to listen on.</summary>
        string[] AgentConfigurationIncomingConnectionsPort { get; set; }
        /// <summary>List of service names which should not use the specified proxy server.</summary>
        string[] AgentConfigurationProxyBypass { get; set; }
        /// <summary>Specifies the URL of the proxy to be used.</summary>
        string AgentConfigurationProxyUrl { get; set; }
        /// <summary>The info of the machine w.r.t Agent Upgrade</summary>
        Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Models.Api20230315Preview.IAgentUpgrade AgentUpgrade { get; set; }
        /// <summary>The correlation ID passed in from RSM per upgrade.</summary>
        string AgentUpgradeCorrelationId { get; set; }
        /// <summary>Specifies the version info w.r.t AgentUpgrade for the machine.</summary>
        string AgentUpgradeDesiredVersion { get; set; }
        /// <summary>Specifies if RSM should try to upgrade this machine</summary>
        bool? AgentUpgradeEnableAutomaticUpgrade { get; set; }
        /// <summary>Specifies the version of the last attempt</summary>
        string AgentUpgradeLastAttemptDesiredVersion { get; set; }
        /// <summary>Failure message of last upgrade attempt if any.</summary>
        string AgentUpgradeLastAttemptMessage { get; set; }
        /// <summary>Specifies the status of Agent Upgrade.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Support.LastAttemptStatusEnum? AgentUpgradeLastAttemptStatus { get; set; }
        /// <summary>Timestamp of last upgrade attempt</summary>
        string AgentUpgradeLastAttemptTimestamp { get; set; }
        /// <summary>The hybrid machine agent full version.</summary>
        string AgentVersion { get; set; }
        /// <summary>
        /// Public Key that the client provides to be used during initial resource onboarding
        /// </summary>
        string ClientPublicKey { get; set; }
        /// <summary>The metadata of the cloud environment (Azure/GCP/AWS/OCI...).</summary>
        Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Models.Api20230315Preview.ICloudMetadata CloudMetadata { get; set; }
        /// <summary>Specifies the cloud provider (Azure/AWS/GCP...).</summary>
        string CloudMetadataProvider { get; set; }
        /// <summary>Detected properties from the machine.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Models.Api20230315Preview.IDetectedProperties DetectedProperty { get; set; }
        /// <summary>Specifies the hybrid machine display name.</summary>
        string DisplayName { get; set; }
        /// <summary>Specifies the DNS fully qualified display name.</summary>
        string DnsFqdn { get; set; }
        /// <summary>Specifies the Windows domain name.</summary>
        string DomainName { get; set; }
        /// <summary>Details about the error state.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Models.Api30.IErrorDetail[] ErrorDetail { get; set; }
        /// <summary>Machine Extensions information (deprecated field)</summary>
        Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Models.Api20230315Preview.IMachineExtensionInstanceView[] Extension { get; set; }
        /// <summary>The behavior of the service when the Arc-enabled machine starts up.</summary>
        string ExtensionServiceStartupType { get; set; }
        /// <summary>The current status of the service.</summary>
        string ExtensionServiceStatus { get; set; }
        /// <summary>The behavior of the service when the Arc-enabled machine starts up.</summary>
        string GuestConfigurationServiceStartupType { get; set; }
        /// <summary>The current status of the service.</summary>
        string GuestConfigurationServiceStatus { get; set; }
        /// <summary>The time of the last status change.</summary>
        global::System.DateTime? LastStatusChange { get; set; }
        /// <summary>Specifies the patch settings.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Models.Api20230315Preview.IPatchSettings LinuxConfigurationPatchSetting { get; set; }
        /// <summary>Specifies the assessment mode.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Support.AssessmentModeTypes? LinuxConfigurationPatchSettingsAssessmentMode { get; set; }
        /// <summary>Specifies the patch mode.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Support.PatchModeTypes? LinuxConfigurationPatchSettingsPatchMode { get; set; }
        /// <summary>Metadata pertaining to the geographic location of the resource.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Models.Api30.ILocationData LocationData { get; set; }
        /// <summary>The city or locality where the resource is located.</summary>
        string LocationDataCity { get; set; }
        /// <summary>The country or region where the resource is located</summary>
        string LocationDataCountryOrRegion { get; set; }
        /// <summary>The district, state, or province where the resource is located.</summary>
        string LocationDataDistrict { get; set; }
        /// <summary>A canonical name for the geographic or physical location.</summary>
        string LocationDataName { get; set; }
        /// <summary>Specifies the hybrid machine FQDN.</summary>
        string MachineFqdn { get; set; }
        /// <summary>Specifies whether any MS SQL instance is discovered on the machine.</summary>
        string MssqlDiscovered { get; set; }
        /// <summary>Information about the network the machine is on.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Models.Api20230315Preview.INetworkProfile NetworkProfile { get; set; }
        /// <summary>The list of network interfaces.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Models.Api20230315Preview.INetworkInterface[] NetworkProfileNetworkInterface { get; set; }
        /// <summary>The Operating System running on the hybrid machine.</summary>
        string OSName { get; set; }
        /// <summary>Specifies the operating system settings for the hybrid machine.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Models.Api20230315Preview.IOSProfile OSProfile { get; set; }
        /// <summary>Specifies the host OS name of the hybrid machine.</summary>
        string OSProfileComputerName { get; set; }
        /// <summary>Specifies the linux configuration for update management.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Models.Api20230315Preview.IOSProfileLinuxConfiguration OSProfileLinuxConfiguration { get; set; }
        /// <summary>Specifies the windows configuration for update management.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Models.Api20230315Preview.IOSProfileWindowsConfiguration OSProfileWindowsConfiguration { get; set; }
        /// <summary>Specifies the Operating System product SKU.</summary>
        string OSSku { get; set; }
        /// <summary>The type of Operating System (windows/linux).</summary>
        string OSType { get; set; }
        /// <summary>The version of Operating System running on the hybrid machine.</summary>
        string OSVersion { get; set; }
        /// <summary>
        /// The resource id of the parent cluster (Azure HCI) this machine is assigned to, if any.
        /// </summary>
        string ParentClusterResourceId { get; set; }
        /// <summary>The resource id of the private link scope this machine is assigned to, if any.</summary>
        string PrivateLinkScopeResourceId { get; set; }
        /// <summary>The provisioning state, which only appears in the response.</summary>
        string ProvisioningState { get; set; }
        /// <summary>Statuses of dependent services that are reported back to ARM.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Models.Api20230315Preview.IServiceStatuses ServiceStatuses { get; set; }
        /// <summary>The state of the extension service on the Arc-enabled machine.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Models.Api20230315Preview.IServiceStatus ServiceStatusesExtensionService { get; set; }
        /// <summary>The state of the guest configuration service on the Arc-enabled machine.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Models.Api20230315Preview.IServiceStatus ServiceStatusesGuestConfigurationService { get; set; }
        /// <summary>The status of the hybrid machine agent.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Support.StatusTypes? Status { get; set; }
        /// <summary>Specifies the hybrid machine unique ID.</summary>
        string VMId { get; set; }
        /// <summary>Specifies the Arc Machine's unique SMBIOS ID</summary>
        string VMUuid { get; set; }
        /// <summary>Specifies the patch settings.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Models.Api20230315Preview.IPatchSettings WindowConfigurationPatchSetting { get; set; }
        /// <summary>Specifies the assessment mode.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Support.AssessmentModeTypes? WindowsConfigurationPatchSettingsAssessmentMode { get; set; }
        /// <summary>Specifies the patch mode.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Support.PatchModeTypes? WindowsConfigurationPatchSettingsPatchMode { get; set; }

    }
}