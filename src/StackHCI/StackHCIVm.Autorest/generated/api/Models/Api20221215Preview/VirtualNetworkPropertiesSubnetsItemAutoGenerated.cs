namespace Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Models.Api20221215Preview
{
    using static Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Runtime.Extensions;

    /// <summary>SubnetProperties - Properties of the subnet.</summary>
    public partial class VirtualNetworkPropertiesSubnetsItemAutoGenerated :
        Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Models.Api20221215Preview.IVirtualNetworkPropertiesSubnetsItemAutoGenerated,
        Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Models.Api20221215Preview.IVirtualNetworkPropertiesSubnetsItemAutoGeneratedInternal
    {

        /// <summary>Backing field for <see cref="AddressPrefix" /> property.</summary>
        private string _addressPrefix;

        /// <summary>Cidr for this subnet - IPv4, IPv6</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Origin(Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.PropertyOrigin.Owned)]
        public string AddressPrefix { get => this._addressPrefix; set => this._addressPrefix = value; }

        /// <summary>Backing field for <see cref="AddressPrefixes" /> property.</summary>
        private string[] _addressPrefixes;

        /// <summary>AddressPrefixes - List of address prefixes for the subnet.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Origin(Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.PropertyOrigin.Owned)]
        public string[] AddressPrefixes { get => this._addressPrefixes; set => this._addressPrefixes = value; }

        /// <summary>Backing field for <see cref="IPAllocationMethod" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Support.IPAllocationMethodEnum? _iPAllocationMethod;

        /// <summary>
        /// IPAllocationMethod - The IP address allocation method. Possible values include: 'Static', 'Dynamic'
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Origin(Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Support.IPAllocationMethodEnum? IPAllocationMethod { get => this._iPAllocationMethod; set => this._iPAllocationMethod = value; }

        /// <summary>Backing field for <see cref="IPConfigurationReference" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Models.Api20221215Preview.IComponentsCr63WSchemasVirtualnetworkpropertiesPropertiesSubnetsItemsPropertiesIpconfigurationreferencesItems[] _iPConfigurationReference;

        /// <summary>IPConfigurationReferences - list of IPConfigurationReferences</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Origin(Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Models.Api20221215Preview.IComponentsCr63WSchemasVirtualnetworkpropertiesPropertiesSubnetsItemsPropertiesIpconfigurationreferencesItems[] IPConfigurationReference { get => this._iPConfigurationReference; set => this._iPConfigurationReference = value; }

        /// <summary>Backing field for <see cref="IPPool" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Models.Api20221215Preview.IIPPool[] _iPPool;

        /// <summary>network associated pool of IP Addresses</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Origin(Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Models.Api20221215Preview.IIPPool[] IPPool { get => this._iPPool; set => this._iPPool = value; }

        /// <summary>Internal Acessors for RouteTable</summary>
        Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Models.Api20221215Preview.IComponentsI4F0MhSchemasVirtualnetworkpropertiesPropertiesSubnetsItemsPropertiesRoutetable Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Models.Api20221215Preview.IVirtualNetworkPropertiesSubnetsItemAutoGeneratedInternal.RouteTable { get => (this._routeTable = this._routeTable ?? new Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Models.Api20221215Preview.ComponentsI4F0MhSchemasVirtualnetworkpropertiesPropertiesSubnetsItemsPropertiesRoutetable()); set { {_routeTable = value;} } }

        /// <summary>Internal Acessors for RouteTableProperty</summary>
        Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Models.Api20221215Preview.IComponents3Iu67JSchemasVirtualnetworkpropertiesPropertiesSubnetsItemsPropertiesRoutetableProperties Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Models.Api20221215Preview.IVirtualNetworkPropertiesSubnetsItemAutoGeneratedInternal.RouteTableProperty { get => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Models.Api20221215Preview.IComponentsI4F0MhSchemasVirtualnetworkpropertiesPropertiesSubnetsItemsPropertiesRoutetableInternal)RouteTable).Property; set => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Models.Api20221215Preview.IComponentsI4F0MhSchemasVirtualnetworkpropertiesPropertiesSubnetsItemsPropertiesRoutetableInternal)RouteTable).Property = value; }

        /// <summary>Routes - Collection of routes contained within a route table.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Origin(Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Models.Api20221215Preview.IVirtualNetworkPropertiesSubnetsPropertiesItemsItem[] Route { get => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Models.Api20221215Preview.IComponentsI4F0MhSchemasVirtualnetworkpropertiesPropertiesSubnetsItemsPropertiesRoutetableInternal)RouteTable).Route; set => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Models.Api20221215Preview.IComponentsI4F0MhSchemasVirtualnetworkpropertiesPropertiesSubnetsItemsPropertiesRoutetableInternal)RouteTable).Route = value ?? null /* arrayOf */; }

        /// <summary>Backing field for <see cref="RouteTable" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Models.Api20221215Preview.IComponentsI4F0MhSchemasVirtualnetworkpropertiesPropertiesSubnetsItemsPropertiesRoutetable _routeTable;

        /// <summary>RouteTable for the subnet</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Origin(Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Models.Api20221215Preview.IComponentsI4F0MhSchemasVirtualnetworkpropertiesPropertiesSubnetsItemsPropertiesRoutetable RouteTable { get => (this._routeTable = this._routeTable ?? new Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Models.Api20221215Preview.ComponentsI4F0MhSchemasVirtualnetworkpropertiesPropertiesSubnetsItemsPropertiesRoutetable()); set => this._routeTable = value; }

        /// <summary>
        /// Etag - Gets a unique read-only string that changes whenever the resource is updated.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Origin(Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.PropertyOrigin.Inlined)]
        public string RouteTableId { get => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Models.Api20221215Preview.IComponentsI4F0MhSchemasVirtualnetworkpropertiesPropertiesSubnetsItemsPropertiesRoutetableInternal)RouteTable).Id; set => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Models.Api20221215Preview.IComponentsI4F0MhSchemasVirtualnetworkpropertiesPropertiesSubnetsItemsPropertiesRoutetableInternal)RouteTable).Id = value ?? null; }

        /// <summary>Name - READ-ONLY; Resource name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Origin(Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.PropertyOrigin.Inlined)]
        public string RouteTableName { get => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Models.Api20221215Preview.IComponentsI4F0MhSchemasVirtualnetworkpropertiesPropertiesSubnetsItemsPropertiesRoutetableInternal)RouteTable).Name; set => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Models.Api20221215Preview.IComponentsI4F0MhSchemasVirtualnetworkpropertiesPropertiesSubnetsItemsPropertiesRoutetableInternal)RouteTable).Name = value ?? null; }

        /// <summary>Type - READ-ONLY; Resource type.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Origin(Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.PropertyOrigin.Inlined)]
        public string RouteTableType { get => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Models.Api20221215Preview.IComponentsI4F0MhSchemasVirtualnetworkpropertiesPropertiesSubnetsItemsPropertiesRoutetableInternal)RouteTable).Type; set => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Models.Api20221215Preview.IComponentsI4F0MhSchemasVirtualnetworkpropertiesPropertiesSubnetsItemsPropertiesRoutetableInternal)RouteTable).Type = value ?? null; }

        /// <summary>Backing field for <see cref="Vlan" /> property.</summary>
        private int? _vlan;

        /// <summary>Vlan to use for the subnet</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Origin(Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.PropertyOrigin.Owned)]
        public int? Vlan { get => this._vlan; set => this._vlan = value; }

        /// <summary>
        /// Creates an new <see cref="VirtualNetworkPropertiesSubnetsItemAutoGenerated" /> instance.
        /// </summary>
        public VirtualNetworkPropertiesSubnetsItemAutoGenerated()
        {

        }
    }
    /// SubnetProperties - Properties of the subnet.
    public partial interface IVirtualNetworkPropertiesSubnetsItemAutoGenerated :
        Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Runtime.IJsonSerializable
    {
        /// <summary>Cidr for this subnet - IPv4, IPv6</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Cidr for this subnet - IPv4, IPv6",
        SerializedName = @"addressPrefix",
        PossibleTypes = new [] { typeof(string) })]
        string AddressPrefix { get; set; }
        /// <summary>AddressPrefixes - List of address prefixes for the subnet.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"AddressPrefixes - List of address prefixes for the subnet.",
        SerializedName = @"addressPrefixes",
        PossibleTypes = new [] { typeof(string) })]
        string[] AddressPrefixes { get; set; }
        /// <summary>
        /// IPAllocationMethod - The IP address allocation method. Possible values include: 'Static', 'Dynamic'
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"IPAllocationMethod - The IP address allocation method. Possible values include: 'Static', 'Dynamic'",
        SerializedName = @"ipAllocationMethod",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Support.IPAllocationMethodEnum) })]
        Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Support.IPAllocationMethodEnum? IPAllocationMethod { get; set; }
        /// <summary>IPConfigurationReferences - list of IPConfigurationReferences</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"IPConfigurationReferences - list of IPConfigurationReferences",
        SerializedName = @"ipConfigurationReferences",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Models.Api20221215Preview.IComponentsCr63WSchemasVirtualnetworkpropertiesPropertiesSubnetsItemsPropertiesIpconfigurationreferencesItems) })]
        Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Models.Api20221215Preview.IComponentsCr63WSchemasVirtualnetworkpropertiesPropertiesSubnetsItemsPropertiesIpconfigurationreferencesItems[] IPConfigurationReference { get; set; }
        /// <summary>network associated pool of IP Addresses</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"network associated pool of IP Addresses",
        SerializedName = @"ipPools",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Models.Api20221215Preview.IIPPool) })]
        Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Models.Api20221215Preview.IIPPool[] IPPool { get; set; }
        /// <summary>Routes - Collection of routes contained within a route table.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Routes - Collection of routes contained within a route table.",
        SerializedName = @"routes",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Models.Api20221215Preview.IVirtualNetworkPropertiesSubnetsPropertiesItemsItem) })]
        Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Models.Api20221215Preview.IVirtualNetworkPropertiesSubnetsPropertiesItemsItem[] Route { get; set; }
        /// <summary>
        /// Etag - Gets a unique read-only string that changes whenever the resource is updated.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Etag - Gets a unique read-only string that changes whenever the resource is updated.",
        SerializedName = @"id",
        PossibleTypes = new [] { typeof(string) })]
        string RouteTableId { get; set; }
        /// <summary>Name - READ-ONLY; Resource name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Name - READ-ONLY; Resource name.",
        SerializedName = @"name",
        PossibleTypes = new [] { typeof(string) })]
        string RouteTableName { get; set; }
        /// <summary>Type - READ-ONLY; Resource type.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Type - READ-ONLY; Resource type.",
        SerializedName = @"type",
        PossibleTypes = new [] { typeof(string) })]
        string RouteTableType { get; set; }
        /// <summary>Vlan to use for the subnet</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Vlan to use for the subnet",
        SerializedName = @"vlan",
        PossibleTypes = new [] { typeof(int) })]
        int? Vlan { get; set; }

    }
    /// SubnetProperties - Properties of the subnet.
    internal partial interface IVirtualNetworkPropertiesSubnetsItemAutoGeneratedInternal

    {
        /// <summary>Cidr for this subnet - IPv4, IPv6</summary>
        string AddressPrefix { get; set; }
        /// <summary>AddressPrefixes - List of address prefixes for the subnet.</summary>
        string[] AddressPrefixes { get; set; }
        /// <summary>
        /// IPAllocationMethod - The IP address allocation method. Possible values include: 'Static', 'Dynamic'
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Support.IPAllocationMethodEnum? IPAllocationMethod { get; set; }
        /// <summary>IPConfigurationReferences - list of IPConfigurationReferences</summary>
        Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Models.Api20221215Preview.IComponentsCr63WSchemasVirtualnetworkpropertiesPropertiesSubnetsItemsPropertiesIpconfigurationreferencesItems[] IPConfigurationReference { get; set; }
        /// <summary>network associated pool of IP Addresses</summary>
        Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Models.Api20221215Preview.IIPPool[] IPPool { get; set; }
        /// <summary>Routes - Collection of routes contained within a route table.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Models.Api20221215Preview.IVirtualNetworkPropertiesSubnetsPropertiesItemsItem[] Route { get; set; }
        /// <summary>RouteTable for the subnet</summary>
        Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Models.Api20221215Preview.IComponentsI4F0MhSchemasVirtualnetworkpropertiesPropertiesSubnetsItemsPropertiesRoutetable RouteTable { get; set; }
        /// <summary>
        /// Etag - Gets a unique read-only string that changes whenever the resource is updated.
        /// </summary>
        string RouteTableId { get; set; }
        /// <summary>Name - READ-ONLY; Resource name.</summary>
        string RouteTableName { get; set; }
        /// <summary>RouteTablePropertiesFormat route Table resource.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.StackHCIVm.Models.Api20221215Preview.IComponents3Iu67JSchemasVirtualnetworkpropertiesPropertiesSubnetsItemsPropertiesRoutetableProperties RouteTableProperty { get; set; }
        /// <summary>Type - READ-ONLY; Resource type.</summary>
        string RouteTableType { get; set; }
        /// <summary>Vlan to use for the subnet</summary>
        int? Vlan { get; set; }

    }
}