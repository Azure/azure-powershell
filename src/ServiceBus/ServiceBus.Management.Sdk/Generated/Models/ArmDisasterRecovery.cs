// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.ServiceBus.Models
{
    using System.Linq;

    /// <summary>
    /// Single item in List or Get Alias(Disaster Recovery configuration) operation
    /// </summary>
    [Microsoft.Rest.Serialization.JsonTransformation]
    public partial class ArmDisasterRecovery : ProxyResource
    {
        /// <summary>
        /// Initializes a new instance of the ArmDisasterRecovery class.
        /// </summary>
        public ArmDisasterRecovery()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the ArmDisasterRecovery class.
        /// </summary>

        /// <param name="id">Fully qualified resource ID for the resource. Ex -
        /// /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        /// </param>

        /// <param name="name">The name of the resource
        /// </param>

        /// <param name="type">The type of the resource. E.g. &#34;Microsoft.EventHub/Namespaces&#34; or
        /// &#34;Microsoft.EventHub/Namespaces/EventHubs&#34;
        /// </param>

        /// <param name="location">The geo-location where the resource lives
        /// </param>

        /// <param name="systemData">The system meta data relating to this resource.
        /// </param>

        /// <param name="provisioningState">Provisioning state of the Alias(Disaster Recovery configuration) - possible
        /// values &#39;Accepted&#39; or &#39;Succeeded&#39; or &#39;Failed&#39;
        /// Possible values include: &#39;Accepted&#39;, &#39;Succeeded&#39;, &#39;Failed&#39;</param>

        /// <param name="pendingReplicationOperationsCount">Number of entities pending to be replicated.
        /// </param>

        /// <param name="partnerNamespace">ARM Id of the Primary/Secondary eventhub namespace name, which is part of
        /// GEO DR pairing
        /// </param>

        /// <param name="alternateName">Primary/Secondary eventhub namespace name, which is part of GEO DR pairing
        /// </param>

        /// <param name="role">role of namespace in GEO DR - possible values &#39;Primary&#39; or
        /// &#39;PrimaryNotReplicating&#39; or &#39;Secondary&#39;
        /// Possible values include: &#39;Primary&#39;, &#39;PrimaryNotReplicating&#39;, &#39;Secondary&#39;</param>
        public ArmDisasterRecovery(string id = default(string), string name = default(string), string type = default(string), string location = default(string), SystemData systemData = default(SystemData), string provisioningState = default(string), long? pendingReplicationOperationsCount = default(long?), string partnerNamespace = default(string), string alternateName = default(string), string role = default(string))

        : base(id, name, type, location)
        {
            this.SystemData = systemData;
            this.ProvisioningState = provisioningState;
            this.PendingReplicationOperationsCount = pendingReplicationOperationsCount;
            this.PartnerNamespace = partnerNamespace;
            this.AlternateName = alternateName;
            this.Role = role;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets the system meta data relating to this resource.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "systemData")]
        public SystemData SystemData {get; private set; }

        /// <summary>
        /// Gets provisioning state of the Alias(Disaster Recovery configuration) -
        /// possible values &#39;Accepted&#39; or &#39;Succeeded&#39; or &#39;Failed&#39; Possible values include: &#39;Accepted&#39;, &#39;Succeeded&#39;, &#39;Failed&#39;
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.provisioningState")]
        public string ProvisioningState {get; private set; }

        /// <summary>
        /// Gets number of entities pending to be replicated.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.pendingReplicationOperationsCount")]
        public long? PendingReplicationOperationsCount {get; private set; }

        /// <summary>
        /// Gets or sets aRM Id of the Primary/Secondary eventhub namespace name, which
        /// is part of GEO DR pairing
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.partnerNamespace")]
        public string PartnerNamespace {get; set; }

        /// <summary>
        /// Gets or sets primary/Secondary eventhub namespace name, which is part of
        /// GEO DR pairing
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.alternateName")]
        public string AlternateName {get; set; }

        /// <summary>
        /// Gets role of namespace in GEO DR - possible values &#39;Primary&#39; or
        /// &#39;PrimaryNotReplicating&#39; or &#39;Secondary&#39; Possible values include: &#39;Primary&#39;, &#39;PrimaryNotReplicating&#39;, &#39;Secondary&#39;
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.role")]
        public string Role {get; private set; }
    }
}