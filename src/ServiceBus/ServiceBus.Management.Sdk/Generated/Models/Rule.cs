// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.ServiceBus.Models
{
    using System.Linq;

    /// <summary>
    /// Description of Rule Resource.
    /// </summary>
    [Microsoft.Rest.Serialization.JsonTransformation]
    public partial class Rule : ProxyResource
    {
        /// <summary>
        /// Initializes a new instance of the Rule class.
        /// </summary>
        public Rule()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the Rule class.
        /// </summary>

        /// <param name="id">Fully qualified resource ID for the resource. Ex -
        /// /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        /// </param>

        /// <param name="name">The name of the resource
        /// </param>

        /// <param name="type">The type of the resource. E.g. &#34;Microsoft.EventHub/Namespaces&#34; or
        /// &#34;Microsoft.EventHub/Namespaces/EventHubs&#34;
        /// </param>

        /// <param name="location">The geo-location where the resource lives
        /// </param>

        /// <param name="systemData">The system meta data relating to this resource.
        /// </param>

        /// <param name="action">Represents the filter actions which are allowed for the transformation of a
        /// message that have been matched by a filter expression.
        /// </param>

        /// <param name="filterType">Filter type that is evaluated against a BrokeredMessage.
        /// Possible values include: &#39;SqlFilter&#39;, &#39;CorrelationFilter&#39;</param>

        /// <param name="sqlFilter">Properties of sqlFilter
        /// </param>

        /// <param name="correlationFilter">Properties of correlationFilter
        /// </param>
        public Rule(string id = default(string), string name = default(string), string type = default(string), string location = default(string), SystemData systemData = default(SystemData), Action action = default(Action), string filterType = default(string), SqlFilter sqlFilter = default(SqlFilter), CorrelationFilter correlationFilter = default(CorrelationFilter))

        : base(id, name, type, location)
        {
            this.SystemData = systemData;
            this.Action = action;
            this.FilterType = filterType;
            this.SqlFilter = sqlFilter;
            this.CorrelationFilter = correlationFilter;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets the system meta data relating to this resource.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "systemData")]
        public SystemData SystemData {get; private set; }

        /// <summary>
        /// Gets or sets represents the filter actions which are allowed for the
        /// transformation of a message that have been matched by a filter expression.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.action")]
        public Action Action {get; set; }

        /// <summary>
        /// Gets or sets filter type that is evaluated against a BrokeredMessage. Possible values include: &#39;SqlFilter&#39;, &#39;CorrelationFilter&#39;
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.filterType")]
        public string FilterType {get; set; }

        /// <summary>
        /// Gets or sets properties of sqlFilter
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.sqlFilter")]
        public SqlFilter SqlFilter {get; set; }

        /// <summary>
        /// Gets or sets properties of correlationFilter
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.correlationFilter")]
        public CorrelationFilter CorrelationFilter {get; set; }
    }
}