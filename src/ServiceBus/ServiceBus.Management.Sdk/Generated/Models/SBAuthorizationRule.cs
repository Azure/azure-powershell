// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.ServiceBus.Models
{
    using System.Linq;

    /// <summary>
    /// Description of a namespace authorization rule.
    /// </summary>
    [Microsoft.Rest.Serialization.JsonTransformation]
    public partial class SBAuthorizationRule : ProxyResource
    {
        /// <summary>
        /// Initializes a new instance of the SBAuthorizationRule class.
        /// </summary>
        public SBAuthorizationRule()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the SBAuthorizationRule class.
        /// </summary>

        /// <param name="id">Fully qualified resource ID for the resource. Ex -
        /// /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        /// </param>

        /// <param name="name">The name of the resource
        /// </param>

        /// <param name="type">The type of the resource. E.g. &#34;Microsoft.EventHub/Namespaces&#34; or
        /// &#34;Microsoft.EventHub/Namespaces/EventHubs&#34;
        /// </param>

        /// <param name="location">The geo-location where the resource lives
        /// </param>

        /// <param name="systemData">The system meta data relating to this resource.
        /// </param>

        /// <param name="rights">The rights associated with the rule.
        /// </param>
        public SBAuthorizationRule(string id = default(string), string name = default(string), string type = default(string), string location = default(string), SystemData systemData = default(SystemData), System.Collections.Generic.IList<string> rights = default(System.Collections.Generic.IList<string>))

        : base(id, name, type, location)
        {
            this.SystemData = systemData;
            this.Rights = rights;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets the system meta data relating to this resource.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "systemData")]
        public SystemData SystemData {get; private set; }

        /// <summary>
        /// Gets or sets the rights associated with the rule.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.rights")]
        public System.Collections.Generic.IList<string> Rights {get; set; }
    }
}