// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.ServiceBus.Models
{
    using System.Linq;

    /// <summary>
    /// Description of a namespace resource.
    /// </summary>
    [Microsoft.Rest.Serialization.JsonTransformation]
    public partial class SBNamespace : TrackedResource
    {
        /// <summary>
        /// Initializes a new instance of the SBNamespace class.
        /// </summary>
        public SBNamespace()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the SBNamespace class.
        /// </summary>

        /// <param name="id">Resource Id
        /// </param>

        /// <param name="name">Resource name
        /// </param>

        /// <param name="type">Resource type
        /// </param>

        /// <param name="location">The Geo-location where the resource lives
        /// </param>

        /// <param name="tags">Resource tags
        /// </param>

        /// <param name="sku">Properties of SKU
        /// </param>

        /// <param name="identity">Properties of BYOK Identity description
        /// </param>

        /// <param name="systemData">The system meta data relating to this resource.
        /// </param>

        /// <param name="encryption">Properties of BYOK Encryption description
        /// </param>

        /// <param name="minimumTlsVersion">The minimum TLS version for the cluster to support, e.g. &#39;1.2&#39;
        /// Possible values include: &#39;1.0&#39;, &#39;1.1&#39;, &#39;1.2&#39;</param>

        /// <param name="provisioningState">Provisioning state of the namespace.
        /// </param>

        /// <param name="status">Status of the namespace.
        /// </param>

        /// <param name="createdAt">The time the namespace was created
        /// </param>

        /// <param name="updatedAt">The time the namespace was updated.
        /// </param>

        /// <param name="serviceBusEndpoint">Endpoint you can use to perform Service Bus operations.
        /// </param>

        /// <param name="metricId">Identifier for Azure Insights metrics
        /// </param>

        /// <param name="zoneRedundant">Enabling this property creates a Premium Service Bus Namespace in regions
        /// supported availability zones.
        /// </param>

        /// <param name="privateEndpointConnections">List of private endpoint connections.
        /// </param>

        /// <param name="disableLocalAuth">This property disables SAS authentication for the Service Bus namespace.
        /// </param>

        /// <param name="alternateName">Alternate name for namespace
        /// </param>

        /// <param name="publicNetworkAccess">This determines if traffic is allowed over public network. By default it is
        /// enabled.
        /// Possible values include: &#39;Enabled&#39;, &#39;Disabled&#39;, &#39;SecuredByPerimeter&#39;</param>
        public SBNamespace(string location, string id = default(string), string name = default(string), string type = default(string), System.Collections.Generic.IDictionary<string, string> tags = default(System.Collections.Generic.IDictionary<string, string>), SBSku sku = default(SBSku), Identity identity = default(Identity), SystemData systemData = default(SystemData), Encryption encryption = default(Encryption), string minimumTlsVersion = default(string), string provisioningState = default(string), string status = default(string), System.DateTime? createdAt = default(System.DateTime?), System.DateTime? updatedAt = default(System.DateTime?), string serviceBusEndpoint = default(string), string metricId = default(string), bool? zoneRedundant = default(bool?), System.Collections.Generic.IList<PrivateEndpointConnection> privateEndpointConnections = default(System.Collections.Generic.IList<PrivateEndpointConnection>), bool? disableLocalAuth = default(bool?), string alternateName = default(string), string publicNetworkAccess = default(string))

        : base(location, id, name, type, tags)
        {
            this.Sku = sku;
            this.Identity = identity;
            this.SystemData = systemData;
            this.Encryption = encryption;
            this.MinimumTlsVersion = minimumTlsVersion;
            this.ProvisioningState = provisioningState;
            this.Status = status;
            this.CreatedAt = createdAt;
            this.UpdatedAt = updatedAt;
            this.ServiceBusEndpoint = serviceBusEndpoint;
            this.MetricId = metricId;
            this.ZoneRedundant = zoneRedundant;
            this.PrivateEndpointConnections = privateEndpointConnections;
            this.DisableLocalAuth = disableLocalAuth;
            this.AlternateName = alternateName;
            this.PublicNetworkAccess = publicNetworkAccess;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets or sets properties of SKU
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "sku")]
        public SBSku Sku {get; set; }

        /// <summary>
        /// Gets or sets properties of BYOK Identity description
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "identity")]
        public Identity Identity {get; set; }

        /// <summary>
        /// Gets the system meta data relating to this resource.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "systemData")]
        public SystemData SystemData {get; private set; }

        /// <summary>
        /// Gets or sets properties of BYOK Encryption description
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.encryption")]
        public Encryption Encryption {get; set; }

        /// <summary>
        /// Gets or sets the minimum TLS version for the cluster to support, e.g. &#39;1.2&#39; Possible values include: &#39;1.0&#39;, &#39;1.1&#39;, &#39;1.2&#39;
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.minimumTlsVersion")]
        public string MinimumTlsVersion {get; set; }

        /// <summary>
        /// Gets provisioning state of the namespace.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.provisioningState")]
        public string ProvisioningState {get; private set; }

        /// <summary>
        /// Gets status of the namespace.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.status")]
        public string Status {get; private set; }

        /// <summary>
        /// Gets the time the namespace was created
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.createdAt")]
        public System.DateTime? CreatedAt {get; private set; }

        /// <summary>
        /// Gets the time the namespace was updated.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.updatedAt")]
        public System.DateTime? UpdatedAt {get; private set; }

        /// <summary>
        /// Gets endpoint you can use to perform Service Bus operations.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.serviceBusEndpoint")]
        public string ServiceBusEndpoint {get; private set; }

        /// <summary>
        /// Gets identifier for Azure Insights metrics
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.metricId")]
        public string MetricId {get; private set; }

        /// <summary>
        /// Gets or sets enabling this property creates a Premium Service Bus Namespace
        /// in regions supported availability zones.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.zoneRedundant")]
        public bool? ZoneRedundant {get; set; }

        /// <summary>
        /// Gets or sets list of private endpoint connections.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.privateEndpointConnections")]
        public System.Collections.Generic.IList<PrivateEndpointConnection> PrivateEndpointConnections {get; set; }

        /// <summary>
        /// Gets or sets this property disables SAS authentication for the Service Bus
        /// namespace.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.disableLocalAuth")]
        public bool? DisableLocalAuth {get; set; }

        /// <summary>
        /// Gets or sets alternate name for namespace
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.alternateName")]
        public string AlternateName {get; set; }

        /// <summary>
        /// Gets or sets this determines if traffic is allowed over public network. By
        /// default it is enabled. Possible values include: &#39;Enabled&#39;, &#39;Disabled&#39;, &#39;SecuredByPerimeter&#39;
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.publicNetworkAccess")]
        public string PublicNetworkAccess {get; set; }
        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public override void Validate()
        {
            base.Validate();
            if (this.Sku != null)
            {
                this.Sku.Validate();
            }











        }
    }
}