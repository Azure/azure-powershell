// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.Models
{
    using static Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.Runtime.Extensions;

    /// <summary>The Topic Properties definition.</summary>
    [Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.DoNotFormat]
    public partial class SbTopicProperties :
        Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.Models.ISbTopicProperties,
        Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.Models.ISbTopicPropertiesInternal
    {

        /// <summary>Backing field for <see cref="AccessedAt" /> property.</summary>
        private global::System.DateTime? _accessedAt;

        /// <summary>Last time the message was sent, or a request was received, for this topic.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.Origin(Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.PropertyOrigin.Owned)]
        public global::System.DateTime? AccessedAt { get => this._accessedAt; }

        /// <summary>Backing field for <see cref="AutoDeleteOnIdle" /> property.</summary>
        private global::System.TimeSpan? _autoDeleteOnIdle;

        /// <summary>
        /// ISO 8601 timespan idle interval after which the topic is automatically deleted. The minimum duration is 5 minutes.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.Origin(Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.PropertyOrigin.Owned)]
        public global::System.TimeSpan? AutoDeleteOnIdle { get => this._autoDeleteOnIdle; set => this._autoDeleteOnIdle = value; }

        /// <summary>Backing field for <see cref="CountDetail" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.Models.IMessageCountDetails _countDetail;

        /// <summary>Message count details</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.Origin(Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.Models.IMessageCountDetails CountDetail { get => (this._countDetail = this._countDetail ?? new Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.Models.MessageCountDetails()); }

        /// <summary>Number of active messages in the queue, topic, or subscription.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.Origin(Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.PropertyOrigin.Inlined)]
        public long? CountDetailActiveMessageCount { get => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.Models.IMessageCountDetailsInternal)CountDetail).ActiveMessageCount; }

        /// <summary>Number of messages that are dead lettered.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.Origin(Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.PropertyOrigin.Inlined)]
        public long? CountDetailDeadLetterMessageCount { get => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.Models.IMessageCountDetailsInternal)CountDetail).DeadLetterMessageCount; }

        /// <summary>Number of scheduled messages.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.Origin(Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.PropertyOrigin.Inlined)]
        public long? CountDetailScheduledMessageCount { get => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.Models.IMessageCountDetailsInternal)CountDetail).ScheduledMessageCount; }

        /// <summary>Number of messages transferred into dead letters.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.Origin(Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.PropertyOrigin.Inlined)]
        public long? CountDetailTransferDeadLetterMessageCount { get => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.Models.IMessageCountDetailsInternal)CountDetail).TransferDeadLetterMessageCount; }

        /// <summary>Number of messages transferred to another queue, topic, or subscription.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.Origin(Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.PropertyOrigin.Inlined)]
        public long? CountDetailTransferMessageCount { get => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.Models.IMessageCountDetailsInternal)CountDetail).TransferMessageCount; }

        /// <summary>Backing field for <see cref="CreatedAt" /> property.</summary>
        private global::System.DateTime? _createdAt;

        /// <summary>Exact time the message was created.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.Origin(Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.PropertyOrigin.Owned)]
        public global::System.DateTime? CreatedAt { get => this._createdAt; }

        /// <summary>Backing field for <see cref="DefaultMessageTimeToLive" /> property.</summary>
        private global::System.TimeSpan? _defaultMessageTimeToLive;

        /// <summary>
        /// ISO 8601 Default message timespan to live value. This is the duration after which the message expires, starting from when
        /// the message is sent to Service Bus. This is the default value used when TimeToLive is not set on a message itself.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.Origin(Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.PropertyOrigin.Owned)]
        public global::System.TimeSpan? DefaultMessageTimeToLive { get => this._defaultMessageTimeToLive; set => this._defaultMessageTimeToLive = value; }

        /// <summary>Backing field for <see cref="DuplicateDetectionHistoryTimeWindow" /> property.</summary>
        private global::System.TimeSpan? _duplicateDetectionHistoryTimeWindow;

        /// <summary>
        /// ISO8601 timespan structure that defines the duration of the duplicate detection history. The default value is 10 minutes.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.Origin(Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.PropertyOrigin.Owned)]
        public global::System.TimeSpan? DuplicateDetectionHistoryTimeWindow { get => this._duplicateDetectionHistoryTimeWindow; set => this._duplicateDetectionHistoryTimeWindow = value; }

        /// <summary>Backing field for <see cref="EnableBatchedOperations" /> property.</summary>
        private bool? _enableBatchedOperations;

        /// <summary>Value that indicates whether server-side batched operations are enabled.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.Origin(Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.PropertyOrigin.Owned)]
        public bool? EnableBatchedOperations { get => this._enableBatchedOperations; set => this._enableBatchedOperations = value; }

        /// <summary>Backing field for <see cref="EnableExpress" /> property.</summary>
        private bool? _enableExpress;

        /// <summary>
        /// Value that indicates whether Express Entities are enabled. An express topic holds a message in memory temporarily before
        /// writing it to persistent storage.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.Origin(Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.PropertyOrigin.Owned)]
        public bool? EnableExpress { get => this._enableExpress; set => this._enableExpress = value; }

        /// <summary>Backing field for <see cref="EnablePartitioning" /> property.</summary>
        private bool? _enablePartitioning;

        /// <summary>
        /// Value that indicates whether the topic to be partitioned across multiple message brokers is enabled.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.Origin(Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.PropertyOrigin.Owned)]
        public bool? EnablePartitioning { get => this._enablePartitioning; set => this._enablePartitioning = value; }

        /// <summary>Backing field for <see cref="MaxMessageSizeInKilobytes" /> property.</summary>
        private long? _maxMessageSizeInKilobytes;

        /// <summary>
        /// Maximum size (in KB) of the message payload that can be accepted by the topic. This property is only used in Premium today
        /// and default is 1024.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.Origin(Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.PropertyOrigin.Owned)]
        public long? MaxMessageSizeInKilobytes { get => this._maxMessageSizeInKilobytes; set => this._maxMessageSizeInKilobytes = value; }

        /// <summary>Backing field for <see cref="MaxSizeInMegabytes" /> property.</summary>
        private int? _maxSizeInMegabytes;

        /// <summary>
        /// Maximum size of the topic in megabytes, which is the size of the memory allocated for the topic. Default is 1024.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.Origin(Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.PropertyOrigin.Owned)]
        public int? MaxSizeInMegabytes { get => this._maxSizeInMegabytes; set => this._maxSizeInMegabytes = value; }

        /// <summary>Internal Acessors for AccessedAt</summary>
        global::System.DateTime? Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.Models.ISbTopicPropertiesInternal.AccessedAt { get => this._accessedAt; set { {_accessedAt = value;} } }

        /// <summary>Internal Acessors for CountDetail</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.Models.IMessageCountDetails Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.Models.ISbTopicPropertiesInternal.CountDetail { get => (this._countDetail = this._countDetail ?? new Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.Models.MessageCountDetails()); set { {_countDetail = value;} } }

        /// <summary>Internal Acessors for CountDetailActiveMessageCount</summary>
        long? Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.Models.ISbTopicPropertiesInternal.CountDetailActiveMessageCount { get => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.Models.IMessageCountDetailsInternal)CountDetail).ActiveMessageCount; set => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.Models.IMessageCountDetailsInternal)CountDetail).ActiveMessageCount = value; }

        /// <summary>Internal Acessors for CountDetailDeadLetterMessageCount</summary>
        long? Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.Models.ISbTopicPropertiesInternal.CountDetailDeadLetterMessageCount { get => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.Models.IMessageCountDetailsInternal)CountDetail).DeadLetterMessageCount; set => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.Models.IMessageCountDetailsInternal)CountDetail).DeadLetterMessageCount = value; }

        /// <summary>Internal Acessors for CountDetailScheduledMessageCount</summary>
        long? Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.Models.ISbTopicPropertiesInternal.CountDetailScheduledMessageCount { get => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.Models.IMessageCountDetailsInternal)CountDetail).ScheduledMessageCount; set => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.Models.IMessageCountDetailsInternal)CountDetail).ScheduledMessageCount = value; }

        /// <summary>Internal Acessors for CountDetailTransferDeadLetterMessageCount</summary>
        long? Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.Models.ISbTopicPropertiesInternal.CountDetailTransferDeadLetterMessageCount { get => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.Models.IMessageCountDetailsInternal)CountDetail).TransferDeadLetterMessageCount; set => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.Models.IMessageCountDetailsInternal)CountDetail).TransferDeadLetterMessageCount = value; }

        /// <summary>Internal Acessors for CountDetailTransferMessageCount</summary>
        long? Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.Models.ISbTopicPropertiesInternal.CountDetailTransferMessageCount { get => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.Models.IMessageCountDetailsInternal)CountDetail).TransferMessageCount; set => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.Models.IMessageCountDetailsInternal)CountDetail).TransferMessageCount = value; }

        /// <summary>Internal Acessors for CreatedAt</summary>
        global::System.DateTime? Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.Models.ISbTopicPropertiesInternal.CreatedAt { get => this._createdAt; set { {_createdAt = value;} } }

        /// <summary>Internal Acessors for SizeInByte</summary>
        long? Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.Models.ISbTopicPropertiesInternal.SizeInByte { get => this._sizeInByte; set { {_sizeInByte = value;} } }

        /// <summary>Internal Acessors for SubscriptionCount</summary>
        int? Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.Models.ISbTopicPropertiesInternal.SubscriptionCount { get => this._subscriptionCount; set { {_subscriptionCount = value;} } }

        /// <summary>Internal Acessors for UpdatedAt</summary>
        global::System.DateTime? Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.Models.ISbTopicPropertiesInternal.UpdatedAt { get => this._updatedAt; set { {_updatedAt = value;} } }

        /// <summary>Backing field for <see cref="RequiresDuplicateDetection" /> property.</summary>
        private bool? _requiresDuplicateDetection;

        /// <summary>Value indicating if this topic requires duplicate detection.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.Origin(Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.PropertyOrigin.Owned)]
        public bool? RequiresDuplicateDetection { get => this._requiresDuplicateDetection; set => this._requiresDuplicateDetection = value; }

        /// <summary>Backing field for <see cref="SizeInByte" /> property.</summary>
        private long? _sizeInByte;

        /// <summary>Size of the topic, in bytes.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.Origin(Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.PropertyOrigin.Owned)]
        public long? SizeInByte { get => this._sizeInByte; }

        /// <summary>Backing field for <see cref="Status" /> property.</summary>
        private string _status;

        /// <summary>Enumerates the possible values for the status of a messaging entity.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.Origin(Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.PropertyOrigin.Owned)]
        public string Status { get => this._status; set => this._status = value; }

        /// <summary>Backing field for <see cref="SubscriptionCount" /> property.</summary>
        private int? _subscriptionCount;

        /// <summary>Number of subscriptions.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.Origin(Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.PropertyOrigin.Owned)]
        public int? SubscriptionCount { get => this._subscriptionCount; }

        /// <summary>Backing field for <see cref="SupportOrdering" /> property.</summary>
        private bool? _supportOrdering;

        /// <summary>Value that indicates whether the topic supports ordering.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.Origin(Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.PropertyOrigin.Owned)]
        public bool? SupportOrdering { get => this._supportOrdering; set => this._supportOrdering = value; }

        /// <summary>Backing field for <see cref="UpdatedAt" /> property.</summary>
        private global::System.DateTime? _updatedAt;

        /// <summary>The exact time the message was updated.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.Origin(Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.PropertyOrigin.Owned)]
        public global::System.DateTime? UpdatedAt { get => this._updatedAt; }

        /// <summary>Creates an new <see cref="SbTopicProperties" /> instance.</summary>
        public SbTopicProperties()
        {

        }
    }
    /// The Topic Properties definition.
    public partial interface ISbTopicProperties :
        Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.Runtime.IJsonSerializable
    {
        /// <summary>Last time the message was sent, or a request was received, for this topic.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"Last time the message was sent, or a request was received, for this topic.",
        SerializedName = @"accessedAt",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? AccessedAt { get;  }
        /// <summary>
        /// ISO 8601 timespan idle interval after which the topic is automatically deleted. The minimum duration is 5 minutes.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"ISO 8601 timespan idle interval after which the topic is automatically deleted. The minimum duration is 5 minutes.",
        SerializedName = @"autoDeleteOnIdle",
        PossibleTypes = new [] { typeof(global::System.TimeSpan) })]
        global::System.TimeSpan? AutoDeleteOnIdle { get; set; }
        /// <summary>Number of active messages in the queue, topic, or subscription.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"Number of active messages in the queue, topic, or subscription.",
        SerializedName = @"activeMessageCount",
        PossibleTypes = new [] { typeof(long) })]
        long? CountDetailActiveMessageCount { get;  }
        /// <summary>Number of messages that are dead lettered.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"Number of messages that are dead lettered.",
        SerializedName = @"deadLetterMessageCount",
        PossibleTypes = new [] { typeof(long) })]
        long? CountDetailDeadLetterMessageCount { get;  }
        /// <summary>Number of scheduled messages.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"Number of scheduled messages.",
        SerializedName = @"scheduledMessageCount",
        PossibleTypes = new [] { typeof(long) })]
        long? CountDetailScheduledMessageCount { get;  }
        /// <summary>Number of messages transferred into dead letters.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"Number of messages transferred into dead letters.",
        SerializedName = @"transferDeadLetterMessageCount",
        PossibleTypes = new [] { typeof(long) })]
        long? CountDetailTransferDeadLetterMessageCount { get;  }
        /// <summary>Number of messages transferred to another queue, topic, or subscription.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"Number of messages transferred to another queue, topic, or subscription.",
        SerializedName = @"transferMessageCount",
        PossibleTypes = new [] { typeof(long) })]
        long? CountDetailTransferMessageCount { get;  }
        /// <summary>Exact time the message was created.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"Exact time the message was created.",
        SerializedName = @"createdAt",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? CreatedAt { get;  }
        /// <summary>
        /// ISO 8601 Default message timespan to live value. This is the duration after which the message expires, starting from when
        /// the message is sent to Service Bus. This is the default value used when TimeToLive is not set on a message itself.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"ISO 8601 Default message timespan to live value. This is the duration after which the message expires, starting from when the message is sent to Service Bus. This is the default value used when TimeToLive is not set on a message itself.",
        SerializedName = @"defaultMessageTimeToLive",
        PossibleTypes = new [] { typeof(global::System.TimeSpan) })]
        global::System.TimeSpan? DefaultMessageTimeToLive { get; set; }
        /// <summary>
        /// ISO8601 timespan structure that defines the duration of the duplicate detection history. The default value is 10 minutes.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"ISO8601 timespan structure that defines the duration of the duplicate detection history. The default value is 10 minutes.",
        SerializedName = @"duplicateDetectionHistoryTimeWindow",
        PossibleTypes = new [] { typeof(global::System.TimeSpan) })]
        global::System.TimeSpan? DuplicateDetectionHistoryTimeWindow { get; set; }
        /// <summary>Value that indicates whether server-side batched operations are enabled.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Value that indicates whether server-side batched operations are enabled.",
        SerializedName = @"enableBatchedOperations",
        PossibleTypes = new [] { typeof(bool) })]
        bool? EnableBatchedOperations { get; set; }
        /// <summary>
        /// Value that indicates whether Express Entities are enabled. An express topic holds a message in memory temporarily before
        /// writing it to persistent storage.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Value that indicates whether Express Entities are enabled. An express topic holds a message in memory temporarily before writing it to persistent storage.",
        SerializedName = @"enableExpress",
        PossibleTypes = new [] { typeof(bool) })]
        bool? EnableExpress { get; set; }
        /// <summary>
        /// Value that indicates whether the topic to be partitioned across multiple message brokers is enabled.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Value that indicates whether the topic to be partitioned across multiple message brokers is enabled.",
        SerializedName = @"enablePartitioning",
        PossibleTypes = new [] { typeof(bool) })]
        bool? EnablePartitioning { get; set; }
        /// <summary>
        /// Maximum size (in KB) of the message payload that can be accepted by the topic. This property is only used in Premium today
        /// and default is 1024.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Maximum size (in KB) of the message payload that can be accepted by the topic. This property is only used in Premium today and default is 1024.",
        SerializedName = @"maxMessageSizeInKilobytes",
        PossibleTypes = new [] { typeof(long) })]
        long? MaxMessageSizeInKilobytes { get; set; }
        /// <summary>
        /// Maximum size of the topic in megabytes, which is the size of the memory allocated for the topic. Default is 1024.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Maximum size of the topic in megabytes, which is the size of the memory allocated for the topic. Default is 1024.",
        SerializedName = @"maxSizeInMegabytes",
        PossibleTypes = new [] { typeof(int) })]
        int? MaxSizeInMegabytes { get; set; }
        /// <summary>Value indicating if this topic requires duplicate detection.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Value indicating if this topic requires duplicate detection.",
        SerializedName = @"requiresDuplicateDetection",
        PossibleTypes = new [] { typeof(bool) })]
        bool? RequiresDuplicateDetection { get; set; }
        /// <summary>Size of the topic, in bytes.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"Size of the topic, in bytes.",
        SerializedName = @"sizeInBytes",
        PossibleTypes = new [] { typeof(long) })]
        long? SizeInByte { get;  }
        /// <summary>Enumerates the possible values for the status of a messaging entity.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Enumerates the possible values for the status of a messaging entity.",
        SerializedName = @"status",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.PSArgumentCompleterAttribute("Active", "Disabled", "Restoring", "SendDisabled", "ReceiveDisabled", "Creating", "Deleting", "Renaming", "Unknown")]
        string Status { get; set; }
        /// <summary>Number of subscriptions.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"Number of subscriptions.",
        SerializedName = @"subscriptionCount",
        PossibleTypes = new [] { typeof(int) })]
        int? SubscriptionCount { get;  }
        /// <summary>Value that indicates whether the topic supports ordering.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Value that indicates whether the topic supports ordering.",
        SerializedName = @"supportOrdering",
        PossibleTypes = new [] { typeof(bool) })]
        bool? SupportOrdering { get; set; }
        /// <summary>The exact time the message was updated.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The exact time the message was updated.",
        SerializedName = @"updatedAt",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? UpdatedAt { get;  }

    }
    /// The Topic Properties definition.
    internal partial interface ISbTopicPropertiesInternal

    {
        /// <summary>Last time the message was sent, or a request was received, for this topic.</summary>
        global::System.DateTime? AccessedAt { get; set; }
        /// <summary>
        /// ISO 8601 timespan idle interval after which the topic is automatically deleted. The minimum duration is 5 minutes.
        /// </summary>
        global::System.TimeSpan? AutoDeleteOnIdle { get; set; }
        /// <summary>Message count details</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.Models.IMessageCountDetails CountDetail { get; set; }
        /// <summary>Number of active messages in the queue, topic, or subscription.</summary>
        long? CountDetailActiveMessageCount { get; set; }
        /// <summary>Number of messages that are dead lettered.</summary>
        long? CountDetailDeadLetterMessageCount { get; set; }
        /// <summary>Number of scheduled messages.</summary>
        long? CountDetailScheduledMessageCount { get; set; }
        /// <summary>Number of messages transferred into dead letters.</summary>
        long? CountDetailTransferDeadLetterMessageCount { get; set; }
        /// <summary>Number of messages transferred to another queue, topic, or subscription.</summary>
        long? CountDetailTransferMessageCount { get; set; }
        /// <summary>Exact time the message was created.</summary>
        global::System.DateTime? CreatedAt { get; set; }
        /// <summary>
        /// ISO 8601 Default message timespan to live value. This is the duration after which the message expires, starting from when
        /// the message is sent to Service Bus. This is the default value used when TimeToLive is not set on a message itself.
        /// </summary>
        global::System.TimeSpan? DefaultMessageTimeToLive { get; set; }
        /// <summary>
        /// ISO8601 timespan structure that defines the duration of the duplicate detection history. The default value is 10 minutes.
        /// </summary>
        global::System.TimeSpan? DuplicateDetectionHistoryTimeWindow { get; set; }
        /// <summary>Value that indicates whether server-side batched operations are enabled.</summary>
        bool? EnableBatchedOperations { get; set; }
        /// <summary>
        /// Value that indicates whether Express Entities are enabled. An express topic holds a message in memory temporarily before
        /// writing it to persistent storage.
        /// </summary>
        bool? EnableExpress { get; set; }
        /// <summary>
        /// Value that indicates whether the topic to be partitioned across multiple message brokers is enabled.
        /// </summary>
        bool? EnablePartitioning { get; set; }
        /// <summary>
        /// Maximum size (in KB) of the message payload that can be accepted by the topic. This property is only used in Premium today
        /// and default is 1024.
        /// </summary>
        long? MaxMessageSizeInKilobytes { get; set; }
        /// <summary>
        /// Maximum size of the topic in megabytes, which is the size of the memory allocated for the topic. Default is 1024.
        /// </summary>
        int? MaxSizeInMegabytes { get; set; }
        /// <summary>Value indicating if this topic requires duplicate detection.</summary>
        bool? RequiresDuplicateDetection { get; set; }
        /// <summary>Size of the topic, in bytes.</summary>
        long? SizeInByte { get; set; }
        /// <summary>Enumerates the possible values for the status of a messaging entity.</summary>
        [global::Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.PSArgumentCompleterAttribute("Active", "Disabled", "Restoring", "SendDisabled", "ReceiveDisabled", "Creating", "Deleting", "Renaming", "Unknown")]
        string Status { get; set; }
        /// <summary>Number of subscriptions.</summary>
        int? SubscriptionCount { get; set; }
        /// <summary>Value that indicates whether the topic supports ordering.</summary>
        bool? SupportOrdering { get; set; }
        /// <summary>The exact time the message was updated.</summary>
        global::System.DateTime? UpdatedAt { get; set; }

    }
}