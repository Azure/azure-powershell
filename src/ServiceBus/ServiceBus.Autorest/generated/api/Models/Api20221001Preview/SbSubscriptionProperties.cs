// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.Models.Api20221001Preview
{
    using static Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.Runtime.Extensions;

    /// <summary>Description of Subscription Resource.</summary>
    [Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.DoNotFormat]
    public partial class SbSubscriptionProperties :
        Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.Models.Api20221001Preview.ISbSubscriptionProperties,
        Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.Models.Api20221001Preview.ISbSubscriptionPropertiesInternal
    {

        /// <summary>Backing field for <see cref="AccessedAt" /> property.</summary>
        private global::System.DateTime? _accessedAt;

        /// <summary>Last time there was a receive request to this subscription.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.Origin(Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.PropertyOrigin.Owned)]
        public global::System.DateTime? AccessedAt { get => this._accessedAt; }

        /// <summary>Backing field for <see cref="AutoDeleteOnIdle" /> property.</summary>
        private global::System.TimeSpan? _autoDeleteOnIdle;

        /// <summary>
        /// ISO 8061 timeSpan idle interval after which the topic is automatically deleted. The minimum duration is 5 minutes.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.Origin(Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.PropertyOrigin.Owned)]
        public global::System.TimeSpan? AutoDeleteOnIdle { get => this._autoDeleteOnIdle; set => this._autoDeleteOnIdle = value; }

        /// <summary>Backing field for <see cref="ClientAffineProperty" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.Models.Api20221001Preview.ISbClientAffineProperties _clientAffineProperty;

        /// <summary>Properties specific to client affine subscriptions.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.Origin(Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.Models.Api20221001Preview.ISbClientAffineProperties ClientAffineProperty { get => (this._clientAffineProperty = this._clientAffineProperty ?? new Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.Models.Api20221001Preview.SbClientAffineProperties()); set => this._clientAffineProperty = value; }

        /// <summary>
        /// Indicates the Client ID of the application that created the client-affine subscription.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.Origin(Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.PropertyOrigin.Inlined)]
        public string ClientAffinePropertyClientId { get => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.Models.Api20221001Preview.ISbClientAffinePropertiesInternal)ClientAffineProperty).ClientId; set => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.Models.Api20221001Preview.ISbClientAffinePropertiesInternal)ClientAffineProperty).ClientId = value ?? null; }

        /// <summary>
        /// For client-affine subscriptions, this value indicates whether the subscription is durable or not.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.Origin(Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.PropertyOrigin.Inlined)]
        public bool? ClientAffinePropertyIsDurable { get => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.Models.Api20221001Preview.ISbClientAffinePropertiesInternal)ClientAffineProperty).IsDurable; set => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.Models.Api20221001Preview.ISbClientAffinePropertiesInternal)ClientAffineProperty).IsDurable = value ?? default(bool); }

        /// <summary>
        /// For client-affine subscriptions, this value indicates whether the subscription is shared or not.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.Origin(Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.PropertyOrigin.Inlined)]
        public bool? ClientAffinePropertyIsShared { get => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.Models.Api20221001Preview.ISbClientAffinePropertiesInternal)ClientAffineProperty).IsShared; set => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.Models.Api20221001Preview.ISbClientAffinePropertiesInternal)ClientAffineProperty).IsShared = value ?? default(bool); }

        /// <summary>Backing field for <see cref="CountDetail" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.Models.Api10.IMessageCountDetails _countDetail;

        /// <summary>Message count details</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.Origin(Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.Models.Api10.IMessageCountDetails CountDetail { get => (this._countDetail = this._countDetail ?? new Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.Models.Api10.MessageCountDetails()); }

        /// <summary>Number of active messages in the queue, topic, or subscription.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.Origin(Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.PropertyOrigin.Inlined)]
        public long? CountDetailActiveMessageCount { get => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.Models.Api10.IMessageCountDetailsInternal)CountDetail).ActiveMessageCount; }

        /// <summary>Number of messages that are dead lettered.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.Origin(Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.PropertyOrigin.Inlined)]
        public long? CountDetailDeadLetterMessageCount { get => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.Models.Api10.IMessageCountDetailsInternal)CountDetail).DeadLetterMessageCount; }

        /// <summary>Number of scheduled messages.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.Origin(Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.PropertyOrigin.Inlined)]
        public long? CountDetailScheduledMessageCount { get => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.Models.Api10.IMessageCountDetailsInternal)CountDetail).ScheduledMessageCount; }

        /// <summary>Number of messages transferred into dead letters.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.Origin(Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.PropertyOrigin.Inlined)]
        public long? CountDetailTransferDeadLetterMessageCount { get => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.Models.Api10.IMessageCountDetailsInternal)CountDetail).TransferDeadLetterMessageCount; }

        /// <summary>Number of messages transferred to another queue, topic, or subscription.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.Origin(Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.PropertyOrigin.Inlined)]
        public long? CountDetailTransferMessageCount { get => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.Models.Api10.IMessageCountDetailsInternal)CountDetail).TransferMessageCount; }

        /// <summary>Backing field for <see cref="CreatedAt" /> property.</summary>
        private global::System.DateTime? _createdAt;

        /// <summary>Exact time the message was created.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.Origin(Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.PropertyOrigin.Owned)]
        public global::System.DateTime? CreatedAt { get => this._createdAt; }

        /// <summary>
        /// Backing field for <see cref="DeadLetteringOnFilterEvaluationException" /> property.
        /// </summary>
        private bool? _deadLetteringOnFilterEvaluationException;

        /// <summary>
        /// Value that indicates whether a subscription has dead letter support on filter evaluation exceptions.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.Origin(Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.PropertyOrigin.Owned)]
        public bool? DeadLetteringOnFilterEvaluationException { get => this._deadLetteringOnFilterEvaluationException; set => this._deadLetteringOnFilterEvaluationException = value; }

        /// <summary>Backing field for <see cref="DeadLetteringOnMessageExpiration" /> property.</summary>
        private bool? _deadLetteringOnMessageExpiration;

        /// <summary>
        /// Value that indicates whether a subscription has dead letter support when a message expires.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.Origin(Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.PropertyOrigin.Owned)]
        public bool? DeadLetteringOnMessageExpiration { get => this._deadLetteringOnMessageExpiration; set => this._deadLetteringOnMessageExpiration = value; }

        /// <summary>Backing field for <see cref="DefaultMessageTimeToLive" /> property.</summary>
        private global::System.TimeSpan? _defaultMessageTimeToLive;

        /// <summary>
        /// ISO 8061 Default message timespan to live value. This is the duration after which the message expires, starting from when
        /// the message is sent to Service Bus. This is the default value used when TimeToLive is not set on a message itself.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.Origin(Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.PropertyOrigin.Owned)]
        public global::System.TimeSpan? DefaultMessageTimeToLive { get => this._defaultMessageTimeToLive; set => this._defaultMessageTimeToLive = value; }

        /// <summary>Backing field for <see cref="DuplicateDetectionHistoryTimeWindow" /> property.</summary>
        private global::System.TimeSpan? _duplicateDetectionHistoryTimeWindow;

        /// <summary>
        /// ISO 8601 timeSpan structure that defines the duration of the duplicate detection history. The default value is 10 minutes.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.Origin(Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.PropertyOrigin.Owned)]
        public global::System.TimeSpan? DuplicateDetectionHistoryTimeWindow { get => this._duplicateDetectionHistoryTimeWindow; set => this._duplicateDetectionHistoryTimeWindow = value; }

        /// <summary>Backing field for <see cref="EnableBatchedOperations" /> property.</summary>
        private bool? _enableBatchedOperations;

        /// <summary>Value that indicates whether server-side batched operations are enabled.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.Origin(Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.PropertyOrigin.Owned)]
        public bool? EnableBatchedOperations { get => this._enableBatchedOperations; set => this._enableBatchedOperations = value; }

        /// <summary>Backing field for <see cref="ForwardDeadLetteredMessagesTo" /> property.</summary>
        private string _forwardDeadLetteredMessagesTo;

        /// <summary>Queue/Topic name to forward the Dead Letter message</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.Origin(Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.PropertyOrigin.Owned)]
        public string ForwardDeadLetteredMessagesTo { get => this._forwardDeadLetteredMessagesTo; set => this._forwardDeadLetteredMessagesTo = value; }

        /// <summary>Backing field for <see cref="ForwardTo" /> property.</summary>
        private string _forwardTo;

        /// <summary>Queue/Topic name to forward the messages</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.Origin(Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.PropertyOrigin.Owned)]
        public string ForwardTo { get => this._forwardTo; set => this._forwardTo = value; }

        /// <summary>Backing field for <see cref="IsClientAffine" /> property.</summary>
        private bool? _isClientAffine;

        /// <summary>Value that indicates whether the subscription has an affinity to the client id.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.Origin(Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.PropertyOrigin.Owned)]
        public bool? IsClientAffine { get => this._isClientAffine; set => this._isClientAffine = value; }

        /// <summary>Backing field for <see cref="LockDuration" /> property.</summary>
        private global::System.TimeSpan? _lockDuration;

        /// <summary>
        /// ISO 8061 lock duration timespan for the subscription. The default value is 1 minute.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.Origin(Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.PropertyOrigin.Owned)]
        public global::System.TimeSpan? LockDuration { get => this._lockDuration; set => this._lockDuration = value; }

        /// <summary>Backing field for <see cref="MaxDeliveryCount" /> property.</summary>
        private int? _maxDeliveryCount;

        /// <summary>Number of maximum deliveries.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.Origin(Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.PropertyOrigin.Owned)]
        public int? MaxDeliveryCount { get => this._maxDeliveryCount; set => this._maxDeliveryCount = value; }

        /// <summary>Backing field for <see cref="MessageCount" /> property.</summary>
        private long? _messageCount;

        /// <summary>Number of messages.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.Origin(Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.PropertyOrigin.Owned)]
        public long? MessageCount { get => this._messageCount; }

        /// <summary>Internal Acessors for AccessedAt</summary>
        global::System.DateTime? Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.Models.Api20221001Preview.ISbSubscriptionPropertiesInternal.AccessedAt { get => this._accessedAt; set { {_accessedAt = value;} } }

        /// <summary>Internal Acessors for ClientAffineProperty</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.Models.Api20221001Preview.ISbClientAffineProperties Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.Models.Api20221001Preview.ISbSubscriptionPropertiesInternal.ClientAffineProperty { get => (this._clientAffineProperty = this._clientAffineProperty ?? new Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.Models.Api20221001Preview.SbClientAffineProperties()); set { {_clientAffineProperty = value;} } }

        /// <summary>Internal Acessors for CountDetail</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.Models.Api10.IMessageCountDetails Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.Models.Api20221001Preview.ISbSubscriptionPropertiesInternal.CountDetail { get => (this._countDetail = this._countDetail ?? new Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.Models.Api10.MessageCountDetails()); set { {_countDetail = value;} } }

        /// <summary>Internal Acessors for CountDetailActiveMessageCount</summary>
        long? Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.Models.Api20221001Preview.ISbSubscriptionPropertiesInternal.CountDetailActiveMessageCount { get => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.Models.Api10.IMessageCountDetailsInternal)CountDetail).ActiveMessageCount; set => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.Models.Api10.IMessageCountDetailsInternal)CountDetail).ActiveMessageCount = value; }

        /// <summary>Internal Acessors for CountDetailDeadLetterMessageCount</summary>
        long? Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.Models.Api20221001Preview.ISbSubscriptionPropertiesInternal.CountDetailDeadLetterMessageCount { get => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.Models.Api10.IMessageCountDetailsInternal)CountDetail).DeadLetterMessageCount; set => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.Models.Api10.IMessageCountDetailsInternal)CountDetail).DeadLetterMessageCount = value; }

        /// <summary>Internal Acessors for CountDetailScheduledMessageCount</summary>
        long? Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.Models.Api20221001Preview.ISbSubscriptionPropertiesInternal.CountDetailScheduledMessageCount { get => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.Models.Api10.IMessageCountDetailsInternal)CountDetail).ScheduledMessageCount; set => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.Models.Api10.IMessageCountDetailsInternal)CountDetail).ScheduledMessageCount = value; }

        /// <summary>Internal Acessors for CountDetailTransferDeadLetterMessageCount</summary>
        long? Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.Models.Api20221001Preview.ISbSubscriptionPropertiesInternal.CountDetailTransferDeadLetterMessageCount { get => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.Models.Api10.IMessageCountDetailsInternal)CountDetail).TransferDeadLetterMessageCount; set => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.Models.Api10.IMessageCountDetailsInternal)CountDetail).TransferDeadLetterMessageCount = value; }

        /// <summary>Internal Acessors for CountDetailTransferMessageCount</summary>
        long? Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.Models.Api20221001Preview.ISbSubscriptionPropertiesInternal.CountDetailTransferMessageCount { get => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.Models.Api10.IMessageCountDetailsInternal)CountDetail).TransferMessageCount; set => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.Models.Api10.IMessageCountDetailsInternal)CountDetail).TransferMessageCount = value; }

        /// <summary>Internal Acessors for CreatedAt</summary>
        global::System.DateTime? Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.Models.Api20221001Preview.ISbSubscriptionPropertiesInternal.CreatedAt { get => this._createdAt; set { {_createdAt = value;} } }

        /// <summary>Internal Acessors for MessageCount</summary>
        long? Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.Models.Api20221001Preview.ISbSubscriptionPropertiesInternal.MessageCount { get => this._messageCount; set { {_messageCount = value;} } }

        /// <summary>Internal Acessors for UpdatedAt</summary>
        global::System.DateTime? Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.Models.Api20221001Preview.ISbSubscriptionPropertiesInternal.UpdatedAt { get => this._updatedAt; set { {_updatedAt = value;} } }

        /// <summary>Backing field for <see cref="RequiresSession" /> property.</summary>
        private bool? _requiresSession;

        /// <summary>Value indicating if a subscription supports the concept of sessions.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.Origin(Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.PropertyOrigin.Owned)]
        public bool? RequiresSession { get => this._requiresSession; set => this._requiresSession = value; }

        /// <summary>Backing field for <see cref="Status" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.Support.EntityStatus? _status;

        /// <summary>Enumerates the possible values for the status of a messaging entity.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.Origin(Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.Support.EntityStatus? Status { get => this._status; set => this._status = value; }

        /// <summary>Backing field for <see cref="UpdatedAt" /> property.</summary>
        private global::System.DateTime? _updatedAt;

        /// <summary>The exact time the message was updated.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.Origin(Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.PropertyOrigin.Owned)]
        public global::System.DateTime? UpdatedAt { get => this._updatedAt; }

        /// <summary>Creates an new <see cref="SbSubscriptionProperties" /> instance.</summary>
        public SbSubscriptionProperties()
        {

        }
    }
    /// Description of Subscription Resource.
    public partial interface ISbSubscriptionProperties :
        Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.Runtime.IJsonSerializable
    {
        /// <summary>Last time there was a receive request to this subscription.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Last time there was a receive request to this subscription.",
        SerializedName = @"accessedAt",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? AccessedAt { get;  }
        /// <summary>
        /// ISO 8061 timeSpan idle interval after which the topic is automatically deleted. The minimum duration is 5 minutes.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"ISO 8061 timeSpan idle interval after which the topic is automatically deleted. The minimum duration is 5 minutes.",
        SerializedName = @"autoDeleteOnIdle",
        PossibleTypes = new [] { typeof(global::System.TimeSpan) })]
        global::System.TimeSpan? AutoDeleteOnIdle { get; set; }
        /// <summary>
        /// Indicates the Client ID of the application that created the client-affine subscription.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Indicates the Client ID of the application that created the client-affine subscription.",
        SerializedName = @"clientId",
        PossibleTypes = new [] { typeof(string) })]
        string ClientAffinePropertyClientId { get; set; }
        /// <summary>
        /// For client-affine subscriptions, this value indicates whether the subscription is durable or not.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"For client-affine subscriptions, this value indicates whether the subscription is durable or not.",
        SerializedName = @"isDurable",
        PossibleTypes = new [] { typeof(bool) })]
        bool? ClientAffinePropertyIsDurable { get; set; }
        /// <summary>
        /// For client-affine subscriptions, this value indicates whether the subscription is shared or not.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"For client-affine subscriptions, this value indicates whether the subscription is shared or not.",
        SerializedName = @"isShared",
        PossibleTypes = new [] { typeof(bool) })]
        bool? ClientAffinePropertyIsShared { get; set; }
        /// <summary>Number of active messages in the queue, topic, or subscription.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Number of active messages in the queue, topic, or subscription.",
        SerializedName = @"activeMessageCount",
        PossibleTypes = new [] { typeof(long) })]
        long? CountDetailActiveMessageCount { get;  }
        /// <summary>Number of messages that are dead lettered.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Number of messages that are dead lettered.",
        SerializedName = @"deadLetterMessageCount",
        PossibleTypes = new [] { typeof(long) })]
        long? CountDetailDeadLetterMessageCount { get;  }
        /// <summary>Number of scheduled messages.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Number of scheduled messages.",
        SerializedName = @"scheduledMessageCount",
        PossibleTypes = new [] { typeof(long) })]
        long? CountDetailScheduledMessageCount { get;  }
        /// <summary>Number of messages transferred into dead letters.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Number of messages transferred into dead letters.",
        SerializedName = @"transferDeadLetterMessageCount",
        PossibleTypes = new [] { typeof(long) })]
        long? CountDetailTransferDeadLetterMessageCount { get;  }
        /// <summary>Number of messages transferred to another queue, topic, or subscription.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Number of messages transferred to another queue, topic, or subscription.",
        SerializedName = @"transferMessageCount",
        PossibleTypes = new [] { typeof(long) })]
        long? CountDetailTransferMessageCount { get;  }
        /// <summary>Exact time the message was created.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Exact time the message was created.",
        SerializedName = @"createdAt",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? CreatedAt { get;  }
        /// <summary>
        /// Value that indicates whether a subscription has dead letter support on filter evaluation exceptions.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Value that indicates whether a subscription has dead letter support on filter evaluation exceptions.",
        SerializedName = @"deadLetteringOnFilterEvaluationExceptions",
        PossibleTypes = new [] { typeof(bool) })]
        bool? DeadLetteringOnFilterEvaluationException { get; set; }
        /// <summary>
        /// Value that indicates whether a subscription has dead letter support when a message expires.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Value that indicates whether a subscription has dead letter support when a message expires.",
        SerializedName = @"deadLetteringOnMessageExpiration",
        PossibleTypes = new [] { typeof(bool) })]
        bool? DeadLetteringOnMessageExpiration { get; set; }
        /// <summary>
        /// ISO 8061 Default message timespan to live value. This is the duration after which the message expires, starting from when
        /// the message is sent to Service Bus. This is the default value used when TimeToLive is not set on a message itself.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"ISO 8061 Default message timespan to live value. This is the duration after which the message expires, starting from when the message is sent to Service Bus. This is the default value used when TimeToLive is not set on a message itself.",
        SerializedName = @"defaultMessageTimeToLive",
        PossibleTypes = new [] { typeof(global::System.TimeSpan) })]
        global::System.TimeSpan? DefaultMessageTimeToLive { get; set; }
        /// <summary>
        /// ISO 8601 timeSpan structure that defines the duration of the duplicate detection history. The default value is 10 minutes.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"ISO 8601 timeSpan structure that defines the duration of the duplicate detection history. The default value is 10 minutes.",
        SerializedName = @"duplicateDetectionHistoryTimeWindow",
        PossibleTypes = new [] { typeof(global::System.TimeSpan) })]
        global::System.TimeSpan? DuplicateDetectionHistoryTimeWindow { get; set; }
        /// <summary>Value that indicates whether server-side batched operations are enabled.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Value that indicates whether server-side batched operations are enabled.",
        SerializedName = @"enableBatchedOperations",
        PossibleTypes = new [] { typeof(bool) })]
        bool? EnableBatchedOperations { get; set; }
        /// <summary>Queue/Topic name to forward the Dead Letter message</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Queue/Topic name to forward the Dead Letter message",
        SerializedName = @"forwardDeadLetteredMessagesTo",
        PossibleTypes = new [] { typeof(string) })]
        string ForwardDeadLetteredMessagesTo { get; set; }
        /// <summary>Queue/Topic name to forward the messages</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Queue/Topic name to forward the messages",
        SerializedName = @"forwardTo",
        PossibleTypes = new [] { typeof(string) })]
        string ForwardTo { get; set; }
        /// <summary>Value that indicates whether the subscription has an affinity to the client id.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Value that indicates whether the subscription has an affinity to the client id.",
        SerializedName = @"isClientAffine",
        PossibleTypes = new [] { typeof(bool) })]
        bool? IsClientAffine { get; set; }
        /// <summary>
        /// ISO 8061 lock duration timespan for the subscription. The default value is 1 minute.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"ISO 8061 lock duration timespan for the subscription. The default value is 1 minute.",
        SerializedName = @"lockDuration",
        PossibleTypes = new [] { typeof(global::System.TimeSpan) })]
        global::System.TimeSpan? LockDuration { get; set; }
        /// <summary>Number of maximum deliveries.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Number of maximum deliveries.",
        SerializedName = @"maxDeliveryCount",
        PossibleTypes = new [] { typeof(int) })]
        int? MaxDeliveryCount { get; set; }
        /// <summary>Number of messages.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Number of messages.",
        SerializedName = @"messageCount",
        PossibleTypes = new [] { typeof(long) })]
        long? MessageCount { get;  }
        /// <summary>Value indicating if a subscription supports the concept of sessions.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Value indicating if a subscription supports the concept of sessions.",
        SerializedName = @"requiresSession",
        PossibleTypes = new [] { typeof(bool) })]
        bool? RequiresSession { get; set; }
        /// <summary>Enumerates the possible values for the status of a messaging entity.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Enumerates the possible values for the status of a messaging entity.",
        SerializedName = @"status",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.Support.EntityStatus) })]
        Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.Support.EntityStatus? Status { get; set; }
        /// <summary>The exact time the message was updated.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The exact time the message was updated.",
        SerializedName = @"updatedAt",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? UpdatedAt { get;  }

    }
    /// Description of Subscription Resource.
    internal partial interface ISbSubscriptionPropertiesInternal

    {
        /// <summary>Last time there was a receive request to this subscription.</summary>
        global::System.DateTime? AccessedAt { get; set; }
        /// <summary>
        /// ISO 8061 timeSpan idle interval after which the topic is automatically deleted. The minimum duration is 5 minutes.
        /// </summary>
        global::System.TimeSpan? AutoDeleteOnIdle { get; set; }
        /// <summary>Properties specific to client affine subscriptions.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.Models.Api20221001Preview.ISbClientAffineProperties ClientAffineProperty { get; set; }
        /// <summary>
        /// Indicates the Client ID of the application that created the client-affine subscription.
        /// </summary>
        string ClientAffinePropertyClientId { get; set; }
        /// <summary>
        /// For client-affine subscriptions, this value indicates whether the subscription is durable or not.
        /// </summary>
        bool? ClientAffinePropertyIsDurable { get; set; }
        /// <summary>
        /// For client-affine subscriptions, this value indicates whether the subscription is shared or not.
        /// </summary>
        bool? ClientAffinePropertyIsShared { get; set; }
        /// <summary>Message count details</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.Models.Api10.IMessageCountDetails CountDetail { get; set; }
        /// <summary>Number of active messages in the queue, topic, or subscription.</summary>
        long? CountDetailActiveMessageCount { get; set; }
        /// <summary>Number of messages that are dead lettered.</summary>
        long? CountDetailDeadLetterMessageCount { get; set; }
        /// <summary>Number of scheduled messages.</summary>
        long? CountDetailScheduledMessageCount { get; set; }
        /// <summary>Number of messages transferred into dead letters.</summary>
        long? CountDetailTransferDeadLetterMessageCount { get; set; }
        /// <summary>Number of messages transferred to another queue, topic, or subscription.</summary>
        long? CountDetailTransferMessageCount { get; set; }
        /// <summary>Exact time the message was created.</summary>
        global::System.DateTime? CreatedAt { get; set; }
        /// <summary>
        /// Value that indicates whether a subscription has dead letter support on filter evaluation exceptions.
        /// </summary>
        bool? DeadLetteringOnFilterEvaluationException { get; set; }
        /// <summary>
        /// Value that indicates whether a subscription has dead letter support when a message expires.
        /// </summary>
        bool? DeadLetteringOnMessageExpiration { get; set; }
        /// <summary>
        /// ISO 8061 Default message timespan to live value. This is the duration after which the message expires, starting from when
        /// the message is sent to Service Bus. This is the default value used when TimeToLive is not set on a message itself.
        /// </summary>
        global::System.TimeSpan? DefaultMessageTimeToLive { get; set; }
        /// <summary>
        /// ISO 8601 timeSpan structure that defines the duration of the duplicate detection history. The default value is 10 minutes.
        /// </summary>
        global::System.TimeSpan? DuplicateDetectionHistoryTimeWindow { get; set; }
        /// <summary>Value that indicates whether server-side batched operations are enabled.</summary>
        bool? EnableBatchedOperations { get; set; }
        /// <summary>Queue/Topic name to forward the Dead Letter message</summary>
        string ForwardDeadLetteredMessagesTo { get; set; }
        /// <summary>Queue/Topic name to forward the messages</summary>
        string ForwardTo { get; set; }
        /// <summary>Value that indicates whether the subscription has an affinity to the client id.</summary>
        bool? IsClientAffine { get; set; }
        /// <summary>
        /// ISO 8061 lock duration timespan for the subscription. The default value is 1 minute.
        /// </summary>
        global::System.TimeSpan? LockDuration { get; set; }
        /// <summary>Number of maximum deliveries.</summary>
        int? MaxDeliveryCount { get; set; }
        /// <summary>Number of messages.</summary>
        long? MessageCount { get; set; }
        /// <summary>Value indicating if a subscription supports the concept of sessions.</summary>
        bool? RequiresSession { get; set; }
        /// <summary>Enumerates the possible values for the status of a messaging entity.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.Support.EntityStatus? Status { get; set; }
        /// <summary>The exact time the message was updated.</summary>
        global::System.DateTime? UpdatedAt { get; set; }

    }
}