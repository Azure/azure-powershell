// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.Models.Api20221001Preview
{
    using static Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.Runtime.Extensions;

    /// <summary>The Queue Properties definition.</summary>
    [Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.DoNotFormat]
    public partial class SbQueueProperties :
        Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.Models.Api20221001Preview.ISbQueueProperties,
        Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.Models.Api20221001Preview.ISbQueuePropertiesInternal
    {

        /// <summary>Backing field for <see cref="AccessedAt" /> property.</summary>
        private global::System.DateTime? _accessedAt;

        /// <summary>
        /// Last time a message was sent, or the last time there was a receive request to this queue.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.Origin(Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.PropertyOrigin.Owned)]
        public global::System.DateTime? AccessedAt { get => this._accessedAt; }

        /// <summary>Backing field for <see cref="AutoDeleteOnIdle" /> property.</summary>
        private global::System.TimeSpan? _autoDeleteOnIdle;

        /// <summary>
        /// ISO 8061 timeSpan idle interval after which the queue is automatically deleted. The minimum duration is 5 minutes.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.Origin(Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.PropertyOrigin.Owned)]
        public global::System.TimeSpan? AutoDeleteOnIdle { get => this._autoDeleteOnIdle; set => this._autoDeleteOnIdle = value; }

        /// <summary>Backing field for <see cref="CountDetail" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.Models.Api10.IMessageCountDetails _countDetail;

        /// <summary>Message Count Details.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.Origin(Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.Models.Api10.IMessageCountDetails CountDetail { get => (this._countDetail = this._countDetail ?? new Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.Models.Api10.MessageCountDetails()); }

        /// <summary>Number of active messages in the queue, topic, or subscription.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.Origin(Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.PropertyOrigin.Inlined)]
        public long? CountDetailActiveMessageCount { get => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.Models.Api10.IMessageCountDetailsInternal)CountDetail).ActiveMessageCount; }

        /// <summary>Number of messages that are dead lettered.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.Origin(Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.PropertyOrigin.Inlined)]
        public long? CountDetailDeadLetterMessageCount { get => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.Models.Api10.IMessageCountDetailsInternal)CountDetail).DeadLetterMessageCount; }

        /// <summary>Number of scheduled messages.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.Origin(Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.PropertyOrigin.Inlined)]
        public long? CountDetailScheduledMessageCount { get => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.Models.Api10.IMessageCountDetailsInternal)CountDetail).ScheduledMessageCount; }

        /// <summary>Number of messages transferred into dead letters.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.Origin(Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.PropertyOrigin.Inlined)]
        public long? CountDetailTransferDeadLetterMessageCount { get => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.Models.Api10.IMessageCountDetailsInternal)CountDetail).TransferDeadLetterMessageCount; }

        /// <summary>Number of messages transferred to another queue, topic, or subscription.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.Origin(Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.PropertyOrigin.Inlined)]
        public long? CountDetailTransferMessageCount { get => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.Models.Api10.IMessageCountDetailsInternal)CountDetail).TransferMessageCount; }

        /// <summary>Backing field for <see cref="CreatedAt" /> property.</summary>
        private global::System.DateTime? _createdAt;

        /// <summary>The exact time the message was created.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.Origin(Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.PropertyOrigin.Owned)]
        public global::System.DateTime? CreatedAt { get => this._createdAt; }

        /// <summary>Backing field for <see cref="DeadLetteringOnMessageExpiration" /> property.</summary>
        private bool? _deadLetteringOnMessageExpiration;

        /// <summary>
        /// A value that indicates whether this queue has dead letter support when a message expires.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.Origin(Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.PropertyOrigin.Owned)]
        public bool? DeadLetteringOnMessageExpiration { get => this._deadLetteringOnMessageExpiration; set => this._deadLetteringOnMessageExpiration = value; }

        /// <summary>Backing field for <see cref="DefaultMessageTimeToLive" /> property.</summary>
        private global::System.TimeSpan? _defaultMessageTimeToLive;

        /// <summary>
        /// ISO 8601 default message timespan to live value. This is the duration after which the message expires, starting from when
        /// the message is sent to Service Bus. This is the default value used when TimeToLive is not set on a message itself.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.Origin(Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.PropertyOrigin.Owned)]
        public global::System.TimeSpan? DefaultMessageTimeToLive { get => this._defaultMessageTimeToLive; set => this._defaultMessageTimeToLive = value; }

        /// <summary>Backing field for <see cref="DuplicateDetectionHistoryTimeWindow" /> property.</summary>
        private global::System.TimeSpan? _duplicateDetectionHistoryTimeWindow;

        /// <summary>
        /// ISO 8601 timeSpan structure that defines the duration of the duplicate detection history. The default value is 10 minutes.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.Origin(Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.PropertyOrigin.Owned)]
        public global::System.TimeSpan? DuplicateDetectionHistoryTimeWindow { get => this._duplicateDetectionHistoryTimeWindow; set => this._duplicateDetectionHistoryTimeWindow = value; }

        /// <summary>Backing field for <see cref="EnableBatchedOperations" /> property.</summary>
        private bool? _enableBatchedOperations;

        /// <summary>Value that indicates whether server-side batched operations are enabled.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.Origin(Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.PropertyOrigin.Owned)]
        public bool? EnableBatchedOperations { get => this._enableBatchedOperations; set => this._enableBatchedOperations = value; }

        /// <summary>Backing field for <see cref="EnableExpress" /> property.</summary>
        private bool? _enableExpress;

        /// <summary>
        /// A value that indicates whether Express Entities are enabled. An express queue holds a message in memory temporarily before
        /// writing it to persistent storage.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.Origin(Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.PropertyOrigin.Owned)]
        public bool? EnableExpress { get => this._enableExpress; set => this._enableExpress = value; }

        /// <summary>Backing field for <see cref="EnablePartitioning" /> property.</summary>
        private bool? _enablePartitioning;

        /// <summary>
        /// A value that indicates whether the queue is to be partitioned across multiple message brokers.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.Origin(Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.PropertyOrigin.Owned)]
        public bool? EnablePartitioning { get => this._enablePartitioning; set => this._enablePartitioning = value; }

        /// <summary>Backing field for <see cref="ForwardDeadLetteredMessagesTo" /> property.</summary>
        private string _forwardDeadLetteredMessagesTo;

        /// <summary>Queue/Topic name to forward the Dead Letter message</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.Origin(Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.PropertyOrigin.Owned)]
        public string ForwardDeadLetteredMessagesTo { get => this._forwardDeadLetteredMessagesTo; set => this._forwardDeadLetteredMessagesTo = value; }

        /// <summary>Backing field for <see cref="ForwardTo" /> property.</summary>
        private string _forwardTo;

        /// <summary>Queue/Topic name to forward the messages</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.Origin(Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.PropertyOrigin.Owned)]
        public string ForwardTo { get => this._forwardTo; set => this._forwardTo = value; }

        /// <summary>Backing field for <see cref="LockDuration" /> property.</summary>
        private global::System.TimeSpan? _lockDuration;

        /// <summary>
        /// ISO 8601 timespan duration of a peek-lock; that is, the amount of time that the message is locked for other receivers.
        /// The maximum value for LockDuration is 5 minutes; the default value is 1 minute.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.Origin(Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.PropertyOrigin.Owned)]
        public global::System.TimeSpan? LockDuration { get => this._lockDuration; set => this._lockDuration = value; }

        /// <summary>Backing field for <see cref="MaxDeliveryCount" /> property.</summary>
        private int? _maxDeliveryCount;

        /// <summary>
        /// The maximum delivery count. A message is automatically deadlettered after this number of deliveries. default value is
        /// 10.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.Origin(Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.PropertyOrigin.Owned)]
        public int? MaxDeliveryCount { get => this._maxDeliveryCount; set => this._maxDeliveryCount = value; }

        /// <summary>Backing field for <see cref="MaxMessageSizeInKilobytes" /> property.</summary>
        private long? _maxMessageSizeInKilobytes;

        /// <summary>
        /// Maximum size (in KB) of the message payload that can be accepted by the queue. This property is only used in Premium today
        /// and default is 1024.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.Origin(Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.PropertyOrigin.Owned)]
        public long? MaxMessageSizeInKilobytes { get => this._maxMessageSizeInKilobytes; set => this._maxMessageSizeInKilobytes = value; }

        /// <summary>Backing field for <see cref="MaxSizeInMegabytes" /> property.</summary>
        private int? _maxSizeInMegabytes;

        /// <summary>
        /// The maximum size of the queue in megabytes, which is the size of memory allocated for the queue. Default is 1024.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.Origin(Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.PropertyOrigin.Owned)]
        public int? MaxSizeInMegabytes { get => this._maxSizeInMegabytes; set => this._maxSizeInMegabytes = value; }

        /// <summary>Backing field for <see cref="MessageCount" /> property.</summary>
        private long? _messageCount;

        /// <summary>The number of messages in the queue.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.Origin(Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.PropertyOrigin.Owned)]
        public long? MessageCount { get => this._messageCount; }

        /// <summary>Internal Acessors for AccessedAt</summary>
        global::System.DateTime? Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.Models.Api20221001Preview.ISbQueuePropertiesInternal.AccessedAt { get => this._accessedAt; set { {_accessedAt = value;} } }

        /// <summary>Internal Acessors for CountDetail</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.Models.Api10.IMessageCountDetails Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.Models.Api20221001Preview.ISbQueuePropertiesInternal.CountDetail { get => (this._countDetail = this._countDetail ?? new Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.Models.Api10.MessageCountDetails()); set { {_countDetail = value;} } }

        /// <summary>Internal Acessors for CountDetailActiveMessageCount</summary>
        long? Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.Models.Api20221001Preview.ISbQueuePropertiesInternal.CountDetailActiveMessageCount { get => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.Models.Api10.IMessageCountDetailsInternal)CountDetail).ActiveMessageCount; set => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.Models.Api10.IMessageCountDetailsInternal)CountDetail).ActiveMessageCount = value; }

        /// <summary>Internal Acessors for CountDetailDeadLetterMessageCount</summary>
        long? Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.Models.Api20221001Preview.ISbQueuePropertiesInternal.CountDetailDeadLetterMessageCount { get => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.Models.Api10.IMessageCountDetailsInternal)CountDetail).DeadLetterMessageCount; set => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.Models.Api10.IMessageCountDetailsInternal)CountDetail).DeadLetterMessageCount = value; }

        /// <summary>Internal Acessors for CountDetailScheduledMessageCount</summary>
        long? Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.Models.Api20221001Preview.ISbQueuePropertiesInternal.CountDetailScheduledMessageCount { get => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.Models.Api10.IMessageCountDetailsInternal)CountDetail).ScheduledMessageCount; set => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.Models.Api10.IMessageCountDetailsInternal)CountDetail).ScheduledMessageCount = value; }

        /// <summary>Internal Acessors for CountDetailTransferDeadLetterMessageCount</summary>
        long? Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.Models.Api20221001Preview.ISbQueuePropertiesInternal.CountDetailTransferDeadLetterMessageCount { get => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.Models.Api10.IMessageCountDetailsInternal)CountDetail).TransferDeadLetterMessageCount; set => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.Models.Api10.IMessageCountDetailsInternal)CountDetail).TransferDeadLetterMessageCount = value; }

        /// <summary>Internal Acessors for CountDetailTransferMessageCount</summary>
        long? Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.Models.Api20221001Preview.ISbQueuePropertiesInternal.CountDetailTransferMessageCount { get => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.Models.Api10.IMessageCountDetailsInternal)CountDetail).TransferMessageCount; set => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.Models.Api10.IMessageCountDetailsInternal)CountDetail).TransferMessageCount = value; }

        /// <summary>Internal Acessors for CreatedAt</summary>
        global::System.DateTime? Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.Models.Api20221001Preview.ISbQueuePropertiesInternal.CreatedAt { get => this._createdAt; set { {_createdAt = value;} } }

        /// <summary>Internal Acessors for MessageCount</summary>
        long? Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.Models.Api20221001Preview.ISbQueuePropertiesInternal.MessageCount { get => this._messageCount; set { {_messageCount = value;} } }

        /// <summary>Internal Acessors for SizeInByte</summary>
        long? Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.Models.Api20221001Preview.ISbQueuePropertiesInternal.SizeInByte { get => this._sizeInByte; set { {_sizeInByte = value;} } }

        /// <summary>Internal Acessors for UpdatedAt</summary>
        global::System.DateTime? Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.Models.Api20221001Preview.ISbQueuePropertiesInternal.UpdatedAt { get => this._updatedAt; set { {_updatedAt = value;} } }

        /// <summary>Backing field for <see cref="RequiresDuplicateDetection" /> property.</summary>
        private bool? _requiresDuplicateDetection;

        /// <summary>A value indicating if this queue requires duplicate detection.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.Origin(Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.PropertyOrigin.Owned)]
        public bool? RequiresDuplicateDetection { get => this._requiresDuplicateDetection; set => this._requiresDuplicateDetection = value; }

        /// <summary>Backing field for <see cref="RequiresSession" /> property.</summary>
        private bool? _requiresSession;

        /// <summary>A value that indicates whether the queue supports the concept of sessions.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.Origin(Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.PropertyOrigin.Owned)]
        public bool? RequiresSession { get => this._requiresSession; set => this._requiresSession = value; }

        /// <summary>Backing field for <see cref="SizeInByte" /> property.</summary>
        private long? _sizeInByte;

        /// <summary>The size of the queue, in bytes.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.Origin(Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.PropertyOrigin.Owned)]
        public long? SizeInByte { get => this._sizeInByte; }

        /// <summary>Backing field for <see cref="Status" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.Support.EntityStatus? _status;

        /// <summary>Enumerates the possible values for the status of a messaging entity.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.Origin(Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.Support.EntityStatus? Status { get => this._status; set => this._status = value; }

        /// <summary>Backing field for <see cref="UpdatedAt" /> property.</summary>
        private global::System.DateTime? _updatedAt;

        /// <summary>The exact time the message was updated.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.Origin(Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.PropertyOrigin.Owned)]
        public global::System.DateTime? UpdatedAt { get => this._updatedAt; }

        /// <summary>Creates an new <see cref="SbQueueProperties" /> instance.</summary>
        public SbQueueProperties()
        {

        }
    }
    /// The Queue Properties definition.
    public partial interface ISbQueueProperties :
        Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.Runtime.IJsonSerializable
    {
        /// <summary>
        /// Last time a message was sent, or the last time there was a receive request to this queue.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Last time a message was sent, or the last time there was a receive request to this queue.",
        SerializedName = @"accessedAt",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? AccessedAt { get;  }
        /// <summary>
        /// ISO 8061 timeSpan idle interval after which the queue is automatically deleted. The minimum duration is 5 minutes.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"ISO 8061 timeSpan idle interval after which the queue is automatically deleted. The minimum duration is 5 minutes.",
        SerializedName = @"autoDeleteOnIdle",
        PossibleTypes = new [] { typeof(global::System.TimeSpan) })]
        global::System.TimeSpan? AutoDeleteOnIdle { get; set; }
        /// <summary>Number of active messages in the queue, topic, or subscription.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Number of active messages in the queue, topic, or subscription.",
        SerializedName = @"activeMessageCount",
        PossibleTypes = new [] { typeof(long) })]
        long? CountDetailActiveMessageCount { get;  }
        /// <summary>Number of messages that are dead lettered.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Number of messages that are dead lettered.",
        SerializedName = @"deadLetterMessageCount",
        PossibleTypes = new [] { typeof(long) })]
        long? CountDetailDeadLetterMessageCount { get;  }
        /// <summary>Number of scheduled messages.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Number of scheduled messages.",
        SerializedName = @"scheduledMessageCount",
        PossibleTypes = new [] { typeof(long) })]
        long? CountDetailScheduledMessageCount { get;  }
        /// <summary>Number of messages transferred into dead letters.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Number of messages transferred into dead letters.",
        SerializedName = @"transferDeadLetterMessageCount",
        PossibleTypes = new [] { typeof(long) })]
        long? CountDetailTransferDeadLetterMessageCount { get;  }
        /// <summary>Number of messages transferred to another queue, topic, or subscription.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Number of messages transferred to another queue, topic, or subscription.",
        SerializedName = @"transferMessageCount",
        PossibleTypes = new [] { typeof(long) })]
        long? CountDetailTransferMessageCount { get;  }
        /// <summary>The exact time the message was created.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The exact time the message was created.",
        SerializedName = @"createdAt",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? CreatedAt { get;  }
        /// <summary>
        /// A value that indicates whether this queue has dead letter support when a message expires.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"A value that indicates whether this queue has dead letter support when a message expires.",
        SerializedName = @"deadLetteringOnMessageExpiration",
        PossibleTypes = new [] { typeof(bool) })]
        bool? DeadLetteringOnMessageExpiration { get; set; }
        /// <summary>
        /// ISO 8601 default message timespan to live value. This is the duration after which the message expires, starting from when
        /// the message is sent to Service Bus. This is the default value used when TimeToLive is not set on a message itself.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"ISO 8601 default message timespan to live value. This is the duration after which the message expires, starting from when the message is sent to Service Bus. This is the default value used when TimeToLive is not set on a message itself.",
        SerializedName = @"defaultMessageTimeToLive",
        PossibleTypes = new [] { typeof(global::System.TimeSpan) })]
        global::System.TimeSpan? DefaultMessageTimeToLive { get; set; }
        /// <summary>
        /// ISO 8601 timeSpan structure that defines the duration of the duplicate detection history. The default value is 10 minutes.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"ISO 8601 timeSpan structure that defines the duration of the duplicate detection history. The default value is 10 minutes.",
        SerializedName = @"duplicateDetectionHistoryTimeWindow",
        PossibleTypes = new [] { typeof(global::System.TimeSpan) })]
        global::System.TimeSpan? DuplicateDetectionHistoryTimeWindow { get; set; }
        /// <summary>Value that indicates whether server-side batched operations are enabled.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Value that indicates whether server-side batched operations are enabled.",
        SerializedName = @"enableBatchedOperations",
        PossibleTypes = new [] { typeof(bool) })]
        bool? EnableBatchedOperations { get; set; }
        /// <summary>
        /// A value that indicates whether Express Entities are enabled. An express queue holds a message in memory temporarily before
        /// writing it to persistent storage.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"A value that indicates whether Express Entities are enabled. An express queue holds a message in memory temporarily before writing it to persistent storage.",
        SerializedName = @"enableExpress",
        PossibleTypes = new [] { typeof(bool) })]
        bool? EnableExpress { get; set; }
        /// <summary>
        /// A value that indicates whether the queue is to be partitioned across multiple message brokers.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"A value that indicates whether the queue is to be partitioned across multiple message brokers.",
        SerializedName = @"enablePartitioning",
        PossibleTypes = new [] { typeof(bool) })]
        bool? EnablePartitioning { get; set; }
        /// <summary>Queue/Topic name to forward the Dead Letter message</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Queue/Topic name to forward the Dead Letter message",
        SerializedName = @"forwardDeadLetteredMessagesTo",
        PossibleTypes = new [] { typeof(string) })]
        string ForwardDeadLetteredMessagesTo { get; set; }
        /// <summary>Queue/Topic name to forward the messages</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Queue/Topic name to forward the messages",
        SerializedName = @"forwardTo",
        PossibleTypes = new [] { typeof(string) })]
        string ForwardTo { get; set; }
        /// <summary>
        /// ISO 8601 timespan duration of a peek-lock; that is, the amount of time that the message is locked for other receivers.
        /// The maximum value for LockDuration is 5 minutes; the default value is 1 minute.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"ISO 8601 timespan duration of a peek-lock; that is, the amount of time that the message is locked for other receivers. The maximum value for LockDuration is 5 minutes; the default value is 1 minute.",
        SerializedName = @"lockDuration",
        PossibleTypes = new [] { typeof(global::System.TimeSpan) })]
        global::System.TimeSpan? LockDuration { get; set; }
        /// <summary>
        /// The maximum delivery count. A message is automatically deadlettered after this number of deliveries. default value is
        /// 10.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The maximum delivery count. A message is automatically deadlettered after this number of deliveries. default value is 10.",
        SerializedName = @"maxDeliveryCount",
        PossibleTypes = new [] { typeof(int) })]
        int? MaxDeliveryCount { get; set; }
        /// <summary>
        /// Maximum size (in KB) of the message payload that can be accepted by the queue. This property is only used in Premium today
        /// and default is 1024.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Maximum size (in KB) of the message payload that can be accepted by the queue. This property is only used in Premium today and default is 1024.",
        SerializedName = @"maxMessageSizeInKilobytes",
        PossibleTypes = new [] { typeof(long) })]
        long? MaxMessageSizeInKilobytes { get; set; }
        /// <summary>
        /// The maximum size of the queue in megabytes, which is the size of memory allocated for the queue. Default is 1024.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The maximum size of the queue in megabytes, which is the size of memory allocated for the queue. Default is 1024.",
        SerializedName = @"maxSizeInMegabytes",
        PossibleTypes = new [] { typeof(int) })]
        int? MaxSizeInMegabytes { get; set; }
        /// <summary>The number of messages in the queue.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The number of messages in the queue.",
        SerializedName = @"messageCount",
        PossibleTypes = new [] { typeof(long) })]
        long? MessageCount { get;  }
        /// <summary>A value indicating if this queue requires duplicate detection.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"A value indicating if this queue requires duplicate detection.",
        SerializedName = @"requiresDuplicateDetection",
        PossibleTypes = new [] { typeof(bool) })]
        bool? RequiresDuplicateDetection { get; set; }
        /// <summary>A value that indicates whether the queue supports the concept of sessions.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"A value that indicates whether the queue supports the concept of sessions.",
        SerializedName = @"requiresSession",
        PossibleTypes = new [] { typeof(bool) })]
        bool? RequiresSession { get; set; }
        /// <summary>The size of the queue, in bytes.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The size of the queue, in bytes.",
        SerializedName = @"sizeInBytes",
        PossibleTypes = new [] { typeof(long) })]
        long? SizeInByte { get;  }
        /// <summary>Enumerates the possible values for the status of a messaging entity.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Enumerates the possible values for the status of a messaging entity.",
        SerializedName = @"status",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.Support.EntityStatus) })]
        Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.Support.EntityStatus? Status { get; set; }
        /// <summary>The exact time the message was updated.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The exact time the message was updated.",
        SerializedName = @"updatedAt",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? UpdatedAt { get;  }

    }
    /// The Queue Properties definition.
    internal partial interface ISbQueuePropertiesInternal

    {
        /// <summary>
        /// Last time a message was sent, or the last time there was a receive request to this queue.
        /// </summary>
        global::System.DateTime? AccessedAt { get; set; }
        /// <summary>
        /// ISO 8061 timeSpan idle interval after which the queue is automatically deleted. The minimum duration is 5 minutes.
        /// </summary>
        global::System.TimeSpan? AutoDeleteOnIdle { get; set; }
        /// <summary>Message Count Details.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.Models.Api10.IMessageCountDetails CountDetail { get; set; }
        /// <summary>Number of active messages in the queue, topic, or subscription.</summary>
        long? CountDetailActiveMessageCount { get; set; }
        /// <summary>Number of messages that are dead lettered.</summary>
        long? CountDetailDeadLetterMessageCount { get; set; }
        /// <summary>Number of scheduled messages.</summary>
        long? CountDetailScheduledMessageCount { get; set; }
        /// <summary>Number of messages transferred into dead letters.</summary>
        long? CountDetailTransferDeadLetterMessageCount { get; set; }
        /// <summary>Number of messages transferred to another queue, topic, or subscription.</summary>
        long? CountDetailTransferMessageCount { get; set; }
        /// <summary>The exact time the message was created.</summary>
        global::System.DateTime? CreatedAt { get; set; }
        /// <summary>
        /// A value that indicates whether this queue has dead letter support when a message expires.
        /// </summary>
        bool? DeadLetteringOnMessageExpiration { get; set; }
        /// <summary>
        /// ISO 8601 default message timespan to live value. This is the duration after which the message expires, starting from when
        /// the message is sent to Service Bus. This is the default value used when TimeToLive is not set on a message itself.
        /// </summary>
        global::System.TimeSpan? DefaultMessageTimeToLive { get; set; }
        /// <summary>
        /// ISO 8601 timeSpan structure that defines the duration of the duplicate detection history. The default value is 10 minutes.
        /// </summary>
        global::System.TimeSpan? DuplicateDetectionHistoryTimeWindow { get; set; }
        /// <summary>Value that indicates whether server-side batched operations are enabled.</summary>
        bool? EnableBatchedOperations { get; set; }
        /// <summary>
        /// A value that indicates whether Express Entities are enabled. An express queue holds a message in memory temporarily before
        /// writing it to persistent storage.
        /// </summary>
        bool? EnableExpress { get; set; }
        /// <summary>
        /// A value that indicates whether the queue is to be partitioned across multiple message brokers.
        /// </summary>
        bool? EnablePartitioning { get; set; }
        /// <summary>Queue/Topic name to forward the Dead Letter message</summary>
        string ForwardDeadLetteredMessagesTo { get; set; }
        /// <summary>Queue/Topic name to forward the messages</summary>
        string ForwardTo { get; set; }
        /// <summary>
        /// ISO 8601 timespan duration of a peek-lock; that is, the amount of time that the message is locked for other receivers.
        /// The maximum value for LockDuration is 5 minutes; the default value is 1 minute.
        /// </summary>
        global::System.TimeSpan? LockDuration { get; set; }
        /// <summary>
        /// The maximum delivery count. A message is automatically deadlettered after this number of deliveries. default value is
        /// 10.
        /// </summary>
        int? MaxDeliveryCount { get; set; }
        /// <summary>
        /// Maximum size (in KB) of the message payload that can be accepted by the queue. This property is only used in Premium today
        /// and default is 1024.
        /// </summary>
        long? MaxMessageSizeInKilobytes { get; set; }
        /// <summary>
        /// The maximum size of the queue in megabytes, which is the size of memory allocated for the queue. Default is 1024.
        /// </summary>
        int? MaxSizeInMegabytes { get; set; }
        /// <summary>The number of messages in the queue.</summary>
        long? MessageCount { get; set; }
        /// <summary>A value indicating if this queue requires duplicate detection.</summary>
        bool? RequiresDuplicateDetection { get; set; }
        /// <summary>A value that indicates whether the queue supports the concept of sessions.</summary>
        bool? RequiresSession { get; set; }
        /// <summary>The size of the queue, in bytes.</summary>
        long? SizeInByte { get; set; }
        /// <summary>Enumerates the possible values for the status of a messaging entity.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.Support.EntityStatus? Status { get; set; }
        /// <summary>The exact time the message was updated.</summary>
        global::System.DateTime? UpdatedAt { get; set; }

    }
}