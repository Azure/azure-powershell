// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.Models.Api20221001Preview
{
    using static Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.Runtime.Extensions;

    /// <summary>
    /// Represents a filter which is a composition of an expression and an action that is executed in the pub/sub pipeline.
    /// </summary>
    [Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.DoNotFormat]
    public partial class SqlFilter :
        Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.Models.Api20221001Preview.ISqlFilter,
        Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.Models.Api20221001Preview.ISqlFilterInternal
    {

        /// <summary>Backing field for <see cref="CompatibilityLevel" /> property.</summary>
        private int? _compatibilityLevel;

        /// <summary>
        /// This property is reserved for future use. An integer value showing the compatibility level, currently hard-coded to 20.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.Origin(Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.PropertyOrigin.Owned)]
        public int? CompatibilityLevel { get => this._compatibilityLevel; set => this._compatibilityLevel = value; }

        /// <summary>Backing field for <see cref="RequiresPreprocessing" /> property.</summary>
        private bool? _requiresPreprocessing;

        /// <summary>Value that indicates whether the rule action requires preprocessing.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.Origin(Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.PropertyOrigin.Owned)]
        public bool? RequiresPreprocessing { get => this._requiresPreprocessing; set => this._requiresPreprocessing = value; }

        /// <summary>Backing field for <see cref="SqlExpression" /> property.</summary>
        private string _sqlExpression;

        /// <summary>The SQL expression. e.g. MyProperty='ABC'</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.Origin(Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.PropertyOrigin.Owned)]
        public string SqlExpression { get => this._sqlExpression; set => this._sqlExpression = value; }

        /// <summary>Creates an new <see cref="SqlFilter" /> instance.</summary>
        public SqlFilter()
        {

        }
    }
    /// Represents a filter which is a composition of an expression and an action that is executed in the pub/sub pipeline.
    public partial interface ISqlFilter :
        Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.Runtime.IJsonSerializable
    {
        /// <summary>
        /// This property is reserved for future use. An integer value showing the compatibility level, currently hard-coded to 20.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"This property is reserved for future use. An integer value showing the compatibility level, currently hard-coded to 20.",
        SerializedName = @"compatibilityLevel",
        PossibleTypes = new [] { typeof(int) })]
        int? CompatibilityLevel { get; set; }
        /// <summary>Value that indicates whether the rule action requires preprocessing.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Value that indicates whether the rule action requires preprocessing.",
        SerializedName = @"requiresPreprocessing",
        PossibleTypes = new [] { typeof(bool) })]
        bool? RequiresPreprocessing { get; set; }
        /// <summary>The SQL expression. e.g. MyProperty='ABC'</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The SQL expression. e.g. MyProperty='ABC'",
        SerializedName = @"sqlExpression",
        PossibleTypes = new [] { typeof(string) })]
        string SqlExpression { get; set; }

    }
    /// Represents a filter which is a composition of an expression and an action that is executed in the pub/sub pipeline.
    internal partial interface ISqlFilterInternal

    {
        /// <summary>
        /// This property is reserved for future use. An integer value showing the compatibility level, currently hard-coded to 20.
        /// </summary>
        int? CompatibilityLevel { get; set; }
        /// <summary>Value that indicates whether the rule action requires preprocessing.</summary>
        bool? RequiresPreprocessing { get; set; }
        /// <summary>The SQL expression. e.g. MyProperty='ABC'</summary>
        string SqlExpression { get; set; }

    }
}