// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.Models.Api20221001Preview
{
    using static Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.Runtime.Extensions;

    /// <summary>Namespace/ServiceBus Connection String</summary>
    [Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.DoNotFormat]
    public partial class AccessKeys :
        Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.Models.Api20221001Preview.IAccessKeys,
        Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.Models.Api20221001Preview.IAccessKeysInternal
    {

        /// <summary>Backing field for <see cref="AliasPrimaryConnectionString" /> property.</summary>
        private string _aliasPrimaryConnectionString;

        /// <summary>Primary connection string of the alias if GEO DR is enabled</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.Origin(Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.PropertyOrigin.Owned)]
        public string AliasPrimaryConnectionString { get => this._aliasPrimaryConnectionString; }

        /// <summary>Backing field for <see cref="AliasSecondaryConnectionString" /> property.</summary>
        private string _aliasSecondaryConnectionString;

        /// <summary>Secondary connection string of the alias if GEO DR is enabled</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.Origin(Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.PropertyOrigin.Owned)]
        public string AliasSecondaryConnectionString { get => this._aliasSecondaryConnectionString; }

        /// <summary>Backing field for <see cref="KeyName" /> property.</summary>
        private string _keyName;

        /// <summary>A string that describes the authorization rule.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.Origin(Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.PropertyOrigin.Owned)]
        public string KeyName { get => this._keyName; }

        /// <summary>Internal Acessors for AliasPrimaryConnectionString</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.Models.Api20221001Preview.IAccessKeysInternal.AliasPrimaryConnectionString { get => this._aliasPrimaryConnectionString; set { {_aliasPrimaryConnectionString = value;} } }

        /// <summary>Internal Acessors for AliasSecondaryConnectionString</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.Models.Api20221001Preview.IAccessKeysInternal.AliasSecondaryConnectionString { get => this._aliasSecondaryConnectionString; set { {_aliasSecondaryConnectionString = value;} } }

        /// <summary>Internal Acessors for KeyName</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.Models.Api20221001Preview.IAccessKeysInternal.KeyName { get => this._keyName; set { {_keyName = value;} } }

        /// <summary>Internal Acessors for PrimaryConnectionString</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.Models.Api20221001Preview.IAccessKeysInternal.PrimaryConnectionString { get => this._primaryConnectionString; set { {_primaryConnectionString = value;} } }

        /// <summary>Internal Acessors for PrimaryKey</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.Models.Api20221001Preview.IAccessKeysInternal.PrimaryKey { get => this._primaryKey; set { {_primaryKey = value;} } }

        /// <summary>Internal Acessors for SecondaryConnectionString</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.Models.Api20221001Preview.IAccessKeysInternal.SecondaryConnectionString { get => this._secondaryConnectionString; set { {_secondaryConnectionString = value;} } }

        /// <summary>Internal Acessors for SecondaryKey</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.Models.Api20221001Preview.IAccessKeysInternal.SecondaryKey { get => this._secondaryKey; set { {_secondaryKey = value;} } }

        /// <summary>Backing field for <see cref="PrimaryConnectionString" /> property.</summary>
        private string _primaryConnectionString;

        /// <summary>Primary connection string of the created namespace authorization rule.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.Origin(Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.PropertyOrigin.Owned)]
        public string PrimaryConnectionString { get => this._primaryConnectionString; }

        /// <summary>Backing field for <see cref="PrimaryKey" /> property.</summary>
        private string _primaryKey;

        /// <summary>A base64-encoded 256-bit primary key for signing and validating the SAS token.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.Origin(Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.PropertyOrigin.Owned)]
        public string PrimaryKey { get => this._primaryKey; }

        /// <summary>Backing field for <see cref="SecondaryConnectionString" /> property.</summary>
        private string _secondaryConnectionString;

        /// <summary>Secondary connection string of the created namespace authorization rule.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.Origin(Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.PropertyOrigin.Owned)]
        public string SecondaryConnectionString { get => this._secondaryConnectionString; }

        /// <summary>Backing field for <see cref="SecondaryKey" /> property.</summary>
        private string _secondaryKey;

        /// <summary>A base64-encoded 256-bit primary key for signing and validating the SAS token.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.Origin(Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.PropertyOrigin.Owned)]
        public string SecondaryKey { get => this._secondaryKey; }

        /// <summary>Creates an new <see cref="AccessKeys" /> instance.</summary>
        public AccessKeys()
        {

        }
    }
    /// Namespace/ServiceBus Connection String
    public partial interface IAccessKeys :
        Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.Runtime.IJsonSerializable
    {
        /// <summary>Primary connection string of the alias if GEO DR is enabled</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Primary connection string of the alias if GEO DR is enabled",
        SerializedName = @"aliasPrimaryConnectionString",
        PossibleTypes = new [] { typeof(string) })]
        string AliasPrimaryConnectionString { get;  }
        /// <summary>Secondary connection string of the alias if GEO DR is enabled</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Secondary  connection string of the alias if GEO DR is enabled",
        SerializedName = @"aliasSecondaryConnectionString",
        PossibleTypes = new [] { typeof(string) })]
        string AliasSecondaryConnectionString { get;  }
        /// <summary>A string that describes the authorization rule.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"A string that describes the authorization rule.",
        SerializedName = @"keyName",
        PossibleTypes = new [] { typeof(string) })]
        string KeyName { get;  }
        /// <summary>Primary connection string of the created namespace authorization rule.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Primary connection string of the created namespace authorization rule.",
        SerializedName = @"primaryConnectionString",
        PossibleTypes = new [] { typeof(string) })]
        string PrimaryConnectionString { get;  }
        /// <summary>A base64-encoded 256-bit primary key for signing and validating the SAS token.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"A base64-encoded 256-bit primary key for signing and validating the SAS token.",
        SerializedName = @"primaryKey",
        PossibleTypes = new [] { typeof(string) })]
        string PrimaryKey { get;  }
        /// <summary>Secondary connection string of the created namespace authorization rule.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Secondary connection string of the created namespace authorization rule.",
        SerializedName = @"secondaryConnectionString",
        PossibleTypes = new [] { typeof(string) })]
        string SecondaryConnectionString { get;  }
        /// <summary>A base64-encoded 256-bit primary key for signing and validating the SAS token.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"A base64-encoded 256-bit primary key for signing and validating the SAS token.",
        SerializedName = @"secondaryKey",
        PossibleTypes = new [] { typeof(string) })]
        string SecondaryKey { get;  }

    }
    /// Namespace/ServiceBus Connection String
    internal partial interface IAccessKeysInternal

    {
        /// <summary>Primary connection string of the alias if GEO DR is enabled</summary>
        string AliasPrimaryConnectionString { get; set; }
        /// <summary>Secondary connection string of the alias if GEO DR is enabled</summary>
        string AliasSecondaryConnectionString { get; set; }
        /// <summary>A string that describes the authorization rule.</summary>
        string KeyName { get; set; }
        /// <summary>Primary connection string of the created namespace authorization rule.</summary>
        string PrimaryConnectionString { get; set; }
        /// <summary>A base64-encoded 256-bit primary key for signing and validating the SAS token.</summary>
        string PrimaryKey { get; set; }
        /// <summary>Secondary connection string of the created namespace authorization rule.</summary>
        string SecondaryConnectionString { get; set; }
        /// <summary>A base64-encoded 256-bit primary key for signing and validating the SAS token.</summary>
        string SecondaryKey { get; set; }

    }
}