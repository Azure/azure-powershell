// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualization.Models
{
    using static Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualization.Runtime.Extensions;

    public partial class DesktopVirtualizationIdentity :
        Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualization.Models.IDesktopVirtualizationIdentity,
        Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualization.Models.IDesktopVirtualizationIdentityInternal
    {

        /// <summary>Backing field for <see cref="ApplicationGroupName" /> property.</summary>
        private string _applicationGroupName;

        /// <summary>The name of the application group</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualization.Origin(Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualization.PropertyOrigin.Owned)]
        public string ApplicationGroupName { get => this._applicationGroupName; set => this._applicationGroupName = value; }

        /// <summary>Backing field for <see cref="ApplicationName" /> property.</summary>
        private string _applicationName;

        /// <summary>The name of the application within the specified application group</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualization.Origin(Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualization.PropertyOrigin.Owned)]
        public string ApplicationName { get => this._applicationName; set => this._applicationName = value; }

        /// <summary>Backing field for <see cref="DesktopName" /> property.</summary>
        private string _desktopName;

        /// <summary>The name of the desktop within the specified desktop group</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualization.Origin(Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualization.PropertyOrigin.Owned)]
        public string DesktopName { get => this._desktopName; set => this._desktopName = value; }

        /// <summary>Backing field for <see cref="HostPoolName" /> property.</summary>
        private string _hostPoolName;

        /// <summary>The name of the host pool within the specified resource group</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualization.Origin(Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualization.PropertyOrigin.Owned)]
        public string HostPoolName { get => this._hostPoolName; set => this._hostPoolName = value; }

        /// <summary>Backing field for <see cref="Id" /> property.</summary>
        private string _id;

        /// <summary>Resource identity path</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualization.Origin(Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualization.PropertyOrigin.Owned)]
        public string Id { get => this._id; set => this._id = value; }

        /// <summary>Backing field for <see cref="MsixPackageFullName" /> property.</summary>
        private string _msixPackageFullName;

        /// <summary>
        /// The version specific package full name of the MSIX package within specified hostpool
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualization.Origin(Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualization.PropertyOrigin.Owned)]
        public string MsixPackageFullName { get => this._msixPackageFullName; set => this._msixPackageFullName = value; }

        /// <summary>Backing field for <see cref="ResourceGroupName" /> property.</summary>
        private string _resourceGroupName;

        /// <summary>The name of the resource group. The name is case insensitive.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualization.Origin(Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualization.PropertyOrigin.Owned)]
        public string ResourceGroupName { get => this._resourceGroupName; set => this._resourceGroupName = value; }

        /// <summary>Backing field for <see cref="SessionHostName" /> property.</summary>
        private string _sessionHostName;

        /// <summary>The name of the session host within the specified host pool</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualization.Origin(Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualization.PropertyOrigin.Owned)]
        public string SessionHostName { get => this._sessionHostName; set => this._sessionHostName = value; }

        /// <summary>Backing field for <see cref="SubscriptionId" /> property.</summary>
        private string _subscriptionId;

        /// <summary>The ID of the target subscription.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualization.Origin(Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualization.PropertyOrigin.Owned)]
        public string SubscriptionId { get => this._subscriptionId; set => this._subscriptionId = value; }

        /// <summary>Backing field for <see cref="UserSessionId" /> property.</summary>
        private string _userSessionId;

        /// <summary>The name of the user session within the specified session host</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualization.Origin(Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualization.PropertyOrigin.Owned)]
        public string UserSessionId { get => this._userSessionId; set => this._userSessionId = value; }

        /// <summary>Backing field for <see cref="WorkspaceName" /> property.</summary>
        private string _workspaceName;

        /// <summary>The name of the workspace</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualization.Origin(Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualization.PropertyOrigin.Owned)]
        public string WorkspaceName { get => this._workspaceName; set => this._workspaceName = value; }

        /// <summary>Creates an new <see cref="DesktopVirtualizationIdentity" /> instance.</summary>
        public DesktopVirtualizationIdentity()
        {

        }
    }
    public partial interface IDesktopVirtualizationIdentity :
        Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualization.Runtime.IJsonSerializable
    {
        /// <summary>The name of the application group</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualization.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The name of the application group",
        SerializedName = @"applicationGroupName",
        PossibleTypes = new [] { typeof(string) })]
        string ApplicationGroupName { get; set; }
        /// <summary>The name of the application within the specified application group</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualization.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The name of the application within the specified application group",
        SerializedName = @"applicationName",
        PossibleTypes = new [] { typeof(string) })]
        string ApplicationName { get; set; }
        /// <summary>The name of the desktop within the specified desktop group</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualization.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The name of the desktop within the specified desktop group",
        SerializedName = @"desktopName",
        PossibleTypes = new [] { typeof(string) })]
        string DesktopName { get; set; }
        /// <summary>The name of the host pool within the specified resource group</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualization.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The name of the host pool within the specified resource group",
        SerializedName = @"hostPoolName",
        PossibleTypes = new [] { typeof(string) })]
        string HostPoolName { get; set; }
        /// <summary>Resource identity path</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualization.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Resource identity path",
        SerializedName = @"id",
        PossibleTypes = new [] { typeof(string) })]
        string Id { get; set; }
        /// <summary>
        /// The version specific package full name of the MSIX package within specified hostpool
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualization.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The version specific package full name of the MSIX package within specified hostpool",
        SerializedName = @"msixPackageFullName",
        PossibleTypes = new [] { typeof(string) })]
        string MsixPackageFullName { get; set; }
        /// <summary>The name of the resource group. The name is case insensitive.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualization.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The name of the resource group. The name is case insensitive.",
        SerializedName = @"resourceGroupName",
        PossibleTypes = new [] { typeof(string) })]
        string ResourceGroupName { get; set; }
        /// <summary>The name of the session host within the specified host pool</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualization.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The name of the session host within the specified host pool",
        SerializedName = @"sessionHostName",
        PossibleTypes = new [] { typeof(string) })]
        string SessionHostName { get; set; }
        /// <summary>The ID of the target subscription.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualization.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The ID of the target subscription.",
        SerializedName = @"subscriptionId",
        PossibleTypes = new [] { typeof(string) })]
        string SubscriptionId { get; set; }
        /// <summary>The name of the user session within the specified session host</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualization.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The name of the user session within the specified session host",
        SerializedName = @"userSessionId",
        PossibleTypes = new [] { typeof(string) })]
        string UserSessionId { get; set; }
        /// <summary>The name of the workspace</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualization.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The name of the workspace",
        SerializedName = @"workspaceName",
        PossibleTypes = new [] { typeof(string) })]
        string WorkspaceName { get; set; }

    }
    internal partial interface IDesktopVirtualizationIdentityInternal

    {
        /// <summary>The name of the application group</summary>
        string ApplicationGroupName { get; set; }
        /// <summary>The name of the application within the specified application group</summary>
        string ApplicationName { get; set; }
        /// <summary>The name of the desktop within the specified desktop group</summary>
        string DesktopName { get; set; }
        /// <summary>The name of the host pool within the specified resource group</summary>
        string HostPoolName { get; set; }
        /// <summary>Resource identity path</summary>
        string Id { get; set; }
        /// <summary>
        /// The version specific package full name of the MSIX package within specified hostpool
        /// </summary>
        string MsixPackageFullName { get; set; }
        /// <summary>The name of the resource group. The name is case insensitive.</summary>
        string ResourceGroupName { get; set; }
        /// <summary>The name of the session host within the specified host pool</summary>
        string SessionHostName { get; set; }
        /// <summary>The ID of the target subscription.</summary>
        string SubscriptionId { get; set; }
        /// <summary>The name of the user session within the specified session host</summary>
        string UserSessionId { get; set; }
        /// <summary>The name of the workspace</summary>
        string WorkspaceName { get; set; }

    }
}