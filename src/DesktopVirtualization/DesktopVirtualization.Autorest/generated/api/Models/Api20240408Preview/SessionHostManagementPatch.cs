// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualization.Models.Api20240408Preview
{
    using static Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualization.Runtime.Extensions;

    /// <summary>Represents a SessionHostManagementPatch definition.</summary>
    public partial class SessionHostManagementPatch :
        Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualization.Models.Api20240408Preview.ISessionHostManagementPatch,
        Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualization.Models.Api20240408Preview.ISessionHostManagementPatchInternal
    {

        /// <summary>Internal Acessors for Property</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualization.Models.Api20240408Preview.ISessionHostManagementPatchProperties Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualization.Models.Api20240408Preview.ISessionHostManagementPatchInternal.Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualization.Models.Api20240408Preview.SessionHostManagementPatchProperties()); set { {_property = value;} } }

        /// <summary>Internal Acessors for Update</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualization.Models.Api20240408Preview.IHostPoolUpdateConfigurationPatchProperties Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualization.Models.Api20240408Preview.ISessionHostManagementPatchInternal.Update { get => ((Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualization.Models.Api20240408Preview.ISessionHostManagementPatchPropertiesInternal)Property).Update; set => ((Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualization.Models.Api20240408Preview.ISessionHostManagementPatchPropertiesInternal)Property).Update = value; }

        /// <summary>Backing field for <see cref="Property" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualization.Models.Api20240408Preview.ISessionHostManagementPatchProperties _property;

        /// <summary>Detailed properties for SessionHostManagementPatch</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualization.Origin(Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualization.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualization.Models.Api20240408Preview.ISessionHostManagementPatchProperties Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualization.Models.Api20240408Preview.SessionHostManagementPatchProperties()); set => this._property = value; }

        /// <summary>
        /// Time zone for sessionHostManagement operations as defined in https://docs.microsoft.com/dotnet/api/system.timezoneinfo.findsystemtimezonebyid.
        /// Must be set if useLocalTime is true.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualization.Origin(Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualization.PropertyOrigin.Inlined)]
        public string ScheduledDateTimeZone { get => ((Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualization.Models.Api20240408Preview.ISessionHostManagementPatchPropertiesInternal)Property).ScheduledDateTimeZone; set => ((Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualization.Models.Api20240408Preview.ISessionHostManagementPatchPropertiesInternal)Property).ScheduledDateTimeZone = value ?? null; }

        /// <summary>Whether not to save original disk. False by default.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualization.Origin(Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualization.PropertyOrigin.Inlined)]
        public bool? UpdateDeleteOriginalVM { get => ((Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualization.Models.Api20240408Preview.ISessionHostManagementPatchPropertiesInternal)Property).UpdateDeleteOriginalVM; set => ((Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualization.Models.Api20240408Preview.ISessionHostManagementPatchPropertiesInternal)Property).UpdateDeleteOriginalVM = value ?? default(bool); }

        /// <summary>Grace period before logging off users in minutes.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualization.Origin(Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualization.PropertyOrigin.Inlined)]
        public int? UpdateLogOffDelayMinute { get => ((Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualization.Models.Api20240408Preview.ISessionHostManagementPatchPropertiesInternal)Property).UpdateLogOffDelayMinute; set => ((Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualization.Models.Api20240408Preview.ISessionHostManagementPatchPropertiesInternal)Property).UpdateLogOffDelayMinute = value ?? default(int); }

        /// <summary>Log off message sent to user for logoff.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualization.Origin(Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualization.PropertyOrigin.Inlined)]
        public string UpdateLogOffMessage { get => ((Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualization.Models.Api20240408Preview.ISessionHostManagementPatchPropertiesInternal)Property).UpdateLogOffMessage; set => ((Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualization.Models.Api20240408Preview.ISessionHostManagementPatchPropertiesInternal)Property).UpdateLogOffMessage = value ?? null; }

        /// <summary>The maximum number of virtual machines to be removed during hostpool update.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualization.Origin(Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualization.PropertyOrigin.Inlined)]
        public int? UpdateMaxVmsRemoved { get => ((Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualization.Models.Api20240408Preview.ISessionHostManagementPatchPropertiesInternal)Property).UpdateMaxVmsRemoved; set => ((Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualization.Models.Api20240408Preview.ISessionHostManagementPatchPropertiesInternal)Property).UpdateMaxVmsRemoved = value ?? default(int); }

        /// <summary>Creates an new <see cref="SessionHostManagementPatch" /> instance.</summary>
        public SessionHostManagementPatch()
        {

        }
    }
    /// Represents a SessionHostManagementPatch definition.
    public partial interface ISessionHostManagementPatch :
        Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualization.Runtime.IJsonSerializable
    {
        /// <summary>
        /// Time zone for sessionHostManagement operations as defined in https://docs.microsoft.com/dotnet/api/system.timezoneinfo.findsystemtimezonebyid.
        /// Must be set if useLocalTime is true.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualization.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Time zone for sessionHostManagement operations as defined in https://docs.microsoft.com/dotnet/api/system.timezoneinfo.findsystemtimezonebyid. Must be set if useLocalTime is true.",
        SerializedName = @"scheduledDateTimeZone",
        PossibleTypes = new [] { typeof(string) })]
        string ScheduledDateTimeZone { get; set; }
        /// <summary>Whether not to save original disk. False by default.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualization.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Whether not to save original disk. False by default.",
        SerializedName = @"deleteOriginalVm",
        PossibleTypes = new [] { typeof(bool) })]
        bool? UpdateDeleteOriginalVM { get; set; }
        /// <summary>Grace period before logging off users in minutes.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualization.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Grace period before logging off users in minutes.",
        SerializedName = @"logOffDelayMinutes",
        PossibleTypes = new [] { typeof(int) })]
        int? UpdateLogOffDelayMinute { get; set; }
        /// <summary>Log off message sent to user for logoff.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualization.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Log off message sent to user for logoff.",
        SerializedName = @"logOffMessage",
        PossibleTypes = new [] { typeof(string) })]
        string UpdateLogOffMessage { get; set; }
        /// <summary>The maximum number of virtual machines to be removed during hostpool update.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualization.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The maximum number of virtual machines to be removed during hostpool update.",
        SerializedName = @"maxVmsRemoved",
        PossibleTypes = new [] { typeof(int) })]
        int? UpdateMaxVmsRemoved { get; set; }

    }
    /// Represents a SessionHostManagementPatch definition.
    internal partial interface ISessionHostManagementPatchInternal

    {
        /// <summary>Detailed properties for SessionHostManagementPatch</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualization.Models.Api20240408Preview.ISessionHostManagementPatchProperties Property { get; set; }
        /// <summary>
        /// Time zone for sessionHostManagement operations as defined in https://docs.microsoft.com/dotnet/api/system.timezoneinfo.findsystemtimezonebyid.
        /// Must be set if useLocalTime is true.
        /// </summary>
        string ScheduledDateTimeZone { get; set; }
        /// <summary>Parameters for a hostpool update.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualization.Models.Api20240408Preview.IHostPoolUpdateConfigurationPatchProperties Update { get; set; }
        /// <summary>Whether not to save original disk. False by default.</summary>
        bool? UpdateDeleteOriginalVM { get; set; }
        /// <summary>Grace period before logging off users in minutes.</summary>
        int? UpdateLogOffDelayMinute { get; set; }
        /// <summary>Log off message sent to user for logoff.</summary>
        string UpdateLogOffMessage { get; set; }
        /// <summary>The maximum number of virtual machines to be removed during hostpool update.</summary>
        int? UpdateMaxVmsRemoved { get; set; }

    }
}