// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models
{
    using static Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Runtime.Extensions;

    /// <summary>Properties to update namespace.</summary>
    public partial class NamespaceUpdateParameters :
        Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.INamespaceUpdateParameters,
        Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.INamespaceUpdateParametersInternal
    {

        /// <summary>
        /// Alternative authentication name sources related to client authentication settings for namespace resource.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Origin(Microsoft.Azure.PowerShell.Cmdlets.EventGrid.PropertyOrigin.Inlined)]
        public System.Collections.Generic.List<string> ClientAuthenticationAlternativeAuthenticationNameSource { get => ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.INamespaceUpdateParameterPropertiesInternal)Property).ClientAuthenticationAlternativeAuthenticationNameSource; set => ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.INamespaceUpdateParameterPropertiesInternal)Property).ClientAuthenticationAlternativeAuthenticationNameSource = value ?? null /* arrayOf */; }

        /// <summary>Backing field for <see cref="Identity" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IIdentityInfo _identity;

        /// <summary>Namespace resource identity information.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Origin(Microsoft.Azure.PowerShell.Cmdlets.EventGrid.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IIdentityInfo Identity { get => (this._identity = this._identity ?? new Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IdentityInfo()); set => this._identity = value; }

        /// <summary>The principal ID of resource identity.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Origin(Microsoft.Azure.PowerShell.Cmdlets.EventGrid.PropertyOrigin.Inlined)]
        public string IdentityPrincipalId { get => ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IIdentityInfoInternal)Identity).PrincipalId; set => ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IIdentityInfoInternal)Identity).PrincipalId = value ?? null; }

        /// <summary>The tenant ID of resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Origin(Microsoft.Azure.PowerShell.Cmdlets.EventGrid.PropertyOrigin.Inlined)]
        public string IdentityTenantId { get => ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IIdentityInfoInternal)Identity).TenantId; set => ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IIdentityInfoInternal)Identity).TenantId = value ?? null; }

        /// <summary>
        /// The type of managed identity used. The type 'SystemAssigned, UserAssigned' includes both an implicitly created identity
        /// and a set of user-assigned identities. The type 'None' will remove any identity.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Origin(Microsoft.Azure.PowerShell.Cmdlets.EventGrid.PropertyOrigin.Inlined)]
        public string IdentityType { get => ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IIdentityInfoInternal)Identity).Type; set => ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IIdentityInfoInternal)Identity).Type = value ?? null; }

        /// <summary>
        /// The list of user identities associated with the resource. The user identity dictionary key references will be ARM resource
        /// ids in the form:
        /// '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.
        /// This property is currently not used and reserved for future usage.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Origin(Microsoft.Azure.PowerShell.Cmdlets.EventGrid.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IIdentityInfoUserAssignedIdentities IdentityUserAssignedIdentity { get => ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IIdentityInfoInternal)Identity).UserAssignedIdentity; set => ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IIdentityInfoInternal)Identity).UserAssignedIdentity = value ?? null /* model class */; }

        /// <summary>
        /// This can be used to restrict traffic from specific IPs instead of all IPs. Note: These are considered only if PublicNetworkAccess
        /// is enabled.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Origin(Microsoft.Azure.PowerShell.Cmdlets.EventGrid.PropertyOrigin.Inlined)]
        public System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IInboundIPRule> InboundIPRule { get => ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.INamespaceUpdateParameterPropertiesInternal)Property).InboundIPRule; set => ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.INamespaceUpdateParameterPropertiesInternal)Property).InboundIPRule = value ?? null /* arrayOf */; }

        /// <summary>Internal Acessors for Identity</summary>
        Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IIdentityInfo Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.INamespaceUpdateParametersInternal.Identity { get => (this._identity = this._identity ?? new Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IdentityInfo()); set { {_identity = value;} } }

        /// <summary>Internal Acessors for Property</summary>
        Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.INamespaceUpdateParameterProperties Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.INamespaceUpdateParametersInternal.Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.NamespaceUpdateParameterProperties()); set { {_property = value;} } }

        /// <summary>Internal Acessors for Sku</summary>
        Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.INamespaceSku Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.INamespaceUpdateParametersInternal.Sku { get => (this._sku = this._sku ?? new Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.NamespaceSku()); set { {_sku = value;} } }

        /// <summary>Internal Acessors for TopicSpaceConfigurationClientAuthentication</summary>
        Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IClientAuthenticationSettings Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.INamespaceUpdateParametersInternal.TopicSpaceConfigurationClientAuthentication { get => ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.INamespaceUpdateParameterPropertiesInternal)Property).TopicSpaceConfigurationClientAuthentication; set => ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.INamespaceUpdateParameterPropertiesInternal)Property).TopicSpaceConfigurationClientAuthentication = value; }

        /// <summary>Internal Acessors for TopicSpaceConfigurationRoutingEnrichment</summary>
        Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IRoutingEnrichments Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.INamespaceUpdateParametersInternal.TopicSpaceConfigurationRoutingEnrichment { get => ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.INamespaceUpdateParameterPropertiesInternal)Property).TopicSpaceConfigurationRoutingEnrichment; set => ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.INamespaceUpdateParameterPropertiesInternal)Property).TopicSpaceConfigurationRoutingEnrichment = value; }

        /// <summary>Internal Acessors for TopicSpaceConfigurationRoutingIdentityInfo</summary>
        Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IRoutingIdentityInfo Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.INamespaceUpdateParametersInternal.TopicSpaceConfigurationRoutingIdentityInfo { get => ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.INamespaceUpdateParameterPropertiesInternal)Property).TopicSpaceConfigurationRoutingIdentityInfo; set => ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.INamespaceUpdateParameterPropertiesInternal)Property).TopicSpaceConfigurationRoutingIdentityInfo = value; }

        /// <summary>Internal Acessors for TopicSpacesConfiguration</summary>
        Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IUpdateTopicSpacesConfigurationInfo Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.INamespaceUpdateParametersInternal.TopicSpacesConfiguration { get => ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.INamespaceUpdateParameterPropertiesInternal)Property).TopicSpacesConfiguration; set => ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.INamespaceUpdateParameterPropertiesInternal)Property).TopicSpacesConfiguration = value; }

        /// <summary>Backing field for <see cref="Property" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.INamespaceUpdateParameterProperties _property;

        /// <summary>Properties of the namespace resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Origin(Microsoft.Azure.PowerShell.Cmdlets.EventGrid.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.INamespaceUpdateParameterProperties Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.NamespaceUpdateParameterProperties()); set => this._property = value; }

        /// <summary>
        /// This determines if traffic is allowed over public network. By default it is enabled.
        /// You can further restrict to specific IPs by configuring <seealso cref="P:Microsoft.Azure.Events.ResourceProvider.Common.Contracts.PubSub.NamespaceUpdateParameterProperties.InboundIpRules"
        /// />
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Origin(Microsoft.Azure.PowerShell.Cmdlets.EventGrid.PropertyOrigin.Inlined)]
        public string PublicNetworkAccess { get => ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.INamespaceUpdateParameterPropertiesInternal)Property).PublicNetworkAccess; set => ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.INamespaceUpdateParameterPropertiesInternal)Property).PublicNetworkAccess = value ?? null; }

        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Origin(Microsoft.Azure.PowerShell.Cmdlets.EventGrid.PropertyOrigin.Inlined)]
        public System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IDynamicRoutingEnrichment> RoutingEnrichmentDynamic { get => ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.INamespaceUpdateParameterPropertiesInternal)Property).RoutingEnrichmentDynamic; set => ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.INamespaceUpdateParameterPropertiesInternal)Property).RoutingEnrichmentDynamic = value ?? null /* arrayOf */; }

        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Origin(Microsoft.Azure.PowerShell.Cmdlets.EventGrid.PropertyOrigin.Inlined)]
        public System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IStaticRoutingEnrichment> RoutingEnrichmentStatic { get => ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.INamespaceUpdateParameterPropertiesInternal)Property).RoutingEnrichmentStatic; set => ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.INamespaceUpdateParameterPropertiesInternal)Property).RoutingEnrichmentStatic = value ?? null /* arrayOf */; }

        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Origin(Microsoft.Azure.PowerShell.Cmdlets.EventGrid.PropertyOrigin.Inlined)]
        public string RoutingIdentityInfoType { get => ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.INamespaceUpdateParameterPropertiesInternal)Property).RoutingIdentityInfoType; set => ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.INamespaceUpdateParameterPropertiesInternal)Property).RoutingIdentityInfoType = value ?? null; }

        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Origin(Microsoft.Azure.PowerShell.Cmdlets.EventGrid.PropertyOrigin.Inlined)]
        public string RoutingIdentityInfoUserAssignedIdentity { get => ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.INamespaceUpdateParameterPropertiesInternal)Property).RoutingIdentityInfoUserAssignedIdentity; set => ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.INamespaceUpdateParameterPropertiesInternal)Property).RoutingIdentityInfoUserAssignedIdentity = value ?? null; }

        /// <summary>Backing field for <see cref="Sku" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.INamespaceSku _sku;

        /// <summary>Represents available Sku pricing tiers.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Origin(Microsoft.Azure.PowerShell.Cmdlets.EventGrid.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.INamespaceSku Sku { get => (this._sku = this._sku ?? new Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.NamespaceSku()); set => this._sku = value; }

        /// <summary>
        /// Specifies the number of Throughput Units that defines the capacity for the namespace. The property default value is
        /// 1 which signifies 1 Throughput Unit = 1MB/s ingress and 2MB/s egress per namespace. Min capacity is 1 and
        /// max allowed capacity is 20.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Origin(Microsoft.Azure.PowerShell.Cmdlets.EventGrid.PropertyOrigin.Inlined)]
        public int? SkuCapacity { get => ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.INamespaceSkuInternal)Sku).Capacity; set => ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.INamespaceSkuInternal)Sku).Capacity = value ?? default(int); }

        /// <summary>The name of the SKU.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Origin(Microsoft.Azure.PowerShell.Cmdlets.EventGrid.PropertyOrigin.Inlined)]
        public string SkuName { get => ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.INamespaceSkuInternal)Sku).Name; set => ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.INamespaceSkuInternal)Sku).Name = value ?? null; }

        /// <summary>Backing field for <see cref="Tag" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.INamespaceUpdateParametersTags _tag;

        /// <summary>Tags of the namespace resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Origin(Microsoft.Azure.PowerShell.Cmdlets.EventGrid.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.INamespaceUpdateParametersTags Tag { get => (this._tag = this._tag ?? new Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.NamespaceUpdateParametersTags()); set => this._tag = value; }

        /// <summary>
        /// The maximum number of sessions per authentication name. The property default value is 1.
        /// Min allowed value is 1 and max allowed value is 100.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Origin(Microsoft.Azure.PowerShell.Cmdlets.EventGrid.PropertyOrigin.Inlined)]
        public int? TopicSpaceConfigurationMaximumClientSessionsPerAuthenticationName { get => ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.INamespaceUpdateParameterPropertiesInternal)Property).TopicSpaceConfigurationMaximumClientSessionsPerAuthenticationName; set => ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.INamespaceUpdateParameterPropertiesInternal)Property).TopicSpaceConfigurationMaximumClientSessionsPerAuthenticationName = value ?? default(int); }

        /// <summary>
        /// The maximum session expiry in hours. The property default value is 1 hour.
        /// Min allowed value is 1 hour and max allowed value is 8 hours.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Origin(Microsoft.Azure.PowerShell.Cmdlets.EventGrid.PropertyOrigin.Inlined)]
        public int? TopicSpaceConfigurationMaximumSessionExpiryInHour { get => ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.INamespaceUpdateParameterPropertiesInternal)Property).TopicSpaceConfigurationMaximumSessionExpiryInHour; set => ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.INamespaceUpdateParameterPropertiesInternal)Property).TopicSpaceConfigurationMaximumSessionExpiryInHour = value ?? default(int); }

        /// <summary>
        /// This property is used to specify custom topic to which events will be routed to from topic spaces configuration under
        /// namespace.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Origin(Microsoft.Azure.PowerShell.Cmdlets.EventGrid.PropertyOrigin.Inlined)]
        public string TopicSpaceConfigurationRouteTopicResourceId { get => ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.INamespaceUpdateParameterPropertiesInternal)Property).TopicSpaceConfigurationRouteTopicResourceId; set => ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.INamespaceUpdateParameterPropertiesInternal)Property).TopicSpaceConfigurationRouteTopicResourceId = value ?? null; }

        /// <summary>
        /// Indicate if Topic Spaces Configuration is enabled for the namespace. Default is Disabled.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Origin(Microsoft.Azure.PowerShell.Cmdlets.EventGrid.PropertyOrigin.Inlined)]
        public string TopicSpaceConfigurationState { get => ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.INamespaceUpdateParameterPropertiesInternal)Property).TopicSpaceConfigurationState; set => ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.INamespaceUpdateParameterPropertiesInternal)Property).TopicSpaceConfigurationState = value ?? null; }

        /// <summary>Creates an new <see cref="NamespaceUpdateParameters" /> instance.</summary>
        public NamespaceUpdateParameters()
        {

        }
    }
    /// Properties to update namespace.
    public partial interface INamespaceUpdateParameters :
        Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Runtime.IJsonSerializable
    {
        /// <summary>
        /// Alternative authentication name sources related to client authentication settings for namespace resource.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Alternative authentication name sources related to client authentication settings for namespace resource.",
        SerializedName = @"alternativeAuthenticationNameSources",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.EventGrid.PSArgumentCompleterAttribute("ClientCertificateSubject", "ClientCertificateDns", "ClientCertificateUri", "ClientCertificateIp", "ClientCertificateEmail")]
        System.Collections.Generic.List<string> ClientAuthenticationAlternativeAuthenticationNameSource { get; set; }
        /// <summary>The principal ID of resource identity.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The principal ID of resource identity.",
        SerializedName = @"principalId",
        PossibleTypes = new [] { typeof(string) })]
        string IdentityPrincipalId { get; set; }
        /// <summary>The tenant ID of resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The tenant ID of resource.",
        SerializedName = @"tenantId",
        PossibleTypes = new [] { typeof(string) })]
        string IdentityTenantId { get; set; }
        /// <summary>
        /// The type of managed identity used. The type 'SystemAssigned, UserAssigned' includes both an implicitly created identity
        /// and a set of user-assigned identities. The type 'None' will remove any identity.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The type of managed identity used. The type 'SystemAssigned, UserAssigned' includes both an implicitly created identity and a set of user-assigned identities. The type 'None' will remove any identity.",
        SerializedName = @"type",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.EventGrid.PSArgumentCompleterAttribute("None", "SystemAssigned", "UserAssigned", "SystemAssigned, UserAssigned")]
        string IdentityType { get; set; }
        /// <summary>
        /// The list of user identities associated with the resource. The user identity dictionary key references will be ARM resource
        /// ids in the form:
        /// '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.
        /// This property is currently not used and reserved for future usage.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The list of user identities associated with the resource. The user identity dictionary key references will be ARM resource ids in the form:
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.
        This property is currently not used and reserved for future usage.",
        SerializedName = @"userAssignedIdentities",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IIdentityInfoUserAssignedIdentities) })]
        Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IIdentityInfoUserAssignedIdentities IdentityUserAssignedIdentity { get; set; }
        /// <summary>
        /// This can be used to restrict traffic from specific IPs instead of all IPs. Note: These are considered only if PublicNetworkAccess
        /// is enabled.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"This can be used to restrict traffic from specific IPs instead of all IPs. Note: These are considered only if PublicNetworkAccess is enabled.",
        SerializedName = @"inboundIpRules",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IInboundIPRule) })]
        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IInboundIPRule> InboundIPRule { get; set; }
        /// <summary>
        /// This determines if traffic is allowed over public network. By default it is enabled.
        /// You can further restrict to specific IPs by configuring <seealso cref="P:Microsoft.Azure.Events.ResourceProvider.Common.Contracts.PubSub.NamespaceUpdateParameterProperties.InboundIpRules"
        /// />
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"This determines if traffic is allowed over public network. By default it is enabled.
        You can further restrict to specific IPs by configuring <seealso cref=""P:Microsoft.Azure.Events.ResourceProvider.Common.Contracts.PubSub.NamespaceUpdateParameterProperties.InboundIpRules"" />",
        SerializedName = @"publicNetworkAccess",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.EventGrid.PSArgumentCompleterAttribute("Enabled", "Disabled")]
        string PublicNetworkAccess { get; set; }

        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"",
        SerializedName = @"dynamic",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IDynamicRoutingEnrichment) })]
        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IDynamicRoutingEnrichment> RoutingEnrichmentDynamic { get; set; }

        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"",
        SerializedName = @"static",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IStaticRoutingEnrichment) })]
        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IStaticRoutingEnrichment> RoutingEnrichmentStatic { get; set; }

        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"",
        SerializedName = @"type",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.EventGrid.PSArgumentCompleterAttribute("None", "SystemAssigned", "UserAssigned")]
        string RoutingIdentityInfoType { get; set; }

        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"",
        SerializedName = @"userAssignedIdentity",
        PossibleTypes = new [] { typeof(string) })]
        string RoutingIdentityInfoUserAssignedIdentity { get; set; }
        /// <summary>
        /// Specifies the number of Throughput Units that defines the capacity for the namespace. The property default value is
        /// 1 which signifies 1 Throughput Unit = 1MB/s ingress and 2MB/s egress per namespace. Min capacity is 1 and
        /// max allowed capacity is 20.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Specifies the number of Throughput Units that defines the capacity for the namespace. The property default value is
        1 which signifies 1 Throughput Unit = 1MB/s ingress and 2MB/s egress per namespace. Min capacity is 1 and
        max allowed capacity is 20.",
        SerializedName = @"capacity",
        PossibleTypes = new [] { typeof(int) })]
        int? SkuCapacity { get; set; }
        /// <summary>The name of the SKU.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The name of the SKU.",
        SerializedName = @"name",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.EventGrid.PSArgumentCompleterAttribute("Standard")]
        string SkuName { get; set; }
        /// <summary>Tags of the namespace resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Tags of the namespace resource.",
        SerializedName = @"tags",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.INamespaceUpdateParametersTags) })]
        Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.INamespaceUpdateParametersTags Tag { get; set; }
        /// <summary>
        /// The maximum number of sessions per authentication name. The property default value is 1.
        /// Min allowed value is 1 and max allowed value is 100.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The maximum number of sessions per authentication name. The property default value is 1.
        Min allowed value is 1 and max allowed value is 100.",
        SerializedName = @"maximumClientSessionsPerAuthenticationName",
        PossibleTypes = new [] { typeof(int) })]
        int? TopicSpaceConfigurationMaximumClientSessionsPerAuthenticationName { get; set; }
        /// <summary>
        /// The maximum session expiry in hours. The property default value is 1 hour.
        /// Min allowed value is 1 hour and max allowed value is 8 hours.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The maximum session expiry in hours. The property default value is 1 hour.
        Min allowed value is 1 hour and max allowed value is 8 hours.",
        SerializedName = @"maximumSessionExpiryInHours",
        PossibleTypes = new [] { typeof(int) })]
        int? TopicSpaceConfigurationMaximumSessionExpiryInHour { get; set; }
        /// <summary>
        /// This property is used to specify custom topic to which events will be routed to from topic spaces configuration under
        /// namespace.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"This property is used to specify custom topic to which events will be routed to from topic spaces configuration under namespace.",
        SerializedName = @"routeTopicResourceId",
        PossibleTypes = new [] { typeof(string) })]
        string TopicSpaceConfigurationRouteTopicResourceId { get; set; }
        /// <summary>
        /// Indicate if Topic Spaces Configuration is enabled for the namespace. Default is Disabled.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Indicate if Topic Spaces Configuration is enabled for the namespace. Default is Disabled.",
        SerializedName = @"state",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.EventGrid.PSArgumentCompleterAttribute("Disabled", "Enabled")]
        string TopicSpaceConfigurationState { get; set; }

    }
    /// Properties to update namespace.
    internal partial interface INamespaceUpdateParametersInternal

    {
        /// <summary>
        /// Alternative authentication name sources related to client authentication settings for namespace resource.
        /// </summary>
        [global::Microsoft.Azure.PowerShell.Cmdlets.EventGrid.PSArgumentCompleterAttribute("ClientCertificateSubject", "ClientCertificateDns", "ClientCertificateUri", "ClientCertificateIp", "ClientCertificateEmail")]
        System.Collections.Generic.List<string> ClientAuthenticationAlternativeAuthenticationNameSource { get; set; }
        /// <summary>Namespace resource identity information.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IIdentityInfo Identity { get; set; }
        /// <summary>The principal ID of resource identity.</summary>
        string IdentityPrincipalId { get; set; }
        /// <summary>The tenant ID of resource.</summary>
        string IdentityTenantId { get; set; }
        /// <summary>
        /// The type of managed identity used. The type 'SystemAssigned, UserAssigned' includes both an implicitly created identity
        /// and a set of user-assigned identities. The type 'None' will remove any identity.
        /// </summary>
        [global::Microsoft.Azure.PowerShell.Cmdlets.EventGrid.PSArgumentCompleterAttribute("None", "SystemAssigned", "UserAssigned", "SystemAssigned, UserAssigned")]
        string IdentityType { get; set; }
        /// <summary>
        /// The list of user identities associated with the resource. The user identity dictionary key references will be ARM resource
        /// ids in the form:
        /// '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.
        /// This property is currently not used and reserved for future usage.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IIdentityInfoUserAssignedIdentities IdentityUserAssignedIdentity { get; set; }
        /// <summary>
        /// This can be used to restrict traffic from specific IPs instead of all IPs. Note: These are considered only if PublicNetworkAccess
        /// is enabled.
        /// </summary>
        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IInboundIPRule> InboundIPRule { get; set; }
        /// <summary>Properties of the namespace resource.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.INamespaceUpdateParameterProperties Property { get; set; }
        /// <summary>
        /// This determines if traffic is allowed over public network. By default it is enabled.
        /// You can further restrict to specific IPs by configuring <seealso cref="P:Microsoft.Azure.Events.ResourceProvider.Common.Contracts.PubSub.NamespaceUpdateParameterProperties.InboundIpRules"
        /// />
        /// </summary>
        [global::Microsoft.Azure.PowerShell.Cmdlets.EventGrid.PSArgumentCompleterAttribute("Enabled", "Disabled")]
        string PublicNetworkAccess { get; set; }

        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IDynamicRoutingEnrichment> RoutingEnrichmentDynamic { get; set; }

        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IStaticRoutingEnrichment> RoutingEnrichmentStatic { get; set; }

        [global::Microsoft.Azure.PowerShell.Cmdlets.EventGrid.PSArgumentCompleterAttribute("None", "SystemAssigned", "UserAssigned")]
        string RoutingIdentityInfoType { get; set; }

        string RoutingIdentityInfoUserAssignedIdentity { get; set; }
        /// <summary>Represents available Sku pricing tiers.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.INamespaceSku Sku { get; set; }
        /// <summary>
        /// Specifies the number of Throughput Units that defines the capacity for the namespace. The property default value is
        /// 1 which signifies 1 Throughput Unit = 1MB/s ingress and 2MB/s egress per namespace. Min capacity is 1 and
        /// max allowed capacity is 20.
        /// </summary>
        int? SkuCapacity { get; set; }
        /// <summary>The name of the SKU.</summary>
        [global::Microsoft.Azure.PowerShell.Cmdlets.EventGrid.PSArgumentCompleterAttribute("Standard")]
        string SkuName { get; set; }
        /// <summary>Tags of the namespace resource.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.INamespaceUpdateParametersTags Tag { get; set; }
        /// <summary>Client authentication settings for topic spaces configuration.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IClientAuthenticationSettings TopicSpaceConfigurationClientAuthentication { get; set; }
        /// <summary>
        /// The maximum number of sessions per authentication name. The property default value is 1.
        /// Min allowed value is 1 and max allowed value is 100.
        /// </summary>
        int? TopicSpaceConfigurationMaximumClientSessionsPerAuthenticationName { get; set; }
        /// <summary>
        /// The maximum session expiry in hours. The property default value is 1 hour.
        /// Min allowed value is 1 hour and max allowed value is 8 hours.
        /// </summary>
        int? TopicSpaceConfigurationMaximumSessionExpiryInHour { get; set; }
        /// <summary>
        /// This property is used to specify custom topic to which events will be routed to from topic spaces configuration under
        /// namespace.
        /// </summary>
        string TopicSpaceConfigurationRouteTopicResourceId { get; set; }
        /// <summary>Routing enrichments for topic spaces configuration.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IRoutingEnrichments TopicSpaceConfigurationRoutingEnrichment { get; set; }
        /// <summary>Routing identity info for topic spaces configuration.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IRoutingIdentityInfo TopicSpaceConfigurationRoutingIdentityInfo { get; set; }
        /// <summary>
        /// Indicate if Topic Spaces Configuration is enabled for the namespace. Default is Disabled.
        /// </summary>
        [global::Microsoft.Azure.PowerShell.Cmdlets.EventGrid.PSArgumentCompleterAttribute("Disabled", "Enabled")]
        string TopicSpaceConfigurationState { get; set; }
        /// <summary>Topic spaces configuration properties that can be updated.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IUpdateTopicSpacesConfigurationInfo TopicSpacesConfiguration { get; set; }

    }
}