// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models
{
    using Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Runtime.PowerShell;

    /// <summary>Namespace resource.</summary>
    [System.ComponentModel.TypeConverter(typeof(NamespaceTypeConverter))]
    public partial class Namespace
    {

        /// <summary>
        /// <c>AfterDeserializeDictionary</c> will be called after the deserialization has finished, allowing customization of the
        /// object before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>

        partial void AfterDeserializeDictionary(global::System.Collections.IDictionary content);

        /// <summary>
        /// <c>AfterDeserializePSObject</c> will be called after the deserialization has finished, allowing customization of the object
        /// before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>

        partial void AfterDeserializePSObject(global::System.Management.Automation.PSObject content);

        /// <summary>
        /// <c>BeforeDeserializeDictionary</c> will be called before the deserialization has commenced, allowing complete customization
        /// of the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <paramref name="returnNow" /> output
        /// parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeDeserializeDictionary(global::System.Collections.IDictionary content, ref bool returnNow);

        /// <summary>
        /// <c>BeforeDeserializePSObject</c> will be called before the deserialization has commenced, allowing complete customization
        /// of the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <paramref name="returnNow" /> output
        /// parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeDeserializePSObject(global::System.Management.Automation.PSObject content, ref bool returnNow);

        /// <summary>
        /// <c>OverrideToString</c> will be called if it is implemented. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="stringResult">/// instance serialized to a string, normally it is a Json</param>
        /// <param name="returnNow">/// set returnNow to true if you provide a customized OverrideToString function</param>

        partial void OverrideToString(ref string stringResult, ref bool returnNow);

        /// <summary>
        /// Deserializes a <see cref="global::System.Collections.IDictionary" /> into an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Namespace"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        /// <returns>
        /// an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.INamespace" />.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.INamespace DeserializeFromDictionary(global::System.Collections.IDictionary content)
        {
            return new Namespace(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Management.Automation.PSObject" /> into an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Namespace"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        /// <returns>
        /// an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.INamespace" />.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.INamespace DeserializeFromPSObject(global::System.Management.Automation.PSObject content)
        {
            return new Namespace(content);
        }

        /// <summary>
        /// Creates a new instance of <see cref="Namespace" />, deserializing the content from a json string.
        /// </summary>
        /// <param name="jsonText">a string containing a JSON serialized instance of this model.</param>
        /// <returns>an instance of the <see cref="Namespace" /> model class.</returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.INamespace FromJsonString(string jsonText) => FromJson(Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Runtime.Json.JsonNode.Parse(jsonText));

        /// <summary>
        /// Deserializes a <see cref="global::System.Collections.IDictionary" /> into a new instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Namespace"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        internal Namespace(global::System.Collections.IDictionary content)
        {
            bool returnNow = false;
            BeforeDeserializeDictionary(content, ref returnNow);
            if (returnNow)
            {
                return;
            }
            // actually deserialize
            if (content.Contains("Property"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.INamespaceInternal)this).Property = (Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.INamespaceProperties) content.GetValueForProperty("Property",((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.INamespaceInternal)this).Property, Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.NamespacePropertiesTypeConverter.ConvertFrom);
            }
            if (content.Contains("Sku"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.INamespaceInternal)this).Sku = (Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.INamespaceSku) content.GetValueForProperty("Sku",((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.INamespaceInternal)this).Sku, Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.NamespaceSkuTypeConverter.ConvertFrom);
            }
            if (content.Contains("Identity"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.INamespaceInternal)this).Identity = (Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IIdentityInfo) content.GetValueForProperty("Identity",((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.INamespaceInternal)this).Identity, Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IdentityInfoTypeConverter.ConvertFrom);
            }
            if (content.Contains("SystemData"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.INamespaceInternal)this).SystemData = (Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.ISystemData) content.GetValueForProperty("SystemData",((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.INamespaceInternal)this).SystemData, Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.SystemDataTypeConverter.ConvertFrom);
            }
            if (content.Contains("Id"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IResourceInternal)this).Id = (string) content.GetValueForProperty("Id",((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IResourceInternal)this).Id, global::System.Convert.ToString);
            }
            if (content.Contains("Name"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IResourceInternal)this).Name = (string) content.GetValueForProperty("Name",((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IResourceInternal)this).Name, global::System.Convert.ToString);
            }
            if (content.Contains("Type"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IResourceInternal)this).Type = (string) content.GetValueForProperty("Type",((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IResourceInternal)this).Type, global::System.Convert.ToString);
            }
            if (content.Contains("Location"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.ITrackedResourceInternal)this).Location = (string) content.GetValueForProperty("Location",((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.ITrackedResourceInternal)this).Location, global::System.Convert.ToString);
            }
            if (content.Contains("Tag"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.ITrackedResourceInternal)this).Tag = (Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.ITrackedResourceTags) content.GetValueForProperty("Tag",((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.ITrackedResourceInternal)this).Tag, Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.TrackedResourceTagsTypeConverter.ConvertFrom);
            }
            if (content.Contains("TopicsConfiguration"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.INamespaceInternal)this).TopicsConfiguration = (Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.ITopicsConfiguration) content.GetValueForProperty("TopicsConfiguration",((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.INamespaceInternal)this).TopicsConfiguration, Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.TopicsConfigurationTypeConverter.ConvertFrom);
            }
            if (content.Contains("SkuName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.INamespaceInternal)this).SkuName = (string) content.GetValueForProperty("SkuName",((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.INamespaceInternal)this).SkuName, global::System.Convert.ToString);
            }
            if (content.Contains("IdentityType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.INamespaceInternal)this).IdentityType = (string) content.GetValueForProperty("IdentityType",((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.INamespaceInternal)this).IdentityType, global::System.Convert.ToString);
            }
            if (content.Contains("SystemDataCreatedBy"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.INamespaceInternal)this).SystemDataCreatedBy = (string) content.GetValueForProperty("SystemDataCreatedBy",((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.INamespaceInternal)this).SystemDataCreatedBy, global::System.Convert.ToString);
            }
            if (content.Contains("SystemDataCreatedAt"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.INamespaceInternal)this).SystemDataCreatedAt = (global::System.DateTime?) content.GetValueForProperty("SystemDataCreatedAt",((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.INamespaceInternal)this).SystemDataCreatedAt, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            if (content.Contains("TopicSpacesConfiguration"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.INamespaceInternal)this).TopicSpacesConfiguration = (Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.ITopicSpacesConfiguration) content.GetValueForProperty("TopicSpacesConfiguration",((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.INamespaceInternal)this).TopicSpacesConfiguration, Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.TopicSpacesConfigurationTypeConverter.ConvertFrom);
            }
            if (content.Contains("PrivateEndpointConnection"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.INamespaceInternal)this).PrivateEndpointConnection = (System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IPrivateEndpointConnection>) content.GetValueForProperty("PrivateEndpointConnection",((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.INamespaceInternal)this).PrivateEndpointConnection, __y => TypeConverterExtensions.SelectToList<Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IPrivateEndpointConnection>(__y, Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.PrivateEndpointConnectionTypeConverter.ConvertFrom));
            }
            if (content.Contains("ProvisioningState"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.INamespaceInternal)this).ProvisioningState = (string) content.GetValueForProperty("ProvisioningState",((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.INamespaceInternal)this).ProvisioningState, global::System.Convert.ToString);
            }
            if (content.Contains("IsZoneRedundant"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.INamespaceInternal)this).IsZoneRedundant = (bool?) content.GetValueForProperty("IsZoneRedundant",((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.INamespaceInternal)this).IsZoneRedundant, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("PublicNetworkAccess"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.INamespaceInternal)this).PublicNetworkAccess = (string) content.GetValueForProperty("PublicNetworkAccess",((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.INamespaceInternal)this).PublicNetworkAccess, global::System.Convert.ToString);
            }
            if (content.Contains("InboundIPRule"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.INamespaceInternal)this).InboundIPRule = (System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IInboundIPRule>) content.GetValueForProperty("InboundIPRule",((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.INamespaceInternal)this).InboundIPRule, __y => TypeConverterExtensions.SelectToList<Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IInboundIPRule>(__y, Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.InboundIPRuleTypeConverter.ConvertFrom));
            }
            if (content.Contains("MinimumTlsVersionAllowed"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.INamespaceInternal)this).MinimumTlsVersionAllowed = (string) content.GetValueForProperty("MinimumTlsVersionAllowed",((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.INamespaceInternal)this).MinimumTlsVersionAllowed, global::System.Convert.ToString);
            }
            if (content.Contains("TopicConfigurationHostname"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.INamespaceInternal)this).TopicConfigurationHostname = (string) content.GetValueForProperty("TopicConfigurationHostname",((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.INamespaceInternal)this).TopicConfigurationHostname, global::System.Convert.ToString);
            }
            if (content.Contains("TopicSpaceConfigurationRoutingEnrichment"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.INamespaceInternal)this).TopicSpaceConfigurationRoutingEnrichment = (Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IRoutingEnrichments) content.GetValueForProperty("TopicSpaceConfigurationRoutingEnrichment",((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.INamespaceInternal)this).TopicSpaceConfigurationRoutingEnrichment, Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.RoutingEnrichmentsTypeConverter.ConvertFrom);
            }
            if (content.Contains("TopicSpaceConfigurationState"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.INamespaceInternal)this).TopicSpaceConfigurationState = (string) content.GetValueForProperty("TopicSpaceConfigurationState",((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.INamespaceInternal)this).TopicSpaceConfigurationState, global::System.Convert.ToString);
            }
            if (content.Contains("TopicSpaceConfigurationHostname"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.INamespaceInternal)this).TopicSpaceConfigurationHostname = (string) content.GetValueForProperty("TopicSpaceConfigurationHostname",((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.INamespaceInternal)this).TopicSpaceConfigurationHostname, global::System.Convert.ToString);
            }
            if (content.Contains("SkuCapacity"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.INamespaceInternal)this).SkuCapacity = (int?) content.GetValueForProperty("SkuCapacity",((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.INamespaceInternal)this).SkuCapacity, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("IdentityPrincipalId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.INamespaceInternal)this).IdentityPrincipalId = (string) content.GetValueForProperty("IdentityPrincipalId",((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.INamespaceInternal)this).IdentityPrincipalId, global::System.Convert.ToString);
            }
            if (content.Contains("IdentityTenantId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.INamespaceInternal)this).IdentityTenantId = (string) content.GetValueForProperty("IdentityTenantId",((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.INamespaceInternal)this).IdentityTenantId, global::System.Convert.ToString);
            }
            if (content.Contains("IdentityUserAssignedIdentity"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.INamespaceInternal)this).IdentityUserAssignedIdentity = (Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IIdentityInfoUserAssignedIdentities) content.GetValueForProperty("IdentityUserAssignedIdentity",((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.INamespaceInternal)this).IdentityUserAssignedIdentity, Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IdentityInfoUserAssignedIdentitiesTypeConverter.ConvertFrom);
            }
            if (content.Contains("SystemDataCreatedByType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.INamespaceInternal)this).SystemDataCreatedByType = (string) content.GetValueForProperty("SystemDataCreatedByType",((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.INamespaceInternal)this).SystemDataCreatedByType, global::System.Convert.ToString);
            }
            if (content.Contains("SystemDataLastModifiedBy"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.INamespaceInternal)this).SystemDataLastModifiedBy = (string) content.GetValueForProperty("SystemDataLastModifiedBy",((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.INamespaceInternal)this).SystemDataLastModifiedBy, global::System.Convert.ToString);
            }
            if (content.Contains("SystemDataLastModifiedByType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.INamespaceInternal)this).SystemDataLastModifiedByType = (string) content.GetValueForProperty("SystemDataLastModifiedByType",((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.INamespaceInternal)this).SystemDataLastModifiedByType, global::System.Convert.ToString);
            }
            if (content.Contains("SystemDataLastModifiedAt"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.INamespaceInternal)this).SystemDataLastModifiedAt = (global::System.DateTime?) content.GetValueForProperty("SystemDataLastModifiedAt",((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.INamespaceInternal)this).SystemDataLastModifiedAt, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            if (content.Contains("TopicSpaceConfigurationClientAuthentication"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.INamespaceInternal)this).TopicSpaceConfigurationClientAuthentication = (Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IClientAuthenticationSettings) content.GetValueForProperty("TopicSpaceConfigurationClientAuthentication",((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.INamespaceInternal)this).TopicSpaceConfigurationClientAuthentication, Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.ClientAuthenticationSettingsTypeConverter.ConvertFrom);
            }
            if (content.Contains("TopicSpaceConfigurationRoutingIdentityInfo"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.INamespaceInternal)this).TopicSpaceConfigurationRoutingIdentityInfo = (Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IRoutingIdentityInfo) content.GetValueForProperty("TopicSpaceConfigurationRoutingIdentityInfo",((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.INamespaceInternal)this).TopicSpaceConfigurationRoutingIdentityInfo, Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.RoutingIdentityInfoTypeConverter.ConvertFrom);
            }
            if (content.Contains("TopicSpaceConfigurationRouteTopicResourceId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.INamespaceInternal)this).TopicSpaceConfigurationRouteTopicResourceId = (string) content.GetValueForProperty("TopicSpaceConfigurationRouteTopicResourceId",((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.INamespaceInternal)this).TopicSpaceConfigurationRouteTopicResourceId, global::System.Convert.ToString);
            }
            if (content.Contains("TopicSpaceConfigurationMaximumSessionExpiryInHour"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.INamespaceInternal)this).TopicSpaceConfigurationMaximumSessionExpiryInHour = (int?) content.GetValueForProperty("TopicSpaceConfigurationMaximumSessionExpiryInHour",((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.INamespaceInternal)this).TopicSpaceConfigurationMaximumSessionExpiryInHour, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("TopicSpaceConfigurationMaximumClientSessionsPerAuthenticationName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.INamespaceInternal)this).TopicSpaceConfigurationMaximumClientSessionsPerAuthenticationName = (int?) content.GetValueForProperty("TopicSpaceConfigurationMaximumClientSessionsPerAuthenticationName",((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.INamespaceInternal)this).TopicSpaceConfigurationMaximumClientSessionsPerAuthenticationName, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("RoutingEnrichmentStatic"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.INamespaceInternal)this).RoutingEnrichmentStatic = (System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IStaticRoutingEnrichment>) content.GetValueForProperty("RoutingEnrichmentStatic",((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.INamespaceInternal)this).RoutingEnrichmentStatic, __y => TypeConverterExtensions.SelectToList<Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IStaticRoutingEnrichment>(__y, Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.StaticRoutingEnrichmentTypeConverter.ConvertFrom));
            }
            if (content.Contains("RoutingEnrichmentDynamic"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.INamespaceInternal)this).RoutingEnrichmentDynamic = (System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IDynamicRoutingEnrichment>) content.GetValueForProperty("RoutingEnrichmentDynamic",((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.INamespaceInternal)this).RoutingEnrichmentDynamic, __y => TypeConverterExtensions.SelectToList<Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IDynamicRoutingEnrichment>(__y, Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.DynamicRoutingEnrichmentTypeConverter.ConvertFrom));
            }
            if (content.Contains("ClientAuthenticationAlternativeAuthenticationNameSource"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.INamespaceInternal)this).ClientAuthenticationAlternativeAuthenticationNameSource = (System.Collections.Generic.List<string>) content.GetValueForProperty("ClientAuthenticationAlternativeAuthenticationNameSource",((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.INamespaceInternal)this).ClientAuthenticationAlternativeAuthenticationNameSource, __y => TypeConverterExtensions.SelectToList<string>(__y, global::System.Convert.ToString));
            }
            if (content.Contains("RoutingIdentityInfoType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.INamespaceInternal)this).RoutingIdentityInfoType = (string) content.GetValueForProperty("RoutingIdentityInfoType",((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.INamespaceInternal)this).RoutingIdentityInfoType, global::System.Convert.ToString);
            }
            if (content.Contains("RoutingIdentityInfoUserAssignedIdentity"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.INamespaceInternal)this).RoutingIdentityInfoUserAssignedIdentity = (string) content.GetValueForProperty("RoutingIdentityInfoUserAssignedIdentity",((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.INamespaceInternal)this).RoutingIdentityInfoUserAssignedIdentity, global::System.Convert.ToString);
            }
            AfterDeserializeDictionary(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Management.Automation.PSObject" /> into a new instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Namespace"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        internal Namespace(global::System.Management.Automation.PSObject content)
        {
            bool returnNow = false;
            BeforeDeserializePSObject(content, ref returnNow);
            if (returnNow)
            {
                return;
            }
            // actually deserialize
            if (content.Contains("Property"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.INamespaceInternal)this).Property = (Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.INamespaceProperties) content.GetValueForProperty("Property",((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.INamespaceInternal)this).Property, Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.NamespacePropertiesTypeConverter.ConvertFrom);
            }
            if (content.Contains("Sku"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.INamespaceInternal)this).Sku = (Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.INamespaceSku) content.GetValueForProperty("Sku",((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.INamespaceInternal)this).Sku, Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.NamespaceSkuTypeConverter.ConvertFrom);
            }
            if (content.Contains("Identity"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.INamespaceInternal)this).Identity = (Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IIdentityInfo) content.GetValueForProperty("Identity",((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.INamespaceInternal)this).Identity, Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IdentityInfoTypeConverter.ConvertFrom);
            }
            if (content.Contains("SystemData"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.INamespaceInternal)this).SystemData = (Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.ISystemData) content.GetValueForProperty("SystemData",((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.INamespaceInternal)this).SystemData, Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.SystemDataTypeConverter.ConvertFrom);
            }
            if (content.Contains("Id"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IResourceInternal)this).Id = (string) content.GetValueForProperty("Id",((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IResourceInternal)this).Id, global::System.Convert.ToString);
            }
            if (content.Contains("Name"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IResourceInternal)this).Name = (string) content.GetValueForProperty("Name",((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IResourceInternal)this).Name, global::System.Convert.ToString);
            }
            if (content.Contains("Type"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IResourceInternal)this).Type = (string) content.GetValueForProperty("Type",((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IResourceInternal)this).Type, global::System.Convert.ToString);
            }
            if (content.Contains("Location"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.ITrackedResourceInternal)this).Location = (string) content.GetValueForProperty("Location",((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.ITrackedResourceInternal)this).Location, global::System.Convert.ToString);
            }
            if (content.Contains("Tag"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.ITrackedResourceInternal)this).Tag = (Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.ITrackedResourceTags) content.GetValueForProperty("Tag",((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.ITrackedResourceInternal)this).Tag, Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.TrackedResourceTagsTypeConverter.ConvertFrom);
            }
            if (content.Contains("TopicsConfiguration"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.INamespaceInternal)this).TopicsConfiguration = (Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.ITopicsConfiguration) content.GetValueForProperty("TopicsConfiguration",((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.INamespaceInternal)this).TopicsConfiguration, Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.TopicsConfigurationTypeConverter.ConvertFrom);
            }
            if (content.Contains("SkuName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.INamespaceInternal)this).SkuName = (string) content.GetValueForProperty("SkuName",((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.INamespaceInternal)this).SkuName, global::System.Convert.ToString);
            }
            if (content.Contains("IdentityType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.INamespaceInternal)this).IdentityType = (string) content.GetValueForProperty("IdentityType",((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.INamespaceInternal)this).IdentityType, global::System.Convert.ToString);
            }
            if (content.Contains("SystemDataCreatedBy"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.INamespaceInternal)this).SystemDataCreatedBy = (string) content.GetValueForProperty("SystemDataCreatedBy",((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.INamespaceInternal)this).SystemDataCreatedBy, global::System.Convert.ToString);
            }
            if (content.Contains("SystemDataCreatedAt"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.INamespaceInternal)this).SystemDataCreatedAt = (global::System.DateTime?) content.GetValueForProperty("SystemDataCreatedAt",((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.INamespaceInternal)this).SystemDataCreatedAt, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            if (content.Contains("TopicSpacesConfiguration"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.INamespaceInternal)this).TopicSpacesConfiguration = (Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.ITopicSpacesConfiguration) content.GetValueForProperty("TopicSpacesConfiguration",((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.INamespaceInternal)this).TopicSpacesConfiguration, Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.TopicSpacesConfigurationTypeConverter.ConvertFrom);
            }
            if (content.Contains("PrivateEndpointConnection"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.INamespaceInternal)this).PrivateEndpointConnection = (System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IPrivateEndpointConnection>) content.GetValueForProperty("PrivateEndpointConnection",((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.INamespaceInternal)this).PrivateEndpointConnection, __y => TypeConverterExtensions.SelectToList<Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IPrivateEndpointConnection>(__y, Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.PrivateEndpointConnectionTypeConverter.ConvertFrom));
            }
            if (content.Contains("ProvisioningState"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.INamespaceInternal)this).ProvisioningState = (string) content.GetValueForProperty("ProvisioningState",((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.INamespaceInternal)this).ProvisioningState, global::System.Convert.ToString);
            }
            if (content.Contains("IsZoneRedundant"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.INamespaceInternal)this).IsZoneRedundant = (bool?) content.GetValueForProperty("IsZoneRedundant",((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.INamespaceInternal)this).IsZoneRedundant, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("PublicNetworkAccess"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.INamespaceInternal)this).PublicNetworkAccess = (string) content.GetValueForProperty("PublicNetworkAccess",((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.INamespaceInternal)this).PublicNetworkAccess, global::System.Convert.ToString);
            }
            if (content.Contains("InboundIPRule"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.INamespaceInternal)this).InboundIPRule = (System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IInboundIPRule>) content.GetValueForProperty("InboundIPRule",((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.INamespaceInternal)this).InboundIPRule, __y => TypeConverterExtensions.SelectToList<Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IInboundIPRule>(__y, Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.InboundIPRuleTypeConverter.ConvertFrom));
            }
            if (content.Contains("MinimumTlsVersionAllowed"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.INamespaceInternal)this).MinimumTlsVersionAllowed = (string) content.GetValueForProperty("MinimumTlsVersionAllowed",((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.INamespaceInternal)this).MinimumTlsVersionAllowed, global::System.Convert.ToString);
            }
            if (content.Contains("TopicConfigurationHostname"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.INamespaceInternal)this).TopicConfigurationHostname = (string) content.GetValueForProperty("TopicConfigurationHostname",((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.INamespaceInternal)this).TopicConfigurationHostname, global::System.Convert.ToString);
            }
            if (content.Contains("TopicSpaceConfigurationRoutingEnrichment"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.INamespaceInternal)this).TopicSpaceConfigurationRoutingEnrichment = (Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IRoutingEnrichments) content.GetValueForProperty("TopicSpaceConfigurationRoutingEnrichment",((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.INamespaceInternal)this).TopicSpaceConfigurationRoutingEnrichment, Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.RoutingEnrichmentsTypeConverter.ConvertFrom);
            }
            if (content.Contains("TopicSpaceConfigurationState"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.INamespaceInternal)this).TopicSpaceConfigurationState = (string) content.GetValueForProperty("TopicSpaceConfigurationState",((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.INamespaceInternal)this).TopicSpaceConfigurationState, global::System.Convert.ToString);
            }
            if (content.Contains("TopicSpaceConfigurationHostname"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.INamespaceInternal)this).TopicSpaceConfigurationHostname = (string) content.GetValueForProperty("TopicSpaceConfigurationHostname",((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.INamespaceInternal)this).TopicSpaceConfigurationHostname, global::System.Convert.ToString);
            }
            if (content.Contains("SkuCapacity"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.INamespaceInternal)this).SkuCapacity = (int?) content.GetValueForProperty("SkuCapacity",((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.INamespaceInternal)this).SkuCapacity, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("IdentityPrincipalId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.INamespaceInternal)this).IdentityPrincipalId = (string) content.GetValueForProperty("IdentityPrincipalId",((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.INamespaceInternal)this).IdentityPrincipalId, global::System.Convert.ToString);
            }
            if (content.Contains("IdentityTenantId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.INamespaceInternal)this).IdentityTenantId = (string) content.GetValueForProperty("IdentityTenantId",((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.INamespaceInternal)this).IdentityTenantId, global::System.Convert.ToString);
            }
            if (content.Contains("IdentityUserAssignedIdentity"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.INamespaceInternal)this).IdentityUserAssignedIdentity = (Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IIdentityInfoUserAssignedIdentities) content.GetValueForProperty("IdentityUserAssignedIdentity",((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.INamespaceInternal)this).IdentityUserAssignedIdentity, Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IdentityInfoUserAssignedIdentitiesTypeConverter.ConvertFrom);
            }
            if (content.Contains("SystemDataCreatedByType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.INamespaceInternal)this).SystemDataCreatedByType = (string) content.GetValueForProperty("SystemDataCreatedByType",((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.INamespaceInternal)this).SystemDataCreatedByType, global::System.Convert.ToString);
            }
            if (content.Contains("SystemDataLastModifiedBy"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.INamespaceInternal)this).SystemDataLastModifiedBy = (string) content.GetValueForProperty("SystemDataLastModifiedBy",((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.INamespaceInternal)this).SystemDataLastModifiedBy, global::System.Convert.ToString);
            }
            if (content.Contains("SystemDataLastModifiedByType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.INamespaceInternal)this).SystemDataLastModifiedByType = (string) content.GetValueForProperty("SystemDataLastModifiedByType",((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.INamespaceInternal)this).SystemDataLastModifiedByType, global::System.Convert.ToString);
            }
            if (content.Contains("SystemDataLastModifiedAt"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.INamespaceInternal)this).SystemDataLastModifiedAt = (global::System.DateTime?) content.GetValueForProperty("SystemDataLastModifiedAt",((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.INamespaceInternal)this).SystemDataLastModifiedAt, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            if (content.Contains("TopicSpaceConfigurationClientAuthentication"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.INamespaceInternal)this).TopicSpaceConfigurationClientAuthentication = (Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IClientAuthenticationSettings) content.GetValueForProperty("TopicSpaceConfigurationClientAuthentication",((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.INamespaceInternal)this).TopicSpaceConfigurationClientAuthentication, Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.ClientAuthenticationSettingsTypeConverter.ConvertFrom);
            }
            if (content.Contains("TopicSpaceConfigurationRoutingIdentityInfo"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.INamespaceInternal)this).TopicSpaceConfigurationRoutingIdentityInfo = (Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IRoutingIdentityInfo) content.GetValueForProperty("TopicSpaceConfigurationRoutingIdentityInfo",((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.INamespaceInternal)this).TopicSpaceConfigurationRoutingIdentityInfo, Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.RoutingIdentityInfoTypeConverter.ConvertFrom);
            }
            if (content.Contains("TopicSpaceConfigurationRouteTopicResourceId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.INamespaceInternal)this).TopicSpaceConfigurationRouteTopicResourceId = (string) content.GetValueForProperty("TopicSpaceConfigurationRouteTopicResourceId",((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.INamespaceInternal)this).TopicSpaceConfigurationRouteTopicResourceId, global::System.Convert.ToString);
            }
            if (content.Contains("TopicSpaceConfigurationMaximumSessionExpiryInHour"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.INamespaceInternal)this).TopicSpaceConfigurationMaximumSessionExpiryInHour = (int?) content.GetValueForProperty("TopicSpaceConfigurationMaximumSessionExpiryInHour",((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.INamespaceInternal)this).TopicSpaceConfigurationMaximumSessionExpiryInHour, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("TopicSpaceConfigurationMaximumClientSessionsPerAuthenticationName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.INamespaceInternal)this).TopicSpaceConfigurationMaximumClientSessionsPerAuthenticationName = (int?) content.GetValueForProperty("TopicSpaceConfigurationMaximumClientSessionsPerAuthenticationName",((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.INamespaceInternal)this).TopicSpaceConfigurationMaximumClientSessionsPerAuthenticationName, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("RoutingEnrichmentStatic"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.INamespaceInternal)this).RoutingEnrichmentStatic = (System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IStaticRoutingEnrichment>) content.GetValueForProperty("RoutingEnrichmentStatic",((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.INamespaceInternal)this).RoutingEnrichmentStatic, __y => TypeConverterExtensions.SelectToList<Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IStaticRoutingEnrichment>(__y, Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.StaticRoutingEnrichmentTypeConverter.ConvertFrom));
            }
            if (content.Contains("RoutingEnrichmentDynamic"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.INamespaceInternal)this).RoutingEnrichmentDynamic = (System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IDynamicRoutingEnrichment>) content.GetValueForProperty("RoutingEnrichmentDynamic",((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.INamespaceInternal)this).RoutingEnrichmentDynamic, __y => TypeConverterExtensions.SelectToList<Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IDynamicRoutingEnrichment>(__y, Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.DynamicRoutingEnrichmentTypeConverter.ConvertFrom));
            }
            if (content.Contains("ClientAuthenticationAlternativeAuthenticationNameSource"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.INamespaceInternal)this).ClientAuthenticationAlternativeAuthenticationNameSource = (System.Collections.Generic.List<string>) content.GetValueForProperty("ClientAuthenticationAlternativeAuthenticationNameSource",((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.INamespaceInternal)this).ClientAuthenticationAlternativeAuthenticationNameSource, __y => TypeConverterExtensions.SelectToList<string>(__y, global::System.Convert.ToString));
            }
            if (content.Contains("RoutingIdentityInfoType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.INamespaceInternal)this).RoutingIdentityInfoType = (string) content.GetValueForProperty("RoutingIdentityInfoType",((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.INamespaceInternal)this).RoutingIdentityInfoType, global::System.Convert.ToString);
            }
            if (content.Contains("RoutingIdentityInfoUserAssignedIdentity"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.INamespaceInternal)this).RoutingIdentityInfoUserAssignedIdentity = (string) content.GetValueForProperty("RoutingIdentityInfoUserAssignedIdentity",((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.INamespaceInternal)this).RoutingIdentityInfoUserAssignedIdentity, global::System.Convert.ToString);
            }
            AfterDeserializePSObject(content);
        }

        /// <summary>Serializes this instance to a json string.</summary>

        /// <returns>a <see cref="System.String" /> containing this model serialized to JSON text.</returns>
        public string ToJsonString() => ToJson(null, Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Runtime.SerializationMode.IncludeAll)?.ToString();

        public override string ToString()
        {
            var returnNow = false;
            var result = global::System.String.Empty;
            OverrideToString(ref result, ref returnNow);
            if (returnNow)
            {
                return result;
            }
            return ToJsonString();
        }
    }
    /// Namespace resource.
    [System.ComponentModel.TypeConverter(typeof(NamespaceTypeConverter))]
    public partial interface INamespace

    {

    }
}