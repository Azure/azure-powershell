// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models
{
    using Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Runtime.PowerShell;

    [System.ComponentModel.TypeConverter(typeof(EventGridIdentityTypeConverter))]
    public partial class EventGridIdentity
    {

        /// <summary>
        /// <c>AfterDeserializeDictionary</c> will be called after the deserialization has finished, allowing customization of the
        /// object before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>

        partial void AfterDeserializeDictionary(global::System.Collections.IDictionary content);

        /// <summary>
        /// <c>AfterDeserializePSObject</c> will be called after the deserialization has finished, allowing customization of the object
        /// before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>

        partial void AfterDeserializePSObject(global::System.Management.Automation.PSObject content);

        /// <summary>
        /// <c>BeforeDeserializeDictionary</c> will be called before the deserialization has commenced, allowing complete customization
        /// of the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <paramref name="returnNow" /> output
        /// parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeDeserializeDictionary(global::System.Collections.IDictionary content, ref bool returnNow);

        /// <summary>
        /// <c>BeforeDeserializePSObject</c> will be called before the deserialization has commenced, allowing complete customization
        /// of the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <paramref name="returnNow" /> output
        /// parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeDeserializePSObject(global::System.Management.Automation.PSObject content, ref bool returnNow);

        /// <summary>
        /// <c>OverrideToString</c> will be called if it is implemented. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="stringResult">/// instance serialized to a string, normally it is a Json</param>
        /// <param name="returnNow">/// set returnNow to true if you provide a customized OverrideToString function</param>

        partial void OverrideToString(ref string stringResult, ref bool returnNow);

        /// <summary>
        /// Deserializes a <see cref="global::System.Collections.IDictionary" /> into an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.EventGridIdentity"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        /// <returns>
        /// an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IEventGridIdentity" />.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IEventGridIdentity DeserializeFromDictionary(global::System.Collections.IDictionary content)
        {
            return new EventGridIdentity(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Management.Automation.PSObject" /> into an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.EventGridIdentity"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        /// <returns>
        /// an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IEventGridIdentity" />.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IEventGridIdentity DeserializeFromPSObject(global::System.Management.Automation.PSObject content)
        {
            return new EventGridIdentity(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Collections.IDictionary" /> into a new instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.EventGridIdentity"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        internal EventGridIdentity(global::System.Collections.IDictionary content)
        {
            bool returnNow = false;
            BeforeDeserializeDictionary(content, ref returnNow);
            if (returnNow)
            {
                return;
            }
            // actually deserialize
            if (content.Contains("SubscriptionId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IEventGridIdentityInternal)this).SubscriptionId = (string) content.GetValueForProperty("SubscriptionId",((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IEventGridIdentityInternal)this).SubscriptionId, global::System.Convert.ToString);
            }
            if (content.Contains("ResourceGroupName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IEventGridIdentityInternal)this).ResourceGroupName = (string) content.GetValueForProperty("ResourceGroupName",((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IEventGridIdentityInternal)this).ResourceGroupName, global::System.Convert.ToString);
            }
            if (content.Contains("NamespaceName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IEventGridIdentityInternal)this).NamespaceName = (string) content.GetValueForProperty("NamespaceName",((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IEventGridIdentityInternal)this).NamespaceName, global::System.Convert.ToString);
            }
            if (content.Contains("CaCertificateName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IEventGridIdentityInternal)this).CaCertificateName = (string) content.GetValueForProperty("CaCertificateName",((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IEventGridIdentityInternal)this).CaCertificateName, global::System.Convert.ToString);
            }
            if (content.Contains("PartnerNamespaceName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IEventGridIdentityInternal)this).PartnerNamespaceName = (string) content.GetValueForProperty("PartnerNamespaceName",((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IEventGridIdentityInternal)this).PartnerNamespaceName, global::System.Convert.ToString);
            }
            if (content.Contains("ChannelName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IEventGridIdentityInternal)this).ChannelName = (string) content.GetValueForProperty("ChannelName",((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IEventGridIdentityInternal)this).ChannelName, global::System.Convert.ToString);
            }
            if (content.Contains("ClientGroupName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IEventGridIdentityInternal)this).ClientGroupName = (string) content.GetValueForProperty("ClientGroupName",((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IEventGridIdentityInternal)this).ClientGroupName, global::System.Convert.ToString);
            }
            if (content.Contains("ClientName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IEventGridIdentityInternal)this).ClientName = (string) content.GetValueForProperty("ClientName",((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IEventGridIdentityInternal)this).ClientName, global::System.Convert.ToString);
            }
            if (content.Contains("DomainName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IEventGridIdentityInternal)this).DomainName = (string) content.GetValueForProperty("DomainName",((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IEventGridIdentityInternal)this).DomainName, global::System.Convert.ToString);
            }
            if (content.Contains("DomainTopicName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IEventGridIdentityInternal)this).DomainTopicName = (string) content.GetValueForProperty("DomainTopicName",((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IEventGridIdentityInternal)this).DomainTopicName, global::System.Convert.ToString);
            }
            if (content.Contains("TopicName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IEventGridIdentityInternal)this).TopicName = (string) content.GetValueForProperty("TopicName",((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IEventGridIdentityInternal)this).TopicName, global::System.Convert.ToString);
            }
            if (content.Contains("EventSubscriptionName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IEventGridIdentityInternal)this).EventSubscriptionName = (string) content.GetValueForProperty("EventSubscriptionName",((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IEventGridIdentityInternal)this).EventSubscriptionName, global::System.Convert.ToString);
            }
            if (content.Contains("Scope"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IEventGridIdentityInternal)this).Scope = (string) content.GetValueForProperty("Scope",((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IEventGridIdentityInternal)this).Scope, global::System.Convert.ToString);
            }
            if (content.Contains("TopicTypeName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IEventGridIdentityInternal)this).TopicTypeName = (string) content.GetValueForProperty("TopicTypeName",((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IEventGridIdentityInternal)this).TopicTypeName, global::System.Convert.ToString);
            }
            if (content.Contains("Location"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IEventGridIdentityInternal)this).Location = (string) content.GetValueForProperty("Location",((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IEventGridIdentityInternal)this).Location, global::System.Convert.ToString);
            }
            if (content.Contains("ProviderNamespace"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IEventGridIdentityInternal)this).ProviderNamespace = (string) content.GetValueForProperty("ProviderNamespace",((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IEventGridIdentityInternal)this).ProviderNamespace, global::System.Convert.ToString);
            }
            if (content.Contains("ResourceTypeName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IEventGridIdentityInternal)this).ResourceTypeName = (string) content.GetValueForProperty("ResourceTypeName",((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IEventGridIdentityInternal)this).ResourceTypeName, global::System.Convert.ToString);
            }
            if (content.Contains("ResourceName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IEventGridIdentityInternal)this).ResourceName = (string) content.GetValueForProperty("ResourceName",((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IEventGridIdentityInternal)this).ResourceName, global::System.Convert.ToString);
            }
            if (content.Contains("SystemTopicName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IEventGridIdentityInternal)this).SystemTopicName = (string) content.GetValueForProperty("SystemTopicName",((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IEventGridIdentityInternal)this).SystemTopicName, global::System.Convert.ToString);
            }
            if (content.Contains("PartnerTopicName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IEventGridIdentityInternal)this).PartnerTopicName = (string) content.GetValueForProperty("PartnerTopicName",((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IEventGridIdentityInternal)this).PartnerTopicName, global::System.Convert.ToString);
            }
            if (content.Contains("PartnerDestinationName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IEventGridIdentityInternal)this).PartnerDestinationName = (string) content.GetValueForProperty("PartnerDestinationName",((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IEventGridIdentityInternal)this).PartnerDestinationName, global::System.Convert.ToString);
            }
            if (content.Contains("PartnerRegistrationName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IEventGridIdentityInternal)this).PartnerRegistrationName = (string) content.GetValueForProperty("PartnerRegistrationName",((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IEventGridIdentityInternal)this).PartnerRegistrationName, global::System.Convert.ToString);
            }
            if (content.Contains("PermissionBindingName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IEventGridIdentityInternal)this).PermissionBindingName = (string) content.GetValueForProperty("PermissionBindingName",((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IEventGridIdentityInternal)this).PermissionBindingName, global::System.Convert.ToString);
            }
            if (content.Contains("ParentType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IEventGridIdentityInternal)this).ParentType = (string) content.GetValueForProperty("ParentType",((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IEventGridIdentityInternal)this).ParentType, global::System.Convert.ToString);
            }
            if (content.Contains("ParentName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IEventGridIdentityInternal)this).ParentName = (string) content.GetValueForProperty("ParentName",((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IEventGridIdentityInternal)this).ParentName, global::System.Convert.ToString);
            }
            if (content.Contains("PrivateEndpointConnectionName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IEventGridIdentityInternal)this).PrivateEndpointConnectionName = (string) content.GetValueForProperty("PrivateEndpointConnectionName",((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IEventGridIdentityInternal)this).PrivateEndpointConnectionName, global::System.Convert.ToString);
            }
            if (content.Contains("PrivateLinkResourceName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IEventGridIdentityInternal)this).PrivateLinkResourceName = (string) content.GetValueForProperty("PrivateLinkResourceName",((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IEventGridIdentityInternal)this).PrivateLinkResourceName, global::System.Convert.ToString);
            }
            if (content.Contains("TopicSpaceName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IEventGridIdentityInternal)this).TopicSpaceName = (string) content.GetValueForProperty("TopicSpaceName",((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IEventGridIdentityInternal)this).TopicSpaceName, global::System.Convert.ToString);
            }
            if (content.Contains("VerifiedPartnerName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IEventGridIdentityInternal)this).VerifiedPartnerName = (string) content.GetValueForProperty("VerifiedPartnerName",((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IEventGridIdentityInternal)this).VerifiedPartnerName, global::System.Convert.ToString);
            }
            if (content.Contains("Id"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IEventGridIdentityInternal)this).Id = (string) content.GetValueForProperty("Id",((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IEventGridIdentityInternal)this).Id, global::System.Convert.ToString);
            }
            AfterDeserializeDictionary(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Management.Automation.PSObject" /> into a new instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.EventGridIdentity"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        internal EventGridIdentity(global::System.Management.Automation.PSObject content)
        {
            bool returnNow = false;
            BeforeDeserializePSObject(content, ref returnNow);
            if (returnNow)
            {
                return;
            }
            // actually deserialize
            if (content.Contains("SubscriptionId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IEventGridIdentityInternal)this).SubscriptionId = (string) content.GetValueForProperty("SubscriptionId",((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IEventGridIdentityInternal)this).SubscriptionId, global::System.Convert.ToString);
            }
            if (content.Contains("ResourceGroupName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IEventGridIdentityInternal)this).ResourceGroupName = (string) content.GetValueForProperty("ResourceGroupName",((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IEventGridIdentityInternal)this).ResourceGroupName, global::System.Convert.ToString);
            }
            if (content.Contains("NamespaceName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IEventGridIdentityInternal)this).NamespaceName = (string) content.GetValueForProperty("NamespaceName",((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IEventGridIdentityInternal)this).NamespaceName, global::System.Convert.ToString);
            }
            if (content.Contains("CaCertificateName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IEventGridIdentityInternal)this).CaCertificateName = (string) content.GetValueForProperty("CaCertificateName",((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IEventGridIdentityInternal)this).CaCertificateName, global::System.Convert.ToString);
            }
            if (content.Contains("PartnerNamespaceName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IEventGridIdentityInternal)this).PartnerNamespaceName = (string) content.GetValueForProperty("PartnerNamespaceName",((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IEventGridIdentityInternal)this).PartnerNamespaceName, global::System.Convert.ToString);
            }
            if (content.Contains("ChannelName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IEventGridIdentityInternal)this).ChannelName = (string) content.GetValueForProperty("ChannelName",((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IEventGridIdentityInternal)this).ChannelName, global::System.Convert.ToString);
            }
            if (content.Contains("ClientGroupName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IEventGridIdentityInternal)this).ClientGroupName = (string) content.GetValueForProperty("ClientGroupName",((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IEventGridIdentityInternal)this).ClientGroupName, global::System.Convert.ToString);
            }
            if (content.Contains("ClientName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IEventGridIdentityInternal)this).ClientName = (string) content.GetValueForProperty("ClientName",((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IEventGridIdentityInternal)this).ClientName, global::System.Convert.ToString);
            }
            if (content.Contains("DomainName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IEventGridIdentityInternal)this).DomainName = (string) content.GetValueForProperty("DomainName",((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IEventGridIdentityInternal)this).DomainName, global::System.Convert.ToString);
            }
            if (content.Contains("DomainTopicName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IEventGridIdentityInternal)this).DomainTopicName = (string) content.GetValueForProperty("DomainTopicName",((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IEventGridIdentityInternal)this).DomainTopicName, global::System.Convert.ToString);
            }
            if (content.Contains("TopicName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IEventGridIdentityInternal)this).TopicName = (string) content.GetValueForProperty("TopicName",((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IEventGridIdentityInternal)this).TopicName, global::System.Convert.ToString);
            }
            if (content.Contains("EventSubscriptionName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IEventGridIdentityInternal)this).EventSubscriptionName = (string) content.GetValueForProperty("EventSubscriptionName",((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IEventGridIdentityInternal)this).EventSubscriptionName, global::System.Convert.ToString);
            }
            if (content.Contains("Scope"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IEventGridIdentityInternal)this).Scope = (string) content.GetValueForProperty("Scope",((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IEventGridIdentityInternal)this).Scope, global::System.Convert.ToString);
            }
            if (content.Contains("TopicTypeName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IEventGridIdentityInternal)this).TopicTypeName = (string) content.GetValueForProperty("TopicTypeName",((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IEventGridIdentityInternal)this).TopicTypeName, global::System.Convert.ToString);
            }
            if (content.Contains("Location"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IEventGridIdentityInternal)this).Location = (string) content.GetValueForProperty("Location",((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IEventGridIdentityInternal)this).Location, global::System.Convert.ToString);
            }
            if (content.Contains("ProviderNamespace"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IEventGridIdentityInternal)this).ProviderNamespace = (string) content.GetValueForProperty("ProviderNamespace",((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IEventGridIdentityInternal)this).ProviderNamespace, global::System.Convert.ToString);
            }
            if (content.Contains("ResourceTypeName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IEventGridIdentityInternal)this).ResourceTypeName = (string) content.GetValueForProperty("ResourceTypeName",((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IEventGridIdentityInternal)this).ResourceTypeName, global::System.Convert.ToString);
            }
            if (content.Contains("ResourceName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IEventGridIdentityInternal)this).ResourceName = (string) content.GetValueForProperty("ResourceName",((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IEventGridIdentityInternal)this).ResourceName, global::System.Convert.ToString);
            }
            if (content.Contains("SystemTopicName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IEventGridIdentityInternal)this).SystemTopicName = (string) content.GetValueForProperty("SystemTopicName",((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IEventGridIdentityInternal)this).SystemTopicName, global::System.Convert.ToString);
            }
            if (content.Contains("PartnerTopicName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IEventGridIdentityInternal)this).PartnerTopicName = (string) content.GetValueForProperty("PartnerTopicName",((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IEventGridIdentityInternal)this).PartnerTopicName, global::System.Convert.ToString);
            }
            if (content.Contains("PartnerDestinationName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IEventGridIdentityInternal)this).PartnerDestinationName = (string) content.GetValueForProperty("PartnerDestinationName",((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IEventGridIdentityInternal)this).PartnerDestinationName, global::System.Convert.ToString);
            }
            if (content.Contains("PartnerRegistrationName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IEventGridIdentityInternal)this).PartnerRegistrationName = (string) content.GetValueForProperty("PartnerRegistrationName",((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IEventGridIdentityInternal)this).PartnerRegistrationName, global::System.Convert.ToString);
            }
            if (content.Contains("PermissionBindingName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IEventGridIdentityInternal)this).PermissionBindingName = (string) content.GetValueForProperty("PermissionBindingName",((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IEventGridIdentityInternal)this).PermissionBindingName, global::System.Convert.ToString);
            }
            if (content.Contains("ParentType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IEventGridIdentityInternal)this).ParentType = (string) content.GetValueForProperty("ParentType",((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IEventGridIdentityInternal)this).ParentType, global::System.Convert.ToString);
            }
            if (content.Contains("ParentName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IEventGridIdentityInternal)this).ParentName = (string) content.GetValueForProperty("ParentName",((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IEventGridIdentityInternal)this).ParentName, global::System.Convert.ToString);
            }
            if (content.Contains("PrivateEndpointConnectionName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IEventGridIdentityInternal)this).PrivateEndpointConnectionName = (string) content.GetValueForProperty("PrivateEndpointConnectionName",((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IEventGridIdentityInternal)this).PrivateEndpointConnectionName, global::System.Convert.ToString);
            }
            if (content.Contains("PrivateLinkResourceName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IEventGridIdentityInternal)this).PrivateLinkResourceName = (string) content.GetValueForProperty("PrivateLinkResourceName",((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IEventGridIdentityInternal)this).PrivateLinkResourceName, global::System.Convert.ToString);
            }
            if (content.Contains("TopicSpaceName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IEventGridIdentityInternal)this).TopicSpaceName = (string) content.GetValueForProperty("TopicSpaceName",((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IEventGridIdentityInternal)this).TopicSpaceName, global::System.Convert.ToString);
            }
            if (content.Contains("VerifiedPartnerName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IEventGridIdentityInternal)this).VerifiedPartnerName = (string) content.GetValueForProperty("VerifiedPartnerName",((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IEventGridIdentityInternal)this).VerifiedPartnerName, global::System.Convert.ToString);
            }
            if (content.Contains("Id"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IEventGridIdentityInternal)this).Id = (string) content.GetValueForProperty("Id",((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IEventGridIdentityInternal)this).Id, global::System.Convert.ToString);
            }
            AfterDeserializePSObject(content);
        }

        /// <summary>
        /// Creates a new instance of <see cref="EventGridIdentity" />, deserializing the content from a json string.
        /// </summary>
        /// <param name="jsonText">a string containing a JSON serialized instance of this model.</param>
        /// <returns>an instance of the <see cref="EventGridIdentity" /> model class.</returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IEventGridIdentity FromJsonString(string jsonText) => FromJson(Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Runtime.Json.JsonNode.Parse(jsonText));

        /// <summary>Serializes this instance to a json string.</summary>

        /// <returns>a <see cref="System.String" /> containing this model serialized to JSON text.</returns>
        public string ToJsonString() => ToJson(null, Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Runtime.SerializationMode.IncludeAll)?.ToString();

        public override string ToString()
        {
            var returnNow = false;
            var result = global::System.String.Empty;
            OverrideToString(ref result, ref returnNow);
            if (returnNow)
            {
                return result;
            }
            return ToJsonString();
        }
    }
    [System.ComponentModel.TypeConverter(typeof(EventGridIdentityTypeConverter))]
    public partial interface IEventGridIdentity

    {

    }
}