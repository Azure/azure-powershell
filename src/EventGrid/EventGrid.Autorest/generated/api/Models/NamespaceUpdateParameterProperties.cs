// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models
{
    using static Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Runtime.Extensions;

    /// <summary>Information of namespace update parameter properties.</summary>
    public partial class NamespaceUpdateParameterProperties :
        Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.INamespaceUpdateParameterProperties,
        Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.INamespaceUpdateParameterPropertiesInternal
    {

        /// <summary>
        /// Alternative authentication name sources related to client authentication settings for namespace resource.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Origin(Microsoft.Azure.PowerShell.Cmdlets.EventGrid.PropertyOrigin.Inlined)]
        public System.Collections.Generic.List<string> ClientAuthenticationAlternativeAuthenticationNameSource { get => ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IUpdateTopicSpacesConfigurationInfoInternal)TopicSpacesConfiguration).ClientAuthenticationAlternativeAuthenticationNameSource; set => ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IUpdateTopicSpacesConfigurationInfoInternal)TopicSpacesConfiguration).ClientAuthenticationAlternativeAuthenticationNameSource = value ?? null /* arrayOf */; }

        /// <summary>Backing field for <see cref="InboundIPRule" /> property.</summary>
        private System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IInboundIPRule> _inboundIPRule;

        /// <summary>
        /// This can be used to restrict traffic from specific IPs instead of all IPs. Note: These are considered only if PublicNetworkAccess
        /// is enabled.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Origin(Microsoft.Azure.PowerShell.Cmdlets.EventGrid.PropertyOrigin.Owned)]
        public System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IInboundIPRule> InboundIPRule { get => this._inboundIPRule; set => this._inboundIPRule = value; }

        /// <summary>Internal Acessors for TopicSpaceConfigurationClientAuthentication</summary>
        Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IClientAuthenticationSettings Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.INamespaceUpdateParameterPropertiesInternal.TopicSpaceConfigurationClientAuthentication { get => ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IUpdateTopicSpacesConfigurationInfoInternal)TopicSpacesConfiguration).ClientAuthentication; set => ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IUpdateTopicSpacesConfigurationInfoInternal)TopicSpacesConfiguration).ClientAuthentication = value; }

        /// <summary>Internal Acessors for TopicSpaceConfigurationRoutingEnrichment</summary>
        Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IRoutingEnrichments Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.INamespaceUpdateParameterPropertiesInternal.TopicSpaceConfigurationRoutingEnrichment { get => ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IUpdateTopicSpacesConfigurationInfoInternal)TopicSpacesConfiguration).RoutingEnrichment; set => ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IUpdateTopicSpacesConfigurationInfoInternal)TopicSpacesConfiguration).RoutingEnrichment = value; }

        /// <summary>Internal Acessors for TopicSpaceConfigurationRoutingIdentityInfo</summary>
        Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IRoutingIdentityInfo Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.INamespaceUpdateParameterPropertiesInternal.TopicSpaceConfigurationRoutingIdentityInfo { get => ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IUpdateTopicSpacesConfigurationInfoInternal)TopicSpacesConfiguration).RoutingIdentityInfo; set => ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IUpdateTopicSpacesConfigurationInfoInternal)TopicSpacesConfiguration).RoutingIdentityInfo = value; }

        /// <summary>Internal Acessors for TopicSpacesConfiguration</summary>
        Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IUpdateTopicSpacesConfigurationInfo Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.INamespaceUpdateParameterPropertiesInternal.TopicSpacesConfiguration { get => (this._topicSpacesConfiguration = this._topicSpacesConfiguration ?? new Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.UpdateTopicSpacesConfigurationInfo()); set { {_topicSpacesConfiguration = value;} } }

        /// <summary>Backing field for <see cref="PublicNetworkAccess" /> property.</summary>
        private string _publicNetworkAccess;

        /// <summary>
        /// This determines if traffic is allowed over public network. By default it is enabled.
        /// You can further restrict to specific IPs by configuring <seealso cref="P:Microsoft.Azure.Events.ResourceProvider.Common.Contracts.PubSub.NamespaceUpdateParameterProperties.InboundIpRules"
        /// />
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Origin(Microsoft.Azure.PowerShell.Cmdlets.EventGrid.PropertyOrigin.Owned)]
        public string PublicNetworkAccess { get => this._publicNetworkAccess; set => this._publicNetworkAccess = value; }

        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Origin(Microsoft.Azure.PowerShell.Cmdlets.EventGrid.PropertyOrigin.Inlined)]
        public System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IDynamicRoutingEnrichment> RoutingEnrichmentDynamic { get => ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IUpdateTopicSpacesConfigurationInfoInternal)TopicSpacesConfiguration).RoutingEnrichmentDynamic; set => ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IUpdateTopicSpacesConfigurationInfoInternal)TopicSpacesConfiguration).RoutingEnrichmentDynamic = value ?? null /* arrayOf */; }

        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Origin(Microsoft.Azure.PowerShell.Cmdlets.EventGrid.PropertyOrigin.Inlined)]
        public System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IStaticRoutingEnrichment> RoutingEnrichmentStatic { get => ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IUpdateTopicSpacesConfigurationInfoInternal)TopicSpacesConfiguration).RoutingEnrichmentStatic; set => ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IUpdateTopicSpacesConfigurationInfoInternal)TopicSpacesConfiguration).RoutingEnrichmentStatic = value ?? null /* arrayOf */; }

        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Origin(Microsoft.Azure.PowerShell.Cmdlets.EventGrid.PropertyOrigin.Inlined)]
        public string RoutingIdentityInfoType { get => ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IUpdateTopicSpacesConfigurationInfoInternal)TopicSpacesConfiguration).RoutingIdentityInfoType; set => ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IUpdateTopicSpacesConfigurationInfoInternal)TopicSpacesConfiguration).RoutingIdentityInfoType = value ?? null; }

        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Origin(Microsoft.Azure.PowerShell.Cmdlets.EventGrid.PropertyOrigin.Inlined)]
        public string RoutingIdentityInfoUserAssignedIdentity { get => ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IUpdateTopicSpacesConfigurationInfoInternal)TopicSpacesConfiguration).RoutingIdentityInfoUserAssignedIdentity; set => ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IUpdateTopicSpacesConfigurationInfoInternal)TopicSpacesConfiguration).RoutingIdentityInfoUserAssignedIdentity = value ?? null; }

        /// <summary>
        /// The maximum number of sessions per authentication name. The property default value is 1.
        /// Min allowed value is 1 and max allowed value is 100.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Origin(Microsoft.Azure.PowerShell.Cmdlets.EventGrid.PropertyOrigin.Inlined)]
        public int? TopicSpaceConfigurationMaximumClientSessionsPerAuthenticationName { get => ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IUpdateTopicSpacesConfigurationInfoInternal)TopicSpacesConfiguration).MaximumClientSessionsPerAuthenticationName; set => ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IUpdateTopicSpacesConfigurationInfoInternal)TopicSpacesConfiguration).MaximumClientSessionsPerAuthenticationName = value ?? default(int); }

        /// <summary>
        /// The maximum session expiry in hours. The property default value is 1 hour.
        /// Min allowed value is 1 hour and max allowed value is 8 hours.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Origin(Microsoft.Azure.PowerShell.Cmdlets.EventGrid.PropertyOrigin.Inlined)]
        public int? TopicSpaceConfigurationMaximumSessionExpiryInHour { get => ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IUpdateTopicSpacesConfigurationInfoInternal)TopicSpacesConfiguration).MaximumSessionExpiryInHour; set => ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IUpdateTopicSpacesConfigurationInfoInternal)TopicSpacesConfiguration).MaximumSessionExpiryInHour = value ?? default(int); }

        /// <summary>
        /// This property is used to specify custom topic to which events will be routed to from topic spaces configuration under
        /// namespace.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Origin(Microsoft.Azure.PowerShell.Cmdlets.EventGrid.PropertyOrigin.Inlined)]
        public string TopicSpaceConfigurationRouteTopicResourceId { get => ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IUpdateTopicSpacesConfigurationInfoInternal)TopicSpacesConfiguration).RouteTopicResourceId; set => ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IUpdateTopicSpacesConfigurationInfoInternal)TopicSpacesConfiguration).RouteTopicResourceId = value ?? null; }

        /// <summary>
        /// Indicate if Topic Spaces Configuration is enabled for the namespace. Default is Disabled.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Origin(Microsoft.Azure.PowerShell.Cmdlets.EventGrid.PropertyOrigin.Inlined)]
        public string TopicSpaceConfigurationState { get => ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IUpdateTopicSpacesConfigurationInfoInternal)TopicSpacesConfiguration).State; set => ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IUpdateTopicSpacesConfigurationInfoInternal)TopicSpacesConfiguration).State = value ?? null; }

        /// <summary>Backing field for <see cref="TopicSpacesConfiguration" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IUpdateTopicSpacesConfigurationInfo _topicSpacesConfiguration;

        /// <summary>Topic spaces configuration properties that can be updated.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Origin(Microsoft.Azure.PowerShell.Cmdlets.EventGrid.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IUpdateTopicSpacesConfigurationInfo TopicSpacesConfiguration { get => (this._topicSpacesConfiguration = this._topicSpacesConfiguration ?? new Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.UpdateTopicSpacesConfigurationInfo()); set => this._topicSpacesConfiguration = value; }

        /// <summary>Creates an new <see cref="NamespaceUpdateParameterProperties" /> instance.</summary>
        public NamespaceUpdateParameterProperties()
        {

        }
    }
    /// Information of namespace update parameter properties.
    public partial interface INamespaceUpdateParameterProperties :
        Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Runtime.IJsonSerializable
    {
        /// <summary>
        /// Alternative authentication name sources related to client authentication settings for namespace resource.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Alternative authentication name sources related to client authentication settings for namespace resource.",
        SerializedName = @"alternativeAuthenticationNameSources",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.EventGrid.PSArgumentCompleterAttribute("ClientCertificateSubject", "ClientCertificateDns", "ClientCertificateUri", "ClientCertificateIp", "ClientCertificateEmail")]
        System.Collections.Generic.List<string> ClientAuthenticationAlternativeAuthenticationNameSource { get; set; }
        /// <summary>
        /// This can be used to restrict traffic from specific IPs instead of all IPs. Note: These are considered only if PublicNetworkAccess
        /// is enabled.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"This can be used to restrict traffic from specific IPs instead of all IPs. Note: These are considered only if PublicNetworkAccess is enabled.",
        SerializedName = @"inboundIpRules",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IInboundIPRule) })]
        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IInboundIPRule> InboundIPRule { get; set; }
        /// <summary>
        /// This determines if traffic is allowed over public network. By default it is enabled.
        /// You can further restrict to specific IPs by configuring <seealso cref="P:Microsoft.Azure.Events.ResourceProvider.Common.Contracts.PubSub.NamespaceUpdateParameterProperties.InboundIpRules"
        /// />
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"This determines if traffic is allowed over public network. By default it is enabled.
        You can further restrict to specific IPs by configuring <seealso cref=""P:Microsoft.Azure.Events.ResourceProvider.Common.Contracts.PubSub.NamespaceUpdateParameterProperties.InboundIpRules"" />",
        SerializedName = @"publicNetworkAccess",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.EventGrid.PSArgumentCompleterAttribute("Enabled", "Disabled")]
        string PublicNetworkAccess { get; set; }

        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"",
        SerializedName = @"dynamic",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IDynamicRoutingEnrichment) })]
        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IDynamicRoutingEnrichment> RoutingEnrichmentDynamic { get; set; }

        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"",
        SerializedName = @"static",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IStaticRoutingEnrichment) })]
        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IStaticRoutingEnrichment> RoutingEnrichmentStatic { get; set; }

        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"",
        SerializedName = @"type",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.EventGrid.PSArgumentCompleterAttribute("None", "SystemAssigned", "UserAssigned")]
        string RoutingIdentityInfoType { get; set; }

        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"",
        SerializedName = @"userAssignedIdentity",
        PossibleTypes = new [] { typeof(string) })]
        string RoutingIdentityInfoUserAssignedIdentity { get; set; }
        /// <summary>
        /// The maximum number of sessions per authentication name. The property default value is 1.
        /// Min allowed value is 1 and max allowed value is 100.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The maximum number of sessions per authentication name. The property default value is 1.
        Min allowed value is 1 and max allowed value is 100.",
        SerializedName = @"maximumClientSessionsPerAuthenticationName",
        PossibleTypes = new [] { typeof(int) })]
        int? TopicSpaceConfigurationMaximumClientSessionsPerAuthenticationName { get; set; }
        /// <summary>
        /// The maximum session expiry in hours. The property default value is 1 hour.
        /// Min allowed value is 1 hour and max allowed value is 8 hours.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The maximum session expiry in hours. The property default value is 1 hour.
        Min allowed value is 1 hour and max allowed value is 8 hours.",
        SerializedName = @"maximumSessionExpiryInHours",
        PossibleTypes = new [] { typeof(int) })]
        int? TopicSpaceConfigurationMaximumSessionExpiryInHour { get; set; }
        /// <summary>
        /// This property is used to specify custom topic to which events will be routed to from topic spaces configuration under
        /// namespace.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"This property is used to specify custom topic to which events will be routed to from topic spaces configuration under namespace.",
        SerializedName = @"routeTopicResourceId",
        PossibleTypes = new [] { typeof(string) })]
        string TopicSpaceConfigurationRouteTopicResourceId { get; set; }
        /// <summary>
        /// Indicate if Topic Spaces Configuration is enabled for the namespace. Default is Disabled.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Indicate if Topic Spaces Configuration is enabled for the namespace. Default is Disabled.",
        SerializedName = @"state",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.EventGrid.PSArgumentCompleterAttribute("Disabled", "Enabled")]
        string TopicSpaceConfigurationState { get; set; }

    }
    /// Information of namespace update parameter properties.
    internal partial interface INamespaceUpdateParameterPropertiesInternal

    {
        /// <summary>
        /// Alternative authentication name sources related to client authentication settings for namespace resource.
        /// </summary>
        [global::Microsoft.Azure.PowerShell.Cmdlets.EventGrid.PSArgumentCompleterAttribute("ClientCertificateSubject", "ClientCertificateDns", "ClientCertificateUri", "ClientCertificateIp", "ClientCertificateEmail")]
        System.Collections.Generic.List<string> ClientAuthenticationAlternativeAuthenticationNameSource { get; set; }
        /// <summary>
        /// This can be used to restrict traffic from specific IPs instead of all IPs. Note: These are considered only if PublicNetworkAccess
        /// is enabled.
        /// </summary>
        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IInboundIPRule> InboundIPRule { get; set; }
        /// <summary>
        /// This determines if traffic is allowed over public network. By default it is enabled.
        /// You can further restrict to specific IPs by configuring <seealso cref="P:Microsoft.Azure.Events.ResourceProvider.Common.Contracts.PubSub.NamespaceUpdateParameterProperties.InboundIpRules"
        /// />
        /// </summary>
        [global::Microsoft.Azure.PowerShell.Cmdlets.EventGrid.PSArgumentCompleterAttribute("Enabled", "Disabled")]
        string PublicNetworkAccess { get; set; }

        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IDynamicRoutingEnrichment> RoutingEnrichmentDynamic { get; set; }

        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IStaticRoutingEnrichment> RoutingEnrichmentStatic { get; set; }

        [global::Microsoft.Azure.PowerShell.Cmdlets.EventGrid.PSArgumentCompleterAttribute("None", "SystemAssigned", "UserAssigned")]
        string RoutingIdentityInfoType { get; set; }

        string RoutingIdentityInfoUserAssignedIdentity { get; set; }
        /// <summary>Client authentication settings for topic spaces configuration.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IClientAuthenticationSettings TopicSpaceConfigurationClientAuthentication { get; set; }
        /// <summary>
        /// The maximum number of sessions per authentication name. The property default value is 1.
        /// Min allowed value is 1 and max allowed value is 100.
        /// </summary>
        int? TopicSpaceConfigurationMaximumClientSessionsPerAuthenticationName { get; set; }
        /// <summary>
        /// The maximum session expiry in hours. The property default value is 1 hour.
        /// Min allowed value is 1 hour and max allowed value is 8 hours.
        /// </summary>
        int? TopicSpaceConfigurationMaximumSessionExpiryInHour { get; set; }
        /// <summary>
        /// This property is used to specify custom topic to which events will be routed to from topic spaces configuration under
        /// namespace.
        /// </summary>
        string TopicSpaceConfigurationRouteTopicResourceId { get; set; }
        /// <summary>Routing enrichments for topic spaces configuration.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IRoutingEnrichments TopicSpaceConfigurationRoutingEnrichment { get; set; }
        /// <summary>Routing identity info for topic spaces configuration.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IRoutingIdentityInfo TopicSpaceConfigurationRoutingIdentityInfo { get; set; }
        /// <summary>
        /// Indicate if Topic Spaces Configuration is enabled for the namespace. Default is Disabled.
        /// </summary>
        [global::Microsoft.Azure.PowerShell.Cmdlets.EventGrid.PSArgumentCompleterAttribute("Disabled", "Enabled")]
        string TopicSpaceConfigurationState { get; set; }
        /// <summary>Topic spaces configuration properties that can be updated.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IUpdateTopicSpacesConfigurationInfo TopicSpacesConfiguration { get; set; }

    }
}