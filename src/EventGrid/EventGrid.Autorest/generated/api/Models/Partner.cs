// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models
{
    using static Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Runtime.Extensions;

    /// <summary>Information about the partner.</summary>
    public partial class Partner :
        Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IPartner,
        Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IPartnerInternal
    {

        /// <summary>Backing field for <see cref="AuthorizationExpirationTimeInUtc" /> property.</summary>
        private global::System.DateTime? _authorizationExpirationTimeInUtc;

        /// <summary>
        /// Expiration time of the partner authorization. If this timer expires, any request from this partner to create, update or
        /// delete resources in subscriber's
        /// context will fail. If specified, the allowed values are between 1 to the value of defaultMaximumExpirationTimeInDays specified
        /// in PartnerConfiguration.
        /// If not specified, the default value will be the value of defaultMaximumExpirationTimeInDays specified in PartnerConfiguration
        /// or 7 if this value is not specified.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Origin(Microsoft.Azure.PowerShell.Cmdlets.EventGrid.PropertyOrigin.Owned)]
        public global::System.DateTime? AuthorizationExpirationTimeInUtc { get => this._authorizationExpirationTimeInUtc; set => this._authorizationExpirationTimeInUtc = value; }

        /// <summary>Backing field for <see cref="Name" /> property.</summary>
        private string _name;

        /// <summary>The partner name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Origin(Microsoft.Azure.PowerShell.Cmdlets.EventGrid.PropertyOrigin.Owned)]
        public string Name { get => this._name; set => this._name = value; }

        /// <summary>Backing field for <see cref="RegistrationImmutableId" /> property.</summary>
        private string _registrationImmutableId;

        /// <summary>The immutableId of the corresponding partner registration.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Origin(Microsoft.Azure.PowerShell.Cmdlets.EventGrid.PropertyOrigin.Owned)]
        public string RegistrationImmutableId { get => this._registrationImmutableId; set => this._registrationImmutableId = value; }

        /// <summary>Creates an new <see cref="Partner" /> instance.</summary>
        public Partner()
        {

        }
    }
    /// Information about the partner.
    public partial interface IPartner :
        Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Runtime.IJsonSerializable
    {
        /// <summary>
        /// Expiration time of the partner authorization. If this timer expires, any request from this partner to create, update or
        /// delete resources in subscriber's
        /// context will fail. If specified, the allowed values are between 1 to the value of defaultMaximumExpirationTimeInDays specified
        /// in PartnerConfiguration.
        /// If not specified, the default value will be the value of defaultMaximumExpirationTimeInDays specified in PartnerConfiguration
        /// or 7 if this value is not specified.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Expiration time of the partner authorization. If this timer expires, any request from this partner to create, update or delete resources in subscriber's
        context will fail. If specified, the allowed values are between 1 to the value of defaultMaximumExpirationTimeInDays specified in PartnerConfiguration.
        If not specified, the default value will be the value of defaultMaximumExpirationTimeInDays specified in PartnerConfiguration or 7 if this value is not specified.",
        SerializedName = @"authorizationExpirationTimeInUtc",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? AuthorizationExpirationTimeInUtc { get; set; }
        /// <summary>The partner name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The partner name.",
        SerializedName = @"partnerName",
        PossibleTypes = new [] { typeof(string) })]
        string Name { get; set; }
        /// <summary>The immutableId of the corresponding partner registration.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The immutableId of the corresponding partner registration.",
        SerializedName = @"partnerRegistrationImmutableId",
        PossibleTypes = new [] { typeof(string) })]
        string RegistrationImmutableId { get; set; }

    }
    /// Information about the partner.
    internal partial interface IPartnerInternal

    {
        /// <summary>
        /// Expiration time of the partner authorization. If this timer expires, any request from this partner to create, update or
        /// delete resources in subscriber's
        /// context will fail. If specified, the allowed values are between 1 to the value of defaultMaximumExpirationTimeInDays specified
        /// in PartnerConfiguration.
        /// If not specified, the default value will be the value of defaultMaximumExpirationTimeInDays specified in PartnerConfiguration
        /// or 7 if this value is not specified.
        /// </summary>
        global::System.DateTime? AuthorizationExpirationTimeInUtc { get; set; }
        /// <summary>The partner name.</summary>
        string Name { get; set; }
        /// <summary>The immutableId of the corresponding partner registration.</summary>
        string RegistrationImmutableId { get; set; }

    }
}