// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models
{
    using static Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Runtime.Extensions;

    public partial class EventGridIdentity :
        Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IEventGridIdentity,
        Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IEventGridIdentityInternal
    {

        /// <summary>Backing field for <see cref="CaCertificateName" /> property.</summary>
        private string _caCertificateName;

        /// <summary>Name of the CA certificate.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Origin(Microsoft.Azure.PowerShell.Cmdlets.EventGrid.PropertyOrigin.Owned)]
        public string CaCertificateName { get => this._caCertificateName; set => this._caCertificateName = value; }

        /// <summary>Backing field for <see cref="ChannelName" /> property.</summary>
        private string _channelName;

        /// <summary>Name of the channel.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Origin(Microsoft.Azure.PowerShell.Cmdlets.EventGrid.PropertyOrigin.Owned)]
        public string ChannelName { get => this._channelName; set => this._channelName = value; }

        /// <summary>Backing field for <see cref="ClientGroupName" /> property.</summary>
        private string _clientGroupName;

        /// <summary>Name of the client group.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Origin(Microsoft.Azure.PowerShell.Cmdlets.EventGrid.PropertyOrigin.Owned)]
        public string ClientGroupName { get => this._clientGroupName; set => this._clientGroupName = value; }

        /// <summary>Backing field for <see cref="ClientName" /> property.</summary>
        private string _clientName;

        /// <summary>Name of the client.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Origin(Microsoft.Azure.PowerShell.Cmdlets.EventGrid.PropertyOrigin.Owned)]
        public string ClientName { get => this._clientName; set => this._clientName = value; }

        /// <summary>Backing field for <see cref="DomainName" /> property.</summary>
        private string _domainName;

        /// <summary>Name of the domain.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Origin(Microsoft.Azure.PowerShell.Cmdlets.EventGrid.PropertyOrigin.Owned)]
        public string DomainName { get => this._domainName; set => this._domainName = value; }

        /// <summary>Backing field for <see cref="DomainTopicName" /> property.</summary>
        private string _domainTopicName;

        /// <summary>Name of the topic.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Origin(Microsoft.Azure.PowerShell.Cmdlets.EventGrid.PropertyOrigin.Owned)]
        public string DomainTopicName { get => this._domainTopicName; set => this._domainTopicName = value; }

        /// <summary>Backing field for <see cref="EventSubscriptionName" /> property.</summary>
        private string _eventSubscriptionName;

        /// <summary>Name of the event subscription.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Origin(Microsoft.Azure.PowerShell.Cmdlets.EventGrid.PropertyOrigin.Owned)]
        public string EventSubscriptionName { get => this._eventSubscriptionName; set => this._eventSubscriptionName = value; }

        /// <summary>Backing field for <see cref="Id" /> property.</summary>
        private string _id;

        /// <summary>Resource identity path</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Origin(Microsoft.Azure.PowerShell.Cmdlets.EventGrid.PropertyOrigin.Owned)]
        public string Id { get => this._id; set => this._id = value; }

        /// <summary>Backing field for <see cref="Location" /> property.</summary>
        private string _location;

        /// <summary>Name of the location.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Origin(Microsoft.Azure.PowerShell.Cmdlets.EventGrid.PropertyOrigin.Owned)]
        public string Location { get => this._location; set => this._location = value; }

        /// <summary>Backing field for <see cref="NamespaceName" /> property.</summary>
        private string _namespaceName;

        /// <summary>Name of the namespace.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Origin(Microsoft.Azure.PowerShell.Cmdlets.EventGrid.PropertyOrigin.Owned)]
        public string NamespaceName { get => this._namespaceName; set => this._namespaceName = value; }

        /// <summary>Backing field for <see cref="ParentName" /> property.</summary>
        private string _parentName;

        /// <summary>
        /// The name of the parent resource (namely, either, the topic name, domain name, or partner namespace name or namespace name).
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Origin(Microsoft.Azure.PowerShell.Cmdlets.EventGrid.PropertyOrigin.Owned)]
        public string ParentName { get => this._parentName; set => this._parentName = value; }

        /// <summary>Backing field for <see cref="ParentType" /> property.</summary>
        private string _parentType;

        /// <summary>
        /// The type of the parent resource. This can be either \'topics\', \'domains\', or \'partnerNamespaces\' or \'namespaces\'.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Origin(Microsoft.Azure.PowerShell.Cmdlets.EventGrid.PropertyOrigin.Owned)]
        public string ParentType { get => this._parentType; set => this._parentType = value; }

        /// <summary>Backing field for <see cref="PartnerDestinationName" /> property.</summary>
        private string _partnerDestinationName;

        /// <summary>Name of the partner destination.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Origin(Microsoft.Azure.PowerShell.Cmdlets.EventGrid.PropertyOrigin.Owned)]
        public string PartnerDestinationName { get => this._partnerDestinationName; set => this._partnerDestinationName = value; }

        /// <summary>Backing field for <see cref="PartnerNamespaceName" /> property.</summary>
        private string _partnerNamespaceName;

        /// <summary>Name of the partner namespace.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Origin(Microsoft.Azure.PowerShell.Cmdlets.EventGrid.PropertyOrigin.Owned)]
        public string PartnerNamespaceName { get => this._partnerNamespaceName; set => this._partnerNamespaceName = value; }

        /// <summary>Backing field for <see cref="PartnerRegistrationName" /> property.</summary>
        private string _partnerRegistrationName;

        /// <summary>Name of the partner registration.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Origin(Microsoft.Azure.PowerShell.Cmdlets.EventGrid.PropertyOrigin.Owned)]
        public string PartnerRegistrationName { get => this._partnerRegistrationName; set => this._partnerRegistrationName = value; }

        /// <summary>Backing field for <see cref="PartnerTopicName" /> property.</summary>
        private string _partnerTopicName;

        /// <summary>Name of the partner topic.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Origin(Microsoft.Azure.PowerShell.Cmdlets.EventGrid.PropertyOrigin.Owned)]
        public string PartnerTopicName { get => this._partnerTopicName; set => this._partnerTopicName = value; }

        /// <summary>Backing field for <see cref="PermissionBindingName" /> property.</summary>
        private string _permissionBindingName;

        /// <summary>Name of the permission binding.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Origin(Microsoft.Azure.PowerShell.Cmdlets.EventGrid.PropertyOrigin.Owned)]
        public string PermissionBindingName { get => this._permissionBindingName; set => this._permissionBindingName = value; }

        /// <summary>Backing field for <see cref="PrivateEndpointConnectionName" /> property.</summary>
        private string _privateEndpointConnectionName;

        /// <summary>The name of the private endpoint connection connection.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Origin(Microsoft.Azure.PowerShell.Cmdlets.EventGrid.PropertyOrigin.Owned)]
        public string PrivateEndpointConnectionName { get => this._privateEndpointConnectionName; set => this._privateEndpointConnectionName = value; }

        /// <summary>Backing field for <see cref="PrivateLinkResourceName" /> property.</summary>
        private string _privateLinkResourceName;

        /// <summary>
        /// The name of private link resource will be either topic, domain, partnerNamespace or namespace.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Origin(Microsoft.Azure.PowerShell.Cmdlets.EventGrid.PropertyOrigin.Owned)]
        public string PrivateLinkResourceName { get => this._privateLinkResourceName; set => this._privateLinkResourceName = value; }

        /// <summary>Backing field for <see cref="ProviderNamespace" /> property.</summary>
        private string _providerNamespace;

        /// <summary>Namespace of the provider of the topic.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Origin(Microsoft.Azure.PowerShell.Cmdlets.EventGrid.PropertyOrigin.Owned)]
        public string ProviderNamespace { get => this._providerNamespace; set => this._providerNamespace = value; }

        /// <summary>Backing field for <see cref="ResourceGroupName" /> property.</summary>
        private string _resourceGroupName;

        /// <summary>The name of the resource group within the user's subscription.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Origin(Microsoft.Azure.PowerShell.Cmdlets.EventGrid.PropertyOrigin.Owned)]
        public string ResourceGroupName { get => this._resourceGroupName; set => this._resourceGroupName = value; }

        /// <summary>Backing field for <see cref="ResourceName" /> property.</summary>
        private string _resourceName;

        /// <summary>Name of the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Origin(Microsoft.Azure.PowerShell.Cmdlets.EventGrid.PropertyOrigin.Owned)]
        public string ResourceName { get => this._resourceName; set => this._resourceName = value; }

        /// <summary>Backing field for <see cref="ResourceTypeName" /> property.</summary>
        private string _resourceTypeName;

        /// <summary>Name of the resource type.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Origin(Microsoft.Azure.PowerShell.Cmdlets.EventGrid.PropertyOrigin.Owned)]
        public string ResourceTypeName { get => this._resourceTypeName; set => this._resourceTypeName = value; }

        /// <summary>Backing field for <see cref="Scope" /> property.</summary>
        private string _scope;

        /// <summary>
        /// The scope of the event subscription. The scope can be a subscription, or a resource group, or a top level resource belonging
        /// to a resource provider namespace, or an EventGrid topic. For example, use '/subscriptions/{subscriptionId}/' for a subscription,
        /// '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}' for a resource group, and '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}'
        /// for a resource, and '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/topics/{topicName}'
        /// for an EventGrid topic.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Origin(Microsoft.Azure.PowerShell.Cmdlets.EventGrid.PropertyOrigin.Owned)]
        public string Scope { get => this._scope; set => this._scope = value; }

        /// <summary>Backing field for <see cref="SubscriptionId" /> property.</summary>
        private string _subscriptionId;

        /// <summary>
        /// Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the
        /// URI for every service call.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Origin(Microsoft.Azure.PowerShell.Cmdlets.EventGrid.PropertyOrigin.Owned)]
        public string SubscriptionId { get => this._subscriptionId; set => this._subscriptionId = value; }

        /// <summary>Backing field for <see cref="SystemTopicName" /> property.</summary>
        private string _systemTopicName;

        /// <summary>Name of the system topic.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Origin(Microsoft.Azure.PowerShell.Cmdlets.EventGrid.PropertyOrigin.Owned)]
        public string SystemTopicName { get => this._systemTopicName; set => this._systemTopicName = value; }

        /// <summary>Backing field for <see cref="TopicName" /> property.</summary>
        private string _topicName;

        /// <summary>Name of the domain topic.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Origin(Microsoft.Azure.PowerShell.Cmdlets.EventGrid.PropertyOrigin.Owned)]
        public string TopicName { get => this._topicName; set => this._topicName = value; }

        /// <summary>Backing field for <see cref="TopicSpaceName" /> property.</summary>
        private string _topicSpaceName;

        /// <summary>Name of the Topic space.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Origin(Microsoft.Azure.PowerShell.Cmdlets.EventGrid.PropertyOrigin.Owned)]
        public string TopicSpaceName { get => this._topicSpaceName; set => this._topicSpaceName = value; }

        /// <summary>Backing field for <see cref="TopicTypeName" /> property.</summary>
        private string _topicTypeName;

        /// <summary>Name of the topic type.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Origin(Microsoft.Azure.PowerShell.Cmdlets.EventGrid.PropertyOrigin.Owned)]
        public string TopicTypeName { get => this._topicTypeName; set => this._topicTypeName = value; }

        /// <summary>Backing field for <see cref="VerifiedPartnerName" /> property.</summary>
        private string _verifiedPartnerName;

        /// <summary>Name of the verified partner.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Origin(Microsoft.Azure.PowerShell.Cmdlets.EventGrid.PropertyOrigin.Owned)]
        public string VerifiedPartnerName { get => this._verifiedPartnerName; set => this._verifiedPartnerName = value; }

        /// <summary>Creates an new <see cref="EventGridIdentity" /> instance.</summary>
        public EventGridIdentity()
        {

        }
    }
    public partial interface IEventGridIdentity :
        Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Runtime.IJsonSerializable
    {
        /// <summary>Name of the CA certificate.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Name of the CA certificate.",
        SerializedName = @"caCertificateName",
        PossibleTypes = new [] { typeof(string) })]
        string CaCertificateName { get; set; }
        /// <summary>Name of the channel.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Name of the channel.",
        SerializedName = @"channelName",
        PossibleTypes = new [] { typeof(string) })]
        string ChannelName { get; set; }
        /// <summary>Name of the client group.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Name of the client group.",
        SerializedName = @"clientGroupName",
        PossibleTypes = new [] { typeof(string) })]
        string ClientGroupName { get; set; }
        /// <summary>Name of the client.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Name of the client.",
        SerializedName = @"clientName",
        PossibleTypes = new [] { typeof(string) })]
        string ClientName { get; set; }
        /// <summary>Name of the domain.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Name of the domain.",
        SerializedName = @"domainName",
        PossibleTypes = new [] { typeof(string) })]
        string DomainName { get; set; }
        /// <summary>Name of the topic.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Name of the topic.",
        SerializedName = @"domainTopicName",
        PossibleTypes = new [] { typeof(string) })]
        string DomainTopicName { get; set; }
        /// <summary>Name of the event subscription.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Name of the event subscription.",
        SerializedName = @"eventSubscriptionName",
        PossibleTypes = new [] { typeof(string) })]
        string EventSubscriptionName { get; set; }
        /// <summary>Resource identity path</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Resource identity path",
        SerializedName = @"id",
        PossibleTypes = new [] { typeof(string) })]
        string Id { get; set; }
        /// <summary>Name of the location.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Name of the location.",
        SerializedName = @"location",
        PossibleTypes = new [] { typeof(string) })]
        string Location { get; set; }
        /// <summary>Name of the namespace.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Name of the namespace.",
        SerializedName = @"namespaceName",
        PossibleTypes = new [] { typeof(string) })]
        string NamespaceName { get; set; }
        /// <summary>
        /// The name of the parent resource (namely, either, the topic name, domain name, or partner namespace name or namespace name).
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The name of the parent resource (namely, either, the topic name, domain name, or partner namespace name or namespace name).",
        SerializedName = @"parentName",
        PossibleTypes = new [] { typeof(string) })]
        string ParentName { get; set; }
        /// <summary>
        /// The type of the parent resource. This can be either \'topics\', \'domains\', or \'partnerNamespaces\' or \'namespaces\'.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The type of the parent resource. This can be either \'topics\', \'domains\', or \'partnerNamespaces\' or \'namespaces\'.",
        SerializedName = @"parentType",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.EventGrid.PSArgumentCompleterAttribute("topics", "domains", "partnerNamespaces", "namespaces")]
        string ParentType { get; set; }
        /// <summary>Name of the partner destination.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Name of the partner destination.",
        SerializedName = @"partnerDestinationName",
        PossibleTypes = new [] { typeof(string) })]
        string PartnerDestinationName { get; set; }
        /// <summary>Name of the partner namespace.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Name of the partner namespace.",
        SerializedName = @"partnerNamespaceName",
        PossibleTypes = new [] { typeof(string) })]
        string PartnerNamespaceName { get; set; }
        /// <summary>Name of the partner registration.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Name of the partner registration.",
        SerializedName = @"partnerRegistrationName",
        PossibleTypes = new [] { typeof(string) })]
        string PartnerRegistrationName { get; set; }
        /// <summary>Name of the partner topic.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Name of the partner topic.",
        SerializedName = @"partnerTopicName",
        PossibleTypes = new [] { typeof(string) })]
        string PartnerTopicName { get; set; }
        /// <summary>Name of the permission binding.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Name of the permission binding.",
        SerializedName = @"permissionBindingName",
        PossibleTypes = new [] { typeof(string) })]
        string PermissionBindingName { get; set; }
        /// <summary>The name of the private endpoint connection connection.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The name of the private endpoint connection connection.",
        SerializedName = @"privateEndpointConnectionName",
        PossibleTypes = new [] { typeof(string) })]
        string PrivateEndpointConnectionName { get; set; }
        /// <summary>
        /// The name of private link resource will be either topic, domain, partnerNamespace or namespace.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The name of private link resource will be either topic, domain, partnerNamespace or namespace.",
        SerializedName = @"privateLinkResourceName",
        PossibleTypes = new [] { typeof(string) })]
        string PrivateLinkResourceName { get; set; }
        /// <summary>Namespace of the provider of the topic.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Namespace of the provider of the topic.",
        SerializedName = @"providerNamespace",
        PossibleTypes = new [] { typeof(string) })]
        string ProviderNamespace { get; set; }
        /// <summary>The name of the resource group within the user's subscription.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The name of the resource group within the user's subscription.",
        SerializedName = @"resourceGroupName",
        PossibleTypes = new [] { typeof(string) })]
        string ResourceGroupName { get; set; }
        /// <summary>Name of the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Name of the resource.",
        SerializedName = @"resourceName",
        PossibleTypes = new [] { typeof(string) })]
        string ResourceName { get; set; }
        /// <summary>Name of the resource type.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Name of the resource type.",
        SerializedName = @"resourceTypeName",
        PossibleTypes = new [] { typeof(string) })]
        string ResourceTypeName { get; set; }
        /// <summary>
        /// The scope of the event subscription. The scope can be a subscription, or a resource group, or a top level resource belonging
        /// to a resource provider namespace, or an EventGrid topic. For example, use '/subscriptions/{subscriptionId}/' for a subscription,
        /// '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}' for a resource group, and '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}'
        /// for a resource, and '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/topics/{topicName}'
        /// for an EventGrid topic.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The scope of the event subscription. The scope can be a subscription, or a resource group, or a top level resource belonging to a resource provider namespace, or an EventGrid topic. For example, use '/subscriptions/{subscriptionId}/' for a subscription, '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}' for a resource group, and '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}' for a resource, and '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/topics/{topicName}' for an EventGrid topic.",
        SerializedName = @"scope",
        PossibleTypes = new [] { typeof(string) })]
        string Scope { get; set; }
        /// <summary>
        /// Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the
        /// URI for every service call.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
        SerializedName = @"subscriptionId",
        PossibleTypes = new [] { typeof(string) })]
        string SubscriptionId { get; set; }
        /// <summary>Name of the system topic.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Name of the system topic.",
        SerializedName = @"systemTopicName",
        PossibleTypes = new [] { typeof(string) })]
        string SystemTopicName { get; set; }
        /// <summary>Name of the domain topic.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Name of the domain topic.",
        SerializedName = @"topicName",
        PossibleTypes = new [] { typeof(string) })]
        string TopicName { get; set; }
        /// <summary>Name of the Topic space.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Name of the Topic space.",
        SerializedName = @"topicSpaceName",
        PossibleTypes = new [] { typeof(string) })]
        string TopicSpaceName { get; set; }
        /// <summary>Name of the topic type.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Name of the topic type.",
        SerializedName = @"topicTypeName",
        PossibleTypes = new [] { typeof(string) })]
        string TopicTypeName { get; set; }
        /// <summary>Name of the verified partner.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Name of the verified partner.",
        SerializedName = @"verifiedPartnerName",
        PossibleTypes = new [] { typeof(string) })]
        string VerifiedPartnerName { get; set; }

    }
    internal partial interface IEventGridIdentityInternal

    {
        /// <summary>Name of the CA certificate.</summary>
        string CaCertificateName { get; set; }
        /// <summary>Name of the channel.</summary>
        string ChannelName { get; set; }
        /// <summary>Name of the client group.</summary>
        string ClientGroupName { get; set; }
        /// <summary>Name of the client.</summary>
        string ClientName { get; set; }
        /// <summary>Name of the domain.</summary>
        string DomainName { get; set; }
        /// <summary>Name of the topic.</summary>
        string DomainTopicName { get; set; }
        /// <summary>Name of the event subscription.</summary>
        string EventSubscriptionName { get; set; }
        /// <summary>Resource identity path</summary>
        string Id { get; set; }
        /// <summary>Name of the location.</summary>
        string Location { get; set; }
        /// <summary>Name of the namespace.</summary>
        string NamespaceName { get; set; }
        /// <summary>
        /// The name of the parent resource (namely, either, the topic name, domain name, or partner namespace name or namespace name).
        /// </summary>
        string ParentName { get; set; }
        /// <summary>
        /// The type of the parent resource. This can be either \'topics\', \'domains\', or \'partnerNamespaces\' or \'namespaces\'.
        /// </summary>
        [global::Microsoft.Azure.PowerShell.Cmdlets.EventGrid.PSArgumentCompleterAttribute("topics", "domains", "partnerNamespaces", "namespaces")]
        string ParentType { get; set; }
        /// <summary>Name of the partner destination.</summary>
        string PartnerDestinationName { get; set; }
        /// <summary>Name of the partner namespace.</summary>
        string PartnerNamespaceName { get; set; }
        /// <summary>Name of the partner registration.</summary>
        string PartnerRegistrationName { get; set; }
        /// <summary>Name of the partner topic.</summary>
        string PartnerTopicName { get; set; }
        /// <summary>Name of the permission binding.</summary>
        string PermissionBindingName { get; set; }
        /// <summary>The name of the private endpoint connection connection.</summary>
        string PrivateEndpointConnectionName { get; set; }
        /// <summary>
        /// The name of private link resource will be either topic, domain, partnerNamespace or namespace.
        /// </summary>
        string PrivateLinkResourceName { get; set; }
        /// <summary>Namespace of the provider of the topic.</summary>
        string ProviderNamespace { get; set; }
        /// <summary>The name of the resource group within the user's subscription.</summary>
        string ResourceGroupName { get; set; }
        /// <summary>Name of the resource.</summary>
        string ResourceName { get; set; }
        /// <summary>Name of the resource type.</summary>
        string ResourceTypeName { get; set; }
        /// <summary>
        /// The scope of the event subscription. The scope can be a subscription, or a resource group, or a top level resource belonging
        /// to a resource provider namespace, or an EventGrid topic. For example, use '/subscriptions/{subscriptionId}/' for a subscription,
        /// '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}' for a resource group, and '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}'
        /// for a resource, and '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/topics/{topicName}'
        /// for an EventGrid topic.
        /// </summary>
        string Scope { get; set; }
        /// <summary>
        /// Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the
        /// URI for every service call.
        /// </summary>
        string SubscriptionId { get; set; }
        /// <summary>Name of the system topic.</summary>
        string SystemTopicName { get; set; }
        /// <summary>Name of the domain topic.</summary>
        string TopicName { get; set; }
        /// <summary>Name of the Topic space.</summary>
        string TopicSpaceName { get; set; }
        /// <summary>Name of the topic type.</summary>
        string TopicTypeName { get; set; }
        /// <summary>Name of the verified partner.</summary>
        string VerifiedPartnerName { get; set; }

    }
}