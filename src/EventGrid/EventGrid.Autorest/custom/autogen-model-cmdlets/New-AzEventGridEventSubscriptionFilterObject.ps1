
# ----------------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# http://www.apache.org/licenses/LICENSE-2.0
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# Code generated by Microsoft (R) AutoRest Code Generator.Changes may cause incorrect behavior and will be lost if the code
# is regenerated.
# ----------------------------------------------------------------------------------

<#
.Synopsis
Create an in-memory object for EventSubscriptionFilter.
.Description
Create an in-memory object for EventSubscriptionFilter.

.Outputs
Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.EventSubscriptionFilter
.Link
https://learn.microsoft.com/powershell/module/Az.EventGrid/new-azeventgrideventsubscriptionfilterobject
#>
function New-AzEventGridEventSubscriptionFilterObject {
    [OutputType('Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.EventSubscriptionFilter')]
    [CmdletBinding(PositionalBinding=$false)]
    Param(

        [Parameter(HelpMessage="An array of advanced filters that are used for filtering event subscriptions.")]
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IAdvancedFilter[]]
        $AdvancedFilter,
        [Parameter(HelpMessage="Allows advanced filters to be evaluated against an array of values instead of expecting a singular value.")]
        [bool]
        $EnableAdvancedFilteringOnArray,
        [Parameter(HelpMessage="A list of applicable event types that need to be part of the event subscription. If it is desired to subscribe to all default event types, set the IncludedEventTypes to null.")]
        [string[]]
        $IncludedEventType,
        [Parameter(HelpMessage="Specifies if the SubjectBeginsWith and SubjectEndsWith properties of the filter
        should be compared in a case sensitive manner.")]
        [bool]
        $IsSubjectCaseSensitive,
        [Parameter(HelpMessage="An optional string to filter events for an event subscription based on a resource path prefix.
        The format of this depends on the publisher of the events.
        Wildcard characters are not supported in this path.")]
        [string]
        $SubjectBeginsWith,
        [Parameter(HelpMessage="An optional string to filter events for an event subscription based on a resource path suffix.
        Wildcard characters are not supported in this path.")]
        [string]
        $SubjectEndsWith
    )

    process {
        $Object = [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.EventSubscriptionFilter]::New()

        if ($PSBoundParameters.ContainsKey('AdvancedFilter')) {
            $Object.AdvancedFilter = $AdvancedFilter
        }
        if ($PSBoundParameters.ContainsKey('EnableAdvancedFilteringOnArray')) {
            $Object.EnableAdvancedFilteringOnArray = $EnableAdvancedFilteringOnArray
        }
        if ($PSBoundParameters.ContainsKey('IncludedEventType')) {
            $Object.IncludedEventType = $IncludedEventType
        }
        if ($PSBoundParameters.ContainsKey('IsSubjectCaseSensitive')) {
            $Object.IsSubjectCaseSensitive = $IsSubjectCaseSensitive
        }
        if ($PSBoundParameters.ContainsKey('SubjectBeginsWith')) {
            $Object.SubjectBeginsWith = $SubjectBeginsWith
        }
        if ($PSBoundParameters.ContainsKey('SubjectEndsWith')) {
            $Object.SubjectEndsWith = $SubjectEndsWith
        }
        return $Object
    }
}

