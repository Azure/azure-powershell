// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.HDInsight.Models
{
    using System.Linq;

    /// <summary>
    /// The private endpoint connection.
    /// </summary>
    [Microsoft.Rest.Serialization.JsonTransformation]
    public partial class PrivateEndpointConnection : Resource
    {
        /// <summary>
        /// Initializes a new instance of the PrivateEndpointConnection class.
        /// </summary>
        public PrivateEndpointConnection()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the PrivateEndpointConnection class.
        /// </summary>

        /// <param name="id">Fully qualified resource ID for the resource. Ex -
        /// /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        /// </param>

        /// <param name="name">The name of the resource
        /// </param>

        /// <param name="type">The type of the resource. E.g. &#34;Microsoft.Compute/virtualMachines&#34; or
        /// &#34;Microsoft.Storage/storageAccounts&#34;
        /// </param>

        /// <param name="systemData">Metadata pertaining to creation and last modification of the resource.
        /// </param>

        /// <param name="privateEndpoint">The private endpoint of the private endpoint connection
        /// </param>

        /// <param name="privateLinkServiceConnectionState">The private link service connection state.
        /// </param>

        /// <param name="linkIdentifier">The link identifier.
        /// </param>

        /// <param name="provisioningState">The provisioning state, which only appears in the response.
        /// Possible values include: &#39;InProgress&#39;, &#39;Updating&#39;, &#39;Failed&#39;, &#39;Succeeded&#39;,
        /// &#39;Canceled&#39;, &#39;Deleting&#39;</param>
        public PrivateEndpointConnection(PrivateLinkServiceConnectionState privateLinkServiceConnectionState, string id = default(string), string name = default(string), string type = default(string), SystemData systemData = default(SystemData), PrivateEndpoint privateEndpoint = default(PrivateEndpoint), string linkIdentifier = default(string), string provisioningState = default(string))

        : base(id, name, type)
        {
            this.SystemData = systemData;
            this.PrivateEndpoint = privateEndpoint;
            this.PrivateLinkServiceConnectionState = privateLinkServiceConnectionState;
            this.LinkIdentifier = linkIdentifier;
            this.ProvisioningState = provisioningState;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets metadata pertaining to creation and last modification of the resource.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "systemData")]
        public SystemData SystemData {get; private set; }

        /// <summary>
        /// Gets the private endpoint of the private endpoint connection
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.privateEndpoint")]
        public PrivateEndpoint PrivateEndpoint {get; private set; }

        /// <summary>
        /// Gets or sets the private link service connection state.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.privateLinkServiceConnectionState")]
        public PrivateLinkServiceConnectionState PrivateLinkServiceConnectionState {get; set; }

        /// <summary>
        /// Gets the link identifier.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.linkIdentifier")]
        public string LinkIdentifier {get; private set; }

        /// <summary>
        /// Gets the provisioning state, which only appears in the response. Possible values include: &#39;InProgress&#39;, &#39;Updating&#39;, &#39;Failed&#39;, &#39;Succeeded&#39;, &#39;Canceled&#39;, &#39;Deleting&#39;
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.provisioningState")]
        public string ProvisioningState {get; private set; }
        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (this.PrivateLinkServiceConnectionState == null)
            {
                throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.CannotBeNull, "PrivateLinkServiceConnectionState");
            }


            if (this.PrivateLinkServiceConnectionState != null)
            {
                this.PrivateLinkServiceConnectionState.Validate();
            }


        }
    }
}