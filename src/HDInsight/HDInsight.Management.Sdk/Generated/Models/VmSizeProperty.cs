// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.HDInsight.Models
{
    using System.Linq;

    /// <summary>
    /// The vm size property
    /// </summary>
    public partial class VmSizeProperty
    {
        /// <summary>
        /// Initializes a new instance of the VmSizeProperty class.
        /// </summary>
        public VmSizeProperty()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the VmSizeProperty class.
        /// </summary>

        /// <param name="name">The vm size name.
        /// </param>

        /// <param name="cores">The number of cores that the vm size has.
        /// </param>

        /// <param name="dataDiskStorageTier">The data disk storage tier of the vm size.
        /// </param>

        /// <param name="label">The label of the vm size.
        /// </param>

        /// <param name="maxDataDiskCount">The max data disk count of the vm size.
        /// </param>

        /// <param name="memoryInMb">The memory whose unit is MB of the vm size.
        /// </param>

        /// <param name="supportedByVirtualMachines">This indicates this vm size is supported by virtual machines or not
        /// </param>

        /// <param name="supportedByWebWorkerRoles">The indicates this vm size is supported by web worker roles or not
        /// </param>

        /// <param name="virtualMachineResourceDiskSizeInMb">The virtual machine resource disk size whose unit is MB of the vm size.
        /// </param>

        /// <param name="webWorkerResourceDiskSizeInMb">The web worker resource disk size whose unit is MB of the vm size.
        /// </param>
        public VmSizeProperty(string name = default(string), int? cores = default(int?), string dataDiskStorageTier = default(string), string label = default(string), long? maxDataDiskCount = default(long?), long? memoryInMb = default(long?), bool? supportedByVirtualMachines = default(bool?), bool? supportedByWebWorkerRoles = default(bool?), long? virtualMachineResourceDiskSizeInMb = default(long?), long? webWorkerResourceDiskSizeInMb = default(long?))

        {
            this.Name = name;
            this.Cores = cores;
            this.DataDiskStorageTier = dataDiskStorageTier;
            this.Label = label;
            this.MaxDataDiskCount = maxDataDiskCount;
            this.MemoryInMb = memoryInMb;
            this.SupportedByVirtualMachines = supportedByVirtualMachines;
            this.SupportedByWebWorkerRoles = supportedByWebWorkerRoles;
            this.VirtualMachineResourceDiskSizeInMb = virtualMachineResourceDiskSizeInMb;
            this.WebWorkerResourceDiskSizeInMb = webWorkerResourceDiskSizeInMb;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets or sets the vm size name.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "name")]
        public string Name {get; set; }

        /// <summary>
        /// Gets or sets the number of cores that the vm size has.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "cores")]
        public int? Cores {get; set; }

        /// <summary>
        /// Gets or sets the data disk storage tier of the vm size.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "dataDiskStorageTier")]
        public string DataDiskStorageTier {get; set; }

        /// <summary>
        /// Gets or sets the label of the vm size.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "label")]
        public string Label {get; set; }

        /// <summary>
        /// Gets or sets the max data disk count of the vm size.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "maxDataDiskCount")]
        public long? MaxDataDiskCount {get; set; }

        /// <summary>
        /// Gets or sets the memory whose unit is MB of the vm size.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "memoryInMb")]
        public long? MemoryInMb {get; set; }

        /// <summary>
        /// Gets or sets this indicates this vm size is supported by virtual machines
        /// or not
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "supportedByVirtualMachines")]
        public bool? SupportedByVirtualMachines {get; set; }

        /// <summary>
        /// Gets or sets the indicates this vm size is supported by web worker roles or
        /// not
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "supportedByWebWorkerRoles")]
        public bool? SupportedByWebWorkerRoles {get; set; }

        /// <summary>
        /// Gets or sets the virtual machine resource disk size whose unit is MB of the
        /// vm size.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "virtualMachineResourceDiskSizeInMb")]
        public long? VirtualMachineResourceDiskSizeInMb {get; set; }

        /// <summary>
        /// Gets or sets the web worker resource disk size whose unit is MB of the vm
        /// size.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "webWorkerResourceDiskSizeInMb")]
        public long? WebWorkerResourceDiskSizeInMb {get; set; }
    }
}