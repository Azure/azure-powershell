// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.HDInsight.Models
{
    using System.Linq;

    /// <summary>
    /// The private link configuration.
    /// </summary>
    [Microsoft.Rest.Serialization.JsonTransformation]
    public partial class PrivateLinkConfiguration
    {
        /// <summary>
        /// Initializes a new instance of the PrivateLinkConfiguration class.
        /// </summary>
        public PrivateLinkConfiguration()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the PrivateLinkConfiguration class.
        /// </summary>

        /// <param name="id">The private link configuration id.
        /// </param>

        /// <param name="name">The name of private link configuration.
        /// </param>

        /// <param name="type">The type of the private link configuration.
        /// </param>

        /// <param name="groupId">The HDInsight private linkable sub-resource name to apply the private link
        /// configuration to. For example, &#39;headnode&#39;, &#39;gateway&#39;, &#39;edgenode&#39;.
        /// </param>

        /// <param name="provisioningState">The private link configuration provisioning state, which only appears in
        /// the response.
        /// Possible values include: &#39;InProgress&#39;, &#39;Failed&#39;, &#39;Succeeded&#39;, &#39;Canceled&#39;,
        /// &#39;Deleting&#39;</param>

        /// <param name="ipConfigurations">The IP configurations for the private link service.
        /// </param>
        public PrivateLinkConfiguration(string name, string groupId, System.Collections.Generic.IList<IPConfiguration> ipConfigurations, string id = default(string), string type = default(string), string provisioningState = default(string))

        {
            this.Id = id;
            this.Name = name;
            this.Type = type;
            this.GroupId = groupId;
            this.ProvisioningState = provisioningState;
            this.IPConfigurations = ipConfigurations;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets the private link configuration id.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "id")]
        public string Id {get; private set; }

        /// <summary>
        /// Gets or sets the name of private link configuration.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "name")]
        public string Name {get; set; }

        /// <summary>
        /// Gets the type of the private link configuration.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "type")]
        public string Type {get; private set; }

        /// <summary>
        /// Gets or sets the HDInsight private linkable sub-resource name to apply the
        /// private link configuration to. For example, &#39;headnode&#39;, &#39;gateway&#39;,
        /// &#39;edgenode&#39;.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.groupId")]
        public string GroupId {get; set; }

        /// <summary>
        /// Gets the private link configuration provisioning state, which only appears
        /// in the response. Possible values include: &#39;InProgress&#39;, &#39;Failed&#39;, &#39;Succeeded&#39;, &#39;Canceled&#39;, &#39;Deleting&#39;
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.provisioningState")]
        public string ProvisioningState {get; private set; }

        /// <summary>
        /// Gets or sets the IP configurations for the private link service.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.ipConfigurations")]
        public System.Collections.Generic.IList<IPConfiguration> IPConfigurations {get; set; }
        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (this.Name == null)
            {
                throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.CannotBeNull, "Name");
            }
            if (this.GroupId == null)
            {
                throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.CannotBeNull, "GroupId");
            }
            if (this.IPConfigurations == null)
            {
                throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.CannotBeNull, "IPConfigurations");
            }





            if (this.IPConfigurations != null)
            {
                foreach (var element in this.IPConfigurations)
                {
                    if (element != null)
                    {
                        element.Validate();
                    }
                }
            }
        }
    }
}