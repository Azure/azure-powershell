// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.HDInsight.Models
{
    using System.Linq;

    /// <summary>
    /// Describes a role on the cluster.
    /// </summary>
    public partial class Role
    {
        /// <summary>
        /// Initializes a new instance of the Role class.
        /// </summary>
        public Role()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the Role class.
        /// </summary>

        /// <param name="name">The name of the role.
        /// </param>

        /// <param name="minInstanceCount">The minimum instance count of the cluster.
        /// </param>

        /// <param name="targetInstanceCount">The instance count of the cluster.
        /// </param>

        /// <param name="vmGroupName">The name of the virtual machine group.
        /// </param>

        /// <param name="autoscaleConfiguration">The autoscale configurations.
        /// </param>

        /// <param name="hardwareProfile">The hardware profile.
        /// </param>

        /// <param name="osProfile">The operating system profile.
        /// </param>

        /// <param name="virtualNetworkProfile">The virtual network profile.
        /// </param>

        /// <param name="dataDisksGroups">The data disks groups for the role.
        /// </param>

        /// <param name="scriptActions">The list of script actions on the role.
        /// </param>

        /// <param name="encryptDataDisks">Indicates whether encrypt the data disks.
        /// </param>
        public Role(string name = default(string), int? minInstanceCount = default(int?), int? targetInstanceCount = default(int?), string vmGroupName = default(string), Autoscale autoscaleConfiguration = default(Autoscale), HardwareProfile hardwareProfile = default(HardwareProfile), OsProfile osProfile = default(OsProfile), VirtualNetworkProfile virtualNetworkProfile = default(VirtualNetworkProfile), System.Collections.Generic.IList<DataDisksGroups> dataDisksGroups = default(System.Collections.Generic.IList<DataDisksGroups>), System.Collections.Generic.IList<ScriptAction> scriptActions = default(System.Collections.Generic.IList<ScriptAction>), bool? encryptDataDisks = default(bool?))

        {
            this.Name = name;
            this.MinInstanceCount = minInstanceCount;
            this.TargetInstanceCount = targetInstanceCount;
            this.VMGroupName = vmGroupName;
            this.AutoscaleConfiguration = autoscaleConfiguration;
            this.HardwareProfile = hardwareProfile;
            this.OsProfile = osProfile;
            this.VirtualNetworkProfile = virtualNetworkProfile;
            this.DataDisksGroups = dataDisksGroups;
            this.ScriptActions = scriptActions;
            this.EncryptDataDisks = encryptDataDisks;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets or sets the name of the role.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "name")]
        public string Name {get; set; }

        /// <summary>
        /// Gets or sets the minimum instance count of the cluster.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "minInstanceCount")]
        public int? MinInstanceCount {get; set; }

        /// <summary>
        /// Gets or sets the instance count of the cluster.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "targetInstanceCount")]
        public int? TargetInstanceCount {get; set; }

        /// <summary>
        /// Gets or sets the name of the virtual machine group.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "VMGroupName")]
        public string VMGroupName {get; set; }

        /// <summary>
        /// Gets or sets the autoscale configurations.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "autoscale")]
        public Autoscale AutoscaleConfiguration {get; set; }

        /// <summary>
        /// Gets or sets the hardware profile.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "hardwareProfile")]
        public HardwareProfile HardwareProfile {get; set; }

        /// <summary>
        /// Gets or sets the operating system profile.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "osProfile")]
        public OsProfile OsProfile {get; set; }

        /// <summary>
        /// Gets or sets the virtual network profile.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "virtualNetworkProfile")]
        public VirtualNetworkProfile VirtualNetworkProfile {get; set; }

        /// <summary>
        /// Gets or sets the data disks groups for the role.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "dataDisksGroups")]
        public System.Collections.Generic.IList<DataDisksGroups> DataDisksGroups {get; set; }

        /// <summary>
        /// Gets or sets the list of script actions on the role.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "scriptActions")]
        public System.Collections.Generic.IList<ScriptAction> ScriptActions {get; set; }

        /// <summary>
        /// Gets or sets indicates whether encrypt the data disks.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "encryptDataDisks")]
        public bool? EncryptDataDisks {get; set; }
    }
}