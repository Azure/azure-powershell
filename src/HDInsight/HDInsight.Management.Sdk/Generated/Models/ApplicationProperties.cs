// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.HDInsight.Models
{
    using System.Linq;

    /// <summary>
    /// The HDInsight cluster application GET response.
    /// </summary>
    public partial class ApplicationProperties
    {
        /// <summary>
        /// Initializes a new instance of the ApplicationProperties class.
        /// </summary>
        public ApplicationProperties()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the ApplicationProperties class.
        /// </summary>

        /// <param name="computeProfile">The list of roles in the cluster.
        /// </param>

        /// <param name="installScriptActions">The list of install script actions.
        /// </param>

        /// <param name="uninstallScriptActions">The list of uninstall script actions.
        /// </param>

        /// <param name="httpsEndpoints">The list of application HTTPS endpoints.
        /// </param>

        /// <param name="sshEndpoints">The list of application SSH endpoints.
        /// </param>

        /// <param name="provisioningState">The provisioning state of the application.
        /// </param>

        /// <param name="applicationType">The application type.
        /// </param>

        /// <param name="applicationState">The application state.
        /// </param>

        /// <param name="errors">The list of errors.
        /// </param>

        /// <param name="createdDate">The application create date time.
        /// </param>

        /// <param name="marketplaceIdentifier">The marketplace identifier.
        /// </param>

        /// <param name="privateLinkConfigurations">The private link configurations.
        /// </param>
        public ApplicationProperties(ComputeProfile computeProfile = default(ComputeProfile), System.Collections.Generic.IList<RuntimeScriptAction> installScriptActions = default(System.Collections.Generic.IList<RuntimeScriptAction>), System.Collections.Generic.IList<RuntimeScriptAction> uninstallScriptActions = default(System.Collections.Generic.IList<RuntimeScriptAction>), System.Collections.Generic.IList<ApplicationGetHttpsEndpoint> httpsEndpoints = default(System.Collections.Generic.IList<ApplicationGetHttpsEndpoint>), System.Collections.Generic.IList<ApplicationGetEndpoint> sshEndpoints = default(System.Collections.Generic.IList<ApplicationGetEndpoint>), string provisioningState = default(string), string applicationType = default(string), string applicationState = default(string), System.Collections.Generic.IList<Errors> errors = default(System.Collections.Generic.IList<Errors>), string createdDate = default(string), string marketplaceIdentifier = default(string), System.Collections.Generic.IList<PrivateLinkConfiguration> privateLinkConfigurations = default(System.Collections.Generic.IList<PrivateLinkConfiguration>))

        {
            this.ComputeProfile = computeProfile;
            this.InstallScriptActions = installScriptActions;
            this.UninstallScriptActions = uninstallScriptActions;
            this.HttpsEndpoints = httpsEndpoints;
            this.SshEndpoints = sshEndpoints;
            this.ProvisioningState = provisioningState;
            this.ApplicationType = applicationType;
            this.ApplicationState = applicationState;
            this.Errors = errors;
            this.CreatedDate = createdDate;
            this.MarketplaceIdentifier = marketplaceIdentifier;
            this.PrivateLinkConfigurations = privateLinkConfigurations;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets or sets the list of roles in the cluster.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "computeProfile")]
        public ComputeProfile ComputeProfile {get; set; }

        /// <summary>
        /// Gets or sets the list of install script actions.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "installScriptActions")]
        public System.Collections.Generic.IList<RuntimeScriptAction> InstallScriptActions {get; set; }

        /// <summary>
        /// Gets or sets the list of uninstall script actions.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "uninstallScriptActions")]
        public System.Collections.Generic.IList<RuntimeScriptAction> UninstallScriptActions {get; set; }

        /// <summary>
        /// Gets or sets the list of application HTTPS endpoints.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "httpsEndpoints")]
        public System.Collections.Generic.IList<ApplicationGetHttpsEndpoint> HttpsEndpoints {get; set; }

        /// <summary>
        /// Gets or sets the list of application SSH endpoints.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "sshEndpoints")]
        public System.Collections.Generic.IList<ApplicationGetEndpoint> SshEndpoints {get; set; }

        /// <summary>
        /// Gets the provisioning state of the application.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "provisioningState")]
        public string ProvisioningState {get; private set; }

        /// <summary>
        /// Gets or sets the application type.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "applicationType")]
        public string ApplicationType {get; set; }

        /// <summary>
        /// Gets the application state.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "applicationState")]
        public string ApplicationState {get; private set; }

        /// <summary>
        /// Gets or sets the list of errors.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "errors")]
        public System.Collections.Generic.IList<Errors> Errors {get; set; }

        /// <summary>
        /// Gets the application create date time.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "createdDate")]
        public string CreatedDate {get; private set; }

        /// <summary>
        /// Gets the marketplace identifier.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "marketplaceIdentifier")]
        public string MarketplaceIdentifier {get; private set; }

        /// <summary>
        /// Gets or sets the private link configurations.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "privateLinkConfigurations")]
        public System.Collections.Generic.IList<PrivateLinkConfiguration> PrivateLinkConfigurations {get; set; }
    }
}