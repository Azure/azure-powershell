// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.ManagementPartner.Models
{
    using System.Linq;

    /// <summary>
    /// this is the management partner properties
    /// </summary>
    [Microsoft.Rest.Serialization.JsonTransformation]
    public partial class PartnerProperties
    {
        /// <summary>
        /// Initializes a new instance of the PartnerProperties class.
        /// </summary>
        public PartnerProperties()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the PartnerProperties class.
        /// </summary>

        /// <param name="partnerId">This is the partner id
        /// </param>

        /// <param name="partnerName">This is the partner name
        /// </param>

        /// <param name="tenantId">This is the tenant id.
        /// </param>

        /// <param name="objectId">This is the object id.
        /// </param>

        /// <param name="version">This is the version.
        /// </param>

        /// <param name="updatedTime">This is the DateTime when the partner was updated.
        /// </param>

        /// <param name="createdTime">This is the DateTime when the partner was created.
        /// </param>

        /// <param name="state">This is the partner state
        /// Possible values include: &#39;Active&#39;, &#39;Deleted&#39;</param>
        public PartnerProperties(string partnerId = default(string), string partnerName = default(string), string tenantId = default(string), string objectId = default(string), int? version = default(int?), System.DateTime? updatedTime = default(System.DateTime?), System.DateTime? createdTime = default(System.DateTime?), string state = default(string))

        {
            this.PartnerId = partnerId;
            this.PartnerName = partnerName;
            this.TenantId = tenantId;
            this.ObjectId = objectId;
            this.Version = version;
            this.UpdatedTime = updatedTime;
            this.CreatedTime = createdTime;
            this.State = state;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets or sets this is the partner id
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "partnerId")]
        public string PartnerId {get; set; }

        /// <summary>
        /// Gets or sets this is the partner name
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "partnerName")]
        public string PartnerName {get; set; }

        /// <summary>
        /// Gets or sets this is the tenant id.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "tenantId")]
        public string TenantId {get; set; }

        /// <summary>
        /// Gets or sets this is the object id.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "objectId")]
        public string ObjectId {get; set; }

        /// <summary>
        /// Gets or sets this is the version.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "version")]
        public int? Version {get; set; }

        /// <summary>
        /// Gets or sets this is the DateTime when the partner was updated.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "updatedTime")]
        public System.DateTime? UpdatedTime {get; set; }

        /// <summary>
        /// Gets or sets this is the DateTime when the partner was created.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "createdTime")]
        public System.DateTime? CreatedTime {get; set; }

        /// <summary>
        /// Gets or sets this is the partner state Possible values include: &#39;Active&#39;, &#39;Deleted&#39;
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "state")]
        public string State {get; set; }
    }
}