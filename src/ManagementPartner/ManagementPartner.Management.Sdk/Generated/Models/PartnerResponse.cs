// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.ManagementPartner.Models
{
    using System.Linq;

    /// <summary>
    /// this is the management partner operations response
    /// </summary>
    [Microsoft.Rest.Serialization.JsonTransformation]
    public partial class PartnerResponse : Microsoft.Rest.Azure.IResource
    {
        /// <summary>
        /// Initializes a new instance of the PartnerResponse class.
        /// </summary>
        public PartnerResponse()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the PartnerResponse class.
        /// </summary>

        /// <param name="etag">Type of the partner
        /// </param>

        /// <param name="id">Identifier of the partner
        /// </param>

        /// <param name="name">Name of the partner
        /// </param>

        /// <param name="type">Type of resource. &#34;Microsoft.ManagementPartner/partners&#34;
        /// </param>

        /// <param name="partnerId">This is the partner id
        /// </param>

        /// <param name="partnerName">This is the partner name
        /// </param>

        /// <param name="tenantId">This is the tenant id.
        /// </param>

        /// <param name="objectId">This is the object id.
        /// </param>

        /// <param name="version">This is the version.
        /// </param>

        /// <param name="updatedTime">This is the DateTime when the partner was updated.
        /// </param>

        /// <param name="createdTime">This is the DateTime when the partner was created.
        /// </param>

        /// <param name="state">This is the partner state
        /// Possible values include: &#39;Active&#39;, &#39;Deleted&#39;</param>
        public PartnerResponse(int? etag = default(int?), string id = default(string), string name = default(string), string type = default(string), string partnerId = default(string), string partnerName = default(string), string tenantId = default(string), string objectId = default(string), int? version = default(int?), System.DateTime? updatedTime = default(System.DateTime?), System.DateTime? createdTime = default(System.DateTime?), string state = default(string))

        {
            this.Etag = etag;
            this.Id = id;
            this.Name = name;
            this.Type = type;
            this.PartnerId = partnerId;
            this.PartnerName = partnerName;
            this.TenantId = tenantId;
            this.ObjectId = objectId;
            this.Version = version;
            this.UpdatedTime = updatedTime;
            this.CreatedTime = createdTime;
            this.State = state;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets or sets type of the partner
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "etag")]
        public int? Etag {get; set; }

        /// <summary>
        /// Gets identifier of the partner
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "id")]
        public string Id {get; private set; }

        /// <summary>
        /// Gets name of the partner
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "name")]
        public string Name {get; private set; }

        /// <summary>
        /// Gets type of resource. &#34;Microsoft.ManagementPartner/partners&#34;
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "type")]
        public string Type {get; private set; }

        /// <summary>
        /// Gets or sets this is the partner id
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.partnerId")]
        public string PartnerId {get; set; }

        /// <summary>
        /// Gets or sets this is the partner name
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.partnerName")]
        public string PartnerName {get; set; }

        /// <summary>
        /// Gets or sets this is the tenant id.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.tenantId")]
        public string TenantId {get; set; }

        /// <summary>
        /// Gets or sets this is the object id.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.objectId")]
        public string ObjectId {get; set; }

        /// <summary>
        /// Gets or sets this is the version.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.version")]
        public int? Version {get; set; }

        /// <summary>
        /// Gets or sets this is the DateTime when the partner was updated.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.updatedTime")]
        public System.DateTime? UpdatedTime {get; set; }

        /// <summary>
        /// Gets or sets this is the DateTime when the partner was created.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.createdTime")]
        public System.DateTime? CreatedTime {get; set; }

        /// <summary>
        /// Gets or sets this is the partner state Possible values include: &#39;Active&#39;, &#39;Deleted&#39;
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.state")]
        public string State {get; set; }
    }
}