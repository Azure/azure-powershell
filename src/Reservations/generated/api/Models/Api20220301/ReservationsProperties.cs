// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.Api20220301
{
    using static Microsoft.Azure.PowerShell.Cmdlets.Reservations.Runtime.Extensions;

    /// <summary>The properties of the reservations</summary>
    public partial class ReservationsProperties :
        Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.Api20220301.IReservationsProperties,
        Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.Api20220301.IReservationsPropertiesInternal
    {

        /// <summary>Backing field for <see cref="AppliedScope" /> property.</summary>
        private string[] _appliedScope;

        /// <summary>The list of applied scopes</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Reservations.Origin(Microsoft.Azure.PowerShell.Cmdlets.Reservations.PropertyOrigin.Owned)]
        public string[] AppliedScope { get => this._appliedScope; set => this._appliedScope = value; }

        /// <summary>Backing field for <see cref="AppliedScopeType" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Reservations.Support.AppliedScopeType? _appliedScopeType;

        /// <summary>The applied scope type</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Reservations.Origin(Microsoft.Azure.PowerShell.Cmdlets.Reservations.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.Reservations.Support.AppliedScopeType? AppliedScopeType { get => this._appliedScopeType; set => this._appliedScopeType = value; }

        /// <summary>Backing field for <see cref="Archived" /> property.</summary>
        private bool? _archived;

        /// <summary>Indicates if the reservation is archived</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Reservations.Origin(Microsoft.Azure.PowerShell.Cmdlets.Reservations.PropertyOrigin.Owned)]
        public bool? Archived { get => this._archived; set => this._archived = value; }

        /// <summary>Backing field for <see cref="BenefitStartTime" /> property.</summary>
        private global::System.DateTime? _benefitStartTime;

        /// <summary>This is the DateTime when the reservation benefit started.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Reservations.Origin(Microsoft.Azure.PowerShell.Cmdlets.Reservations.PropertyOrigin.Owned)]
        public global::System.DateTime? BenefitStartTime { get => this._benefitStartTime; set => this._benefitStartTime = value; }

        [Microsoft.Azure.PowerShell.Cmdlets.Reservations.Origin(Microsoft.Azure.PowerShell.Cmdlets.Reservations.PropertyOrigin.Inlined)]
        public float? BillingCurrencyTotalAmount { get => ((Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.Api20220301.IRenewPropertiesResponseInternal)RenewProperty).BillingCurrencyTotalAmount; set => ((Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.Api20220301.IRenewPropertiesResponseInternal)RenewProperty).BillingCurrencyTotalAmount = value ?? default(float); }

        /// <summary>
        /// The ISO 4217 3-letter currency code for the currency used by this purchase record.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Reservations.Origin(Microsoft.Azure.PowerShell.Cmdlets.Reservations.PropertyOrigin.Inlined)]
        public string BillingCurrencyTotalCurrencyCode { get => ((Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.Api20220301.IRenewPropertiesResponseInternal)RenewProperty).BillingCurrencyTotalCurrencyCode; set => ((Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.Api20220301.IRenewPropertiesResponseInternal)RenewProperty).BillingCurrencyTotalCurrencyCode = value ?? null; }

        /// <summary>Backing field for <see cref="BillingPlan" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Reservations.Support.ReservationBillingPlan? _billingPlan;

        /// <summary>The billing plan options available for this SKU.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Reservations.Origin(Microsoft.Azure.PowerShell.Cmdlets.Reservations.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.Reservations.Support.ReservationBillingPlan? BillingPlan { get => this._billingPlan; set => this._billingPlan = value; }

        /// <summary>Backing field for <see cref="BillingScopeId" /> property.</summary>
        private string _billingScopeId;

        /// <summary>Subscription that will be charged for purchasing Reservation</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Reservations.Origin(Microsoft.Azure.PowerShell.Cmdlets.Reservations.PropertyOrigin.Owned)]
        public string BillingScopeId { get => this._billingScopeId; set => this._billingScopeId = value; }

        /// <summary>Backing field for <see cref="Capability" /> property.</summary>
        private string _capability;

        /// <summary>Capabilities of the reservation</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Reservations.Origin(Microsoft.Azure.PowerShell.Cmdlets.Reservations.PropertyOrigin.Owned)]
        public string Capability { get => this._capability; set => this._capability = value; }

        /// <summary>Backing field for <see cref="DisplayName" /> property.</summary>
        private string _displayName;

        /// <summary>Friendly name for user to easily identify the reservation</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Reservations.Origin(Microsoft.Azure.PowerShell.Cmdlets.Reservations.PropertyOrigin.Owned)]
        public string DisplayName { get => this._displayName; set => this._displayName = value; }

        /// <summary>Backing field for <see cref="DisplayProvisioningState" /> property.</summary>
        private string _displayProvisioningState;

        /// <summary>The provisioning state of the reservation for display, e.g. Succeeded</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Reservations.Origin(Microsoft.Azure.PowerShell.Cmdlets.Reservations.PropertyOrigin.Owned)]
        public string DisplayProvisioningState { get => this._displayProvisioningState; }

        /// <summary>Backing field for <see cref="EffectiveDateTime" /> property.</summary>
        private global::System.DateTime? _effectiveDateTime;

        /// <summary>DateTime of the Reservation starting when this version is effective from.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Reservations.Origin(Microsoft.Azure.PowerShell.Cmdlets.Reservations.PropertyOrigin.Owned)]
        public global::System.DateTime? EffectiveDateTime { get => this._effectiveDateTime; set => this._effectiveDateTime = value; }

        /// <summary>Backing field for <see cref="ExpiryDate" /> property.</summary>
        private global::System.DateTime? _expiryDate;

        /// <summary>This is the date when the Reservation will expire.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Reservations.Origin(Microsoft.Azure.PowerShell.Cmdlets.Reservations.PropertyOrigin.Owned)]
        public global::System.DateTime? ExpiryDate { get => this._expiryDate; set => this._expiryDate = value; }

        /// <summary>Backing field for <see cref="ExtendedStatusInfo" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.Api20220301.IExtendedStatusInfo _extendedStatusInfo;

        /// <summary>The message giving detailed information about the status code.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Reservations.Origin(Microsoft.Azure.PowerShell.Cmdlets.Reservations.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.Api20220301.IExtendedStatusInfo ExtendedStatusInfo { get => (this._extendedStatusInfo = this._extendedStatusInfo ?? new Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.Api20220301.ExtendedStatusInfo()); set => this._extendedStatusInfo = value; }

        /// <summary>Backing field for <see cref="InstanceFlexibility" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Reservations.Support.InstanceFlexibility? _instanceFlexibility;

        /// <summary>
        /// Allows reservation discount to be applied across skus within the same Autofit group. Not all skus support instance size
        /// flexibility.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Reservations.Origin(Microsoft.Azure.PowerShell.Cmdlets.Reservations.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.Reservations.Support.InstanceFlexibility? InstanceFlexibility { get => this._instanceFlexibility; set => this._instanceFlexibility = value; }

        /// <summary>Backing field for <see cref="LastUpdatedDateTime" /> property.</summary>
        private global::System.DateTime? _lastUpdatedDateTime;

        /// <summary>DateTime of the last time the Reservation was updated.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Reservations.Origin(Microsoft.Azure.PowerShell.Cmdlets.Reservations.PropertyOrigin.Owned)]
        public global::System.DateTime? LastUpdatedDateTime { get => this._lastUpdatedDateTime; }

        /// <summary>Backing field for <see cref="MergeProperty" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.Api20220301.IReservationMergeProperties _mergeProperty;

        [Microsoft.Azure.PowerShell.Cmdlets.Reservations.Origin(Microsoft.Azure.PowerShell.Cmdlets.Reservations.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.Api20220301.IReservationMergeProperties MergeProperty { get => (this._mergeProperty = this._mergeProperty ?? new Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.Api20220301.ReservationMergeProperties()); set => this._mergeProperty = value; }

        /// <summary>Internal Acessors for DisplayProvisioningState</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.Api20220301.IReservationsPropertiesInternal.DisplayProvisioningState { get => this._displayProvisioningState; set { {_displayProvisioningState = value;} } }

        /// <summary>Internal Acessors for LastUpdatedDateTime</summary>
        global::System.DateTime? Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.Api20220301.IReservationsPropertiesInternal.LastUpdatedDateTime { get => this._lastUpdatedDateTime; set { {_lastUpdatedDateTime = value;} } }

        /// <summary>Internal Acessors for ProvisioningSubState</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.Api20220301.IReservationsPropertiesInternal.ProvisioningSubState { get => this._provisioningSubState; set { {_provisioningSubState = value;} } }

        /// <summary>Internal Acessors for PurchaseProperty</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.Api20220301.IPurchaseRequestProperties Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.Api20220301.IReservationsPropertiesInternal.PurchaseProperty { get => ((Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.Api20220301.IRenewPropertiesResponseInternal)RenewProperty).PurchasePropertiesProperties; set => ((Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.Api20220301.IRenewPropertiesResponseInternal)RenewProperty).PurchasePropertiesProperties = value; }

        /// <summary>Internal Acessors for PurchasePropertySku</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.Api20220301.ISkuName Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.Api20220301.IReservationsPropertiesInternal.PurchasePropertySku { get => ((Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.Api20220301.IRenewPropertiesResponseInternal)RenewProperty).PurchasePropertySku; set => ((Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.Api20220301.IRenewPropertiesResponseInternal)RenewProperty).PurchasePropertySku = value; }

        /// <summary>Internal Acessors for RenewProperty</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.Api20220301.IRenewPropertiesResponse Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.Api20220301.IReservationsPropertiesInternal.RenewProperty { get => (this._renewProperty = this._renewProperty ?? new Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.Api20220301.RenewPropertiesResponse()); set { {_renewProperty = value;} } }

        /// <summary>Internal Acessors for RenewPropertyBillingCurrencyTotal</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.Api20220301.IRenewPropertiesResponseBillingCurrencyTotal Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.Api20220301.IReservationsPropertiesInternal.RenewPropertyBillingCurrencyTotal { get => ((Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.Api20220301.IRenewPropertiesResponseInternal)RenewProperty).BillingCurrencyTotal; set => ((Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.Api20220301.IRenewPropertiesResponseInternal)RenewProperty).BillingCurrencyTotal = value; }

        /// <summary>Internal Acessors for RenewPropertyPricingCurrencyTotal</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.Api20220301.IRenewPropertiesResponsePricingCurrencyTotal Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.Api20220301.IReservationsPropertiesInternal.RenewPropertyPricingCurrencyTotal { get => ((Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.Api20220301.IRenewPropertiesResponseInternal)RenewProperty).PricingCurrencyTotal; set => ((Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.Api20220301.IRenewPropertiesResponseInternal)RenewProperty).PricingCurrencyTotal = value; }

        /// <summary>Internal Acessors for RenewPropertyPurchaseProperty</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.Api20220301.IPurchaseRequest Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.Api20220301.IReservationsPropertiesInternal.RenewPropertyPurchaseProperty { get => ((Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.Api20220301.IRenewPropertiesResponseInternal)RenewProperty).PurchaseProperty; set => ((Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.Api20220301.IRenewPropertiesResponseInternal)RenewProperty).PurchaseProperty = value; }

        /// <summary>Internal Acessors for ReservedResourceProperty</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.Api20220301.IPurchaseRequestPropertiesReservedResourceProperties Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.Api20220301.IReservationsPropertiesInternal.ReservedResourceProperty { get => ((Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.Api20220301.IRenewPropertiesResponseInternal)RenewProperty).ReservedResourceProperty; set => ((Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.Api20220301.IRenewPropertiesResponseInternal)RenewProperty).ReservedResourceProperty = value; }

        /// <summary>Internal Acessors for UserFriendlyAppliedScopeType</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.Api20220301.IReservationsPropertiesInternal.UserFriendlyAppliedScopeType { get => this._userFriendlyAppliedScopeType; set { {_userFriendlyAppliedScopeType = value;} } }

        /// <summary>Internal Acessors for UserFriendlyRenewState</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.Api20220301.IReservationsPropertiesInternal.UserFriendlyRenewState { get => this._userFriendlyRenewState; set { {_userFriendlyRenewState = value;} } }

        /// <summary>Internal Acessors for Utilization</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.Api20220301.IReservationsPropertiesUtilization Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.Api20220301.IReservationsPropertiesInternal.Utilization { get => (this._utilization = this._utilization ?? new Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.Api20220301.ReservationsPropertiesUtilization()); set { {_utilization = value;} } }

        /// <summary>Internal Acessors for UtilizationTrend</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.Api20220301.IReservationsPropertiesInternal.UtilizationTrend { get => ((Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.Api20220301.IReservationsPropertiesUtilizationInternal)Utilization).Trend; set => ((Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.Api20220301.IReservationsPropertiesUtilizationInternal)Utilization).Trend = value; }

        [Microsoft.Azure.PowerShell.Cmdlets.Reservations.Origin(Microsoft.Azure.PowerShell.Cmdlets.Reservations.PropertyOrigin.Inlined)]
        public float? PricingCurrencyTotalAmount { get => ((Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.Api20220301.IRenewPropertiesResponseInternal)RenewProperty).PricingCurrencyTotalAmount; set => ((Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.Api20220301.IRenewPropertiesResponseInternal)RenewProperty).PricingCurrencyTotalAmount = value ?? default(float); }

        /// <summary>
        /// The ISO 4217 3-letter currency code for the currency used by this purchase record.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Reservations.Origin(Microsoft.Azure.PowerShell.Cmdlets.Reservations.PropertyOrigin.Inlined)]
        public string PricingCurrencyTotalCurrencyCode { get => ((Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.Api20220301.IRenewPropertiesResponseInternal)RenewProperty).PricingCurrencyTotalCurrencyCode; set => ((Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.Api20220301.IRenewPropertiesResponseInternal)RenewProperty).PricingCurrencyTotalCurrencyCode = value ?? null; }

        /// <summary>Backing field for <see cref="ProvisioningState" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Reservations.Support.ProvisioningState? _provisioningState;

        /// <summary>Current state of the reservation.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Reservations.Origin(Microsoft.Azure.PowerShell.Cmdlets.Reservations.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.Reservations.Support.ProvisioningState? ProvisioningState { get => this._provisioningState; set => this._provisioningState = value; }

        /// <summary>Backing field for <see cref="ProvisioningSubState" /> property.</summary>
        private string _provisioningSubState;

        /// <summary>The provisioning state of the reservation, e.g. Succeeded</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Reservations.Origin(Microsoft.Azure.PowerShell.Cmdlets.Reservations.PropertyOrigin.Owned)]
        public string ProvisioningSubState { get => this._provisioningSubState; }

        /// <summary>Backing field for <see cref="PurchaseDate" /> property.</summary>
        private global::System.DateTime? _purchaseDate;

        /// <summary>This is the date when the Reservation was purchased.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Reservations.Origin(Microsoft.Azure.PowerShell.Cmdlets.Reservations.PropertyOrigin.Owned)]
        public global::System.DateTime? PurchaseDate { get => this._purchaseDate; set => this._purchaseDate = value; }

        /// <summary>The Azure Region where the reserved resource lives.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Reservations.Origin(Microsoft.Azure.PowerShell.Cmdlets.Reservations.PropertyOrigin.Inlined)]
        public string PurchasePropertyLocation { get => ((Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.Api20220301.IRenewPropertiesResponseInternal)RenewProperty).PurchasePropertyLocation; set => ((Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.Api20220301.IRenewPropertiesResponseInternal)RenewProperty).PurchasePropertyLocation = value ?? null; }

        /// <summary>Backing field for <see cref="Quantity" /> property.</summary>
        private int? _quantity;

        /// <summary>Quantity of the SKUs that are part of the Reservation.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Reservations.Origin(Microsoft.Azure.PowerShell.Cmdlets.Reservations.PropertyOrigin.Owned)]
        public int? Quantity { get => this._quantity; set => this._quantity = value; }

        /// <summary>Backing field for <see cref="Renew" /> property.</summary>
        private bool? _renew;

        /// <summary>
        /// Setting this to true will automatically purchase a new reservation on the expiration date time.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Reservations.Origin(Microsoft.Azure.PowerShell.Cmdlets.Reservations.PropertyOrigin.Owned)]
        public bool? Renew { get => this._renew; set => this._renew = value; }

        /// <summary>Backing field for <see cref="RenewDestination" /> property.</summary>
        private string _renewDestination;

        /// <summary>
        /// Reservation Id of the reservation which is purchased because of renew. Format of the resource Id is /providers/Microsoft.Capacity/reservationOrders/{reservationOrderId}/reservations/{reservationId}.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Reservations.Origin(Microsoft.Azure.PowerShell.Cmdlets.Reservations.PropertyOrigin.Owned)]
        public string RenewDestination { get => this._renewDestination; set => this._renewDestination = value; }

        /// <summary>
        /// List of the subscriptions that the benefit will be applied. Do not specify if AppliedScopeType is Shared.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Reservations.Origin(Microsoft.Azure.PowerShell.Cmdlets.Reservations.PropertyOrigin.Inlined)]
        public string[] RenewPropertiesPurchasePropertiesAppliedScope { get => ((Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.Api20220301.IRenewPropertiesResponseInternal)RenewProperty).AppliedScope; set => ((Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.Api20220301.IRenewPropertiesResponseInternal)RenewProperty).AppliedScope = value ?? null /* arrayOf */; }

        /// <summary>Type of the Applied Scope.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Reservations.Origin(Microsoft.Azure.PowerShell.Cmdlets.Reservations.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Reservations.Support.AppliedScopeType? RenewPropertiesPurchasePropertiesAppliedScopeType { get => ((Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.Api20220301.IRenewPropertiesResponseInternal)RenewProperty).AppliedScopeType; set => ((Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.Api20220301.IRenewPropertiesResponseInternal)RenewProperty).AppliedScopeType = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.Reservations.Support.AppliedScopeType)""); }

        /// <summary>Represent the billing plans.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Reservations.Origin(Microsoft.Azure.PowerShell.Cmdlets.Reservations.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Reservations.Support.ReservationBillingPlan? RenewPropertiesPurchasePropertiesBillingPlan { get => ((Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.Api20220301.IRenewPropertiesResponseInternal)RenewProperty).BillingPlan; set => ((Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.Api20220301.IRenewPropertiesResponseInternal)RenewProperty).BillingPlan = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.Reservations.Support.ReservationBillingPlan)""); }

        /// <summary>Subscription that will be charged for purchasing Reservation</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Reservations.Origin(Microsoft.Azure.PowerShell.Cmdlets.Reservations.PropertyOrigin.Inlined)]
        public string RenewPropertiesPurchasePropertiesBillingScopeId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.Api20220301.IRenewPropertiesResponseInternal)RenewProperty).BillingScopeId; set => ((Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.Api20220301.IRenewPropertiesResponseInternal)RenewProperty).BillingScopeId = value ?? null; }

        /// <summary>Friendly name of the Reservation</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Reservations.Origin(Microsoft.Azure.PowerShell.Cmdlets.Reservations.PropertyOrigin.Inlined)]
        public string RenewPropertiesPurchasePropertiesDisplayName { get => ((Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.Api20220301.IRenewPropertiesResponseInternal)RenewProperty).DisplayName; set => ((Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.Api20220301.IRenewPropertiesResponseInternal)RenewProperty).DisplayName = value ?? null; }

        /// <summary>Quantity of the SKUs that are part of the Reservation.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Reservations.Origin(Microsoft.Azure.PowerShell.Cmdlets.Reservations.PropertyOrigin.Inlined)]
        public int? RenewPropertiesPurchasePropertiesQuantity { get => ((Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.Api20220301.IRenewPropertiesResponseInternal)RenewProperty).Quantity; set => ((Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.Api20220301.IRenewPropertiesResponseInternal)RenewProperty).Quantity = value ?? default(int); }

        /// <summary>
        /// Setting this to true will automatically purchase a new reservation on the expiration date time.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Reservations.Origin(Microsoft.Azure.PowerShell.Cmdlets.Reservations.PropertyOrigin.Inlined)]
        public bool? RenewPropertiesPurchasePropertiesRenew { get => ((Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.Api20220301.IRenewPropertiesResponseInternal)RenewProperty).Renew; set => ((Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.Api20220301.IRenewPropertiesResponseInternal)RenewProperty).Renew = value ?? default(bool); }

        /// <summary>The type of the resource that is being reserved.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Reservations.Origin(Microsoft.Azure.PowerShell.Cmdlets.Reservations.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Reservations.Support.ReservedResourceType? RenewPropertiesPurchasePropertiesReservedResourceType { get => ((Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.Api20220301.IRenewPropertiesResponseInternal)RenewProperty).ReservedResourceType; set => ((Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.Api20220301.IRenewPropertiesResponseInternal)RenewProperty).ReservedResourceType = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.Reservations.Support.ReservedResourceType)""); }

        /// <summary>Represent the term of Reservation.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Reservations.Origin(Microsoft.Azure.PowerShell.Cmdlets.Reservations.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Reservations.Support.ReservationTerm? RenewPropertiesPurchasePropertiesTerm { get => ((Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.Api20220301.IRenewPropertiesResponseInternal)RenewProperty).Term; set => ((Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.Api20220301.IRenewPropertiesResponseInternal)RenewProperty).Term = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.Reservations.Support.ReservationTerm)""); }

        /// <summary>Backing field for <see cref="RenewProperty" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.Api20220301.IRenewPropertiesResponse _renewProperty;

        [Microsoft.Azure.PowerShell.Cmdlets.Reservations.Origin(Microsoft.Azure.PowerShell.Cmdlets.Reservations.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.Api20220301.IRenewPropertiesResponse RenewProperty { get => (this._renewProperty = this._renewProperty ?? new Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.Api20220301.RenewPropertiesResponse()); set => this._renewProperty = value; }

        /// <summary>Backing field for <see cref="RenewSource" /> property.</summary>
        private string _renewSource;

        /// <summary>
        /// Reservation Id of the reservation from which this reservation is renewed. Format of the resource Id is /providers/Microsoft.Capacity/reservationOrders/{reservationOrderId}/reservations/{reservationId}.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Reservations.Origin(Microsoft.Azure.PowerShell.Cmdlets.Reservations.PropertyOrigin.Owned)]
        public string RenewSource { get => this._renewSource; set => this._renewSource = value; }

        /// <summary>
        /// Turning this on will apply the reservation discount to other VMs in the same VM size group. Only specify for VirtualMachines
        /// reserved resource type.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Reservations.Origin(Microsoft.Azure.PowerShell.Cmdlets.Reservations.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Reservations.Support.InstanceFlexibility? ReservedResourcePropertyInstanceFlexibility { get => ((Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.Api20220301.IRenewPropertiesResponseInternal)RenewProperty).ReservedResourcePropertyInstanceFlexibility; set => ((Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.Api20220301.IRenewPropertiesResponseInternal)RenewProperty).ReservedResourcePropertyInstanceFlexibility = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.Reservations.Support.InstanceFlexibility)""); }

        /// <summary>Backing field for <see cref="ReservedResourceType" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Reservations.Support.ReservedResourceType? _reservedResourceType;

        /// <summary>The type of the resource that is being reserved.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Reservations.Origin(Microsoft.Azure.PowerShell.Cmdlets.Reservations.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.Reservations.Support.ReservedResourceType? ReservedResourceType { get => this._reservedResourceType; set => this._reservedResourceType = value; }

        /// <summary>Backing field for <see cref="SkuDescription" /> property.</summary>
        private string _skuDescription;

        /// <summary>Description of the SKU in english.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Reservations.Origin(Microsoft.Azure.PowerShell.Cmdlets.Reservations.PropertyOrigin.Owned)]
        public string SkuDescription { get => this._skuDescription; set => this._skuDescription = value; }

        [Microsoft.Azure.PowerShell.Cmdlets.Reservations.Origin(Microsoft.Azure.PowerShell.Cmdlets.Reservations.PropertyOrigin.Inlined)]
        public string SkuName { get => ((Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.Api20220301.IRenewPropertiesResponseInternal)RenewProperty).SkuName; set => ((Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.Api20220301.IRenewPropertiesResponseInternal)RenewProperty).SkuName = value ?? null; }

        /// <summary>Backing field for <see cref="SplitProperty" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.Api20220301.IReservationSplitProperties _splitProperty;

        [Microsoft.Azure.PowerShell.Cmdlets.Reservations.Origin(Microsoft.Azure.PowerShell.Cmdlets.Reservations.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.Api20220301.IReservationSplitProperties SplitProperty { get => (this._splitProperty = this._splitProperty ?? new Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.Api20220301.ReservationSplitProperties()); set => this._splitProperty = value; }

        /// <summary>Backing field for <see cref="Term" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Reservations.Support.ReservationTerm? _term;

        /// <summary>Represent the term of Reservation.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Reservations.Origin(Microsoft.Azure.PowerShell.Cmdlets.Reservations.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.Reservations.Support.ReservationTerm? Term { get => this._term; set => this._term = value; }

        /// <summary>Backing field for <see cref="UserFriendlyAppliedScopeType" /> property.</summary>
        private string _userFriendlyAppliedScopeType;

        /// <summary>The applied scope type of the reservation for display, e.g. Shared</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Reservations.Origin(Microsoft.Azure.PowerShell.Cmdlets.Reservations.PropertyOrigin.Owned)]
        public string UserFriendlyAppliedScopeType { get => this._userFriendlyAppliedScopeType; }

        /// <summary>Backing field for <see cref="UserFriendlyRenewState" /> property.</summary>
        private string _userFriendlyRenewState;

        /// <summary>The renew state of the reservation for display, e.g. On</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Reservations.Origin(Microsoft.Azure.PowerShell.Cmdlets.Reservations.PropertyOrigin.Owned)]
        public string UserFriendlyRenewState { get => this._userFriendlyRenewState; }

        /// <summary>Backing field for <see cref="Utilization" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.Api20220301.IReservationsPropertiesUtilization _utilization;

        /// <summary>Reservation utilization</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Reservations.Origin(Microsoft.Azure.PowerShell.Cmdlets.Reservations.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.Api20220301.IReservationsPropertiesUtilization Utilization { get => (this._utilization = this._utilization ?? new Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.Api20220301.ReservationsPropertiesUtilization()); }

        /// <summary>The array of aggregates of a reservation's utilization</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Reservations.Origin(Microsoft.Azure.PowerShell.Cmdlets.Reservations.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.Api20220301.IReservationUtilizationAggregates[] UtilizationAggregate { get => ((Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.Api20220301.IReservationsPropertiesUtilizationInternal)Utilization).Aggregate; set => ((Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.Api20220301.IReservationsPropertiesUtilizationInternal)Utilization).Aggregate = value ?? null /* arrayOf */; }

        /// <summary>The number of days trend for a reservation</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Reservations.Origin(Microsoft.Azure.PowerShell.Cmdlets.Reservations.PropertyOrigin.Inlined)]
        public string UtilizationTrend { get => ((Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.Api20220301.IReservationsPropertiesUtilizationInternal)Utilization).Trend; }

        /// <summary>Creates an new <see cref="ReservationsProperties" /> instance.</summary>
        public ReservationsProperties()
        {

        }
    }
    /// The properties of the reservations
    public partial interface IReservationsProperties :
        Microsoft.Azure.PowerShell.Cmdlets.Reservations.Runtime.IJsonSerializable
    {
        /// <summary>The list of applied scopes</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Reservations.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The list of applied scopes",
        SerializedName = @"appliedScopes",
        PossibleTypes = new [] { typeof(string) })]
        string[] AppliedScope { get; set; }
        /// <summary>The applied scope type</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Reservations.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The applied scope type",
        SerializedName = @"appliedScopeType",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Reservations.Support.AppliedScopeType) })]
        Microsoft.Azure.PowerShell.Cmdlets.Reservations.Support.AppliedScopeType? AppliedScopeType { get; set; }
        /// <summary>Indicates if the reservation is archived</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Reservations.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Indicates if the reservation is archived",
        SerializedName = @"archived",
        PossibleTypes = new [] { typeof(bool) })]
        bool? Archived { get; set; }
        /// <summary>This is the DateTime when the reservation benefit started.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Reservations.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"This is the DateTime when the reservation benefit started.",
        SerializedName = @"benefitStartTime",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? BenefitStartTime { get; set; }

        [Microsoft.Azure.PowerShell.Cmdlets.Reservations.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"",
        SerializedName = @"amount",
        PossibleTypes = new [] { typeof(float) })]
        float? BillingCurrencyTotalAmount { get; set; }
        /// <summary>
        /// The ISO 4217 3-letter currency code for the currency used by this purchase record.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Reservations.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The ISO 4217 3-letter currency code for the currency used by this purchase record.",
        SerializedName = @"currencyCode",
        PossibleTypes = new [] { typeof(string) })]
        string BillingCurrencyTotalCurrencyCode { get; set; }
        /// <summary>The billing plan options available for this SKU.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Reservations.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The billing plan options available for this SKU.",
        SerializedName = @"billingPlan",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Reservations.Support.ReservationBillingPlan) })]
        Microsoft.Azure.PowerShell.Cmdlets.Reservations.Support.ReservationBillingPlan? BillingPlan { get; set; }
        /// <summary>Subscription that will be charged for purchasing Reservation</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Reservations.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Subscription that will be charged for purchasing Reservation",
        SerializedName = @"billingScopeId",
        PossibleTypes = new [] { typeof(string) })]
        string BillingScopeId { get; set; }
        /// <summary>Capabilities of the reservation</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Reservations.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Capabilities of the reservation",
        SerializedName = @"capabilities",
        PossibleTypes = new [] { typeof(string) })]
        string Capability { get; set; }
        /// <summary>Friendly name for user to easily identify the reservation</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Reservations.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Friendly name for user to easily identify the reservation",
        SerializedName = @"displayName",
        PossibleTypes = new [] { typeof(string) })]
        string DisplayName { get; set; }
        /// <summary>The provisioning state of the reservation for display, e.g. Succeeded</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Reservations.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The provisioning state of the reservation for display, e.g. Succeeded",
        SerializedName = @"displayProvisioningState",
        PossibleTypes = new [] { typeof(string) })]
        string DisplayProvisioningState { get;  }
        /// <summary>DateTime of the Reservation starting when this version is effective from.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Reservations.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"DateTime of the Reservation starting when this version is effective from.",
        SerializedName = @"effectiveDateTime",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? EffectiveDateTime { get; set; }
        /// <summary>This is the date when the Reservation will expire.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Reservations.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"This is the date when the Reservation will expire.",
        SerializedName = @"expiryDate",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? ExpiryDate { get; set; }
        /// <summary>The message giving detailed information about the status code.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Reservations.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The message giving detailed information about the status code.",
        SerializedName = @"extendedStatusInfo",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.Api20220301.IExtendedStatusInfo) })]
        Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.Api20220301.IExtendedStatusInfo ExtendedStatusInfo { get; set; }
        /// <summary>
        /// Allows reservation discount to be applied across skus within the same Autofit group. Not all skus support instance size
        /// flexibility.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Reservations.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Allows reservation discount to be applied across skus within the same Autofit group. Not all skus support instance size flexibility.",
        SerializedName = @"instanceFlexibility",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Reservations.Support.InstanceFlexibility) })]
        Microsoft.Azure.PowerShell.Cmdlets.Reservations.Support.InstanceFlexibility? InstanceFlexibility { get; set; }
        /// <summary>DateTime of the last time the Reservation was updated.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Reservations.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"DateTime of the last time the Reservation was updated.",
        SerializedName = @"lastUpdatedDateTime",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? LastUpdatedDateTime { get;  }

        [Microsoft.Azure.PowerShell.Cmdlets.Reservations.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"",
        SerializedName = @"mergeProperties",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.Api20220301.IReservationMergeProperties) })]
        Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.Api20220301.IReservationMergeProperties MergeProperty { get; set; }

        [Microsoft.Azure.PowerShell.Cmdlets.Reservations.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"",
        SerializedName = @"amount",
        PossibleTypes = new [] { typeof(float) })]
        float? PricingCurrencyTotalAmount { get; set; }
        /// <summary>
        /// The ISO 4217 3-letter currency code for the currency used by this purchase record.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Reservations.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The ISO 4217 3-letter currency code for the currency used by this purchase record.",
        SerializedName = @"currencyCode",
        PossibleTypes = new [] { typeof(string) })]
        string PricingCurrencyTotalCurrencyCode { get; set; }
        /// <summary>Current state of the reservation.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Reservations.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Current state of the reservation.",
        SerializedName = @"provisioningState",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Reservations.Support.ProvisioningState) })]
        Microsoft.Azure.PowerShell.Cmdlets.Reservations.Support.ProvisioningState? ProvisioningState { get; set; }
        /// <summary>The provisioning state of the reservation, e.g. Succeeded</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Reservations.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The provisioning state of the reservation, e.g. Succeeded",
        SerializedName = @"provisioningSubState",
        PossibleTypes = new [] { typeof(string) })]
        string ProvisioningSubState { get;  }
        /// <summary>This is the date when the Reservation was purchased.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Reservations.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"This is the date when the Reservation was purchased.",
        SerializedName = @"purchaseDate",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? PurchaseDate { get; set; }
        /// <summary>The Azure Region where the reserved resource lives.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Reservations.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The Azure Region where the reserved resource lives.",
        SerializedName = @"location",
        PossibleTypes = new [] { typeof(string) })]
        string PurchasePropertyLocation { get; set; }
        /// <summary>Quantity of the SKUs that are part of the Reservation.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Reservations.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Quantity of the SKUs that are part of the Reservation.",
        SerializedName = @"quantity",
        PossibleTypes = new [] { typeof(int) })]
        int? Quantity { get; set; }
        /// <summary>
        /// Setting this to true will automatically purchase a new reservation on the expiration date time.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Reservations.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Setting this to true will automatically purchase a new reservation on the expiration date time.",
        SerializedName = @"renew",
        PossibleTypes = new [] { typeof(bool) })]
        bool? Renew { get; set; }
        /// <summary>
        /// Reservation Id of the reservation which is purchased because of renew. Format of the resource Id is /providers/Microsoft.Capacity/reservationOrders/{reservationOrderId}/reservations/{reservationId}.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Reservations.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Reservation Id of the reservation which is purchased because of renew. Format of the resource Id is /providers/Microsoft.Capacity/reservationOrders/{reservationOrderId}/reservations/{reservationId}.",
        SerializedName = @"renewDestination",
        PossibleTypes = new [] { typeof(string) })]
        string RenewDestination { get; set; }
        /// <summary>
        /// List of the subscriptions that the benefit will be applied. Do not specify if AppliedScopeType is Shared.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Reservations.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"List of the subscriptions that the benefit will be applied. Do not specify if AppliedScopeType is Shared.",
        SerializedName = @"appliedScopes",
        PossibleTypes = new [] { typeof(string) })]
        string[] RenewPropertiesPurchasePropertiesAppliedScope { get; set; }
        /// <summary>Type of the Applied Scope.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Reservations.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Type of the Applied Scope.",
        SerializedName = @"appliedScopeType",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Reservations.Support.AppliedScopeType) })]
        Microsoft.Azure.PowerShell.Cmdlets.Reservations.Support.AppliedScopeType? RenewPropertiesPurchasePropertiesAppliedScopeType { get; set; }
        /// <summary>Represent the billing plans.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Reservations.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Represent the billing plans.",
        SerializedName = @"billingPlan",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Reservations.Support.ReservationBillingPlan) })]
        Microsoft.Azure.PowerShell.Cmdlets.Reservations.Support.ReservationBillingPlan? RenewPropertiesPurchasePropertiesBillingPlan { get; set; }
        /// <summary>Subscription that will be charged for purchasing Reservation</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Reservations.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Subscription that will be charged for purchasing Reservation",
        SerializedName = @"billingScopeId",
        PossibleTypes = new [] { typeof(string) })]
        string RenewPropertiesPurchasePropertiesBillingScopeId { get; set; }
        /// <summary>Friendly name of the Reservation</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Reservations.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Friendly name of the Reservation",
        SerializedName = @"displayName",
        PossibleTypes = new [] { typeof(string) })]
        string RenewPropertiesPurchasePropertiesDisplayName { get; set; }
        /// <summary>Quantity of the SKUs that are part of the Reservation.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Reservations.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Quantity of the SKUs that are part of the Reservation.",
        SerializedName = @"quantity",
        PossibleTypes = new [] { typeof(int) })]
        int? RenewPropertiesPurchasePropertiesQuantity { get; set; }
        /// <summary>
        /// Setting this to true will automatically purchase a new reservation on the expiration date time.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Reservations.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Setting this to true will automatically purchase a new reservation on the expiration date time.",
        SerializedName = @"renew",
        PossibleTypes = new [] { typeof(bool) })]
        bool? RenewPropertiesPurchasePropertiesRenew { get; set; }
        /// <summary>The type of the resource that is being reserved.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Reservations.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The type of the resource that is being reserved.",
        SerializedName = @"reservedResourceType",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Reservations.Support.ReservedResourceType) })]
        Microsoft.Azure.PowerShell.Cmdlets.Reservations.Support.ReservedResourceType? RenewPropertiesPurchasePropertiesReservedResourceType { get; set; }
        /// <summary>Represent the term of Reservation.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Reservations.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Represent the term of Reservation.",
        SerializedName = @"term",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Reservations.Support.ReservationTerm) })]
        Microsoft.Azure.PowerShell.Cmdlets.Reservations.Support.ReservationTerm? RenewPropertiesPurchasePropertiesTerm { get; set; }
        /// <summary>
        /// Reservation Id of the reservation from which this reservation is renewed. Format of the resource Id is /providers/Microsoft.Capacity/reservationOrders/{reservationOrderId}/reservations/{reservationId}.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Reservations.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Reservation Id of the reservation from which this reservation is renewed. Format of the resource Id is /providers/Microsoft.Capacity/reservationOrders/{reservationOrderId}/reservations/{reservationId}.",
        SerializedName = @"renewSource",
        PossibleTypes = new [] { typeof(string) })]
        string RenewSource { get; set; }
        /// <summary>
        /// Turning this on will apply the reservation discount to other VMs in the same VM size group. Only specify for VirtualMachines
        /// reserved resource type.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Reservations.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Turning this on will apply the reservation discount to other VMs in the same VM size group. Only specify for VirtualMachines reserved resource type.",
        SerializedName = @"instanceFlexibility",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Reservations.Support.InstanceFlexibility) })]
        Microsoft.Azure.PowerShell.Cmdlets.Reservations.Support.InstanceFlexibility? ReservedResourcePropertyInstanceFlexibility { get; set; }
        /// <summary>The type of the resource that is being reserved.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Reservations.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The type of the resource that is being reserved.",
        SerializedName = @"reservedResourceType",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Reservations.Support.ReservedResourceType) })]
        Microsoft.Azure.PowerShell.Cmdlets.Reservations.Support.ReservedResourceType? ReservedResourceType { get; set; }
        /// <summary>Description of the SKU in english.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Reservations.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Description of the SKU in english.",
        SerializedName = @"skuDescription",
        PossibleTypes = new [] { typeof(string) })]
        string SkuDescription { get; set; }

        [Microsoft.Azure.PowerShell.Cmdlets.Reservations.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"",
        SerializedName = @"name",
        PossibleTypes = new [] { typeof(string) })]
        string SkuName { get; set; }

        [Microsoft.Azure.PowerShell.Cmdlets.Reservations.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"",
        SerializedName = @"splitProperties",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.Api20220301.IReservationSplitProperties) })]
        Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.Api20220301.IReservationSplitProperties SplitProperty { get; set; }
        /// <summary>Represent the term of Reservation.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Reservations.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Represent the term of Reservation.",
        SerializedName = @"term",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Reservations.Support.ReservationTerm) })]
        Microsoft.Azure.PowerShell.Cmdlets.Reservations.Support.ReservationTerm? Term { get; set; }
        /// <summary>The applied scope type of the reservation for display, e.g. Shared</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Reservations.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The applied scope type of the reservation for display, e.g. Shared",
        SerializedName = @"userFriendlyAppliedScopeType",
        PossibleTypes = new [] { typeof(string) })]
        string UserFriendlyAppliedScopeType { get;  }
        /// <summary>The renew state of the reservation for display, e.g. On</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Reservations.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The renew state of the reservation for display, e.g. On",
        SerializedName = @"userFriendlyRenewState",
        PossibleTypes = new [] { typeof(string) })]
        string UserFriendlyRenewState { get;  }
        /// <summary>The array of aggregates of a reservation's utilization</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Reservations.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The array of aggregates of a reservation's utilization",
        SerializedName = @"aggregates",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.Api20220301.IReservationUtilizationAggregates) })]
        Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.Api20220301.IReservationUtilizationAggregates[] UtilizationAggregate { get; set; }
        /// <summary>The number of days trend for a reservation</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Reservations.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The number of days trend for a reservation",
        SerializedName = @"trend",
        PossibleTypes = new [] { typeof(string) })]
        string UtilizationTrend { get;  }

    }
    /// The properties of the reservations
    internal partial interface IReservationsPropertiesInternal

    {
        /// <summary>The list of applied scopes</summary>
        string[] AppliedScope { get; set; }
        /// <summary>The applied scope type</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Reservations.Support.AppliedScopeType? AppliedScopeType { get; set; }
        /// <summary>Indicates if the reservation is archived</summary>
        bool? Archived { get; set; }
        /// <summary>This is the DateTime when the reservation benefit started.</summary>
        global::System.DateTime? BenefitStartTime { get; set; }

        float? BillingCurrencyTotalAmount { get; set; }
        /// <summary>
        /// The ISO 4217 3-letter currency code for the currency used by this purchase record.
        /// </summary>
        string BillingCurrencyTotalCurrencyCode { get; set; }
        /// <summary>The billing plan options available for this SKU.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Reservations.Support.ReservationBillingPlan? BillingPlan { get; set; }
        /// <summary>Subscription that will be charged for purchasing Reservation</summary>
        string BillingScopeId { get; set; }
        /// <summary>Capabilities of the reservation</summary>
        string Capability { get; set; }
        /// <summary>Friendly name for user to easily identify the reservation</summary>
        string DisplayName { get; set; }
        /// <summary>The provisioning state of the reservation for display, e.g. Succeeded</summary>
        string DisplayProvisioningState { get; set; }
        /// <summary>DateTime of the Reservation starting when this version is effective from.</summary>
        global::System.DateTime? EffectiveDateTime { get; set; }
        /// <summary>This is the date when the Reservation will expire.</summary>
        global::System.DateTime? ExpiryDate { get; set; }
        /// <summary>The message giving detailed information about the status code.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.Api20220301.IExtendedStatusInfo ExtendedStatusInfo { get; set; }
        /// <summary>
        /// Allows reservation discount to be applied across skus within the same Autofit group. Not all skus support instance size
        /// flexibility.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Reservations.Support.InstanceFlexibility? InstanceFlexibility { get; set; }
        /// <summary>DateTime of the last time the Reservation was updated.</summary>
        global::System.DateTime? LastUpdatedDateTime { get; set; }

        Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.Api20220301.IReservationMergeProperties MergeProperty { get; set; }

        float? PricingCurrencyTotalAmount { get; set; }
        /// <summary>
        /// The ISO 4217 3-letter currency code for the currency used by this purchase record.
        /// </summary>
        string PricingCurrencyTotalCurrencyCode { get; set; }
        /// <summary>Current state of the reservation.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Reservations.Support.ProvisioningState? ProvisioningState { get; set; }
        /// <summary>The provisioning state of the reservation, e.g. Succeeded</summary>
        string ProvisioningSubState { get; set; }
        /// <summary>This is the date when the Reservation was purchased.</summary>
        global::System.DateTime? PurchaseDate { get; set; }

        Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.Api20220301.IPurchaseRequestProperties PurchaseProperty { get; set; }
        /// <summary>The Azure Region where the reserved resource lives.</summary>
        string PurchasePropertyLocation { get; set; }

        Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.Api20220301.ISkuName PurchasePropertySku { get; set; }
        /// <summary>Quantity of the SKUs that are part of the Reservation.</summary>
        int? Quantity { get; set; }
        /// <summary>
        /// Setting this to true will automatically purchase a new reservation on the expiration date time.
        /// </summary>
        bool? Renew { get; set; }
        /// <summary>
        /// Reservation Id of the reservation which is purchased because of renew. Format of the resource Id is /providers/Microsoft.Capacity/reservationOrders/{reservationOrderId}/reservations/{reservationId}.
        /// </summary>
        string RenewDestination { get; set; }
        /// <summary>
        /// List of the subscriptions that the benefit will be applied. Do not specify if AppliedScopeType is Shared.
        /// </summary>
        string[] RenewPropertiesPurchasePropertiesAppliedScope { get; set; }
        /// <summary>Type of the Applied Scope.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Reservations.Support.AppliedScopeType? RenewPropertiesPurchasePropertiesAppliedScopeType { get; set; }
        /// <summary>Represent the billing plans.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Reservations.Support.ReservationBillingPlan? RenewPropertiesPurchasePropertiesBillingPlan { get; set; }
        /// <summary>Subscription that will be charged for purchasing Reservation</summary>
        string RenewPropertiesPurchasePropertiesBillingScopeId { get; set; }
        /// <summary>Friendly name of the Reservation</summary>
        string RenewPropertiesPurchasePropertiesDisplayName { get; set; }
        /// <summary>Quantity of the SKUs that are part of the Reservation.</summary>
        int? RenewPropertiesPurchasePropertiesQuantity { get; set; }
        /// <summary>
        /// Setting this to true will automatically purchase a new reservation on the expiration date time.
        /// </summary>
        bool? RenewPropertiesPurchasePropertiesRenew { get; set; }
        /// <summary>The type of the resource that is being reserved.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Reservations.Support.ReservedResourceType? RenewPropertiesPurchasePropertiesReservedResourceType { get; set; }
        /// <summary>Represent the term of Reservation.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Reservations.Support.ReservationTerm? RenewPropertiesPurchasePropertiesTerm { get; set; }

        Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.Api20220301.IRenewPropertiesResponse RenewProperty { get; set; }
        /// <summary>
        /// Currency and amount that customer will be charged in customer's local currency for renewal purchase. Tax is not included.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.Api20220301.IRenewPropertiesResponseBillingCurrencyTotal RenewPropertyBillingCurrencyTotal { get; set; }
        /// <summary>
        /// Amount that Microsoft uses for record. Used during refund for calculating refund limit. Tax is not included. This is locked
        /// price 30 days before expiry.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.Api20220301.IRenewPropertiesResponsePricingCurrencyTotal RenewPropertyPricingCurrencyTotal { get; set; }

        Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.Api20220301.IPurchaseRequest RenewPropertyPurchaseProperty { get; set; }
        /// <summary>
        /// Reservation Id of the reservation from which this reservation is renewed. Format of the resource Id is /providers/Microsoft.Capacity/reservationOrders/{reservationOrderId}/reservations/{reservationId}.
        /// </summary>
        string RenewSource { get; set; }
        /// <summary>
        /// Properties specific to each reserved resource type. Not required if not applicable.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.Api20220301.IPurchaseRequestPropertiesReservedResourceProperties ReservedResourceProperty { get; set; }
        /// <summary>
        /// Turning this on will apply the reservation discount to other VMs in the same VM size group. Only specify for VirtualMachines
        /// reserved resource type.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Reservations.Support.InstanceFlexibility? ReservedResourcePropertyInstanceFlexibility { get; set; }
        /// <summary>The type of the resource that is being reserved.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Reservations.Support.ReservedResourceType? ReservedResourceType { get; set; }
        /// <summary>Description of the SKU in english.</summary>
        string SkuDescription { get; set; }

        string SkuName { get; set; }

        Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.Api20220301.IReservationSplitProperties SplitProperty { get; set; }
        /// <summary>Represent the term of Reservation.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Reservations.Support.ReservationTerm? Term { get; set; }
        /// <summary>The applied scope type of the reservation for display, e.g. Shared</summary>
        string UserFriendlyAppliedScopeType { get; set; }
        /// <summary>The renew state of the reservation for display, e.g. On</summary>
        string UserFriendlyRenewState { get; set; }
        /// <summary>Reservation utilization</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.Api20220301.IReservationsPropertiesUtilization Utilization { get; set; }
        /// <summary>The array of aggregates of a reservation's utilization</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.Api20220301.IReservationUtilizationAggregates[] UtilizationAggregate { get; set; }
        /// <summary>The number of days trend for a reservation</summary>
        string UtilizationTrend { get; set; }

    }
}