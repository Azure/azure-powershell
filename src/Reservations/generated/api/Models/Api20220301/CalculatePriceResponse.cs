// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.Api20220301
{
    using static Microsoft.Azure.PowerShell.Cmdlets.Reservations.Runtime.Extensions;

    public partial class CalculatePriceResponse :
        Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.Api20220301.ICalculatePriceResponse,
        Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.Api20220301.ICalculatePriceResponseInternal
    {

        /// <summary>
        /// Currency and amount that customer will be charged in customer's local currency. Tax is not included.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Reservations.Origin(Microsoft.Azure.PowerShell.Cmdlets.Reservations.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.Api20220301.ICalculatePriceResponsePropertiesBillingCurrencyTotal BillingCurrencyTotal { get => ((Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.Api20220301.ICalculatePriceResponsePropertiesInternal)Property).BillingCurrencyTotal; set => ((Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.Api20220301.ICalculatePriceResponsePropertiesInternal)Property).BillingCurrencyTotal = value ?? null /* model class */; }

        /// <summary>Total amount in pricing currency.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Reservations.Origin(Microsoft.Azure.PowerShell.Cmdlets.Reservations.PropertyOrigin.Inlined)]
        public double? GrandTotal { get => ((Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.Api20220301.ICalculatePriceResponsePropertiesInternal)Property).GrandTotal; set => ((Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.Api20220301.ICalculatePriceResponsePropertiesInternal)Property).GrandTotal = value ?? default(double); }

        /// <summary>True if billing is managed by Microsoft Partner. Used only for CSP accounts.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Reservations.Origin(Microsoft.Azure.PowerShell.Cmdlets.Reservations.PropertyOrigin.Inlined)]
        public bool? IsBillingPartnerManaged { get => ((Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.Api20220301.ICalculatePriceResponsePropertiesInternal)Property).IsBillingPartnerManaged; set => ((Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.Api20220301.ICalculatePriceResponsePropertiesInternal)Property).IsBillingPartnerManaged = value ?? default(bool); }

        /// <summary>Whether or not tax is included in grand total</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Reservations.Origin(Microsoft.Azure.PowerShell.Cmdlets.Reservations.PropertyOrigin.Inlined)]
        public bool? IsTaxIncluded { get => ((Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.Api20220301.ICalculatePriceResponsePropertiesInternal)Property).IsTaxIncluded; set => ((Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.Api20220301.ICalculatePriceResponsePropertiesInternal)Property).IsTaxIncluded = value ?? default(bool); }

        /// <summary>Internal Acessors for Property</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.Api20220301.ICalculatePriceResponseProperties Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.Api20220301.ICalculatePriceResponseInternal.Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.Api20220301.CalculatePriceResponseProperties()); set { {_property = value;} } }

        /// <summary>Net total amount in pricing currency.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Reservations.Origin(Microsoft.Azure.PowerShell.Cmdlets.Reservations.PropertyOrigin.Inlined)]
        public double? NetTotal { get => ((Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.Api20220301.ICalculatePriceResponsePropertiesInternal)Property).NetTotal; set => ((Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.Api20220301.ICalculatePriceResponsePropertiesInternal)Property).NetTotal = value ?? default(double); }

        [Microsoft.Azure.PowerShell.Cmdlets.Reservations.Origin(Microsoft.Azure.PowerShell.Cmdlets.Reservations.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.Api20220301.IPaymentDetail[] PaymentSchedule { get => ((Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.Api20220301.ICalculatePriceResponsePropertiesInternal)Property).PaymentSchedule; set => ((Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.Api20220301.ICalculatePriceResponsePropertiesInternal)Property).PaymentSchedule = value ?? null /* arrayOf */; }

        /// <summary>
        /// Amount that Microsoft uses for record. Used during refund for calculating refund limit. Tax is not included.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Reservations.Origin(Microsoft.Azure.PowerShell.Cmdlets.Reservations.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.Api20220301.ICalculatePriceResponsePropertiesPricingCurrencyTotal PricingCurrencyTotal { get => ((Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.Api20220301.ICalculatePriceResponsePropertiesInternal)Property).PricingCurrencyTotal; set => ((Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.Api20220301.ICalculatePriceResponsePropertiesInternal)Property).PricingCurrencyTotal = value ?? null /* model class */; }

        /// <summary>Backing field for <see cref="Property" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.Api20220301.ICalculatePriceResponseProperties _property;

        [Microsoft.Azure.PowerShell.Cmdlets.Reservations.Origin(Microsoft.Azure.PowerShell.Cmdlets.Reservations.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.Api20220301.ICalculatePriceResponseProperties Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.Api20220301.CalculatePriceResponseProperties()); set => this._property = value; }

        /// <summary>
        /// GUID that represents reservation order that can be placed after calculating price.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Reservations.Origin(Microsoft.Azure.PowerShell.Cmdlets.Reservations.PropertyOrigin.Inlined)]
        public string ReservationOrderId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.Api20220301.ICalculatePriceResponsePropertiesInternal)Property).ReservationOrderId; set => ((Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.Api20220301.ICalculatePriceResponsePropertiesInternal)Property).ReservationOrderId = value ?? null; }

        /// <summary>Description of SKU that is being purchased.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Reservations.Origin(Microsoft.Azure.PowerShell.Cmdlets.Reservations.PropertyOrigin.Inlined)]
        public string SkuDescription { get => ((Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.Api20220301.ICalculatePriceResponsePropertiesInternal)Property).SkuDescription; set => ((Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.Api20220301.ICalculatePriceResponsePropertiesInternal)Property).SkuDescription = value ?? null; }

        /// <summary>Title of SKU that is being purchased.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Reservations.Origin(Microsoft.Azure.PowerShell.Cmdlets.Reservations.PropertyOrigin.Inlined)]
        public string SkuTitle { get => ((Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.Api20220301.ICalculatePriceResponsePropertiesInternal)Property).SkuTitle; set => ((Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.Api20220301.ICalculatePriceResponsePropertiesInternal)Property).SkuTitle = value ?? null; }

        /// <summary>Tax amount in pricing currency.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Reservations.Origin(Microsoft.Azure.PowerShell.Cmdlets.Reservations.PropertyOrigin.Inlined)]
        public double? TaxTotal { get => ((Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.Api20220301.ICalculatePriceResponsePropertiesInternal)Property).TaxTotal; set => ((Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.Api20220301.ICalculatePriceResponsePropertiesInternal)Property).TaxTotal = value ?? default(double); }

        /// <summary>Creates an new <see cref="CalculatePriceResponse" /> instance.</summary>
        public CalculatePriceResponse()
        {

        }
    }
    public partial interface ICalculatePriceResponse :
        Microsoft.Azure.PowerShell.Cmdlets.Reservations.Runtime.IJsonSerializable
    {
        /// <summary>
        /// Currency and amount that customer will be charged in customer's local currency. Tax is not included.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Reservations.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Currency and amount that customer will be charged in customer's local currency. Tax is not included.",
        SerializedName = @"billingCurrencyTotal",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.Api20220301.ICalculatePriceResponsePropertiesBillingCurrencyTotal) })]
        Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.Api20220301.ICalculatePriceResponsePropertiesBillingCurrencyTotal BillingCurrencyTotal { get; set; }
        /// <summary>Total amount in pricing currency.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Reservations.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Total amount in pricing currency.",
        SerializedName = @"grandTotal",
        PossibleTypes = new [] { typeof(double) })]
        double? GrandTotal { get; set; }
        /// <summary>True if billing is managed by Microsoft Partner. Used only for CSP accounts.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Reservations.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"True if billing is managed by Microsoft Partner. Used only for CSP accounts.",
        SerializedName = @"isBillingPartnerManaged",
        PossibleTypes = new [] { typeof(bool) })]
        bool? IsBillingPartnerManaged { get; set; }
        /// <summary>Whether or not tax is included in grand total</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Reservations.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Whether or not tax is included in grand total",
        SerializedName = @"isTaxIncluded",
        PossibleTypes = new [] { typeof(bool) })]
        bool? IsTaxIncluded { get; set; }
        /// <summary>Net total amount in pricing currency.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Reservations.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Net total amount in pricing currency.",
        SerializedName = @"netTotal",
        PossibleTypes = new [] { typeof(double) })]
        double? NetTotal { get; set; }

        [Microsoft.Azure.PowerShell.Cmdlets.Reservations.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"",
        SerializedName = @"paymentSchedule",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.Api20220301.IPaymentDetail) })]
        Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.Api20220301.IPaymentDetail[] PaymentSchedule { get; set; }
        /// <summary>
        /// Amount that Microsoft uses for record. Used during refund for calculating refund limit. Tax is not included.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Reservations.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Amount that Microsoft uses for record. Used during refund for calculating refund limit. Tax is not included.",
        SerializedName = @"pricingCurrencyTotal",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.Api20220301.ICalculatePriceResponsePropertiesPricingCurrencyTotal) })]
        Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.Api20220301.ICalculatePriceResponsePropertiesPricingCurrencyTotal PricingCurrencyTotal { get; set; }
        /// <summary>
        /// GUID that represents reservation order that can be placed after calculating price.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Reservations.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"GUID that represents reservation order that can be placed after calculating price.",
        SerializedName = @"reservationOrderId",
        PossibleTypes = new [] { typeof(string) })]
        string ReservationOrderId { get; set; }
        /// <summary>Description of SKU that is being purchased.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Reservations.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Description of SKU that is being purchased.",
        SerializedName = @"skuDescription",
        PossibleTypes = new [] { typeof(string) })]
        string SkuDescription { get; set; }
        /// <summary>Title of SKU that is being purchased.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Reservations.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Title of SKU that is being purchased.",
        SerializedName = @"skuTitle",
        PossibleTypes = new [] { typeof(string) })]
        string SkuTitle { get; set; }
        /// <summary>Tax amount in pricing currency.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Reservations.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Tax amount in pricing currency.",
        SerializedName = @"taxTotal",
        PossibleTypes = new [] { typeof(double) })]
        double? TaxTotal { get; set; }

    }
    internal partial interface ICalculatePriceResponseInternal

    {
        /// <summary>
        /// Currency and amount that customer will be charged in customer's local currency. Tax is not included.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.Api20220301.ICalculatePriceResponsePropertiesBillingCurrencyTotal BillingCurrencyTotal { get; set; }
        /// <summary>Total amount in pricing currency.</summary>
        double? GrandTotal { get; set; }
        /// <summary>True if billing is managed by Microsoft Partner. Used only for CSP accounts.</summary>
        bool? IsBillingPartnerManaged { get; set; }
        /// <summary>Whether or not tax is included in grand total</summary>
        bool? IsTaxIncluded { get; set; }
        /// <summary>Net total amount in pricing currency.</summary>
        double? NetTotal { get; set; }

        Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.Api20220301.IPaymentDetail[] PaymentSchedule { get; set; }
        /// <summary>
        /// Amount that Microsoft uses for record. Used during refund for calculating refund limit. Tax is not included.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.Api20220301.ICalculatePriceResponsePropertiesPricingCurrencyTotal PricingCurrencyTotal { get; set; }

        Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.Api20220301.ICalculatePriceResponseProperties Property { get; set; }
        /// <summary>
        /// GUID that represents reservation order that can be placed after calculating price.
        /// </summary>
        string ReservationOrderId { get; set; }
        /// <summary>Description of SKU that is being purchased.</summary>
        string SkuDescription { get; set; }
        /// <summary>Title of SKU that is being purchased.</summary>
        string SkuTitle { get; set; }
        /// <summary>Tax amount in pricing currency.</summary>
        double? TaxTotal { get; set; }

    }
}