// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.Api20220301
{
    using static Microsoft.Azure.PowerShell.Cmdlets.Reservations.Runtime.Extensions;

    /// <summary>The properties of the reservations</summary>
    public partial class ReservationsProperties
    {

        /// <summary>
        /// <c>AfterFromJson</c> will be called after the json deserialization has finished, allowing customization of the object
        /// before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="json">The JsonNode that should be deserialized into this object.</param>

        partial void AfterFromJson(Microsoft.Azure.PowerShell.Cmdlets.Reservations.Runtime.Json.JsonObject json);

        /// <summary>
        /// <c>AfterToJson</c> will be called after the json serialization has finished, allowing customization of the <see cref="Microsoft.Azure.PowerShell.Cmdlets.Reservations.Runtime.Json.JsonObject"
        /// /> before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="container">The JSON container that the serialization result will be placed in.</param>

        partial void AfterToJson(ref Microsoft.Azure.PowerShell.Cmdlets.Reservations.Runtime.Json.JsonObject container);

        /// <summary>
        /// <c>BeforeFromJson</c> will be called before the json deserialization has commenced, allowing complete customization of
        /// the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <paramref name= "returnNow" />
        /// output parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="json">The JsonNode that should be deserialized into this object.</param>
        /// <param name="returnNow">Determines if the rest of the deserialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeFromJson(Microsoft.Azure.PowerShell.Cmdlets.Reservations.Runtime.Json.JsonObject json, ref bool returnNow);

        /// <summary>
        /// <c>BeforeToJson</c> will be called before the json serialization has commenced, allowing complete customization of the
        /// object before it is serialized.
        /// If you wish to disable the default serialization entirely, return <c>true</c> in the <paramref name="returnNow" /> output
        /// parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="container">The JSON container that the serialization result will be placed in.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeToJson(ref Microsoft.Azure.PowerShell.Cmdlets.Reservations.Runtime.Json.JsonObject container, ref bool returnNow);

        /// <summary>
        /// Deserializes a <see cref="Microsoft.Azure.PowerShell.Cmdlets.Reservations.Runtime.Json.JsonNode"/> into an instance of Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.Api20220301.IReservationsProperties.
        /// </summary>
        /// <param name="node">a <see cref="Microsoft.Azure.PowerShell.Cmdlets.Reservations.Runtime.Json.JsonNode" /> to deserialize from.</param>
        /// <returns>
        /// an instance of Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.Api20220301.IReservationsProperties.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.Api20220301.IReservationsProperties FromJson(Microsoft.Azure.PowerShell.Cmdlets.Reservations.Runtime.Json.JsonNode node)
        {
            return node is Microsoft.Azure.PowerShell.Cmdlets.Reservations.Runtime.Json.JsonObject json ? new ReservationsProperties(json) : null;
        }

        /// <summary>
        /// Deserializes a Microsoft.Azure.PowerShell.Cmdlets.Reservations.Runtime.Json.JsonObject into a new instance of <see cref="ReservationsProperties" />.
        /// </summary>
        /// <param name="json">A Microsoft.Azure.PowerShell.Cmdlets.Reservations.Runtime.Json.JsonObject instance to deserialize from.</param>
        internal ReservationsProperties(Microsoft.Azure.PowerShell.Cmdlets.Reservations.Runtime.Json.JsonObject json)
        {
            bool returnNow = false;
            BeforeFromJson(json, ref returnNow);
            if (returnNow)
            {
                return;
            }
            {_renewProperty = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Reservations.Runtime.Json.JsonObject>("renewProperties"), out var __jsonRenewProperties) ? Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.Api20220301.RenewPropertiesResponse.FromJson(__jsonRenewProperties) : RenewProperty;}
            {_utilization = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Reservations.Runtime.Json.JsonObject>("utilization"), out var __jsonUtilization) ? Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.Api20220301.ReservationsPropertiesUtilization.FromJson(__jsonUtilization) : Utilization;}
            {_reservedResourceType = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Reservations.Runtime.Json.JsonString>("reservedResourceType"), out var __jsonReservedResourceType) ? (string)__jsonReservedResourceType : (string)ReservedResourceType;}
            {_instanceFlexibility = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Reservations.Runtime.Json.JsonString>("instanceFlexibility"), out var __jsonInstanceFlexibility) ? (string)__jsonInstanceFlexibility : (string)InstanceFlexibility;}
            {_displayName = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Reservations.Runtime.Json.JsonString>("displayName"), out var __jsonDisplayName) ? (string)__jsonDisplayName : (string)DisplayName;}
            {_appliedScope = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Reservations.Runtime.Json.JsonArray>("appliedScopes"), out var __jsonAppliedScopes) ? If( __jsonAppliedScopes as Microsoft.Azure.PowerShell.Cmdlets.Reservations.Runtime.Json.JsonArray, out var __v) ? new global::System.Func<string[]>(()=> global::System.Linq.Enumerable.ToArray(global::System.Linq.Enumerable.Select(__v, (__u)=>(string) (__u is Microsoft.Azure.PowerShell.Cmdlets.Reservations.Runtime.Json.JsonString __t ? (string)(__t.ToString()) : null)) ))() : null : AppliedScope;}
            {_appliedScopeType = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Reservations.Runtime.Json.JsonString>("appliedScopeType"), out var __jsonAppliedScopeType) ? (string)__jsonAppliedScopeType : (string)AppliedScopeType;}
            {_archived = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Reservations.Runtime.Json.JsonBoolean>("archived"), out var __jsonArchived) ? (bool?)__jsonArchived : Archived;}
            {_capability = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Reservations.Runtime.Json.JsonString>("capabilities"), out var __jsonCapabilities) ? (string)__jsonCapabilities : (string)Capability;}
            {_quantity = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Reservations.Runtime.Json.JsonNumber>("quantity"), out var __jsonQuantity) ? (int?)__jsonQuantity : Quantity;}
            {_provisioningState = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Reservations.Runtime.Json.JsonString>("provisioningState"), out var __jsonProvisioningState) ? (string)__jsonProvisioningState : (string)ProvisioningState;}
            {_effectiveDateTime = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Reservations.Runtime.Json.JsonString>("effectiveDateTime"), out var __jsonEffectiveDateTime) ? global::System.DateTime.TryParse((string)__jsonEffectiveDateTime, global::System.Globalization.CultureInfo.InvariantCulture, global::System.Globalization.DateTimeStyles.AdjustToUniversal, out var __jsonEffectiveDateTimeValue) ? __jsonEffectiveDateTimeValue : EffectiveDateTime : EffectiveDateTime;}
            {_benefitStartTime = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Reservations.Runtime.Json.JsonString>("benefitStartTime"), out var __jsonBenefitStartTime) ? global::System.DateTime.TryParse((string)__jsonBenefitStartTime, global::System.Globalization.CultureInfo.InvariantCulture, global::System.Globalization.DateTimeStyles.AdjustToUniversal, out var __jsonBenefitStartTimeValue) ? __jsonBenefitStartTimeValue : BenefitStartTime : BenefitStartTime;}
            {_lastUpdatedDateTime = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Reservations.Runtime.Json.JsonString>("lastUpdatedDateTime"), out var __jsonLastUpdatedDateTime) ? global::System.DateTime.TryParse((string)__jsonLastUpdatedDateTime, global::System.Globalization.CultureInfo.InvariantCulture, global::System.Globalization.DateTimeStyles.AdjustToUniversal, out var __jsonLastUpdatedDateTimeValue) ? __jsonLastUpdatedDateTimeValue : LastUpdatedDateTime : LastUpdatedDateTime;}
            {_expiryDate = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Reservations.Runtime.Json.JsonString>("expiryDate"), out var __jsonExpiryDate) ? global::System.DateTime.TryParse((string)__jsonExpiryDate, global::System.Globalization.CultureInfo.InvariantCulture, global::System.Globalization.DateTimeStyles.AdjustToUniversal, out var __jsonExpiryDateValue) ? __jsonExpiryDateValue : ExpiryDate : ExpiryDate;}
            {_skuDescription = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Reservations.Runtime.Json.JsonString>("skuDescription"), out var __jsonSkuDescription) ? (string)__jsonSkuDescription : (string)SkuDescription;}
            {_extendedStatusInfo = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Reservations.Runtime.Json.JsonObject>("extendedStatusInfo"), out var __jsonExtendedStatusInfo) ? Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.Api20220301.ExtendedStatusInfo.FromJson(__jsonExtendedStatusInfo) : ExtendedStatusInfo;}
            {_billingPlan = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Reservations.Runtime.Json.JsonString>("billingPlan"), out var __jsonBillingPlan) ? (string)__jsonBillingPlan : (string)BillingPlan;}
            {_displayProvisioningState = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Reservations.Runtime.Json.JsonString>("displayProvisioningState"), out var __jsonDisplayProvisioningState) ? (string)__jsonDisplayProvisioningState : (string)DisplayProvisioningState;}
            {_provisioningSubState = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Reservations.Runtime.Json.JsonString>("provisioningSubState"), out var __jsonProvisioningSubState) ? (string)__jsonProvisioningSubState : (string)ProvisioningSubState;}
            {_purchaseDate = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Reservations.Runtime.Json.JsonString>("purchaseDate"), out var __jsonPurchaseDate) ? global::System.DateTime.TryParse((string)__jsonPurchaseDate, global::System.Globalization.CultureInfo.InvariantCulture, global::System.Globalization.DateTimeStyles.AdjustToUniversal, out var __jsonPurchaseDateValue) ? __jsonPurchaseDateValue : PurchaseDate : PurchaseDate;}
            {_splitProperty = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Reservations.Runtime.Json.JsonObject>("splitProperties"), out var __jsonSplitProperties) ? Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.Api20220301.ReservationSplitProperties.FromJson(__jsonSplitProperties) : SplitProperty;}
            {_mergeProperty = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Reservations.Runtime.Json.JsonObject>("mergeProperties"), out var __jsonMergeProperties) ? Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.Api20220301.ReservationMergeProperties.FromJson(__jsonMergeProperties) : MergeProperty;}
            {_billingScopeId = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Reservations.Runtime.Json.JsonString>("billingScopeId"), out var __jsonBillingScopeId) ? (string)__jsonBillingScopeId : (string)BillingScopeId;}
            {_renew = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Reservations.Runtime.Json.JsonBoolean>("renew"), out var __jsonRenew) ? (bool?)__jsonRenew : Renew;}
            {_renewSource = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Reservations.Runtime.Json.JsonString>("renewSource"), out var __jsonRenewSource) ? (string)__jsonRenewSource : (string)RenewSource;}
            {_renewDestination = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Reservations.Runtime.Json.JsonString>("renewDestination"), out var __jsonRenewDestination) ? (string)__jsonRenewDestination : (string)RenewDestination;}
            {_term = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Reservations.Runtime.Json.JsonString>("term"), out var __jsonTerm) ? (string)__jsonTerm : (string)Term;}
            {_userFriendlyAppliedScopeType = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Reservations.Runtime.Json.JsonString>("userFriendlyAppliedScopeType"), out var __jsonUserFriendlyAppliedScopeType) ? (string)__jsonUserFriendlyAppliedScopeType : (string)UserFriendlyAppliedScopeType;}
            {_userFriendlyRenewState = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Reservations.Runtime.Json.JsonString>("userFriendlyRenewState"), out var __jsonUserFriendlyRenewState) ? (string)__jsonUserFriendlyRenewState : (string)UserFriendlyRenewState;}
            AfterFromJson(json);
        }

        /// <summary>
        /// Serializes this instance of <see cref="ReservationsProperties" /> into a <see cref="Microsoft.Azure.PowerShell.Cmdlets.Reservations.Runtime.Json.JsonNode" />.
        /// </summary>
        /// <param name="container">The <see cref="Microsoft.Azure.PowerShell.Cmdlets.Reservations.Runtime.Json.JsonObject"/> container to serialize this object into. If the caller
        /// passes in <c>null</c>, a new instance will be created and returned to the caller.</param>
        /// <param name="serializationMode">Allows the caller to choose the depth of the serialization. See <see cref="Microsoft.Azure.PowerShell.Cmdlets.Reservations.Runtime.SerializationMode"/>.</param>
        /// <returns>
        /// a serialized instance of <see cref="ReservationsProperties" /> as a <see cref="Microsoft.Azure.PowerShell.Cmdlets.Reservations.Runtime.Json.JsonNode" />.
        /// </returns>
        public Microsoft.Azure.PowerShell.Cmdlets.Reservations.Runtime.Json.JsonNode ToJson(Microsoft.Azure.PowerShell.Cmdlets.Reservations.Runtime.Json.JsonObject container, Microsoft.Azure.PowerShell.Cmdlets.Reservations.Runtime.SerializationMode serializationMode)
        {
            container = container ?? new Microsoft.Azure.PowerShell.Cmdlets.Reservations.Runtime.Json.JsonObject();

            bool returnNow = false;
            BeforeToJson(ref container, ref returnNow);
            if (returnNow)
            {
                return container;
            }
            AddIf( null != this._renewProperty ? (Microsoft.Azure.PowerShell.Cmdlets.Reservations.Runtime.Json.JsonNode) this._renewProperty.ToJson(null,serializationMode) : null, "renewProperties" ,container.Add );
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.Reservations.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != this._utilization ? (Microsoft.Azure.PowerShell.Cmdlets.Reservations.Runtime.Json.JsonNode) this._utilization.ToJson(null,serializationMode) : null, "utilization" ,container.Add );
            }
            AddIf( null != (((object)this._reservedResourceType)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.Reservations.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.Reservations.Runtime.Json.JsonString(this._reservedResourceType.ToString()) : null, "reservedResourceType" ,container.Add );
            AddIf( null != (((object)this._instanceFlexibility)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.Reservations.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.Reservations.Runtime.Json.JsonString(this._instanceFlexibility.ToString()) : null, "instanceFlexibility" ,container.Add );
            AddIf( null != (((object)this._displayName)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.Reservations.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.Reservations.Runtime.Json.JsonString(this._displayName.ToString()) : null, "displayName" ,container.Add );
            if (null != this._appliedScope)
            {
                var __w = new Microsoft.Azure.PowerShell.Cmdlets.Reservations.Runtime.Json.XNodeArray();
                foreach( var __x in this._appliedScope )
                {
                    AddIf(null != (((object)__x)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.Reservations.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.Reservations.Runtime.Json.JsonString(__x.ToString()) : null ,__w.Add);
                }
                container.Add("appliedScopes",__w);
            }
            AddIf( null != (((object)this._appliedScopeType)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.Reservations.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.Reservations.Runtime.Json.JsonString(this._appliedScopeType.ToString()) : null, "appliedScopeType" ,container.Add );
            AddIf( null != this._archived ? (Microsoft.Azure.PowerShell.Cmdlets.Reservations.Runtime.Json.JsonNode)new Microsoft.Azure.PowerShell.Cmdlets.Reservations.Runtime.Json.JsonBoolean((bool)this._archived) : null, "archived" ,container.Add );
            AddIf( null != (((object)this._capability)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.Reservations.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.Reservations.Runtime.Json.JsonString(this._capability.ToString()) : null, "capabilities" ,container.Add );
            AddIf( null != this._quantity ? (Microsoft.Azure.PowerShell.Cmdlets.Reservations.Runtime.Json.JsonNode)new Microsoft.Azure.PowerShell.Cmdlets.Reservations.Runtime.Json.JsonNumber((int)this._quantity) : null, "quantity" ,container.Add );
            AddIf( null != (((object)this._provisioningState)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.Reservations.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.Reservations.Runtime.Json.JsonString(this._provisioningState.ToString()) : null, "provisioningState" ,container.Add );
            AddIf( null != this._effectiveDateTime ? (Microsoft.Azure.PowerShell.Cmdlets.Reservations.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.Reservations.Runtime.Json.JsonString(this._effectiveDateTime?.ToString(@"yyyy'-'MM'-'dd'T'HH':'mm':'ss.fffffffK",global::System.Globalization.CultureInfo.InvariantCulture)) : null, "effectiveDateTime" ,container.Add );
            AddIf( null != this._benefitStartTime ? (Microsoft.Azure.PowerShell.Cmdlets.Reservations.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.Reservations.Runtime.Json.JsonString(this._benefitStartTime?.ToString(@"yyyy'-'MM'-'dd'T'HH':'mm':'ss.fffffffK",global::System.Globalization.CultureInfo.InvariantCulture)) : null, "benefitStartTime" ,container.Add );
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.Reservations.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != this._lastUpdatedDateTime ? (Microsoft.Azure.PowerShell.Cmdlets.Reservations.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.Reservations.Runtime.Json.JsonString(this._lastUpdatedDateTime?.ToString(@"yyyy'-'MM'-'dd'T'HH':'mm':'ss.fffffffK",global::System.Globalization.CultureInfo.InvariantCulture)) : null, "lastUpdatedDateTime" ,container.Add );
            }
            AddIf( null != this._expiryDate ? (Microsoft.Azure.PowerShell.Cmdlets.Reservations.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.Reservations.Runtime.Json.JsonString(this._expiryDate?.ToString(@"yyyy-MM-dd",global::System.Globalization.CultureInfo.InvariantCulture)) : null, "expiryDate" ,container.Add );
            AddIf( null != (((object)this._skuDescription)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.Reservations.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.Reservations.Runtime.Json.JsonString(this._skuDescription.ToString()) : null, "skuDescription" ,container.Add );
            AddIf( null != this._extendedStatusInfo ? (Microsoft.Azure.PowerShell.Cmdlets.Reservations.Runtime.Json.JsonNode) this._extendedStatusInfo.ToJson(null,serializationMode) : null, "extendedStatusInfo" ,container.Add );
            AddIf( null != (((object)this._billingPlan)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.Reservations.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.Reservations.Runtime.Json.JsonString(this._billingPlan.ToString()) : null, "billingPlan" ,container.Add );
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.Reservations.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != (((object)this._displayProvisioningState)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.Reservations.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.Reservations.Runtime.Json.JsonString(this._displayProvisioningState.ToString()) : null, "displayProvisioningState" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.Reservations.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != (((object)this._provisioningSubState)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.Reservations.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.Reservations.Runtime.Json.JsonString(this._provisioningSubState.ToString()) : null, "provisioningSubState" ,container.Add );
            }
            AddIf( null != this._purchaseDate ? (Microsoft.Azure.PowerShell.Cmdlets.Reservations.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.Reservations.Runtime.Json.JsonString(this._purchaseDate?.ToString(@"yyyy-MM-dd",global::System.Globalization.CultureInfo.InvariantCulture)) : null, "purchaseDate" ,container.Add );
            AddIf( null != this._splitProperty ? (Microsoft.Azure.PowerShell.Cmdlets.Reservations.Runtime.Json.JsonNode) this._splitProperty.ToJson(null,serializationMode) : null, "splitProperties" ,container.Add );
            AddIf( null != this._mergeProperty ? (Microsoft.Azure.PowerShell.Cmdlets.Reservations.Runtime.Json.JsonNode) this._mergeProperty.ToJson(null,serializationMode) : null, "mergeProperties" ,container.Add );
            AddIf( null != (((object)this._billingScopeId)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.Reservations.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.Reservations.Runtime.Json.JsonString(this._billingScopeId.ToString()) : null, "billingScopeId" ,container.Add );
            AddIf( null != this._renew ? (Microsoft.Azure.PowerShell.Cmdlets.Reservations.Runtime.Json.JsonNode)new Microsoft.Azure.PowerShell.Cmdlets.Reservations.Runtime.Json.JsonBoolean((bool)this._renew) : null, "renew" ,container.Add );
            AddIf( null != (((object)this._renewSource)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.Reservations.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.Reservations.Runtime.Json.JsonString(this._renewSource.ToString()) : null, "renewSource" ,container.Add );
            AddIf( null != (((object)this._renewDestination)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.Reservations.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.Reservations.Runtime.Json.JsonString(this._renewDestination.ToString()) : null, "renewDestination" ,container.Add );
            AddIf( null != (((object)this._term)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.Reservations.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.Reservations.Runtime.Json.JsonString(this._term.ToString()) : null, "term" ,container.Add );
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.Reservations.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != (((object)this._userFriendlyAppliedScopeType)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.Reservations.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.Reservations.Runtime.Json.JsonString(this._userFriendlyAppliedScopeType.ToString()) : null, "userFriendlyAppliedScopeType" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.Reservations.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != (((object)this._userFriendlyRenewState)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.Reservations.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.Reservations.Runtime.Json.JsonString(this._userFriendlyRenewState.ToString()) : null, "userFriendlyRenewState" ,container.Add );
            }
            AfterToJson(ref container);
            return container;
        }
    }
}