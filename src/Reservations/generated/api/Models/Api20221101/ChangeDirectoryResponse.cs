// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.Api20221101
{
    using static Microsoft.Azure.PowerShell.Cmdlets.Reservations.Runtime.Extensions;

    /// <summary>Change directory response</summary>
    public partial class ChangeDirectoryResponse :
        Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.Api20221101.IChangeDirectoryResponse,
        Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.Api20221101.IChangeDirectoryResponseInternal
    {

        /// <summary>Internal Acessors for ReservationOrder</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.Api20221101.IChangeDirectoryResult Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.Api20221101.IChangeDirectoryResponseInternal.ReservationOrder { get => (this._reservationOrder = this._reservationOrder ?? new Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.Api20221101.ChangeDirectoryResult()); set { {_reservationOrder = value;} } }

        /// <summary>Backing field for <see cref="Reservation" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.Api20221101.IChangeDirectoryResult[] _reservation;

        [Microsoft.Azure.PowerShell.Cmdlets.Reservations.Origin(Microsoft.Azure.PowerShell.Cmdlets.Reservations.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.Api20221101.IChangeDirectoryResult[] Reservation { get => this._reservation; set => this._reservation = value; }

        /// <summary>Backing field for <see cref="ReservationOrder" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.Api20221101.IChangeDirectoryResult _reservationOrder;

        /// <summary>Change directory result for reservation order or reservation</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Reservations.Origin(Microsoft.Azure.PowerShell.Cmdlets.Reservations.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.Api20221101.IChangeDirectoryResult ReservationOrder { get => (this._reservationOrder = this._reservationOrder ?? new Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.Api20221101.ChangeDirectoryResult()); set => this._reservationOrder = value; }

        /// <summary>Error reason if operation failed. Null otherwise</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Reservations.Origin(Microsoft.Azure.PowerShell.Cmdlets.Reservations.PropertyOrigin.Inlined)]
        public string ReservationOrderError { get => ((Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.Api20221101.IChangeDirectoryResultInternal)ReservationOrder).Error; set => ((Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.Api20221101.IChangeDirectoryResultInternal)ReservationOrder).Error = value ?? null; }

        /// <summary>Identifier of the reservation order or reservation</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Reservations.Origin(Microsoft.Azure.PowerShell.Cmdlets.Reservations.PropertyOrigin.Inlined)]
        public string ReservationOrderId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.Api20221101.IChangeDirectoryResultInternal)ReservationOrder).Id; set => ((Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.Api20221101.IChangeDirectoryResultInternal)ReservationOrder).Id = value ?? null; }

        /// <summary>
        /// True if change directory operation succeeded on this reservation order or reservation
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Reservations.Origin(Microsoft.Azure.PowerShell.Cmdlets.Reservations.PropertyOrigin.Inlined)]
        public bool? ReservationOrderIsSucceeded { get => ((Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.Api20221101.IChangeDirectoryResultInternal)ReservationOrder).IsSucceeded; set => ((Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.Api20221101.IChangeDirectoryResultInternal)ReservationOrder).IsSucceeded = value ?? default(bool); }

        /// <summary>Name of the reservation order or reservation</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Reservations.Origin(Microsoft.Azure.PowerShell.Cmdlets.Reservations.PropertyOrigin.Inlined)]
        public string ReservationOrderName { get => ((Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.Api20221101.IChangeDirectoryResultInternal)ReservationOrder).Name; set => ((Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.Api20221101.IChangeDirectoryResultInternal)ReservationOrder).Name = value ?? null; }

        /// <summary>Creates an new <see cref="ChangeDirectoryResponse" /> instance.</summary>
        public ChangeDirectoryResponse()
        {

        }
    }
    /// Change directory response
    public partial interface IChangeDirectoryResponse :
        Microsoft.Azure.PowerShell.Cmdlets.Reservations.Runtime.IJsonSerializable
    {
        [Microsoft.Azure.PowerShell.Cmdlets.Reservations.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"",
        SerializedName = @"reservations",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.Api20221101.IChangeDirectoryResult) })]
        Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.Api20221101.IChangeDirectoryResult[] Reservation { get; set; }
        /// <summary>Error reason if operation failed. Null otherwise</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Reservations.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Error reason if operation failed. Null otherwise",
        SerializedName = @"error",
        PossibleTypes = new [] { typeof(string) })]
        string ReservationOrderError { get; set; }
        /// <summary>Identifier of the reservation order or reservation</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Reservations.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Identifier of the reservation order or reservation",
        SerializedName = @"id",
        PossibleTypes = new [] { typeof(string) })]
        string ReservationOrderId { get; set; }
        /// <summary>
        /// True if change directory operation succeeded on this reservation order or reservation
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Reservations.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"True if change directory operation succeeded on this reservation order or reservation",
        SerializedName = @"isSucceeded",
        PossibleTypes = new [] { typeof(bool) })]
        bool? ReservationOrderIsSucceeded { get; set; }
        /// <summary>Name of the reservation order or reservation</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Reservations.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Name of the reservation order or reservation",
        SerializedName = @"name",
        PossibleTypes = new [] { typeof(string) })]
        string ReservationOrderName { get; set; }

    }
    /// Change directory response
    internal partial interface IChangeDirectoryResponseInternal

    {
        Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.Api20221101.IChangeDirectoryResult[] Reservation { get; set; }
        /// <summary>Change directory result for reservation order or reservation</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.Api20221101.IChangeDirectoryResult ReservationOrder { get; set; }
        /// <summary>Error reason if operation failed. Null otherwise</summary>
        string ReservationOrderError { get; set; }
        /// <summary>Identifier of the reservation order or reservation</summary>
        string ReservationOrderId { get; set; }
        /// <summary>
        /// True if change directory operation succeeded on this reservation order or reservation
        /// </summary>
        bool? ReservationOrderIsSucceeded { get; set; }
        /// <summary>Name of the reservation order or reservation</summary>
        string ReservationOrderName { get; set; }

    }
}