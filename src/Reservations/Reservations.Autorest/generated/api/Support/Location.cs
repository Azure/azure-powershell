// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Reservations.Support
{

    /// <summary>
    /// Location in which the Resources needs to be reserved. It cannot be changed after the resource has been created.
    /// </summary>
    public partial struct Location :
        System.IEquatable<Location>
    {
        public static Microsoft.Azure.PowerShell.Cmdlets.Reservations.Support.Location Australiaeast = @"australiaeast";

        public static Microsoft.Azure.PowerShell.Cmdlets.Reservations.Support.Location Australiasoutheast = @"australiasoutheast";

        public static Microsoft.Azure.PowerShell.Cmdlets.Reservations.Support.Location Brazilsouth = @"brazilsouth";

        public static Microsoft.Azure.PowerShell.Cmdlets.Reservations.Support.Location Canadacentral = @"canadacentral";

        public static Microsoft.Azure.PowerShell.Cmdlets.Reservations.Support.Location Canadaeast = @"canadaeast";

        public static Microsoft.Azure.PowerShell.Cmdlets.Reservations.Support.Location Centralindia = @"centralindia";

        public static Microsoft.Azure.PowerShell.Cmdlets.Reservations.Support.Location Centralus = @"centralus";

        public static Microsoft.Azure.PowerShell.Cmdlets.Reservations.Support.Location Eastasia = @"eastasia";

        public static Microsoft.Azure.PowerShell.Cmdlets.Reservations.Support.Location Eastus = @"eastus";

        public static Microsoft.Azure.PowerShell.Cmdlets.Reservations.Support.Location Eastus2 = @"eastus2";

        public static Microsoft.Azure.PowerShell.Cmdlets.Reservations.Support.Location Japaneast = @"japaneast";

        public static Microsoft.Azure.PowerShell.Cmdlets.Reservations.Support.Location Japanwest = @"japanwest";

        public static Microsoft.Azure.PowerShell.Cmdlets.Reservations.Support.Location Northcentralus = @"northcentralus";

        public static Microsoft.Azure.PowerShell.Cmdlets.Reservations.Support.Location Northeurope = @"northeurope";

        public static Microsoft.Azure.PowerShell.Cmdlets.Reservations.Support.Location Southcentralus = @"southcentralus";

        public static Microsoft.Azure.PowerShell.Cmdlets.Reservations.Support.Location Southeastasia = @"southeastasia";

        public static Microsoft.Azure.PowerShell.Cmdlets.Reservations.Support.Location Southindia = @"southindia";

        public static Microsoft.Azure.PowerShell.Cmdlets.Reservations.Support.Location Uksouth = @"uksouth";

        public static Microsoft.Azure.PowerShell.Cmdlets.Reservations.Support.Location Ukwest = @"ukwest";

        public static Microsoft.Azure.PowerShell.Cmdlets.Reservations.Support.Location Westcentralus = @"westcentralus";

        public static Microsoft.Azure.PowerShell.Cmdlets.Reservations.Support.Location Westeurope = @"westeurope";

        public static Microsoft.Azure.PowerShell.Cmdlets.Reservations.Support.Location Westindia = @"westindia";

        public static Microsoft.Azure.PowerShell.Cmdlets.Reservations.Support.Location Westus = @"westus";

        public static Microsoft.Azure.PowerShell.Cmdlets.Reservations.Support.Location Westus2 = @"westus2";

        /// <summary>the value for an instance of the <see cref="Location" /> Enum.</summary>
        private string _value { get; set; }

        /// <summary>Conversion from arbitrary object to Location</summary>
        /// <param name="value">the value to convert to an instance of <see cref="Location" />.</param>
        internal static object CreateFrom(object value)
        {
            return new Location(global::System.Convert.ToString(value));
        }

        /// <summary>Compares values of enum type Location</summary>
        /// <param name="e">the value to compare against this instance.</param>
        /// <returns><c>true</c> if the two instances are equal to the same value</returns>
        public bool Equals(Microsoft.Azure.PowerShell.Cmdlets.Reservations.Support.Location e)
        {
            return _value.Equals(e._value);
        }

        /// <summary>Compares values of enum type Location (override for Object)</summary>
        /// <param name="obj">the value to compare against this instance.</param>
        /// <returns><c>true</c> if the two instances are equal to the same value</returns>
        public override bool Equals(object obj)
        {
            return obj is Location && Equals((Location)obj);
        }

        /// <summary>Returns hashCode for enum Location</summary>
        /// <returns>The hashCode of the value</returns>
        public override int GetHashCode()
        {
            return this._value.GetHashCode();
        }

        /// <summary>Creates an instance of the <see cref="Location"/> Enum class.</summary>
        /// <param name="underlyingValue">the value to create an instance for.</param>
        private Location(string underlyingValue)
        {
            this._value = underlyingValue;
        }

        /// <summary>Returns string representation for Location</summary>
        /// <returns>A string for this value.</returns>
        public override string ToString()
        {
            return this._value;
        }

        /// <summary>Implicit operator to convert string to Location</summary>
        /// <param name="value">the value to convert to an instance of <see cref="Location" />.</param>

        public static implicit operator Location(string value)
        {
            return new Location(value);
        }

        /// <summary>Implicit operator to convert Location to string</summary>
        /// <param name="e">the value to convert to an instance of <see cref="Location" />.</param>

        public static implicit operator string(Microsoft.Azure.PowerShell.Cmdlets.Reservations.Support.Location e)
        {
            return e._value;
        }

        /// <summary>Overriding != operator for enum Location</summary>
        /// <param name="e1">the value to compare against <paramref name="e2" /></param>
        /// <param name="e2">the value to compare against <paramref name="e1" /></param>
        /// <returns><c>true</c> if the two instances are not equal to the same value</returns>
        public static bool operator !=(Microsoft.Azure.PowerShell.Cmdlets.Reservations.Support.Location e1, Microsoft.Azure.PowerShell.Cmdlets.Reservations.Support.Location e2)
        {
            return !e2.Equals(e1);
        }

        /// <summary>Overriding == operator for enum Location</summary>
        /// <param name="e1">the value to compare against <paramref name="e2" /></param>
        /// <param name="e2">the value to compare against <paramref name="e1" /></param>
        /// <returns><c>true</c> if the two instances are equal to the same value</returns>
        public static bool operator ==(Microsoft.Azure.PowerShell.Cmdlets.Reservations.Support.Location e1, Microsoft.Azure.PowerShell.Cmdlets.Reservations.Support.Location e2)
        {
            return e2.Equals(e1);
        }
    }
}