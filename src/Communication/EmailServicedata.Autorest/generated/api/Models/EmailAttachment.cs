// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.EmailServicedata.Models
{
    using static Microsoft.Azure.PowerShell.Cmdlets.EmailServicedata.Runtime.Extensions;

    /// <summary>Attachment to the email.</summary>
    public partial class EmailAttachment :
        Microsoft.Azure.PowerShell.Cmdlets.EmailServicedata.Models.IEmailAttachment,
        Microsoft.Azure.PowerShell.Cmdlets.EmailServicedata.Models.IEmailAttachmentInternal
    {

        /// <summary>Backing field for <see cref="ContentInBase64" /> property.</summary>
        private byte[] _contentInBase64;

        /// <summary>Base64 encoded contents of the attachment</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EmailServicedata.Origin(Microsoft.Azure.PowerShell.Cmdlets.EmailServicedata.PropertyOrigin.Owned)]
        public byte[] ContentInBase64 { get => this._contentInBase64; set => this._contentInBase64 = value; }

        /// <summary>Backing field for <see cref="ContentType" /> property.</summary>
        private string _contentType;

        /// <summary>MIME type of the content being attached.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EmailServicedata.Origin(Microsoft.Azure.PowerShell.Cmdlets.EmailServicedata.PropertyOrigin.Owned)]
        public string ContentType { get => this._contentType; set => this._contentType = value; }

        /// <summary>Backing field for <see cref="Name" /> property.</summary>
        private string _name;

        /// <summary>Name of the attachment</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EmailServicedata.Origin(Microsoft.Azure.PowerShell.Cmdlets.EmailServicedata.PropertyOrigin.Owned)]
        public string Name { get => this._name; set => this._name = value; }

        /// <summary>Creates an new <see cref="EmailAttachment" /> instance.</summary>
        public EmailAttachment()
        {

        }
    }
    /// Attachment to the email.
    public partial interface IEmailAttachment :
        Microsoft.Azure.PowerShell.Cmdlets.EmailServicedata.Runtime.IJsonSerializable
    {
        /// <summary>Base64 encoded contents of the attachment</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EmailServicedata.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Base64 encoded contents of the attachment",
        SerializedName = @"contentInBase64",
        PossibleTypes = new [] { typeof(byte[]) })]
        byte[] ContentInBase64 { get; set; }
        /// <summary>MIME type of the content being attached.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EmailServicedata.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"MIME type of the content being attached.",
        SerializedName = @"contentType",
        PossibleTypes = new [] { typeof(string) })]
        string ContentType { get; set; }
        /// <summary>Name of the attachment</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EmailServicedata.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Name of the attachment",
        SerializedName = @"name",
        PossibleTypes = new [] { typeof(string) })]
        string Name { get; set; }

    }
    /// Attachment to the email.
    internal partial interface IEmailAttachmentInternal

    {
        /// <summary>Base64 encoded contents of the attachment</summary>
        byte[] ContentInBase64 { get; set; }
        /// <summary>MIME type of the content being attached.</summary>
        string ContentType { get; set; }
        /// <summary>Name of the attachment</summary>
        string Name { get; set; }

    }
}