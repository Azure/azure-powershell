// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.EmailService.Models
{
    using Microsoft.Azure.PowerShell.Cmdlets.EmailService.Runtime.PowerShell;

    /// <summary>List of DnsRecord</summary>
    [System.ComponentModel.TypeConverter(typeof(DomainPropertiesVerificationRecordsTypeConverter))]
    public partial class DomainPropertiesVerificationRecords
    {

        /// <summary>
        /// <c>AfterDeserializeDictionary</c> will be called after the deserialization has finished, allowing customization of the
        /// object before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>

        partial void AfterDeserializeDictionary(global::System.Collections.IDictionary content);

        /// <summary>
        /// <c>AfterDeserializePSObject</c> will be called after the deserialization has finished, allowing customization of the object
        /// before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>

        partial void AfterDeserializePSObject(global::System.Management.Automation.PSObject content);

        /// <summary>
        /// <c>BeforeDeserializeDictionary</c> will be called before the deserialization has commenced, allowing complete customization
        /// of the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <paramref name="returnNow" /> output
        /// parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeDeserializeDictionary(global::System.Collections.IDictionary content, ref bool returnNow);

        /// <summary>
        /// <c>BeforeDeserializePSObject</c> will be called before the deserialization has commenced, allowing complete customization
        /// of the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <paramref name="returnNow" /> output
        /// parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeDeserializePSObject(global::System.Management.Automation.PSObject content, ref bool returnNow);

        /// <summary>
        /// <c>OverrideToString</c> will be called if it is implemented. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="stringResult">/// instance serialized to a string, normally it is a Json</param>
        /// <param name="returnNow">/// set returnNow to true if you provide a customized OverrideToString function</param>

        partial void OverrideToString(ref string stringResult, ref bool returnNow);

        /// <summary>
        /// Deserializes a <see cref="global::System.Collections.IDictionary" /> into an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.EmailService.Models.DomainPropertiesVerificationRecords"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        /// <returns>
        /// an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.EmailService.Models.IDomainPropertiesVerificationRecords"
        /// />.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.EmailService.Models.IDomainPropertiesVerificationRecords DeserializeFromDictionary(global::System.Collections.IDictionary content)
        {
            return new DomainPropertiesVerificationRecords(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Management.Automation.PSObject" /> into an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.EmailService.Models.DomainPropertiesVerificationRecords"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        /// <returns>
        /// an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.EmailService.Models.IDomainPropertiesVerificationRecords"
        /// />.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.EmailService.Models.IDomainPropertiesVerificationRecords DeserializeFromPSObject(global::System.Management.Automation.PSObject content)
        {
            return new DomainPropertiesVerificationRecords(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Collections.IDictionary" /> into a new instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.EmailService.Models.DomainPropertiesVerificationRecords"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        internal DomainPropertiesVerificationRecords(global::System.Collections.IDictionary content)
        {
            bool returnNow = false;
            BeforeDeserializeDictionary(content, ref returnNow);
            if (returnNow)
            {
                return;
            }
            // actually deserialize
            if (content.Contains("Domain"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.EmailService.Models.IDomainPropertiesVerificationRecordsInternal)this).Domain = (Microsoft.Azure.PowerShell.Cmdlets.EmailService.Models.IDnsRecord) content.GetValueForProperty("Domain",((Microsoft.Azure.PowerShell.Cmdlets.EmailService.Models.IDomainPropertiesVerificationRecordsInternal)this).Domain, Microsoft.Azure.PowerShell.Cmdlets.EmailService.Models.DnsRecordTypeConverter.ConvertFrom);
            }
            if (content.Contains("Spf"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.EmailService.Models.IDomainPropertiesVerificationRecordsInternal)this).Spf = (Microsoft.Azure.PowerShell.Cmdlets.EmailService.Models.IDnsRecord) content.GetValueForProperty("Spf",((Microsoft.Azure.PowerShell.Cmdlets.EmailService.Models.IDomainPropertiesVerificationRecordsInternal)this).Spf, Microsoft.Azure.PowerShell.Cmdlets.EmailService.Models.DnsRecordTypeConverter.ConvertFrom);
            }
            if (content.Contains("Dkim"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.EmailService.Models.IDomainPropertiesVerificationRecordsInternal)this).Dkim = (Microsoft.Azure.PowerShell.Cmdlets.EmailService.Models.IDnsRecord) content.GetValueForProperty("Dkim",((Microsoft.Azure.PowerShell.Cmdlets.EmailService.Models.IDomainPropertiesVerificationRecordsInternal)this).Dkim, Microsoft.Azure.PowerShell.Cmdlets.EmailService.Models.DnsRecordTypeConverter.ConvertFrom);
            }
            if (content.Contains("Dkim2"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.EmailService.Models.IDomainPropertiesVerificationRecordsInternal)this).Dkim2 = (Microsoft.Azure.PowerShell.Cmdlets.EmailService.Models.IDnsRecord) content.GetValueForProperty("Dkim2",((Microsoft.Azure.PowerShell.Cmdlets.EmailService.Models.IDomainPropertiesVerificationRecordsInternal)this).Dkim2, Microsoft.Azure.PowerShell.Cmdlets.EmailService.Models.DnsRecordTypeConverter.ConvertFrom);
            }
            if (content.Contains("Dmarc"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.EmailService.Models.IDomainPropertiesVerificationRecordsInternal)this).Dmarc = (Microsoft.Azure.PowerShell.Cmdlets.EmailService.Models.IDnsRecord) content.GetValueForProperty("Dmarc",((Microsoft.Azure.PowerShell.Cmdlets.EmailService.Models.IDomainPropertiesVerificationRecordsInternal)this).Dmarc, Microsoft.Azure.PowerShell.Cmdlets.EmailService.Models.DnsRecordTypeConverter.ConvertFrom);
            }
            if (content.Contains("DomainType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.EmailService.Models.IDomainPropertiesVerificationRecordsInternal)this).DomainType = (string) content.GetValueForProperty("DomainType",((Microsoft.Azure.PowerShell.Cmdlets.EmailService.Models.IDomainPropertiesVerificationRecordsInternal)this).DomainType, global::System.Convert.ToString);
            }
            if (content.Contains("DomainName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.EmailService.Models.IDomainPropertiesVerificationRecordsInternal)this).DomainName = (string) content.GetValueForProperty("DomainName",((Microsoft.Azure.PowerShell.Cmdlets.EmailService.Models.IDomainPropertiesVerificationRecordsInternal)this).DomainName, global::System.Convert.ToString);
            }
            if (content.Contains("DomainValue"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.EmailService.Models.IDomainPropertiesVerificationRecordsInternal)this).DomainValue = (string) content.GetValueForProperty("DomainValue",((Microsoft.Azure.PowerShell.Cmdlets.EmailService.Models.IDomainPropertiesVerificationRecordsInternal)this).DomainValue, global::System.Convert.ToString);
            }
            if (content.Contains("DomainTtl"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.EmailService.Models.IDomainPropertiesVerificationRecordsInternal)this).DomainTtl = (int?) content.GetValueForProperty("DomainTtl",((Microsoft.Azure.PowerShell.Cmdlets.EmailService.Models.IDomainPropertiesVerificationRecordsInternal)this).DomainTtl, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("SpfType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.EmailService.Models.IDomainPropertiesVerificationRecordsInternal)this).SpfType = (string) content.GetValueForProperty("SpfType",((Microsoft.Azure.PowerShell.Cmdlets.EmailService.Models.IDomainPropertiesVerificationRecordsInternal)this).SpfType, global::System.Convert.ToString);
            }
            if (content.Contains("SpfName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.EmailService.Models.IDomainPropertiesVerificationRecordsInternal)this).SpfName = (string) content.GetValueForProperty("SpfName",((Microsoft.Azure.PowerShell.Cmdlets.EmailService.Models.IDomainPropertiesVerificationRecordsInternal)this).SpfName, global::System.Convert.ToString);
            }
            if (content.Contains("SpfValue"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.EmailService.Models.IDomainPropertiesVerificationRecordsInternal)this).SpfValue = (string) content.GetValueForProperty("SpfValue",((Microsoft.Azure.PowerShell.Cmdlets.EmailService.Models.IDomainPropertiesVerificationRecordsInternal)this).SpfValue, global::System.Convert.ToString);
            }
            if (content.Contains("SpfTtl"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.EmailService.Models.IDomainPropertiesVerificationRecordsInternal)this).SpfTtl = (int?) content.GetValueForProperty("SpfTtl",((Microsoft.Azure.PowerShell.Cmdlets.EmailService.Models.IDomainPropertiesVerificationRecordsInternal)this).SpfTtl, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("DkimType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.EmailService.Models.IDomainPropertiesVerificationRecordsInternal)this).DkimType = (string) content.GetValueForProperty("DkimType",((Microsoft.Azure.PowerShell.Cmdlets.EmailService.Models.IDomainPropertiesVerificationRecordsInternal)this).DkimType, global::System.Convert.ToString);
            }
            if (content.Contains("DkimName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.EmailService.Models.IDomainPropertiesVerificationRecordsInternal)this).DkimName = (string) content.GetValueForProperty("DkimName",((Microsoft.Azure.PowerShell.Cmdlets.EmailService.Models.IDomainPropertiesVerificationRecordsInternal)this).DkimName, global::System.Convert.ToString);
            }
            if (content.Contains("DkimValue"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.EmailService.Models.IDomainPropertiesVerificationRecordsInternal)this).DkimValue = (string) content.GetValueForProperty("DkimValue",((Microsoft.Azure.PowerShell.Cmdlets.EmailService.Models.IDomainPropertiesVerificationRecordsInternal)this).DkimValue, global::System.Convert.ToString);
            }
            if (content.Contains("DkimTtl"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.EmailService.Models.IDomainPropertiesVerificationRecordsInternal)this).DkimTtl = (int?) content.GetValueForProperty("DkimTtl",((Microsoft.Azure.PowerShell.Cmdlets.EmailService.Models.IDomainPropertiesVerificationRecordsInternal)this).DkimTtl, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("Dkim2Type"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.EmailService.Models.IDomainPropertiesVerificationRecordsInternal)this).Dkim2Type = (string) content.GetValueForProperty("Dkim2Type",((Microsoft.Azure.PowerShell.Cmdlets.EmailService.Models.IDomainPropertiesVerificationRecordsInternal)this).Dkim2Type, global::System.Convert.ToString);
            }
            if (content.Contains("Dkim2Name"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.EmailService.Models.IDomainPropertiesVerificationRecordsInternal)this).Dkim2Name = (string) content.GetValueForProperty("Dkim2Name",((Microsoft.Azure.PowerShell.Cmdlets.EmailService.Models.IDomainPropertiesVerificationRecordsInternal)this).Dkim2Name, global::System.Convert.ToString);
            }
            if (content.Contains("Dkim2Value"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.EmailService.Models.IDomainPropertiesVerificationRecordsInternal)this).Dkim2Value = (string) content.GetValueForProperty("Dkim2Value",((Microsoft.Azure.PowerShell.Cmdlets.EmailService.Models.IDomainPropertiesVerificationRecordsInternal)this).Dkim2Value, global::System.Convert.ToString);
            }
            if (content.Contains("Dkim2Ttl"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.EmailService.Models.IDomainPropertiesVerificationRecordsInternal)this).Dkim2Ttl = (int?) content.GetValueForProperty("Dkim2Ttl",((Microsoft.Azure.PowerShell.Cmdlets.EmailService.Models.IDomainPropertiesVerificationRecordsInternal)this).Dkim2Ttl, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("DmarcType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.EmailService.Models.IDomainPropertiesVerificationRecordsInternal)this).DmarcType = (string) content.GetValueForProperty("DmarcType",((Microsoft.Azure.PowerShell.Cmdlets.EmailService.Models.IDomainPropertiesVerificationRecordsInternal)this).DmarcType, global::System.Convert.ToString);
            }
            if (content.Contains("DmarcName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.EmailService.Models.IDomainPropertiesVerificationRecordsInternal)this).DmarcName = (string) content.GetValueForProperty("DmarcName",((Microsoft.Azure.PowerShell.Cmdlets.EmailService.Models.IDomainPropertiesVerificationRecordsInternal)this).DmarcName, global::System.Convert.ToString);
            }
            if (content.Contains("DmarcValue"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.EmailService.Models.IDomainPropertiesVerificationRecordsInternal)this).DmarcValue = (string) content.GetValueForProperty("DmarcValue",((Microsoft.Azure.PowerShell.Cmdlets.EmailService.Models.IDomainPropertiesVerificationRecordsInternal)this).DmarcValue, global::System.Convert.ToString);
            }
            if (content.Contains("DmarcTtl"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.EmailService.Models.IDomainPropertiesVerificationRecordsInternal)this).DmarcTtl = (int?) content.GetValueForProperty("DmarcTtl",((Microsoft.Azure.PowerShell.Cmdlets.EmailService.Models.IDomainPropertiesVerificationRecordsInternal)this).DmarcTtl, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            AfterDeserializeDictionary(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Management.Automation.PSObject" /> into a new instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.EmailService.Models.DomainPropertiesVerificationRecords"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        internal DomainPropertiesVerificationRecords(global::System.Management.Automation.PSObject content)
        {
            bool returnNow = false;
            BeforeDeserializePSObject(content, ref returnNow);
            if (returnNow)
            {
                return;
            }
            // actually deserialize
            if (content.Contains("Domain"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.EmailService.Models.IDomainPropertiesVerificationRecordsInternal)this).Domain = (Microsoft.Azure.PowerShell.Cmdlets.EmailService.Models.IDnsRecord) content.GetValueForProperty("Domain",((Microsoft.Azure.PowerShell.Cmdlets.EmailService.Models.IDomainPropertiesVerificationRecordsInternal)this).Domain, Microsoft.Azure.PowerShell.Cmdlets.EmailService.Models.DnsRecordTypeConverter.ConvertFrom);
            }
            if (content.Contains("Spf"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.EmailService.Models.IDomainPropertiesVerificationRecordsInternal)this).Spf = (Microsoft.Azure.PowerShell.Cmdlets.EmailService.Models.IDnsRecord) content.GetValueForProperty("Spf",((Microsoft.Azure.PowerShell.Cmdlets.EmailService.Models.IDomainPropertiesVerificationRecordsInternal)this).Spf, Microsoft.Azure.PowerShell.Cmdlets.EmailService.Models.DnsRecordTypeConverter.ConvertFrom);
            }
            if (content.Contains("Dkim"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.EmailService.Models.IDomainPropertiesVerificationRecordsInternal)this).Dkim = (Microsoft.Azure.PowerShell.Cmdlets.EmailService.Models.IDnsRecord) content.GetValueForProperty("Dkim",((Microsoft.Azure.PowerShell.Cmdlets.EmailService.Models.IDomainPropertiesVerificationRecordsInternal)this).Dkim, Microsoft.Azure.PowerShell.Cmdlets.EmailService.Models.DnsRecordTypeConverter.ConvertFrom);
            }
            if (content.Contains("Dkim2"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.EmailService.Models.IDomainPropertiesVerificationRecordsInternal)this).Dkim2 = (Microsoft.Azure.PowerShell.Cmdlets.EmailService.Models.IDnsRecord) content.GetValueForProperty("Dkim2",((Microsoft.Azure.PowerShell.Cmdlets.EmailService.Models.IDomainPropertiesVerificationRecordsInternal)this).Dkim2, Microsoft.Azure.PowerShell.Cmdlets.EmailService.Models.DnsRecordTypeConverter.ConvertFrom);
            }
            if (content.Contains("Dmarc"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.EmailService.Models.IDomainPropertiesVerificationRecordsInternal)this).Dmarc = (Microsoft.Azure.PowerShell.Cmdlets.EmailService.Models.IDnsRecord) content.GetValueForProperty("Dmarc",((Microsoft.Azure.PowerShell.Cmdlets.EmailService.Models.IDomainPropertiesVerificationRecordsInternal)this).Dmarc, Microsoft.Azure.PowerShell.Cmdlets.EmailService.Models.DnsRecordTypeConverter.ConvertFrom);
            }
            if (content.Contains("DomainType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.EmailService.Models.IDomainPropertiesVerificationRecordsInternal)this).DomainType = (string) content.GetValueForProperty("DomainType",((Microsoft.Azure.PowerShell.Cmdlets.EmailService.Models.IDomainPropertiesVerificationRecordsInternal)this).DomainType, global::System.Convert.ToString);
            }
            if (content.Contains("DomainName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.EmailService.Models.IDomainPropertiesVerificationRecordsInternal)this).DomainName = (string) content.GetValueForProperty("DomainName",((Microsoft.Azure.PowerShell.Cmdlets.EmailService.Models.IDomainPropertiesVerificationRecordsInternal)this).DomainName, global::System.Convert.ToString);
            }
            if (content.Contains("DomainValue"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.EmailService.Models.IDomainPropertiesVerificationRecordsInternal)this).DomainValue = (string) content.GetValueForProperty("DomainValue",((Microsoft.Azure.PowerShell.Cmdlets.EmailService.Models.IDomainPropertiesVerificationRecordsInternal)this).DomainValue, global::System.Convert.ToString);
            }
            if (content.Contains("DomainTtl"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.EmailService.Models.IDomainPropertiesVerificationRecordsInternal)this).DomainTtl = (int?) content.GetValueForProperty("DomainTtl",((Microsoft.Azure.PowerShell.Cmdlets.EmailService.Models.IDomainPropertiesVerificationRecordsInternal)this).DomainTtl, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("SpfType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.EmailService.Models.IDomainPropertiesVerificationRecordsInternal)this).SpfType = (string) content.GetValueForProperty("SpfType",((Microsoft.Azure.PowerShell.Cmdlets.EmailService.Models.IDomainPropertiesVerificationRecordsInternal)this).SpfType, global::System.Convert.ToString);
            }
            if (content.Contains("SpfName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.EmailService.Models.IDomainPropertiesVerificationRecordsInternal)this).SpfName = (string) content.GetValueForProperty("SpfName",((Microsoft.Azure.PowerShell.Cmdlets.EmailService.Models.IDomainPropertiesVerificationRecordsInternal)this).SpfName, global::System.Convert.ToString);
            }
            if (content.Contains("SpfValue"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.EmailService.Models.IDomainPropertiesVerificationRecordsInternal)this).SpfValue = (string) content.GetValueForProperty("SpfValue",((Microsoft.Azure.PowerShell.Cmdlets.EmailService.Models.IDomainPropertiesVerificationRecordsInternal)this).SpfValue, global::System.Convert.ToString);
            }
            if (content.Contains("SpfTtl"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.EmailService.Models.IDomainPropertiesVerificationRecordsInternal)this).SpfTtl = (int?) content.GetValueForProperty("SpfTtl",((Microsoft.Azure.PowerShell.Cmdlets.EmailService.Models.IDomainPropertiesVerificationRecordsInternal)this).SpfTtl, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("DkimType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.EmailService.Models.IDomainPropertiesVerificationRecordsInternal)this).DkimType = (string) content.GetValueForProperty("DkimType",((Microsoft.Azure.PowerShell.Cmdlets.EmailService.Models.IDomainPropertiesVerificationRecordsInternal)this).DkimType, global::System.Convert.ToString);
            }
            if (content.Contains("DkimName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.EmailService.Models.IDomainPropertiesVerificationRecordsInternal)this).DkimName = (string) content.GetValueForProperty("DkimName",((Microsoft.Azure.PowerShell.Cmdlets.EmailService.Models.IDomainPropertiesVerificationRecordsInternal)this).DkimName, global::System.Convert.ToString);
            }
            if (content.Contains("DkimValue"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.EmailService.Models.IDomainPropertiesVerificationRecordsInternal)this).DkimValue = (string) content.GetValueForProperty("DkimValue",((Microsoft.Azure.PowerShell.Cmdlets.EmailService.Models.IDomainPropertiesVerificationRecordsInternal)this).DkimValue, global::System.Convert.ToString);
            }
            if (content.Contains("DkimTtl"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.EmailService.Models.IDomainPropertiesVerificationRecordsInternal)this).DkimTtl = (int?) content.GetValueForProperty("DkimTtl",((Microsoft.Azure.PowerShell.Cmdlets.EmailService.Models.IDomainPropertiesVerificationRecordsInternal)this).DkimTtl, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("Dkim2Type"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.EmailService.Models.IDomainPropertiesVerificationRecordsInternal)this).Dkim2Type = (string) content.GetValueForProperty("Dkim2Type",((Microsoft.Azure.PowerShell.Cmdlets.EmailService.Models.IDomainPropertiesVerificationRecordsInternal)this).Dkim2Type, global::System.Convert.ToString);
            }
            if (content.Contains("Dkim2Name"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.EmailService.Models.IDomainPropertiesVerificationRecordsInternal)this).Dkim2Name = (string) content.GetValueForProperty("Dkim2Name",((Microsoft.Azure.PowerShell.Cmdlets.EmailService.Models.IDomainPropertiesVerificationRecordsInternal)this).Dkim2Name, global::System.Convert.ToString);
            }
            if (content.Contains("Dkim2Value"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.EmailService.Models.IDomainPropertiesVerificationRecordsInternal)this).Dkim2Value = (string) content.GetValueForProperty("Dkim2Value",((Microsoft.Azure.PowerShell.Cmdlets.EmailService.Models.IDomainPropertiesVerificationRecordsInternal)this).Dkim2Value, global::System.Convert.ToString);
            }
            if (content.Contains("Dkim2Ttl"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.EmailService.Models.IDomainPropertiesVerificationRecordsInternal)this).Dkim2Ttl = (int?) content.GetValueForProperty("Dkim2Ttl",((Microsoft.Azure.PowerShell.Cmdlets.EmailService.Models.IDomainPropertiesVerificationRecordsInternal)this).Dkim2Ttl, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("DmarcType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.EmailService.Models.IDomainPropertiesVerificationRecordsInternal)this).DmarcType = (string) content.GetValueForProperty("DmarcType",((Microsoft.Azure.PowerShell.Cmdlets.EmailService.Models.IDomainPropertiesVerificationRecordsInternal)this).DmarcType, global::System.Convert.ToString);
            }
            if (content.Contains("DmarcName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.EmailService.Models.IDomainPropertiesVerificationRecordsInternal)this).DmarcName = (string) content.GetValueForProperty("DmarcName",((Microsoft.Azure.PowerShell.Cmdlets.EmailService.Models.IDomainPropertiesVerificationRecordsInternal)this).DmarcName, global::System.Convert.ToString);
            }
            if (content.Contains("DmarcValue"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.EmailService.Models.IDomainPropertiesVerificationRecordsInternal)this).DmarcValue = (string) content.GetValueForProperty("DmarcValue",((Microsoft.Azure.PowerShell.Cmdlets.EmailService.Models.IDomainPropertiesVerificationRecordsInternal)this).DmarcValue, global::System.Convert.ToString);
            }
            if (content.Contains("DmarcTtl"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.EmailService.Models.IDomainPropertiesVerificationRecordsInternal)this).DmarcTtl = (int?) content.GetValueForProperty("DmarcTtl",((Microsoft.Azure.PowerShell.Cmdlets.EmailService.Models.IDomainPropertiesVerificationRecordsInternal)this).DmarcTtl, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            AfterDeserializePSObject(content);
        }

        /// <summary>
        /// Creates a new instance of <see cref="DomainPropertiesVerificationRecords" />, deserializing the content from a json string.
        /// </summary>
        /// <param name="jsonText">a string containing a JSON serialized instance of this model.</param>
        /// <returns>
        /// an instance of the <see cref="DomainPropertiesVerificationRecords" /> model class.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.EmailService.Models.IDomainPropertiesVerificationRecords FromJsonString(string jsonText) => FromJson(Microsoft.Azure.PowerShell.Cmdlets.EmailService.Runtime.Json.JsonNode.Parse(jsonText));

        /// <summary>Serializes this instance to a json string.</summary>

        /// <returns>a <see cref="System.String" /> containing this model serialized to JSON text.</returns>
        public string ToJsonString() => ToJson(null, Microsoft.Azure.PowerShell.Cmdlets.EmailService.Runtime.SerializationMode.IncludeAll)?.ToString();

        public override string ToString()
        {
            var returnNow = false;
            var result = global::System.String.Empty;
            OverrideToString(ref result, ref returnNow);
            if (returnNow)
            {
                return result;
            }
            return ToJsonString();
        }
    }
    /// List of DnsRecord
    [System.ComponentModel.TypeConverter(typeof(DomainPropertiesVerificationRecordsTypeConverter))]
    public partial interface IDomainPropertiesVerificationRecords

    {

    }
}