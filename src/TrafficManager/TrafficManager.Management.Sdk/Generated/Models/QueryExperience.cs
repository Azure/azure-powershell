// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.TrafficManager.Models
{
    using System.Linq;

    /// <summary>
    /// Class representing a Traffic Manager HeatMap query experience properties.
    /// </summary>
    public partial class QueryExperience
    {
        /// <summary>
        /// Initializes a new instance of the QueryExperience class.
        /// </summary>
        public QueryExperience()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the QueryExperience class.
        /// </summary>

        /// <param name="endpointId">The id of the endpoint from the &#39;endpoints&#39; array which these queries were
        /// routed to.
        /// </param>

        /// <param name="queryCount">The number of queries originating from this location.
        /// </param>

        /// <param name="latency">The latency experienced by queries originating from this location.
        /// </param>
        public QueryExperience(int endpointId, int queryCount, double? latency = default(double?))

        {
            this.EndpointId = endpointId;
            this.QueryCount = queryCount;
            this.Latency = latency;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets or sets the id of the endpoint from the &#39;endpoints&#39; array which these
        /// queries were routed to.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "endpointId")]
        public int EndpointId {get; set; }

        /// <summary>
        /// Gets or sets the number of queries originating from this location.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "queryCount")]
        public int QueryCount {get; set; }

        /// <summary>
        /// Gets or sets the latency experienced by queries originating from this
        /// location.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "latency")]
        public double? Latency {get; set; }
        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            //Nothing to validate
        }
    }
}