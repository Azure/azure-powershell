// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.SelfHelp.Models.Api20230601
{
    using static Microsoft.Azure.PowerShell.Cmdlets.SelfHelp.Runtime.Extensions;

    /// <summary>Diagnostic solution metadata.</summary>
    public partial class SolutionMetadataProperties :
        Microsoft.Azure.PowerShell.Cmdlets.SelfHelp.Models.Api20230601.ISolutionMetadataProperties,
        Microsoft.Azure.PowerShell.Cmdlets.SelfHelp.Models.Api20230601.ISolutionMetadataPropertiesInternal
    {

        /// <summary>Backing field for <see cref="Description" /> property.</summary>
        private string _description;

        /// <summary>A detailed description of solution.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SelfHelp.Origin(Microsoft.Azure.PowerShell.Cmdlets.SelfHelp.PropertyOrigin.Owned)]
        public string Description { get => this._description; set => this._description = value; }

        /// <summary>Backing field for <see cref="RequiredParameterSet" /> property.</summary>
        private string[][] _requiredParameterSet;

        /// <summary>Required parameters for invoking this particular solution.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SelfHelp.Origin(Microsoft.Azure.PowerShell.Cmdlets.SelfHelp.PropertyOrigin.Owned)]
        public string[][] RequiredParameterSet { get => this._requiredParameterSet; set => this._requiredParameterSet = value; }

        /// <summary>Backing field for <see cref="SolutionId" /> property.</summary>
        private string _solutionId;

        /// <summary>Solution Id.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SelfHelp.Origin(Microsoft.Azure.PowerShell.Cmdlets.SelfHelp.PropertyOrigin.Owned)]
        public string SolutionId { get => this._solutionId; set => this._solutionId = value; }

        /// <summary>Backing field for <see cref="SolutionType" /> property.</summary>
        private string _solutionType;

        /// <summary>Solution Type.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SelfHelp.Origin(Microsoft.Azure.PowerShell.Cmdlets.SelfHelp.PropertyOrigin.Owned)]
        public string SolutionType { get => this._solutionType; set => this._solutionType = value; }

        /// <summary>Creates an new <see cref="SolutionMetadataProperties" /> instance.</summary>
        public SolutionMetadataProperties()
        {

        }
    }
    /// Diagnostic solution metadata.
    public partial interface ISolutionMetadataProperties :
        Microsoft.Azure.PowerShell.Cmdlets.SelfHelp.Runtime.IJsonSerializable
    {
        /// <summary>A detailed description of solution.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SelfHelp.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"A detailed description of solution.",
        SerializedName = @"description",
        PossibleTypes = new [] { typeof(string) })]
        string Description { get; set; }
        /// <summary>Required parameters for invoking this particular solution.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SelfHelp.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Required parameters for invoking this particular solution.",
        SerializedName = @"requiredParameterSets",
        PossibleTypes = new [] { typeof(string) })]
        string[][] RequiredParameterSet { get; set; }
        /// <summary>Solution Id.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SelfHelp.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Solution Id.",
        SerializedName = @"solutionId",
        PossibleTypes = new [] { typeof(string) })]
        string SolutionId { get; set; }
        /// <summary>Solution Type.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SelfHelp.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Solution Type.",
        SerializedName = @"solutionType",
        PossibleTypes = new [] { typeof(string) })]
        string SolutionType { get; set; }

    }
    /// Diagnostic solution metadata.
    internal partial interface ISolutionMetadataPropertiesInternal

    {
        /// <summary>A detailed description of solution.</summary>
        string Description { get; set; }
        /// <summary>Required parameters for invoking this particular solution.</summary>
        string[][] RequiredParameterSet { get; set; }
        /// <summary>Solution Id.</summary>
        string SolutionId { get; set; }
        /// <summary>Solution Type.</summary>
        string SolutionType { get; set; }

    }
}