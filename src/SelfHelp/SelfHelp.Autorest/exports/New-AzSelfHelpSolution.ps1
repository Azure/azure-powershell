
# ----------------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# http://www.apache.org/licenses/LICENSE-2.0
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# Code generated by Microsoft (R) AutoRest Code Generator.Changes may cause incorrect behavior and will be lost if the code
# is regenerated.
# ----------------------------------------------------------------------------------

<#
.Synopsis
Creates a solution for the specific Azure resource or subscription using the triggering criteria ‘solutionId and requiredInputs’ from discovery solutions.<br/> Solutions are a rich, insightful and a centralized self help experience that brings all the relevant content to troubleshoot an Azure issue into a unified experience.
Solutions include the following components : Text, Diagnostics , Troubleshooters, Images , Video tutorials, Tables , custom charts, images , AzureKB, etc, with capabilities to support new solutions types in the future.
Each solution type may require one or more ‘requiredParameters’ that are required to execute the individual solution component.
In the absence of the ‘requiredParameters’ it is likely that some of the solutions might fail execution, and you might see an empty response.
<br/><br/> <b>Note:</b>  <br/>1.
‘requiredInputs’ from Discovery solutions response must be passed via ‘parameters’ in the request body of Solutions API.
<br/>2.
‘requiredParameters’ from the Solutions response is the same as ‘ additionalParameters’ in the request for diagnostics <br/>3.
‘requiredParameters’ from the Solutions response is the same as ‘properties.parameters’ in the request for Troubleshooters
.Description
Creates a solution for the specific Azure resource or subscription using the triggering criteria ‘solutionId and requiredInputs’ from discovery solutions.<br/> Solutions are a rich, insightful and a centralized self help experience that brings all the relevant content to troubleshoot an Azure issue into a unified experience.
Solutions include the following components : Text, Diagnostics , Troubleshooters, Images , Video tutorials, Tables , custom charts, images , AzureKB, etc, with capabilities to support new solutions types in the future.
Each solution type may require one or more ‘requiredParameters’ that are required to execute the individual solution component.
In the absence of the ‘requiredParameters’ it is likely that some of the solutions might fail execution, and you might see an empty response.
<br/><br/> <b>Note:</b>  <br/>1.
‘requiredInputs’ from Discovery solutions response must be passed via ‘parameters’ in the request body of Solutions API.
<br/>2.
‘requiredParameters’ from the Solutions response is the same as ‘ additionalParameters’ in the request for diagnostics <br/>3.
‘requiredParameters’ from the Solutions response is the same as ‘properties.parameters’ in the request for Troubleshooters
.Example
$criteria = [ordered]@{
    "name" ="SolutionId"
    "value" = "keyvault-lostdeletedkeys-apollo-solution"
}
$parameters = [ordered]@{
        "SearchText" = "Can not RDP"
        "vault_name" = "DemoKeyvault"
}
New-AzSelfHelpSolution -ResourceName test-resource -Scope  /subscriptions/<subid>/resourceGroups/testRG/providers/Microsoft.KeyVault/kv/testDB -Parameter $parameters -TriggerCriterion $criteria

.Outputs
Microsoft.Azure.PowerShell.Cmdlets.SelfHelp.Models.Api20230901Preview.ISolutionResource
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

REPLACEMENTMAPDIAGNOSTIC <ISolutionsDiagnostic[]>: Solution diagnostics results.
  [Insight <IInsight[]>]: Diagnostic insights
    [Id <String>]: Article id.
    [ImportanceLevel <ImportanceLevel?>]: Importance level of the insight.
    [Result <String>]: Detailed result content.
    [Title <String>]: This insight's title.
  [ReplacementKey <String>]: Place holder used in HTML Content replace control with the content
  [RequiredParameter <String[]>]: Required parameters of this item
  [SolutionId <String>]: Solution Id to identify single Solutions Diagnostic
  [Status <Status?>]: Denotes the status of the diagnostic resource.
  [StatusDetail <String>]: Details of the status

REPLACEMENTMAPMETRICSBASEDCHART <IMetricsBasedChart[]>: Solution metrics based charts
  [AggregationType <AggregationType?>]: Allowed values are Sum, Avg, Count, Min, Max. Default is Sum
  [FilterGroupFilter <IFilter[]>]: List of filters
    [Name <String>]: Filter name
    [Operator <String>]: Filter operator
    [Value <String>]: Filter values
  [Name <String>]: Chart name
  [ReplacementKey <String>]: Place holder used in HTML Content replace control with the content
  [TimeSpanDuration <String>]: Time span duration
  [Title <String>]: Chart title

REPLACEMENTMAPTROUBLESHOOTER <ISolutionsTroubleshooters[]>: Solutions Troubleshooters
  [SolutionId <String>]: Solution Id to identify single Solutions Troubleshooter
  [Summary <String>]: Troubleshooter summary
  [Title <String>]: Troubleshooter title

REPLACEMENTMAPVIDEO <IVideo[]>: Video solutions, which have the power to engage the customer by stimulating their senses
  [Src <String>]: Link to the video
  [Title <String>]: Title of the video
  [ReplacementKey <String>]: Place holder used in HTML Content replace control with the insight content

REPLACEMENTMAPVIDEOGROUP <IVideoGroup[]>: Group of Videos
  [ReplacementKey <String>]: Place holder used in HTML Content replace control with the insight content
  [Video <IVideoGroupVideo[]>]: List of videos will be shown to customers
    [Src <String>]: Link to the video
    [Title <String>]: Title of the video

REPLACEMENTMAPWEBRESULT <IWebResult[]>: Solution AzureKB results
  [ReplacementKey <String>]: Place holder used in HTML Content replace control with the content
  [SearchResult <ISearchResult[]>]: AzureKB search results
    [Confidence <Confidence?>]: Confidence of the search result.
    [Content <String>]: Content of the search result.
    [Link <String>]: Link to the document.
    [Rank <Int32?>]: rank of the search result
    [ResultType <ResultType?>]: Result type of the search result.
    [SolutionId <String>]: Unique id of the result.
    [Source <String>]: Source of the search result.
    [Title <String>]: Title of the search result.

SECTION <ISection[]>: List of section object.
  [Content <String>]: Solution sections content.
  [ReplacementMapDiagnostic <ISolutionsDiagnostic[]>]: Solution diagnostics results.
    [Insight <IInsight[]>]: Diagnostic insights
      [Id <String>]: Article id.
      [ImportanceLevel <ImportanceLevel?>]: Importance level of the insight.
      [Result <String>]: Detailed result content.
      [Title <String>]: This insight's title.
    [ReplacementKey <String>]: Place holder used in HTML Content replace control with the content
    [RequiredParameter <String[]>]: Required parameters of this item
    [SolutionId <String>]: Solution Id to identify single Solutions Diagnostic
    [Status <Status?>]: Denotes the status of the diagnostic resource.
    [StatusDetail <String>]: Details of the status
  [ReplacementMapMetricsBasedChart <IMetricsBasedChart[]>]: Solution metrics based charts
    [AggregationType <AggregationType?>]: Allowed values are Sum, Avg, Count, Min, Max. Default is Sum
    [FilterGroupFilter <IFilter[]>]: List of filters
      [Name <String>]: Filter name
      [Operator <String>]: Filter operator
      [Value <String>]: Filter values
    [Name <String>]: Chart name
    [ReplacementKey <String>]: Place holder used in HTML Content replace control with the content
    [TimeSpanDuration <String>]: Time span duration
    [Title <String>]: Chart title
  [ReplacementMapTroubleshooter <ISolutionsTroubleshooters[]>]: Solutions Troubleshooters
    [SolutionId <String>]: Solution Id to identify single Solutions Troubleshooter
    [Summary <String>]: Troubleshooter summary
    [Title <String>]: Troubleshooter title
  [ReplacementMapVideo <IVideo[]>]: Video solutions, which have the power to engage the customer by stimulating their senses
    [Src <String>]: Link to the video
    [Title <String>]: Title of the video
    [ReplacementKey <String>]: Place holder used in HTML Content replace control with the insight content
  [ReplacementMapVideoGroup <IVideoGroup[]>]: Group of Videos
    [ReplacementKey <String>]: Place holder used in HTML Content replace control with the insight content
    [Video <IVideoGroupVideo[]>]: List of videos will be shown to customers
      [Src <String>]: Link to the video
      [Title <String>]: Title of the video
  [ReplacementMapWebResult <IWebResult[]>]: Solution AzureKB results
    [ReplacementKey <String>]: Place holder used in HTML Content replace control with the content
    [SearchResult <ISearchResult[]>]: AzureKB search results
      [Confidence <Confidence?>]: Confidence of the search result.
      [Content <String>]: Content of the search result.
      [Link <String>]: Link to the document.
      [Rank <Int32?>]: rank of the search result
      [ResultType <ResultType?>]: Result type of the search result.
      [SolutionId <String>]: Unique id of the result.
      [Source <String>]: Source of the search result.
      [Title <String>]: Title of the search result.
  [Title <String>]: Solution sections title.

TRIGGERCRITERION <ITriggerCriterion[]>: Solution request trigger criteria
  [Name <Name?>]: Trigger criterion name.
  [Value <String>]: Trigger criterion value.
.Link
https://learn.microsoft.com/powershell/module/az.selfhelp/new-azselfhelpsolution
#>
function New-AzSelfHelpSolution {
[OutputType([Microsoft.Azure.PowerShell.Cmdlets.SelfHelp.Models.Api20230901Preview.ISolutionResource])]
[CmdletBinding(DefaultParameterSetName='CreateExpanded', PositionalBinding=$false, SupportsShouldProcess, ConfirmImpact='Medium')]
param(
    [Parameter(Mandatory)]
    [Alias('SolutionResourceName')]
    [Microsoft.Azure.PowerShell.Cmdlets.SelfHelp.Category('Path')]
    [System.String]
    # Solution resource Name.
    ${ResourceName},

    [Parameter(Mandatory)]
    [Microsoft.Azure.PowerShell.Cmdlets.SelfHelp.Category('Path')]
    [System.String]
    # This is an extension resource provider and only resource level extension is supported at the moment.
    ${Scope},

    [Parameter()]
    [Microsoft.Azure.PowerShell.Cmdlets.SelfHelp.Category('Body')]
    [System.String]
    # The HTML content that needs to be rendered and shown to customer.
    ${Content},

    [Parameter()]
    [Microsoft.Azure.PowerShell.Cmdlets.SelfHelp.Category('Body')]
    [Microsoft.Azure.PowerShell.Cmdlets.SelfHelp.Runtime.Info(PossibleTypes=([Microsoft.Azure.PowerShell.Cmdlets.SelfHelp.Models.Api20230901Preview.ISolutionResourcePropertiesParameters]))]
    [System.Collections.Hashtable]
    # Client input parameters to run Solution
    ${Parameter},

    [Parameter()]
    [ArgumentCompleter([Microsoft.Azure.PowerShell.Cmdlets.SelfHelp.Support.SolutionProvisioningState])]
    [Microsoft.Azure.PowerShell.Cmdlets.SelfHelp.Category('Body')]
    [Microsoft.Azure.PowerShell.Cmdlets.SelfHelp.Support.SolutionProvisioningState]
    # Status of solution provisioning.
    ${ProvisioningState},

    [Parameter()]
    [AllowEmptyCollection()]
    [Microsoft.Azure.PowerShell.Cmdlets.SelfHelp.Category('Body')]
    [Microsoft.Azure.PowerShell.Cmdlets.SelfHelp.Models.Api20230901Preview.ISolutionsDiagnostic[]]
    # Solution diagnostics results.
    # To construct, see NOTES section for REPLACEMENTMAPDIAGNOSTIC properties and create a hash table.
    ${ReplacementMapDiagnostic},

    [Parameter()]
    [AllowEmptyCollection()]
    [Microsoft.Azure.PowerShell.Cmdlets.SelfHelp.Category('Body')]
    [Microsoft.Azure.PowerShell.Cmdlets.SelfHelp.Models.Api20230901Preview.IMetricsBasedChart[]]
    # Solution metrics based charts
    # To construct, see NOTES section for REPLACEMENTMAPMETRICSBASEDCHART properties and create a hash table.
    ${ReplacementMapMetricsBasedChart},

    [Parameter()]
    [AllowEmptyCollection()]
    [Microsoft.Azure.PowerShell.Cmdlets.SelfHelp.Category('Body')]
    [Microsoft.Azure.PowerShell.Cmdlets.SelfHelp.Models.Api20230901Preview.ISolutionsTroubleshooters[]]
    # Solutions Troubleshooters
    # To construct, see NOTES section for REPLACEMENTMAPTROUBLESHOOTER properties and create a hash table.
    ${ReplacementMapTroubleshooter},

    [Parameter()]
    [AllowEmptyCollection()]
    [Microsoft.Azure.PowerShell.Cmdlets.SelfHelp.Category('Body')]
    [Microsoft.Azure.PowerShell.Cmdlets.SelfHelp.Models.Api20230901Preview.IVideo[]]
    # Video solutions, which have the power to engage the customer by stimulating their senses
    # To construct, see NOTES section for REPLACEMENTMAPVIDEO properties and create a hash table.
    ${ReplacementMapVideo},

    [Parameter()]
    [AllowEmptyCollection()]
    [Microsoft.Azure.PowerShell.Cmdlets.SelfHelp.Category('Body')]
    [Microsoft.Azure.PowerShell.Cmdlets.SelfHelp.Models.Api20230901Preview.IVideoGroup[]]
    # Group of Videos
    # To construct, see NOTES section for REPLACEMENTMAPVIDEOGROUP properties and create a hash table.
    ${ReplacementMapVideoGroup},

    [Parameter()]
    [AllowEmptyCollection()]
    [Microsoft.Azure.PowerShell.Cmdlets.SelfHelp.Category('Body')]
    [Microsoft.Azure.PowerShell.Cmdlets.SelfHelp.Models.Api20230901Preview.IWebResult[]]
    # Solution AzureKB results
    # To construct, see NOTES section for REPLACEMENTMAPWEBRESULT properties and create a hash table.
    ${ReplacementMapWebResult},

    [Parameter()]
    [AllowEmptyCollection()]
    [Microsoft.Azure.PowerShell.Cmdlets.SelfHelp.Category('Body')]
    [Microsoft.Azure.PowerShell.Cmdlets.SelfHelp.Models.Api20230901Preview.ISection[]]
    # List of section object.
    # To construct, see NOTES section for SECTION properties and create a hash table.
    ${Section},

    [Parameter()]
    [Microsoft.Azure.PowerShell.Cmdlets.SelfHelp.Category('Body')]
    [System.String]
    # Solution Id to identify single solution.
    ${SolutionId},

    [Parameter()]
    [Microsoft.Azure.PowerShell.Cmdlets.SelfHelp.Category('Body')]
    [System.String]
    # The title.
    ${Title},

    [Parameter()]
    [AllowEmptyCollection()]
    [Microsoft.Azure.PowerShell.Cmdlets.SelfHelp.Category('Body')]
    [Microsoft.Azure.PowerShell.Cmdlets.SelfHelp.Models.Api20230901Preview.ITriggerCriterion[]]
    # Solution request trigger criteria
    # To construct, see NOTES section for TRIGGERCRITERION properties and create a hash table.
    ${TriggerCriterion},

    [Parameter()]
    [Alias('AzureRMContext', 'AzureCredential')]
    [ValidateNotNull()]
    [Microsoft.Azure.PowerShell.Cmdlets.SelfHelp.Category('Azure')]
    [System.Management.Automation.PSObject]
    # The DefaultProfile parameter is not functional.
    # Use the SubscriptionId parameter when available if executing the cmdlet against a different subscription.
    ${DefaultProfile},

    [Parameter()]
    [Microsoft.Azure.PowerShell.Cmdlets.SelfHelp.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Run the command as a job
    ${AsJob},

    [Parameter(DontShow)]
    [Microsoft.Azure.PowerShell.Cmdlets.SelfHelp.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Azure.PowerShell.Cmdlets.SelfHelp.Category('Runtime')]
    [Microsoft.Azure.PowerShell.Cmdlets.SelfHelp.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Azure.PowerShell.Cmdlets.SelfHelp.Category('Runtime')]
    [Microsoft.Azure.PowerShell.Cmdlets.SelfHelp.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter()]
    [Microsoft.Azure.PowerShell.Cmdlets.SelfHelp.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Run the command asynchronously
    ${NoWait},

    [Parameter(DontShow)]
    [Microsoft.Azure.PowerShell.Cmdlets.SelfHelp.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Azure.PowerShell.Cmdlets.SelfHelp.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Azure.PowerShell.Cmdlets.SelfHelp.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName

        if ($null -eq [Microsoft.WindowsAzure.Commands.Utilities.Common.AzurePSCmdlet]::PowerShellVersion) {
            [Microsoft.WindowsAzure.Commands.Utilities.Common.AzurePSCmdlet]::PowerShellVersion = $PSVersionTable.PSVersion.ToString()
        }         
        $preTelemetryId = [Microsoft.WindowsAzure.Commands.Common.MetricHelper]::TelemetryId
        if ($preTelemetryId -eq '') {
            [Microsoft.WindowsAzure.Commands.Common.MetricHelper]::TelemetryId =(New-Guid).ToString()
            [Microsoft.Azure.PowerShell.Cmdlets.SelfHelp.module]::Instance.Telemetry.Invoke('Create', $MyInvocation, $parameterSet, $PSCmdlet)
        } else {
            $internalCalledCmdlets = [Microsoft.WindowsAzure.Commands.Common.MetricHelper]::InternalCalledCmdlets
            if ($internalCalledCmdlets -eq '') {
                [Microsoft.WindowsAzure.Commands.Common.MetricHelper]::InternalCalledCmdlets = $MyInvocation.MyCommand.Name
            } else {
                [Microsoft.WindowsAzure.Commands.Common.MetricHelper]::InternalCalledCmdlets += ',' + $MyInvocation.MyCommand.Name
            }
            [Microsoft.WindowsAzure.Commands.Common.MetricHelper]::TelemetryId = 'internal'
        }

        $mapping = @{
            CreateExpanded = 'Az.SelfHelp.private\New-AzSelfHelpSolution_CreateExpanded';
        }
        $cmdInfo = Get-Command -Name $mapping[$parameterSet]
        [Microsoft.Azure.PowerShell.Cmdlets.SelfHelp.Runtime.MessageAttributeHelper]::ProcessCustomAttributesAtRuntime($cmdInfo, $MyInvocation, $parameterSet, $PSCmdlet)
        if ($null -ne $MyInvocation.MyCommand -and [Microsoft.WindowsAzure.Commands.Utilities.Common.AzurePSCmdlet]::PromptedPreviewMessageCmdlets -notcontains $MyInvocation.MyCommand.Name -and [Microsoft.Azure.PowerShell.Cmdlets.SelfHelp.Runtime.MessageAttributeHelper]::ContainsPreviewAttribute($cmdInfo, $MyInvocation)){
            [Microsoft.Azure.PowerShell.Cmdlets.SelfHelp.Runtime.MessageAttributeHelper]::ProcessPreviewMessageAttributesAtRuntime($cmdInfo, $MyInvocation, $parameterSet, $PSCmdlet)
            [Microsoft.WindowsAzure.Commands.Utilities.Common.AzurePSCmdlet]::PromptedPreviewMessageCmdlets.Enqueue($MyInvocation.MyCommand.Name)
        }
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {
        [Microsoft.WindowsAzure.Commands.Common.MetricHelper]::ClearTelemetryContext()
        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {
        [Microsoft.WindowsAzure.Commands.Common.MetricHelper]::ClearTelemetryContext()
        throw
    }

    finally {
        $backupTelemetryId = [Microsoft.WindowsAzure.Commands.Common.MetricHelper]::TelemetryId
        $backupInternalCalledCmdlets = [Microsoft.WindowsAzure.Commands.Common.MetricHelper]::InternalCalledCmdlets
        [Microsoft.WindowsAzure.Commands.Common.MetricHelper]::ClearTelemetryContext()
    }

}
end {
    try {
        $steppablePipeline.End()

        [Microsoft.WindowsAzure.Commands.Common.MetricHelper]::TelemetryId = $backupTelemetryId
        [Microsoft.WindowsAzure.Commands.Common.MetricHelper]::InternalCalledCmdlets = $backupInternalCalledCmdlets
        if ($preTelemetryId -eq '') {
            [Microsoft.Azure.PowerShell.Cmdlets.SelfHelp.module]::Instance.Telemetry.Invoke('Send', $MyInvocation, $parameterSet, $PSCmdlet)
            [Microsoft.WindowsAzure.Commands.Common.MetricHelper]::ClearTelemetryContext()
        }
        [Microsoft.WindowsAzure.Commands.Common.MetricHelper]::TelemetryId = $preTelemetryId

    } catch {
        [Microsoft.WindowsAzure.Commands.Common.MetricHelper]::ClearTelemetryContext()
        throw
    }
} 
}
