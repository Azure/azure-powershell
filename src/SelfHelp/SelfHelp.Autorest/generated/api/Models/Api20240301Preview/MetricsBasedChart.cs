// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.SelfHelp.Models.Api20240301Preview
{
    using static Microsoft.Azure.PowerShell.Cmdlets.SelfHelp.Runtime.Extensions;

    /// <summary>Solutions metrics based chart</summary>
    public partial class MetricsBasedChart :
        Microsoft.Azure.PowerShell.Cmdlets.SelfHelp.Models.Api20240301Preview.IMetricsBasedChart,
        Microsoft.Azure.PowerShell.Cmdlets.SelfHelp.Models.Api20240301Preview.IMetricsBasedChartInternal
    {

        /// <summary>Backing field for <see cref="AggregationType" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.SelfHelp.Support.AggregationType? _aggregationType;

        /// <summary>Allowed values are Sum, Avg, Count, Min, Max. Default is Sum</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SelfHelp.Origin(Microsoft.Azure.PowerShell.Cmdlets.SelfHelp.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.SelfHelp.Support.AggregationType? AggregationType { get => this._aggregationType; set => this._aggregationType = value; }

        /// <summary>Backing field for <see cref="FilterGroup" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.SelfHelp.Models.Api20240301Preview.IFilterGroup _filterGroup;

        /// <summary>Filter group</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SelfHelp.Origin(Microsoft.Azure.PowerShell.Cmdlets.SelfHelp.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.SelfHelp.Models.Api20240301Preview.IFilterGroup FilterGroup { get => (this._filterGroup = this._filterGroup ?? new Microsoft.Azure.PowerShell.Cmdlets.SelfHelp.Models.Api20240301Preview.FilterGroup()); set => this._filterGroup = value; }

        /// <summary>List of filters</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SelfHelp.Origin(Microsoft.Azure.PowerShell.Cmdlets.SelfHelp.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.SelfHelp.Models.Api20240301Preview.IFilter[] FilterGroupFilter { get => ((Microsoft.Azure.PowerShell.Cmdlets.SelfHelp.Models.Api20240301Preview.IFilterGroupInternal)FilterGroup).Filter; set => ((Microsoft.Azure.PowerShell.Cmdlets.SelfHelp.Models.Api20240301Preview.IFilterGroupInternal)FilterGroup).Filter = value ?? null /* arrayOf */; }

        /// <summary>Internal Acessors for FilterGroup</summary>
        Microsoft.Azure.PowerShell.Cmdlets.SelfHelp.Models.Api20240301Preview.IFilterGroup Microsoft.Azure.PowerShell.Cmdlets.SelfHelp.Models.Api20240301Preview.IMetricsBasedChartInternal.FilterGroup { get => (this._filterGroup = this._filterGroup ?? new Microsoft.Azure.PowerShell.Cmdlets.SelfHelp.Models.Api20240301Preview.FilterGroup()); set { {_filterGroup = value;} } }

        /// <summary>Backing field for <see cref="Name" /> property.</summary>
        private string _name;

        /// <summary>Chart name</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SelfHelp.Origin(Microsoft.Azure.PowerShell.Cmdlets.SelfHelp.PropertyOrigin.Owned)]
        public string Name { get => this._name; set => this._name = value; }

        /// <summary>Backing field for <see cref="ReplacementKey" /> property.</summary>
        private string _replacementKey;

        /// <summary>Place holder used in HTML Content replace control with the content</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SelfHelp.Origin(Microsoft.Azure.PowerShell.Cmdlets.SelfHelp.PropertyOrigin.Owned)]
        public string ReplacementKey { get => this._replacementKey; set => this._replacementKey = value; }

        /// <summary>Backing field for <see cref="TimeSpanDuration" /> property.</summary>
        private string _timeSpanDuration;

        /// <summary>Time span duration</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SelfHelp.Origin(Microsoft.Azure.PowerShell.Cmdlets.SelfHelp.PropertyOrigin.Owned)]
        public string TimeSpanDuration { get => this._timeSpanDuration; set => this._timeSpanDuration = value; }

        /// <summary>Backing field for <see cref="Title" /> property.</summary>
        private string _title;

        /// <summary>Chart title</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SelfHelp.Origin(Microsoft.Azure.PowerShell.Cmdlets.SelfHelp.PropertyOrigin.Owned)]
        public string Title { get => this._title; set => this._title = value; }

        /// <summary>Creates an new <see cref="MetricsBasedChart" /> instance.</summary>
        public MetricsBasedChart()
        {

        }
    }
    /// Solutions metrics based chart
    public partial interface IMetricsBasedChart :
        Microsoft.Azure.PowerShell.Cmdlets.SelfHelp.Runtime.IJsonSerializable
    {
        /// <summary>Allowed values are Sum, Avg, Count, Min, Max. Default is Sum</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SelfHelp.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Allowed values are Sum, Avg, Count, Min, Max. Default is Sum",
        SerializedName = @"aggregationType",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.SelfHelp.Support.AggregationType) })]
        Microsoft.Azure.PowerShell.Cmdlets.SelfHelp.Support.AggregationType? AggregationType { get; set; }
        /// <summary>List of filters</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SelfHelp.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"List of filters",
        SerializedName = @"filter",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.SelfHelp.Models.Api20240301Preview.IFilter) })]
        Microsoft.Azure.PowerShell.Cmdlets.SelfHelp.Models.Api20240301Preview.IFilter[] FilterGroupFilter { get; set; }
        /// <summary>Chart name</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SelfHelp.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Chart name",
        SerializedName = @"name",
        PossibleTypes = new [] { typeof(string) })]
        string Name { get; set; }
        /// <summary>Place holder used in HTML Content replace control with the content</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SelfHelp.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Place holder used in HTML Content replace control with the content",
        SerializedName = @"replacementKey",
        PossibleTypes = new [] { typeof(string) })]
        string ReplacementKey { get; set; }
        /// <summary>Time span duration</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SelfHelp.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Time span duration",
        SerializedName = @"timeSpanDuration",
        PossibleTypes = new [] { typeof(string) })]
        string TimeSpanDuration { get; set; }
        /// <summary>Chart title</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SelfHelp.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Chart title",
        SerializedName = @"title",
        PossibleTypes = new [] { typeof(string) })]
        string Title { get; set; }

    }
    /// Solutions metrics based chart
    internal partial interface IMetricsBasedChartInternal

    {
        /// <summary>Allowed values are Sum, Avg, Count, Min, Max. Default is Sum</summary>
        Microsoft.Azure.PowerShell.Cmdlets.SelfHelp.Support.AggregationType? AggregationType { get; set; }
        /// <summary>Filter group</summary>
        Microsoft.Azure.PowerShell.Cmdlets.SelfHelp.Models.Api20240301Preview.IFilterGroup FilterGroup { get; set; }
        /// <summary>List of filters</summary>
        Microsoft.Azure.PowerShell.Cmdlets.SelfHelp.Models.Api20240301Preview.IFilter[] FilterGroupFilter { get; set; }
        /// <summary>Chart name</summary>
        string Name { get; set; }
        /// <summary>Place holder used in HTML Content replace control with the content</summary>
        string ReplacementKey { get; set; }
        /// <summary>Time span duration</summary>
        string TimeSpanDuration { get; set; }
        /// <summary>Chart title</summary>
        string Title { get; set; }

    }
}