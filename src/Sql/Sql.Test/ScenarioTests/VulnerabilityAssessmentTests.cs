// ----------------------------------------------------------------------------------
//
// Copyright Microsoft Corporation
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
// http://www.apache.org/licenses/LICENSE-2.0
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
// ----------------------------------------------------------------------------------

using Microsoft.Azure.Commands.ScenarioTest.SqlTests;
using Microsoft.WindowsAzure.Commands.ScenarioTest;
using Xunit;
using Xunit.Abstractions;
using RestTestFramework = Microsoft.Rest.ClientRuntime.Azure.TestFramework;

namespace Microsoft.Azure.Commands.Sql.Test.ScenarioTests
{
    public class VulnerabilityAssessmentTests : SqlTestRunner
    {
        public VulnerabilityAssessmentTests(ITestOutputHelper output) : base(output)
        {

        }

        #region Server Policy Tests

        [Fact(Skip = "Cannot re-record.")]
        [Trait(Category.AcceptanceType, Category.CheckIn)]
        public void VulnerabilityAssessmentServerSettingsTest()
        {
            TestRunner.RunTestScript("Test-VulnerabilityAssessmentServerSettingsTest");
        }

        #endregion

        #region Policy Tests

        [Fact(Skip = "Too long")]
        [Trait(Category.AcceptanceType, Category.CheckIn)]
        public void VulnerabilityAssessmentWithSettingsNotDefinedTest()
        {
            TestRunner.RunTestScript("Test-VulnerabilityAssessmentWithSettingsNotDefinedTest");
        }

        [Fact(Skip = "Cannot re-record.")]
        [Trait(Category.AcceptanceType, Category.CheckIn)]
        public void VulnerabilityAssessmentSettingsTest()
        {
            TestRunner.RunTestScript("Test-VulnerabilityAssessmentSettingsTest");
        }

        #endregion

        #region Baseline Tests

        [Fact(Skip = "Subscriptions are restricted from provisioning in this region. Please choose a different region. For exceptions to this rule please open a support request with Issue type of 'Service and subscription limits'. See https://docs.microsoft.com/en-us/azure/sql-database/quota-increase-request for more details.'")]
        [Trait(Category.AcceptanceType, Category.CheckIn)]
        public void VulnerabilityAssessmentBaselineTest()
        {
            TestRunner.RunTestScript("Test-VulnerabilityAssessmentBaselineTest");
        }

        #endregion

        #region Scan Tests

        [Fact(Skip = "Subscriptions are restricted from provisioning in this region. Please choose a different region. For exceptions to this rule please open a support request with Issue type of 'Service and subscription limits'. See https://docs.microsoft.com/en-us/azure/sql-database/quota-increase-request for more details.'")]
        [Trait(Category.AcceptanceType, Category.CheckIn)]
        public void VulnerabilityAssessmentScanRecordGetListTest()
        {
            TestRunner.RunTestScript("Test-VulnerabilityAssessmentScanRecordGetListTest");
        }

        [Fact(Skip = "Cannot re-record.")]
        [Trait(Category.AcceptanceType, Category.CheckIn)]
        public void VulnerabilityAssessmentScanConvertTest()
        {
            TestRunner.RunTestScript("Test-VulnerabilityAssessmentScanConvertTest");
        }

        #endregion
    }
}
