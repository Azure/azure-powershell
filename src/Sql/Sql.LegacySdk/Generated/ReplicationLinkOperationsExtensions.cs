// 
// Copyright (c) Microsoft and contributors.  All rights reserved.
// 
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//   http://www.apache.org/licenses/LICENSE-2.0
// 
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// 
// See the License for the specific language governing permissions and
// limitations under the License.
// 

// Warning: This code was generated by a tool.
// 
// Changes to this file may cause incorrect behavior and will be lost if the
// code is regenerated.

using System;
using System.Linq;
using System.Threading;
using System.Threading.Tasks;
using Microsoft.Azure;
using Microsoft.Azure.Management.Sql.LegacySdk;
using Microsoft.Azure.Management.Sql.LegacySdk.Models;

namespace Microsoft.Azure.Management.Sql.LegacySdk
{
    /// <summary>
    /// The Windows Azure SQL Database management API provides a RESTful set of
    /// web services that interact with Windows Azure SQL Database services to
    /// manage your databases. The API enables users to create, retrieve,
    /// update, and delete databases and servers.
    /// </summary>
    public static partial class ReplicationLinkOperationsExtensions
    {
        /// <summary>
        /// Begins failover of the Azure SQL Database Replication Link with the
        /// given id.
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.Azure.Management.Sql.LegacySdk.IReplicationLinkOperations.
        /// </param>
        /// <param name='resourceGroupName'>
        /// Required. The name of the Resource Group to which the Azure SQL
        /// Server belongs.
        /// </param>
        /// <param name='serverName'>
        /// Required. The name of the Azure SQL Server on which the Azure SQL
        /// Database is hosted.
        /// </param>
        /// <param name='databaseName'>
        /// Required. The name of the Azure SQL Database that has the
        /// replication link to be failed over.
        /// </param>
        /// <param name='linkId'>
        /// Required. The id of the replication link to be failed over.
        /// </param>
        /// <returns>
        /// Response for long running Azure Sql Database replication failover
        /// operations.
        /// </returns>
        public static ReplicationLinkFailoverResponse BeginFailover(this IReplicationLinkOperations operations, string resourceGroupName, string serverName, string databaseName, string linkId)
        {
            return Task.Factory.StartNew((object s) => 
            {
                return ((IReplicationLinkOperations)s).BeginFailoverAsync(resourceGroupName, serverName, databaseName, linkId);
            }
            , operations, CancellationToken.None, TaskCreationOptions.None, TaskScheduler.Default).Unwrap().GetAwaiter().GetResult();
        }
        
        /// <summary>
        /// Begins failover of the Azure SQL Database Replication Link with the
        /// given id.
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.Azure.Management.Sql.LegacySdk.IReplicationLinkOperations.
        /// </param>
        /// <param name='resourceGroupName'>
        /// Required. The name of the Resource Group to which the Azure SQL
        /// Server belongs.
        /// </param>
        /// <param name='serverName'>
        /// Required. The name of the Azure SQL Server on which the Azure SQL
        /// Database is hosted.
        /// </param>
        /// <param name='databaseName'>
        /// Required. The name of the Azure SQL Database that has the
        /// replication link to be failed over.
        /// </param>
        /// <param name='linkId'>
        /// Required. The id of the replication link to be failed over.
        /// </param>
        /// <returns>
        /// Response for long running Azure Sql Database replication failover
        /// operations.
        /// </returns>
        public static Task<ReplicationLinkFailoverResponse> BeginFailoverAsync(this IReplicationLinkOperations operations, string resourceGroupName, string serverName, string databaseName, string linkId)
        {
            return operations.BeginFailoverAsync(resourceGroupName, serverName, databaseName, linkId, CancellationToken.None);
        }
        
        /// <summary>
        /// Begins a forced failover of the Azure SQL Database Replication Link
        /// with the given id which may result in data loss.
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.Azure.Management.Sql.LegacySdk.IReplicationLinkOperations.
        /// </param>
        /// <param name='resourceGroupName'>
        /// Required. The name of the Resource Group to which the Azure SQL
        /// Server belongs.
        /// </param>
        /// <param name='serverName'>
        /// Required. The name of the Azure SQL Server on which the Azure SQL
        /// Database is hosted.
        /// </param>
        /// <param name='databaseName'>
        /// Required. The name of the Azure SQL Database that has the
        /// replication link to be failed over.
        /// </param>
        /// <param name='linkId'>
        /// Required. The id of the replication link to be failed over.
        /// </param>
        /// <returns>
        /// Response for long running Azure Sql Database replication failover
        /// operations.
        /// </returns>
        public static ReplicationLinkFailoverResponse BeginFailoverAllowDataLoss(this IReplicationLinkOperations operations, string resourceGroupName, string serverName, string databaseName, string linkId)
        {
            return Task.Factory.StartNew((object s) => 
            {
                return ((IReplicationLinkOperations)s).BeginFailoverAllowDataLossAsync(resourceGroupName, serverName, databaseName, linkId);
            }
            , operations, CancellationToken.None, TaskCreationOptions.None, TaskScheduler.Default).Unwrap().GetAwaiter().GetResult();
        }
        
        /// <summary>
        /// Begins a forced failover of the Azure SQL Database Replication Link
        /// with the given id which may result in data loss.
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.Azure.Management.Sql.LegacySdk.IReplicationLinkOperations.
        /// </param>
        /// <param name='resourceGroupName'>
        /// Required. The name of the Resource Group to which the Azure SQL
        /// Server belongs.
        /// </param>
        /// <param name='serverName'>
        /// Required. The name of the Azure SQL Server on which the Azure SQL
        /// Database is hosted.
        /// </param>
        /// <param name='databaseName'>
        /// Required. The name of the Azure SQL Database that has the
        /// replication link to be failed over.
        /// </param>
        /// <param name='linkId'>
        /// Required. The id of the replication link to be failed over.
        /// </param>
        /// <returns>
        /// Response for long running Azure Sql Database replication failover
        /// operations.
        /// </returns>
        public static Task<ReplicationLinkFailoverResponse> BeginFailoverAllowDataLossAsync(this IReplicationLinkOperations operations, string resourceGroupName, string serverName, string databaseName, string linkId)
        {
            return operations.BeginFailoverAllowDataLossAsync(resourceGroupName, serverName, databaseName, linkId, CancellationToken.None);
        }
        
        /// <summary>
        /// Deletes the Azure SQL Database Replication Link with the given id.
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.Azure.Management.Sql.LegacySdk.IReplicationLinkOperations.
        /// </param>
        /// <param name='resourceGroupName'>
        /// Required. The name of the Resource Group to which the Azure SQL
        /// Server belongs.
        /// </param>
        /// <param name='serverName'>
        /// Required. The name of the Azure SQL Server on which the Azure SQL
        /// Database is hosted.
        /// </param>
        /// <param name='databaseName'>
        /// Required. The name of the Azure SQL Database that has the
        /// replication link to be dropped.
        /// </param>
        /// <param name='linkId'>
        /// Required. The id of the replication link to be deleted.
        /// </param>
        /// <returns>
        /// A standard service response including an HTTP status code and
        /// request ID.
        /// </returns>
        public static AzureOperationResponse Delete(this IReplicationLinkOperations operations, string resourceGroupName, string serverName, string databaseName, string linkId)
        {
            return Task.Factory.StartNew((object s) => 
            {
                return ((IReplicationLinkOperations)s).DeleteAsync(resourceGroupName, serverName, databaseName, linkId);
            }
            , operations, CancellationToken.None, TaskCreationOptions.None, TaskScheduler.Default).Unwrap().GetAwaiter().GetResult();
        }
        
        /// <summary>
        /// Deletes the Azure SQL Database Replication Link with the given id.
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.Azure.Management.Sql.LegacySdk.IReplicationLinkOperations.
        /// </param>
        /// <param name='resourceGroupName'>
        /// Required. The name of the Resource Group to which the Azure SQL
        /// Server belongs.
        /// </param>
        /// <param name='serverName'>
        /// Required. The name of the Azure SQL Server on which the Azure SQL
        /// Database is hosted.
        /// </param>
        /// <param name='databaseName'>
        /// Required. The name of the Azure SQL Database that has the
        /// replication link to be dropped.
        /// </param>
        /// <param name='linkId'>
        /// Required. The id of the replication link to be deleted.
        /// </param>
        /// <returns>
        /// A standard service response including an HTTP status code and
        /// request ID.
        /// </returns>
        public static Task<AzureOperationResponse> DeleteAsync(this IReplicationLinkOperations operations, string resourceGroupName, string serverName, string databaseName, string linkId)
        {
            return operations.DeleteAsync(resourceGroupName, serverName, databaseName, linkId, CancellationToken.None);
        }
        
        /// <summary>
        /// Fails over the Azure SQL Database Replication Link with the given
        /// id.
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.Azure.Management.Sql.LegacySdk.IReplicationLinkOperations.
        /// </param>
        /// <param name='resourceGroupName'>
        /// Required. The name of the Resource Group to which the Azure SQL
        /// Server belongs.
        /// </param>
        /// <param name='serverName'>
        /// Required. The name of the Azure SQL Server on which the Azure SQL
        /// Database is hosted.
        /// </param>
        /// <param name='databaseName'>
        /// Required. The name of the Azure SQL Database that has the
        /// replication link to be failed over.
        /// </param>
        /// <param name='linkId'>
        /// Required. The id of the replication link to be failed over.
        /// </param>
        /// <returns>
        /// Response for long running Azure Sql Database replication failover
        /// operations.
        /// </returns>
        public static ReplicationLinkFailoverResponse Failover(this IReplicationLinkOperations operations, string resourceGroupName, string serverName, string databaseName, string linkId)
        {
            return Task.Factory.StartNew((object s) => 
            {
                return ((IReplicationLinkOperations)s).FailoverAsync(resourceGroupName, serverName, databaseName, linkId);
            }
            , operations, CancellationToken.None, TaskCreationOptions.None, TaskScheduler.Default).Unwrap().GetAwaiter().GetResult();
        }
        
        /// <summary>
        /// Fails over the Azure SQL Database Replication Link with the given
        /// id.
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.Azure.Management.Sql.LegacySdk.IReplicationLinkOperations.
        /// </param>
        /// <param name='resourceGroupName'>
        /// Required. The name of the Resource Group to which the Azure SQL
        /// Server belongs.
        /// </param>
        /// <param name='serverName'>
        /// Required. The name of the Azure SQL Server on which the Azure SQL
        /// Database is hosted.
        /// </param>
        /// <param name='databaseName'>
        /// Required. The name of the Azure SQL Database that has the
        /// replication link to be failed over.
        /// </param>
        /// <param name='linkId'>
        /// Required. The id of the replication link to be failed over.
        /// </param>
        /// <returns>
        /// Response for long running Azure Sql Database replication failover
        /// operations.
        /// </returns>
        public static Task<ReplicationLinkFailoverResponse> FailoverAsync(this IReplicationLinkOperations operations, string resourceGroupName, string serverName, string databaseName, string linkId)
        {
            return operations.FailoverAsync(resourceGroupName, serverName, databaseName, linkId, CancellationToken.None);
        }
        
        /// <summary>
        /// Forces failover of the Azure SQL Database Replication Link with the
        /// given id which may result in data loss.
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.Azure.Management.Sql.LegacySdk.IReplicationLinkOperations.
        /// </param>
        /// <param name='resourceGroupName'>
        /// Required. The name of the Resource Group to which the Azure SQL
        /// Server belongs.
        /// </param>
        /// <param name='serverName'>
        /// Required. The name of the Azure SQL Server on which the Azure SQL
        /// Database is hosted.
        /// </param>
        /// <param name='databaseName'>
        /// Required. The name of the Azure SQL Database that has the
        /// replication link to be failed over.
        /// </param>
        /// <param name='linkId'>
        /// Required. The id of the replication link to be failed over.
        /// </param>
        /// <returns>
        /// Response for long running Azure Sql Database replication failover
        /// operations.
        /// </returns>
        public static ReplicationLinkFailoverResponse FailoverAllowDataLoss(this IReplicationLinkOperations operations, string resourceGroupName, string serverName, string databaseName, string linkId)
        {
            return Task.Factory.StartNew((object s) => 
            {
                return ((IReplicationLinkOperations)s).FailoverAllowDataLossAsync(resourceGroupName, serverName, databaseName, linkId);
            }
            , operations, CancellationToken.None, TaskCreationOptions.None, TaskScheduler.Default).Unwrap().GetAwaiter().GetResult();
        }
        
        /// <summary>
        /// Forces failover of the Azure SQL Database Replication Link with the
        /// given id which may result in data loss.
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.Azure.Management.Sql.LegacySdk.IReplicationLinkOperations.
        /// </param>
        /// <param name='resourceGroupName'>
        /// Required. The name of the Resource Group to which the Azure SQL
        /// Server belongs.
        /// </param>
        /// <param name='serverName'>
        /// Required. The name of the Azure SQL Server on which the Azure SQL
        /// Database is hosted.
        /// </param>
        /// <param name='databaseName'>
        /// Required. The name of the Azure SQL Database that has the
        /// replication link to be failed over.
        /// </param>
        /// <param name='linkId'>
        /// Required. The id of the replication link to be failed over.
        /// </param>
        /// <returns>
        /// Response for long running Azure Sql Database replication failover
        /// operations.
        /// </returns>
        public static Task<ReplicationLinkFailoverResponse> FailoverAllowDataLossAsync(this IReplicationLinkOperations operations, string resourceGroupName, string serverName, string databaseName, string linkId)
        {
            return operations.FailoverAllowDataLossAsync(resourceGroupName, serverName, databaseName, linkId, CancellationToken.None);
        }
        
        /// <summary>
        /// Returns information about an Azure SQL Database Replication Link.
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.Azure.Management.Sql.LegacySdk.IReplicationLinkOperations.
        /// </param>
        /// <param name='resourceGroupName'>
        /// Required. The name of the Resource Group to which the server
        /// belongs.
        /// </param>
        /// <param name='serverName'>
        /// Required. The name of the Azure SQL Server on which the database is
        /// hosted.
        /// </param>
        /// <param name='databaseName'>
        /// Required. The name of the Azure SQL Database to get the link for.
        /// </param>
        /// <param name='linkId'>
        /// Required. The replication link id to be retrieved.
        /// </param>
        /// <returns>
        /// Represents the response to a Get Azure Sql Database Replication
        /// Link request.
        /// </returns>
        public static ReplicationLinkGetResponse Get(this IReplicationLinkOperations operations, string resourceGroupName, string serverName, string databaseName, string linkId)
        {
            return Task.Factory.StartNew((object s) => 
            {
                return ((IReplicationLinkOperations)s).GetAsync(resourceGroupName, serverName, databaseName, linkId);
            }
            , operations, CancellationToken.None, TaskCreationOptions.None, TaskScheduler.Default).Unwrap().GetAwaiter().GetResult();
        }
        
        /// <summary>
        /// Returns information about an Azure SQL Database Replication Link.
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.Azure.Management.Sql.LegacySdk.IReplicationLinkOperations.
        /// </param>
        /// <param name='resourceGroupName'>
        /// Required. The name of the Resource Group to which the server
        /// belongs.
        /// </param>
        /// <param name='serverName'>
        /// Required. The name of the Azure SQL Server on which the database is
        /// hosted.
        /// </param>
        /// <param name='databaseName'>
        /// Required. The name of the Azure SQL Database to get the link for.
        /// </param>
        /// <param name='linkId'>
        /// Required. The replication link id to be retrieved.
        /// </param>
        /// <returns>
        /// Represents the response to a Get Azure Sql Database Replication
        /// Link request.
        /// </returns>
        public static Task<ReplicationLinkGetResponse> GetAsync(this IReplicationLinkOperations operations, string resourceGroupName, string serverName, string databaseName, string linkId)
        {
            return operations.GetAsync(resourceGroupName, serverName, databaseName, linkId, CancellationToken.None);
        }
        
        /// <summary>
        /// Gets the status of an Azure SQL Database replication link failover
        /// operation.
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.Azure.Management.Sql.LegacySdk.IReplicationLinkOperations.
        /// </param>
        /// <param name='operationStatusLink'>
        /// Required. Location value returned by the Begin operation
        /// </param>
        /// <returns>
        /// Response for long running Azure Sql Database replication failover
        /// operations.
        /// </returns>
        public static ReplicationLinkFailoverResponse GetReplicationLinkOperationStatus(this IReplicationLinkOperations operations, string operationStatusLink)
        {
            return Task.Factory.StartNew((object s) => 
            {
                return ((IReplicationLinkOperations)s).GetReplicationLinkOperationStatusAsync(operationStatusLink);
            }
            , operations, CancellationToken.None, TaskCreationOptions.None, TaskScheduler.Default).Unwrap().GetAwaiter().GetResult();
        }
        
        /// <summary>
        /// Gets the status of an Azure SQL Database replication link failover
        /// operation.
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.Azure.Management.Sql.LegacySdk.IReplicationLinkOperations.
        /// </param>
        /// <param name='operationStatusLink'>
        /// Required. Location value returned by the Begin operation
        /// </param>
        /// <returns>
        /// Response for long running Azure Sql Database replication failover
        /// operations.
        /// </returns>
        public static Task<ReplicationLinkFailoverResponse> GetReplicationLinkOperationStatusAsync(this IReplicationLinkOperations operations, string operationStatusLink)
        {
            return operations.GetReplicationLinkOperationStatusAsync(operationStatusLink, CancellationToken.None);
        }
        
        /// <summary>
        /// Returns information about Azure SQL Database Replication Links.
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.Azure.Management.Sql.LegacySdk.IReplicationLinkOperations.
        /// </param>
        /// <param name='resourceGroupName'>
        /// Required. The name of the Resource Group to which the server
        /// belongs.
        /// </param>
        /// <param name='serverName'>
        /// Required. The name of the Azure SQL Server in which the Azure SQL
        /// Database is hosted.
        /// </param>
        /// <param name='databaseName'>
        /// Required. The name of the Azure SQL Database to retrieve links for.
        /// </param>
        /// <returns>
        /// Represents the response to a List Azure Sql Database Replication
        /// Link request.
        /// </returns>
        public static ReplicationLinkListResponse List(this IReplicationLinkOperations operations, string resourceGroupName, string serverName, string databaseName)
        {
            return Task.Factory.StartNew((object s) => 
            {
                return ((IReplicationLinkOperations)s).ListAsync(resourceGroupName, serverName, databaseName);
            }
            , operations, CancellationToken.None, TaskCreationOptions.None, TaskScheduler.Default).Unwrap().GetAwaiter().GetResult();
        }
        
        /// <summary>
        /// Returns information about Azure SQL Database Replication Links.
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.Azure.Management.Sql.LegacySdk.IReplicationLinkOperations.
        /// </param>
        /// <param name='resourceGroupName'>
        /// Required. The name of the Resource Group to which the server
        /// belongs.
        /// </param>
        /// <param name='serverName'>
        /// Required. The name of the Azure SQL Server in which the Azure SQL
        /// Database is hosted.
        /// </param>
        /// <param name='databaseName'>
        /// Required. The name of the Azure SQL Database to retrieve links for.
        /// </param>
        /// <returns>
        /// Represents the response to a List Azure Sql Database Replication
        /// Link request.
        /// </returns>
        public static Task<ReplicationLinkListResponse> ListAsync(this IReplicationLinkOperations operations, string resourceGroupName, string serverName, string databaseName)
        {
            return operations.ListAsync(resourceGroupName, serverName, databaseName, CancellationToken.None);
        }
    }
}
