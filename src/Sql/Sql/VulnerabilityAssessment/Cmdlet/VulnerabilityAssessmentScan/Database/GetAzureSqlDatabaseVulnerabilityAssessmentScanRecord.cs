// ----------------------------------------------------------------------------------
//
// Copyright Microsoft Corporation
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
// http://www.apache.org/licenses/LICENSE-2.0
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
// ----------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Linq;
using Microsoft.Azure.Commands.Sql.VulnerabilityAssessment.Model;
using System.Management.Automation;
using Microsoft.Azure.Commands.Sql.Database.Model;

namespace Microsoft.Azure.Commands.Sql.VulnerabilityAssessment.Cmdlet.VulnerabilityAssessmentScan
{
    /// <summary>
    /// Returns the Vulnerability Assessment scan record of a specific database.
    /// </summary>
    [Cmdlet("Get", ResourceManager.Common.AzureRMConstants.AzureRMPrefix + "SqlDatabaseVulnerabilityAssessmentScanRecord"), OutputType(typeof(DatabaseVulnerabilityAssessmentScanRecordModel))]
    public class GetAzureSqlDatabaseVulnerabilityAssessmentScanRecord : GetAzureSqlVulnerabilityAssessmentScanRecordBase
    {
        /// <summary>
        /// Gets or sets the name of the database server to use.
        /// </summary>
        [Parameter(Mandatory = true,
            ValueFromPipelineByPropertyName = true,
            Position = 1,
            HelpMessage = "SQL Database server name.")]
        [ValidateNotNullOrEmpty]
        public string ServerName { get; set; }

        /// <summary>
        /// Gets or sets the name of the database to use.
        /// </summary>
        [Parameter(Mandatory = true,
            ValueFromPipelineByPropertyName = true,
            Position = 2,
            HelpMessage = "SQL Database name.")]
        [ValidateNotNullOrEmpty]
        public string DatabaseName { get; set; }

        /// <summary>
        /// Database resource
        /// </summary>
        [Parameter(ParameterSetName = GetByParentResourceParameterSet,
            Mandatory = false,
            ValueFromPipeline = true,
            HelpMessage = "The database object to get Vulnerability Assessment scan record for")]
        [ValidateNotNullOrEmpty]
        public AzureSqlDatabaseModel InputObject { get; set; }

        protected override string GetResourceGroupName()
        {
            if (string.Equals(this.ParameterSetName, GetByParentResourceParameterSet, StringComparison.OrdinalIgnoreCase))
            {
                return InputObject.ResourceGroupName;
            }

            return base.GetResourceGroupName();
        }

        protected override string GetServerName()
        {
            if (string.Equals(this.ParameterSetName, GetByParentResourceParameterSet, StringComparison.OrdinalIgnoreCase))
            {
                return InputObject.ServerName;
            }

            return ServerName;
        }

        protected override string GetDatabaseName()
        {
            if (string.Equals(this.ParameterSetName, GetByParentResourceParameterSet, StringComparison.OrdinalIgnoreCase))
            {
                return InputObject.DatabaseName;
            }

            return DatabaseName;
        }

        protected override ApplyToType GetResourceTypeVaAppliesTo()
        {
            return ApplyToType.Database;
        }

        /// <summary>
        /// Transforms the given model object to be an object that is written out
        /// </summary>
        /// <param name="models">The about to be written model object</param>
        /// <returns>The prepared object to be written out</returns>
        protected override object TransformModelToOutputObject(IEnumerable<VulnerabilityAssessmentScanRecordModel> models)
        {
            return models.Select(model => new DatabaseVulnerabilityAssessmentScanRecordModel(model, GetServerName(), GetDatabaseName()));
        }
    }
}
