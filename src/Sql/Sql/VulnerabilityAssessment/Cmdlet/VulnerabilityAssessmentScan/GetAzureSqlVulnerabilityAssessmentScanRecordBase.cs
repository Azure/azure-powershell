// ----------------------------------------------------------------------------------
//
// Copyright Microsoft Corporation
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
// http://www.apache.org/licenses/LICENSE-2.0
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
// ----------------------------------------------------------------------------------

using Microsoft.Azure.Commands.Sql.VulnerabilityAssessment.Model;
using System.Collections.Generic;

namespace Microsoft.Azure.Commands.Sql.VulnerabilityAssessment.Cmdlet.VulnerabilityAssessmentScan
{
    /// <summary>
    /// The base class for all Get Azure Sql Vulnerability Assessment Scan Record
    /// </summary>
    public abstract class GetAzureSqlVulnerabilityAssessmentScanRecordBase : SqlDatabaseVulnerabilityAssessmentScanCmdletBase<IEnumerable<VulnerabilityAssessmentScanRecordModel>>
    {
        protected const string GetByParentResourceParameterSet = "GetByResourceIdParameterSet";

        protected const string GetByNameParameterSet = "GetByNameParameterSet";

        /// <summary>
        /// Get the entities from the service
        /// </summary>
        /// <returns>The list of entities</returns>
        protected override IEnumerable<VulnerabilityAssessmentScanRecordModel> GetEntity()
        {
            ICollection<VulnerabilityAssessmentScanRecordModel> results;

            bool getScanRecordBySpecificScanId = MyInvocation.BoundParameters.ContainsKey(nameof(ScanId));
            string scanId = ScanId;

            if (getScanRecordBySpecificScanId)
            {
                results = new List<VulnerabilityAssessmentScanRecordModel>
                {
                    ModelAdapter.GetVulnerabilityAssessmentScanRecord(GetResourceGroupName(), GetServerName(), GetDatabaseName(), scanId, GetResourceTypeVaAppliesTo())
                };
            }
            else
            {
                results = ModelAdapter.ListVulnerabilityAssessmentScanRecords(GetResourceGroupName(), GetServerName(), GetDatabaseName(), GetResourceTypeVaAppliesTo());
            }

            return results;
        }

        /// <summary>
        /// No sending is needed as this is a Get cmdlet
        /// </summary>
        /// <param name="model">The model object with the data to be sent to the REST endpoints</param>
        protected override IEnumerable<VulnerabilityAssessmentScanRecordModel> PersistChanges(IEnumerable<VulnerabilityAssessmentScanRecordModel> model)
        {
            return model;
        }
    }
}
