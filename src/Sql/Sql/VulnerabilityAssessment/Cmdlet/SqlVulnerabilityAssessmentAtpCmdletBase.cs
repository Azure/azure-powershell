// ----------------------------------------------------------------------------------
//
// Copyright Microsoft Corporation
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
// http://www.apache.org/licenses/LICENSE-2.0
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
// ----------------------------------------------------------------------------------

using Microsoft.Azure.Commands.Sql.Common;
using Microsoft.Azure.Commands.Sql.Properties;
using Microsoft.Azure.Commands.Sql.VulnerabilityAssessment.Services;
using Microsoft.Azure.Commands.Sql.VulnerabilityAssessment.Model;

namespace Microsoft.Azure.Commands.Sql.VulnerabilityAssessment.Cmdlet
{
    /// <summary>
    /// The base class for set policy Azure Sql Database Vulnerability Assessment Management Cmdlet
    /// </summary>
    public abstract class SqlVulnerabilityAssessmentAtpCmdletBase<M, A> : AzureSqlCmdletBase<M, A> where A: BaseSqlVulnerabilityAssessmentAdapter
    {
        /// <summary>
        /// Gets the resource group name
        /// </summary>
        protected virtual string GetResourceGroupName()
        {
            return ResourceGroupName;
        }

        /// <summary>
        /// Gets the server name (Could be server name or managed instance name)
        /// </summary>
        protected abstract string GetServerName();

        /// <summary>
        /// Gets the database name (Could be database name or managed database name)
        /// </summary>
        protected abstract string GetDatabaseName();

        /// <summary>
        /// Gets the resource type that VA applies to (VA could be applied on database or server, as well as managed instance and managed database)
        /// </summary>
        protected abstract ApplyToType GetResourceTypeVaAppliesTo();

        /// <summary>
        /// Overriding to add warning message in case cmdlet is on master
        /// </summary>
        public override void ExecuteCmdlet()
        {
            if (GetResourceTypeVaAppliesTo() == ApplyToType.Database)
            {
                if (GetDatabaseName().ToLower() == "master")
                {
                    WriteWarning(Resources.VulnerabilityAssessmentOperationIsNotAvailableOnMasterDatabase);
                    return;
                }
            }

            base.ExecuteCmdlet();
        }
    }
}
