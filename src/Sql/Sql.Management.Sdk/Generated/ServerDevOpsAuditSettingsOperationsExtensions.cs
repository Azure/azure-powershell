// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.
namespace Microsoft.Azure.Management.Sql
{
    using Microsoft.Rest.Azure;
    using Models;

    /// <summary>
    /// Extension methods for ServerDevOpsAuditSettingsOperations
    /// </summary>
    public static partial class ServerDevOpsAuditSettingsOperationsExtensions
    {
        /// <summary>
        /// Lists DevOps audit settings of a server.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='resourceGroupName'>
        /// The name of the resource group that contains the resource. You can obtain
        /// this value from the Azure Resource Manager API or the portal.
        /// </param>
        /// <param name='serverName'>
        /// The name of the server.
        /// </param>
        public static Microsoft.Rest.Azure.IPage<ServerDevOpsAuditingSettings> ListByServer(this IServerDevOpsAuditSettingsOperations operations, string resourceGroupName, string serverName)
        {
                return ((IServerDevOpsAuditSettingsOperations)operations).ListByServerAsync(resourceGroupName, serverName).GetAwaiter().GetResult();
        }

        /// <summary>
        /// Lists DevOps audit settings of a server.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='resourceGroupName'>
        /// The name of the resource group that contains the resource. You can obtain
        /// this value from the Azure Resource Manager API or the portal.
        /// </param>
        /// <param name='serverName'>
        /// The name of the server.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        public static async System.Threading.Tasks.Task<Microsoft.Rest.Azure.IPage<ServerDevOpsAuditingSettings>> ListByServerAsync(this IServerDevOpsAuditSettingsOperations operations, string resourceGroupName, string serverName, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            using (var _result = await operations.ListByServerWithHttpMessagesAsync(resourceGroupName, serverName, null, cancellationToken).ConfigureAwait(false))
            {
                return _result.Body;
            }
        }
        /// <summary>
        /// Gets a server&#39;s DevOps audit settings.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='resourceGroupName'>
        /// The name of the resource group that contains the resource. You can obtain
        /// this value from the Azure Resource Manager API or the portal.
        /// </param>
        /// <param name='serverName'>
        /// The name of the server.
        /// </param>
        public static ServerDevOpsAuditingSettings Get(this IServerDevOpsAuditSettingsOperations operations, string resourceGroupName, string serverName)
        {
                return ((IServerDevOpsAuditSettingsOperations)operations).GetAsync(resourceGroupName, serverName).GetAwaiter().GetResult();
        }

        /// <summary>
        /// Gets a server&#39;s DevOps audit settings.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='resourceGroupName'>
        /// The name of the resource group that contains the resource. You can obtain
        /// this value from the Azure Resource Manager API or the portal.
        /// </param>
        /// <param name='serverName'>
        /// The name of the server.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        public static async System.Threading.Tasks.Task<ServerDevOpsAuditingSettings> GetAsync(this IServerDevOpsAuditSettingsOperations operations, string resourceGroupName, string serverName, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            using (var _result = await operations.GetWithHttpMessagesAsync(resourceGroupName, serverName, null, cancellationToken).ConfigureAwait(false))
            {
                return _result.Body;
            }
        }
        /// <summary>
        /// Creates or updates a server&#39;s DevOps audit settings.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='resourceGroupName'>
        /// The name of the resource group that contains the resource. You can obtain
        /// this value from the Azure Resource Manager API or the portal.
        /// </param>
        /// <param name='serverName'>
        /// The name of the server.
        /// </param>
        public static ServerDevOpsAuditingSettings CreateOrUpdate(this IServerDevOpsAuditSettingsOperations operations, string resourceGroupName, string serverName, ServerDevOpsAuditingSettings parameters)
        {
                return ((IServerDevOpsAuditSettingsOperations)operations).CreateOrUpdateAsync(resourceGroupName, serverName, parameters).GetAwaiter().GetResult();
        }

        /// <summary>
        /// Creates or updates a server&#39;s DevOps audit settings.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='resourceGroupName'>
        /// The name of the resource group that contains the resource. You can obtain
        /// this value from the Azure Resource Manager API or the portal.
        /// </param>
        /// <param name='serverName'>
        /// The name of the server.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        public static async System.Threading.Tasks.Task<ServerDevOpsAuditingSettings> CreateOrUpdateAsync(this IServerDevOpsAuditSettingsOperations operations, string resourceGroupName, string serverName, ServerDevOpsAuditingSettings parameters, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            using (var _result = await operations.CreateOrUpdateWithHttpMessagesAsync(resourceGroupName, serverName, parameters, null, cancellationToken).ConfigureAwait(false))
            {
                return _result.Body;
            }
        }
        /// <summary>
        /// Creates or updates a server&#39;s DevOps audit settings.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='resourceGroupName'>
        /// The name of the resource group that contains the resource. You can obtain
        /// this value from the Azure Resource Manager API or the portal.
        /// </param>
        /// <param name='serverName'>
        /// The name of the server.
        /// </param>
        public static ServerDevOpsAuditingSettings BeginCreateOrUpdate(this IServerDevOpsAuditSettingsOperations operations, string resourceGroupName, string serverName, ServerDevOpsAuditingSettings parameters)
        {
                return ((IServerDevOpsAuditSettingsOperations)operations).BeginCreateOrUpdateAsync(resourceGroupName, serverName, parameters).GetAwaiter().GetResult();
        }

        /// <summary>
        /// Creates or updates a server&#39;s DevOps audit settings.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='resourceGroupName'>
        /// The name of the resource group that contains the resource. You can obtain
        /// this value from the Azure Resource Manager API or the portal.
        /// </param>
        /// <param name='serverName'>
        /// The name of the server.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        public static async System.Threading.Tasks.Task<ServerDevOpsAuditingSettings> BeginCreateOrUpdateAsync(this IServerDevOpsAuditSettingsOperations operations, string resourceGroupName, string serverName, ServerDevOpsAuditingSettings parameters, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            using (var _result = await operations.BeginCreateOrUpdateWithHttpMessagesAsync(resourceGroupName, serverName, parameters, null, cancellationToken).ConfigureAwait(false))
            {
                return _result.Body;
            }
        }
        /// <summary>
        /// Lists DevOps audit settings of a server.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='nextPageLink'>
        /// The NextLink from the previous successful call to List operation.
        /// </param>
        public static Microsoft.Rest.Azure.IPage<ServerDevOpsAuditingSettings> ListByServerNext(this IServerDevOpsAuditSettingsOperations operations, string nextPageLink)
        {
                return ((IServerDevOpsAuditSettingsOperations)operations).ListByServerNextAsync(nextPageLink).GetAwaiter().GetResult();
        }

        /// <summary>
        /// Lists DevOps audit settings of a server.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='nextPageLink'>
        /// The NextLink from the previous successful call to List operation.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        public static async System.Threading.Tasks.Task<Microsoft.Rest.Azure.IPage<ServerDevOpsAuditingSettings>> ListByServerNextAsync(this IServerDevOpsAuditSettingsOperations operations, string nextPageLink, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            using (var _result = await operations.ListByServerNextWithHttpMessagesAsync(nextPageLink, null, cancellationToken).ConfigureAwait(false))
            {
                return _result.Body;
            }
        }
    }
}
