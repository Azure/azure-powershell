// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.
namespace Microsoft.Azure.Management.Sql
{
    using Microsoft.Rest.Azure;
    using Models;

    /// <summary>
    /// Extension methods for ManagedServerDnsAliasesOperations
    /// </summary>
    public static partial class ManagedServerDnsAliasesOperationsExtensions
    {
        /// <summary>
        /// Gets a list of managed server DNS aliases for a managed server.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='resourceGroupName'>
        /// The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.
        /// </param>
        /// <param name='managedInstanceName'>
        /// The name of the managed instance.
        /// </param>
        public static Microsoft.Rest.Azure.IPage<ManagedServerDnsAlias> ListByManagedInstance(this IManagedServerDnsAliasesOperations operations, string resourceGroupName, string managedInstanceName)
        {
                return ((IManagedServerDnsAliasesOperations)operations).ListByManagedInstanceAsync(resourceGroupName, managedInstanceName).GetAwaiter().GetResult();
        }

        /// <summary>
        /// Gets a list of managed server DNS aliases for a managed server.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='resourceGroupName'>
        /// The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.
        /// </param>
        /// <param name='managedInstanceName'>
        /// The name of the managed instance.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        public static async System.Threading.Tasks.Task<Microsoft.Rest.Azure.IPage<ManagedServerDnsAlias>> ListByManagedInstanceAsync(this IManagedServerDnsAliasesOperations operations, string resourceGroupName, string managedInstanceName, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            using (var _result = await operations.ListByManagedInstanceWithHttpMessagesAsync(resourceGroupName, managedInstanceName, null, cancellationToken).ConfigureAwait(false))
            {
                return _result.Body;
            }
        }
        /// <summary>
        /// Gets a server DNS alias.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='resourceGroupName'>
        /// The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.
        /// </param>
        /// <param name='managedInstanceName'>
        /// The name of the managed instance.
        /// </param>
        /// <param name='dnsAliasName'>
        /// 
        /// </param>
        public static ManagedServerDnsAlias Get(this IManagedServerDnsAliasesOperations operations, string resourceGroupName, string managedInstanceName, string dnsAliasName)
        {
                return ((IManagedServerDnsAliasesOperations)operations).GetAsync(resourceGroupName, managedInstanceName, dnsAliasName).GetAwaiter().GetResult();
        }

        /// <summary>
        /// Gets a server DNS alias.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='resourceGroupName'>
        /// The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.
        /// </param>
        /// <param name='managedInstanceName'>
        /// The name of the managed instance.
        /// </param>
        /// <param name='dnsAliasName'>
        /// 
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        public static async System.Threading.Tasks.Task<ManagedServerDnsAlias> GetAsync(this IManagedServerDnsAliasesOperations operations, string resourceGroupName, string managedInstanceName, string dnsAliasName, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            using (var _result = await operations.GetWithHttpMessagesAsync(resourceGroupName, managedInstanceName, dnsAliasName, null, cancellationToken).ConfigureAwait(false))
            {
                return _result.Body;
            }
        }
        /// <summary>
        /// Creates a managed server DNS alias.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='resourceGroupName'>
        /// The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.
        /// </param>
        /// <param name='managedInstanceName'>
        /// The name of the managed instance.
        /// </param>
        /// <param name='dnsAliasName'>
        /// 
        /// </param>
        public static ManagedServerDnsAlias CreateOrUpdate(this IManagedServerDnsAliasesOperations operations, string resourceGroupName, string managedInstanceName, string dnsAliasName, ManagedServerDnsAliasCreation parameters)
        {
                return ((IManagedServerDnsAliasesOperations)operations).CreateOrUpdateAsync(resourceGroupName, managedInstanceName, dnsAliasName, parameters).GetAwaiter().GetResult();
        }

        /// <summary>
        /// Creates a managed server DNS alias.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='resourceGroupName'>
        /// The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.
        /// </param>
        /// <param name='managedInstanceName'>
        /// The name of the managed instance.
        /// </param>
        /// <param name='dnsAliasName'>
        /// 
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        public static async System.Threading.Tasks.Task<ManagedServerDnsAlias> CreateOrUpdateAsync(this IManagedServerDnsAliasesOperations operations, string resourceGroupName, string managedInstanceName, string dnsAliasName, ManagedServerDnsAliasCreation parameters, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            using (var _result = await operations.CreateOrUpdateWithHttpMessagesAsync(resourceGroupName, managedInstanceName, dnsAliasName, parameters, null, cancellationToken).ConfigureAwait(false))
            {
                return _result.Body;
            }
        }
        /// <summary>
        /// Deletes the managed server DNS alias with the given name.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='resourceGroupName'>
        /// The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.
        /// </param>
        /// <param name='managedInstanceName'>
        /// The name of the managed instance.
        /// </param>
        /// <param name='dnsAliasName'>
        /// 
        /// </param>
        public static void Delete(this IManagedServerDnsAliasesOperations operations, string resourceGroupName, string managedInstanceName, string dnsAliasName)
        {
                ((IManagedServerDnsAliasesOperations)operations).DeleteAsync(resourceGroupName, managedInstanceName, dnsAliasName).GetAwaiter().GetResult();
        }

        /// <summary>
        /// Deletes the managed server DNS alias with the given name.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='resourceGroupName'>
        /// The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.
        /// </param>
        /// <param name='managedInstanceName'>
        /// The name of the managed instance.
        /// </param>
        /// <param name='dnsAliasName'>
        /// 
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        public static async System.Threading.Tasks.Task DeleteAsync(this IManagedServerDnsAliasesOperations operations, string resourceGroupName, string managedInstanceName, string dnsAliasName, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            (await operations.DeleteWithHttpMessagesAsync(resourceGroupName, managedInstanceName, dnsAliasName, null, cancellationToken).ConfigureAwait(false)).Dispose();
        }
        /// <summary>
        /// Acquires managed server DNS alias from another managed server.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='resourceGroupName'>
        /// The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.
        /// </param>
        /// <param name='managedInstanceName'>
        /// The name of the managed instance.
        /// </param>
        /// <param name='dnsAliasName'>
        /// 
        /// </param>
        public static ManagedServerDnsAlias Acquire(this IManagedServerDnsAliasesOperations operations, string resourceGroupName, string managedInstanceName, string dnsAliasName, ManagedServerDnsAliasAcquisition parameters)
        {
                return ((IManagedServerDnsAliasesOperations)operations).AcquireAsync(resourceGroupName, managedInstanceName, dnsAliasName, parameters).GetAwaiter().GetResult();
        }

        /// <summary>
        /// Acquires managed server DNS alias from another managed server.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='resourceGroupName'>
        /// The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.
        /// </param>
        /// <param name='managedInstanceName'>
        /// The name of the managed instance.
        /// </param>
        /// <param name='dnsAliasName'>
        /// 
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        public static async System.Threading.Tasks.Task<ManagedServerDnsAlias> AcquireAsync(this IManagedServerDnsAliasesOperations operations, string resourceGroupName, string managedInstanceName, string dnsAliasName, ManagedServerDnsAliasAcquisition parameters, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            using (var _result = await operations.AcquireWithHttpMessagesAsync(resourceGroupName, managedInstanceName, dnsAliasName, parameters, null, cancellationToken).ConfigureAwait(false))
            {
                return _result.Body;
            }
        }
        /// <summary>
        /// Creates a managed server DNS alias.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='resourceGroupName'>
        /// The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.
        /// </param>
        /// <param name='managedInstanceName'>
        /// The name of the managed instance.
        /// </param>
        /// <param name='dnsAliasName'>
        /// 
        /// </param>
        public static ManagedServerDnsAlias BeginCreateOrUpdate(this IManagedServerDnsAliasesOperations operations, string resourceGroupName, string managedInstanceName, string dnsAliasName, ManagedServerDnsAliasCreation parameters)
        {
                return ((IManagedServerDnsAliasesOperations)operations).BeginCreateOrUpdateAsync(resourceGroupName, managedInstanceName, dnsAliasName, parameters).GetAwaiter().GetResult();
        }

        /// <summary>
        /// Creates a managed server DNS alias.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='resourceGroupName'>
        /// The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.
        /// </param>
        /// <param name='managedInstanceName'>
        /// The name of the managed instance.
        /// </param>
        /// <param name='dnsAliasName'>
        /// 
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        public static async System.Threading.Tasks.Task<ManagedServerDnsAlias> BeginCreateOrUpdateAsync(this IManagedServerDnsAliasesOperations operations, string resourceGroupName, string managedInstanceName, string dnsAliasName, ManagedServerDnsAliasCreation parameters, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            using (var _result = await operations.BeginCreateOrUpdateWithHttpMessagesAsync(resourceGroupName, managedInstanceName, dnsAliasName, parameters, null, cancellationToken).ConfigureAwait(false))
            {
                return _result.Body;
            }
        }
        /// <summary>
        /// Deletes the managed server DNS alias with the given name.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='resourceGroupName'>
        /// The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.
        /// </param>
        /// <param name='managedInstanceName'>
        /// The name of the managed instance.
        /// </param>
        /// <param name='dnsAliasName'>
        /// 
        /// </param>
        public static void BeginDelete(this IManagedServerDnsAliasesOperations operations, string resourceGroupName, string managedInstanceName, string dnsAliasName)
        {
                ((IManagedServerDnsAliasesOperations)operations).BeginDeleteAsync(resourceGroupName, managedInstanceName, dnsAliasName).GetAwaiter().GetResult();
        }

        /// <summary>
        /// Deletes the managed server DNS alias with the given name.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='resourceGroupName'>
        /// The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.
        /// </param>
        /// <param name='managedInstanceName'>
        /// The name of the managed instance.
        /// </param>
        /// <param name='dnsAliasName'>
        /// 
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        public static async System.Threading.Tasks.Task BeginDeleteAsync(this IManagedServerDnsAliasesOperations operations, string resourceGroupName, string managedInstanceName, string dnsAliasName, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            (await operations.BeginDeleteWithHttpMessagesAsync(resourceGroupName, managedInstanceName, dnsAliasName, null, cancellationToken).ConfigureAwait(false)).Dispose();
        }
        /// <summary>
        /// Acquires managed server DNS alias from another managed server.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='resourceGroupName'>
        /// The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.
        /// </param>
        /// <param name='managedInstanceName'>
        /// The name of the managed instance.
        /// </param>
        /// <param name='dnsAliasName'>
        /// 
        /// </param>
        public static ManagedServerDnsAlias BeginAcquire(this IManagedServerDnsAliasesOperations operations, string resourceGroupName, string managedInstanceName, string dnsAliasName, ManagedServerDnsAliasAcquisition parameters)
        {
                return ((IManagedServerDnsAliasesOperations)operations).BeginAcquireAsync(resourceGroupName, managedInstanceName, dnsAliasName, parameters).GetAwaiter().GetResult();
        }

        /// <summary>
        /// Acquires managed server DNS alias from another managed server.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='resourceGroupName'>
        /// The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.
        /// </param>
        /// <param name='managedInstanceName'>
        /// The name of the managed instance.
        /// </param>
        /// <param name='dnsAliasName'>
        /// 
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        public static async System.Threading.Tasks.Task<ManagedServerDnsAlias> BeginAcquireAsync(this IManagedServerDnsAliasesOperations operations, string resourceGroupName, string managedInstanceName, string dnsAliasName, ManagedServerDnsAliasAcquisition parameters, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            using (var _result = await operations.BeginAcquireWithHttpMessagesAsync(resourceGroupName, managedInstanceName, dnsAliasName, parameters, null, cancellationToken).ConfigureAwait(false))
            {
                return _result.Body;
            }
        }
        /// <summary>
        /// Gets a list of managed server DNS aliases for a managed server.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='nextPageLink'>
        /// The NextLink from the previous successful call to List operation.
        /// </param>
        public static Microsoft.Rest.Azure.IPage<ManagedServerDnsAlias> ListByManagedInstanceNext(this IManagedServerDnsAliasesOperations operations, string nextPageLink)
        {
                return ((IManagedServerDnsAliasesOperations)operations).ListByManagedInstanceNextAsync(nextPageLink).GetAwaiter().GetResult();
        }

        /// <summary>
        /// Gets a list of managed server DNS aliases for a managed server.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='nextPageLink'>
        /// The NextLink from the previous successful call to List operation.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        public static async System.Threading.Tasks.Task<Microsoft.Rest.Azure.IPage<ManagedServerDnsAlias>> ListByManagedInstanceNextAsync(this IManagedServerDnsAliasesOperations operations, string nextPageLink, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            using (var _result = await operations.ListByManagedInstanceNextWithHttpMessagesAsync(nextPageLink, null, cancellationToken).ConfigureAwait(false))
            {
                return _result.Body;
            }
        }
    }
}
