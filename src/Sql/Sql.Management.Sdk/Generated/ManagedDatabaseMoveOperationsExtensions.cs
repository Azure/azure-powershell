// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.
namespace Microsoft.Azure.Management.Sql
{
    using Microsoft.Rest.Azure;
    using Models;

    /// <summary>
    /// Extension methods for ManagedDatabaseMoveOperations
    /// </summary>
    public static partial class ManagedDatabaseMoveOperationsExtensions
    {
        /// <summary>
        /// Lists managed database move operations.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='odataQuery'>
        /// 
        /// </param>
        /// <param name='resourceGroupName'>
        /// The name of the resource group that contains the resource. You can obtain
        /// this value from the Azure Resource Manager API or the portal.
        /// </param>
        /// <param name='locationName'>
        /// 
        /// </param>
        /// <param name='onlyLatestPerDatabase'>
        /// Whether or not to only get the latest operation for each database. Has
        /// higher priority than $filter.
        /// </param>
        public static Microsoft.Rest.Azure.IPage<ManagedDatabaseMoveOperationResult> ListByLocation(this IManagedDatabaseMoveOperations operations, string resourceGroupName, string locationName, Microsoft.Rest.Azure.OData.ODataQuery<ManagedDatabaseMoveOperationResult> odataQuery = default(Microsoft.Rest.Azure.OData.ODataQuery<ManagedDatabaseMoveOperationResult>), bool? onlyLatestPerDatabase = default(bool?))
        {
                return ((IManagedDatabaseMoveOperations)operations).ListByLocationAsync(resourceGroupName, locationName, odataQuery, onlyLatestPerDatabase).GetAwaiter().GetResult();
        }

        /// <summary>
        /// Lists managed database move operations.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='odataQuery'>
        /// 
        /// </param>
        /// <param name='resourceGroupName'>
        /// The name of the resource group that contains the resource. You can obtain
        /// this value from the Azure Resource Manager API or the portal.
        /// </param>
        /// <param name='locationName'>
        /// 
        /// </param>
        /// <param name='onlyLatestPerDatabase'>
        /// Whether or not to only get the latest operation for each database. Has
        /// higher priority than $filter.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        public static async System.Threading.Tasks.Task<Microsoft.Rest.Azure.IPage<ManagedDatabaseMoveOperationResult>> ListByLocationAsync(this IManagedDatabaseMoveOperations operations, string resourceGroupName, string locationName, Microsoft.Rest.Azure.OData.ODataQuery<ManagedDatabaseMoveOperationResult> odataQuery = default(Microsoft.Rest.Azure.OData.ODataQuery<ManagedDatabaseMoveOperationResult>), bool? onlyLatestPerDatabase = default(bool?), System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            using (var _result = await operations.ListByLocationWithHttpMessagesAsync(resourceGroupName, locationName, odataQuery, onlyLatestPerDatabase, null, cancellationToken).ConfigureAwait(false))
            {
                return _result.Body;
            }
        }
        /// <summary>
        /// Gets a managed database move operation.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='resourceGroupName'>
        /// The name of the resource group that contains the resource. You can obtain
        /// this value from the Azure Resource Manager API or the portal.
        /// </param>
        /// <param name='locationName'>
        /// 
        /// </param>
        /// <param name='operationId'>
        /// 
        /// </param>
        public static ManagedDatabaseMoveOperationResult Get(this IManagedDatabaseMoveOperations operations, string resourceGroupName, string locationName, System.Guid operationId)
        {
                return ((IManagedDatabaseMoveOperations)operations).GetAsync(resourceGroupName, locationName, operationId).GetAwaiter().GetResult();
        }

        /// <summary>
        /// Gets a managed database move operation.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='resourceGroupName'>
        /// The name of the resource group that contains the resource. You can obtain
        /// this value from the Azure Resource Manager API or the portal.
        /// </param>
        /// <param name='locationName'>
        /// 
        /// </param>
        /// <param name='operationId'>
        /// 
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        public static async System.Threading.Tasks.Task<ManagedDatabaseMoveOperationResult> GetAsync(this IManagedDatabaseMoveOperations operations, string resourceGroupName, string locationName, System.Guid operationId, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            using (var _result = await operations.GetWithHttpMessagesAsync(resourceGroupName, locationName, operationId, null, cancellationToken).ConfigureAwait(false))
            {
                return _result.Body;
            }
        }
        /// <summary>
        /// Lists managed database move operations.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='nextPageLink'>
        /// The NextLink from the previous successful call to List operation.
        /// </param>
        public static Microsoft.Rest.Azure.IPage<ManagedDatabaseMoveOperationResult> ListByLocationNext(this IManagedDatabaseMoveOperations operations, string nextPageLink)
        {
                return ((IManagedDatabaseMoveOperations)operations).ListByLocationNextAsync(nextPageLink).GetAwaiter().GetResult();
        }

        /// <summary>
        /// Lists managed database move operations.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='nextPageLink'>
        /// The NextLink from the previous successful call to List operation.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        public static async System.Threading.Tasks.Task<Microsoft.Rest.Azure.IPage<ManagedDatabaseMoveOperationResult>> ListByLocationNextAsync(this IManagedDatabaseMoveOperations operations, string nextPageLink, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            using (var _result = await operations.ListByLocationNextWithHttpMessagesAsync(nextPageLink, null, cancellationToken).ConfigureAwait(false))
            {
                return _result.Body;
            }
        }
    }
}
