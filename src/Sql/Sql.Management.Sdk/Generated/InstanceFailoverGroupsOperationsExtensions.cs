// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.
namespace Microsoft.Azure.Management.Sql
{
    using Microsoft.Rest.Azure;
    using Models;

    /// <summary>
    /// Extension methods for InstanceFailoverGroupsOperations
    /// </summary>
    public static partial class InstanceFailoverGroupsOperationsExtensions
    {
        /// <summary>
        /// Lists the failover groups in a location.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='resourceGroupName'>
        /// The name of the resource group that contains the resource. You can obtain
        /// this value from the Azure Resource Manager API or the portal.
        /// </param>
        /// <param name='locationName'>
        /// The name of the region where the resource is located.
        /// </param>
        public static Microsoft.Rest.Azure.IPage<InstanceFailoverGroup> ListByLocation(this IInstanceFailoverGroupsOperations operations, string resourceGroupName, string locationName)
        {
                return ((IInstanceFailoverGroupsOperations)operations).ListByLocationAsync(resourceGroupName, locationName).GetAwaiter().GetResult();
        }

        /// <summary>
        /// Lists the failover groups in a location.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='resourceGroupName'>
        /// The name of the resource group that contains the resource. You can obtain
        /// this value from the Azure Resource Manager API or the portal.
        /// </param>
        /// <param name='locationName'>
        /// The name of the region where the resource is located.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        public static async System.Threading.Tasks.Task<Microsoft.Rest.Azure.IPage<InstanceFailoverGroup>> ListByLocationAsync(this IInstanceFailoverGroupsOperations operations, string resourceGroupName, string locationName, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            using (var _result = await operations.ListByLocationWithHttpMessagesAsync(resourceGroupName, locationName, null, cancellationToken).ConfigureAwait(false))
            {
                return _result.Body;
            }
        }
        /// <summary>
        /// Gets a failover group.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='resourceGroupName'>
        /// The name of the resource group that contains the resource. You can obtain
        /// this value from the Azure Resource Manager API or the portal.
        /// </param>
        /// <param name='locationName'>
        /// The name of the region where the resource is located.
        /// </param>
        /// <param name='failoverGroupName'>
        /// The name of the failover group.
        /// </param>
        public static InstanceFailoverGroup Get(this IInstanceFailoverGroupsOperations operations, string resourceGroupName, string locationName, string failoverGroupName)
        {
                return ((IInstanceFailoverGroupsOperations)operations).GetAsync(resourceGroupName, locationName, failoverGroupName).GetAwaiter().GetResult();
        }

        /// <summary>
        /// Gets a failover group.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='resourceGroupName'>
        /// The name of the resource group that contains the resource. You can obtain
        /// this value from the Azure Resource Manager API or the portal.
        /// </param>
        /// <param name='locationName'>
        /// The name of the region where the resource is located.
        /// </param>
        /// <param name='failoverGroupName'>
        /// The name of the failover group.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        public static async System.Threading.Tasks.Task<InstanceFailoverGroup> GetAsync(this IInstanceFailoverGroupsOperations operations, string resourceGroupName, string locationName, string failoverGroupName, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            using (var _result = await operations.GetWithHttpMessagesAsync(resourceGroupName, locationName, failoverGroupName, null, cancellationToken).ConfigureAwait(false))
            {
                return _result.Body;
            }
        }
        /// <summary>
        /// Creates or updates a failover group.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='resourceGroupName'>
        /// The name of the resource group that contains the resource. You can obtain
        /// this value from the Azure Resource Manager API or the portal.
        /// </param>
        /// <param name='locationName'>
        /// The name of the region where the resource is located.
        /// </param>
        /// <param name='failoverGroupName'>
        /// The name of the failover group.
        /// </param>
        public static InstanceFailoverGroup CreateOrUpdate(this IInstanceFailoverGroupsOperations operations, string resourceGroupName, string locationName, string failoverGroupName, InstanceFailoverGroup parameters)
        {
                return ((IInstanceFailoverGroupsOperations)operations).CreateOrUpdateAsync(resourceGroupName, locationName, failoverGroupName, parameters).GetAwaiter().GetResult();
        }

        /// <summary>
        /// Creates or updates a failover group.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='resourceGroupName'>
        /// The name of the resource group that contains the resource. You can obtain
        /// this value from the Azure Resource Manager API or the portal.
        /// </param>
        /// <param name='locationName'>
        /// The name of the region where the resource is located.
        /// </param>
        /// <param name='failoverGroupName'>
        /// The name of the failover group.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        public static async System.Threading.Tasks.Task<InstanceFailoverGroup> CreateOrUpdateAsync(this IInstanceFailoverGroupsOperations operations, string resourceGroupName, string locationName, string failoverGroupName, InstanceFailoverGroup parameters, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            using (var _result = await operations.CreateOrUpdateWithHttpMessagesAsync(resourceGroupName, locationName, failoverGroupName, parameters, null, cancellationToken).ConfigureAwait(false))
            {
                return _result.Body;
            }
        }
        /// <summary>
        /// Deletes a failover group.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='resourceGroupName'>
        /// The name of the resource group that contains the resource. You can obtain
        /// this value from the Azure Resource Manager API or the portal.
        /// </param>
        /// <param name='locationName'>
        /// The name of the region where the resource is located.
        /// </param>
        /// <param name='failoverGroupName'>
        /// The name of the failover group.
        /// </param>
        public static void Delete(this IInstanceFailoverGroupsOperations operations, string resourceGroupName, string locationName, string failoverGroupName)
        {
                ((IInstanceFailoverGroupsOperations)operations).DeleteAsync(resourceGroupName, locationName, failoverGroupName).GetAwaiter().GetResult();
        }

        /// <summary>
        /// Deletes a failover group.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='resourceGroupName'>
        /// The name of the resource group that contains the resource. You can obtain
        /// this value from the Azure Resource Manager API or the portal.
        /// </param>
        /// <param name='locationName'>
        /// The name of the region where the resource is located.
        /// </param>
        /// <param name='failoverGroupName'>
        /// The name of the failover group.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        public static async System.Threading.Tasks.Task DeleteAsync(this IInstanceFailoverGroupsOperations operations, string resourceGroupName, string locationName, string failoverGroupName, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            (await operations.DeleteWithHttpMessagesAsync(resourceGroupName, locationName, failoverGroupName, null, cancellationToken).ConfigureAwait(false)).Dispose();
        }
        /// <summary>
        /// Fails over from the current primary managed instance to this managed
        /// instance.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='resourceGroupName'>
        /// The name of the resource group that contains the resource. You can obtain
        /// this value from the Azure Resource Manager API or the portal.
        /// </param>
        /// <param name='locationName'>
        /// The name of the region where the resource is located.
        /// </param>
        /// <param name='failoverGroupName'>
        /// The name of the failover group.
        /// </param>
        public static InstanceFailoverGroup Failover(this IInstanceFailoverGroupsOperations operations, string resourceGroupName, string locationName, string failoverGroupName)
        {
                return ((IInstanceFailoverGroupsOperations)operations).FailoverAsync(resourceGroupName, locationName, failoverGroupName).GetAwaiter().GetResult();
        }

        /// <summary>
        /// Fails over from the current primary managed instance to this managed
        /// instance.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='resourceGroupName'>
        /// The name of the resource group that contains the resource. You can obtain
        /// this value from the Azure Resource Manager API or the portal.
        /// </param>
        /// <param name='locationName'>
        /// The name of the region where the resource is located.
        /// </param>
        /// <param name='failoverGroupName'>
        /// The name of the failover group.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        public static async System.Threading.Tasks.Task<InstanceFailoverGroup> FailoverAsync(this IInstanceFailoverGroupsOperations operations, string resourceGroupName, string locationName, string failoverGroupName, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            using (var _result = await operations.FailoverWithHttpMessagesAsync(resourceGroupName, locationName, failoverGroupName, null, cancellationToken).ConfigureAwait(false))
            {
                return _result.Body;
            }
        }
        /// <summary>
        /// Fails over from the current primary managed instance to this managed
        /// instance. This operation might result in data loss.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='resourceGroupName'>
        /// The name of the resource group that contains the resource. You can obtain
        /// this value from the Azure Resource Manager API or the portal.
        /// </param>
        /// <param name='locationName'>
        /// The name of the region where the resource is located.
        /// </param>
        /// <param name='failoverGroupName'>
        /// The name of the failover group.
        /// </param>
        public static InstanceFailoverGroup ForceFailoverAllowDataLoss(this IInstanceFailoverGroupsOperations operations, string resourceGroupName, string locationName, string failoverGroupName)
        {
                return ((IInstanceFailoverGroupsOperations)operations).ForceFailoverAllowDataLossAsync(resourceGroupName, locationName, failoverGroupName).GetAwaiter().GetResult();
        }

        /// <summary>
        /// Fails over from the current primary managed instance to this managed
        /// instance. This operation might result in data loss.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='resourceGroupName'>
        /// The name of the resource group that contains the resource. You can obtain
        /// this value from the Azure Resource Manager API or the portal.
        /// </param>
        /// <param name='locationName'>
        /// The name of the region where the resource is located.
        /// </param>
        /// <param name='failoverGroupName'>
        /// The name of the failover group.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        public static async System.Threading.Tasks.Task<InstanceFailoverGroup> ForceFailoverAllowDataLossAsync(this IInstanceFailoverGroupsOperations operations, string resourceGroupName, string locationName, string failoverGroupName, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            using (var _result = await operations.ForceFailoverAllowDataLossWithHttpMessagesAsync(resourceGroupName, locationName, failoverGroupName, null, cancellationToken).ConfigureAwait(false))
            {
                return _result.Body;
            }
        }
        /// <summary>
        /// Creates or updates a failover group.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='resourceGroupName'>
        /// The name of the resource group that contains the resource. You can obtain
        /// this value from the Azure Resource Manager API or the portal.
        /// </param>
        /// <param name='locationName'>
        /// The name of the region where the resource is located.
        /// </param>
        /// <param name='failoverGroupName'>
        /// The name of the failover group.
        /// </param>
        public static InstanceFailoverGroup BeginCreateOrUpdate(this IInstanceFailoverGroupsOperations operations, string resourceGroupName, string locationName, string failoverGroupName, InstanceFailoverGroup parameters)
        {
                return ((IInstanceFailoverGroupsOperations)operations).BeginCreateOrUpdateAsync(resourceGroupName, locationName, failoverGroupName, parameters).GetAwaiter().GetResult();
        }

        /// <summary>
        /// Creates or updates a failover group.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='resourceGroupName'>
        /// The name of the resource group that contains the resource. You can obtain
        /// this value from the Azure Resource Manager API or the portal.
        /// </param>
        /// <param name='locationName'>
        /// The name of the region where the resource is located.
        /// </param>
        /// <param name='failoverGroupName'>
        /// The name of the failover group.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        public static async System.Threading.Tasks.Task<InstanceFailoverGroup> BeginCreateOrUpdateAsync(this IInstanceFailoverGroupsOperations operations, string resourceGroupName, string locationName, string failoverGroupName, InstanceFailoverGroup parameters, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            using (var _result = await operations.BeginCreateOrUpdateWithHttpMessagesAsync(resourceGroupName, locationName, failoverGroupName, parameters, null, cancellationToken).ConfigureAwait(false))
            {
                return _result.Body;
            }
        }
        /// <summary>
        /// Deletes a failover group.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='resourceGroupName'>
        /// The name of the resource group that contains the resource. You can obtain
        /// this value from the Azure Resource Manager API or the portal.
        /// </param>
        /// <param name='locationName'>
        /// The name of the region where the resource is located.
        /// </param>
        /// <param name='failoverGroupName'>
        /// The name of the failover group.
        /// </param>
        public static void BeginDelete(this IInstanceFailoverGroupsOperations operations, string resourceGroupName, string locationName, string failoverGroupName)
        {
                ((IInstanceFailoverGroupsOperations)operations).BeginDeleteAsync(resourceGroupName, locationName, failoverGroupName).GetAwaiter().GetResult();
        }

        /// <summary>
        /// Deletes a failover group.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='resourceGroupName'>
        /// The name of the resource group that contains the resource. You can obtain
        /// this value from the Azure Resource Manager API or the portal.
        /// </param>
        /// <param name='locationName'>
        /// The name of the region where the resource is located.
        /// </param>
        /// <param name='failoverGroupName'>
        /// The name of the failover group.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        public static async System.Threading.Tasks.Task BeginDeleteAsync(this IInstanceFailoverGroupsOperations operations, string resourceGroupName, string locationName, string failoverGroupName, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            (await operations.BeginDeleteWithHttpMessagesAsync(resourceGroupName, locationName, failoverGroupName, null, cancellationToken).ConfigureAwait(false)).Dispose();
        }
        /// <summary>
        /// Fails over from the current primary managed instance to this managed
        /// instance.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='resourceGroupName'>
        /// The name of the resource group that contains the resource. You can obtain
        /// this value from the Azure Resource Manager API or the portal.
        /// </param>
        /// <param name='locationName'>
        /// The name of the region where the resource is located.
        /// </param>
        /// <param name='failoverGroupName'>
        /// The name of the failover group.
        /// </param>
        public static InstanceFailoverGroup BeginFailover(this IInstanceFailoverGroupsOperations operations, string resourceGroupName, string locationName, string failoverGroupName)
        {
                return ((IInstanceFailoverGroupsOperations)operations).BeginFailoverAsync(resourceGroupName, locationName, failoverGroupName).GetAwaiter().GetResult();
        }

        /// <summary>
        /// Fails over from the current primary managed instance to this managed
        /// instance.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='resourceGroupName'>
        /// The name of the resource group that contains the resource. You can obtain
        /// this value from the Azure Resource Manager API or the portal.
        /// </param>
        /// <param name='locationName'>
        /// The name of the region where the resource is located.
        /// </param>
        /// <param name='failoverGroupName'>
        /// The name of the failover group.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        public static async System.Threading.Tasks.Task<InstanceFailoverGroup> BeginFailoverAsync(this IInstanceFailoverGroupsOperations operations, string resourceGroupName, string locationName, string failoverGroupName, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            using (var _result = await operations.BeginFailoverWithHttpMessagesAsync(resourceGroupName, locationName, failoverGroupName, null, cancellationToken).ConfigureAwait(false))
            {
                return _result.Body;
            }
        }
        /// <summary>
        /// Fails over from the current primary managed instance to this managed
        /// instance. This operation might result in data loss.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='resourceGroupName'>
        /// The name of the resource group that contains the resource. You can obtain
        /// this value from the Azure Resource Manager API or the portal.
        /// </param>
        /// <param name='locationName'>
        /// The name of the region where the resource is located.
        /// </param>
        /// <param name='failoverGroupName'>
        /// The name of the failover group.
        /// </param>
        public static InstanceFailoverGroup BeginForceFailoverAllowDataLoss(this IInstanceFailoverGroupsOperations operations, string resourceGroupName, string locationName, string failoverGroupName)
        {
                return ((IInstanceFailoverGroupsOperations)operations).BeginForceFailoverAllowDataLossAsync(resourceGroupName, locationName, failoverGroupName).GetAwaiter().GetResult();
        }

        /// <summary>
        /// Fails over from the current primary managed instance to this managed
        /// instance. This operation might result in data loss.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='resourceGroupName'>
        /// The name of the resource group that contains the resource. You can obtain
        /// this value from the Azure Resource Manager API or the portal.
        /// </param>
        /// <param name='locationName'>
        /// The name of the region where the resource is located.
        /// </param>
        /// <param name='failoverGroupName'>
        /// The name of the failover group.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        public static async System.Threading.Tasks.Task<InstanceFailoverGroup> BeginForceFailoverAllowDataLossAsync(this IInstanceFailoverGroupsOperations operations, string resourceGroupName, string locationName, string failoverGroupName, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            using (var _result = await operations.BeginForceFailoverAllowDataLossWithHttpMessagesAsync(resourceGroupName, locationName, failoverGroupName, null, cancellationToken).ConfigureAwait(false))
            {
                return _result.Body;
            }
        }
        /// <summary>
        /// Lists the failover groups in a location.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='nextPageLink'>
        /// The NextLink from the previous successful call to List operation.
        /// </param>
        public static Microsoft.Rest.Azure.IPage<InstanceFailoverGroup> ListByLocationNext(this IInstanceFailoverGroupsOperations operations, string nextPageLink)
        {
                return ((IInstanceFailoverGroupsOperations)operations).ListByLocationNextAsync(nextPageLink).GetAwaiter().GetResult();
        }

        /// <summary>
        /// Lists the failover groups in a location.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='nextPageLink'>
        /// The NextLink from the previous successful call to List operation.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        public static async System.Threading.Tasks.Task<Microsoft.Rest.Azure.IPage<InstanceFailoverGroup>> ListByLocationNextAsync(this IInstanceFailoverGroupsOperations operations, string nextPageLink, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            using (var _result = await operations.ListByLocationNextWithHttpMessagesAsync(nextPageLink, null, cancellationToken).ConfigureAwait(false))
            {
                return _result.Body;
            }
        }
    }
}
