// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.Sql.Models
{
    using System.Linq;

    /// <summary>
    /// Properties of a vulnerability assessment scan record.
    /// </summary>
    public partial class VulnerabilityAssessmentScanRecordProperties
    {
        /// <summary>
        /// Initializes a new instance of the VulnerabilityAssessmentScanRecordProperties class.
        /// </summary>
        public VulnerabilityAssessmentScanRecordProperties()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the VulnerabilityAssessmentScanRecordProperties class.
        /// </summary>

        /// <param name="scanId">The scan ID.
        /// </param>

        /// <param name="triggerType">The scan trigger type.
        /// Possible values include: &#39;OnDemand&#39;, &#39;Recurring&#39;</param>

        /// <param name="state">The scan status.
        /// Possible values include: &#39;Passed&#39;, &#39;Failed&#39;, &#39;FailedToRun&#39;, &#39;InProgress&#39;</param>

        /// <param name="startTime">The scan start time (UTC).
        /// </param>

        /// <param name="endTime">The scan end time (UTC).
        /// </param>

        /// <param name="errors">The scan errors.
        /// </param>

        /// <param name="storageContainerPath">The scan results storage container path.
        /// </param>

        /// <param name="numberOfFailedSecurityChecks">The number of failed security checks.
        /// </param>
        public VulnerabilityAssessmentScanRecordProperties(string scanId = default(string), string triggerType = default(string), string state = default(string), System.DateTime? startTime = default(System.DateTime?), System.DateTime? endTime = default(System.DateTime?), System.Collections.Generic.IList<VulnerabilityAssessmentScanError> errors = default(System.Collections.Generic.IList<VulnerabilityAssessmentScanError>), string storageContainerPath = default(string), int? numberOfFailedSecurityChecks = default(int?))

        {
            this.ScanId = scanId;
            this.TriggerType = triggerType;
            this.State = state;
            this.StartTime = startTime;
            this.EndTime = endTime;
            this.Errors = errors;
            this.StorageContainerPath = storageContainerPath;
            this.NumberOfFailedSecurityChecks = numberOfFailedSecurityChecks;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets the scan ID.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "scanId")]
        public string ScanId {get; private set; }

        /// <summary>
        /// Gets the scan trigger type. Possible values include: &#39;OnDemand&#39;, &#39;Recurring&#39;
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "triggerType")]
        public string TriggerType {get; private set; }

        /// <summary>
        /// Gets the scan status. Possible values include: &#39;Passed&#39;, &#39;Failed&#39;, &#39;FailedToRun&#39;, &#39;InProgress&#39;
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "state")]
        public string State {get; private set; }

        /// <summary>
        /// Gets the scan start time (UTC).
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "startTime")]
        public System.DateTime? StartTime {get; private set; }

        /// <summary>
        /// Gets the scan end time (UTC).
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "endTime")]
        public System.DateTime? EndTime {get; private set; }

        /// <summary>
        /// Gets the scan errors.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "errors")]
        public System.Collections.Generic.IList<VulnerabilityAssessmentScanError> Errors {get; private set; }

        /// <summary>
        /// Gets the scan results storage container path.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "storageContainerPath")]
        public string StorageContainerPath {get; private set; }

        /// <summary>
        /// Gets the number of failed security checks.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "numberOfFailedSecurityChecks")]
        public int? NumberOfFailedSecurityChecks {get; private set; }
    }
}