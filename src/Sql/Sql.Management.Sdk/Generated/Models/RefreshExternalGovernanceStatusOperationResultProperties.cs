// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.Sql.Models
{
    using System.Linq;

    /// <summary>
    /// Contains the operation result properties for refresh external governance
    /// status operation.
    /// </summary>
    public partial class RefreshExternalGovernanceStatusOperationResultProperties
    {
        /// <summary>
        /// Initializes a new instance of the RefreshExternalGovernanceStatusOperationResultProperties class.
        /// </summary>
        public RefreshExternalGovernanceStatusOperationResultProperties()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the RefreshExternalGovernanceStatusOperationResultProperties class.
        /// </summary>

        /// <param name="requestId">Request Id.
        /// </param>

        /// <param name="requestType">Request type.
        /// </param>

        /// <param name="queuedTime">Queued time.
        /// </param>

        /// <param name="serverName">Server name.
        /// </param>

        /// <param name="status">Operation status.
        /// </param>

        /// <param name="errorMessage">Error message.
        /// </param>
        public RefreshExternalGovernanceStatusOperationResultProperties(System.Guid? requestId = default(System.Guid?), string requestType = default(string), string queuedTime = default(string), string serverName = default(string), string status = default(string), string errorMessage = default(string))

        {
            this.RequestId = requestId;
            this.RequestType = requestType;
            this.QueuedTime = queuedTime;
            this.ServerName = serverName;
            this.Status = status;
            this.ErrorMessage = errorMessage;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets request Id.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "requestId")]
        public System.Guid? RequestId {get; private set; }

        /// <summary>
        /// Gets request type.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "requestType")]
        public string RequestType {get; private set; }

        /// <summary>
        /// Gets queued time.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "queuedTime")]
        public string QueuedTime {get; private set; }

        /// <summary>
        /// Gets server name.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "serverName")]
        public string ServerName {get; private set; }

        /// <summary>
        /// Gets operation status.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "status")]
        public string Status {get; private set; }

        /// <summary>
        /// Gets error message.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "errorMessage")]
        public string ErrorMessage {get; private set; }
    }
}