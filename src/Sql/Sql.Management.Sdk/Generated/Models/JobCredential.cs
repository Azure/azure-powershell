// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.Sql.Models
{
    using System.Linq;

    /// <summary>
    /// A stored credential that can be used by a job to connect to target
    /// databases.
    /// </summary>
    [Microsoft.Rest.Serialization.JsonTransformation]
    public partial class JobCredential : ProxyResource
    {
        /// <summary>
        /// Initializes a new instance of the JobCredential class.
        /// </summary>
        public JobCredential()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the JobCredential class.
        /// </summary>

        /// <param name="id">Resource ID.
        /// </param>

        /// <param name="name">Resource name.
        /// </param>

        /// <param name="type">Resource type.
        /// </param>

        /// <param name="username">The credential user name.
        /// </param>

        /// <param name="password">The credential password.
        /// </param>
        public JobCredential(string id = default(string), string name = default(string), string type = default(string), string username = default(string), string password = default(string))

        : base(id, name, type)
        {
            this.Username = username;
            this.Password = password;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets or sets the credential user name.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.username")]
        public string Username {get; set; }

        /// <summary>
        /// Gets or sets the credential password.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.password")]
        public string Password {get; set; }
    }
}