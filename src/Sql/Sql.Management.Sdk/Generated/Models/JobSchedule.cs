// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.Sql.Models
{
    using System.Linq;

    /// <summary>
    /// Scheduling properties of a job.
    /// </summary>
    public partial class JobSchedule
    {
        /// <summary>
        /// Initializes a new instance of the JobSchedule class.
        /// </summary>
        public JobSchedule()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the JobSchedule class.
        /// </summary>

        /// <param name="startTime">Schedule start time.
        /// </param>

        /// <param name="endTime">Schedule end time.
        /// </param>

        /// <param name="type">Schedule interval type
        /// Possible values include: 'Once', 'Recurring'</param>

        /// <param name="enabled">Whether or not the schedule is enabled.
        /// </param>

        /// <param name="interval">Value of the schedule&#39;s recurring interval, if the ScheduleType is
        /// recurring. ISO8601 duration format.
        /// </param>
        public JobSchedule(System.DateTime? startTime = default(System.DateTime?), System.DateTime? endTime = default(System.DateTime?), JobScheduleType? type = default(JobScheduleType?), bool? enabled = default(bool?), string interval = default(string))

        {
            this.StartTime = startTime;
            this.EndTime = endTime;
            this.Type = type;
            this.Enabled = enabled;
            this.Interval = interval;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets or sets schedule start time.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "startTime")]
        public System.DateTime? StartTime {get; set; }

        /// <summary>
        /// Gets or sets schedule end time.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "endTime")]
        public System.DateTime? EndTime {get; set; }

        /// <summary>
        /// Gets or sets schedule interval type Possible values include: &#39;Once&#39;, &#39;Recurring&#39;
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "type")]
        public JobScheduleType? Type {get; set; }

        /// <summary>
        /// Gets or sets whether or not the schedule is enabled.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "enabled")]
        public bool? Enabled {get; set; }

        /// <summary>
        /// Gets or sets value of the schedule&#39;s recurring interval, if the
        /// ScheduleType is recurring. ISO8601 duration format.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "interval")]
        public string Interval {get; set; }
    }
}