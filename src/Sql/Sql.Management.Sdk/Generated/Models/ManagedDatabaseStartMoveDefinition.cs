// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.Sql.Models
{
    using System.Linq;

    /// <summary>
    /// Contains the information necessary to start a managed database move.
    /// </summary>
    public partial class ManagedDatabaseStartMoveDefinition
    {
        /// <summary>
        /// Initializes a new instance of the ManagedDatabaseStartMoveDefinition class.
        /// </summary>
        public ManagedDatabaseStartMoveDefinition()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the ManagedDatabaseStartMoveDefinition class.
        /// </summary>

        /// <param name="destinationManagedDatabaseId">The destination managed database ID
        /// </param>

        /// <param name="operationMode">The move operation mode.
        /// Possible values include: 'Move', 'Copy'</param>
        public ManagedDatabaseStartMoveDefinition(string destinationManagedDatabaseId, string operationMode = default(string))

        {
            this.DestinationManagedDatabaseId = destinationManagedDatabaseId;
            this.OperationMode = operationMode;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets or sets the destination managed database ID
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "destinationManagedDatabaseId")]
        public string DestinationManagedDatabaseId {get; set; }

        /// <summary>
        /// Gets or sets the move operation mode. Possible values include: &#39;Move&#39;, &#39;Copy&#39;
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "operationMode")]
        public string OperationMode {get; set; }
        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (this.DestinationManagedDatabaseId == null)
            {
                throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.CannotBeNull, "DestinationManagedDatabaseId");
            }


        }
    }
}