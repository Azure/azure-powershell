// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.Sql.Models
{
    using System.Linq;

    /// <summary>
    /// The properties of a managed instance operation.
    /// </summary>
    public partial class ManagedInstanceOperationProperties
    {
        /// <summary>
        /// Initializes a new instance of the ManagedInstanceOperationProperties class.
        /// </summary>
        public ManagedInstanceOperationProperties()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the ManagedInstanceOperationProperties class.
        /// </summary>

        /// <param name="managedInstanceName">The name of the managed instance the operation is being performed on.
        /// </param>

        /// <param name="operation">The name of operation.
        /// </param>

        /// <param name="operationFriendlyName">The friendly name of operation.
        /// </param>

        /// <param name="percentComplete">The percentage of the operation completed.
        /// </param>

        /// <param name="startTime">The operation start time.
        /// </param>

        /// <param name="state">The operation state.
        /// Possible values include: 'Pending', 'InProgress', 'Succeeded', 'Failed',
        /// 'CancelInProgress', 'Cancelled'</param>

        /// <param name="errorCode">The operation error code.
        /// </param>

        /// <param name="errorDescription">The operation error description.
        /// </param>

        /// <param name="errorSeverity">The operation error severity.
        /// </param>

        /// <param name="isUserError">Whether or not the error is a user error.
        /// </param>

        /// <param name="estimatedCompletionTime">The estimated completion time of the operation.
        /// </param>

        /// <param name="description">The operation description.
        /// </param>

        /// <param name="isCancellable">Whether the operation can be cancelled.
        /// </param>

        /// <param name="operationParameters">The operation parameters.
        /// </param>

        /// <param name="operationSteps">The operation steps.
        /// </param>
        public ManagedInstanceOperationProperties(string managedInstanceName = default(string), string operation = default(string), string operationFriendlyName = default(string), int? percentComplete = default(int?), System.DateTime? startTime = default(System.DateTime?), string state = default(string), int? errorCode = default(int?), string errorDescription = default(string), int? errorSeverity = default(int?), bool? isUserError = default(bool?), System.DateTime? estimatedCompletionTime = default(System.DateTime?), string description = default(string), bool? isCancellable = default(bool?), ManagedInstanceOperationParametersPair operationParameters = default(ManagedInstanceOperationParametersPair), ManagedInstanceOperationSteps operationSteps = default(ManagedInstanceOperationSteps))

        {
            this.ManagedInstanceName = managedInstanceName;
            this.Operation = operation;
            this.OperationFriendlyName = operationFriendlyName;
            this.PercentComplete = percentComplete;
            this.StartTime = startTime;
            this.State = state;
            this.ErrorCode = errorCode;
            this.ErrorDescription = errorDescription;
            this.ErrorSeverity = errorSeverity;
            this.IsUserError = isUserError;
            this.EstimatedCompletionTime = estimatedCompletionTime;
            this.Description = description;
            this.IsCancellable = isCancellable;
            this.OperationParameters = operationParameters;
            this.OperationSteps = operationSteps;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets the name of the managed instance the operation is being performed on.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "managedInstanceName")]
        public string ManagedInstanceName {get; private set; }

        /// <summary>
        /// Gets the name of operation.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "operation")]
        public string Operation {get; private set; }

        /// <summary>
        /// Gets the friendly name of operation.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "operationFriendlyName")]
        public string OperationFriendlyName {get; private set; }

        /// <summary>
        /// Gets the percentage of the operation completed.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "percentComplete")]
        public int? PercentComplete {get; private set; }

        /// <summary>
        /// Gets the operation start time.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "startTime")]
        public System.DateTime? StartTime {get; private set; }

        /// <summary>
        /// Gets the operation state. Possible values include: &#39;Pending&#39;, &#39;InProgress&#39;, &#39;Succeeded&#39;, &#39;Failed&#39;, &#39;CancelInProgress&#39;, &#39;Cancelled&#39;
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "state")]
        public string State {get; private set; }

        /// <summary>
        /// Gets the operation error code.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "errorCode")]
        public int? ErrorCode {get; private set; }

        /// <summary>
        /// Gets the operation error description.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "errorDescription")]
        public string ErrorDescription {get; private set; }

        /// <summary>
        /// Gets the operation error severity.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "errorSeverity")]
        public int? ErrorSeverity {get; private set; }

        /// <summary>
        /// Gets whether or not the error is a user error.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "isUserError")]
        public bool? IsUserError {get; private set; }

        /// <summary>
        /// Gets the estimated completion time of the operation.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "estimatedCompletionTime")]
        public System.DateTime? EstimatedCompletionTime {get; private set; }

        /// <summary>
        /// Gets the operation description.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "description")]
        public string Description {get; private set; }

        /// <summary>
        /// Gets whether the operation can be cancelled.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "isCancellable")]
        public bool? IsCancellable {get; private set; }

        /// <summary>
        /// Gets the operation parameters.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "operationParameters")]
        public ManagedInstanceOperationParametersPair OperationParameters {get; private set; }

        /// <summary>
        /// Gets the operation steps.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "operationSteps")]
        public ManagedInstanceOperationSteps OperationSteps {get; private set; }
    }
}