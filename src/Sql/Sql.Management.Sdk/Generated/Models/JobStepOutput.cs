// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.Sql.Models
{
    using System.Linq;

    /// <summary>
    /// The output configuration of a job step.
    /// </summary>
    public partial class JobStepOutput
    {
        /// <summary>
        /// Initializes a new instance of the JobStepOutput class.
        /// </summary>
        public JobStepOutput()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the JobStepOutput class.
        /// </summary>

        /// <param name="type">The output destination type.
        /// Possible values include: 'SqlDatabase'</param>

        /// <param name="subscriptionId">The output destination subscription id.
        /// </param>

        /// <param name="resourceGroupName">The output destination resource group.
        /// </param>

        /// <param name="serverName">The output destination server name.
        /// </param>

        /// <param name="databaseName">The output destination database.
        /// </param>

        /// <param name="schemaName">The output destination schema.
        /// </param>

        /// <param name="tableName">The output destination table.
        /// </param>

        /// <param name="credential">The resource ID of the credential to use to connect to the output
        /// destination.
        /// </param>
        public JobStepOutput(string serverName, string databaseName, string tableName, string type = default(string), System.Guid? subscriptionId = default(System.Guid?), string resourceGroupName = default(string), string schemaName = default(string), string credential = default(string))

        {
            this.Type = type;
            this.SubscriptionId = subscriptionId;
            this.ResourceGroupName = resourceGroupName;
            this.ServerName = serverName;
            this.DatabaseName = databaseName;
            this.SchemaName = schemaName;
            this.TableName = tableName;
            this.Credential = credential;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets or sets the output destination type. Possible values include: &#39;SqlDatabase&#39;
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "type")]
        public string Type {get; set; }

        /// <summary>
        /// Gets or sets the output destination subscription id.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "subscriptionId")]
        public System.Guid? SubscriptionId {get; set; }

        /// <summary>
        /// Gets or sets the output destination resource group.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "resourceGroupName")]
        public string ResourceGroupName {get; set; }

        /// <summary>
        /// Gets or sets the output destination server name.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "serverName")]
        public string ServerName {get; set; }

        /// <summary>
        /// Gets or sets the output destination database.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "databaseName")]
        public string DatabaseName {get; set; }

        /// <summary>
        /// Gets or sets the output destination schema.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "schemaName")]
        public string SchemaName {get; set; }

        /// <summary>
        /// Gets or sets the output destination table.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "tableName")]
        public string TableName {get; set; }

        /// <summary>
        /// Gets or sets the resource ID of the credential to use to connect to the
        /// output destination.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "credential")]
        public string Credential {get; set; }
        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (this.ServerName == null)
            {
                throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.CannotBeNull, "ServerName");
            }
            if (this.DatabaseName == null)
            {
                throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.CannotBeNull, "DatabaseName");
            }
            if (this.TableName == null)
            {
                throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.CannotBeNull, "TableName");
            }







        }
    }
}