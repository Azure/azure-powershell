// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.Sql.Models
{
    using System.Linq;

    /// <summary>
    /// Represents the properties of an elastic pool.
    /// </summary>
    public partial class ElasticPoolActivityProperties
    {
        /// <summary>
        /// Initializes a new instance of the ElasticPoolActivityProperties class.
        /// </summary>
        public ElasticPoolActivityProperties()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the ElasticPoolActivityProperties class.
        /// </summary>

        /// <param name="endTime">The time the operation finished (ISO8601 format).
        /// </param>

        /// <param name="errorCode">The error code if available.
        /// </param>

        /// <param name="errorMessage">The error message if available.
        /// </param>

        /// <param name="errorSeverity">The error severity if available.
        /// </param>

        /// <param name="operation">The operation name.
        /// </param>

        /// <param name="operationId">The unique operation ID.
        /// </param>

        /// <param name="percentComplete">The percentage complete if available.
        /// </param>

        /// <param name="requestedDatabaseDtuMax">The requested max DTU per database if available.
        /// </param>

        /// <param name="requestedDatabaseDtuMin">The requested min DTU per database if available.
        /// </param>

        /// <param name="requestedDtu">The requested DTU for the pool if available.
        /// </param>

        /// <param name="requestedElasticPoolName">The requested name for the elastic pool if available.
        /// </param>

        /// <param name="requestedStorageLimitInGb">The requested storage limit for the pool in GB if available.
        /// </param>

        /// <param name="elasticPoolName">The name of the elastic pool.
        /// </param>

        /// <param name="serverName">The name of the server the elastic pool is in.
        /// </param>

        /// <param name="startTime">The time the operation started (ISO8601 format).
        /// </param>

        /// <param name="state">The current state of the operation.
        /// </param>

        /// <param name="requestedStorageLimitInMb">The requested storage limit in MB.
        /// </param>

        /// <param name="requestedDatabaseDtuGuarantee">The requested per database DTU guarantee.
        /// </param>

        /// <param name="requestedDatabaseDtuCap">The requested per database DTU cap.
        /// </param>

        /// <param name="requestedDtuGuarantee">The requested DTU guarantee.
        /// </param>
        public ElasticPoolActivityProperties(System.DateTime? endTime = default(System.DateTime?), int? errorCode = default(int?), string errorMessage = default(string), int? errorSeverity = default(int?), string operation = default(string), System.Guid operationId = default(System.Guid), int? percentComplete = default(int?), int? requestedDatabaseDtuMax = default(int?), int? requestedDatabaseDtuMin = default(int?), int? requestedDtu = default(int?), string requestedElasticPoolName = default(string), long? requestedStorageLimitInGb = default(long?), string elasticPoolName = default(string), string serverName = default(string), System.DateTime? startTime = default(System.DateTime?), string state = default(string), int? requestedStorageLimitInMb = default(int?), int? requestedDatabaseDtuGuarantee = default(int?), int? requestedDatabaseDtuCap = default(int?), int? requestedDtuGuarantee = default(int?))

        {
            this.EndTime = endTime;
            this.ErrorCode = errorCode;
            this.ErrorMessage = errorMessage;
            this.ErrorSeverity = errorSeverity;
            this.Operation = operation;
            this.OperationId = operationId;
            this.PercentComplete = percentComplete;
            this.RequestedDatabaseDtuMax = requestedDatabaseDtuMax;
            this.RequestedDatabaseDtuMin = requestedDatabaseDtuMin;
            this.RequestedDtu = requestedDtu;
            this.RequestedElasticPoolName = requestedElasticPoolName;
            this.RequestedStorageLimitInGb = requestedStorageLimitInGb;
            this.ElasticPoolName = elasticPoolName;
            this.ServerName = serverName;
            this.StartTime = startTime;
            this.State = state;
            this.RequestedStorageLimitInMb = requestedStorageLimitInMb;
            this.RequestedDatabaseDtuGuarantee = requestedDatabaseDtuGuarantee;
            this.RequestedDatabaseDtuCap = requestedDatabaseDtuCap;
            this.RequestedDtuGuarantee = requestedDtuGuarantee;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets the time the operation finished (ISO8601 format).
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "endTime")]
        public System.DateTime? EndTime {get; private set; }

        /// <summary>
        /// Gets the error code if available.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "errorCode")]
        public int? ErrorCode {get; private set; }

        /// <summary>
        /// Gets the error message if available.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "errorMessage")]
        public string ErrorMessage {get; private set; }

        /// <summary>
        /// Gets the error severity if available.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "errorSeverity")]
        public int? ErrorSeverity {get; private set; }

        /// <summary>
        /// Gets the operation name.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "operation")]
        public string Operation {get; private set; }

        /// <summary>
        /// Gets the unique operation ID.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "operationId")]
        public System.Guid OperationId {get; private set; }

        /// <summary>
        /// Gets the percentage complete if available.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "percentComplete")]
        public int? PercentComplete {get; private set; }

        /// <summary>
        /// Gets the requested max DTU per database if available.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "requestedDatabaseDtuMax")]
        public int? RequestedDatabaseDtuMax {get; private set; }

        /// <summary>
        /// Gets the requested min DTU per database if available.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "requestedDatabaseDtuMin")]
        public int? RequestedDatabaseDtuMin {get; private set; }

        /// <summary>
        /// Gets the requested DTU for the pool if available.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "requestedDtu")]
        public int? RequestedDtu {get; private set; }

        /// <summary>
        /// Gets the requested name for the elastic pool if available.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "requestedElasticPoolName")]
        public string RequestedElasticPoolName {get; private set; }

        /// <summary>
        /// Gets the requested storage limit for the pool in GB if available.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "requestedStorageLimitInGB")]
        public long? RequestedStorageLimitInGb {get; private set; }

        /// <summary>
        /// Gets the name of the elastic pool.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "elasticPoolName")]
        public string ElasticPoolName {get; private set; }

        /// <summary>
        /// Gets the name of the server the elastic pool is in.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "serverName")]
        public string ServerName {get; private set; }

        /// <summary>
        /// Gets the time the operation started (ISO8601 format).
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "startTime")]
        public System.DateTime? StartTime {get; private set; }

        /// <summary>
        /// Gets the current state of the operation.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "state")]
        public string State {get; private set; }

        /// <summary>
        /// Gets the requested storage limit in MB.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "requestedStorageLimitInMB")]
        public int? RequestedStorageLimitInMb {get; private set; }

        /// <summary>
        /// Gets the requested per database DTU guarantee.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "requestedDatabaseDtuGuarantee")]
        public int? RequestedDatabaseDtuGuarantee {get; private set; }

        /// <summary>
        /// Gets the requested per database DTU cap.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "requestedDatabaseDtuCap")]
        public int? RequestedDatabaseDtuCap {get; private set; }

        /// <summary>
        /// Gets the requested DTU guarantee.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "requestedDtuGuarantee")]
        public int? RequestedDtuGuarantee {get; private set; }
    }
}