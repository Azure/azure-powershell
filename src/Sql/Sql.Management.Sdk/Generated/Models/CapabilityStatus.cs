// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.Sql.Models
{

    /// <summary>
    /// Defines values for CapabilityStatus.
    /// </summary>


    [Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
    public enum CapabilityStatus
    {
        [System.Runtime.Serialization.EnumMember(Value = "Visible")]
        Visible,
        [System.Runtime.Serialization.EnumMember(Value = "Available")]
        Available,
        [System.Runtime.Serialization.EnumMember(Value = "Default")]
        Default,
        [System.Runtime.Serialization.EnumMember(Value = "Disabled")]
        Disabled
    }
    internal static class CapabilityStatusEnumExtension
    {
        internal static string ToSerializedValue(this CapabilityStatus? value)
        {
            return value == null ? null : ((CapabilityStatus)value).ToSerializedValue();
        }
        internal static string ToSerializedValue(this CapabilityStatus value)
        {
            switch( value )
            {
                case CapabilityStatus.Visible:
                    return "Visible";
                case CapabilityStatus.Available:
                    return "Available";
                case CapabilityStatus.Default:
                    return "Default";
                case CapabilityStatus.Disabled:
                    return "Disabled";
            }
            return null;
        }
        internal static CapabilityStatus? ParseCapabilityStatus(this string value)
        {
            switch( value )
            {
                case "Visible":
                    return CapabilityStatus.Visible;
                case "Available":
                    return CapabilityStatus.Available;
                case "Default":
                    return CapabilityStatus.Default;
                case "Disabled":
                    return CapabilityStatus.Disabled;
            }
            return null;
        }
    }
}