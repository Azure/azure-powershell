// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.Sql.Models
{
    using System.Linq;

    /// <summary>
    /// Properties of a query metrics interval.
    /// </summary>
    public partial class QueryMetricInterval
    {
        /// <summary>
        /// Initializes a new instance of the QueryMetricInterval class.
        /// </summary>
        public QueryMetricInterval()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the QueryMetricInterval class.
        /// </summary>

        /// <param name="intervalStartTime">The start time for the metric interval (ISO-8601 format).
        /// </param>

        /// <param name="intervalType">Interval type (length).
        /// Possible values include: 'PT1H', 'P1D'</param>

        /// <param name="executionCount">Execution count of a query in this interval.
        /// </param>

        /// <param name="metrics">List of metric objects for this interval
        /// </param>
        public QueryMetricInterval(string intervalStartTime = default(string), string intervalType = default(string), long? executionCount = default(long?), System.Collections.Generic.IList<QueryMetricProperties> metrics = default(System.Collections.Generic.IList<QueryMetricProperties>))

        {
            this.IntervalStartTime = intervalStartTime;
            this.IntervalType = intervalType;
            this.ExecutionCount = executionCount;
            this.Metrics = metrics;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets the start time for the metric interval (ISO-8601 format).
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "intervalStartTime")]
        public string IntervalStartTime {get; private set; }

        /// <summary>
        /// Gets interval type (length). Possible values include: &#39;PT1H&#39;, &#39;P1D&#39;
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "intervalType")]
        public string IntervalType {get; private set; }

        /// <summary>
        /// Gets execution count of a query in this interval.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "executionCount")]
        public long? ExecutionCount {get; private set; }

        /// <summary>
        /// Gets or sets list of metric objects for this interval
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "metrics")]
        public System.Collections.Generic.IList<QueryMetricProperties> Metrics {get; set; }
    }
}