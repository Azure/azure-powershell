// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.Sql.Models
{
    using System.Linq;

    /// <summary>
    /// Properties of a server trust group.
    /// </summary>
    public partial class ServerTrustGroupProperties
    {
        /// <summary>
        /// Initializes a new instance of the ServerTrustGroupProperties class.
        /// </summary>
        public ServerTrustGroupProperties()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the ServerTrustGroupProperties class.
        /// </summary>

        /// <param name="groupMembers">Group members information for the server trust group.
        /// </param>

        /// <param name="trustScopes">Trust scope of the server trust group.
        /// </param>
        public ServerTrustGroupProperties(System.Collections.Generic.IList<ServerInfo> groupMembers, System.Collections.Generic.IList<string> trustScopes)

        {
            this.GroupMembers = groupMembers;
            this.TrustScopes = trustScopes;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets or sets group members information for the server trust group.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "groupMembers")]
        public System.Collections.Generic.IList<ServerInfo> GroupMembers {get; set; }

        /// <summary>
        /// Gets or sets trust scope of the server trust group.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "trustScopes")]
        public System.Collections.Generic.IList<string> TrustScopes {get; set; }
        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (this.GroupMembers == null)
            {
                throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.CannotBeNull, "GroupMembers");
            }
            if (this.TrustScopes == null)
            {
                throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.CannotBeNull, "TrustScopes");
            }
            if (this.GroupMembers != null)
            {
                foreach (var element in this.GroupMembers)
                {
                    if (element != null)
                    {
                        element.Validate();
                    }
                }
            }

        }
    }
}