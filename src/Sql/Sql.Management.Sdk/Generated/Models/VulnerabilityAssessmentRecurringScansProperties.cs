// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.Sql.Models
{
    using System.Linq;

    /// <summary>
    /// Properties of a Vulnerability Assessment recurring scans.
    /// </summary>
    public partial class VulnerabilityAssessmentRecurringScansProperties
    {
        /// <summary>
        /// Initializes a new instance of the VulnerabilityAssessmentRecurringScansProperties class.
        /// </summary>
        public VulnerabilityAssessmentRecurringScansProperties()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the VulnerabilityAssessmentRecurringScansProperties class.
        /// </summary>

        /// <param name="isEnabled">Recurring scans state.
        /// </param>

        /// <param name="emailSubscriptionAdmins">Specifies that the schedule scan notification will be is sent to the
        /// subscription administrators.
        /// </param>

        /// <param name="emails">Specifies an array of e-mail addresses to which the scan notification is
        /// sent.
        /// </param>
        public VulnerabilityAssessmentRecurringScansProperties(bool? isEnabled = default(bool?), bool? emailSubscriptionAdmins = default(bool?), System.Collections.Generic.IList<string> emails = default(System.Collections.Generic.IList<string>))

        {
            this.IsEnabled = isEnabled;
            this.EmailSubscriptionAdmins = emailSubscriptionAdmins;
            this.Emails = emails;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets or sets recurring scans state.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "isEnabled")]
        public bool? IsEnabled {get; set; }

        /// <summary>
        /// Gets or sets specifies that the schedule scan notification will be is sent
        /// to the subscription administrators.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "emailSubscriptionAdmins")]
        public bool? EmailSubscriptionAdmins {get; set; }

        /// <summary>
        /// Gets or sets specifies an array of e-mail addresses to which the scan
        /// notification is sent.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "emails")]
        public System.Collections.Generic.IList<string> Emails {get; set; }
    }
}