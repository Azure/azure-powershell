// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.Sql.Models
{
    using System.Linq;

    /// <summary>
    /// An instance failover group.
    /// </summary>
    [Microsoft.Rest.Serialization.JsonTransformation]
    public partial class InstanceFailoverGroup : ProxyResource
    {
        /// <summary>
        /// Initializes a new instance of the InstanceFailoverGroup class.
        /// </summary>
        public InstanceFailoverGroup()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the InstanceFailoverGroup class.
        /// </summary>

        /// <param name="id">Resource ID.
        /// </param>

        /// <param name="name">Resource name.
        /// </param>

        /// <param name="type">Resource type.
        /// </param>

        /// <param name="secondaryType">Type of the geo-secondary instance. Set &#39;Standby&#39; if the instance is used
        /// as a DR option only.
        /// Possible values include: 'Geo', 'Standby'</param>

        /// <param name="readWriteEndpoint">Read-write endpoint of the failover group instance.
        /// </param>

        /// <param name="readOnlyEndpoint">Read-only endpoint of the failover group instance.
        /// </param>

        /// <param name="replicationRole">Local replication role of the failover group instance.
        /// Possible values include: 'Primary', 'Secondary'</param>

        /// <param name="replicationState">Replication state of the failover group instance.
        /// </param>

        /// <param name="partnerRegions">Partner region information for the failover group.
        /// </param>

        /// <param name="managedInstancePairs">List of managed instance pairs in the failover group.
        /// </param>
        public InstanceFailoverGroup(string id = default(string), string name = default(string), string type = default(string), string secondaryType = default(string), InstanceFailoverGroupReadWriteEndpoint readWriteEndpoint = default(InstanceFailoverGroupReadWriteEndpoint), InstanceFailoverGroupReadOnlyEndpoint readOnlyEndpoint = default(InstanceFailoverGroupReadOnlyEndpoint), string replicationRole = default(string), string replicationState = default(string), System.Collections.Generic.IList<PartnerRegionInfo> partnerRegions = default(System.Collections.Generic.IList<PartnerRegionInfo>), System.Collections.Generic.IList<ManagedInstancePairInfo> managedInstancePairs = default(System.Collections.Generic.IList<ManagedInstancePairInfo>))

        : base(id, name, type)
        {
            this.SecondaryType = secondaryType;
            this.ReadWriteEndpoint = readWriteEndpoint;
            this.ReadOnlyEndpoint = readOnlyEndpoint;
            this.ReplicationRole = replicationRole;
            this.ReplicationState = replicationState;
            this.PartnerRegions = partnerRegions;
            this.ManagedInstancePairs = managedInstancePairs;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets or sets type of the geo-secondary instance. Set &#39;Standby&#39; if the
        /// instance is used as a DR option only. Possible values include: &#39;Geo&#39;, &#39;Standby&#39;
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.secondaryType")]
        public string SecondaryType {get; set; }

        /// <summary>
        /// Gets or sets read-write endpoint of the failover group instance.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.readWriteEndpoint")]
        public InstanceFailoverGroupReadWriteEndpoint ReadWriteEndpoint {get; set; }

        /// <summary>
        /// Gets or sets read-only endpoint of the failover group instance.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.readOnlyEndpoint")]
        public InstanceFailoverGroupReadOnlyEndpoint ReadOnlyEndpoint {get; set; }

        /// <summary>
        /// Gets local replication role of the failover group instance. Possible values include: &#39;Primary&#39;, &#39;Secondary&#39;
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.replicationRole")]
        public string ReplicationRole {get; private set; }

        /// <summary>
        /// Gets replication state of the failover group instance.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.replicationState")]
        public string ReplicationState {get; private set; }

        /// <summary>
        /// Gets or sets partner region information for the failover group.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.partnerRegions")]
        public System.Collections.Generic.IList<PartnerRegionInfo> PartnerRegions {get; set; }

        /// <summary>
        /// Gets or sets list of managed instance pairs in the failover group.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.managedInstancePairs")]
        public System.Collections.Generic.IList<ManagedInstancePairInfo> ManagedInstancePairs {get; set; }
        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {

            if (this.ReadWriteEndpoint != null)
            {
                this.ReadWriteEndpoint.Validate();
            }





        }
    }
}