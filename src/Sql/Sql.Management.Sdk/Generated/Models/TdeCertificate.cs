// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.Sql.Models
{
    using System.Linq;

    /// <summary>
    /// A TDE certificate that can be uploaded into a server.
    /// </summary>
    [Microsoft.Rest.Serialization.JsonTransformation]
    public partial class TdeCertificate : ProxyResource
    {
        /// <summary>
        /// Initializes a new instance of the TdeCertificate class.
        /// </summary>
        public TdeCertificate()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the TdeCertificate class.
        /// </summary>

        /// <param name="id">Resource ID.
        /// </param>

        /// <param name="name">Resource name.
        /// </param>

        /// <param name="type">Resource type.
        /// </param>

        /// <param name="privateBlob">The base64 encoded certificate private blob.
        /// </param>

        /// <param name="certPassword">The certificate password.
        /// </param>
        public TdeCertificate(string id = default(string), string name = default(string), string type = default(string), string privateBlob = default(string), string certPassword = default(string))

        : base(id, name, type)
        {
            this.PrivateBlob = privateBlob;
            this.CertPassword = certPassword;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets or sets the base64 encoded certificate private blob.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.privateBlob")]
        public string PrivateBlob {get; set; }

        /// <summary>
        /// Gets or sets the certificate password.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.certPassword")]
        public string CertPassword {get; set; }
    }
}