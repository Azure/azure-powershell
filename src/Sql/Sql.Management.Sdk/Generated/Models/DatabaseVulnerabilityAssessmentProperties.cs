// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.Sql.Models
{
    using System.Linq;

    /// <summary>
    /// Properties of a database Vulnerability Assessment.
    /// </summary>
    public partial class DatabaseVulnerabilityAssessmentProperties
    {
        /// <summary>
        /// Initializes a new instance of the DatabaseVulnerabilityAssessmentProperties class.
        /// </summary>
        public DatabaseVulnerabilityAssessmentProperties()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the DatabaseVulnerabilityAssessmentProperties class.
        /// </summary>

        /// <param name="storageContainerPath">A blob storage container path to hold the scan results (e.g.
        /// https://myStorage.blob.core.windows.net/VaScans/).  It is required if
        /// server level vulnerability assessment policy doesn&#39;t set
        /// </param>

        /// <param name="storageContainerSasKey">A shared access signature (SAS Key) that has write access to the blob
        /// container specified in &#39;storageContainerPath&#39; parameter. If
        /// &#39;storageAccountAccessKey&#39; isn&#39;t specified, StorageContainerSasKey is
        /// required.
        /// </param>

        /// <param name="storageAccountAccessKey">Specifies the identifier key of the storage account for vulnerability
        /// assessment scan results. If &#39;StorageContainerSasKey&#39; isn&#39;t specified,
        /// storageAccountAccessKey is required.
        /// </param>

        /// <param name="recurringScans">The recurring scans settings
        /// </param>
        public DatabaseVulnerabilityAssessmentProperties(string storageContainerPath = default(string), string storageContainerSasKey = default(string), string storageAccountAccessKey = default(string), VulnerabilityAssessmentRecurringScansProperties recurringScans = default(VulnerabilityAssessmentRecurringScansProperties))

        {
            this.StorageContainerPath = storageContainerPath;
            this.StorageContainerSasKey = storageContainerSasKey;
            this.StorageAccountAccessKey = storageAccountAccessKey;
            this.RecurringScans = recurringScans;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets or sets a blob storage container path to hold the scan results (e.g.
        /// https://myStorage.blob.core.windows.net/VaScans/).  It is required if
        /// server level vulnerability assessment policy doesn&#39;t set
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "storageContainerPath")]
        public string StorageContainerPath {get; set; }

        /// <summary>
        /// Gets or sets a shared access signature (SAS Key) that has write access to
        /// the blob container specified in &#39;storageContainerPath&#39; parameter. If
        /// &#39;storageAccountAccessKey&#39; isn&#39;t specified, StorageContainerSasKey is
        /// required.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "storageContainerSasKey")]
        public string StorageContainerSasKey {get; set; }

        /// <summary>
        /// Gets or sets specifies the identifier key of the storage account for
        /// vulnerability assessment scan results. If &#39;StorageContainerSasKey&#39; isn&#39;t
        /// specified, storageAccountAccessKey is required.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "storageAccountAccessKey")]
        public string StorageAccountAccessKey {get; set; }

        /// <summary>
        /// Gets or sets the recurring scans settings
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "recurringScans")]
        public VulnerabilityAssessmentRecurringScansProperties RecurringScans {get; set; }
    }
}