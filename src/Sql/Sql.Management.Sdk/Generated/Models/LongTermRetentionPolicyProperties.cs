// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.Sql.Models
{
    using System.Linq;

    /// <summary>
    /// Properties of a long term retention policy
    /// </summary>
    public partial class LongTermRetentionPolicyProperties
    {
        /// <summary>
        /// Initializes a new instance of the LongTermRetentionPolicyProperties class.
        /// </summary>
        public LongTermRetentionPolicyProperties()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the LongTermRetentionPolicyProperties class.
        /// </summary>

        /// <param name="timeBasedImmutability">The setting for whether to enable time-based immutability for future
        /// backups. When set, future backups will have TimeBasedImmutability enabled.
        /// Possible values include: &#39;Enabled&#39;, &#39;Disabled&#39;</param>

        /// <param name="timeBasedImmutabilityMode">The setting for time-based immutability mode for future backup (Value can
        /// be either Locked or UnLocked. Only effective if TimeBasedImmutability is
        /// enabled). Caution: Immutability of LTR backup cannot be removed if
        /// TimeBasedImmutabilityMode is Locked.
        /// Possible values include: &#39;Locked&#39;, &#39;Unlocked&#39;</param>

        /// <param name="weeklyRetention">The weekly retention policy for an LTR backup in an ISO 8601 format.
        /// </param>

        /// <param name="monthlyRetention">The monthly retention policy for an LTR backup in an ISO 8601 format.
        /// </param>

        /// <param name="yearlyRetention">The yearly retention policy for an LTR backup in an ISO 8601 format.
        /// </param>

        /// <param name="weekOfYear">The week of year to take the yearly backup in an ISO 8601 format.
        /// </param>
        public LongTermRetentionPolicyProperties(string timeBasedImmutability = default(string), string timeBasedImmutabilityMode = default(string), string weeklyRetention = default(string), string monthlyRetention = default(string), string yearlyRetention = default(string), int? weekOfYear = default(int?))

        {
            this.TimeBasedImmutability = timeBasedImmutability;
            this.TimeBasedImmutabilityMode = timeBasedImmutabilityMode;
            this.WeeklyRetention = weeklyRetention;
            this.MonthlyRetention = monthlyRetention;
            this.YearlyRetention = yearlyRetention;
            this.WeekOfYear = weekOfYear;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets or sets the setting for whether to enable time-based immutability for
        /// future backups. When set, future backups will have TimeBasedImmutability
        /// enabled. Possible values include: &#39;Enabled&#39;, &#39;Disabled&#39;
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "timeBasedImmutability")]
        public string TimeBasedImmutability {get; set; }

        /// <summary>
        /// Gets or sets the setting for time-based immutability mode for future backup
        /// (Value can be either Locked or UnLocked. Only effective if
        /// TimeBasedImmutability is enabled). Caution: Immutability of LTR backup
        /// cannot be removed if TimeBasedImmutabilityMode is Locked. Possible values include: &#39;Locked&#39;, &#39;Unlocked&#39;
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "timeBasedImmutabilityMode")]
        public string TimeBasedImmutabilityMode {get; set; }

        /// <summary>
        /// Gets or sets the weekly retention policy for an LTR backup in an ISO 8601
        /// format.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "weeklyRetention")]
        public string WeeklyRetention {get; set; }

        /// <summary>
        /// Gets or sets the monthly retention policy for an LTR backup in an ISO 8601
        /// format.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "monthlyRetention")]
        public string MonthlyRetention {get; set; }

        /// <summary>
        /// Gets or sets the yearly retention policy for an LTR backup in an ISO 8601
        /// format.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "yearlyRetention")]
        public string YearlyRetention {get; set; }

        /// <summary>
        /// Gets or sets the week of year to take the yearly backup in an ISO 8601
        /// format.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "weekOfYear")]
        public int? WeekOfYear {get; set; }
    }
}