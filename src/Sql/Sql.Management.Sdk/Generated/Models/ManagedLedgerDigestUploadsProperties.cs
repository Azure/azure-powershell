// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.Sql.Models
{
    using System.Linq;

    /// <summary>
    /// The properties of a database ledger digest upload settings.
    /// </summary>
    public partial class ManagedLedgerDigestUploadsProperties
    {
        /// <summary>
        /// Initializes a new instance of the ManagedLedgerDigestUploadsProperties class.
        /// </summary>
        public ManagedLedgerDigestUploadsProperties()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the ManagedLedgerDigestUploadsProperties class.
        /// </summary>

        /// <param name="digestStorageEndpoint">The digest storage endpoint, which must be either an Azure blob storage
        /// endpoint or an URI for Azure Confidential Ledger.
        /// </param>

        /// <param name="state">Specifies the state of ledger digest upload.
        /// Possible values include: &#39;Enabled&#39;, &#39;Disabled&#39;</param>
        public ManagedLedgerDigestUploadsProperties(string digestStorageEndpoint = default(string), string state = default(string))

        {
            this.DigestStorageEndpoint = digestStorageEndpoint;
            this.State = state;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets or sets the digest storage endpoint, which must be either an Azure
        /// blob storage endpoint or an URI for Azure Confidential Ledger.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "digestStorageEndpoint")]
        public string DigestStorageEndpoint {get; set; }

        /// <summary>
        /// Gets specifies the state of ledger digest upload. Possible values include: &#39;Enabled&#39;, &#39;Disabled&#39;
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "state")]
        public string State {get; private set; }
    }
}