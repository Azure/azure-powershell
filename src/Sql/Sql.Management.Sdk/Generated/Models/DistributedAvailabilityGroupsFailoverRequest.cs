// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.Sql.Models
{
    using System.Linq;

    /// <summary>
    /// Distributed availability group failover.
    /// </summary>
    public partial class DistributedAvailabilityGroupsFailoverRequest
    {
        /// <summary>
        /// Initializes a new instance of the DistributedAvailabilityGroupsFailoverRequest class.
        /// </summary>
        public DistributedAvailabilityGroupsFailoverRequest()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the DistributedAvailabilityGroupsFailoverRequest class.
        /// </summary>

        /// <param name="failoverType">The failover type, can be ForcedAllowDataLoss or Planned.
        /// Possible values include: &#39;ForcedAllowDataLoss&#39;, &#39;Planned&#39;</param>
        public DistributedAvailabilityGroupsFailoverRequest(string failoverType)

        {
            this.FailoverType = failoverType;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets or sets the failover type, can be ForcedAllowDataLoss or Planned. Possible values include: &#39;ForcedAllowDataLoss&#39;, &#39;Planned&#39;
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "failoverType")]
        public string FailoverType {get; set; }
        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (this.FailoverType == null)
            {
                throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.CannotBeNull, "FailoverType");
            }

        }
    }
}