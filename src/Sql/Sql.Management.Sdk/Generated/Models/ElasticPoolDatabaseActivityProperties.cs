// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.Sql.Models
{
    using System.Linq;

    /// <summary>
    /// Represents the properties of an elastic pool database activity.
    /// </summary>
    public partial class ElasticPoolDatabaseActivityProperties
    {
        /// <summary>
        /// Initializes a new instance of the ElasticPoolDatabaseActivityProperties class.
        /// </summary>
        public ElasticPoolDatabaseActivityProperties()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the ElasticPoolDatabaseActivityProperties class.
        /// </summary>

        /// <param name="databaseName">The database name.
        /// </param>

        /// <param name="endTime">The time the operation finished (ISO8601 format).
        /// </param>

        /// <param name="errorCode">The error code if available.
        /// </param>

        /// <param name="errorMessage">The error message if available.
        /// </param>

        /// <param name="errorSeverity">The error severity if available.
        /// </param>

        /// <param name="operation">The operation name.
        /// </param>

        /// <param name="operationId">The unique operation ID.
        /// </param>

        /// <param name="percentComplete">The percentage complete if available.
        /// </param>

        /// <param name="requestedElasticPoolName">The name for the elastic pool the database is moving into if available.
        /// </param>

        /// <param name="currentElasticPoolName">The name of the current elastic pool the database is in if available.
        /// </param>

        /// <param name="currentServiceObjective">The name of the current service objective if available.
        /// </param>

        /// <param name="requestedServiceObjective">The name of the requested service objective if available.
        /// </param>

        /// <param name="serverName">The name of the server the elastic pool is in.
        /// </param>

        /// <param name="startTime">The time the operation started (ISO8601 format).
        /// </param>

        /// <param name="state">The current state of the operation.
        /// </param>
        public ElasticPoolDatabaseActivityProperties(string databaseName = default(string), System.DateTime? endTime = default(System.DateTime?), int? errorCode = default(int?), string errorMessage = default(string), int? errorSeverity = default(int?), string operation = default(string), System.Guid operationId = default(System.Guid), int? percentComplete = default(int?), string requestedElasticPoolName = default(string), string currentElasticPoolName = default(string), string currentServiceObjective = default(string), string requestedServiceObjective = default(string), string serverName = default(string), System.DateTime? startTime = default(System.DateTime?), string state = default(string))

        {
            this.DatabaseName = databaseName;
            this.EndTime = endTime;
            this.ErrorCode = errorCode;
            this.ErrorMessage = errorMessage;
            this.ErrorSeverity = errorSeverity;
            this.Operation = operation;
            this.OperationId = operationId;
            this.PercentComplete = percentComplete;
            this.RequestedElasticPoolName = requestedElasticPoolName;
            this.CurrentElasticPoolName = currentElasticPoolName;
            this.CurrentServiceObjective = currentServiceObjective;
            this.RequestedServiceObjective = requestedServiceObjective;
            this.ServerName = serverName;
            this.StartTime = startTime;
            this.State = state;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets the database name.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "databaseName")]
        public string DatabaseName {get; private set; }

        /// <summary>
        /// Gets the time the operation finished (ISO8601 format).
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "endTime")]
        public System.DateTime? EndTime {get; private set; }

        /// <summary>
        /// Gets the error code if available.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "errorCode")]
        public int? ErrorCode {get; private set; }

        /// <summary>
        /// Gets the error message if available.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "errorMessage")]
        public string ErrorMessage {get; private set; }

        /// <summary>
        /// Gets the error severity if available.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "errorSeverity")]
        public int? ErrorSeverity {get; private set; }

        /// <summary>
        /// Gets the operation name.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "operation")]
        public string Operation {get; private set; }

        /// <summary>
        /// Gets the unique operation ID.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "operationId")]
        public System.Guid OperationId {get; private set; }

        /// <summary>
        /// Gets the percentage complete if available.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "percentComplete")]
        public int? PercentComplete {get; private set; }

        /// <summary>
        /// Gets the name for the elastic pool the database is moving into if
        /// available.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "requestedElasticPoolName")]
        public string RequestedElasticPoolName {get; private set; }

        /// <summary>
        /// Gets the name of the current elastic pool the database is in if available.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "currentElasticPoolName")]
        public string CurrentElasticPoolName {get; private set; }

        /// <summary>
        /// Gets the name of the current service objective if available.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "currentServiceObjective")]
        public string CurrentServiceObjective {get; private set; }

        /// <summary>
        /// Gets the name of the requested service objective if available.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "requestedServiceObjective")]
        public string RequestedServiceObjective {get; private set; }

        /// <summary>
        /// Gets the name of the server the elastic pool is in.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "serverName")]
        public string ServerName {get; private set; }

        /// <summary>
        /// Gets the time the operation started (ISO8601 format).
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "startTime")]
        public System.DateTime? StartTime {get; private set; }

        /// <summary>
        /// Gets the current state of the operation.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "state")]
        public string State {get; private set; }
    }
}