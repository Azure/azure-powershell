// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.Sql.Models
{
    using System.Linq;

    /// <summary>
    /// Properties of a query execution statistics.
    /// </summary>
    public partial class QueryStatisticsProperties
    {
        /// <summary>
        /// Initializes a new instance of the QueryStatisticsProperties class.
        /// </summary>
        public QueryStatisticsProperties()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the QueryStatisticsProperties class.
        /// </summary>

        /// <param name="databaseName">Database name of the database in which this query was executed.
        /// </param>

        /// <param name="queryId">Unique query id (unique within one database).
        /// </param>

        /// <param name="startTime">The start time for the metric (ISO-8601 format).
        /// </param>

        /// <param name="endTime">The end time for the metric (ISO-8601 format).
        /// </param>

        /// <param name="intervals">List of intervals with appropriate metric data
        /// </param>
        public QueryStatisticsProperties(string databaseName = default(string), string queryId = default(string), string startTime = default(string), string endTime = default(string), System.Collections.Generic.IList<QueryMetricInterval> intervals = default(System.Collections.Generic.IList<QueryMetricInterval>))

        {
            this.DatabaseName = databaseName;
            this.QueryId = queryId;
            this.StartTime = startTime;
            this.EndTime = endTime;
            this.Intervals = intervals;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets database name of the database in which this query was executed.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "databaseName")]
        public string DatabaseName {get; private set; }

        /// <summary>
        /// Gets unique query id (unique within one database).
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "queryId")]
        public string QueryId {get; private set; }

        /// <summary>
        /// Gets the start time for the metric (ISO-8601 format).
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "startTime")]
        public string StartTime {get; private set; }

        /// <summary>
        /// Gets the end time for the metric (ISO-8601 format).
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "endTime")]
        public string EndTime {get; private set; }

        /// <summary>
        /// Gets or sets list of intervals with appropriate metric data
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "intervals")]
        public System.Collections.Generic.IList<QueryMetricInterval> Intervals {get; set; }
    }
}