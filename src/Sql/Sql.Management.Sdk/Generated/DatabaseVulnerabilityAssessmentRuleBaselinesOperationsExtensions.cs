// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.
namespace Microsoft.Azure.Management.Sql
{
    using Microsoft.Rest.Azure;
    using Models;

    /// <summary>
    /// Extension methods for DatabaseVulnerabilityAssessmentRuleBaselinesOperations
    /// </summary>
    public static partial class DatabaseVulnerabilityAssessmentRuleBaselinesOperationsExtensions
    {
        /// <summary>
        /// Gets a database&#39;s vulnerability assessment rule baseline.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='resourceGroupName'>
        /// The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.
        /// </param>
        /// <param name='serverName'>
        /// The name of the server.
        /// </param>
        /// <param name='databaseName'>
        /// The name of the database for which the vulnerability assessment rule baseline is defined.
        /// </param>
        /// <param name='ruleId'>
        /// The vulnerability assessment rule ID.
        /// </param>
        /// <param name='baselineName'>
        /// The name of the vulnerability assessment rule baseline (default implies a baseline on a database level rule and master for server level rule).
        /// </param>
        public static DatabaseVulnerabilityAssessmentRuleBaseline Get(this IDatabaseVulnerabilityAssessmentRuleBaselinesOperations operations, string resourceGroupName, string serverName, string databaseName, string ruleId, VulnerabilityAssessmentPolicyBaselineName baselineName)
        {
                return ((IDatabaseVulnerabilityAssessmentRuleBaselinesOperations)operations).GetAsync(resourceGroupName, serverName, databaseName, ruleId, baselineName).GetAwaiter().GetResult();
        }

        /// <summary>
        /// Gets a database&#39;s vulnerability assessment rule baseline.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='resourceGroupName'>
        /// The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.
        /// </param>
        /// <param name='serverName'>
        /// The name of the server.
        /// </param>
        /// <param name='databaseName'>
        /// The name of the database for which the vulnerability assessment rule baseline is defined.
        /// </param>
        /// <param name='ruleId'>
        /// The vulnerability assessment rule ID.
        /// </param>
        /// <param name='baselineName'>
        /// The name of the vulnerability assessment rule baseline (default implies a baseline on a database level rule and master for server level rule).
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        public static async System.Threading.Tasks.Task<DatabaseVulnerabilityAssessmentRuleBaseline> GetAsync(this IDatabaseVulnerabilityAssessmentRuleBaselinesOperations operations, string resourceGroupName, string serverName, string databaseName, string ruleId, VulnerabilityAssessmentPolicyBaselineName baselineName, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            using (var _result = await operations.GetWithHttpMessagesAsync(resourceGroupName, serverName, databaseName, ruleId, baselineName, null, cancellationToken).ConfigureAwait(false))
            {
                return _result.Body;
            }
        }
        /// <summary>
        /// Creates or updates a database&#39;s vulnerability assessment rule baseline.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='resourceGroupName'>
        /// The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.
        /// </param>
        /// <param name='serverName'>
        /// The name of the server.
        /// </param>
        /// <param name='databaseName'>
        /// The name of the database for which the vulnerability assessment rule baseline is defined.
        /// </param>
        /// <param name='ruleId'>
        /// The vulnerability assessment rule ID.
        /// </param>
        /// <param name='baselineName'>
        /// The name of the vulnerability assessment rule baseline (default implies a baseline on a database level rule and master for server level rule).
        /// </param>
        public static DatabaseVulnerabilityAssessmentRuleBaseline CreateOrUpdate(this IDatabaseVulnerabilityAssessmentRuleBaselinesOperations operations, string resourceGroupName, string serverName, string databaseName, string ruleId, VulnerabilityAssessmentPolicyBaselineName baselineName, DatabaseVulnerabilityAssessmentRuleBaseline parameters)
        {
                return ((IDatabaseVulnerabilityAssessmentRuleBaselinesOperations)operations).CreateOrUpdateAsync(resourceGroupName, serverName, databaseName, ruleId, baselineName, parameters).GetAwaiter().GetResult();
        }

        /// <summary>
        /// Creates or updates a database&#39;s vulnerability assessment rule baseline.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='resourceGroupName'>
        /// The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.
        /// </param>
        /// <param name='serverName'>
        /// The name of the server.
        /// </param>
        /// <param name='databaseName'>
        /// The name of the database for which the vulnerability assessment rule baseline is defined.
        /// </param>
        /// <param name='ruleId'>
        /// The vulnerability assessment rule ID.
        /// </param>
        /// <param name='baselineName'>
        /// The name of the vulnerability assessment rule baseline (default implies a baseline on a database level rule and master for server level rule).
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        public static async System.Threading.Tasks.Task<DatabaseVulnerabilityAssessmentRuleBaseline> CreateOrUpdateAsync(this IDatabaseVulnerabilityAssessmentRuleBaselinesOperations operations, string resourceGroupName, string serverName, string databaseName, string ruleId, VulnerabilityAssessmentPolicyBaselineName baselineName, DatabaseVulnerabilityAssessmentRuleBaseline parameters, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            using (var _result = await operations.CreateOrUpdateWithHttpMessagesAsync(resourceGroupName, serverName, databaseName, ruleId, baselineName, parameters, null, cancellationToken).ConfigureAwait(false))
            {
                return _result.Body;
            }
        }
        /// <summary>
        /// Removes the database&#39;s vulnerability assessment rule baseline.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='resourceGroupName'>
        /// The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.
        /// </param>
        /// <param name='serverName'>
        /// The name of the server.
        /// </param>
        /// <param name='databaseName'>
        /// The name of the database for which the vulnerability assessment rule baseline is defined.
        /// </param>
        /// <param name='ruleId'>
        /// The vulnerability assessment rule ID.
        /// </param>
        /// <param name='baselineName'>
        /// The name of the vulnerability assessment rule baseline (default implies a baseline on a database level rule and master for server level rule).
        /// </param>
        public static void Delete(this IDatabaseVulnerabilityAssessmentRuleBaselinesOperations operations, string resourceGroupName, string serverName, string databaseName, string ruleId, VulnerabilityAssessmentPolicyBaselineName baselineName)
        {
                ((IDatabaseVulnerabilityAssessmentRuleBaselinesOperations)operations).DeleteAsync(resourceGroupName, serverName, databaseName, ruleId, baselineName).GetAwaiter().GetResult();
        }

        /// <summary>
        /// Removes the database&#39;s vulnerability assessment rule baseline.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='resourceGroupName'>
        /// The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.
        /// </param>
        /// <param name='serverName'>
        /// The name of the server.
        /// </param>
        /// <param name='databaseName'>
        /// The name of the database for which the vulnerability assessment rule baseline is defined.
        /// </param>
        /// <param name='ruleId'>
        /// The vulnerability assessment rule ID.
        /// </param>
        /// <param name='baselineName'>
        /// The name of the vulnerability assessment rule baseline (default implies a baseline on a database level rule and master for server level rule).
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        public static async System.Threading.Tasks.Task DeleteAsync(this IDatabaseVulnerabilityAssessmentRuleBaselinesOperations operations, string resourceGroupName, string serverName, string databaseName, string ruleId, VulnerabilityAssessmentPolicyBaselineName baselineName, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            (await operations.DeleteWithHttpMessagesAsync(resourceGroupName, serverName, databaseName, ruleId, baselineName, null, cancellationToken).ConfigureAwait(false)).Dispose();
        }
    }
}
