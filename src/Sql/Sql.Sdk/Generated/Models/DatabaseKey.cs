// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.Sql.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Database level key used for encryption at rest.
    /// </summary>
    public partial class DatabaseKey
    {
        /// <summary>
        /// Initializes a new instance of the DatabaseKey class.
        /// </summary>
        public DatabaseKey()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the DatabaseKey class.
        /// </summary>
        /// <param name="type">The database key type. Only supported value is
        /// 'AzureKeyVault'. Possible values include: 'AzureKeyVault'</param>
        /// <param name="thumbprint">Thumbprint of the database key.</param>
        /// <param name="creationDate">The database key creation date.</param>
        /// <param name="subregion">Subregion of the server key.</param>
        public DatabaseKey(string type = default(string), string thumbprint = default(string), System.DateTime? creationDate = default(System.DateTime?), string subregion = default(string))
        {
            Type = type;
            Thumbprint = thumbprint;
            CreationDate = creationDate;
            Subregion = subregion;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets the database key type. Only supported value is
        /// 'AzureKeyVault'. Possible values include: 'AzureKeyVault'
        /// </summary>
        [JsonProperty(PropertyName = "type")]
        public string Type { get; private set; }

        /// <summary>
        /// Gets thumbprint of the database key.
        /// </summary>
        [JsonProperty(PropertyName = "thumbprint")]
        public string Thumbprint { get; private set; }

        /// <summary>
        /// Gets the database key creation date.
        /// </summary>
        [JsonProperty(PropertyName = "creationDate")]
        public System.DateTime? CreationDate { get; private set; }

        /// <summary>
        /// Gets subregion of the server key.
        /// </summary>
        [JsonProperty(PropertyName = "subregion")]
        public string Subregion { get; private set; }

    }
}
