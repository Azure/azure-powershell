// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Logz.Models.Api20201001Preview
{
    using static Microsoft.Azure.PowerShell.Cmdlets.Logz.Runtime.Extensions;

    public partial class LogzMonitorResource :
        Microsoft.Azure.PowerShell.Cmdlets.Logz.Models.Api20201001Preview.ILogzMonitorResource,
        Microsoft.Azure.PowerShell.Cmdlets.Logz.Models.Api20201001Preview.ILogzMonitorResourceInternal
    {

        /// <summary>Backing field for <see cref="Id" /> property.</summary>
        private string _id;

        /// <summary>ARM id of the monitor resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Logz.Origin(Microsoft.Azure.PowerShell.Cmdlets.Logz.PropertyOrigin.Owned)]
        [Microsoft.Azure.PowerShell.Cmdlets.Logz.DoNotFormat]
        public string Id { get => this._id; }

        /// <summary>Backing field for <see cref="Identity" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Logz.Models.Api20201001Preview.IIdentityProperties _identity;

        [Microsoft.Azure.PowerShell.Cmdlets.Logz.Origin(Microsoft.Azure.PowerShell.Cmdlets.Logz.PropertyOrigin.Owned)]
        [Microsoft.Azure.PowerShell.Cmdlets.Logz.DoNotFormat]
        internal Microsoft.Azure.PowerShell.Cmdlets.Logz.Models.Api20201001Preview.IIdentityProperties Identity { get => (this._identity = this._identity ?? new Microsoft.Azure.PowerShell.Cmdlets.Logz.Models.Api20201001Preview.IdentityProperties()); set => this._identity = value; }

        /// <summary>The identity ID.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Logz.Origin(Microsoft.Azure.PowerShell.Cmdlets.Logz.PropertyOrigin.Inlined)]
        [Microsoft.Azure.PowerShell.Cmdlets.Logz.DoNotFormat]
        public string IdentityPrincipalId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Logz.Models.Api20201001Preview.IIdentityPropertiesInternal)Identity).PrincipalId; }

        /// <summary>The tenant ID of resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Logz.Origin(Microsoft.Azure.PowerShell.Cmdlets.Logz.PropertyOrigin.Inlined)]
        [Microsoft.Azure.PowerShell.Cmdlets.Logz.DoNotFormat]
        public string IdentityTenantId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Logz.Models.Api20201001Preview.IIdentityPropertiesInternal)Identity).TenantId; }

        [Microsoft.Azure.PowerShell.Cmdlets.Logz.Origin(Microsoft.Azure.PowerShell.Cmdlets.Logz.PropertyOrigin.Inlined)]
        [Microsoft.Azure.PowerShell.Cmdlets.Logz.DoNotFormat]
        public Microsoft.Azure.PowerShell.Cmdlets.Logz.Support.ManagedIdentityTypes? IdentityType { get => ((Microsoft.Azure.PowerShell.Cmdlets.Logz.Models.Api20201001Preview.IIdentityPropertiesInternal)Identity).Type; set => ((Microsoft.Azure.PowerShell.Cmdlets.Logz.Models.Api20201001Preview.IIdentityPropertiesInternal)Identity).Type = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.Logz.Support.ManagedIdentityTypes)""); }

        [Microsoft.Azure.PowerShell.Cmdlets.Logz.Origin(Microsoft.Azure.PowerShell.Cmdlets.Logz.PropertyOrigin.Inlined)]
        [Microsoft.Azure.PowerShell.Cmdlets.Logz.DoNotFormat]
        public Microsoft.Azure.PowerShell.Cmdlets.Logz.Support.LiftrResourceCategories? LiftrResourceCategory { get => ((Microsoft.Azure.PowerShell.Cmdlets.Logz.Models.Api20201001Preview.IMonitorPropertiesInternal)Property).LiftrResourceCategory; }

        /// <summary>The priority of the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Logz.Origin(Microsoft.Azure.PowerShell.Cmdlets.Logz.PropertyOrigin.Inlined)]
        [Microsoft.Azure.PowerShell.Cmdlets.Logz.DoNotFormat]
        public int? LiftrResourcePreference { get => ((Microsoft.Azure.PowerShell.Cmdlets.Logz.Models.Api20201001Preview.IMonitorPropertiesInternal)Property).LiftrResourcePreference; }

        /// <summary>Backing field for <see cref="Location" /> property.</summary>
        private string _location;

        [Microsoft.Azure.PowerShell.Cmdlets.Logz.Origin(Microsoft.Azure.PowerShell.Cmdlets.Logz.PropertyOrigin.Owned)]
        [Microsoft.Azure.PowerShell.Cmdlets.Logz.FormatTable(Index = 2)]
        public string Location { get => this._location; set => this._location = value; }

        /// <summary>Name of the Logz organization.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Logz.Origin(Microsoft.Azure.PowerShell.Cmdlets.Logz.PropertyOrigin.Inlined)]
        [Microsoft.Azure.PowerShell.Cmdlets.Logz.DoNotFormat]
        public string LogzOrganizationPropertyCompanyName { get => ((Microsoft.Azure.PowerShell.Cmdlets.Logz.Models.Api20201001Preview.IMonitorPropertiesInternal)Property).LogzOrganizationPropertyCompanyName; set => ((Microsoft.Azure.PowerShell.Cmdlets.Logz.Models.Api20201001Preview.IMonitorPropertiesInternal)Property).LogzOrganizationPropertyCompanyName = value ?? null; }

        /// <summary>The Id of the Enterprise App used for Single sign on.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Logz.Origin(Microsoft.Azure.PowerShell.Cmdlets.Logz.PropertyOrigin.Inlined)]
        [Microsoft.Azure.PowerShell.Cmdlets.Logz.DoNotFormat]
        public string LogzOrganizationPropertyEnterpriseAppId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Logz.Models.Api20201001Preview.IMonitorPropertiesInternal)Property).LogzOrganizationPropertyEnterpriseAppId; set => ((Microsoft.Azure.PowerShell.Cmdlets.Logz.Models.Api20201001Preview.IMonitorPropertiesInternal)Property).LogzOrganizationPropertyEnterpriseAppId = value ?? null; }

        /// <summary>Id of the Logz organization.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Logz.Origin(Microsoft.Azure.PowerShell.Cmdlets.Logz.PropertyOrigin.Inlined)]
        [Microsoft.Azure.PowerShell.Cmdlets.Logz.DoNotFormat]
        public string LogzOrganizationPropertyId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Logz.Models.Api20201001Preview.IMonitorPropertiesInternal)Property).LogzOrganizationPropertyId; }

        /// <summary>The login URL specific to this Logz Organization.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Logz.Origin(Microsoft.Azure.PowerShell.Cmdlets.Logz.PropertyOrigin.Inlined)]
        [Microsoft.Azure.PowerShell.Cmdlets.Logz.DoNotFormat]
        public string LogzOrganizationPropertySingleSignOnUrl { get => ((Microsoft.Azure.PowerShell.Cmdlets.Logz.Models.Api20201001Preview.IMonitorPropertiesInternal)Property).LogzOrganizationPropertySingleSignOnUrl; set => ((Microsoft.Azure.PowerShell.Cmdlets.Logz.Models.Api20201001Preview.IMonitorPropertiesInternal)Property).LogzOrganizationPropertySingleSignOnUrl = value ?? null; }

        /// <summary>
        /// Flag specifying the Marketplace Subscription Status of the resource. If payment is not made in time, the resource will
        /// go in Suspended state.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Logz.Origin(Microsoft.Azure.PowerShell.Cmdlets.Logz.PropertyOrigin.Inlined)]
        [Microsoft.Azure.PowerShell.Cmdlets.Logz.DoNotFormat]
        public Microsoft.Azure.PowerShell.Cmdlets.Logz.Support.MarketplaceSubscriptionStatus? MarketplaceSubscriptionStatus { get => ((Microsoft.Azure.PowerShell.Cmdlets.Logz.Models.Api20201001Preview.IMonitorPropertiesInternal)Property).MarketplaceSubscriptionStatus; set => ((Microsoft.Azure.PowerShell.Cmdlets.Logz.Models.Api20201001Preview.IMonitorPropertiesInternal)Property).MarketplaceSubscriptionStatus = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.Logz.Support.MarketplaceSubscriptionStatus)""); }

        /// <summary>Internal Acessors for Id</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Logz.Models.Api20201001Preview.ILogzMonitorResourceInternal.Id { get => this._id; set { {_id = value;} } }

        /// <summary>Internal Acessors for Identity</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Logz.Models.Api20201001Preview.IIdentityProperties Microsoft.Azure.PowerShell.Cmdlets.Logz.Models.Api20201001Preview.ILogzMonitorResourceInternal.Identity { get => (this._identity = this._identity ?? new Microsoft.Azure.PowerShell.Cmdlets.Logz.Models.Api20201001Preview.IdentityProperties()); set { {_identity = value;} } }

        /// <summary>Internal Acessors for IdentityPrincipalId</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Logz.Models.Api20201001Preview.ILogzMonitorResourceInternal.IdentityPrincipalId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Logz.Models.Api20201001Preview.IIdentityPropertiesInternal)Identity).PrincipalId; set => ((Microsoft.Azure.PowerShell.Cmdlets.Logz.Models.Api20201001Preview.IIdentityPropertiesInternal)Identity).PrincipalId = value; }

        /// <summary>Internal Acessors for IdentityTenantId</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Logz.Models.Api20201001Preview.ILogzMonitorResourceInternal.IdentityTenantId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Logz.Models.Api20201001Preview.IIdentityPropertiesInternal)Identity).TenantId; set => ((Microsoft.Azure.PowerShell.Cmdlets.Logz.Models.Api20201001Preview.IIdentityPropertiesInternal)Identity).TenantId = value; }

        /// <summary>Internal Acessors for LiftrResourceCategory</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Logz.Support.LiftrResourceCategories? Microsoft.Azure.PowerShell.Cmdlets.Logz.Models.Api20201001Preview.ILogzMonitorResourceInternal.LiftrResourceCategory { get => ((Microsoft.Azure.PowerShell.Cmdlets.Logz.Models.Api20201001Preview.IMonitorPropertiesInternal)Property).LiftrResourceCategory; set => ((Microsoft.Azure.PowerShell.Cmdlets.Logz.Models.Api20201001Preview.IMonitorPropertiesInternal)Property).LiftrResourceCategory = value; }

        /// <summary>Internal Acessors for LiftrResourcePreference</summary>
        int? Microsoft.Azure.PowerShell.Cmdlets.Logz.Models.Api20201001Preview.ILogzMonitorResourceInternal.LiftrResourcePreference { get => ((Microsoft.Azure.PowerShell.Cmdlets.Logz.Models.Api20201001Preview.IMonitorPropertiesInternal)Property).LiftrResourcePreference; set => ((Microsoft.Azure.PowerShell.Cmdlets.Logz.Models.Api20201001Preview.IMonitorPropertiesInternal)Property).LiftrResourcePreference = value; }

        /// <summary>Internal Acessors for LogzOrganizationProperty</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Logz.Models.Api20201001Preview.ILogzOrganizationProperties Microsoft.Azure.PowerShell.Cmdlets.Logz.Models.Api20201001Preview.ILogzMonitorResourceInternal.LogzOrganizationProperty { get => ((Microsoft.Azure.PowerShell.Cmdlets.Logz.Models.Api20201001Preview.IMonitorPropertiesInternal)Property).LogzOrganizationProperty; set => ((Microsoft.Azure.PowerShell.Cmdlets.Logz.Models.Api20201001Preview.IMonitorPropertiesInternal)Property).LogzOrganizationProperty = value; }

        /// <summary>Internal Acessors for LogzOrganizationPropertyId</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Logz.Models.Api20201001Preview.ILogzMonitorResourceInternal.LogzOrganizationPropertyId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Logz.Models.Api20201001Preview.IMonitorPropertiesInternal)Property).LogzOrganizationPropertyId; set => ((Microsoft.Azure.PowerShell.Cmdlets.Logz.Models.Api20201001Preview.IMonitorPropertiesInternal)Property).LogzOrganizationPropertyId = value; }

        /// <summary>Internal Acessors for Name</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Logz.Models.Api20201001Preview.ILogzMonitorResourceInternal.Name { get => this._name; set { {_name = value;} } }

        /// <summary>Internal Acessors for PlanData</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Logz.Models.Api20201001Preview.IPlanData Microsoft.Azure.PowerShell.Cmdlets.Logz.Models.Api20201001Preview.ILogzMonitorResourceInternal.PlanData { get => ((Microsoft.Azure.PowerShell.Cmdlets.Logz.Models.Api20201001Preview.IMonitorPropertiesInternal)Property).PlanData; set => ((Microsoft.Azure.PowerShell.Cmdlets.Logz.Models.Api20201001Preview.IMonitorPropertiesInternal)Property).PlanData = value; }

        /// <summary>Internal Acessors for Property</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Logz.Models.Api20201001Preview.IMonitorProperties Microsoft.Azure.PowerShell.Cmdlets.Logz.Models.Api20201001Preview.ILogzMonitorResourceInternal.Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.Logz.Models.Api20201001Preview.MonitorProperties()); set { {_property = value;} } }

        /// <summary>Internal Acessors for ProvisioningState</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Logz.Support.ProvisioningState? Microsoft.Azure.PowerShell.Cmdlets.Logz.Models.Api20201001Preview.ILogzMonitorResourceInternal.ProvisioningState { get => ((Microsoft.Azure.PowerShell.Cmdlets.Logz.Models.Api20201001Preview.IMonitorPropertiesInternal)Property).ProvisioningState; set => ((Microsoft.Azure.PowerShell.Cmdlets.Logz.Models.Api20201001Preview.IMonitorPropertiesInternal)Property).ProvisioningState = value; }

        /// <summary>Internal Acessors for SystemData</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Logz.Models.Api20.ISystemData Microsoft.Azure.PowerShell.Cmdlets.Logz.Models.Api20201001Preview.ILogzMonitorResourceInternal.SystemData { get => (this._systemData = this._systemData ?? new Microsoft.Azure.PowerShell.Cmdlets.Logz.Models.Api20.SystemData()); set { {_systemData = value;} } }

        /// <summary>Internal Acessors for Type</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Logz.Models.Api20201001Preview.ILogzMonitorResourceInternal.Type { get => this._type; set { {_type = value;} } }

        /// <summary>Internal Acessors for UserInfo</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Logz.Models.Api20201001Preview.IUserInfo Microsoft.Azure.PowerShell.Cmdlets.Logz.Models.Api20201001Preview.ILogzMonitorResourceInternal.UserInfo { get => ((Microsoft.Azure.PowerShell.Cmdlets.Logz.Models.Api20201001Preview.IMonitorPropertiesInternal)Property).UserInfo; set => ((Microsoft.Azure.PowerShell.Cmdlets.Logz.Models.Api20201001Preview.IMonitorPropertiesInternal)Property).UserInfo = value; }

        /// <summary>Flag specifying if the resource monitoring is enabled or disabled.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Logz.Origin(Microsoft.Azure.PowerShell.Cmdlets.Logz.PropertyOrigin.Inlined)]
        [Microsoft.Azure.PowerShell.Cmdlets.Logz.FormatTable(Index = 1)]
        public Microsoft.Azure.PowerShell.Cmdlets.Logz.Support.MonitoringStatus? MonitoringStatus { get => ((Microsoft.Azure.PowerShell.Cmdlets.Logz.Models.Api20201001Preview.IMonitorPropertiesInternal)Property).MonitoringStatus; set => ((Microsoft.Azure.PowerShell.Cmdlets.Logz.Models.Api20201001Preview.IMonitorPropertiesInternal)Property).MonitoringStatus = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.Logz.Support.MonitoringStatus)""); }

        /// <summary>Backing field for <see cref="Name" /> property.</summary>
        private string _name;

        /// <summary>Name of the monitor resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Logz.Origin(Microsoft.Azure.PowerShell.Cmdlets.Logz.PropertyOrigin.Owned)]
        [Microsoft.Azure.PowerShell.Cmdlets.Logz.FormatTable(Index = 0)]
        public string Name { get => this._name; }

        /// <summary>different billing cycles like MONTHLY/WEEKLY. this could be enum</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Logz.Origin(Microsoft.Azure.PowerShell.Cmdlets.Logz.PropertyOrigin.Inlined)]
        [Microsoft.Azure.PowerShell.Cmdlets.Logz.DoNotFormat]
        public string PlanDataBillingCycle { get => ((Microsoft.Azure.PowerShell.Cmdlets.Logz.Models.Api20201001Preview.IMonitorPropertiesInternal)Property).PlanDataBillingCycle; set => ((Microsoft.Azure.PowerShell.Cmdlets.Logz.Models.Api20201001Preview.IMonitorPropertiesInternal)Property).PlanDataBillingCycle = value ?? null; }

        /// <summary>date when plan was applied</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Logz.Origin(Microsoft.Azure.PowerShell.Cmdlets.Logz.PropertyOrigin.Inlined)]
        [Microsoft.Azure.PowerShell.Cmdlets.Logz.DoNotFormat]
        public global::System.DateTime? PlanDataEffectiveDate { get => ((Microsoft.Azure.PowerShell.Cmdlets.Logz.Models.Api20201001Preview.IMonitorPropertiesInternal)Property).PlanDataEffectiveDate; set => ((Microsoft.Azure.PowerShell.Cmdlets.Logz.Models.Api20201001Preview.IMonitorPropertiesInternal)Property).PlanDataEffectiveDate = value ?? default(global::System.DateTime); }

        /// <summary>plan id as published by Logz</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Logz.Origin(Microsoft.Azure.PowerShell.Cmdlets.Logz.PropertyOrigin.Inlined)]
        [Microsoft.Azure.PowerShell.Cmdlets.Logz.DoNotFormat]
        public string PlanDataPlanDetail { get => ((Microsoft.Azure.PowerShell.Cmdlets.Logz.Models.Api20201001Preview.IMonitorPropertiesInternal)Property).PlanDataPlanDetail; set => ((Microsoft.Azure.PowerShell.Cmdlets.Logz.Models.Api20201001Preview.IMonitorPropertiesInternal)Property).PlanDataPlanDetail = value ?? null; }

        /// <summary>different usage type like PAYG/COMMITTED. this could be enum</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Logz.Origin(Microsoft.Azure.PowerShell.Cmdlets.Logz.PropertyOrigin.Inlined)]
        [Microsoft.Azure.PowerShell.Cmdlets.Logz.DoNotFormat]
        public string PlanDataUsageType { get => ((Microsoft.Azure.PowerShell.Cmdlets.Logz.Models.Api20201001Preview.IMonitorPropertiesInternal)Property).PlanDataUsageType; set => ((Microsoft.Azure.PowerShell.Cmdlets.Logz.Models.Api20201001Preview.IMonitorPropertiesInternal)Property).PlanDataUsageType = value ?? null; }

        /// <summary>Backing field for <see cref="Property" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Logz.Models.Api20201001Preview.IMonitorProperties _property;

        /// <summary>Properties specific to the monitor resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Logz.Origin(Microsoft.Azure.PowerShell.Cmdlets.Logz.PropertyOrigin.Owned)]
        [Microsoft.Azure.PowerShell.Cmdlets.Logz.DoNotFormat]
        internal Microsoft.Azure.PowerShell.Cmdlets.Logz.Models.Api20201001Preview.IMonitorProperties Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.Logz.Models.Api20201001Preview.MonitorProperties()); set => this._property = value; }

        /// <summary>Flag specifying if the resource provisioning state as tracked by ARM.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Logz.Origin(Microsoft.Azure.PowerShell.Cmdlets.Logz.PropertyOrigin.Inlined)]
        [Microsoft.Azure.PowerShell.Cmdlets.Logz.DoNotFormat]
        public Microsoft.Azure.PowerShell.Cmdlets.Logz.Support.ProvisioningState? ProvisioningState { get => ((Microsoft.Azure.PowerShell.Cmdlets.Logz.Models.Api20201001Preview.IMonitorPropertiesInternal)Property).ProvisioningState; }

        /// <summary>Gets the resource group name</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Logz.Origin(Microsoft.Azure.PowerShell.Cmdlets.Logz.PropertyOrigin.Owned)]
        public string ResourceGroupName { get => (new global::System.Text.RegularExpressions.Regex("^/subscriptions/(?<subscriptionId>[^/]+)/resourceGroups/(?<resourceGroupName>[^/]+)/providers/").Match(this.Id).Success ? new global::System.Text.RegularExpressions.Regex("^/subscriptions/(?<subscriptionId>[^/]+)/resourceGroups/(?<resourceGroupName>[^/]+)/providers/").Match(this.Id).Groups["resourceGroupName"].Value : null); }

        /// <summary>Backing field for <see cref="SystemData" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Logz.Models.Api20.ISystemData _systemData;

        /// <summary>The system metadata relating to this resource</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Logz.Origin(Microsoft.Azure.PowerShell.Cmdlets.Logz.PropertyOrigin.Owned)]
        [Microsoft.Azure.PowerShell.Cmdlets.Logz.DoNotFormat]
        internal Microsoft.Azure.PowerShell.Cmdlets.Logz.Models.Api20.ISystemData SystemData { get => (this._systemData = this._systemData ?? new Microsoft.Azure.PowerShell.Cmdlets.Logz.Models.Api20.SystemData()); }

        /// <summary>The timestamp of resource creation (UTC).</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Logz.Origin(Microsoft.Azure.PowerShell.Cmdlets.Logz.PropertyOrigin.Inlined)]
        [Microsoft.Azure.PowerShell.Cmdlets.Logz.DoNotFormat]
        public global::System.DateTime? SystemDataCreatedAt { get => ((Microsoft.Azure.PowerShell.Cmdlets.Logz.Models.Api20.ISystemDataInternal)SystemData).CreatedAt; set => ((Microsoft.Azure.PowerShell.Cmdlets.Logz.Models.Api20.ISystemDataInternal)SystemData).CreatedAt = value ?? default(global::System.DateTime); }

        /// <summary>The identity that created the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Logz.Origin(Microsoft.Azure.PowerShell.Cmdlets.Logz.PropertyOrigin.Inlined)]
        [Microsoft.Azure.PowerShell.Cmdlets.Logz.DoNotFormat]
        public string SystemDataCreatedBy { get => ((Microsoft.Azure.PowerShell.Cmdlets.Logz.Models.Api20.ISystemDataInternal)SystemData).CreatedBy; set => ((Microsoft.Azure.PowerShell.Cmdlets.Logz.Models.Api20.ISystemDataInternal)SystemData).CreatedBy = value ?? null; }

        /// <summary>The type of identity that created the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Logz.Origin(Microsoft.Azure.PowerShell.Cmdlets.Logz.PropertyOrigin.Inlined)]
        [Microsoft.Azure.PowerShell.Cmdlets.Logz.DoNotFormat]
        public Microsoft.Azure.PowerShell.Cmdlets.Logz.Support.CreatedByType? SystemDataCreatedByType { get => ((Microsoft.Azure.PowerShell.Cmdlets.Logz.Models.Api20.ISystemDataInternal)SystemData).CreatedByType; set => ((Microsoft.Azure.PowerShell.Cmdlets.Logz.Models.Api20.ISystemDataInternal)SystemData).CreatedByType = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.Logz.Support.CreatedByType)""); }

        /// <summary>The timestamp of resource last modification (UTC)</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Logz.Origin(Microsoft.Azure.PowerShell.Cmdlets.Logz.PropertyOrigin.Inlined)]
        [Microsoft.Azure.PowerShell.Cmdlets.Logz.DoNotFormat]
        public global::System.DateTime? SystemDataLastModifiedAt { get => ((Microsoft.Azure.PowerShell.Cmdlets.Logz.Models.Api20.ISystemDataInternal)SystemData).LastModifiedAt; set => ((Microsoft.Azure.PowerShell.Cmdlets.Logz.Models.Api20.ISystemDataInternal)SystemData).LastModifiedAt = value ?? default(global::System.DateTime); }

        /// <summary>The identity that last modified the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Logz.Origin(Microsoft.Azure.PowerShell.Cmdlets.Logz.PropertyOrigin.Inlined)]
        [Microsoft.Azure.PowerShell.Cmdlets.Logz.DoNotFormat]
        public string SystemDataLastModifiedBy { get => ((Microsoft.Azure.PowerShell.Cmdlets.Logz.Models.Api20.ISystemDataInternal)SystemData).LastModifiedBy; set => ((Microsoft.Azure.PowerShell.Cmdlets.Logz.Models.Api20.ISystemDataInternal)SystemData).LastModifiedBy = value ?? null; }

        /// <summary>The type of identity that last modified the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Logz.Origin(Microsoft.Azure.PowerShell.Cmdlets.Logz.PropertyOrigin.Inlined)]
        [Microsoft.Azure.PowerShell.Cmdlets.Logz.DoNotFormat]
        public Microsoft.Azure.PowerShell.Cmdlets.Logz.Support.CreatedByType? SystemDataLastModifiedByType { get => ((Microsoft.Azure.PowerShell.Cmdlets.Logz.Models.Api20.ISystemDataInternal)SystemData).LastModifiedByType; set => ((Microsoft.Azure.PowerShell.Cmdlets.Logz.Models.Api20.ISystemDataInternal)SystemData).LastModifiedByType = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.Logz.Support.CreatedByType)""); }

        /// <summary>Backing field for <see cref="Tag" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Logz.Models.Api20201001Preview.ILogzMonitorResourceTags _tag;

        /// <summary>Dictionary of <string></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Logz.Origin(Microsoft.Azure.PowerShell.Cmdlets.Logz.PropertyOrigin.Owned)]
        [Microsoft.Azure.PowerShell.Cmdlets.Logz.DoNotFormat]
        public Microsoft.Azure.PowerShell.Cmdlets.Logz.Models.Api20201001Preview.ILogzMonitorResourceTags Tag { get => (this._tag = this._tag ?? new Microsoft.Azure.PowerShell.Cmdlets.Logz.Models.Api20201001Preview.LogzMonitorResourceTags()); set => this._tag = value; }

        /// <summary>Backing field for <see cref="Type" /> property.</summary>
        private string _type;

        /// <summary>The type of the monitor resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Logz.Origin(Microsoft.Azure.PowerShell.Cmdlets.Logz.PropertyOrigin.Owned)]
        [Microsoft.Azure.PowerShell.Cmdlets.Logz.DoNotFormat]
        public string Type { get => this._type; }

        /// <summary>Email of the user used by Logz for contacting them if needed</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Logz.Origin(Microsoft.Azure.PowerShell.Cmdlets.Logz.PropertyOrigin.Inlined)]
        [Microsoft.Azure.PowerShell.Cmdlets.Logz.DoNotFormat]
        public string UserInfoEmailAddress { get => ((Microsoft.Azure.PowerShell.Cmdlets.Logz.Models.Api20201001Preview.IMonitorPropertiesInternal)Property).UserInfoEmailAddress; set => ((Microsoft.Azure.PowerShell.Cmdlets.Logz.Models.Api20201001Preview.IMonitorPropertiesInternal)Property).UserInfoEmailAddress = value ?? null; }

        /// <summary>First Name of the user</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Logz.Origin(Microsoft.Azure.PowerShell.Cmdlets.Logz.PropertyOrigin.Inlined)]
        [Microsoft.Azure.PowerShell.Cmdlets.Logz.DoNotFormat]
        public string UserInfoFirstName { get => ((Microsoft.Azure.PowerShell.Cmdlets.Logz.Models.Api20201001Preview.IMonitorPropertiesInternal)Property).UserInfoFirstName; set => ((Microsoft.Azure.PowerShell.Cmdlets.Logz.Models.Api20201001Preview.IMonitorPropertiesInternal)Property).UserInfoFirstName = value ?? null; }

        /// <summary>Last Name of the user</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Logz.Origin(Microsoft.Azure.PowerShell.Cmdlets.Logz.PropertyOrigin.Inlined)]
        [Microsoft.Azure.PowerShell.Cmdlets.Logz.DoNotFormat]
        public string UserInfoLastName { get => ((Microsoft.Azure.PowerShell.Cmdlets.Logz.Models.Api20201001Preview.IMonitorPropertiesInternal)Property).UserInfoLastName; set => ((Microsoft.Azure.PowerShell.Cmdlets.Logz.Models.Api20201001Preview.IMonitorPropertiesInternal)Property).UserInfoLastName = value ?? null; }

        /// <summary>Phone number of the user used by Logz for contacting them if needed</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Logz.Origin(Microsoft.Azure.PowerShell.Cmdlets.Logz.PropertyOrigin.Inlined)]
        [Microsoft.Azure.PowerShell.Cmdlets.Logz.DoNotFormat]
        public string UserInfoPhoneNumber { get => ((Microsoft.Azure.PowerShell.Cmdlets.Logz.Models.Api20201001Preview.IMonitorPropertiesInternal)Property).UserInfoPhoneNumber; set => ((Microsoft.Azure.PowerShell.Cmdlets.Logz.Models.Api20201001Preview.IMonitorPropertiesInternal)Property).UserInfoPhoneNumber = value ?? null; }

        /// <summary>Creates an new <see cref="LogzMonitorResource" /> instance.</summary>
        public LogzMonitorResource()
        {

        }
    }
    public partial interface ILogzMonitorResource :
        Microsoft.Azure.PowerShell.Cmdlets.Logz.Runtime.IJsonSerializable
    {
        /// <summary>ARM id of the monitor resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Logz.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"ARM id of the monitor resource.",
        SerializedName = @"id",
        PossibleTypes = new [] { typeof(string) })]
        string Id { get;  }
        /// <summary>The identity ID.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Logz.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The identity ID.",
        SerializedName = @"principalId",
        PossibleTypes = new [] { typeof(string) })]
        string IdentityPrincipalId { get;  }
        /// <summary>The tenant ID of resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Logz.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The tenant ID of resource.",
        SerializedName = @"tenantId",
        PossibleTypes = new [] { typeof(string) })]
        string IdentityTenantId { get;  }

        [Microsoft.Azure.PowerShell.Cmdlets.Logz.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"",
        SerializedName = @"type",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Logz.Support.ManagedIdentityTypes) })]
        Microsoft.Azure.PowerShell.Cmdlets.Logz.Support.ManagedIdentityTypes? IdentityType { get; set; }

        [Microsoft.Azure.PowerShell.Cmdlets.Logz.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"",
        SerializedName = @"liftrResourceCategory",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Logz.Support.LiftrResourceCategories) })]
        Microsoft.Azure.PowerShell.Cmdlets.Logz.Support.LiftrResourceCategories? LiftrResourceCategory { get;  }
        /// <summary>The priority of the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Logz.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The priority of the resource.",
        SerializedName = @"liftrResourcePreference",
        PossibleTypes = new [] { typeof(int) })]
        int? LiftrResourcePreference { get;  }

        [Microsoft.Azure.PowerShell.Cmdlets.Logz.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"",
        SerializedName = @"location",
        PossibleTypes = new [] { typeof(string) })]
        string Location { get; set; }
        /// <summary>Name of the Logz organization.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Logz.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Name of the Logz organization.",
        SerializedName = @"companyName",
        PossibleTypes = new [] { typeof(string) })]
        string LogzOrganizationPropertyCompanyName { get; set; }
        /// <summary>The Id of the Enterprise App used for Single sign on.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Logz.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The Id of the Enterprise App used for Single sign on.",
        SerializedName = @"enterpriseAppId",
        PossibleTypes = new [] { typeof(string) })]
        string LogzOrganizationPropertyEnterpriseAppId { get; set; }
        /// <summary>Id of the Logz organization.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Logz.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Id of the Logz organization.",
        SerializedName = @"id",
        PossibleTypes = new [] { typeof(string) })]
        string LogzOrganizationPropertyId { get;  }
        /// <summary>The login URL specific to this Logz Organization.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Logz.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The login URL specific to this Logz Organization.",
        SerializedName = @"singleSignOnUrl",
        PossibleTypes = new [] { typeof(string) })]
        string LogzOrganizationPropertySingleSignOnUrl { get; set; }
        /// <summary>
        /// Flag specifying the Marketplace Subscription Status of the resource. If payment is not made in time, the resource will
        /// go in Suspended state.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Logz.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Flag specifying the Marketplace Subscription Status of the resource. If payment is not made in time, the resource will go in Suspended state.",
        SerializedName = @"marketplaceSubscriptionStatus",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Logz.Support.MarketplaceSubscriptionStatus) })]
        Microsoft.Azure.PowerShell.Cmdlets.Logz.Support.MarketplaceSubscriptionStatus? MarketplaceSubscriptionStatus { get; set; }
        /// <summary>Flag specifying if the resource monitoring is enabled or disabled.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Logz.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Flag specifying if the resource monitoring is enabled or disabled.",
        SerializedName = @"monitoringStatus",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Logz.Support.MonitoringStatus) })]
        Microsoft.Azure.PowerShell.Cmdlets.Logz.Support.MonitoringStatus? MonitoringStatus { get; set; }
        /// <summary>Name of the monitor resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Logz.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Name of the monitor resource.",
        SerializedName = @"name",
        PossibleTypes = new [] { typeof(string) })]
        string Name { get;  }
        /// <summary>different billing cycles like MONTHLY/WEEKLY. this could be enum</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Logz.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"different billing cycles like MONTHLY/WEEKLY. this could be enum",
        SerializedName = @"billingCycle",
        PossibleTypes = new [] { typeof(string) })]
        string PlanDataBillingCycle { get; set; }
        /// <summary>date when plan was applied</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Logz.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"date when plan was applied",
        SerializedName = @"effectiveDate",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? PlanDataEffectiveDate { get; set; }
        /// <summary>plan id as published by Logz</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Logz.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"plan id as published by Logz",
        SerializedName = @"planDetails",
        PossibleTypes = new [] { typeof(string) })]
        string PlanDataPlanDetail { get; set; }
        /// <summary>different usage type like PAYG/COMMITTED. this could be enum</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Logz.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"different usage type like PAYG/COMMITTED. this could be enum",
        SerializedName = @"usageType",
        PossibleTypes = new [] { typeof(string) })]
        string PlanDataUsageType { get; set; }
        /// <summary>Flag specifying if the resource provisioning state as tracked by ARM.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Logz.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Flag specifying if the resource provisioning state as tracked by ARM.",
        SerializedName = @"provisioningState",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Logz.Support.ProvisioningState) })]
        Microsoft.Azure.PowerShell.Cmdlets.Logz.Support.ProvisioningState? ProvisioningState { get;  }
        /// <summary>The timestamp of resource creation (UTC).</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Logz.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The timestamp of resource creation (UTC).",
        SerializedName = @"createdAt",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? SystemDataCreatedAt { get; set; }
        /// <summary>The identity that created the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Logz.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The identity that created the resource.",
        SerializedName = @"createdBy",
        PossibleTypes = new [] { typeof(string) })]
        string SystemDataCreatedBy { get; set; }
        /// <summary>The type of identity that created the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Logz.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The type of identity that created the resource.",
        SerializedName = @"createdByType",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Logz.Support.CreatedByType) })]
        Microsoft.Azure.PowerShell.Cmdlets.Logz.Support.CreatedByType? SystemDataCreatedByType { get; set; }
        /// <summary>The timestamp of resource last modification (UTC)</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Logz.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The timestamp of resource last modification (UTC)",
        SerializedName = @"lastModifiedAt",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? SystemDataLastModifiedAt { get; set; }
        /// <summary>The identity that last modified the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Logz.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The identity that last modified the resource.",
        SerializedName = @"lastModifiedBy",
        PossibleTypes = new [] { typeof(string) })]
        string SystemDataLastModifiedBy { get; set; }
        /// <summary>The type of identity that last modified the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Logz.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The type of identity that last modified the resource.",
        SerializedName = @"lastModifiedByType",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Logz.Support.CreatedByType) })]
        Microsoft.Azure.PowerShell.Cmdlets.Logz.Support.CreatedByType? SystemDataLastModifiedByType { get; set; }
        /// <summary>Dictionary of <string></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Logz.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Dictionary of <string>",
        SerializedName = @"tags",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Logz.Models.Api20201001Preview.ILogzMonitorResourceTags) })]
        Microsoft.Azure.PowerShell.Cmdlets.Logz.Models.Api20201001Preview.ILogzMonitorResourceTags Tag { get; set; }
        /// <summary>The type of the monitor resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Logz.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The type of the monitor resource.",
        SerializedName = @"type",
        PossibleTypes = new [] { typeof(string) })]
        string Type { get;  }
        /// <summary>Email of the user used by Logz for contacting them if needed</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Logz.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Email of the user used by Logz for contacting them if needed",
        SerializedName = @"emailAddress",
        PossibleTypes = new [] { typeof(string) })]
        string UserInfoEmailAddress { get; set; }
        /// <summary>First Name of the user</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Logz.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"First Name of the user",
        SerializedName = @"firstName",
        PossibleTypes = new [] { typeof(string) })]
        string UserInfoFirstName { get; set; }
        /// <summary>Last Name of the user</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Logz.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Last Name of the user",
        SerializedName = @"lastName",
        PossibleTypes = new [] { typeof(string) })]
        string UserInfoLastName { get; set; }
        /// <summary>Phone number of the user used by Logz for contacting them if needed</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Logz.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Phone number of the user used by Logz for contacting them if needed",
        SerializedName = @"phoneNumber",
        PossibleTypes = new [] { typeof(string) })]
        string UserInfoPhoneNumber { get; set; }

    }
    internal partial interface ILogzMonitorResourceInternal

    {
        /// <summary>ARM id of the monitor resource.</summary>
        string Id { get; set; }

        Microsoft.Azure.PowerShell.Cmdlets.Logz.Models.Api20201001Preview.IIdentityProperties Identity { get; set; }
        /// <summary>The identity ID.</summary>
        string IdentityPrincipalId { get; set; }
        /// <summary>The tenant ID of resource.</summary>
        string IdentityTenantId { get; set; }

        Microsoft.Azure.PowerShell.Cmdlets.Logz.Support.ManagedIdentityTypes? IdentityType { get; set; }

        Microsoft.Azure.PowerShell.Cmdlets.Logz.Support.LiftrResourceCategories? LiftrResourceCategory { get; set; }
        /// <summary>The priority of the resource.</summary>
        int? LiftrResourcePreference { get; set; }

        string Location { get; set; }

        Microsoft.Azure.PowerShell.Cmdlets.Logz.Models.Api20201001Preview.ILogzOrganizationProperties LogzOrganizationProperty { get; set; }
        /// <summary>Name of the Logz organization.</summary>
        string LogzOrganizationPropertyCompanyName { get; set; }
        /// <summary>The Id of the Enterprise App used for Single sign on.</summary>
        string LogzOrganizationPropertyEnterpriseAppId { get; set; }
        /// <summary>Id of the Logz organization.</summary>
        string LogzOrganizationPropertyId { get; set; }
        /// <summary>The login URL specific to this Logz Organization.</summary>
        string LogzOrganizationPropertySingleSignOnUrl { get; set; }
        /// <summary>
        /// Flag specifying the Marketplace Subscription Status of the resource. If payment is not made in time, the resource will
        /// go in Suspended state.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Logz.Support.MarketplaceSubscriptionStatus? MarketplaceSubscriptionStatus { get; set; }
        /// <summary>Flag specifying if the resource monitoring is enabled or disabled.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Logz.Support.MonitoringStatus? MonitoringStatus { get; set; }
        /// <summary>Name of the monitor resource.</summary>
        string Name { get; set; }

        Microsoft.Azure.PowerShell.Cmdlets.Logz.Models.Api20201001Preview.IPlanData PlanData { get; set; }
        /// <summary>different billing cycles like MONTHLY/WEEKLY. this could be enum</summary>
        string PlanDataBillingCycle { get; set; }
        /// <summary>date when plan was applied</summary>
        global::System.DateTime? PlanDataEffectiveDate { get; set; }
        /// <summary>plan id as published by Logz</summary>
        string PlanDataPlanDetail { get; set; }
        /// <summary>different usage type like PAYG/COMMITTED. this could be enum</summary>
        string PlanDataUsageType { get; set; }
        /// <summary>Properties specific to the monitor resource.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Logz.Models.Api20201001Preview.IMonitorProperties Property { get; set; }
        /// <summary>Flag specifying if the resource provisioning state as tracked by ARM.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Logz.Support.ProvisioningState? ProvisioningState { get; set; }
        /// <summary>The system metadata relating to this resource</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Logz.Models.Api20.ISystemData SystemData { get; set; }
        /// <summary>The timestamp of resource creation (UTC).</summary>
        global::System.DateTime? SystemDataCreatedAt { get; set; }
        /// <summary>The identity that created the resource.</summary>
        string SystemDataCreatedBy { get; set; }
        /// <summary>The type of identity that created the resource.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Logz.Support.CreatedByType? SystemDataCreatedByType { get; set; }
        /// <summary>The timestamp of resource last modification (UTC)</summary>
        global::System.DateTime? SystemDataLastModifiedAt { get; set; }
        /// <summary>The identity that last modified the resource.</summary>
        string SystemDataLastModifiedBy { get; set; }
        /// <summary>The type of identity that last modified the resource.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Logz.Support.CreatedByType? SystemDataLastModifiedByType { get; set; }
        /// <summary>Dictionary of <string></summary>
        Microsoft.Azure.PowerShell.Cmdlets.Logz.Models.Api20201001Preview.ILogzMonitorResourceTags Tag { get; set; }
        /// <summary>The type of the monitor resource.</summary>
        string Type { get; set; }

        Microsoft.Azure.PowerShell.Cmdlets.Logz.Models.Api20201001Preview.IUserInfo UserInfo { get; set; }
        /// <summary>Email of the user used by Logz for contacting them if needed</summary>
        string UserInfoEmailAddress { get; set; }
        /// <summary>First Name of the user</summary>
        string UserInfoFirstName { get; set; }
        /// <summary>Last Name of the user</summary>
        string UserInfoLastName { get; set; }
        /// <summary>Phone number of the user used by Logz for contacting them if needed</summary>
        string UserInfoPhoneNumber { get; set; }

    }
}