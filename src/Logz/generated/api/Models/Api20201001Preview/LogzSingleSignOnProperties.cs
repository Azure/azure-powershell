// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Logz.Models.Api20201001Preview
{
    using static Microsoft.Azure.PowerShell.Cmdlets.Logz.Runtime.Extensions;

    public partial class LogzSingleSignOnProperties :
        Microsoft.Azure.PowerShell.Cmdlets.Logz.Models.Api20201001Preview.ILogzSingleSignOnProperties,
        Microsoft.Azure.PowerShell.Cmdlets.Logz.Models.Api20201001Preview.ILogzSingleSignOnPropertiesInternal
    {

        /// <summary>Backing field for <see cref="EnterpriseAppId" /> property.</summary>
        private string _enterpriseAppId;

        /// <summary>The Id of the Enterprise App used for Single sign-on.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Logz.Origin(Microsoft.Azure.PowerShell.Cmdlets.Logz.PropertyOrigin.Owned)]
        public string EnterpriseAppId { get => this._enterpriseAppId; set => this._enterpriseAppId = value; }

        /// <summary>Internal Acessors for ProvisioningState</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Logz.Support.ProvisioningState? Microsoft.Azure.PowerShell.Cmdlets.Logz.Models.Api20201001Preview.ILogzSingleSignOnPropertiesInternal.ProvisioningState { get => this._provisioningState; set { {_provisioningState = value;} } }

        /// <summary>Backing field for <see cref="ProvisioningState" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Logz.Support.ProvisioningState? _provisioningState;

        /// <summary>Flag specifying if the resource provisioning state as tracked by ARM.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Logz.Origin(Microsoft.Azure.PowerShell.Cmdlets.Logz.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.Logz.Support.ProvisioningState? ProvisioningState { get => this._provisioningState; }

        /// <summary>Backing field for <see cref="SingleSignOnState" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Logz.Support.SingleSignOnStates? _singleSignOnState;

        /// <summary>Various states of the SSO resource</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Logz.Origin(Microsoft.Azure.PowerShell.Cmdlets.Logz.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.Logz.Support.SingleSignOnStates? SingleSignOnState { get => this._singleSignOnState; set => this._singleSignOnState = value; }

        /// <summary>Backing field for <see cref="SingleSignOnUrl" /> property.</summary>
        private string _singleSignOnUrl;

        /// <summary>The login URL specific to this Logz Organization.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Logz.Origin(Microsoft.Azure.PowerShell.Cmdlets.Logz.PropertyOrigin.Owned)]
        public string SingleSignOnUrl { get => this._singleSignOnUrl; set => this._singleSignOnUrl = value; }

        /// <summary>Creates an new <see cref="LogzSingleSignOnProperties" /> instance.</summary>
        public LogzSingleSignOnProperties()
        {

        }
    }
    public partial interface ILogzSingleSignOnProperties :
        Microsoft.Azure.PowerShell.Cmdlets.Logz.Runtime.IJsonSerializable
    {
        /// <summary>The Id of the Enterprise App used for Single sign-on.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Logz.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The Id of the Enterprise App used for Single sign-on.",
        SerializedName = @"enterpriseAppId",
        PossibleTypes = new [] { typeof(string) })]
        string EnterpriseAppId { get; set; }
        /// <summary>Flag specifying if the resource provisioning state as tracked by ARM.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Logz.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Flag specifying if the resource provisioning state as tracked by ARM.",
        SerializedName = @"provisioningState",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Logz.Support.ProvisioningState) })]
        Microsoft.Azure.PowerShell.Cmdlets.Logz.Support.ProvisioningState? ProvisioningState { get;  }
        /// <summary>Various states of the SSO resource</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Logz.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Various states of the SSO resource",
        SerializedName = @"singleSignOnState",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Logz.Support.SingleSignOnStates) })]
        Microsoft.Azure.PowerShell.Cmdlets.Logz.Support.SingleSignOnStates? SingleSignOnState { get; set; }
        /// <summary>The login URL specific to this Logz Organization.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Logz.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The login URL specific to this Logz Organization.",
        SerializedName = @"singleSignOnUrl",
        PossibleTypes = new [] { typeof(string) })]
        string SingleSignOnUrl { get; set; }

    }
    internal partial interface ILogzSingleSignOnPropertiesInternal

    {
        /// <summary>The Id of the Enterprise App used for Single sign-on.</summary>
        string EnterpriseAppId { get; set; }
        /// <summary>Flag specifying if the resource provisioning state as tracked by ARM.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Logz.Support.ProvisioningState? ProvisioningState { get; set; }
        /// <summary>Various states of the SSO resource</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Logz.Support.SingleSignOnStates? SingleSignOnState { get; set; }
        /// <summary>The login URL specific to this Logz Organization.</summary>
        string SingleSignOnUrl { get; set; }

    }
}