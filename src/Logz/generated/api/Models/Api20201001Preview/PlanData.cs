// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Logz.Models.Api20201001Preview
{
    using static Microsoft.Azure.PowerShell.Cmdlets.Logz.Runtime.Extensions;

    public partial class PlanData :
        Microsoft.Azure.PowerShell.Cmdlets.Logz.Models.Api20201001Preview.IPlanData,
        Microsoft.Azure.PowerShell.Cmdlets.Logz.Models.Api20201001Preview.IPlanDataInternal
    {

        /// <summary>Backing field for <see cref="BillingCycle" /> property.</summary>
        private string _billingCycle;

        /// <summary>different billing cycles like MONTHLY/WEEKLY. this could be enum</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Logz.Origin(Microsoft.Azure.PowerShell.Cmdlets.Logz.PropertyOrigin.Owned)]
        public string BillingCycle { get => this._billingCycle; set => this._billingCycle = value; }

        /// <summary>Backing field for <see cref="EffectiveDate" /> property.</summary>
        private global::System.DateTime? _effectiveDate;

        /// <summary>date when plan was applied</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Logz.Origin(Microsoft.Azure.PowerShell.Cmdlets.Logz.PropertyOrigin.Owned)]
        public global::System.DateTime? EffectiveDate { get => this._effectiveDate; set => this._effectiveDate = value; }

        /// <summary>Backing field for <see cref="PlanDetail" /> property.</summary>
        private string _planDetail;

        /// <summary>plan id as published by Logz</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Logz.Origin(Microsoft.Azure.PowerShell.Cmdlets.Logz.PropertyOrigin.Owned)]
        public string PlanDetail { get => this._planDetail; set => this._planDetail = value; }

        /// <summary>Backing field for <see cref="UsageType" /> property.</summary>
        private string _usageType;

        /// <summary>different usage type like PAYG/COMMITTED. this could be enum</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Logz.Origin(Microsoft.Azure.PowerShell.Cmdlets.Logz.PropertyOrigin.Owned)]
        public string UsageType { get => this._usageType; set => this._usageType = value; }

        /// <summary>Creates an new <see cref="PlanData" /> instance.</summary>
        public PlanData()
        {

        }
    }
    public partial interface IPlanData :
        Microsoft.Azure.PowerShell.Cmdlets.Logz.Runtime.IJsonSerializable
    {
        /// <summary>different billing cycles like MONTHLY/WEEKLY. this could be enum</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Logz.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"different billing cycles like MONTHLY/WEEKLY. this could be enum",
        SerializedName = @"billingCycle",
        PossibleTypes = new [] { typeof(string) })]
        string BillingCycle { get; set; }
        /// <summary>date when plan was applied</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Logz.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"date when plan was applied",
        SerializedName = @"effectiveDate",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? EffectiveDate { get; set; }
        /// <summary>plan id as published by Logz</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Logz.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"plan id as published by Logz",
        SerializedName = @"planDetails",
        PossibleTypes = new [] { typeof(string) })]
        string PlanDetail { get; set; }
        /// <summary>different usage type like PAYG/COMMITTED. this could be enum</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Logz.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"different usage type like PAYG/COMMITTED. this could be enum",
        SerializedName = @"usageType",
        PossibleTypes = new [] { typeof(string) })]
        string UsageType { get; set; }

    }
    internal partial interface IPlanDataInternal

    {
        /// <summary>different billing cycles like MONTHLY/WEEKLY. this could be enum</summary>
        string BillingCycle { get; set; }
        /// <summary>date when plan was applied</summary>
        global::System.DateTime? EffectiveDate { get; set; }
        /// <summary>plan id as published by Logz</summary>
        string PlanDetail { get; set; }
        /// <summary>different usage type like PAYG/COMMITTED. this could be enum</summary>
        string UsageType { get; set; }

    }
}