// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Models.Api20220829
{
    using static Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Runtime.Extensions;

    /// <summary>Firewall Status</summary>
    public partial class FirewallStatusProperty :
        Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Models.Api20220829.IFirewallStatusProperty,
        Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Models.Api20220829.IFirewallStatusPropertyInternal
    {

        /// <summary>Backing field for <see cref="HealthReason" /> property.</summary>
        private string _healthReason;

        /// <summary>Detail description of current health of the Firewall</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Origin(Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.PropertyOrigin.Owned)]
        public string HealthReason { get => this._healthReason; }

        /// <summary>Backing field for <see cref="HealthStatus" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Support.HealthStatus? _healthStatus;

        /// <summary>Current status of the Firewall</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Origin(Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Support.HealthStatus? HealthStatus { get => this._healthStatus; }

        /// <summary>Backing field for <see cref="IsPanoramaManaged" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Support.BooleanEnum? _isPanoramaManaged;

        /// <summary>Panorama Managed: Default is False. Default will be CloudSec managed</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Origin(Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Support.BooleanEnum? IsPanoramaManaged { get => this._isPanoramaManaged; }

        /// <summary>Internal Acessors for HealthReason</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Models.Api20220829.IFirewallStatusPropertyInternal.HealthReason { get => this._healthReason; set { {_healthReason = value;} } }

        /// <summary>Internal Acessors for HealthStatus</summary>
        Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Support.HealthStatus? Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Models.Api20220829.IFirewallStatusPropertyInternal.HealthStatus { get => this._healthStatus; set { {_healthStatus = value;} } }

        /// <summary>Internal Acessors for IsPanoramaManaged</summary>
        Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Support.BooleanEnum? Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Models.Api20220829.IFirewallStatusPropertyInternal.IsPanoramaManaged { get => this._isPanoramaManaged; set { {_isPanoramaManaged = value;} } }

        /// <summary>Internal Acessors for PanoramaStatus</summary>
        Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Models.Api20220829.IPanoramaStatus Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Models.Api20220829.IFirewallStatusPropertyInternal.PanoramaStatus { get => (this._panoramaStatus = this._panoramaStatus ?? new Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Models.Api20220829.PanoramaStatus()); set { {_panoramaStatus = value;} } }

        /// <summary>Internal Acessors for PanoramaStatusPanoramaServer2Status</summary>
        Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Support.ServerStatus? Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Models.Api20220829.IFirewallStatusPropertyInternal.PanoramaStatusPanoramaServer2Status { get => ((Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Models.Api20220829.IPanoramaStatusInternal)PanoramaStatus).PanoramaServer2Status; set => ((Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Models.Api20220829.IPanoramaStatusInternal)PanoramaStatus).PanoramaServer2Status = value; }

        /// <summary>Internal Acessors for PanoramaStatusPanoramaServerStatus</summary>
        Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Support.ServerStatus? Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Models.Api20220829.IFirewallStatusPropertyInternal.PanoramaStatusPanoramaServerStatus { get => ((Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Models.Api20220829.IPanoramaStatusInternal)PanoramaStatus).PanoramaServerStatus; set => ((Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Models.Api20220829.IPanoramaStatusInternal)PanoramaStatus).PanoramaServerStatus = value; }

        /// <summary>Internal Acessors for ProvisioningState</summary>
        Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Support.ReadOnlyProvisioningState? Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Models.Api20220829.IFirewallStatusPropertyInternal.ProvisioningState { get => this._provisioningState; set { {_provisioningState = value;} } }

        /// <summary>Backing field for <see cref="PanoramaStatus" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Models.Api20220829.IPanoramaStatus _panoramaStatus;

        /// <summary>Panorama Status</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Origin(Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Models.Api20220829.IPanoramaStatus PanoramaStatus { get => (this._panoramaStatus = this._panoramaStatus ?? new Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Models.Api20220829.PanoramaStatus()); }

        /// <summary>Secondary Panorama connection status</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Origin(Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Support.ServerStatus? PanoramaStatusPanoramaServer2Status { get => ((Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Models.Api20220829.IPanoramaStatusInternal)PanoramaStatus).PanoramaServer2Status; }

        /// <summary>Primary Panorama connection status</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Origin(Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Support.ServerStatus? PanoramaStatusPanoramaServerStatus { get => ((Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Models.Api20220829.IPanoramaStatusInternal)PanoramaStatus).PanoramaServerStatus; }

        /// <summary>Backing field for <see cref="ProvisioningState" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Support.ReadOnlyProvisioningState? _provisioningState;

        /// <summary>Provisioning state of the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Origin(Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Support.ReadOnlyProvisioningState? ProvisioningState { get => this._provisioningState; }

        /// <summary>Creates an new <see cref="FirewallStatusProperty" /> instance.</summary>
        public FirewallStatusProperty()
        {

        }
    }
    /// Firewall Status
    public partial interface IFirewallStatusProperty :
        Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Runtime.IJsonSerializable
    {
        /// <summary>Detail description of current health of the Firewall</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Detail description of current health of the Firewall",
        SerializedName = @"healthReason",
        PossibleTypes = new [] { typeof(string) })]
        string HealthReason { get;  }
        /// <summary>Current status of the Firewall</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Current status of the Firewall",
        SerializedName = @"healthStatus",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Support.HealthStatus) })]
        Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Support.HealthStatus? HealthStatus { get;  }
        /// <summary>Panorama Managed: Default is False. Default will be CloudSec managed</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Panorama Managed: Default is False. Default will be CloudSec managed",
        SerializedName = @"isPanoramaManaged",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Support.BooleanEnum) })]
        Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Support.BooleanEnum? IsPanoramaManaged { get;  }
        /// <summary>Secondary Panorama connection status</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Secondary Panorama connection status",
        SerializedName = @"panoramaServer2Status",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Support.ServerStatus) })]
        Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Support.ServerStatus? PanoramaStatusPanoramaServer2Status { get;  }
        /// <summary>Primary Panorama connection status</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Primary Panorama connection status",
        SerializedName = @"panoramaServerStatus",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Support.ServerStatus) })]
        Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Support.ServerStatus? PanoramaStatusPanoramaServerStatus { get;  }
        /// <summary>Provisioning state of the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Provisioning state of the resource.",
        SerializedName = @"provisioningState",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Support.ReadOnlyProvisioningState) })]
        Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Support.ReadOnlyProvisioningState? ProvisioningState { get;  }

    }
    /// Firewall Status
    internal partial interface IFirewallStatusPropertyInternal

    {
        /// <summary>Detail description of current health of the Firewall</summary>
        string HealthReason { get; set; }
        /// <summary>Current status of the Firewall</summary>
        Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Support.HealthStatus? HealthStatus { get; set; }
        /// <summary>Panorama Managed: Default is False. Default will be CloudSec managed</summary>
        Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Support.BooleanEnum? IsPanoramaManaged { get; set; }
        /// <summary>Panorama Status</summary>
        Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Models.Api20220829.IPanoramaStatus PanoramaStatus { get; set; }
        /// <summary>Secondary Panorama connection status</summary>
        Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Support.ServerStatus? PanoramaStatusPanoramaServer2Status { get; set; }
        /// <summary>Primary Panorama connection status</summary>
        Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Support.ServerStatus? PanoramaStatusPanoramaServerStatus { get; set; }
        /// <summary>Provisioning state of the resource.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Support.ReadOnlyProvisioningState? ProvisioningState { get; set; }

    }
}