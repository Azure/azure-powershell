
# ----------------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# http://www.apache.org/licenses/LICENSE-2.0
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# Code generated by Microsoft (R) AutoRest Code Generator.Changes may cause incorrect behavior and will be lost if the code
# is regenerated.
# ----------------------------------------------------------------------------------

<#
.Synopsis
Create an in-memory object for NetworkProfile.
.Description
Create an in-memory object for NetworkProfile.

.Outputs
Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Models.Api20220829.NetworkProfile
.Link
https://learn.microsoft.com/powershell/module/Az.PaloAltoNetworks/new-azpaloaltonetworksprofileobject
#>
function New-AzPaloAltoNetworksProfileObject {
    [OutputType('Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Models.Api20220829.NetworkProfile')]
    [CmdletBinding(PositionalBinding=$false)]
    Param(

        [Parameter(HelpMessage="Egress nat IP to use.")]
        [Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Models.Api20220829.IIPAddress[]]
        $EgressNatIP,
        [Parameter(Mandatory, HelpMessage="Enable egress NAT, enabled by default.")]
        [ArgumentCompleter([Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Support.EgressNat])]
        [Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Support.EgressNat]
        $EnableEgressNat,
        [Parameter(Mandatory, HelpMessage="vnet or vwan, cannot be updated.")]
        [ArgumentCompleter([Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Support.NetworkType])]
        [Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Support.NetworkType]
        $NetworkType,
        [Parameter(Mandatory, HelpMessage="List of IPs associated with the Firewall.")]
        [Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Models.Api20220829.IIPAddress[]]
        $PublicIP,
        [Parameter(HelpMessage="Address Space.")]
        [string]
        $VHubAddressSpace,
        [Parameter(HelpMessage="Resource Id.")]
        [string]
        $VHubResourceId,
        [Parameter(HelpMessage="Address Space.")]
        [string]
        $VnetAddressSpace,
        [Parameter(HelpMessage="Address value.")]
        [string]
        $VnetConfigurationIPOfTrustSubnetForUdrAddress,
        [Parameter(HelpMessage="Resource Id.")]
        [string]
        $VnetConfigurationIPOfTrustSubnetForUdrResourceId,
        [Parameter(HelpMessage="Address Space.")]
        [string]
        $VnetConfigurationTrustSubnetAddressSpace,
        [Parameter(HelpMessage="Resource Id.")]
        [string]
        $VnetConfigurationTrustSubnetResourceId,
        [Parameter(HelpMessage="Address Space.")]
        [string]
        $VnetConfigurationUnTrustSubnetAddressSpace,
        [Parameter(HelpMessage="Resource Id.")]
        [string]
        $VnetConfigurationUnTrustSubnetResourceId,
        [Parameter(HelpMessage="Resource Id.")]
        [string]
        $VnetResourceId,
        [Parameter(HelpMessage="Address value.")]
        [string]
        $VwanConfigurationIPOfTrustSubnetForUdrAddress,
        [Parameter(HelpMessage="Resource Id.")]
        [string]
        $VwanConfigurationIPOfTrustSubnetForUdrResourceId,
        [Parameter(HelpMessage="Network Virtual Appliance resource ID .")]
        [string]
        $VwanConfigurationNetworkVirtualApplianceId,
        [Parameter(HelpMessage="Address Space.")]
        [string]
        $VwanConfigurationTrustSubnetAddressSpace,
        [Parameter(HelpMessage="Resource Id.")]
        [string]
        $VwanConfigurationTrustSubnetResourceId,
        [Parameter(HelpMessage="Address Space.")]
        [string]
        $VwanConfigurationUnTrustSubnetAddressSpace,
        [Parameter(HelpMessage="Resource Id.")]
        [string]
        $VwanConfigurationUnTrustSubnetResourceId
    )

    process {
        $Object = [Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Models.Api20220829.NetworkProfile]::New()

        if ($PSBoundParameters.ContainsKey('EgressNatIP')) {
            $Object.EgressNatIP = $EgressNatIP
        }
        if ($PSBoundParameters.ContainsKey('EnableEgressNat')) {
            $Object.EnableEgressNat = $EnableEgressNat
        }
        if ($PSBoundParameters.ContainsKey('NetworkType')) {
            $Object.NetworkType = $NetworkType
        }
        if ($PSBoundParameters.ContainsKey('PublicIP')) {
            $Object.PublicIP = $PublicIP
        }
        if ($PSBoundParameters.ContainsKey('VHubAddressSpace')) {
            $Object.VHubAddressSpace = $VHubAddressSpace
        }
        if ($PSBoundParameters.ContainsKey('VHubResourceId')) {
            $Object.VHubResourceId = $VHubResourceId
        }
        if ($PSBoundParameters.ContainsKey('VnetAddressSpace')) {
            $Object.VnetAddressSpace = $VnetAddressSpace
        }
        if ($PSBoundParameters.ContainsKey('VnetConfigurationIPOfTrustSubnetForUdrAddress')) {
            $Object.VnetConfigurationIPOfTrustSubnetForUdrAddress = $VnetConfigurationIPOfTrustSubnetForUdrAddress
        }
        if ($PSBoundParameters.ContainsKey('VnetConfigurationIPOfTrustSubnetForUdrResourceId')) {
            $Object.VnetConfigurationIPOfTrustSubnetForUdrResourceId = $VnetConfigurationIPOfTrustSubnetForUdrResourceId
        }
        if ($PSBoundParameters.ContainsKey('VnetConfigurationTrustSubnetAddressSpace')) {
            $Object.VnetConfigurationTrustSubnetAddressSpace = $VnetConfigurationTrustSubnetAddressSpace
        }
        if ($PSBoundParameters.ContainsKey('VnetConfigurationTrustSubnetResourceId')) {
            $Object.VnetConfigurationTrustSubnetResourceId = $VnetConfigurationTrustSubnetResourceId
        }
        if ($PSBoundParameters.ContainsKey('VnetConfigurationUnTrustSubnetAddressSpace')) {
            $Object.VnetConfigurationUnTrustSubnetAddressSpace = $VnetConfigurationUnTrustSubnetAddressSpace
        }
        if ($PSBoundParameters.ContainsKey('VnetConfigurationUnTrustSubnetResourceId')) {
            $Object.VnetConfigurationUnTrustSubnetResourceId = $VnetConfigurationUnTrustSubnetResourceId
        }
        if ($PSBoundParameters.ContainsKey('VnetResourceId')) {
            $Object.VnetResourceId = $VnetResourceId
        }
        if ($PSBoundParameters.ContainsKey('VwanConfigurationIPOfTrustSubnetForUdrAddress')) {
            $Object.VwanConfigurationIPOfTrustSubnetForUdrAddress = $VwanConfigurationIPOfTrustSubnetForUdrAddress
        }
        if ($PSBoundParameters.ContainsKey('VwanConfigurationIPOfTrustSubnetForUdrResourceId')) {
            $Object.VwanConfigurationIPOfTrustSubnetForUdrResourceId = $VwanConfigurationIPOfTrustSubnetForUdrResourceId
        }
        if ($PSBoundParameters.ContainsKey('VwanConfigurationNetworkVirtualApplianceId')) {
            $Object.VwanConfigurationNetworkVirtualApplianceId = $VwanConfigurationNetworkVirtualApplianceId
        }
        if ($PSBoundParameters.ContainsKey('VwanConfigurationTrustSubnetAddressSpace')) {
            $Object.VwanConfigurationTrustSubnetAddressSpace = $VwanConfigurationTrustSubnetAddressSpace
        }
        if ($PSBoundParameters.ContainsKey('VwanConfigurationTrustSubnetResourceId')) {
            $Object.VwanConfigurationTrustSubnetResourceId = $VwanConfigurationTrustSubnetResourceId
        }
        if ($PSBoundParameters.ContainsKey('VwanConfigurationUnTrustSubnetAddressSpace')) {
            $Object.VwanConfigurationUnTrustSubnetAddressSpace = $VwanConfigurationUnTrustSubnetAddressSpace
        }
        if ($PSBoundParameters.ContainsKey('VwanConfigurationUnTrustSubnetResourceId')) {
            $Object.VwanConfigurationUnTrustSubnetResourceId = $VwanConfigurationUnTrustSubnetResourceId
        }
        return $Object
    }
}

