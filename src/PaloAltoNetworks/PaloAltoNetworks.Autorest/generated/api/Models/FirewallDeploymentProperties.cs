// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Models
{
    using static Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Runtime.Extensions;

    /// <summary>Properties specific to the Firewall resource deployment.</summary>
    public partial class FirewallDeploymentProperties :
        Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Models.IFirewallDeploymentProperties,
        Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Models.IFirewallDeploymentPropertiesInternal
    {

        /// <summary>Backing field for <see cref="AssociatedRulestack" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Models.IRulestackDetails _associatedRulestack;

        /// <summary>Associated Rulestack</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Origin(Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Models.IRulestackDetails AssociatedRulestack { get => (this._associatedRulestack = this._associatedRulestack ?? new Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Models.RulestackDetails()); set => this._associatedRulestack = value; }

        /// <summary>Associated rulestack Id</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Origin(Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.PropertyOrigin.Inlined)]
        public string AssociatedRulestackId { get => ((Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Models.IRulestackDetailsInternal)AssociatedRulestack).RulestackId; set => ((Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Models.IRulestackDetailsInternal)AssociatedRulestack).RulestackId = value ?? null; }

        /// <summary>Rulestack location</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Origin(Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.PropertyOrigin.Inlined)]
        public string AssociatedRulestackLocation { get => ((Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Models.IRulestackDetailsInternal)AssociatedRulestack).Location; set => ((Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Models.IRulestackDetailsInternal)AssociatedRulestack).Location = value ?? null; }

        /// <summary>Resource Id</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Origin(Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.PropertyOrigin.Inlined)]
        public string AssociatedRulestackResourceId { get => ((Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Models.IRulestackDetailsInternal)AssociatedRulestack).ResourceId; set => ((Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Models.IRulestackDetailsInternal)AssociatedRulestack).ResourceId = value ?? null; }

        /// <summary>Backing field for <see cref="DnsSetting" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Models.IDnsSettings _dnsSetting;

        /// <summary>DNS settings for Firewall</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Origin(Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Models.IDnsSettings DnsSetting { get => (this._dnsSetting = this._dnsSetting ?? new Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Models.DnsSettings()); set => this._dnsSetting = value; }

        /// <summary>List of IPs associated with the Firewall</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Origin(Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.PropertyOrigin.Inlined)]
        public System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Models.IIPAddress> DnsSettingDnsServer { get => ((Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Models.IDnsSettingsInternal)DnsSetting).DnsServer; set => ((Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Models.IDnsSettingsInternal)DnsSetting).DnsServer = value ?? null /* arrayOf */; }

        /// <summary>Enable DNS proxy, disabled by default</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Origin(Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.PropertyOrigin.Inlined)]
        public string DnsSettingEnableDnsProxy { get => ((Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Models.IDnsSettingsInternal)DnsSetting).EnableDnsProxy; set => ((Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Models.IDnsSettingsInternal)DnsSetting).EnableDnsProxy = value ?? null; }

        /// <summary>Enabled DNS proxy type, disabled by default</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Origin(Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.PropertyOrigin.Inlined)]
        public string DnsSettingEnabledDnsType { get => ((Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Models.IDnsSettingsInternal)DnsSetting).EnabledDnsType; set => ((Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Models.IDnsSettingsInternal)DnsSetting).EnabledDnsType = value ?? null; }

        /// <summary>Backing field for <see cref="FrontEndSetting" /> property.</summary>
        private System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Models.IFrontendSetting> _frontEndSetting;

        /// <summary>Frontend settings for Firewall</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Origin(Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.PropertyOrigin.Owned)]
        public System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Models.IFrontendSetting> FrontEndSetting { get => this._frontEndSetting; set => this._frontEndSetting = value; }

        /// <summary>Backing field for <see cref="IsPanoramaManaged" /> property.</summary>
        private string _isPanoramaManaged;

        /// <summary>Panorama Managed: Default is False. Default will be CloudSec managed</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Origin(Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.PropertyOrigin.Owned)]
        public string IsPanoramaManaged { get => this._isPanoramaManaged; set => this._isPanoramaManaged = value; }

        /// <summary>Backing field for <see cref="MarketplaceDetail" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Models.IMarketplaceDetails _marketplaceDetail;

        /// <summary>Marketplace details</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Origin(Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Models.IMarketplaceDetails MarketplaceDetail { get => (this._marketplaceDetail = this._marketplaceDetail ?? new Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Models.MarketplaceDetails()); set => this._marketplaceDetail = value; }

        /// <summary>Marketplace Subscription Id</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Origin(Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.PropertyOrigin.Inlined)]
        public string MarketplaceDetailMarketplaceSubscriptionId { get => ((Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Models.IMarketplaceDetailsInternal)MarketplaceDetail).MarketplaceSubscriptionId; }

        /// <summary>Marketplace Subscription Status</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Origin(Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.PropertyOrigin.Inlined)]
        public string MarketplaceDetailMarketplaceSubscriptionStatus { get => ((Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Models.IMarketplaceDetailsInternal)MarketplaceDetail).MarketplaceSubscriptionStatus; set => ((Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Models.IMarketplaceDetailsInternal)MarketplaceDetail).MarketplaceSubscriptionStatus = value ?? null; }

        /// <summary>Offer Id</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Origin(Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.PropertyOrigin.Inlined)]
        public string MarketplaceDetailOfferId { get => ((Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Models.IMarketplaceDetailsInternal)MarketplaceDetail).OfferId; set => ((Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Models.IMarketplaceDetailsInternal)MarketplaceDetail).OfferId = value ; }

        /// <summary>Publisher Id</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Origin(Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.PropertyOrigin.Inlined)]
        public string MarketplaceDetailPublisherId { get => ((Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Models.IMarketplaceDetailsInternal)MarketplaceDetail).PublisherId; set => ((Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Models.IMarketplaceDetailsInternal)MarketplaceDetail).PublisherId = value ; }

        /// <summary>Internal Acessors for AssociatedRulestack</summary>
        Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Models.IRulestackDetails Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Models.IFirewallDeploymentPropertiesInternal.AssociatedRulestack { get => (this._associatedRulestack = this._associatedRulestack ?? new Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Models.RulestackDetails()); set { {_associatedRulestack = value;} } }

        /// <summary>Internal Acessors for DnsSetting</summary>
        Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Models.IDnsSettings Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Models.IFirewallDeploymentPropertiesInternal.DnsSetting { get => (this._dnsSetting = this._dnsSetting ?? new Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Models.DnsSettings()); set { {_dnsSetting = value;} } }

        /// <summary>Internal Acessors for MarketplaceDetail</summary>
        Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Models.IMarketplaceDetails Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Models.IFirewallDeploymentPropertiesInternal.MarketplaceDetail { get => (this._marketplaceDetail = this._marketplaceDetail ?? new Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Models.MarketplaceDetails()); set { {_marketplaceDetail = value;} } }

        /// <summary>Internal Acessors for MarketplaceDetailMarketplaceSubscriptionId</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Models.IFirewallDeploymentPropertiesInternal.MarketplaceDetailMarketplaceSubscriptionId { get => ((Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Models.IMarketplaceDetailsInternal)MarketplaceDetail).MarketplaceSubscriptionId; set => ((Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Models.IMarketplaceDetailsInternal)MarketplaceDetail).MarketplaceSubscriptionId = value; }

        /// <summary>Internal Acessors for PanoramaConfig</summary>
        Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Models.IPanoramaConfig Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Models.IFirewallDeploymentPropertiesInternal.PanoramaConfig { get => (this._panoramaConfig = this._panoramaConfig ?? new Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Models.PanoramaConfig()); set { {_panoramaConfig = value;} } }

        /// <summary>Internal Acessors for PanoramaConfigCgName</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Models.IFirewallDeploymentPropertiesInternal.PanoramaConfigCgName { get => ((Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Models.IPanoramaConfigInternal)PanoramaConfig).CgName; set => ((Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Models.IPanoramaConfigInternal)PanoramaConfig).CgName = value; }

        /// <summary>Internal Acessors for PanoramaConfigDgName</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Models.IFirewallDeploymentPropertiesInternal.PanoramaConfigDgName { get => ((Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Models.IPanoramaConfigInternal)PanoramaConfig).DgName; set => ((Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Models.IPanoramaConfigInternal)PanoramaConfig).DgName = value; }

        /// <summary>Internal Acessors for PanoramaConfigHostName</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Models.IFirewallDeploymentPropertiesInternal.PanoramaConfigHostName { get => ((Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Models.IPanoramaConfigInternal)PanoramaConfig).HostName; set => ((Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Models.IPanoramaConfigInternal)PanoramaConfig).HostName = value; }

        /// <summary>Internal Acessors for PanoramaConfigPanoramaServer</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Models.IFirewallDeploymentPropertiesInternal.PanoramaConfigPanoramaServer { get => ((Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Models.IPanoramaConfigInternal)PanoramaConfig).PanoramaServer; set => ((Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Models.IPanoramaConfigInternal)PanoramaConfig).PanoramaServer = value; }

        /// <summary>Internal Acessors for PanoramaConfigPanoramaServer2</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Models.IFirewallDeploymentPropertiesInternal.PanoramaConfigPanoramaServer2 { get => ((Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Models.IPanoramaConfigInternal)PanoramaConfig).PanoramaServer2; set => ((Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Models.IPanoramaConfigInternal)PanoramaConfig).PanoramaServer2 = value; }

        /// <summary>Internal Acessors for PanoramaConfigTplName</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Models.IFirewallDeploymentPropertiesInternal.PanoramaConfigTplName { get => ((Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Models.IPanoramaConfigInternal)PanoramaConfig).TplName; set => ((Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Models.IPanoramaConfigInternal)PanoramaConfig).TplName = value; }

        /// <summary>Internal Acessors for PanoramaConfigVMAuthKey</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Models.IFirewallDeploymentPropertiesInternal.PanoramaConfigVMAuthKey { get => ((Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Models.IPanoramaConfigInternal)PanoramaConfig).VMAuthKey; set => ((Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Models.IPanoramaConfigInternal)PanoramaConfig).VMAuthKey = value; }

        /// <summary>Internal Acessors for PlanData</summary>
        Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Models.IPlanData Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Models.IFirewallDeploymentPropertiesInternal.PlanData { get => (this._planData = this._planData ?? new Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Models.PlanData()); set { {_planData = value;} } }

        /// <summary>Internal Acessors for PlanDataEffectiveDate</summary>
        global::System.DateTime? Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Models.IFirewallDeploymentPropertiesInternal.PlanDataEffectiveDate { get => ((Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Models.IPlanDataInternal)PlanData).EffectiveDate; set => ((Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Models.IPlanDataInternal)PlanData).EffectiveDate = value; }

        /// <summary>Internal Acessors for ProvisioningState</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Models.IFirewallDeploymentPropertiesInternal.ProvisioningState { get => this._provisioningState; set { {_provisioningState = value;} } }

        /// <summary>Backing field for <see cref="NetworkProfile" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Models.INetworkProfile _networkProfile;

        /// <summary>Network settings</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Origin(Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Models.INetworkProfile NetworkProfile { get => (this._networkProfile = this._networkProfile ?? new Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Models.NetworkProfile()); set => this._networkProfile = value; }

        /// <summary>Backing field for <see cref="PanEtag" /> property.</summary>
        private string _panEtag;

        /// <summary>panEtag info</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Origin(Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.PropertyOrigin.Owned)]
        public string PanEtag { get => this._panEtag; set => this._panEtag = value; }

        /// <summary>Backing field for <see cref="PanoramaConfig" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Models.IPanoramaConfig _panoramaConfig;

        /// <summary>Panorama Configuration</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Origin(Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Models.IPanoramaConfig PanoramaConfig { get => (this._panoramaConfig = this._panoramaConfig ?? new Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Models.PanoramaConfig()); set => this._panoramaConfig = value; }

        /// <summary>Panorama Collector Group to join - (Once configured we can not edit the value)</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Origin(Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.PropertyOrigin.Inlined)]
        public string PanoramaConfigCgName { get => ((Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Models.IPanoramaConfigInternal)PanoramaConfig).CgName; }

        /// <summary>Panorama Device Group to join</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Origin(Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.PropertyOrigin.Inlined)]
        public string PanoramaConfigDgName { get => ((Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Models.IPanoramaConfigInternal)PanoramaConfig).DgName; }

        /// <summary>Resource name(may be unique) for PN admin</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Origin(Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.PropertyOrigin.Inlined)]
        public string PanoramaConfigHostName { get => ((Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Models.IPanoramaConfigInternal)PanoramaConfig).HostName; }

        /// <summary>Primary Panorama Server IP address value in dotted format for IPv4</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Origin(Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.PropertyOrigin.Inlined)]
        public string PanoramaConfigPanoramaServer { get => ((Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Models.IPanoramaConfigInternal)PanoramaConfig).PanoramaServer; }

        /// <summary>Secondary Panorama Server IP address value in dotted format for IPv4</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Origin(Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.PropertyOrigin.Inlined)]
        public string PanoramaConfigPanoramaServer2 { get => ((Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Models.IPanoramaConfigInternal)PanoramaConfig).PanoramaServer2; }

        /// <summary>
        /// Base64 encoded string representing Panorama parameters to be used by Firewall to connect to Panorama. This string is generated
        /// via azure plugin in Panorama
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Origin(Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.PropertyOrigin.Inlined)]
        public string PanoramaConfigString { get => ((Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Models.IPanoramaConfigInternal)PanoramaConfig).ConfigString; set => ((Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Models.IPanoramaConfigInternal)PanoramaConfig).ConfigString = value ?? null; }

        /// <summary>Panorama Template Stack to join - (Once configured we can not edit the value)</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Origin(Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.PropertyOrigin.Inlined)]
        public string PanoramaConfigTplName { get => ((Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Models.IPanoramaConfigInternal)PanoramaConfig).TplName; }

        /// <summary>VM auth key for panorama connectivity</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Origin(Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.PropertyOrigin.Inlined)]
        public string PanoramaConfigVMAuthKey { get => ((Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Models.IPanoramaConfigInternal)PanoramaConfig).VMAuthKey; }

        /// <summary>Backing field for <see cref="PlanData" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Models.IPlanData _planData;

        /// <summary>Billing plan information.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Origin(Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Models.IPlanData PlanData { get => (this._planData = this._planData ?? new Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Models.PlanData()); set => this._planData = value; }

        /// <summary>different billing cycles like MONTHLY/WEEKLY</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Origin(Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.PropertyOrigin.Inlined)]
        public string PlanDataBillingCycle { get => ((Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Models.IPlanDataInternal)PlanData).BillingCycle; set => ((Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Models.IPlanDataInternal)PlanData).BillingCycle = value ; }

        /// <summary>date when plan was applied</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Origin(Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.PropertyOrigin.Inlined)]
        public global::System.DateTime? PlanDataEffectiveDate { get => ((Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Models.IPlanDataInternal)PlanData).EffectiveDate; }

        /// <summary>plan id as published by Liftr.PAN</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Origin(Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.PropertyOrigin.Inlined)]
        public string PlanDataPlanId { get => ((Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Models.IPlanDataInternal)PlanData).PlanId; set => ((Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Models.IPlanDataInternal)PlanData).PlanId = value ; }

        /// <summary>different usage type like PAYG/COMMITTED</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Origin(Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.PropertyOrigin.Inlined)]
        public string PlanDataUsageType { get => ((Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Models.IPlanDataInternal)PlanData).UsageType; set => ((Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Models.IPlanDataInternal)PlanData).UsageType = value ?? null; }

        /// <summary>Backing field for <see cref="ProvisioningState" /> property.</summary>
        private string _provisioningState;

        /// <summary>Provisioning state of the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Origin(Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.PropertyOrigin.Owned)]
        public string ProvisioningState { get => this._provisioningState; }

        /// <summary>Creates an new <see cref="FirewallDeploymentProperties" /> instance.</summary>
        public FirewallDeploymentProperties()
        {

        }
    }
    /// Properties specific to the Firewall resource deployment.
    public partial interface IFirewallDeploymentProperties :
        Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Runtime.IJsonSerializable
    {
        /// <summary>Associated rulestack Id</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Associated rulestack Id",
        SerializedName = @"rulestackId",
        PossibleTypes = new [] { typeof(string) })]
        string AssociatedRulestackId { get; set; }
        /// <summary>Rulestack location</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Rulestack location",
        SerializedName = @"location",
        PossibleTypes = new [] { typeof(string) })]
        string AssociatedRulestackLocation { get; set; }
        /// <summary>Resource Id</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Resource Id",
        SerializedName = @"resourceId",
        PossibleTypes = new [] { typeof(string) })]
        string AssociatedRulestackResourceId { get; set; }
        /// <summary>List of IPs associated with the Firewall</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"List of IPs associated with the Firewall",
        SerializedName = @"dnsServers",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Models.IIPAddress) })]
        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Models.IIPAddress> DnsSettingDnsServer { get; set; }
        /// <summary>Enable DNS proxy, disabled by default</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Enable DNS proxy, disabled by default",
        SerializedName = @"enableDnsProxy",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.PSArgumentCompleterAttribute("DISABLED", "ENABLED")]
        string DnsSettingEnableDnsProxy { get; set; }
        /// <summary>Enabled DNS proxy type, disabled by default</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Enabled DNS proxy type, disabled by default",
        SerializedName = @"enabledDnsType",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.PSArgumentCompleterAttribute("CUSTOM", "AZURE")]
        string DnsSettingEnabledDnsType { get; set; }
        /// <summary>Frontend settings for Firewall</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Frontend settings for Firewall",
        SerializedName = @"frontEndSettings",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Models.IFrontendSetting) })]
        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Models.IFrontendSetting> FrontEndSetting { get; set; }
        /// <summary>Panorama Managed: Default is False. Default will be CloudSec managed</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Panorama Managed: Default is False. Default will be CloudSec managed",
        SerializedName = @"isPanoramaManaged",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.PSArgumentCompleterAttribute("TRUE", "FALSE")]
        string IsPanoramaManaged { get; set; }
        /// <summary>Marketplace Subscription Id</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"Marketplace Subscription Id",
        SerializedName = @"marketplaceSubscriptionId",
        PossibleTypes = new [] { typeof(string) })]
        string MarketplaceDetailMarketplaceSubscriptionId { get;  }
        /// <summary>Marketplace Subscription Status</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Marketplace Subscription Status",
        SerializedName = @"marketplaceSubscriptionStatus",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.PSArgumentCompleterAttribute("PendingFulfillmentStart", "Subscribed", "Suspended", "Unsubscribed", "NotStarted", "FulfillmentRequested")]
        string MarketplaceDetailMarketplaceSubscriptionStatus { get; set; }
        /// <summary>Offer Id</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Offer Id",
        SerializedName = @"offerId",
        PossibleTypes = new [] { typeof(string) })]
        string MarketplaceDetailOfferId { get; set; }
        /// <summary>Publisher Id</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Publisher Id",
        SerializedName = @"publisherId",
        PossibleTypes = new [] { typeof(string) })]
        string MarketplaceDetailPublisherId { get; set; }
        /// <summary>Network settings</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Network settings",
        SerializedName = @"networkProfile",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Models.INetworkProfile) })]
        Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Models.INetworkProfile NetworkProfile { get; set; }
        /// <summary>panEtag info</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"panEtag info",
        SerializedName = @"panEtag",
        PossibleTypes = new [] { typeof(string) })]
        string PanEtag { get; set; }
        /// <summary>Panorama Collector Group to join - (Once configured we can not edit the value)</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"Panorama Collector Group to join - (Once configured we can not edit the value)",
        SerializedName = @"cgName",
        PossibleTypes = new [] { typeof(string) })]
        string PanoramaConfigCgName { get;  }
        /// <summary>Panorama Device Group to join</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"Panorama Device Group to join",
        SerializedName = @"dgName",
        PossibleTypes = new [] { typeof(string) })]
        string PanoramaConfigDgName { get;  }
        /// <summary>Resource name(may be unique) for PN admin</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"Resource name(may be unique) for PN admin",
        SerializedName = @"hostName",
        PossibleTypes = new [] { typeof(string) })]
        string PanoramaConfigHostName { get;  }
        /// <summary>Primary Panorama Server IP address value in dotted format for IPv4</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"Primary Panorama Server IP address value in dotted format for IPv4",
        SerializedName = @"panoramaServer",
        PossibleTypes = new [] { typeof(string) })]
        string PanoramaConfigPanoramaServer { get;  }
        /// <summary>Secondary Panorama Server IP address value in dotted format for IPv4</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"Secondary Panorama Server IP address value in dotted format for IPv4",
        SerializedName = @"panoramaServer2",
        PossibleTypes = new [] { typeof(string) })]
        string PanoramaConfigPanoramaServer2 { get;  }
        /// <summary>
        /// Base64 encoded string representing Panorama parameters to be used by Firewall to connect to Panorama. This string is generated
        /// via azure plugin in Panorama
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Base64 encoded string representing Panorama parameters to be used by Firewall to connect to Panorama. This string is generated via azure plugin in Panorama",
        SerializedName = @"configString",
        PossibleTypes = new [] { typeof(string) })]
        string PanoramaConfigString { get; set; }
        /// <summary>Panorama Template Stack to join - (Once configured we can not edit the value)</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"Panorama Template Stack to join - (Once configured we can not edit the value)",
        SerializedName = @"tplName",
        PossibleTypes = new [] { typeof(string) })]
        string PanoramaConfigTplName { get;  }
        /// <summary>VM auth key for panorama connectivity</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"VM auth key for panorama connectivity",
        SerializedName = @"vmAuthKey",
        PossibleTypes = new [] { typeof(string) })]
        string PanoramaConfigVMAuthKey { get;  }
        /// <summary>different billing cycles like MONTHLY/WEEKLY</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"different billing cycles like MONTHLY/WEEKLY",
        SerializedName = @"billingCycle",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.PSArgumentCompleterAttribute("WEEKLY", "MONTHLY")]
        string PlanDataBillingCycle { get; set; }
        /// <summary>date when plan was applied</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"date when plan was applied",
        SerializedName = @"effectiveDate",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? PlanDataEffectiveDate { get;  }
        /// <summary>plan id as published by Liftr.PAN</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"plan id as published by Liftr.PAN",
        SerializedName = @"planId",
        PossibleTypes = new [] { typeof(string) })]
        string PlanDataPlanId { get; set; }
        /// <summary>different usage type like PAYG/COMMITTED</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"different usage type like PAYG/COMMITTED",
        SerializedName = @"usageType",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.PSArgumentCompleterAttribute("PAYG", "COMMITTED")]
        string PlanDataUsageType { get; set; }
        /// <summary>Provisioning state of the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"Provisioning state of the resource.",
        SerializedName = @"provisioningState",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.PSArgumentCompleterAttribute("Accepted", "Creating", "Updating", "Deleting", "Succeeded", "Failed", "Canceled", "Deleted", "NotSpecified")]
        string ProvisioningState { get;  }

    }
    /// Properties specific to the Firewall resource deployment.
    internal partial interface IFirewallDeploymentPropertiesInternal

    {
        /// <summary>Associated Rulestack</summary>
        Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Models.IRulestackDetails AssociatedRulestack { get; set; }
        /// <summary>Associated rulestack Id</summary>
        string AssociatedRulestackId { get; set; }
        /// <summary>Rulestack location</summary>
        string AssociatedRulestackLocation { get; set; }
        /// <summary>Resource Id</summary>
        string AssociatedRulestackResourceId { get; set; }
        /// <summary>DNS settings for Firewall</summary>
        Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Models.IDnsSettings DnsSetting { get; set; }
        /// <summary>List of IPs associated with the Firewall</summary>
        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Models.IIPAddress> DnsSettingDnsServer { get; set; }
        /// <summary>Enable DNS proxy, disabled by default</summary>
        [global::Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.PSArgumentCompleterAttribute("DISABLED", "ENABLED")]
        string DnsSettingEnableDnsProxy { get; set; }
        /// <summary>Enabled DNS proxy type, disabled by default</summary>
        [global::Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.PSArgumentCompleterAttribute("CUSTOM", "AZURE")]
        string DnsSettingEnabledDnsType { get; set; }
        /// <summary>Frontend settings for Firewall</summary>
        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Models.IFrontendSetting> FrontEndSetting { get; set; }
        /// <summary>Panorama Managed: Default is False. Default will be CloudSec managed</summary>
        [global::Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.PSArgumentCompleterAttribute("TRUE", "FALSE")]
        string IsPanoramaManaged { get; set; }
        /// <summary>Marketplace details</summary>
        Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Models.IMarketplaceDetails MarketplaceDetail { get; set; }
        /// <summary>Marketplace Subscription Id</summary>
        string MarketplaceDetailMarketplaceSubscriptionId { get; set; }
        /// <summary>Marketplace Subscription Status</summary>
        [global::Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.PSArgumentCompleterAttribute("PendingFulfillmentStart", "Subscribed", "Suspended", "Unsubscribed", "NotStarted", "FulfillmentRequested")]
        string MarketplaceDetailMarketplaceSubscriptionStatus { get; set; }
        /// <summary>Offer Id</summary>
        string MarketplaceDetailOfferId { get; set; }
        /// <summary>Publisher Id</summary>
        string MarketplaceDetailPublisherId { get; set; }
        /// <summary>Network settings</summary>
        Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Models.INetworkProfile NetworkProfile { get; set; }
        /// <summary>panEtag info</summary>
        string PanEtag { get; set; }
        /// <summary>Panorama Configuration</summary>
        Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Models.IPanoramaConfig PanoramaConfig { get; set; }
        /// <summary>Panorama Collector Group to join - (Once configured we can not edit the value)</summary>
        string PanoramaConfigCgName { get; set; }
        /// <summary>Panorama Device Group to join</summary>
        string PanoramaConfigDgName { get; set; }
        /// <summary>Resource name(may be unique) for PN admin</summary>
        string PanoramaConfigHostName { get; set; }
        /// <summary>Primary Panorama Server IP address value in dotted format for IPv4</summary>
        string PanoramaConfigPanoramaServer { get; set; }
        /// <summary>Secondary Panorama Server IP address value in dotted format for IPv4</summary>
        string PanoramaConfigPanoramaServer2 { get; set; }
        /// <summary>
        /// Base64 encoded string representing Panorama parameters to be used by Firewall to connect to Panorama. This string is generated
        /// via azure plugin in Panorama
        /// </summary>
        string PanoramaConfigString { get; set; }
        /// <summary>Panorama Template Stack to join - (Once configured we can not edit the value)</summary>
        string PanoramaConfigTplName { get; set; }
        /// <summary>VM auth key for panorama connectivity</summary>
        string PanoramaConfigVMAuthKey { get; set; }
        /// <summary>Billing plan information.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Models.IPlanData PlanData { get; set; }
        /// <summary>different billing cycles like MONTHLY/WEEKLY</summary>
        [global::Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.PSArgumentCompleterAttribute("WEEKLY", "MONTHLY")]
        string PlanDataBillingCycle { get; set; }
        /// <summary>date when plan was applied</summary>
        global::System.DateTime? PlanDataEffectiveDate { get; set; }
        /// <summary>plan id as published by Liftr.PAN</summary>
        string PlanDataPlanId { get; set; }
        /// <summary>different usage type like PAYG/COMMITTED</summary>
        [global::Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.PSArgumentCompleterAttribute("PAYG", "COMMITTED")]
        string PlanDataUsageType { get; set; }
        /// <summary>Provisioning state of the resource.</summary>
        [global::Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.PSArgumentCompleterAttribute("Accepted", "Creating", "Updating", "Deleting", "Succeeded", "Failed", "Canceled", "Deleted", "NotSpecified")]
        string ProvisioningState { get; set; }

    }
}