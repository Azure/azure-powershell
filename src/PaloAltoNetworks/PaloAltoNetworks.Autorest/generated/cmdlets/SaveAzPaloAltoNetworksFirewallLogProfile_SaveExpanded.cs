// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Cmdlets
{
    using static Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Runtime.Extensions;
    using Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Runtime.PowerShell;
    using Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Runtime.Cmdlets;
    using System;

    /// <summary>Log Profile for Firewall</summary>
    /// <remarks>
    /// [OpenAPI] SaveLogProfile=>POST:"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/PaloAltoNetworks.Cloudngfw/firewalls/{firewallName}/saveLogProfile"
    /// </remarks>
    [global::System.Management.Automation.Cmdlet(global::System.Management.Automation.VerbsData.Save, @"AzPaloAltoNetworksFirewallLogProfile_SaveExpanded", SupportsShouldProcess = true)]
    [global::System.Management.Automation.OutputType(typeof(bool))]
    [global::Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Description(@"Log Profile for Firewall")]
    [global::Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Generated]
    [global::Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.HttpPath(Path = "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/PaloAltoNetworks.Cloudngfw/firewalls/{firewallName}/saveLogProfile", ApiVersion = "2023-09-01")]
    public partial class SaveAzPaloAltoNetworksFirewallLogProfile_SaveExpanded : global::System.Management.Automation.PSCmdlet,
        Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Runtime.IEventListener,
        Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Runtime.IContext
    {
        /// <summary>A unique id generatd for the this cmdlet when it is instantiated.</summary>
        private string __correlationId = System.Guid.NewGuid().ToString();

        /// <summary>A copy of the Invocation Info (necessary to allow asJob to clone this cmdlet)</summary>
        private global::System.Management.Automation.InvocationInfo __invocationInfo;

        /// <summary>A unique id generatd for the this cmdlet when ProcessRecord() is called.</summary>
        private string __processRecordId;

        /// <summary>
        /// The <see cref="global::System.Threading.CancellationTokenSource" /> for this operation.
        /// </summary>
        private global::System.Threading.CancellationTokenSource _cancellationTokenSource = new global::System.Threading.CancellationTokenSource();

        /// <summary>A dictionary to carry over additional data for pipeline.</summary>
        private global::System.Collections.Generic.Dictionary<global::System.String,global::System.Object> _extensibleParameters = new System.Collections.Generic.Dictionary<string, object>();

        /// <summary>A buffer to record first returned object in response.</summary>
        private object _firstResponse = null;

        /// <summary>Log Settings for Firewall</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Models.ILogSettings _logSettingsBody = new Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Models.LogSettings();

        /// <summary>
        /// A flag to tell whether it is the first returned object in a call. Zero means no response yet. One means 1 returned object.
        /// Two means multiple returned objects in response.
        /// </summary>
        private int _responseSize = 0;

        /// <summary>Resource id for Application Insights</summary>
        [global::System.Management.Automation.Parameter(Mandatory = false, HelpMessage = "Resource id for Application Insights")]
        [global::Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Category(global::Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.ParameterCategory.Body)]
        [Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Resource id for Application Insights",
        SerializedName = @"id",
        PossibleTypes = new [] { typeof(string) })]
        public string ApplicationInsightId { get => _logSettingsBody.ApplicationInsightId ?? null; set => _logSettingsBody.ApplicationInsightId = value; }

        /// <summary>Application Insights key</summary>
        [global::System.Management.Automation.Parameter(Mandatory = false, HelpMessage = "Application Insights key")]
        [global::Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Category(global::Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.ParameterCategory.Body)]
        [Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Application Insights key",
        SerializedName = @"key",
        PossibleTypes = new [] { typeof(string) })]
        public string ApplicationInsightKey { get => _logSettingsBody.ApplicationInsightKey ?? null; set => _logSettingsBody.ApplicationInsightKey = value; }

        /// <summary>Wait for .NET debugger to attach</summary>
        [global::System.Management.Automation.Parameter(Mandatory = false, DontShow = true, HelpMessage = "Wait for .NET debugger to attach")]
        [global::Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Category(global::Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.ParameterCategory.Runtime)]
        public global::System.Management.Automation.SwitchParameter Break { get; set; }

        /// <summary>Accessor for cancellationTokenSource.</summary>
        public global::System.Threading.CancellationTokenSource CancellationTokenSource { get => _cancellationTokenSource ; set { _cancellationTokenSource = value; } }

        /// <summary>The reference to the client API class.</summary>
        public Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.PaloAltoNetworks Client => Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Module.Instance.ClientAPI;

        /// <summary>Resource ID of EventHub</summary>
        [global::System.Management.Automation.Parameter(Mandatory = false, HelpMessage = "Resource ID of EventHub")]
        [global::Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Category(global::Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.ParameterCategory.Body)]
        [Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Resource ID of EventHub",
        SerializedName = @"id",
        PossibleTypes = new [] { typeof(string) })]
        public string CommonDestinationEventHubConfigurationsId { get => _logSettingsBody.CommonDestinationEventHubConfigurationsId ?? null; set => _logSettingsBody.CommonDestinationEventHubConfigurationsId = value; }

        /// <summary>EventHub name</summary>
        [global::System.Management.Automation.Parameter(Mandatory = false, HelpMessage = "EventHub name")]
        [global::Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Category(global::Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.ParameterCategory.Body)]
        [Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"EventHub name",
        SerializedName = @"name",
        PossibleTypes = new [] { typeof(string) })]
        public string CommonDestinationEventHubConfigurationsName { get => _logSettingsBody.CommonDestinationEventHubConfigurationsName ?? null; set => _logSettingsBody.CommonDestinationEventHubConfigurationsName = value; }

        /// <summary>EventHub namespace</summary>
        [global::System.Management.Automation.Parameter(Mandatory = false, HelpMessage = "EventHub namespace")]
        [global::Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Category(global::Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.ParameterCategory.Body)]
        [Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"EventHub namespace",
        SerializedName = @"nameSpace",
        PossibleTypes = new [] { typeof(string) })]
        public string CommonDestinationEventHubConfigurationsNameSpace { get => _logSettingsBody.CommonDestinationEventHubConfigurationsNameSpace ?? null; set => _logSettingsBody.CommonDestinationEventHubConfigurationsNameSpace = value; }

        /// <summary>EventHub policy name</summary>
        [global::System.Management.Automation.Parameter(Mandatory = false, HelpMessage = "EventHub policy name")]
        [global::Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Category(global::Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.ParameterCategory.Body)]
        [Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"EventHub policy name",
        SerializedName = @"policyName",
        PossibleTypes = new [] { typeof(string) })]
        public string CommonDestinationEventHubConfigurationsPolicyName { get => _logSettingsBody.CommonDestinationEventHubConfigurationsPolicyName ?? null; set => _logSettingsBody.CommonDestinationEventHubConfigurationsPolicyName = value; }

        /// <summary>Subscription Id</summary>
        [global::System.Management.Automation.Parameter(Mandatory = false, HelpMessage = "Subscription Id")]
        [global::Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Category(global::Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.ParameterCategory.Body)]
        [Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Subscription Id",
        SerializedName = @"subscriptionId",
        PossibleTypes = new [] { typeof(string) })]
        public string CommonDestinationEventHubConfigurationsSubscriptionId { get => _logSettingsBody.CommonDestinationEventHubConfigurationsSubscriptionId ?? null; set => _logSettingsBody.CommonDestinationEventHubConfigurationsSubscriptionId = value; }

        /// <summary>Resource ID of MonitorLog</summary>
        [global::System.Management.Automation.Parameter(Mandatory = false, HelpMessage = "Resource ID of MonitorLog")]
        [global::Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Category(global::Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.ParameterCategory.Body)]
        [Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Resource ID of MonitorLog",
        SerializedName = @"id",
        PossibleTypes = new [] { typeof(string) })]
        public string CommonDestinationMonitorConfigurationsId { get => _logSettingsBody.CommonDestinationMonitorConfigurationsId ?? null; set => _logSettingsBody.CommonDestinationMonitorConfigurationsId = value; }

        /// <summary>Primary Key value for Monitor</summary>
        [global::System.Management.Automation.Parameter(Mandatory = false, HelpMessage = "Primary Key value for Monitor")]
        [global::Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Category(global::Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.ParameterCategory.Body)]
        [Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Primary Key value for Monitor",
        SerializedName = @"primaryKey",
        PossibleTypes = new [] { typeof(string) })]
        public string CommonDestinationMonitorConfigurationsPrimaryKey { get => _logSettingsBody.CommonDestinationMonitorConfigurationsPrimaryKey ?? null; set => _logSettingsBody.CommonDestinationMonitorConfigurationsPrimaryKey = value; }

        /// <summary>Secondary Key value for Monitor</summary>
        [global::System.Management.Automation.Parameter(Mandatory = false, HelpMessage = "Secondary Key value for Monitor")]
        [global::Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Category(global::Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.ParameterCategory.Body)]
        [Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Secondary Key value for Monitor",
        SerializedName = @"secondaryKey",
        PossibleTypes = new [] { typeof(string) })]
        public string CommonDestinationMonitorConfigurationsSecondaryKey { get => _logSettingsBody.CommonDestinationMonitorConfigurationsSecondaryKey ?? null; set => _logSettingsBody.CommonDestinationMonitorConfigurationsSecondaryKey = value; }

        /// <summary>Subscription Id</summary>
        [global::System.Management.Automation.Parameter(Mandatory = false, HelpMessage = "Subscription Id")]
        [global::Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Category(global::Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.ParameterCategory.Body)]
        [Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Subscription Id",
        SerializedName = @"subscriptionId",
        PossibleTypes = new [] { typeof(string) })]
        public string CommonDestinationMonitorConfigurationsSubscriptionId { get => _logSettingsBody.CommonDestinationMonitorConfigurationsSubscriptionId ?? null; set => _logSettingsBody.CommonDestinationMonitorConfigurationsSubscriptionId = value; }

        /// <summary>MonitorLog workspace</summary>
        [global::System.Management.Automation.Parameter(Mandatory = false, HelpMessage = "MonitorLog workspace")]
        [global::Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Category(global::Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.ParameterCategory.Body)]
        [Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"MonitorLog workspace",
        SerializedName = @"workspace",
        PossibleTypes = new [] { typeof(string) })]
        public string CommonDestinationMonitorConfigurationsWorkspace { get => _logSettingsBody.CommonDestinationMonitorConfigurationsWorkspace ?? null; set => _logSettingsBody.CommonDestinationMonitorConfigurationsWorkspace = value; }

        /// <summary>Storage account name</summary>
        [global::System.Management.Automation.Parameter(Mandatory = false, HelpMessage = "Storage account name")]
        [global::Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Category(global::Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.ParameterCategory.Body)]
        [Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Storage account name",
        SerializedName = @"accountName",
        PossibleTypes = new [] { typeof(string) })]
        public string CommonDestinationStorageConfigurationsAccountName { get => _logSettingsBody.CommonDestinationStorageConfigurationsAccountName ?? null; set => _logSettingsBody.CommonDestinationStorageConfigurationsAccountName = value; }

        /// <summary>Resource ID of storage account</summary>
        [global::System.Management.Automation.Parameter(Mandatory = false, HelpMessage = "Resource ID of storage account")]
        [global::Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Category(global::Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.ParameterCategory.Body)]
        [Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Resource ID of storage account",
        SerializedName = @"id",
        PossibleTypes = new [] { typeof(string) })]
        public string CommonDestinationStorageConfigurationsId { get => _logSettingsBody.CommonDestinationStorageConfigurationsId ?? null; set => _logSettingsBody.CommonDestinationStorageConfigurationsId = value; }

        /// <summary>Subscription Id</summary>
        [global::System.Management.Automation.Parameter(Mandatory = false, HelpMessage = "Subscription Id")]
        [global::Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Category(global::Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.ParameterCategory.Body)]
        [Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Subscription Id",
        SerializedName = @"subscriptionId",
        PossibleTypes = new [] { typeof(string) })]
        public string CommonDestinationStorageConfigurationsSubscriptionId { get => _logSettingsBody.CommonDestinationStorageConfigurationsSubscriptionId ?? null; set => _logSettingsBody.CommonDestinationStorageConfigurationsSubscriptionId = value; }

        /// <summary>Resource ID of EventHub</summary>
        [global::System.Management.Automation.Parameter(Mandatory = false, HelpMessage = "Resource ID of EventHub")]
        [global::Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Category(global::Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.ParameterCategory.Body)]
        [Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Resource ID of EventHub",
        SerializedName = @"id",
        PossibleTypes = new [] { typeof(string) })]
        public string DecryptLogDestinationEventHubConfigurationsId { get => _logSettingsBody.DecryptLogDestinationEventHubConfigurationsId ?? null; set => _logSettingsBody.DecryptLogDestinationEventHubConfigurationsId = value; }

        /// <summary>EventHub name</summary>
        [global::System.Management.Automation.Parameter(Mandatory = false, HelpMessage = "EventHub name")]
        [global::Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Category(global::Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.ParameterCategory.Body)]
        [Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"EventHub name",
        SerializedName = @"name",
        PossibleTypes = new [] { typeof(string) })]
        public string DecryptLogDestinationEventHubConfigurationsName { get => _logSettingsBody.DecryptLogDestinationEventHubConfigurationsName ?? null; set => _logSettingsBody.DecryptLogDestinationEventHubConfigurationsName = value; }

        /// <summary>EventHub namespace</summary>
        [global::System.Management.Automation.Parameter(Mandatory = false, HelpMessage = "EventHub namespace")]
        [global::Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Category(global::Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.ParameterCategory.Body)]
        [Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"EventHub namespace",
        SerializedName = @"nameSpace",
        PossibleTypes = new [] { typeof(string) })]
        public string DecryptLogDestinationEventHubConfigurationsNameSpace { get => _logSettingsBody.DecryptLogDestinationEventHubConfigurationsNameSpace ?? null; set => _logSettingsBody.DecryptLogDestinationEventHubConfigurationsNameSpace = value; }

        /// <summary>EventHub policy name</summary>
        [global::System.Management.Automation.Parameter(Mandatory = false, HelpMessage = "EventHub policy name")]
        [global::Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Category(global::Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.ParameterCategory.Body)]
        [Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"EventHub policy name",
        SerializedName = @"policyName",
        PossibleTypes = new [] { typeof(string) })]
        public string DecryptLogDestinationEventHubConfigurationsPolicyName { get => _logSettingsBody.DecryptLogDestinationEventHubConfigurationsPolicyName ?? null; set => _logSettingsBody.DecryptLogDestinationEventHubConfigurationsPolicyName = value; }

        /// <summary>Subscription Id</summary>
        [global::System.Management.Automation.Parameter(Mandatory = false, HelpMessage = "Subscription Id")]
        [global::Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Category(global::Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.ParameterCategory.Body)]
        [Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Subscription Id",
        SerializedName = @"subscriptionId",
        PossibleTypes = new [] { typeof(string) })]
        public string DecryptLogDestinationEventHubConfigurationsSubscriptionId { get => _logSettingsBody.DecryptLogDestinationEventHubConfigurationsSubscriptionId ?? null; set => _logSettingsBody.DecryptLogDestinationEventHubConfigurationsSubscriptionId = value; }

        /// <summary>Resource ID of MonitorLog</summary>
        [global::System.Management.Automation.Parameter(Mandatory = false, HelpMessage = "Resource ID of MonitorLog")]
        [global::Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Category(global::Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.ParameterCategory.Body)]
        [Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Resource ID of MonitorLog",
        SerializedName = @"id",
        PossibleTypes = new [] { typeof(string) })]
        public string DecryptLogDestinationMonitorConfigurationsId { get => _logSettingsBody.DecryptLogDestinationMonitorConfigurationsId ?? null; set => _logSettingsBody.DecryptLogDestinationMonitorConfigurationsId = value; }

        /// <summary>Primary Key value for Monitor</summary>
        [global::System.Management.Automation.Parameter(Mandatory = false, HelpMessage = "Primary Key value for Monitor")]
        [global::Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Category(global::Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.ParameterCategory.Body)]
        [Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Primary Key value for Monitor",
        SerializedName = @"primaryKey",
        PossibleTypes = new [] { typeof(string) })]
        public string DecryptLogDestinationMonitorConfigurationsPrimaryKey { get => _logSettingsBody.DecryptLogDestinationMonitorConfigurationsPrimaryKey ?? null; set => _logSettingsBody.DecryptLogDestinationMonitorConfigurationsPrimaryKey = value; }

        /// <summary>Secondary Key value for Monitor</summary>
        [global::System.Management.Automation.Parameter(Mandatory = false, HelpMessage = "Secondary Key value for Monitor")]
        [global::Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Category(global::Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.ParameterCategory.Body)]
        [Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Secondary Key value for Monitor",
        SerializedName = @"secondaryKey",
        PossibleTypes = new [] { typeof(string) })]
        public string DecryptLogDestinationMonitorConfigurationsSecondaryKey { get => _logSettingsBody.DecryptLogDestinationMonitorConfigurationsSecondaryKey ?? null; set => _logSettingsBody.DecryptLogDestinationMonitorConfigurationsSecondaryKey = value; }

        /// <summary>Subscription Id</summary>
        [global::System.Management.Automation.Parameter(Mandatory = false, HelpMessage = "Subscription Id")]
        [global::Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Category(global::Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.ParameterCategory.Body)]
        [Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Subscription Id",
        SerializedName = @"subscriptionId",
        PossibleTypes = new [] { typeof(string) })]
        public string DecryptLogDestinationMonitorConfigurationsSubscriptionId { get => _logSettingsBody.DecryptLogDestinationMonitorConfigurationsSubscriptionId ?? null; set => _logSettingsBody.DecryptLogDestinationMonitorConfigurationsSubscriptionId = value; }

        /// <summary>MonitorLog workspace</summary>
        [global::System.Management.Automation.Parameter(Mandatory = false, HelpMessage = "MonitorLog workspace")]
        [global::Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Category(global::Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.ParameterCategory.Body)]
        [Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"MonitorLog workspace",
        SerializedName = @"workspace",
        PossibleTypes = new [] { typeof(string) })]
        public string DecryptLogDestinationMonitorConfigurationsWorkspace { get => _logSettingsBody.DecryptLogDestinationMonitorConfigurationsWorkspace ?? null; set => _logSettingsBody.DecryptLogDestinationMonitorConfigurationsWorkspace = value; }

        /// <summary>Storage account name</summary>
        [global::System.Management.Automation.Parameter(Mandatory = false, HelpMessage = "Storage account name")]
        [global::Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Category(global::Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.ParameterCategory.Body)]
        [Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Storage account name",
        SerializedName = @"accountName",
        PossibleTypes = new [] { typeof(string) })]
        public string DecryptLogDestinationStorageConfigurationsAccountName { get => _logSettingsBody.DecryptLogDestinationStorageConfigurationsAccountName ?? null; set => _logSettingsBody.DecryptLogDestinationStorageConfigurationsAccountName = value; }

        /// <summary>Resource ID of storage account</summary>
        [global::System.Management.Automation.Parameter(Mandatory = false, HelpMessage = "Resource ID of storage account")]
        [global::Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Category(global::Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.ParameterCategory.Body)]
        [Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Resource ID of storage account",
        SerializedName = @"id",
        PossibleTypes = new [] { typeof(string) })]
        public string DecryptLogDestinationStorageConfigurationsId { get => _logSettingsBody.DecryptLogDestinationStorageConfigurationsId ?? null; set => _logSettingsBody.DecryptLogDestinationStorageConfigurationsId = value; }

        /// <summary>Subscription Id</summary>
        [global::System.Management.Automation.Parameter(Mandatory = false, HelpMessage = "Subscription Id")]
        [global::Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Category(global::Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.ParameterCategory.Body)]
        [Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Subscription Id",
        SerializedName = @"subscriptionId",
        PossibleTypes = new [] { typeof(string) })]
        public string DecryptLogDestinationStorageConfigurationsSubscriptionId { get => _logSettingsBody.DecryptLogDestinationStorageConfigurationsSubscriptionId ?? null; set => _logSettingsBody.DecryptLogDestinationStorageConfigurationsSubscriptionId = value; }

        /// <summary>
        /// The DefaultProfile parameter is not functional. Use the SubscriptionId parameter when available if executing the cmdlet
        /// against a different subscription
        /// </summary>
        [global::System.Management.Automation.Parameter(Mandatory = false, HelpMessage = "The DefaultProfile parameter is not functional. Use the SubscriptionId parameter when available if executing the cmdlet against a different subscription.")]
        [global::System.Management.Automation.ValidateNotNull]
        [global::System.Management.Automation.Alias("AzureRMContext", "AzureCredential")]
        [global::Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Category(global::Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.ParameterCategory.Azure)]
        public global::System.Management.Automation.PSObject DefaultProfile { get; set; }

        /// <summary>Accessor for extensibleParameters.</summary>
        public global::System.Collections.Generic.IDictionary<global::System.String,global::System.Object> ExtensibleParameters { get => _extensibleParameters ; }

        /// <summary>Backing field for <see cref="FirewallName" /> property.</summary>
        private string _firewallName;

        /// <summary>Firewall resource name</summary>
        [global::System.Management.Automation.Parameter(Mandatory = true, HelpMessage = "Firewall resource name")]
        [Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"Firewall resource name",
        SerializedName = @"firewallName",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Category(global::Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.ParameterCategory.Path)]
        public string FirewallName { get => this._firewallName; set => this._firewallName = value; }

        /// <summary>SendAsync Pipeline Steps to be appended to the front of the pipeline</summary>
        [global::System.Management.Automation.Parameter(Mandatory = false, DontShow = true, HelpMessage = "SendAsync Pipeline Steps to be appended to the front of the pipeline")]
        [global::System.Management.Automation.ValidateNotNull]
        [global::Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Category(global::Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.ParameterCategory.Runtime)]
        public Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Runtime.SendAsyncStep[] HttpPipelineAppend { get; set; }

        /// <summary>SendAsync Pipeline Steps to be prepended to the front of the pipeline</summary>
        [global::System.Management.Automation.Parameter(Mandatory = false, DontShow = true, HelpMessage = "SendAsync Pipeline Steps to be prepended to the front of the pipeline")]
        [global::System.Management.Automation.ValidateNotNull]
        [global::Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Category(global::Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.ParameterCategory.Runtime)]
        public Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Runtime.SendAsyncStep[] HttpPipelinePrepend { get; set; }

        /// <summary>Accessor for our copy of the InvocationInfo.</summary>
        public global::System.Management.Automation.InvocationInfo InvocationInformation { get => __invocationInfo = __invocationInfo ?? this.MyInvocation ; set { __invocationInfo = value; } }

        /// <summary>Log option SAME/INDIVIDUAL</summary>
        [global::System.Management.Automation.Parameter(Mandatory = false, HelpMessage = "Log option SAME/INDIVIDUAL")]
        [global::Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Category(global::Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.ParameterCategory.Body)]
        [Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Log option SAME/INDIVIDUAL",
        SerializedName = @"logOption",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.PSArgumentCompleterAttribute("SAME_DESTINATION", "INDIVIDUAL_DESTINATION")]
        public string LogOption { get => _logSettingsBody.LogOption ?? null; set => _logSettingsBody.LogOption = value; }

        /// <summary>One of possible log type</summary>
        [global::System.Management.Automation.Parameter(Mandatory = false, HelpMessage = "One of possible log type")]
        [global::Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Category(global::Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.ParameterCategory.Body)]
        [Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"One of possible log type",
        SerializedName = @"logType",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.PSArgumentCompleterAttribute("TRAFFIC", "THREAT", "DECRYPTION", "WILDFIRE", "DLP", "AUDIT")]
        public string LogType { get => _logSettingsBody.LogType ?? null; set => _logSettingsBody.LogType = value; }

        /// <summary>
        /// <see cref="Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Runtime.IEventListener" /> cancellation delegate. Stops the cmdlet when called.
        /// </summary>
        global::System.Action Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Runtime.IEventListener.Cancel => _cancellationTokenSource.Cancel;

        /// <summary><see cref="Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Runtime.IEventListener" /> cancellation token.</summary>
        global::System.Threading.CancellationToken Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Runtime.IEventListener.Token => _cancellationTokenSource.Token;

        /// <summary>
        /// When specified, forces the cmdlet return a 'bool' given that there isn't a return type by default.
        /// </summary>
        [global::System.Management.Automation.Parameter(Mandatory = false, HelpMessage = "Returns true when the command succeeds")]
        [global::Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Category(global::Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.ParameterCategory.Runtime)]
        public global::System.Management.Automation.SwitchParameter PassThru { get; set; }

        /// <summary>
        /// The instance of the <see cref="Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Runtime.HttpPipeline" /> that the remote call will use.
        /// </summary>
        public Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Runtime.HttpPipeline Pipeline { get; set; }

        /// <summary>The URI for the proxy server to use</summary>
        [global::System.Management.Automation.Parameter(Mandatory = false, DontShow = true, HelpMessage = "The URI for the proxy server to use")]
        [global::Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Category(global::Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.ParameterCategory.Runtime)]
        public global::System.Uri Proxy { get; set; }

        /// <summary>Credentials for a proxy server to use for the remote call</summary>
        [global::System.Management.Automation.Parameter(Mandatory = false, DontShow = true, HelpMessage = "Credentials for a proxy server to use for the remote call")]
        [global::System.Management.Automation.ValidateNotNull]
        [global::Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Category(global::Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.ParameterCategory.Runtime)]
        public global::System.Management.Automation.PSCredential ProxyCredential { get; set; }

        /// <summary>Use the default credentials for the proxy</summary>
        [global::System.Management.Automation.Parameter(Mandatory = false, DontShow = true, HelpMessage = "Use the default credentials for the proxy")]
        [global::Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Category(global::Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.ParameterCategory.Runtime)]
        public global::System.Management.Automation.SwitchParameter ProxyUseDefaultCredentials { get; set; }

        /// <summary>Backing field for <see cref="ResourceGroupName" /> property.</summary>
        private string _resourceGroupName;

        /// <summary>The name of the resource group. The name is case insensitive.</summary>
        [global::System.Management.Automation.Parameter(Mandatory = true, HelpMessage = "The name of the resource group. The name is case insensitive.")]
        [Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"The name of the resource group. The name is case insensitive.",
        SerializedName = @"resourceGroupName",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Category(global::Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.ParameterCategory.Path)]
        public string ResourceGroupName { get => this._resourceGroupName; set => this._resourceGroupName = value; }

        /// <summary>Backing field for <see cref="SubscriptionId" /> property.</summary>
        private string _subscriptionId;

        /// <summary>The ID of the target subscription.</summary>
        [global::System.Management.Automation.Parameter(Mandatory = true, HelpMessage = "The ID of the target subscription.")]
        [Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"The ID of the target subscription.",
        SerializedName = @"subscriptionId",
        PossibleTypes = new [] { typeof(string) })]
        [Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Runtime.DefaultInfo(
        Name = @"",
        Description =@"",
        Script = @"(Get-AzContext).Subscription.Id",
        SetCondition = @"")]
        [global::Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Category(global::Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.ParameterCategory.Path)]
        public string SubscriptionId { get => this._subscriptionId; set => this._subscriptionId = value; }

        /// <summary>Resource ID of EventHub</summary>
        [global::System.Management.Automation.Parameter(Mandatory = false, HelpMessage = "Resource ID of EventHub")]
        [global::Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Category(global::Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.ParameterCategory.Body)]
        [Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Resource ID of EventHub",
        SerializedName = @"id",
        PossibleTypes = new [] { typeof(string) })]
        public string ThreatLogDestinationEventHubConfigurationsId { get => _logSettingsBody.ThreatLogDestinationEventHubConfigurationsId ?? null; set => _logSettingsBody.ThreatLogDestinationEventHubConfigurationsId = value; }

        /// <summary>EventHub name</summary>
        [global::System.Management.Automation.Parameter(Mandatory = false, HelpMessage = "EventHub name")]
        [global::Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Category(global::Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.ParameterCategory.Body)]
        [Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"EventHub name",
        SerializedName = @"name",
        PossibleTypes = new [] { typeof(string) })]
        public string ThreatLogDestinationEventHubConfigurationsName { get => _logSettingsBody.ThreatLogDestinationEventHubConfigurationsName ?? null; set => _logSettingsBody.ThreatLogDestinationEventHubConfigurationsName = value; }

        /// <summary>EventHub namespace</summary>
        [global::System.Management.Automation.Parameter(Mandatory = false, HelpMessage = "EventHub namespace")]
        [global::Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Category(global::Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.ParameterCategory.Body)]
        [Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"EventHub namespace",
        SerializedName = @"nameSpace",
        PossibleTypes = new [] { typeof(string) })]
        public string ThreatLogDestinationEventHubConfigurationsNameSpace { get => _logSettingsBody.ThreatLogDestinationEventHubConfigurationsNameSpace ?? null; set => _logSettingsBody.ThreatLogDestinationEventHubConfigurationsNameSpace = value; }

        /// <summary>EventHub policy name</summary>
        [global::System.Management.Automation.Parameter(Mandatory = false, HelpMessage = "EventHub policy name")]
        [global::Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Category(global::Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.ParameterCategory.Body)]
        [Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"EventHub policy name",
        SerializedName = @"policyName",
        PossibleTypes = new [] { typeof(string) })]
        public string ThreatLogDestinationEventHubConfigurationsPolicyName { get => _logSettingsBody.ThreatLogDestinationEventHubConfigurationsPolicyName ?? null; set => _logSettingsBody.ThreatLogDestinationEventHubConfigurationsPolicyName = value; }

        /// <summary>Subscription Id</summary>
        [global::System.Management.Automation.Parameter(Mandatory = false, HelpMessage = "Subscription Id")]
        [global::Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Category(global::Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.ParameterCategory.Body)]
        [Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Subscription Id",
        SerializedName = @"subscriptionId",
        PossibleTypes = new [] { typeof(string) })]
        public string ThreatLogDestinationEventHubConfigurationsSubscriptionId { get => _logSettingsBody.ThreatLogDestinationEventHubConfigurationsSubscriptionId ?? null; set => _logSettingsBody.ThreatLogDestinationEventHubConfigurationsSubscriptionId = value; }

        /// <summary>Resource ID of MonitorLog</summary>
        [global::System.Management.Automation.Parameter(Mandatory = false, HelpMessage = "Resource ID of MonitorLog")]
        [global::Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Category(global::Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.ParameterCategory.Body)]
        [Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Resource ID of MonitorLog",
        SerializedName = @"id",
        PossibleTypes = new [] { typeof(string) })]
        public string ThreatLogDestinationMonitorConfigurationsId { get => _logSettingsBody.ThreatLogDestinationMonitorConfigurationsId ?? null; set => _logSettingsBody.ThreatLogDestinationMonitorConfigurationsId = value; }

        /// <summary>Primary Key value for Monitor</summary>
        [global::System.Management.Automation.Parameter(Mandatory = false, HelpMessage = "Primary Key value for Monitor")]
        [global::Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Category(global::Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.ParameterCategory.Body)]
        [Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Primary Key value for Monitor",
        SerializedName = @"primaryKey",
        PossibleTypes = new [] { typeof(string) })]
        public string ThreatLogDestinationMonitorConfigurationsPrimaryKey { get => _logSettingsBody.ThreatLogDestinationMonitorConfigurationsPrimaryKey ?? null; set => _logSettingsBody.ThreatLogDestinationMonitorConfigurationsPrimaryKey = value; }

        /// <summary>Secondary Key value for Monitor</summary>
        [global::System.Management.Automation.Parameter(Mandatory = false, HelpMessage = "Secondary Key value for Monitor")]
        [global::Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Category(global::Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.ParameterCategory.Body)]
        [Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Secondary Key value for Monitor",
        SerializedName = @"secondaryKey",
        PossibleTypes = new [] { typeof(string) })]
        public string ThreatLogDestinationMonitorConfigurationsSecondaryKey { get => _logSettingsBody.ThreatLogDestinationMonitorConfigurationsSecondaryKey ?? null; set => _logSettingsBody.ThreatLogDestinationMonitorConfigurationsSecondaryKey = value; }

        /// <summary>Subscription Id</summary>
        [global::System.Management.Automation.Parameter(Mandatory = false, HelpMessage = "Subscription Id")]
        [global::Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Category(global::Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.ParameterCategory.Body)]
        [Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Subscription Id",
        SerializedName = @"subscriptionId",
        PossibleTypes = new [] { typeof(string) })]
        public string ThreatLogDestinationMonitorConfigurationsSubscriptionId { get => _logSettingsBody.ThreatLogDestinationMonitorConfigurationsSubscriptionId ?? null; set => _logSettingsBody.ThreatLogDestinationMonitorConfigurationsSubscriptionId = value; }

        /// <summary>MonitorLog workspace</summary>
        [global::System.Management.Automation.Parameter(Mandatory = false, HelpMessage = "MonitorLog workspace")]
        [global::Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Category(global::Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.ParameterCategory.Body)]
        [Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"MonitorLog workspace",
        SerializedName = @"workspace",
        PossibleTypes = new [] { typeof(string) })]
        public string ThreatLogDestinationMonitorConfigurationsWorkspace { get => _logSettingsBody.ThreatLogDestinationMonitorConfigurationsWorkspace ?? null; set => _logSettingsBody.ThreatLogDestinationMonitorConfigurationsWorkspace = value; }

        /// <summary>Storage account name</summary>
        [global::System.Management.Automation.Parameter(Mandatory = false, HelpMessage = "Storage account name")]
        [global::Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Category(global::Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.ParameterCategory.Body)]
        [Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Storage account name",
        SerializedName = @"accountName",
        PossibleTypes = new [] { typeof(string) })]
        public string ThreatLogDestinationStorageConfigurationsAccountName { get => _logSettingsBody.ThreatLogDestinationStorageConfigurationsAccountName ?? null; set => _logSettingsBody.ThreatLogDestinationStorageConfigurationsAccountName = value; }

        /// <summary>Resource ID of storage account</summary>
        [global::System.Management.Automation.Parameter(Mandatory = false, HelpMessage = "Resource ID of storage account")]
        [global::Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Category(global::Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.ParameterCategory.Body)]
        [Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Resource ID of storage account",
        SerializedName = @"id",
        PossibleTypes = new [] { typeof(string) })]
        public string ThreatLogDestinationStorageConfigurationsId { get => _logSettingsBody.ThreatLogDestinationStorageConfigurationsId ?? null; set => _logSettingsBody.ThreatLogDestinationStorageConfigurationsId = value; }

        /// <summary>Subscription Id</summary>
        [global::System.Management.Automation.Parameter(Mandatory = false, HelpMessage = "Subscription Id")]
        [global::Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Category(global::Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.ParameterCategory.Body)]
        [Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Subscription Id",
        SerializedName = @"subscriptionId",
        PossibleTypes = new [] { typeof(string) })]
        public string ThreatLogDestinationStorageConfigurationsSubscriptionId { get => _logSettingsBody.ThreatLogDestinationStorageConfigurationsSubscriptionId ?? null; set => _logSettingsBody.ThreatLogDestinationStorageConfigurationsSubscriptionId = value; }

        /// <summary>Resource ID of EventHub</summary>
        [global::System.Management.Automation.Parameter(Mandatory = false, HelpMessage = "Resource ID of EventHub")]
        [global::Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Category(global::Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.ParameterCategory.Body)]
        [Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Resource ID of EventHub",
        SerializedName = @"id",
        PossibleTypes = new [] { typeof(string) })]
        public string TrafficLogDestinationEventHubConfigurationsId { get => _logSettingsBody.TrafficLogDestinationEventHubConfigurationsId ?? null; set => _logSettingsBody.TrafficLogDestinationEventHubConfigurationsId = value; }

        /// <summary>EventHub name</summary>
        [global::System.Management.Automation.Parameter(Mandatory = false, HelpMessage = "EventHub name")]
        [global::Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Category(global::Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.ParameterCategory.Body)]
        [Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"EventHub name",
        SerializedName = @"name",
        PossibleTypes = new [] { typeof(string) })]
        public string TrafficLogDestinationEventHubConfigurationsName { get => _logSettingsBody.TrafficLogDestinationEventHubConfigurationsName ?? null; set => _logSettingsBody.TrafficLogDestinationEventHubConfigurationsName = value; }

        /// <summary>EventHub namespace</summary>
        [global::System.Management.Automation.Parameter(Mandatory = false, HelpMessage = "EventHub namespace")]
        [global::Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Category(global::Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.ParameterCategory.Body)]
        [Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"EventHub namespace",
        SerializedName = @"nameSpace",
        PossibleTypes = new [] { typeof(string) })]
        public string TrafficLogDestinationEventHubConfigurationsNameSpace { get => _logSettingsBody.TrafficLogDestinationEventHubConfigurationsNameSpace ?? null; set => _logSettingsBody.TrafficLogDestinationEventHubConfigurationsNameSpace = value; }

        /// <summary>EventHub policy name</summary>
        [global::System.Management.Automation.Parameter(Mandatory = false, HelpMessage = "EventHub policy name")]
        [global::Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Category(global::Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.ParameterCategory.Body)]
        [Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"EventHub policy name",
        SerializedName = @"policyName",
        PossibleTypes = new [] { typeof(string) })]
        public string TrafficLogDestinationEventHubConfigurationsPolicyName { get => _logSettingsBody.TrafficLogDestinationEventHubConfigurationsPolicyName ?? null; set => _logSettingsBody.TrafficLogDestinationEventHubConfigurationsPolicyName = value; }

        /// <summary>Subscription Id</summary>
        [global::System.Management.Automation.Parameter(Mandatory = false, HelpMessage = "Subscription Id")]
        [global::Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Category(global::Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.ParameterCategory.Body)]
        [Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Subscription Id",
        SerializedName = @"subscriptionId",
        PossibleTypes = new [] { typeof(string) })]
        public string TrafficLogDestinationEventHubConfigurationsSubscriptionId { get => _logSettingsBody.TrafficLogDestinationEventHubConfigurationsSubscriptionId ?? null; set => _logSettingsBody.TrafficLogDestinationEventHubConfigurationsSubscriptionId = value; }

        /// <summary>Resource ID of MonitorLog</summary>
        [global::System.Management.Automation.Parameter(Mandatory = false, HelpMessage = "Resource ID of MonitorLog")]
        [global::Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Category(global::Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.ParameterCategory.Body)]
        [Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Resource ID of MonitorLog",
        SerializedName = @"id",
        PossibleTypes = new [] { typeof(string) })]
        public string TrafficLogDestinationMonitorConfigurationsId { get => _logSettingsBody.TrafficLogDestinationMonitorConfigurationsId ?? null; set => _logSettingsBody.TrafficLogDestinationMonitorConfigurationsId = value; }

        /// <summary>Primary Key value for Monitor</summary>
        [global::System.Management.Automation.Parameter(Mandatory = false, HelpMessage = "Primary Key value for Monitor")]
        [global::Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Category(global::Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.ParameterCategory.Body)]
        [Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Primary Key value for Monitor",
        SerializedName = @"primaryKey",
        PossibleTypes = new [] { typeof(string) })]
        public string TrafficLogDestinationMonitorConfigurationsPrimaryKey { get => _logSettingsBody.TrafficLogDestinationMonitorConfigurationsPrimaryKey ?? null; set => _logSettingsBody.TrafficLogDestinationMonitorConfigurationsPrimaryKey = value; }

        /// <summary>Secondary Key value for Monitor</summary>
        [global::System.Management.Automation.Parameter(Mandatory = false, HelpMessage = "Secondary Key value for Monitor")]
        [global::Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Category(global::Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.ParameterCategory.Body)]
        [Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Secondary Key value for Monitor",
        SerializedName = @"secondaryKey",
        PossibleTypes = new [] { typeof(string) })]
        public string TrafficLogDestinationMonitorConfigurationsSecondaryKey { get => _logSettingsBody.TrafficLogDestinationMonitorConfigurationsSecondaryKey ?? null; set => _logSettingsBody.TrafficLogDestinationMonitorConfigurationsSecondaryKey = value; }

        /// <summary>Subscription Id</summary>
        [global::System.Management.Automation.Parameter(Mandatory = false, HelpMessage = "Subscription Id")]
        [global::Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Category(global::Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.ParameterCategory.Body)]
        [Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Subscription Id",
        SerializedName = @"subscriptionId",
        PossibleTypes = new [] { typeof(string) })]
        public string TrafficLogDestinationMonitorConfigurationsSubscriptionId { get => _logSettingsBody.TrafficLogDestinationMonitorConfigurationsSubscriptionId ?? null; set => _logSettingsBody.TrafficLogDestinationMonitorConfigurationsSubscriptionId = value; }

        /// <summary>MonitorLog workspace</summary>
        [global::System.Management.Automation.Parameter(Mandatory = false, HelpMessage = "MonitorLog workspace")]
        [global::Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Category(global::Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.ParameterCategory.Body)]
        [Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"MonitorLog workspace",
        SerializedName = @"workspace",
        PossibleTypes = new [] { typeof(string) })]
        public string TrafficLogDestinationMonitorConfigurationsWorkspace { get => _logSettingsBody.TrafficLogDestinationMonitorConfigurationsWorkspace ?? null; set => _logSettingsBody.TrafficLogDestinationMonitorConfigurationsWorkspace = value; }

        /// <summary>Storage account name</summary>
        [global::System.Management.Automation.Parameter(Mandatory = false, HelpMessage = "Storage account name")]
        [global::Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Category(global::Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.ParameterCategory.Body)]
        [Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Storage account name",
        SerializedName = @"accountName",
        PossibleTypes = new [] { typeof(string) })]
        public string TrafficLogDestinationStorageConfigurationsAccountName { get => _logSettingsBody.TrafficLogDestinationStorageConfigurationsAccountName ?? null; set => _logSettingsBody.TrafficLogDestinationStorageConfigurationsAccountName = value; }

        /// <summary>Resource ID of storage account</summary>
        [global::System.Management.Automation.Parameter(Mandatory = false, HelpMessage = "Resource ID of storage account")]
        [global::Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Category(global::Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.ParameterCategory.Body)]
        [Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Resource ID of storage account",
        SerializedName = @"id",
        PossibleTypes = new [] { typeof(string) })]
        public string TrafficLogDestinationStorageConfigurationsId { get => _logSettingsBody.TrafficLogDestinationStorageConfigurationsId ?? null; set => _logSettingsBody.TrafficLogDestinationStorageConfigurationsId = value; }

        /// <summary>Subscription Id</summary>
        [global::System.Management.Automation.Parameter(Mandatory = false, HelpMessage = "Subscription Id")]
        [global::Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Category(global::Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.ParameterCategory.Body)]
        [Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Subscription Id",
        SerializedName = @"subscriptionId",
        PossibleTypes = new [] { typeof(string) })]
        public string TrafficLogDestinationStorageConfigurationsSubscriptionId { get => _logSettingsBody.TrafficLogDestinationStorageConfigurationsSubscriptionId ?? null; set => _logSettingsBody.TrafficLogDestinationStorageConfigurationsSubscriptionId = value; }

        /// <summary>
        /// <c>overrideOnDefault</c> will be called before the regular onDefault has been processed, allowing customization of what
        /// happens on that response. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="responseMessage">the raw response message as an global::System.Net.Http.HttpResponseMessage.</param>
        /// <param name="response">the body result as a <see cref="Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Models.IErrorResponse">Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Models.IErrorResponse</see>
        /// from the remote call</param>
        /// <param name="returnNow">/// Determines if the rest of the onDefault method should be processed, or if the method should
        /// return immediately (set to true to skip further processing )</param>

        partial void overrideOnDefault(global::System.Net.Http.HttpResponseMessage responseMessage, global::System.Threading.Tasks.Task<Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Models.IErrorResponse> response, ref global::System.Threading.Tasks.Task<bool> returnNow);

        /// <summary>
        /// <c>overrideOnNoContent</c> will be called before the regular onNoContent has been processed, allowing customization of
        /// what happens on that response. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="responseMessage">the raw response message as an global::System.Net.Http.HttpResponseMessage.</param>
        /// <param name="returnNow">/// Determines if the rest of the onNoContent method should be processed, or if the method should
        /// return immediately (set to true to skip further processing )</param>

        partial void overrideOnNoContent(global::System.Net.Http.HttpResponseMessage responseMessage, ref global::System.Threading.Tasks.Task<bool> returnNow);

        /// <summary>
        /// (overrides the default BeginProcessing method in global::System.Management.Automation.PSCmdlet)
        /// </summary>
        protected override void BeginProcessing()
        {
            var telemetryId = Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Module.Instance.GetTelemetryId.Invoke();
            if (telemetryId != "" && telemetryId != "internal")
            {
                __correlationId = telemetryId;
            }
            Module.Instance.SetProxyConfiguration(Proxy, ProxyCredential, ProxyUseDefaultCredentials);
            if (Break)
            {
                Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Runtime.AttachDebugger.Break();
            }
            ((Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Runtime.IEventListener)this).Signal(Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Runtime.Events.CmdletBeginProcessing).Wait(); if( ((Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Runtime.IEventListener)this).Token.IsCancellationRequested ) { return; }
        }

        /// <summary>Performs clean-up after the command execution</summary>
        protected override void EndProcessing()
        {
            if (1 ==_responseSize)
            {
                // Flush buffer
                WriteObject(_firstResponse);
            }
            var telemetryInfo = Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Module.Instance.GetTelemetryInfo?.Invoke(__correlationId);
            if (telemetryInfo != null)
            {
                telemetryInfo.TryGetValue("ShowSecretsWarning", out var showSecretsWarning);
                telemetryInfo.TryGetValue("SanitizedProperties", out var sanitizedProperties);
                telemetryInfo.TryGetValue("InvocationName", out var invocationName);
                if (showSecretsWarning == "true")
                {
                    if (string.IsNullOrEmpty(sanitizedProperties))
                    {
                        WriteWarning($"The output of cmdlet {invocationName} may compromise security by showing secrets. Learn more at https://go.microsoft.com/fwlink/?linkid=2258844");
                    }
                    else
                    {
                        WriteWarning($"The output of cmdlet {invocationName} may compromise security by showing the following secrets: {sanitizedProperties}. Learn more at https://go.microsoft.com/fwlink/?linkid=2258844");
                    }
                }
            }
        }

        /// <summary>Handles/Dispatches events during the call to the REST service.</summary>
        /// <param name="id">The message id</param>
        /// <param name="token">The message cancellation token. When this call is cancelled, this should be <c>true</c></param>
        /// <param name="messageData">Detailed message data for the message event.</param>
        /// <returns>
        /// A <see cref="global::System.Threading.Tasks.Task" /> that will be complete when handling of the message is completed.
        /// </returns>
         async global::System.Threading.Tasks.Task Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Runtime.IEventListener.Signal(string id, global::System.Threading.CancellationToken token, global::System.Func<Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Runtime.EventData> messageData)
        {
            using( NoSynchronizationContext )
            {
                if (token.IsCancellationRequested)
                {
                    return ;
                }

                switch ( id )
                {
                    case Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Runtime.Events.Verbose:
                    {
                        WriteVerbose($"{(messageData().Message ?? global::System.String.Empty)}");
                        return ;
                    }
                    case Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Runtime.Events.Warning:
                    {
                        WriteWarning($"{(messageData().Message ?? global::System.String.Empty)}");
                        return ;
                    }
                    case Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Runtime.Events.Information:
                    {
                        var data = messageData();
                        WriteInformation(data.Message, new string[]{});
                        return ;
                    }
                    case Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Runtime.Events.Debug:
                    {
                        WriteDebug($"{(messageData().Message ?? global::System.String.Empty)}");
                        return ;
                    }
                    case Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Runtime.Events.Error:
                    {
                        WriteError(new global::System.Management.Automation.ErrorRecord( new global::System.Exception(messageData().Message), string.Empty, global::System.Management.Automation.ErrorCategory.NotSpecified, null ) );
                        return ;
                    }
                    case Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Runtime.Events.Progress:
                    {
                        var data = messageData();
                        int progress = (int)data.Value;
                        string activityMessage, statusDescription;
                        global::System.Management.Automation.ProgressRecordType recordType;
                        if (progress < 100)
                        {
                            activityMessage = "In progress";
                            statusDescription = "Checking operation status";
                            recordType = System.Management.Automation.ProgressRecordType.Processing;
                        }
                        else
                        {
                            activityMessage = "Completed";
                            statusDescription = "Completed";
                            recordType = System.Management.Automation.ProgressRecordType.Completed;
                        }
                        WriteProgress(new global::System.Management.Automation.ProgressRecord(1, activityMessage, statusDescription)
                        {
                            PercentComplete = progress,
                        RecordType = recordType
                        });
                        return ;
                    }
                }
                await Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Module.Instance.Signal(id, token, messageData, (i, t, m) => ((Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Runtime.IEventListener)this).Signal(i, t, () => Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Runtime.EventDataConverter.ConvertFrom(m()) as Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Runtime.EventData), InvocationInformation, this.ParameterSetName, __correlationId, __processRecordId, null );
                if (token.IsCancellationRequested)
                {
                    return ;
                }
                WriteDebug($"{id}: {(messageData().Message ?? global::System.String.Empty)}");
            }
        }

        /// <summary>Performs execution of the command.</summary>
        protected override void ProcessRecord()
        {
            ((Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Runtime.IEventListener)this).Signal(Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Runtime.Events.CmdletProcessRecordStart).Wait(); if( ((Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Runtime.IEventListener)this).Token.IsCancellationRequested ) { return; }
            __processRecordId = System.Guid.NewGuid().ToString();
            try
            {
                // work
                if (ShouldProcess($"Call remote 'FirewallsSaveLogProfile' operation"))
                {
                    using( var asyncCommandRuntime = new Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Runtime.PowerShell.AsyncCommandRuntime(this, ((Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Runtime.IEventListener)this).Token) )
                    {
                        asyncCommandRuntime.Wait( ProcessRecordAsync(),((Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Runtime.IEventListener)this).Token);
                    }
                }
            }
            catch (global::System.AggregateException aggregateException)
            {
                // unroll the inner exceptions to get the root cause
                foreach( var innerException in aggregateException.Flatten().InnerExceptions )
                {
                    ((Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Runtime.IEventListener)this).Signal(Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Runtime.Events.CmdletException, $"{innerException.GetType().Name} - {innerException.Message} : {innerException.StackTrace}").Wait(); if( ((Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Runtime.IEventListener)this).Token.IsCancellationRequested ) { return; }
                    // Write exception out to error channel.
                    WriteError( new global::System.Management.Automation.ErrorRecord(innerException,string.Empty, global::System.Management.Automation.ErrorCategory.NotSpecified, null) );
                }
            }
            catch (global::System.Exception exception) when ((exception as System.Management.Automation.PipelineStoppedException)== null || (exception as System.Management.Automation.PipelineStoppedException).InnerException != null)
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Runtime.IEventListener)this).Signal(Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Runtime.Events.CmdletException, $"{exception.GetType().Name} - {exception.Message} : {exception.StackTrace}").Wait(); if( ((Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Runtime.IEventListener)this).Token.IsCancellationRequested ) { return; }
                // Write exception out to error channel.
                WriteError( new global::System.Management.Automation.ErrorRecord(exception,string.Empty, global::System.Management.Automation.ErrorCategory.NotSpecified, null) );
            }
            finally
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Runtime.IEventListener)this).Signal(Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Runtime.Events.CmdletProcessRecordEnd).Wait();
            }
        }

        /// <summary>Performs execution of the command, working asynchronously if required.</summary>
        /// <returns>
        /// A <see cref="global::System.Threading.Tasks.Task" /> that will be complete when handling of the method is completed.
        /// </returns>
        protected async global::System.Threading.Tasks.Task ProcessRecordAsync()
        {
            using( NoSynchronizationContext )
            {
                await ((Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Runtime.IEventListener)this).Signal(Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Runtime.Events.CmdletGetPipeline); if( ((Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Runtime.IEventListener)this).Token.IsCancellationRequested ) { return; }
                Pipeline = Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Module.Instance.CreatePipeline(InvocationInformation, __correlationId, __processRecordId, this.ParameterSetName, this.ExtensibleParameters);
                if (null != HttpPipelinePrepend)
                {
                    Pipeline.Prepend((this.CommandRuntime as Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Runtime.PowerShell.IAsyncCommandRuntimeExtensions)?.Wrap(HttpPipelinePrepend) ?? HttpPipelinePrepend);
                }
                if (null != HttpPipelineAppend)
                {
                    Pipeline.Append((this.CommandRuntime as Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Runtime.PowerShell.IAsyncCommandRuntimeExtensions)?.Wrap(HttpPipelineAppend) ?? HttpPipelineAppend);
                }
                // get the client instance
                try
                {
                    await ((Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Runtime.IEventListener)this).Signal(Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Runtime.Events.CmdletBeforeAPICall); if( ((Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Runtime.IEventListener)this).Token.IsCancellationRequested ) { return; }
                    await this.Client.FirewallsSaveLogProfile(SubscriptionId, ResourceGroupName, FirewallName, _logSettingsBody, onNoContent, onDefault, this, Pipeline);
                    await ((Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Runtime.IEventListener)this).Signal(Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Runtime.Events.CmdletAfterAPICall); if( ((Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Runtime.IEventListener)this).Token.IsCancellationRequested ) { return; }
                }
                catch (Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Runtime.UndeclaredResponseException urexception)
                {
                    WriteError(new global::System.Management.Automation.ErrorRecord(urexception, urexception.StatusCode.ToString(), global::System.Management.Automation.ErrorCategory.InvalidOperation, new { SubscriptionId=SubscriptionId,ResourceGroupName=ResourceGroupName,FirewallName=FirewallName})
                    {
                      ErrorDetails = new global::System.Management.Automation.ErrorDetails(urexception.Message) { RecommendedAction = urexception.Action }
                    });
                }
                finally
                {
                    await ((Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Runtime.IEventListener)this).Signal(Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Runtime.Events.CmdletProcessRecordAsyncEnd);
                }
            }
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="SaveAzPaloAltoNetworksFirewallLogProfile_SaveExpanded" /> cmdlet class.
        /// </summary>
        public SaveAzPaloAltoNetworksFirewallLogProfile_SaveExpanded()
        {

        }

        /// <summary>Interrupts currently running code within the command.</summary>
        protected override void StopProcessing()
        {
            ((Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Runtime.IEventListener)this).Cancel();
            base.StopProcessing();
        }

        /// <param name="sendToPipeline"></param>
        new protected void WriteObject(object sendToPipeline)
        {
            Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Module.Instance.SanitizeOutput?.Invoke(sendToPipeline, __correlationId);
            base.WriteObject(sendToPipeline);
        }

        /// <param name="sendToPipeline"></param>
        /// <param name="enumerateCollection"></param>
        new protected void WriteObject(object sendToPipeline, bool enumerateCollection)
        {
            Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Module.Instance.SanitizeOutput?.Invoke(sendToPipeline, __correlationId);
            base.WriteObject(sendToPipeline, enumerateCollection);
        }

        /// <summary>
        /// a delegate that is called when the remote service returns default (any response code not handled elsewhere).
        /// </summary>
        /// <param name="responseMessage">the raw response message as an global::System.Net.Http.HttpResponseMessage.</param>
        /// <param name="response">the body result as a <see cref="Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Models.IErrorResponse">Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Models.IErrorResponse</see>
        /// from the remote call</param>
        /// <returns>
        /// A <see cref="global::System.Threading.Tasks.Task" /> that will be complete when handling of the method is completed.
        /// </returns>
        private async global::System.Threading.Tasks.Task onDefault(global::System.Net.Http.HttpResponseMessage responseMessage, global::System.Threading.Tasks.Task<Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Models.IErrorResponse> response)
        {
            using( NoSynchronizationContext )
            {
                var _returnNow = global::System.Threading.Tasks.Task<bool>.FromResult(false);
                overrideOnDefault(responseMessage, response, ref _returnNow);
                // if overrideOnDefault has returned true, then return right away.
                if ((null != _returnNow && await _returnNow))
                {
                    return ;
                }
                // Error Response : default
                var code = (await response)?.Code;
                var message = (await response)?.Message;
                if ((null == code || null == message))
                {
                    // Unrecognized Response. Create an error record based on what we have.
                    var ex = new Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Runtime.RestException<Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Models.IErrorResponse>(responseMessage, await response);
                    WriteError( new global::System.Management.Automation.ErrorRecord(ex, ex.Code, global::System.Management.Automation.ErrorCategory.InvalidOperation, new {  })
                    {
                      ErrorDetails = new global::System.Management.Automation.ErrorDetails(ex.Message) { RecommendedAction = ex.Action }
                    });
                }
                else
                {
                    WriteError( new global::System.Management.Automation.ErrorRecord(new global::System.Exception($"[{code}] : {message}"), code?.ToString(), global::System.Management.Automation.ErrorCategory.InvalidOperation, new {  })
                    {
                      ErrorDetails = new global::System.Management.Automation.ErrorDetails(message) { RecommendedAction = global::System.String.Empty }
                    });
                }
            }
        }

        /// <summary>a delegate that is called when the remote service returns 204 (NoContent).</summary>
        /// <param name="responseMessage">the raw response message as an global::System.Net.Http.HttpResponseMessage.</param>
        /// <returns>
        /// A <see cref="global::System.Threading.Tasks.Task" /> that will be complete when handling of the method is completed.
        /// </returns>
        private async global::System.Threading.Tasks.Task onNoContent(global::System.Net.Http.HttpResponseMessage responseMessage)
        {
            using( NoSynchronizationContext )
            {
                var _returnNow = global::System.Threading.Tasks.Task<bool>.FromResult(false);
                overrideOnNoContent(responseMessage, ref _returnNow);
                // if overrideOnNoContent has returned true, then return right away.
                if ((null != _returnNow && await _returnNow))
                {
                    return ;
                }
                // onNoContent - response for 204 /
                if (true == MyInvocation?.BoundParameters?.ContainsKey("PassThru"))
                {
                    WriteObject(true);
                }
            }
        }
    }
}