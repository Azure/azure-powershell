// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Peering.Models.Api20221001
{
    using static Microsoft.Azure.PowerShell.Cmdlets.Peering.Runtime.Extensions;

    /// <summary>The properties that define a BGP session.</summary>
    public partial class BgpSession :
        Microsoft.Azure.PowerShell.Cmdlets.Peering.Models.Api20221001.IBgpSession,
        Microsoft.Azure.PowerShell.Cmdlets.Peering.Models.Api20221001.IBgpSessionInternal
    {

        /// <summary>Backing field for <see cref="MaxPrefixesAdvertisedV4" /> property.</summary>
        private int? _maxPrefixesAdvertisedV4;

        /// <summary>The maximum number of prefixes advertised over the IPv4 session.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Peering.Origin(Microsoft.Azure.PowerShell.Cmdlets.Peering.PropertyOrigin.Owned)]
        public int? MaxPrefixesAdvertisedV4 { get => this._maxPrefixesAdvertisedV4; set => this._maxPrefixesAdvertisedV4 = value; }

        /// <summary>Backing field for <see cref="MaxPrefixesAdvertisedV6" /> property.</summary>
        private int? _maxPrefixesAdvertisedV6;

        /// <summary>The maximum number of prefixes advertised over the IPv6 session.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Peering.Origin(Microsoft.Azure.PowerShell.Cmdlets.Peering.PropertyOrigin.Owned)]
        public int? MaxPrefixesAdvertisedV6 { get => this._maxPrefixesAdvertisedV6; set => this._maxPrefixesAdvertisedV6 = value; }

        /// <summary>Backing field for <see cref="Md5AuthenticationKey" /> property.</summary>
        private string _md5AuthenticationKey;

        /// <summary>The MD5 authentication key of the session.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Peering.Origin(Microsoft.Azure.PowerShell.Cmdlets.Peering.PropertyOrigin.Owned)]
        public string Md5AuthenticationKey { get => this._md5AuthenticationKey; set => this._md5AuthenticationKey = value; }

        /// <summary>Internal Acessors for SessionStateV4</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Peering.Support.SessionStateV4? Microsoft.Azure.PowerShell.Cmdlets.Peering.Models.Api20221001.IBgpSessionInternal.SessionStateV4 { get => this._sessionStateV4; set { {_sessionStateV4 = value;} } }

        /// <summary>Internal Acessors for SessionStateV6</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Peering.Support.SessionStateV6? Microsoft.Azure.PowerShell.Cmdlets.Peering.Models.Api20221001.IBgpSessionInternal.SessionStateV6 { get => this._sessionStateV6; set { {_sessionStateV6 = value;} } }

        /// <summary>Backing field for <see cref="MicrosoftSessionIPv4Address" /> property.</summary>
        private string _microsoftSessionIPv4Address;

        /// <summary>The IPv4 session address on Microsoft's end.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Peering.Origin(Microsoft.Azure.PowerShell.Cmdlets.Peering.PropertyOrigin.Owned)]
        public string MicrosoftSessionIPv4Address { get => this._microsoftSessionIPv4Address; set => this._microsoftSessionIPv4Address = value; }

        /// <summary>Backing field for <see cref="MicrosoftSessionIPv6Address" /> property.</summary>
        private string _microsoftSessionIPv6Address;

        /// <summary>The IPv6 session address on Microsoft's end.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Peering.Origin(Microsoft.Azure.PowerShell.Cmdlets.Peering.PropertyOrigin.Owned)]
        public string MicrosoftSessionIPv6Address { get => this._microsoftSessionIPv6Address; set => this._microsoftSessionIPv6Address = value; }

        /// <summary>Backing field for <see cref="PeerSessionIPv4Address" /> property.</summary>
        private string _peerSessionIPv4Address;

        /// <summary>The IPv4 session address on peer's end.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Peering.Origin(Microsoft.Azure.PowerShell.Cmdlets.Peering.PropertyOrigin.Owned)]
        public string PeerSessionIPv4Address { get => this._peerSessionIPv4Address; set => this._peerSessionIPv4Address = value; }

        /// <summary>Backing field for <see cref="PeerSessionIPv6Address" /> property.</summary>
        private string _peerSessionIPv6Address;

        /// <summary>The IPv6 session address on peer's end.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Peering.Origin(Microsoft.Azure.PowerShell.Cmdlets.Peering.PropertyOrigin.Owned)]
        public string PeerSessionIPv6Address { get => this._peerSessionIPv6Address; set => this._peerSessionIPv6Address = value; }

        /// <summary>Backing field for <see cref="SessionPrefixV4" /> property.</summary>
        private string _sessionPrefixV4;

        /// <summary>The IPv4 prefix that contains both ends' IPv4 addresses.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Peering.Origin(Microsoft.Azure.PowerShell.Cmdlets.Peering.PropertyOrigin.Owned)]
        public string SessionPrefixV4 { get => this._sessionPrefixV4; set => this._sessionPrefixV4 = value; }

        /// <summary>Backing field for <see cref="SessionPrefixV6" /> property.</summary>
        private string _sessionPrefixV6;

        /// <summary>The IPv6 prefix that contains both ends' IPv6 addresses.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Peering.Origin(Microsoft.Azure.PowerShell.Cmdlets.Peering.PropertyOrigin.Owned)]
        public string SessionPrefixV6 { get => this._sessionPrefixV6; set => this._sessionPrefixV6 = value; }

        /// <summary>Backing field for <see cref="SessionStateV4" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Peering.Support.SessionStateV4? _sessionStateV4;

        /// <summary>The state of the IPv4 session.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Peering.Origin(Microsoft.Azure.PowerShell.Cmdlets.Peering.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.Peering.Support.SessionStateV4? SessionStateV4 { get => this._sessionStateV4; }

        /// <summary>Backing field for <see cref="SessionStateV6" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Peering.Support.SessionStateV6? _sessionStateV6;

        /// <summary>The state of the IPv6 session.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Peering.Origin(Microsoft.Azure.PowerShell.Cmdlets.Peering.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.Peering.Support.SessionStateV6? SessionStateV6 { get => this._sessionStateV6; }

        /// <summary>Creates an new <see cref="BgpSession" /> instance.</summary>
        public BgpSession()
        {

        }
    }
    /// The properties that define a BGP session.
    public partial interface IBgpSession :
        Microsoft.Azure.PowerShell.Cmdlets.Peering.Runtime.IJsonSerializable
    {
        /// <summary>The maximum number of prefixes advertised over the IPv4 session.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Peering.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The maximum number of prefixes advertised over the IPv4 session.",
        SerializedName = @"maxPrefixesAdvertisedV4",
        PossibleTypes = new [] { typeof(int) })]
        int? MaxPrefixesAdvertisedV4 { get; set; }
        /// <summary>The maximum number of prefixes advertised over the IPv6 session.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Peering.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The maximum number of prefixes advertised over the IPv6 session.",
        SerializedName = @"maxPrefixesAdvertisedV6",
        PossibleTypes = new [] { typeof(int) })]
        int? MaxPrefixesAdvertisedV6 { get; set; }
        /// <summary>The MD5 authentication key of the session.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Peering.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The MD5 authentication key of the session.",
        SerializedName = @"md5AuthenticationKey",
        PossibleTypes = new [] { typeof(string) })]
        string Md5AuthenticationKey { get; set; }
        /// <summary>The IPv4 session address on Microsoft's end.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Peering.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The IPv4 session address on Microsoft's end.",
        SerializedName = @"microsoftSessionIPv4Address",
        PossibleTypes = new [] { typeof(string) })]
        string MicrosoftSessionIPv4Address { get; set; }
        /// <summary>The IPv6 session address on Microsoft's end.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Peering.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The IPv6 session address on Microsoft's end.",
        SerializedName = @"microsoftSessionIPv6Address",
        PossibleTypes = new [] { typeof(string) })]
        string MicrosoftSessionIPv6Address { get; set; }
        /// <summary>The IPv4 session address on peer's end.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Peering.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The IPv4 session address on peer's end.",
        SerializedName = @"peerSessionIPv4Address",
        PossibleTypes = new [] { typeof(string) })]
        string PeerSessionIPv4Address { get; set; }
        /// <summary>The IPv6 session address on peer's end.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Peering.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The IPv6 session address on peer's end.",
        SerializedName = @"peerSessionIPv6Address",
        PossibleTypes = new [] { typeof(string) })]
        string PeerSessionIPv6Address { get; set; }
        /// <summary>The IPv4 prefix that contains both ends' IPv4 addresses.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Peering.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The IPv4 prefix that contains both ends' IPv4 addresses.",
        SerializedName = @"sessionPrefixV4",
        PossibleTypes = new [] { typeof(string) })]
        string SessionPrefixV4 { get; set; }
        /// <summary>The IPv6 prefix that contains both ends' IPv6 addresses.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Peering.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The IPv6 prefix that contains both ends' IPv6 addresses.",
        SerializedName = @"sessionPrefixV6",
        PossibleTypes = new [] { typeof(string) })]
        string SessionPrefixV6 { get; set; }
        /// <summary>The state of the IPv4 session.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Peering.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The state of the IPv4 session.",
        SerializedName = @"sessionStateV4",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Peering.Support.SessionStateV4) })]
        Microsoft.Azure.PowerShell.Cmdlets.Peering.Support.SessionStateV4? SessionStateV4 { get;  }
        /// <summary>The state of the IPv6 session.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Peering.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The state of the IPv6 session.",
        SerializedName = @"sessionStateV6",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Peering.Support.SessionStateV6) })]
        Microsoft.Azure.PowerShell.Cmdlets.Peering.Support.SessionStateV6? SessionStateV6 { get;  }

    }
    /// The properties that define a BGP session.
    internal partial interface IBgpSessionInternal

    {
        /// <summary>The maximum number of prefixes advertised over the IPv4 session.</summary>
        int? MaxPrefixesAdvertisedV4 { get; set; }
        /// <summary>The maximum number of prefixes advertised over the IPv6 session.</summary>
        int? MaxPrefixesAdvertisedV6 { get; set; }
        /// <summary>The MD5 authentication key of the session.</summary>
        string Md5AuthenticationKey { get; set; }
        /// <summary>The IPv4 session address on Microsoft's end.</summary>
        string MicrosoftSessionIPv4Address { get; set; }
        /// <summary>The IPv6 session address on Microsoft's end.</summary>
        string MicrosoftSessionIPv6Address { get; set; }
        /// <summary>The IPv4 session address on peer's end.</summary>
        string PeerSessionIPv4Address { get; set; }
        /// <summary>The IPv6 session address on peer's end.</summary>
        string PeerSessionIPv6Address { get; set; }
        /// <summary>The IPv4 prefix that contains both ends' IPv4 addresses.</summary>
        string SessionPrefixV4 { get; set; }
        /// <summary>The IPv6 prefix that contains both ends' IPv6 addresses.</summary>
        string SessionPrefixV6 { get; set; }
        /// <summary>The state of the IPv4 session.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Peering.Support.SessionStateV4? SessionStateV4 { get; set; }
        /// <summary>The state of the IPv6 session.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Peering.Support.SessionStateV6? SessionStateV6 { get; set; }

    }
}