// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Peering.Models.Api20221001
{
    using static Microsoft.Azure.PowerShell.Cmdlets.Peering.Runtime.Extensions;

    /// <summary>The properties that define connectivity to the Peering Service.</summary>
    public partial class PeeringServiceProperties :
        Microsoft.Azure.PowerShell.Cmdlets.Peering.Models.Api20221001.IPeeringServiceProperties,
        Microsoft.Azure.PowerShell.Cmdlets.Peering.Models.Api20221001.IPeeringServicePropertiesInternal
    {

        /// <summary>The list of connected agents.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Peering.Origin(Microsoft.Azure.PowerShell.Cmdlets.Peering.PropertyOrigin.Inlined)]
        public string[] LogAnalyticWorkspacePropertyConnectedAgent { get => ((Microsoft.Azure.PowerShell.Cmdlets.Peering.Models.Api20221001.ILogAnalyticsWorkspacePropertiesInternal)LogAnalyticsWorkspaceProperty).ConnectedAgent; }

        /// <summary>The Workspace Key.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Peering.Origin(Microsoft.Azure.PowerShell.Cmdlets.Peering.PropertyOrigin.Inlined)]
        public string LogAnalyticWorkspacePropertyKey { get => ((Microsoft.Azure.PowerShell.Cmdlets.Peering.Models.Api20221001.ILogAnalyticsWorkspacePropertiesInternal)LogAnalyticsWorkspaceProperty).Key; }

        /// <summary>The Workspace ID.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Peering.Origin(Microsoft.Azure.PowerShell.Cmdlets.Peering.PropertyOrigin.Inlined)]
        public string LogAnalyticWorkspacePropertyWorkspaceId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Peering.Models.Api20221001.ILogAnalyticsWorkspacePropertiesInternal)LogAnalyticsWorkspaceProperty).WorkspaceId; }

        /// <summary>Backing field for <see cref="LogAnalyticsWorkspaceProperty" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Peering.Models.Api20221001.ILogAnalyticsWorkspaceProperties _logAnalyticsWorkspaceProperty;

        /// <summary>The Log Analytics Workspace Properties</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Peering.Origin(Microsoft.Azure.PowerShell.Cmdlets.Peering.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Peering.Models.Api20221001.ILogAnalyticsWorkspaceProperties LogAnalyticsWorkspaceProperty { get => (this._logAnalyticsWorkspaceProperty = this._logAnalyticsWorkspaceProperty ?? new Microsoft.Azure.PowerShell.Cmdlets.Peering.Models.Api20221001.LogAnalyticsWorkspaceProperties()); set => this._logAnalyticsWorkspaceProperty = value; }

        /// <summary>Internal Acessors for LogAnalyticWorkspacePropertyConnectedAgent</summary>
        string[] Microsoft.Azure.PowerShell.Cmdlets.Peering.Models.Api20221001.IPeeringServicePropertiesInternal.LogAnalyticWorkspacePropertyConnectedAgent { get => ((Microsoft.Azure.PowerShell.Cmdlets.Peering.Models.Api20221001.ILogAnalyticsWorkspacePropertiesInternal)LogAnalyticsWorkspaceProperty).ConnectedAgent; set => ((Microsoft.Azure.PowerShell.Cmdlets.Peering.Models.Api20221001.ILogAnalyticsWorkspacePropertiesInternal)LogAnalyticsWorkspaceProperty).ConnectedAgent = value; }

        /// <summary>Internal Acessors for LogAnalyticWorkspacePropertyKey</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Peering.Models.Api20221001.IPeeringServicePropertiesInternal.LogAnalyticWorkspacePropertyKey { get => ((Microsoft.Azure.PowerShell.Cmdlets.Peering.Models.Api20221001.ILogAnalyticsWorkspacePropertiesInternal)LogAnalyticsWorkspaceProperty).Key; set => ((Microsoft.Azure.PowerShell.Cmdlets.Peering.Models.Api20221001.ILogAnalyticsWorkspacePropertiesInternal)LogAnalyticsWorkspaceProperty).Key = value; }

        /// <summary>Internal Acessors for LogAnalyticWorkspacePropertyWorkspaceId</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Peering.Models.Api20221001.IPeeringServicePropertiesInternal.LogAnalyticWorkspacePropertyWorkspaceId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Peering.Models.Api20221001.ILogAnalyticsWorkspacePropertiesInternal)LogAnalyticsWorkspaceProperty).WorkspaceId; set => ((Microsoft.Azure.PowerShell.Cmdlets.Peering.Models.Api20221001.ILogAnalyticsWorkspacePropertiesInternal)LogAnalyticsWorkspaceProperty).WorkspaceId = value; }

        /// <summary>Internal Acessors for LogAnalyticsWorkspaceProperty</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Peering.Models.Api20221001.ILogAnalyticsWorkspaceProperties Microsoft.Azure.PowerShell.Cmdlets.Peering.Models.Api20221001.IPeeringServicePropertiesInternal.LogAnalyticsWorkspaceProperty { get => (this._logAnalyticsWorkspaceProperty = this._logAnalyticsWorkspaceProperty ?? new Microsoft.Azure.PowerShell.Cmdlets.Peering.Models.Api20221001.LogAnalyticsWorkspaceProperties()); set { {_logAnalyticsWorkspaceProperty = value;} } }

        /// <summary>Internal Acessors for ProvisioningState</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Peering.Support.ProvisioningState? Microsoft.Azure.PowerShell.Cmdlets.Peering.Models.Api20221001.IPeeringServicePropertiesInternal.ProvisioningState { get => this._provisioningState; set { {_provisioningState = value;} } }

        /// <summary>Backing field for <see cref="PeeringServiceLocation" /> property.</summary>
        private string _peeringServiceLocation;

        /// <summary>The location (state/province) of the customer.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Peering.Origin(Microsoft.Azure.PowerShell.Cmdlets.Peering.PropertyOrigin.Owned)]
        public string PeeringServiceLocation { get => this._peeringServiceLocation; set => this._peeringServiceLocation = value; }

        /// <summary>Backing field for <see cref="PeeringServiceProvider" /> property.</summary>
        private string _peeringServiceProvider;

        /// <summary>The name of the service provider.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Peering.Origin(Microsoft.Azure.PowerShell.Cmdlets.Peering.PropertyOrigin.Owned)]
        public string PeeringServiceProvider { get => this._peeringServiceProvider; set => this._peeringServiceProvider = value; }

        /// <summary>Backing field for <see cref="ProviderBackupPeeringLocation" /> property.</summary>
        private string _providerBackupPeeringLocation;

        /// <summary>
        /// The backup peering (Microsoft/service provider) location to be used for customer traffic.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Peering.Origin(Microsoft.Azure.PowerShell.Cmdlets.Peering.PropertyOrigin.Owned)]
        public string ProviderBackupPeeringLocation { get => this._providerBackupPeeringLocation; set => this._providerBackupPeeringLocation = value; }

        /// <summary>Backing field for <see cref="ProviderPrimaryPeeringLocation" /> property.</summary>
        private string _providerPrimaryPeeringLocation;

        /// <summary>
        /// The primary peering (Microsoft/service provider) location to be used for customer traffic.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Peering.Origin(Microsoft.Azure.PowerShell.Cmdlets.Peering.PropertyOrigin.Owned)]
        public string ProviderPrimaryPeeringLocation { get => this._providerPrimaryPeeringLocation; set => this._providerPrimaryPeeringLocation = value; }

        /// <summary>Backing field for <see cref="ProvisioningState" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Peering.Support.ProvisioningState? _provisioningState;

        /// <summary>The provisioning state of the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Peering.Origin(Microsoft.Azure.PowerShell.Cmdlets.Peering.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.Peering.Support.ProvisioningState? ProvisioningState { get => this._provisioningState; }

        /// <summary>Creates an new <see cref="PeeringServiceProperties" /> instance.</summary>
        public PeeringServiceProperties()
        {

        }
    }
    /// The properties that define connectivity to the Peering Service.
    public partial interface IPeeringServiceProperties :
        Microsoft.Azure.PowerShell.Cmdlets.Peering.Runtime.IJsonSerializable
    {
        /// <summary>The list of connected agents.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Peering.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The list of connected agents.",
        SerializedName = @"connectedAgents",
        PossibleTypes = new [] { typeof(string) })]
        string[] LogAnalyticWorkspacePropertyConnectedAgent { get;  }
        /// <summary>The Workspace Key.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Peering.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The Workspace Key.",
        SerializedName = @"key",
        PossibleTypes = new [] { typeof(string) })]
        string LogAnalyticWorkspacePropertyKey { get;  }
        /// <summary>The Workspace ID.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Peering.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The Workspace ID.",
        SerializedName = @"workspaceID",
        PossibleTypes = new [] { typeof(string) })]
        string LogAnalyticWorkspacePropertyWorkspaceId { get;  }
        /// <summary>The location (state/province) of the customer.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Peering.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The location (state/province) of the customer.",
        SerializedName = @"peeringServiceLocation",
        PossibleTypes = new [] { typeof(string) })]
        string PeeringServiceLocation { get; set; }
        /// <summary>The name of the service provider.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Peering.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The name of the service provider.",
        SerializedName = @"peeringServiceProvider",
        PossibleTypes = new [] { typeof(string) })]
        string PeeringServiceProvider { get; set; }
        /// <summary>
        /// The backup peering (Microsoft/service provider) location to be used for customer traffic.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Peering.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The backup peering (Microsoft/service provider) location to be used for customer traffic.",
        SerializedName = @"providerBackupPeeringLocation",
        PossibleTypes = new [] { typeof(string) })]
        string ProviderBackupPeeringLocation { get; set; }
        /// <summary>
        /// The primary peering (Microsoft/service provider) location to be used for customer traffic.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Peering.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The primary peering (Microsoft/service provider) location to be used for customer traffic.",
        SerializedName = @"providerPrimaryPeeringLocation",
        PossibleTypes = new [] { typeof(string) })]
        string ProviderPrimaryPeeringLocation { get; set; }
        /// <summary>The provisioning state of the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Peering.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The provisioning state of the resource.",
        SerializedName = @"provisioningState",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Peering.Support.ProvisioningState) })]
        Microsoft.Azure.PowerShell.Cmdlets.Peering.Support.ProvisioningState? ProvisioningState { get;  }

    }
    /// The properties that define connectivity to the Peering Service.
    internal partial interface IPeeringServicePropertiesInternal

    {
        /// <summary>The list of connected agents.</summary>
        string[] LogAnalyticWorkspacePropertyConnectedAgent { get; set; }
        /// <summary>The Workspace Key.</summary>
        string LogAnalyticWorkspacePropertyKey { get; set; }
        /// <summary>The Workspace ID.</summary>
        string LogAnalyticWorkspacePropertyWorkspaceId { get; set; }
        /// <summary>The Log Analytics Workspace Properties</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Peering.Models.Api20221001.ILogAnalyticsWorkspaceProperties LogAnalyticsWorkspaceProperty { get; set; }
        /// <summary>The location (state/province) of the customer.</summary>
        string PeeringServiceLocation { get; set; }
        /// <summary>The name of the service provider.</summary>
        string PeeringServiceProvider { get; set; }
        /// <summary>
        /// The backup peering (Microsoft/service provider) location to be used for customer traffic.
        /// </summary>
        string ProviderBackupPeeringLocation { get; set; }
        /// <summary>
        /// The primary peering (Microsoft/service provider) location to be used for customer traffic.
        /// </summary>
        string ProviderPrimaryPeeringLocation { get; set; }
        /// <summary>The provisioning state of the resource.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Peering.Support.ProvisioningState? ProvisioningState { get; set; }

    }
}