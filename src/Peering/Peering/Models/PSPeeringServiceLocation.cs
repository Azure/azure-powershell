// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.PowerShell.Cmdlets.Peering.Models
{
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// The peering service location.
    /// </summary>
    [Rest.Serialization.JsonTransformation]
    public partial class PSPeeringServiceLocation
    {
        /// <summary>
        /// Initializes a new instance of the PSPeeringServiceLocation class.
        /// </summary>
        public PSPeeringServiceLocation()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the PSPeeringServiceLocation class.
        /// </summary>
        /// <param name="country">Country of the customer</param>
        /// <param name="state">State of the customer</param>
        /// <param name="azureRegion">Azure region for the location</param>
        /// <param name="name">The name of the resource.</param>
        /// <param name="id">The ID of the resource.</param>
        /// <param name="type">The type of the resource.</param>
        public PSPeeringServiceLocation(string country = default(string), string state = default(string), string azureRegion = default(string), string name = default(string), string id = default(string), string type = default(string))
        {
            Country = country;
            State = state;
            AzureRegion = azureRegion;
            Name = name;
            Id = id;
            Type = type;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets country of the customer
        /// </summary>
        [JsonProperty(PropertyName = "properties.country")]
        public string Country { get; set; }

        /// <summary>
        /// Gets or sets state of the customer
        /// </summary>
        [JsonProperty(PropertyName = "properties.state")]
        public string State { get; set; }

        /// <summary>
        /// Gets or sets azure region for the location
        /// </summary>
        [JsonProperty(PropertyName = "properties.azureRegion")]
        public string AzureRegion { get; set; }

        /// <summary>
        /// Gets the name of the resource.
        /// </summary>
        [JsonProperty(PropertyName = "name")]
        public string Name { get; private set; }

        /// <summary>
        /// Gets the ID of the resource.
        /// </summary>
        [JsonProperty(PropertyName = "id")]
        public string Id { get; private set; }

        /// <summary>
        /// Gets the type of the resource.
        /// </summary>
        [JsonProperty(PropertyName = "type")]
        public string Type { get; private set; }

    }
}
