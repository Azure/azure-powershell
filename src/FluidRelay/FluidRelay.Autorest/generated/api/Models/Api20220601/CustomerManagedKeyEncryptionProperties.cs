// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.FluidRelay.Models.Api20220601
{
    using static Microsoft.Azure.PowerShell.Cmdlets.FluidRelay.Runtime.Extensions;

    /// <summary>All Customer-managed key encryption properties for the resource.</summary>
    public partial class CustomerManagedKeyEncryptionProperties :
        Microsoft.Azure.PowerShell.Cmdlets.FluidRelay.Models.Api20220601.ICustomerManagedKeyEncryptionProperties,
        Microsoft.Azure.PowerShell.Cmdlets.FluidRelay.Models.Api20220601.ICustomerManagedKeyEncryptionPropertiesInternal
    {

        /// <summary>Backing field for <see cref="KeyEncryptionKeyIdentity" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.FluidRelay.Models.Api20220601.ICustomerManagedKeyEncryptionPropertiesKeyEncryptionKeyIdentity _keyEncryptionKeyIdentity;

        /// <summary>
        /// All identity configuration for Customer-managed key settings defining which identity should be used to auth to Key Vault.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.FluidRelay.Origin(Microsoft.Azure.PowerShell.Cmdlets.FluidRelay.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.FluidRelay.Models.Api20220601.ICustomerManagedKeyEncryptionPropertiesKeyEncryptionKeyIdentity KeyEncryptionKeyIdentity { get => (this._keyEncryptionKeyIdentity = this._keyEncryptionKeyIdentity ?? new Microsoft.Azure.PowerShell.Cmdlets.FluidRelay.Models.Api20220601.CustomerManagedKeyEncryptionPropertiesKeyEncryptionKeyIdentity()); set => this._keyEncryptionKeyIdentity = value; }

        /// <summary>Values can be SystemAssigned or UserAssigned</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.FluidRelay.Origin(Microsoft.Azure.PowerShell.Cmdlets.FluidRelay.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.FluidRelay.Support.CmkIdentityType? KeyEncryptionKeyIdentityType { get => ((Microsoft.Azure.PowerShell.Cmdlets.FluidRelay.Models.Api20220601.ICustomerManagedKeyEncryptionPropertiesKeyEncryptionKeyIdentityInternal)KeyEncryptionKeyIdentity).IdentityType; set => ((Microsoft.Azure.PowerShell.Cmdlets.FluidRelay.Models.Api20220601.ICustomerManagedKeyEncryptionPropertiesKeyEncryptionKeyIdentityInternal)KeyEncryptionKeyIdentity).IdentityType = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.FluidRelay.Support.CmkIdentityType)""); }

        /// <summary>
        /// user assigned identity to use for accessing key encryption key Url. Ex: /subscriptions/fa5fc227-a624-475e-b696-cdd604c735bc/resourceGroups/<resource
        /// group>/providers/Microsoft.ManagedIdentity/userAssignedIdentities/myId. Mutually exclusive with identityType systemAssignedIdentity.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.FluidRelay.Origin(Microsoft.Azure.PowerShell.Cmdlets.FluidRelay.PropertyOrigin.Inlined)]
        public string KeyEncryptionKeyIdentityUserAssignedIdentityResourceId { get => ((Microsoft.Azure.PowerShell.Cmdlets.FluidRelay.Models.Api20220601.ICustomerManagedKeyEncryptionPropertiesKeyEncryptionKeyIdentityInternal)KeyEncryptionKeyIdentity).UserAssignedIdentityResourceId; set => ((Microsoft.Azure.PowerShell.Cmdlets.FluidRelay.Models.Api20220601.ICustomerManagedKeyEncryptionPropertiesKeyEncryptionKeyIdentityInternal)KeyEncryptionKeyIdentity).UserAssignedIdentityResourceId = value ?? null; }

        /// <summary>Backing field for <see cref="KeyEncryptionKeyUrl" /> property.</summary>
        private string _keyEncryptionKeyUrl;

        /// <summary>
        /// key encryption key Url, with or without a version. Ex: https://contosovault.vault.azure.net/keys/contosokek/562a4bb76b524a1493a6afe8e536ee78
        /// or https://contosovault.vault.azure.net/keys/contosokek. Key auto rotation is enabled by providing a key uri without version.
        /// Otherwise, customer is responsible for rotating the key. The keyEncryptionKeyIdentity(either SystemAssigned or UserAssigned)
        /// should have permission to access this key url.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.FluidRelay.Origin(Microsoft.Azure.PowerShell.Cmdlets.FluidRelay.PropertyOrigin.Owned)]
        public string KeyEncryptionKeyUrl { get => this._keyEncryptionKeyUrl; set => this._keyEncryptionKeyUrl = value; }

        /// <summary>Internal Acessors for KeyEncryptionKeyIdentity</summary>
        Microsoft.Azure.PowerShell.Cmdlets.FluidRelay.Models.Api20220601.ICustomerManagedKeyEncryptionPropertiesKeyEncryptionKeyIdentity Microsoft.Azure.PowerShell.Cmdlets.FluidRelay.Models.Api20220601.ICustomerManagedKeyEncryptionPropertiesInternal.KeyEncryptionKeyIdentity { get => (this._keyEncryptionKeyIdentity = this._keyEncryptionKeyIdentity ?? new Microsoft.Azure.PowerShell.Cmdlets.FluidRelay.Models.Api20220601.CustomerManagedKeyEncryptionPropertiesKeyEncryptionKeyIdentity()); set { {_keyEncryptionKeyIdentity = value;} } }

        /// <summary>Creates an new <see cref="CustomerManagedKeyEncryptionProperties" /> instance.</summary>
        public CustomerManagedKeyEncryptionProperties()
        {

        }
    }
    /// All Customer-managed key encryption properties for the resource.
    public partial interface ICustomerManagedKeyEncryptionProperties :
        Microsoft.Azure.PowerShell.Cmdlets.FluidRelay.Runtime.IJsonSerializable
    {
        /// <summary>Values can be SystemAssigned or UserAssigned</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.FluidRelay.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Values can be SystemAssigned or UserAssigned",
        SerializedName = @"identityType",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.FluidRelay.Support.CmkIdentityType) })]
        Microsoft.Azure.PowerShell.Cmdlets.FluidRelay.Support.CmkIdentityType? KeyEncryptionKeyIdentityType { get; set; }
        /// <summary>
        /// user assigned identity to use for accessing key encryption key Url. Ex: /subscriptions/fa5fc227-a624-475e-b696-cdd604c735bc/resourceGroups/<resource
        /// group>/providers/Microsoft.ManagedIdentity/userAssignedIdentities/myId. Mutually exclusive with identityType systemAssignedIdentity.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.FluidRelay.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"user assigned identity to use for accessing key encryption key Url. Ex: /subscriptions/fa5fc227-a624-475e-b696-cdd604c735bc/resourceGroups/<resource group>/providers/Microsoft.ManagedIdentity/userAssignedIdentities/myId. Mutually exclusive with identityType systemAssignedIdentity.",
        SerializedName = @"userAssignedIdentityResourceId",
        PossibleTypes = new [] { typeof(string) })]
        string KeyEncryptionKeyIdentityUserAssignedIdentityResourceId { get; set; }
        /// <summary>
        /// key encryption key Url, with or without a version. Ex: https://contosovault.vault.azure.net/keys/contosokek/562a4bb76b524a1493a6afe8e536ee78
        /// or https://contosovault.vault.azure.net/keys/contosokek. Key auto rotation is enabled by providing a key uri without version.
        /// Otherwise, customer is responsible for rotating the key. The keyEncryptionKeyIdentity(either SystemAssigned or UserAssigned)
        /// should have permission to access this key url.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.FluidRelay.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"key encryption key Url, with or without a version. Ex: https://contosovault.vault.azure.net/keys/contosokek/562a4bb76b524a1493a6afe8e536ee78 or https://contosovault.vault.azure.net/keys/contosokek. Key auto rotation is enabled by providing a key uri without version. Otherwise, customer is responsible for rotating the key. The keyEncryptionKeyIdentity(either SystemAssigned or UserAssigned) should have permission to access this key url.",
        SerializedName = @"keyEncryptionKeyUrl",
        PossibleTypes = new [] { typeof(string) })]
        string KeyEncryptionKeyUrl { get; set; }

    }
    /// All Customer-managed key encryption properties for the resource.
    internal partial interface ICustomerManagedKeyEncryptionPropertiesInternal

    {
        /// <summary>
        /// All identity configuration for Customer-managed key settings defining which identity should be used to auth to Key Vault.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.FluidRelay.Models.Api20220601.ICustomerManagedKeyEncryptionPropertiesKeyEncryptionKeyIdentity KeyEncryptionKeyIdentity { get; set; }
        /// <summary>Values can be SystemAssigned or UserAssigned</summary>
        Microsoft.Azure.PowerShell.Cmdlets.FluidRelay.Support.CmkIdentityType? KeyEncryptionKeyIdentityType { get; set; }
        /// <summary>
        /// user assigned identity to use for accessing key encryption key Url. Ex: /subscriptions/fa5fc227-a624-475e-b696-cdd604c735bc/resourceGroups/<resource
        /// group>/providers/Microsoft.ManagedIdentity/userAssignedIdentities/myId. Mutually exclusive with identityType systemAssignedIdentity.
        /// </summary>
        string KeyEncryptionKeyIdentityUserAssignedIdentityResourceId { get; set; }
        /// <summary>
        /// key encryption key Url, with or without a version. Ex: https://contosovault.vault.azure.net/keys/contosokek/562a4bb76b524a1493a6afe8e536ee78
        /// or https://contosovault.vault.azure.net/keys/contosokek. Key auto rotation is enabled by providing a key uri without version.
        /// Otherwise, customer is responsible for rotating the key. The keyEncryptionKeyIdentity(either SystemAssigned or UserAssigned)
        /// should have permission to access this key url.
        /// </summary>
        string KeyEncryptionKeyUrl { get; set; }

    }
}