// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20211201
{
    using static Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Runtime.Extensions;

    /// <summary>Preferences related to the double encryption</summary>
    public partial class EncryptionPreferences :
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20211201.IEncryptionPreferences,
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20211201.IEncryptionPreferencesInternal
    {

        /// <summary>Backing field for <see cref="DoubleEncryptionStatus" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Support.DoubleEncryptionStatus? _doubleEncryptionStatus;

        /// <summary>
        /// Double encryption status as entered by the customer. It is compulsory to give this parameter if the 'Deny' or 'Disabled'
        /// policy is configured.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Origin(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Support.DoubleEncryptionStatus? DoubleEncryptionStatus { get => this._doubleEncryptionStatus; set => this._doubleEncryptionStatus = value; }

        /// <summary>Creates an new <see cref="EncryptionPreferences" /> instance.</summary>
        public EncryptionPreferences()
        {

        }
    }
    /// Preferences related to the double encryption
    public partial interface IEncryptionPreferences :
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Runtime.IJsonSerializable
    {
        /// <summary>
        /// Double encryption status as entered by the customer. It is compulsory to give this parameter if the 'Deny' or 'Disabled'
        /// policy is configured.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Double encryption status as entered by the customer. It is compulsory to give this parameter if the 'Deny' or 'Disabled' policy is configured.",
        SerializedName = @"doubleEncryptionStatus",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Support.DoubleEncryptionStatus) })]
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Support.DoubleEncryptionStatus? DoubleEncryptionStatus { get; set; }

    }
    /// Preferences related to the double encryption
    internal partial interface IEncryptionPreferencesInternal

    {
        /// <summary>
        /// Double encryption status as entered by the customer. It is compulsory to give this parameter if the 'Deny' or 'Disabled'
        /// policy is configured.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Support.DoubleEncryptionStatus? DoubleEncryptionStatus { get; set; }

    }
}