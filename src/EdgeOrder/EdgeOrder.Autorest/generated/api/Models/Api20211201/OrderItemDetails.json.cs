// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20211201
{
    using static Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Runtime.Extensions;

    /// <summary>Order item details</summary>
    public partial class OrderItemDetails
    {

        /// <summary>
        /// <c>AfterFromJson</c> will be called after the json deserialization has finished, allowing customization of the object
        /// before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="json">The JsonNode that should be deserialized into this object.</param>

        partial void AfterFromJson(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Runtime.Json.JsonObject json);

        /// <summary>
        /// <c>AfterToJson</c> will be called after the json erialization has finished, allowing customization of the <see cref="Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Runtime.Json.JsonObject"
        /// /> before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="container">The JSON container that the serialization result will be placed in.</param>

        partial void AfterToJson(ref Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Runtime.Json.JsonObject container);

        /// <summary>
        /// <c>BeforeFromJson</c> will be called before the json deserialization has commenced, allowing complete customization of
        /// the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <see "returnNow" /> output parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="json">The JsonNode that should be deserialized into this object.</param>
        /// <param name="returnNow">Determines if the rest of the deserialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeFromJson(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Runtime.Json.JsonObject json, ref bool returnNow);

        /// <summary>
        /// <c>BeforeToJson</c> will be called before the json serialization has commenced, allowing complete customization of the
        /// object before it is serialized.
        /// If you wish to disable the default serialization entirely, return <c>true</c> in the <see "returnNow" /> output parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="container">The JSON container that the serialization result will be placed in.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeToJson(ref Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Runtime.Json.JsonObject container, ref bool returnNow);

        /// <summary>
        /// Deserializes a <see cref="Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Runtime.Json.JsonNode"/> into an instance of Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20211201.IOrderItemDetails.
        /// </summary>
        /// <param name="node">a <see cref="Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Runtime.Json.JsonNode" /> to deserialize from.</param>
        /// <returns>
        /// an instance of Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20211201.IOrderItemDetails.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20211201.IOrderItemDetails FromJson(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Runtime.Json.JsonNode node)
        {
            return node is Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Runtime.Json.JsonObject json ? new OrderItemDetails(json) : null;
        }

        /// <summary>
        /// Deserializes a Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Runtime.Json.JsonObject into a new instance of <see cref="OrderItemDetails" />.
        /// </summary>
        /// <param name="json">A Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Runtime.Json.JsonObject instance to deserialize from.</param>
        internal OrderItemDetails(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Runtime.Json.JsonObject json)
        {
            bool returnNow = false;
            BeforeFromJson(json, ref returnNow);
            if (returnNow)
            {
                return;
            }
            {_productDetail = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Runtime.Json.JsonObject>("productDetails"), out var __jsonProductDetails) ? Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20211201.ProductDetails.FromJson(__jsonProductDetails) : ProductDetail;}
            {_orderItemType = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Runtime.Json.JsonString>("orderItemType"), out var __jsonOrderItemType) ? (string)__jsonOrderItemType : (string)OrderItemType;}
            {_currentStage = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Runtime.Json.JsonObject>("currentStage"), out var __jsonCurrentStage) ? Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20211201.StageDetails.FromJson(__jsonCurrentStage) : CurrentStage;}
            {_orderItemStageHistory = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Runtime.Json.JsonArray>("orderItemStageHistory"), out var __jsonOrderItemStageHistory) ? If( __jsonOrderItemStageHistory as Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Runtime.Json.JsonArray, out var __v) ? new global::System.Func<Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20211201.IStageDetails[]>(()=> global::System.Linq.Enumerable.ToArray(global::System.Linq.Enumerable.Select(__v, (__u)=>(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20211201.IStageDetails) (Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20211201.StageDetails.FromJson(__u) )) ))() : null : OrderItemStageHistory;}
            {_preference = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Runtime.Json.JsonObject>("preferences"), out var __jsonPreferences) ? Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20211201.Preferences.FromJson(__jsonPreferences) : Preference;}
            {_forwardShippingDetail = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Runtime.Json.JsonObject>("forwardShippingDetails"), out var __jsonForwardShippingDetails) ? Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20211201.ForwardShippingDetails.FromJson(__jsonForwardShippingDetails) : ForwardShippingDetail;}
            {_reverseShippingDetail = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Runtime.Json.JsonObject>("reverseShippingDetails"), out var __jsonReverseShippingDetails) ? Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20211201.ReverseShippingDetails.FromJson(__jsonReverseShippingDetails) : ReverseShippingDetail;}
            {_notificationEmailList = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Runtime.Json.JsonArray>("notificationEmailList"), out var __jsonNotificationEmailList) ? If( __jsonNotificationEmailList as Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Runtime.Json.JsonArray, out var __q) ? new global::System.Func<string[]>(()=> global::System.Linq.Enumerable.ToArray(global::System.Linq.Enumerable.Select(__q, (__p)=>(string) (__p is Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Runtime.Json.JsonString __o ? (string)(__o.ToString()) : null)) ))() : null : NotificationEmailList;}
            {_cancellationReason = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Runtime.Json.JsonString>("cancellationReason"), out var __jsonCancellationReason) ? (string)__jsonCancellationReason : (string)CancellationReason;}
            {_cancellationStatus = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Runtime.Json.JsonString>("cancellationStatus"), out var __jsonCancellationStatus) ? (string)__jsonCancellationStatus : (string)CancellationStatus;}
            {_deletionStatus = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Runtime.Json.JsonString>("deletionStatus"), out var __jsonDeletionStatus) ? (string)__jsonDeletionStatus : (string)DeletionStatus;}
            {_returnReason = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Runtime.Json.JsonString>("returnReason"), out var __jsonReturnReason) ? (string)__jsonReturnReason : (string)ReturnReason;}
            {_returnStatus = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Runtime.Json.JsonString>("returnStatus"), out var __jsonReturnStatus) ? (string)__jsonReturnStatus : (string)ReturnStatus;}
            {_managementRpDetail = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Runtime.Json.JsonObject>("managementRpDetails"), out var __jsonManagementRpDetails) ? Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20211201.ResourceProviderDetails.FromJson(__jsonManagementRpDetails) : ManagementRpDetail;}
            {_managementRpDetailsList = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Runtime.Json.JsonArray>("managementRpDetailsList"), out var __jsonManagementRpDetailsList) ? If( __jsonManagementRpDetailsList as Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Runtime.Json.JsonArray, out var __l) ? new global::System.Func<Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20211201.IResourceProviderDetails[]>(()=> global::System.Linq.Enumerable.ToArray(global::System.Linq.Enumerable.Select(__l, (__k)=>(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20211201.IResourceProviderDetails) (Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20211201.ResourceProviderDetails.FromJson(__k) )) ))() : null : ManagementRpDetailsList;}
            {_error = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Runtime.Json.JsonObject>("error"), out var __jsonError) ? Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20.ErrorDetail.FromJson(__jsonError) : Error;}
            AfterFromJson(json);
        }

        /// <summary>
        /// Serializes this instance of <see cref="OrderItemDetails" /> into a <see cref="Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Runtime.Json.JsonNode" />.
        /// </summary>
        /// <param name="container">The <see cref="Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Runtime.Json.JsonObject"/> container to serialize this object into. If the caller
        /// passes in <c>null</c>, a new instance will be created and returned to the caller.</param>
        /// <param name="serializationMode">Allows the caller to choose the depth of the serialization. See <see cref="Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Runtime.SerializationMode"/>.</param>
        /// <returns>
        /// a serialized instance of <see cref="OrderItemDetails" /> as a <see cref="Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Runtime.Json.JsonNode" />.
        /// </returns>
        public Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Runtime.Json.JsonNode ToJson(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Runtime.Json.JsonObject container, Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Runtime.SerializationMode serializationMode)
        {
            container = container ?? new Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Runtime.Json.JsonObject();

            bool returnNow = false;
            BeforeToJson(ref container, ref returnNow);
            if (returnNow)
            {
                return container;
            }
            AddIf( null != this._productDetail ? (Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Runtime.Json.JsonNode) this._productDetail.ToJson(null,serializationMode) : null, "productDetails" ,container.Add );
            AddIf( null != (((object)this._orderItemType)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Runtime.Json.JsonString(this._orderItemType.ToString()) : null, "orderItemType" ,container.Add );
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != this._currentStage ? (Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Runtime.Json.JsonNode) this._currentStage.ToJson(null,serializationMode) : null, "currentStage" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Runtime.SerializationMode.IncludeReadOnly))
            {
                if (null != this._orderItemStageHistory)
                {
                    var __w = new Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Runtime.Json.XNodeArray();
                    foreach( var __x in this._orderItemStageHistory )
                    {
                        AddIf(__x?.ToJson(null, serializationMode) ,__w.Add);
                    }
                    container.Add("orderItemStageHistory",__w);
                }
            }
            AddIf( null != this._preference ? (Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Runtime.Json.JsonNode) this._preference.ToJson(null,serializationMode) : null, "preferences" ,container.Add );
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != this._forwardShippingDetail ? (Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Runtime.Json.JsonNode) this._forwardShippingDetail.ToJson(null,serializationMode) : null, "forwardShippingDetails" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != this._reverseShippingDetail ? (Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Runtime.Json.JsonNode) this._reverseShippingDetail.ToJson(null,serializationMode) : null, "reverseShippingDetails" ,container.Add );
            }
            if (null != this._notificationEmailList)
            {
                var __r = new Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Runtime.Json.XNodeArray();
                foreach( var __s in this._notificationEmailList )
                {
                    AddIf(null != (((object)__s)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Runtime.Json.JsonString(__s.ToString()) : null ,__r.Add);
                }
                container.Add("notificationEmailList",__r);
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != (((object)this._cancellationReason)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Runtime.Json.JsonString(this._cancellationReason.ToString()) : null, "cancellationReason" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != (((object)this._cancellationStatus)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Runtime.Json.JsonString(this._cancellationStatus.ToString()) : null, "cancellationStatus" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != (((object)this._deletionStatus)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Runtime.Json.JsonString(this._deletionStatus.ToString()) : null, "deletionStatus" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != (((object)this._returnReason)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Runtime.Json.JsonString(this._returnReason.ToString()) : null, "returnReason" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != (((object)this._returnStatus)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Runtime.Json.JsonString(this._returnStatus.ToString()) : null, "returnStatus" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != this._managementRpDetail ? (Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Runtime.Json.JsonNode) this._managementRpDetail.ToJson(null,serializationMode) : null, "managementRpDetails" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Runtime.SerializationMode.IncludeReadOnly))
            {
                if (null != this._managementRpDetailsList)
                {
                    var __m = new Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Runtime.Json.XNodeArray();
                    foreach( var __n in this._managementRpDetailsList )
                    {
                        AddIf(__n?.ToJson(null, serializationMode) ,__m.Add);
                    }
                    container.Add("managementRpDetailsList",__m);
                }
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != this._error ? (Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Runtime.Json.JsonNode) this._error.ToJson(null,serializationMode) : null, "error" ,container.Add );
            }
            AfterToJson(ref container);
            return container;
        }
    }
}