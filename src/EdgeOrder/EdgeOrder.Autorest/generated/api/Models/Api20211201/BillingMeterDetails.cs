// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20211201
{
    using static Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Runtime.Extensions;

    /// <summary>Holds billing meter details for each type of billing</summary>
    public partial class BillingMeterDetails :
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20211201.IBillingMeterDetails,
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20211201.IBillingMeterDetailsInternal
    {

        /// <summary>Backing field for <see cref="Frequency" /> property.</summary>
        private string _frequency;

        /// <summary>Frequency of recurrence</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Origin(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.PropertyOrigin.Owned)]
        public string Frequency { get => this._frequency; }

        /// <summary>Backing field for <see cref="MeterDetail" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20211201.IMeterDetails _meterDetail;

        /// <summary>Represents MeterDetails</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Origin(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20211201.IMeterDetails MeterDetail { get => (this._meterDetail = this._meterDetail ?? new Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20211201.MeterDetails()); }

        /// <summary>Represents billing type.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Origin(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Support.BillingType? MeterDetailBillingType { get => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20211201.IMeterDetailsInternal)MeterDetail).BillingType; set => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20211201.IMeterDetailsInternal)MeterDetail).BillingType = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Support.BillingType)""); }

        /// <summary>Charging type.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Origin(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Support.ChargingType? MeterDetailChargingType { get => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20211201.IMeterDetailsInternal)MeterDetail).ChargingType; }

        /// <summary>Billing unit applicable for Pav2 billing</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Origin(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.PropertyOrigin.Inlined)]
        public double? MeterDetailMultiplier { get => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20211201.IMeterDetailsInternal)MeterDetail).Multiplier; }

        /// <summary>Backing field for <see cref="MeteringType" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Support.MeteringType? _meteringType;

        /// <summary>Represents Metering type (eg one-time or recurrent)</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Origin(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Support.MeteringType? MeteringType { get => this._meteringType; }

        /// <summary>Internal Acessors for Frequency</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20211201.IBillingMeterDetailsInternal.Frequency { get => this._frequency; set { {_frequency = value;} } }

        /// <summary>Internal Acessors for MeterDetail</summary>
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20211201.IMeterDetails Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20211201.IBillingMeterDetailsInternal.MeterDetail { get => (this._meterDetail = this._meterDetail ?? new Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20211201.MeterDetails()); set { {_meterDetail = value;} } }

        /// <summary>Internal Acessors for MeterDetailChargingType</summary>
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Support.ChargingType? Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20211201.IBillingMeterDetailsInternal.MeterDetailChargingType { get => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20211201.IMeterDetailsInternal)MeterDetail).ChargingType; set => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20211201.IMeterDetailsInternal)MeterDetail).ChargingType = value; }

        /// <summary>Internal Acessors for MeterDetailMultiplier</summary>
        double? Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20211201.IBillingMeterDetailsInternal.MeterDetailMultiplier { get => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20211201.IMeterDetailsInternal)MeterDetail).Multiplier; set => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20211201.IMeterDetailsInternal)MeterDetail).Multiplier = value; }

        /// <summary>Internal Acessors for MeteringType</summary>
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Support.MeteringType? Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20211201.IBillingMeterDetailsInternal.MeteringType { get => this._meteringType; set { {_meteringType = value;} } }

        /// <summary>Internal Acessors for Name</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20211201.IBillingMeterDetailsInternal.Name { get => this._name; set { {_name = value;} } }

        /// <summary>Backing field for <see cref="Name" /> property.</summary>
        private string _name;

        /// <summary>Represents Billing type name</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Origin(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.PropertyOrigin.Owned)]
        public string Name { get => this._name; }

        /// <summary>Creates an new <see cref="BillingMeterDetails" /> instance.</summary>
        public BillingMeterDetails()
        {

        }
    }
    /// Holds billing meter details for each type of billing
    public partial interface IBillingMeterDetails :
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Runtime.IJsonSerializable
    {
        /// <summary>Frequency of recurrence</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Frequency of recurrence",
        SerializedName = @"frequency",
        PossibleTypes = new [] { typeof(string) })]
        string Frequency { get;  }
        /// <summary>Represents billing type.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Represents billing type.",
        SerializedName = @"billingType",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Support.BillingType) })]
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Support.BillingType? MeterDetailBillingType { get; set; }
        /// <summary>Charging type.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Charging type.",
        SerializedName = @"chargingType",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Support.ChargingType) })]
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Support.ChargingType? MeterDetailChargingType { get;  }
        /// <summary>Billing unit applicable for Pav2 billing</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Billing unit applicable for Pav2 billing",
        SerializedName = @"multiplier",
        PossibleTypes = new [] { typeof(double) })]
        double? MeterDetailMultiplier { get;  }
        /// <summary>Represents Metering type (eg one-time or recurrent)</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Represents Metering type (eg one-time or recurrent)",
        SerializedName = @"meteringType",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Support.MeteringType) })]
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Support.MeteringType? MeteringType { get;  }
        /// <summary>Represents Billing type name</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Represents Billing type name",
        SerializedName = @"name",
        PossibleTypes = new [] { typeof(string) })]
        string Name { get;  }

    }
    /// Holds billing meter details for each type of billing
    internal partial interface IBillingMeterDetailsInternal

    {
        /// <summary>Frequency of recurrence</summary>
        string Frequency { get; set; }
        /// <summary>Represents MeterDetails</summary>
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20211201.IMeterDetails MeterDetail { get; set; }
        /// <summary>Represents billing type.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Support.BillingType? MeterDetailBillingType { get; set; }
        /// <summary>Charging type.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Support.ChargingType? MeterDetailChargingType { get; set; }
        /// <summary>Billing unit applicable for Pav2 billing</summary>
        double? MeterDetailMultiplier { get; set; }
        /// <summary>Represents Metering type (eg one-time or recurrent)</summary>
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Support.MeteringType? MeteringType { get; set; }
        /// <summary>Represents Billing type name</summary>
        string Name { get; set; }

    }
}