// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20211201
{
    using static Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Runtime.Extensions;

    /// <summary>Billing type Purchase meter details</summary>
    public partial class PurchaseMeterDetails :
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20211201.IPurchaseMeterDetails,
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20211201.IPurchaseMeterDetailsInternal,
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Runtime.IValidates
    {
        /// <summary>
        /// Backing field for Inherited model <see cref= "Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20211201.IMeterDetails"
        /// />
        /// </summary>
        private Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20211201.IMeterDetails __meterDetails = new Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20211201.MeterDetails();

        /// <summary>Represents billing type.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Origin(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.PropertyOrigin.Inherited)]
        public Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Support.BillingType BillingType { get => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20211201.IMeterDetailsInternal)__meterDetails).BillingType; set => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20211201.IMeterDetailsInternal)__meterDetails).BillingType = value ; }

        /// <summary>Charging type.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Origin(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.PropertyOrigin.Inherited)]
        public Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Support.ChargingType? ChargingType { get => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20211201.IMeterDetailsInternal)__meterDetails).ChargingType; }

        /// <summary>Internal Acessors for ChargingType</summary>
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Support.ChargingType? Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20211201.IMeterDetailsInternal.ChargingType { get => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20211201.IMeterDetailsInternal)__meterDetails).ChargingType; set => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20211201.IMeterDetailsInternal)__meterDetails).ChargingType = value; }

        /// <summary>Internal Acessors for Multiplier</summary>
        double? Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20211201.IMeterDetailsInternal.Multiplier { get => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20211201.IMeterDetailsInternal)__meterDetails).Multiplier; set => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20211201.IMeterDetailsInternal)__meterDetails).Multiplier = value; }

        /// <summary>Internal Acessors for ProductId</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20211201.IPurchaseMeterDetailsInternal.ProductId { get => this._productId; set { {_productId = value;} } }

        /// <summary>Internal Acessors for SkuId</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20211201.IPurchaseMeterDetailsInternal.SkuId { get => this._skuId; set { {_skuId = value;} } }

        /// <summary>Internal Acessors for TermId</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20211201.IPurchaseMeterDetailsInternal.TermId { get => this._termId; set { {_termId = value;} } }

        /// <summary>Billing unit applicable for Pav2 billing</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Origin(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.PropertyOrigin.Inherited)]
        public double? Multiplier { get => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20211201.IMeterDetailsInternal)__meterDetails).Multiplier; }

        /// <summary>Backing field for <see cref="ProductId" /> property.</summary>
        private string _productId;

        /// <summary>Product Id</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Origin(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.PropertyOrigin.Owned)]
        public string ProductId { get => this._productId; }

        /// <summary>Backing field for <see cref="SkuId" /> property.</summary>
        private string _skuId;

        /// <summary>Sku Id</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Origin(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.PropertyOrigin.Owned)]
        public string SkuId { get => this._skuId; }

        /// <summary>Backing field for <see cref="TermId" /> property.</summary>
        private string _termId;

        /// <summary>Term Id</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Origin(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.PropertyOrigin.Owned)]
        public string TermId { get => this._termId; }

        /// <summary>Creates an new <see cref="PurchaseMeterDetails" /> instance.</summary>
        public PurchaseMeterDetails()
        {

        }

        /// <summary>Validates that this object meets the validation criteria.</summary>
        /// <param name="eventListener">an <see cref="Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Runtime.IEventListener" /> instance that will receive validation
        /// events.</param>
        /// <returns>
        /// A < see cref = "global::System.Threading.Tasks.Task" /> that will be complete when validation is completed.
        /// </returns>
        public async global::System.Threading.Tasks.Task Validate(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Runtime.IEventListener eventListener)
        {
            await eventListener.AssertNotNull(nameof(__meterDetails), __meterDetails);
            await eventListener.AssertObjectIsValid(nameof(__meterDetails), __meterDetails);
        }
    }
    /// Billing type Purchase meter details
    public partial interface IPurchaseMeterDetails :
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Runtime.IJsonSerializable,
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20211201.IMeterDetails
    {
        /// <summary>Product Id</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Product Id",
        SerializedName = @"productId",
        PossibleTypes = new [] { typeof(string) })]
        string ProductId { get;  }
        /// <summary>Sku Id</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Sku Id",
        SerializedName = @"skuId",
        PossibleTypes = new [] { typeof(string) })]
        string SkuId { get;  }
        /// <summary>Term Id</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Term Id",
        SerializedName = @"termId",
        PossibleTypes = new [] { typeof(string) })]
        string TermId { get;  }

    }
    /// Billing type Purchase meter details
    internal partial interface IPurchaseMeterDetailsInternal :
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20211201.IMeterDetailsInternal
    {
        /// <summary>Product Id</summary>
        string ProductId { get; set; }
        /// <summary>Sku Id</summary>
        string SkuId { get; set; }
        /// <summary>Term Id</summary>
        string TermId { get; set; }

    }
}