// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.
namespace Microsoft.Azure.Management.Maintenance
{
    using Microsoft.Rest.Azure;
    using Models;

    /// <summary>
    /// Extension methods for ConfigurationAssignmentsForResourceGroupOperations
    /// </summary>
    public static partial class ConfigurationAssignmentsForResourceGroupOperationsExtensions
    {
        /// <summary>
        /// Get configuration assignment for resource..
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='resourceGroupName'>
        /// Resource group name
        /// </param>
        /// <param name='configurationAssignmentName'>
        /// Configuration assignment name
        /// </param>
        public static ConfigurationAssignment Get(this IConfigurationAssignmentsForResourceGroupOperations operations, string resourceGroupName, string configurationAssignmentName)
        {
                return ((IConfigurationAssignmentsForResourceGroupOperations)operations).GetAsync(resourceGroupName, configurationAssignmentName).GetAwaiter().GetResult();
        }

        /// <summary>
        /// Get configuration assignment for resource..
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='resourceGroupName'>
        /// Resource group name
        /// </param>
        /// <param name='configurationAssignmentName'>
        /// Configuration assignment name
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        public static async System.Threading.Tasks.Task<ConfigurationAssignment> GetAsync(this IConfigurationAssignmentsForResourceGroupOperations operations, string resourceGroupName, string configurationAssignmentName, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            using (var _result = await operations.GetWithHttpMessagesAsync(resourceGroupName, configurationAssignmentName, null, cancellationToken).ConfigureAwait(false))
            {
                return _result.Body;
            }
        }
        /// <summary>
        /// Register configuration for resource.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='resourceGroupName'>
        /// Resource group name
        /// </param>
        /// <param name='configurationAssignmentName'>
        /// Configuration assignment name
        /// </param>
        public static ConfigurationAssignment CreateOrUpdate(this IConfigurationAssignmentsForResourceGroupOperations operations, string resourceGroupName, string configurationAssignmentName, ConfigurationAssignment configurationAssignment)
        {
                return ((IConfigurationAssignmentsForResourceGroupOperations)operations).CreateOrUpdateAsync(resourceGroupName, configurationAssignmentName, configurationAssignment).GetAwaiter().GetResult();
        }

        /// <summary>
        /// Register configuration for resource.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='resourceGroupName'>
        /// Resource group name
        /// </param>
        /// <param name='configurationAssignmentName'>
        /// Configuration assignment name
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        public static async System.Threading.Tasks.Task<ConfigurationAssignment> CreateOrUpdateAsync(this IConfigurationAssignmentsForResourceGroupOperations operations, string resourceGroupName, string configurationAssignmentName, ConfigurationAssignment configurationAssignment, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            using (var _result = await operations.CreateOrUpdateWithHttpMessagesAsync(resourceGroupName, configurationAssignmentName, configurationAssignment, null, cancellationToken).ConfigureAwait(false))
            {
                return _result.Body;
            }
        }
        /// <summary>
        /// Register configuration for resource.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='resourceGroupName'>
        /// Resource group name
        /// </param>
        /// <param name='configurationAssignmentName'>
        /// Configuration assignment name
        /// </param>
        public static ConfigurationAssignment Update(this IConfigurationAssignmentsForResourceGroupOperations operations, string resourceGroupName, string configurationAssignmentName, ConfigurationAssignment configurationAssignment)
        {
                return ((IConfigurationAssignmentsForResourceGroupOperations)operations).UpdateAsync(resourceGroupName, configurationAssignmentName, configurationAssignment).GetAwaiter().GetResult();
        }

        /// <summary>
        /// Register configuration for resource.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='resourceGroupName'>
        /// Resource group name
        /// </param>
        /// <param name='configurationAssignmentName'>
        /// Configuration assignment name
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        public static async System.Threading.Tasks.Task<ConfigurationAssignment> UpdateAsync(this IConfigurationAssignmentsForResourceGroupOperations operations, string resourceGroupName, string configurationAssignmentName, ConfigurationAssignment configurationAssignment, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            using (var _result = await operations.UpdateWithHttpMessagesAsync(resourceGroupName, configurationAssignmentName, configurationAssignment, null, cancellationToken).ConfigureAwait(false))
            {
                return _result.Body;
            }
        }
        /// <summary>
        /// Unregister configuration for resource.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='resourceGroupName'>
        /// Resource group name
        /// </param>
        /// <param name='configurationAssignmentName'>
        /// Unique configuration assignment name
        /// </param>
        public static ConfigurationAssignment Delete(this IConfigurationAssignmentsForResourceGroupOperations operations, string resourceGroupName, string configurationAssignmentName)
        {
                return ((IConfigurationAssignmentsForResourceGroupOperations)operations).DeleteAsync(resourceGroupName, configurationAssignmentName).GetAwaiter().GetResult();
        }

        /// <summary>
        /// Unregister configuration for resource.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='resourceGroupName'>
        /// Resource group name
        /// </param>
        /// <param name='configurationAssignmentName'>
        /// Unique configuration assignment name
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        public static async System.Threading.Tasks.Task<ConfigurationAssignment> DeleteAsync(this IConfigurationAssignmentsForResourceGroupOperations operations, string resourceGroupName, string configurationAssignmentName, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            using (var _result = await operations.DeleteWithHttpMessagesAsync(resourceGroupName, configurationAssignmentName, null, cancellationToken).ConfigureAwait(false))
            {
                return _result.Body;
            }
        }
    }
}
