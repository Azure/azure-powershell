// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.Maintenance.Models
{
    using System.Linq;

    /// <summary>
    /// Input properties for patching a Linux machine.
    /// </summary>
    public partial class InputLinuxParameters
    {
        /// <summary>
        /// Initializes a new instance of the InputLinuxParameters class.
        /// </summary>
        public InputLinuxParameters()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the InputLinuxParameters class.
        /// </summary>

        /// <param name="packageNameMasksToExclude">Package names to be excluded for patching.
        /// </param>

        /// <param name="packageNameMasksToInclude">Package names to be included for patching.
        /// </param>

        /// <param name="classificationsToInclude">Classification category of patches to be patched
        /// </param>
        public InputLinuxParameters(System.Collections.Generic.IList<string> packageNameMasksToExclude = default(System.Collections.Generic.IList<string>), System.Collections.Generic.IList<string> packageNameMasksToInclude = default(System.Collections.Generic.IList<string>), System.Collections.Generic.IList<string> classificationsToInclude = default(System.Collections.Generic.IList<string>))

        {
            this.PackageNameMasksToExclude = packageNameMasksToExclude;
            this.PackageNameMasksToInclude = packageNameMasksToInclude;
            this.ClassificationsToInclude = classificationsToInclude;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets or sets package names to be excluded for patching.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "packageNameMasksToExclude")]
        public System.Collections.Generic.IList<string> PackageNameMasksToExclude {get; set; }

        /// <summary>
        /// Gets or sets package names to be included for patching.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "packageNameMasksToInclude")]
        public System.Collections.Generic.IList<string> PackageNameMasksToInclude {get; set; }

        /// <summary>
        /// Gets or sets classification category of patches to be patched
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "classificationsToInclude")]
        public System.Collections.Generic.IList<string> ClassificationsToInclude {get; set; }
    }
}