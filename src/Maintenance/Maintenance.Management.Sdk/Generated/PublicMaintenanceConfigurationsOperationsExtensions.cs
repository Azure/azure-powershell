// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.
namespace Microsoft.Azure.Management.Maintenance
{
    using Microsoft.Rest.Azure;
    using Models;

    /// <summary>
    /// Extension methods for PublicMaintenanceConfigurationsOperations
    /// </summary>
    public static partial class PublicMaintenanceConfigurationsOperationsExtensions
    {
        /// <summary>
        /// Get Public Maintenance Configuration records
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        public static System.Collections.Generic.IEnumerable<MaintenanceConfiguration> List(this IPublicMaintenanceConfigurationsOperations operations)
        {
                return ((IPublicMaintenanceConfigurationsOperations)operations).ListAsync().GetAwaiter().GetResult();
        }

        /// <summary>
        /// Get Public Maintenance Configuration records
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        public static async System.Threading.Tasks.Task<System.Collections.Generic.IEnumerable<MaintenanceConfiguration>> ListAsync(this IPublicMaintenanceConfigurationsOperations operations, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            using (var _result = await operations.ListWithHttpMessagesAsync(null, cancellationToken).ConfigureAwait(false))
            {
                return _result.Body;
            }
        }
        /// <summary>
        /// Get Public Maintenance Configuration record
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='resourceName'>
        /// Maintenance Configuration Name
        /// </param>
        public static MaintenanceConfiguration Get(this IPublicMaintenanceConfigurationsOperations operations, string resourceName)
        {
                return ((IPublicMaintenanceConfigurationsOperations)operations).GetAsync(resourceName).GetAwaiter().GetResult();
        }

        /// <summary>
        /// Get Public Maintenance Configuration record
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='resourceName'>
        /// Maintenance Configuration Name
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        public static async System.Threading.Tasks.Task<MaintenanceConfiguration> GetAsync(this IPublicMaintenanceConfigurationsOperations operations, string resourceName, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            using (var _result = await operations.GetWithHttpMessagesAsync(resourceName, null, cancellationToken).ConfigureAwait(false))
            {
                return _result.Body;
            }
        }
    }
}
