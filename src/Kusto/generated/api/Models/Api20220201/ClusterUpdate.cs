// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Kusto.Models.Api20220201
{
    using static Microsoft.Azure.PowerShell.Cmdlets.Kusto.Runtime.Extensions;

    /// <summary>Class representing an update to a Kusto cluster.</summary>
    public partial class ClusterUpdate :
        Microsoft.Azure.PowerShell.Cmdlets.Kusto.Models.Api20220201.IClusterUpdate,
        Microsoft.Azure.PowerShell.Cmdlets.Kusto.Models.Api20220201.IClusterUpdateInternal,
        Microsoft.Azure.PowerShell.Cmdlets.Kusto.Runtime.IValidates
    {
        /// <summary>
        /// Backing field for Inherited model <see cref= "Microsoft.Azure.PowerShell.Cmdlets.Kusto.Models.Api10.IResource" />
        /// </summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Kusto.Models.Api10.IResource __resource = new Microsoft.Azure.PowerShell.Cmdlets.Kusto.Models.Api10.Resource();

        /// <summary>The cluster's accepted audiences.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Kusto.Origin(Microsoft.Azure.PowerShell.Cmdlets.Kusto.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Kusto.Models.Api20220201.IAcceptedAudiences[] AcceptedAudience { get => ((Microsoft.Azure.PowerShell.Cmdlets.Kusto.Models.Api20220201.IClusterPropertiesInternal)Property).AcceptedAudience; set => ((Microsoft.Azure.PowerShell.Cmdlets.Kusto.Models.Api20220201.IClusterPropertiesInternal)Property).AcceptedAudience = value ?? null /* arrayOf */; }

        /// <summary>List of allowed FQDNs(Fully Qualified Domain Name) for egress from Cluster.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Kusto.Origin(Microsoft.Azure.PowerShell.Cmdlets.Kusto.PropertyOrigin.Inlined)]
        public string[] AllowedFqdnList { get => ((Microsoft.Azure.PowerShell.Cmdlets.Kusto.Models.Api20220201.IClusterPropertiesInternal)Property).AllowedFqdnList; set => ((Microsoft.Azure.PowerShell.Cmdlets.Kusto.Models.Api20220201.IClusterPropertiesInternal)Property).AllowedFqdnList = value ?? null /* arrayOf */; }

        /// <summary>The list of ips in the format of CIDR allowed to connect to the cluster.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Kusto.Origin(Microsoft.Azure.PowerShell.Cmdlets.Kusto.PropertyOrigin.Inlined)]
        public string[] AllowedIPRangeList { get => ((Microsoft.Azure.PowerShell.Cmdlets.Kusto.Models.Api20220201.IClusterPropertiesInternal)Property).AllowedIPRangeList; set => ((Microsoft.Azure.PowerShell.Cmdlets.Kusto.Models.Api20220201.IClusterPropertiesInternal)Property).AllowedIPRangeList = value ?? null /* arrayOf */; }

        /// <summary>The cluster data ingestion URI.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Kusto.Origin(Microsoft.Azure.PowerShell.Cmdlets.Kusto.PropertyOrigin.Inlined)]
        public string DataIngestionUri { get => ((Microsoft.Azure.PowerShell.Cmdlets.Kusto.Models.Api20220201.IClusterPropertiesInternal)Property).DataIngestionUri; }

        /// <summary>
        /// A boolean value that indicates if the cluster could be automatically stopped (due to lack of data or no activity for many
        /// days).
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Kusto.Origin(Microsoft.Azure.PowerShell.Cmdlets.Kusto.PropertyOrigin.Inlined)]
        public bool? EnableAutoStop { get => ((Microsoft.Azure.PowerShell.Cmdlets.Kusto.Models.Api20220201.IClusterPropertiesInternal)Property).EnableAutoStop; set => ((Microsoft.Azure.PowerShell.Cmdlets.Kusto.Models.Api20220201.IClusterPropertiesInternal)Property).EnableAutoStop = value ?? default(bool); }

        /// <summary>A boolean value that indicates if the cluster's disks are encrypted.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Kusto.Origin(Microsoft.Azure.PowerShell.Cmdlets.Kusto.PropertyOrigin.Inlined)]
        public bool? EnableDiskEncryption { get => ((Microsoft.Azure.PowerShell.Cmdlets.Kusto.Models.Api20220201.IClusterPropertiesInternal)Property).EnableDiskEncryption; set => ((Microsoft.Azure.PowerShell.Cmdlets.Kusto.Models.Api20220201.IClusterPropertiesInternal)Property).EnableDiskEncryption = value ?? default(bool); }

        /// <summary>A boolean value that indicates if double encryption is enabled.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Kusto.Origin(Microsoft.Azure.PowerShell.Cmdlets.Kusto.PropertyOrigin.Inlined)]
        public bool? EnableDoubleEncryption { get => ((Microsoft.Azure.PowerShell.Cmdlets.Kusto.Models.Api20220201.IClusterPropertiesInternal)Property).EnableDoubleEncryption; set => ((Microsoft.Azure.PowerShell.Cmdlets.Kusto.Models.Api20220201.IClusterPropertiesInternal)Property).EnableDoubleEncryption = value ?? default(bool); }

        /// <summary>A boolean value that indicates if the purge operations are enabled.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Kusto.Origin(Microsoft.Azure.PowerShell.Cmdlets.Kusto.PropertyOrigin.Inlined)]
        public bool? EnablePurge { get => ((Microsoft.Azure.PowerShell.Cmdlets.Kusto.Models.Api20220201.IClusterPropertiesInternal)Property).EnablePurge; set => ((Microsoft.Azure.PowerShell.Cmdlets.Kusto.Models.Api20220201.IClusterPropertiesInternal)Property).EnablePurge = value ?? default(bool); }

        /// <summary>A boolean value that indicates if the streaming ingest is enabled.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Kusto.Origin(Microsoft.Azure.PowerShell.Cmdlets.Kusto.PropertyOrigin.Inlined)]
        public bool? EnableStreamingIngest { get => ((Microsoft.Azure.PowerShell.Cmdlets.Kusto.Models.Api20220201.IClusterPropertiesInternal)Property).EnableStreamingIngest; set => ((Microsoft.Azure.PowerShell.Cmdlets.Kusto.Models.Api20220201.IClusterPropertiesInternal)Property).EnableStreamingIngest = value ?? default(bool); }

        /// <summary>The engine type</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Kusto.Origin(Microsoft.Azure.PowerShell.Cmdlets.Kusto.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Kusto.Support.EngineType? EngineType { get => ((Microsoft.Azure.PowerShell.Cmdlets.Kusto.Models.Api20220201.IClusterPropertiesInternal)Property).EngineType; set => ((Microsoft.Azure.PowerShell.Cmdlets.Kusto.Models.Api20220201.IClusterPropertiesInternal)Property).EngineType = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.Kusto.Support.EngineType)""); }

        /// <summary>
        /// Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Kusto.Origin(Microsoft.Azure.PowerShell.Cmdlets.Kusto.PropertyOrigin.Inherited)]
        public string Id { get => ((Microsoft.Azure.PowerShell.Cmdlets.Kusto.Models.Api10.IResourceInternal)__resource).Id; }

        /// <summary>Backing field for <see cref="Identity" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Kusto.Models.Api20220201.IIdentity _identity;

        /// <summary>The identity of the cluster, if configured.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Kusto.Origin(Microsoft.Azure.PowerShell.Cmdlets.Kusto.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Kusto.Models.Api20220201.IIdentity Identity { get => (this._identity = this._identity ?? new Microsoft.Azure.PowerShell.Cmdlets.Kusto.Models.Api20220201.Identity()); set => this._identity = value; }

        /// <summary>The principal ID of resource identity.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Kusto.Origin(Microsoft.Azure.PowerShell.Cmdlets.Kusto.PropertyOrigin.Inlined)]
        public string IdentityPrincipalId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Kusto.Models.Api20220201.IIdentityInternal)Identity).PrincipalId; }

        /// <summary>The tenant ID of resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Kusto.Origin(Microsoft.Azure.PowerShell.Cmdlets.Kusto.PropertyOrigin.Inlined)]
        public string IdentityTenantId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Kusto.Models.Api20220201.IIdentityInternal)Identity).TenantId; }

        /// <summary>
        /// The type of managed identity used. The type 'SystemAssigned, UserAssigned' includes both an implicitly created identity
        /// and a set of user-assigned identities. The type 'None' will remove all identities.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Kusto.Origin(Microsoft.Azure.PowerShell.Cmdlets.Kusto.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Kusto.Support.IdentityType? IdentityType { get => ((Microsoft.Azure.PowerShell.Cmdlets.Kusto.Models.Api20220201.IIdentityInternal)Identity).Type; set => ((Microsoft.Azure.PowerShell.Cmdlets.Kusto.Models.Api20220201.IIdentityInternal)Identity).Type = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.Kusto.Support.IdentityType)""); }

        /// <summary>
        /// The list of user identities associated with the Kusto cluster. The user identity dictionary key references will be ARM
        /// resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Kusto.Origin(Microsoft.Azure.PowerShell.Cmdlets.Kusto.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Kusto.Models.Api20220201.IIdentityUserAssignedIdentities IdentityUserAssignedIdentity { get => ((Microsoft.Azure.PowerShell.Cmdlets.Kusto.Models.Api20220201.IIdentityInternal)Identity).UserAssignedIdentity; set => ((Microsoft.Azure.PowerShell.Cmdlets.Kusto.Models.Api20220201.IIdentityInternal)Identity).UserAssignedIdentity = value ?? null /* model class */; }

        /// <summary>The name of the key vault key.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Kusto.Origin(Microsoft.Azure.PowerShell.Cmdlets.Kusto.PropertyOrigin.Inlined)]
        public string KeyVaultPropertyKeyName { get => ((Microsoft.Azure.PowerShell.Cmdlets.Kusto.Models.Api20220201.IClusterPropertiesInternal)Property).KeyVaultPropertyKeyName; set => ((Microsoft.Azure.PowerShell.Cmdlets.Kusto.Models.Api20220201.IClusterPropertiesInternal)Property).KeyVaultPropertyKeyName = value ?? null; }

        /// <summary>The Uri of the key vault.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Kusto.Origin(Microsoft.Azure.PowerShell.Cmdlets.Kusto.PropertyOrigin.Inlined)]
        public string KeyVaultPropertyKeyVaultUri { get => ((Microsoft.Azure.PowerShell.Cmdlets.Kusto.Models.Api20220201.IClusterPropertiesInternal)Property).KeyVaultPropertyKeyVaultUri; set => ((Microsoft.Azure.PowerShell.Cmdlets.Kusto.Models.Api20220201.IClusterPropertiesInternal)Property).KeyVaultPropertyKeyVaultUri = value ?? null; }

        /// <summary>The version of the key vault key.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Kusto.Origin(Microsoft.Azure.PowerShell.Cmdlets.Kusto.PropertyOrigin.Inlined)]
        public string KeyVaultPropertyKeyVersion { get => ((Microsoft.Azure.PowerShell.Cmdlets.Kusto.Models.Api20220201.IClusterPropertiesInternal)Property).KeyVaultPropertyKeyVersion; set => ((Microsoft.Azure.PowerShell.Cmdlets.Kusto.Models.Api20220201.IClusterPropertiesInternal)Property).KeyVaultPropertyKeyVersion = value ?? null; }

        /// <summary>The user assigned identity (ARM resource id) that has access to the key.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Kusto.Origin(Microsoft.Azure.PowerShell.Cmdlets.Kusto.PropertyOrigin.Inlined)]
        public string KeyVaultPropertyUserIdentity { get => ((Microsoft.Azure.PowerShell.Cmdlets.Kusto.Models.Api20220201.IClusterPropertiesInternal)Property).KeyVaultPropertyUserIdentity; set => ((Microsoft.Azure.PowerShell.Cmdlets.Kusto.Models.Api20220201.IClusterPropertiesInternal)Property).KeyVaultPropertyUserIdentity = value ?? null; }

        /// <summary>The list of language extensions.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Kusto.Origin(Microsoft.Azure.PowerShell.Cmdlets.Kusto.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Kusto.Models.Api20220201.ILanguageExtension[] LanguageExtensionValue { get => ((Microsoft.Azure.PowerShell.Cmdlets.Kusto.Models.Api20220201.IClusterPropertiesInternal)Property).LanguageExtensionValue; set => ((Microsoft.Azure.PowerShell.Cmdlets.Kusto.Models.Api20220201.IClusterPropertiesInternal)Property).LanguageExtensionValue = value ?? null /* arrayOf */; }

        /// <summary>Backing field for <see cref="Location" /> property.</summary>
        private string _location;

        /// <summary>Resource location.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Kusto.Origin(Microsoft.Azure.PowerShell.Cmdlets.Kusto.PropertyOrigin.Owned)]
        public string Location { get => this._location; set => this._location = value; }

        /// <summary>Internal Acessors for Id</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Kusto.Models.Api10.IResourceInternal.Id { get => ((Microsoft.Azure.PowerShell.Cmdlets.Kusto.Models.Api10.IResourceInternal)__resource).Id; set => ((Microsoft.Azure.PowerShell.Cmdlets.Kusto.Models.Api10.IResourceInternal)__resource).Id = value; }

        /// <summary>Internal Acessors for Name</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Kusto.Models.Api10.IResourceInternal.Name { get => ((Microsoft.Azure.PowerShell.Cmdlets.Kusto.Models.Api10.IResourceInternal)__resource).Name; set => ((Microsoft.Azure.PowerShell.Cmdlets.Kusto.Models.Api10.IResourceInternal)__resource).Name = value; }

        /// <summary>Internal Acessors for Type</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Kusto.Models.Api10.IResourceInternal.Type { get => ((Microsoft.Azure.PowerShell.Cmdlets.Kusto.Models.Api10.IResourceInternal)__resource).Type; set => ((Microsoft.Azure.PowerShell.Cmdlets.Kusto.Models.Api10.IResourceInternal)__resource).Type = value; }

        /// <summary>Internal Acessors for DataIngestionUri</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Kusto.Models.Api20220201.IClusterUpdateInternal.DataIngestionUri { get => ((Microsoft.Azure.PowerShell.Cmdlets.Kusto.Models.Api20220201.IClusterPropertiesInternal)Property).DataIngestionUri; set => ((Microsoft.Azure.PowerShell.Cmdlets.Kusto.Models.Api20220201.IClusterPropertiesInternal)Property).DataIngestionUri = value; }

        /// <summary>Internal Acessors for Identity</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Kusto.Models.Api20220201.IIdentity Microsoft.Azure.PowerShell.Cmdlets.Kusto.Models.Api20220201.IClusterUpdateInternal.Identity { get => (this._identity = this._identity ?? new Microsoft.Azure.PowerShell.Cmdlets.Kusto.Models.Api20220201.Identity()); set { {_identity = value;} } }

        /// <summary>Internal Acessors for IdentityPrincipalId</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Kusto.Models.Api20220201.IClusterUpdateInternal.IdentityPrincipalId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Kusto.Models.Api20220201.IIdentityInternal)Identity).PrincipalId; set => ((Microsoft.Azure.PowerShell.Cmdlets.Kusto.Models.Api20220201.IIdentityInternal)Identity).PrincipalId = value; }

        /// <summary>Internal Acessors for IdentityTenantId</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Kusto.Models.Api20220201.IClusterUpdateInternal.IdentityTenantId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Kusto.Models.Api20220201.IIdentityInternal)Identity).TenantId; set => ((Microsoft.Azure.PowerShell.Cmdlets.Kusto.Models.Api20220201.IIdentityInternal)Identity).TenantId = value; }

        /// <summary>Internal Acessors for KeyVaultProperty</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Kusto.Models.Api20220201.IKeyVaultProperties Microsoft.Azure.PowerShell.Cmdlets.Kusto.Models.Api20220201.IClusterUpdateInternal.KeyVaultProperty { get => ((Microsoft.Azure.PowerShell.Cmdlets.Kusto.Models.Api20220201.IClusterPropertiesInternal)Property).KeyVaultProperty; set => ((Microsoft.Azure.PowerShell.Cmdlets.Kusto.Models.Api20220201.IClusterPropertiesInternal)Property).KeyVaultProperty = value; }

        /// <summary>Internal Acessors for LanguageExtension</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Kusto.Models.Api20220201.ILanguageExtensionsList Microsoft.Azure.PowerShell.Cmdlets.Kusto.Models.Api20220201.IClusterUpdateInternal.LanguageExtension { get => ((Microsoft.Azure.PowerShell.Cmdlets.Kusto.Models.Api20220201.IClusterPropertiesInternal)Property).LanguageExtension; set => ((Microsoft.Azure.PowerShell.Cmdlets.Kusto.Models.Api20220201.IClusterPropertiesInternal)Property).LanguageExtension = value; }

        /// <summary>Internal Acessors for OptimizedAutoscale</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Kusto.Models.Api20220201.IOptimizedAutoscale Microsoft.Azure.PowerShell.Cmdlets.Kusto.Models.Api20220201.IClusterUpdateInternal.OptimizedAutoscale { get => ((Microsoft.Azure.PowerShell.Cmdlets.Kusto.Models.Api20220201.IClusterPropertiesInternal)Property).OptimizedAutoscale; set => ((Microsoft.Azure.PowerShell.Cmdlets.Kusto.Models.Api20220201.IClusterPropertiesInternal)Property).OptimizedAutoscale = value; }

        /// <summary>Internal Acessors for PrivateEndpointConnection</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Kusto.Models.Api20220201.IPrivateEndpointConnection[] Microsoft.Azure.PowerShell.Cmdlets.Kusto.Models.Api20220201.IClusterUpdateInternal.PrivateEndpointConnection { get => ((Microsoft.Azure.PowerShell.Cmdlets.Kusto.Models.Api20220201.IClusterPropertiesInternal)Property).PrivateEndpointConnection; set => ((Microsoft.Azure.PowerShell.Cmdlets.Kusto.Models.Api20220201.IClusterPropertiesInternal)Property).PrivateEndpointConnection = value; }

        /// <summary>Internal Acessors for Property</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Kusto.Models.Api20220201.IClusterProperties Microsoft.Azure.PowerShell.Cmdlets.Kusto.Models.Api20220201.IClusterUpdateInternal.Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.Kusto.Models.Api20220201.ClusterProperties()); set { {_property = value;} } }

        /// <summary>Internal Acessors for ProvisioningState</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Kusto.Support.ProvisioningState? Microsoft.Azure.PowerShell.Cmdlets.Kusto.Models.Api20220201.IClusterUpdateInternal.ProvisioningState { get => ((Microsoft.Azure.PowerShell.Cmdlets.Kusto.Models.Api20220201.IClusterPropertiesInternal)Property).ProvisioningState; set => ((Microsoft.Azure.PowerShell.Cmdlets.Kusto.Models.Api20220201.IClusterPropertiesInternal)Property).ProvisioningState = value; }

        /// <summary>Internal Acessors for Sku</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Kusto.Models.Api20220201.IAzureSku Microsoft.Azure.PowerShell.Cmdlets.Kusto.Models.Api20220201.IClusterUpdateInternal.Sku { get => (this._sku = this._sku ?? new Microsoft.Azure.PowerShell.Cmdlets.Kusto.Models.Api20220201.AzureSku()); set { {_sku = value;} } }

        /// <summary>Internal Acessors for State</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Kusto.Support.State? Microsoft.Azure.PowerShell.Cmdlets.Kusto.Models.Api20220201.IClusterUpdateInternal.State { get => ((Microsoft.Azure.PowerShell.Cmdlets.Kusto.Models.Api20220201.IClusterPropertiesInternal)Property).State; set => ((Microsoft.Azure.PowerShell.Cmdlets.Kusto.Models.Api20220201.IClusterPropertiesInternal)Property).State = value; }

        /// <summary>Internal Acessors for StateReason</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Kusto.Models.Api20220201.IClusterUpdateInternal.StateReason { get => ((Microsoft.Azure.PowerShell.Cmdlets.Kusto.Models.Api20220201.IClusterPropertiesInternal)Property).StateReason; set => ((Microsoft.Azure.PowerShell.Cmdlets.Kusto.Models.Api20220201.IClusterPropertiesInternal)Property).StateReason = value; }

        /// <summary>Internal Acessors for Uri</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Kusto.Models.Api20220201.IClusterUpdateInternal.Uri { get => ((Microsoft.Azure.PowerShell.Cmdlets.Kusto.Models.Api20220201.IClusterPropertiesInternal)Property).Uri; set => ((Microsoft.Azure.PowerShell.Cmdlets.Kusto.Models.Api20220201.IClusterPropertiesInternal)Property).Uri = value; }

        /// <summary>Internal Acessors for VirtualNetworkConfiguration</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Kusto.Models.Api20220201.IVirtualNetworkConfiguration Microsoft.Azure.PowerShell.Cmdlets.Kusto.Models.Api20220201.IClusterUpdateInternal.VirtualNetworkConfiguration { get => ((Microsoft.Azure.PowerShell.Cmdlets.Kusto.Models.Api20220201.IClusterPropertiesInternal)Property).VirtualNetworkConfiguration; set => ((Microsoft.Azure.PowerShell.Cmdlets.Kusto.Models.Api20220201.IClusterPropertiesInternal)Property).VirtualNetworkConfiguration = value; }

        /// <summary>The name of the resource</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Kusto.Origin(Microsoft.Azure.PowerShell.Cmdlets.Kusto.PropertyOrigin.Inherited)]
        public string Name { get => ((Microsoft.Azure.PowerShell.Cmdlets.Kusto.Models.Api10.IResourceInternal)__resource).Name; }

        /// <summary>
        /// A boolean value that indicate if the optimized autoscale feature is enabled or not.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Kusto.Origin(Microsoft.Azure.PowerShell.Cmdlets.Kusto.PropertyOrigin.Inlined)]
        public bool? OptimizedAutoscaleIsEnabled { get => ((Microsoft.Azure.PowerShell.Cmdlets.Kusto.Models.Api20220201.IClusterPropertiesInternal)Property).OptimizedAutoscaleIsEnabled; set => ((Microsoft.Azure.PowerShell.Cmdlets.Kusto.Models.Api20220201.IClusterPropertiesInternal)Property).OptimizedAutoscaleIsEnabled = value ?? default(bool); }

        /// <summary>Maximum allowed instances count.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Kusto.Origin(Microsoft.Azure.PowerShell.Cmdlets.Kusto.PropertyOrigin.Inlined)]
        public int? OptimizedAutoscaleMaximum { get => ((Microsoft.Azure.PowerShell.Cmdlets.Kusto.Models.Api20220201.IClusterPropertiesInternal)Property).OptimizedAutoscaleMaximum; set => ((Microsoft.Azure.PowerShell.Cmdlets.Kusto.Models.Api20220201.IClusterPropertiesInternal)Property).OptimizedAutoscaleMaximum = value ?? default(int); }

        /// <summary>Minimum allowed instances count.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Kusto.Origin(Microsoft.Azure.PowerShell.Cmdlets.Kusto.PropertyOrigin.Inlined)]
        public int? OptimizedAutoscaleMinimum { get => ((Microsoft.Azure.PowerShell.Cmdlets.Kusto.Models.Api20220201.IClusterPropertiesInternal)Property).OptimizedAutoscaleMinimum; set => ((Microsoft.Azure.PowerShell.Cmdlets.Kusto.Models.Api20220201.IClusterPropertiesInternal)Property).OptimizedAutoscaleMinimum = value ?? default(int); }

        /// <summary>The version of the template defined, for instance 1.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Kusto.Origin(Microsoft.Azure.PowerShell.Cmdlets.Kusto.PropertyOrigin.Inlined)]
        public int? OptimizedAutoscaleVersion { get => ((Microsoft.Azure.PowerShell.Cmdlets.Kusto.Models.Api20220201.IClusterPropertiesInternal)Property).OptimizedAutoscaleVersion; set => ((Microsoft.Azure.PowerShell.Cmdlets.Kusto.Models.Api20220201.IClusterPropertiesInternal)Property).OptimizedAutoscaleVersion = value ?? default(int); }

        /// <summary>A list of private endpoint connections.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Kusto.Origin(Microsoft.Azure.PowerShell.Cmdlets.Kusto.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Kusto.Models.Api20220201.IPrivateEndpointConnection[] PrivateEndpointConnection { get => ((Microsoft.Azure.PowerShell.Cmdlets.Kusto.Models.Api20220201.IClusterPropertiesInternal)Property).PrivateEndpointConnection; }

        /// <summary>Backing field for <see cref="Property" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Kusto.Models.Api20220201.IClusterProperties _property;

        /// <summary>The cluster properties.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Kusto.Origin(Microsoft.Azure.PowerShell.Cmdlets.Kusto.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Kusto.Models.Api20220201.IClusterProperties Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.Kusto.Models.Api20220201.ClusterProperties()); set => this._property = value; }

        /// <summary>The provisioned state of the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Kusto.Origin(Microsoft.Azure.PowerShell.Cmdlets.Kusto.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Kusto.Support.ProvisioningState? ProvisioningState { get => ((Microsoft.Azure.PowerShell.Cmdlets.Kusto.Models.Api20220201.IClusterPropertiesInternal)Property).ProvisioningState; }

        /// <summary>
        /// Indicates what public IP type to create - IPv4 (default), or DualStack (both IPv4 and IPv6)
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Kusto.Origin(Microsoft.Azure.PowerShell.Cmdlets.Kusto.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Kusto.Support.PublicIPType? PublicIPType { get => ((Microsoft.Azure.PowerShell.Cmdlets.Kusto.Models.Api20220201.IClusterPropertiesInternal)Property).PublicIPType; set => ((Microsoft.Azure.PowerShell.Cmdlets.Kusto.Models.Api20220201.IClusterPropertiesInternal)Property).PublicIPType = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.Kusto.Support.PublicIPType)""); }

        /// <summary>
        /// Public network access to the cluster is enabled by default. When disabled, only private endpoint connection to the cluster
        /// is allowed
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Kusto.Origin(Microsoft.Azure.PowerShell.Cmdlets.Kusto.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Kusto.Support.PublicNetworkAccess? PublicNetworkAccess { get => ((Microsoft.Azure.PowerShell.Cmdlets.Kusto.Models.Api20220201.IClusterPropertiesInternal)Property).PublicNetworkAccess; set => ((Microsoft.Azure.PowerShell.Cmdlets.Kusto.Models.Api20220201.IClusterPropertiesInternal)Property).PublicNetworkAccess = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.Kusto.Support.PublicNetworkAccess)""); }

        /// <summary>
        /// Whether or not to restrict outbound network access. Value is optional but if passed in, must be 'Enabled' or 'Disabled'
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Kusto.Origin(Microsoft.Azure.PowerShell.Cmdlets.Kusto.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Kusto.Support.ClusterNetworkAccessFlag? RestrictOutboundNetworkAccess { get => ((Microsoft.Azure.PowerShell.Cmdlets.Kusto.Models.Api20220201.IClusterPropertiesInternal)Property).RestrictOutboundNetworkAccess; set => ((Microsoft.Azure.PowerShell.Cmdlets.Kusto.Models.Api20220201.IClusterPropertiesInternal)Property).RestrictOutboundNetworkAccess = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.Kusto.Support.ClusterNetworkAccessFlag)""); }

        /// <summary>Backing field for <see cref="Sku" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Kusto.Models.Api20220201.IAzureSku _sku;

        /// <summary>The SKU of the cluster.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Kusto.Origin(Microsoft.Azure.PowerShell.Cmdlets.Kusto.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Kusto.Models.Api20220201.IAzureSku Sku { get => (this._sku = this._sku ?? new Microsoft.Azure.PowerShell.Cmdlets.Kusto.Models.Api20220201.AzureSku()); set => this._sku = value; }

        /// <summary>The number of instances of the cluster.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Kusto.Origin(Microsoft.Azure.PowerShell.Cmdlets.Kusto.PropertyOrigin.Inlined)]
        public int? SkuCapacity { get => ((Microsoft.Azure.PowerShell.Cmdlets.Kusto.Models.Api20220201.IAzureSkuInternal)Sku).Capacity; set => ((Microsoft.Azure.PowerShell.Cmdlets.Kusto.Models.Api20220201.IAzureSkuInternal)Sku).Capacity = value ?? default(int); }

        /// <summary>SKU name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Kusto.Origin(Microsoft.Azure.PowerShell.Cmdlets.Kusto.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Kusto.Support.AzureSkuName? SkuName { get => ((Microsoft.Azure.PowerShell.Cmdlets.Kusto.Models.Api20220201.IAzureSkuInternal)Sku).Name; set => ((Microsoft.Azure.PowerShell.Cmdlets.Kusto.Models.Api20220201.IAzureSkuInternal)Sku).Name = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.Kusto.Support.AzureSkuName)""); }

        /// <summary>SKU tier.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Kusto.Origin(Microsoft.Azure.PowerShell.Cmdlets.Kusto.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Kusto.Support.AzureSkuTier? SkuTier { get => ((Microsoft.Azure.PowerShell.Cmdlets.Kusto.Models.Api20220201.IAzureSkuInternal)Sku).Tier; set => ((Microsoft.Azure.PowerShell.Cmdlets.Kusto.Models.Api20220201.IAzureSkuInternal)Sku).Tier = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.Kusto.Support.AzureSkuTier)""); }

        /// <summary>The state of the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Kusto.Origin(Microsoft.Azure.PowerShell.Cmdlets.Kusto.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Kusto.Support.State? State { get => ((Microsoft.Azure.PowerShell.Cmdlets.Kusto.Models.Api20220201.IClusterPropertiesInternal)Property).State; }

        /// <summary>The reason for the cluster's current state.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Kusto.Origin(Microsoft.Azure.PowerShell.Cmdlets.Kusto.PropertyOrigin.Inlined)]
        public string StateReason { get => ((Microsoft.Azure.PowerShell.Cmdlets.Kusto.Models.Api20220201.IClusterPropertiesInternal)Property).StateReason; }

        /// <summary>Backing field for <see cref="Tag" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Kusto.Models.Api20220201.IClusterUpdateTags _tag;

        /// <summary>Resource tags.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Kusto.Origin(Microsoft.Azure.PowerShell.Cmdlets.Kusto.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.Kusto.Models.Api20220201.IClusterUpdateTags Tag { get => (this._tag = this._tag ?? new Microsoft.Azure.PowerShell.Cmdlets.Kusto.Models.Api20220201.ClusterUpdateTags()); set => this._tag = value; }

        /// <summary>The cluster's external tenants.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Kusto.Origin(Microsoft.Azure.PowerShell.Cmdlets.Kusto.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Kusto.Models.Api20220201.ITrustedExternalTenant[] TrustedExternalTenant { get => ((Microsoft.Azure.PowerShell.Cmdlets.Kusto.Models.Api20220201.IClusterPropertiesInternal)Property).TrustedExternalTenant; set => ((Microsoft.Azure.PowerShell.Cmdlets.Kusto.Models.Api20220201.IClusterPropertiesInternal)Property).TrustedExternalTenant = value ?? null /* arrayOf */; }

        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Kusto.Origin(Microsoft.Azure.PowerShell.Cmdlets.Kusto.PropertyOrigin.Inherited)]
        public string Type { get => ((Microsoft.Azure.PowerShell.Cmdlets.Kusto.Models.Api10.IResourceInternal)__resource).Type; }

        /// <summary>The cluster URI.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Kusto.Origin(Microsoft.Azure.PowerShell.Cmdlets.Kusto.PropertyOrigin.Inlined)]
        public string Uri { get => ((Microsoft.Azure.PowerShell.Cmdlets.Kusto.Models.Api20220201.IClusterPropertiesInternal)Property).Uri; }

        /// <summary>Virtual Cluster graduation properties</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Kusto.Origin(Microsoft.Azure.PowerShell.Cmdlets.Kusto.PropertyOrigin.Inlined)]
        public string VirtualClusterGraduationProperty { get => ((Microsoft.Azure.PowerShell.Cmdlets.Kusto.Models.Api20220201.IClusterPropertiesInternal)Property).VirtualClusterGraduationProperty; set => ((Microsoft.Azure.PowerShell.Cmdlets.Kusto.Models.Api20220201.IClusterPropertiesInternal)Property).VirtualClusterGraduationProperty = value ?? null; }

        /// <summary>Data management's service public IP address resource id.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Kusto.Origin(Microsoft.Azure.PowerShell.Cmdlets.Kusto.PropertyOrigin.Inlined)]
        public string VirtualNetworkConfigurationDataManagementPublicIPId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Kusto.Models.Api20220201.IClusterPropertiesInternal)Property).VirtualNetworkConfigurationDataManagementPublicIPId; set => ((Microsoft.Azure.PowerShell.Cmdlets.Kusto.Models.Api20220201.IClusterPropertiesInternal)Property).VirtualNetworkConfigurationDataManagementPublicIPId = value ?? null; }

        /// <summary>Engine service's public IP address resource id.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Kusto.Origin(Microsoft.Azure.PowerShell.Cmdlets.Kusto.PropertyOrigin.Inlined)]
        public string VirtualNetworkConfigurationEnginePublicIPId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Kusto.Models.Api20220201.IClusterPropertiesInternal)Property).VirtualNetworkConfigurationEnginePublicIPId; set => ((Microsoft.Azure.PowerShell.Cmdlets.Kusto.Models.Api20220201.IClusterPropertiesInternal)Property).VirtualNetworkConfigurationEnginePublicIPId = value ?? null; }

        /// <summary>The subnet resource id.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Kusto.Origin(Microsoft.Azure.PowerShell.Cmdlets.Kusto.PropertyOrigin.Inlined)]
        public string VirtualNetworkConfigurationSubnetId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Kusto.Models.Api20220201.IClusterPropertiesInternal)Property).VirtualNetworkConfigurationSubnetId; set => ((Microsoft.Azure.PowerShell.Cmdlets.Kusto.Models.Api20220201.IClusterPropertiesInternal)Property).VirtualNetworkConfigurationSubnetId = value ?? null; }

        /// <summary>Creates an new <see cref="ClusterUpdate" /> instance.</summary>
        public ClusterUpdate()
        {

        }

        /// <summary>Validates that this object meets the validation criteria.</summary>
        /// <param name="eventListener">an <see cref="Microsoft.Azure.PowerShell.Cmdlets.Kusto.Runtime.IEventListener" /> instance that will receive validation
        /// events.</param>
        /// <returns>
        /// A < see cref = "global::System.Threading.Tasks.Task" /> that will be complete when validation is completed.
        /// </returns>
        public async global::System.Threading.Tasks.Task Validate(Microsoft.Azure.PowerShell.Cmdlets.Kusto.Runtime.IEventListener eventListener)
        {
            await eventListener.AssertNotNull(nameof(__resource), __resource);
            await eventListener.AssertObjectIsValid(nameof(__resource), __resource);
        }
    }
    /// Class representing an update to a Kusto cluster.
    public partial interface IClusterUpdate :
        Microsoft.Azure.PowerShell.Cmdlets.Kusto.Runtime.IJsonSerializable,
        Microsoft.Azure.PowerShell.Cmdlets.Kusto.Models.Api10.IResource
    {
        /// <summary>The cluster's accepted audiences.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Kusto.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The cluster's accepted audiences.",
        SerializedName = @"acceptedAudiences",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Kusto.Models.Api20220201.IAcceptedAudiences) })]
        Microsoft.Azure.PowerShell.Cmdlets.Kusto.Models.Api20220201.IAcceptedAudiences[] AcceptedAudience { get; set; }
        /// <summary>List of allowed FQDNs(Fully Qualified Domain Name) for egress from Cluster.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Kusto.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"List of allowed FQDNs(Fully Qualified Domain Name) for egress from Cluster.",
        SerializedName = @"allowedFqdnList",
        PossibleTypes = new [] { typeof(string) })]
        string[] AllowedFqdnList { get; set; }
        /// <summary>The list of ips in the format of CIDR allowed to connect to the cluster.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Kusto.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The list of ips in the format of CIDR allowed to connect to the cluster.",
        SerializedName = @"allowedIpRangeList",
        PossibleTypes = new [] { typeof(string) })]
        string[] AllowedIPRangeList { get; set; }
        /// <summary>The cluster data ingestion URI.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Kusto.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The cluster data ingestion URI.",
        SerializedName = @"dataIngestionUri",
        PossibleTypes = new [] { typeof(string) })]
        string DataIngestionUri { get;  }
        /// <summary>
        /// A boolean value that indicates if the cluster could be automatically stopped (due to lack of data or no activity for many
        /// days).
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Kusto.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"A boolean value that indicates if the cluster could be automatically stopped (due to lack of data or no activity for many days).",
        SerializedName = @"enableAutoStop",
        PossibleTypes = new [] { typeof(bool) })]
        bool? EnableAutoStop { get; set; }
        /// <summary>A boolean value that indicates if the cluster's disks are encrypted.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Kusto.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"A boolean value that indicates if the cluster's disks are encrypted.",
        SerializedName = @"enableDiskEncryption",
        PossibleTypes = new [] { typeof(bool) })]
        bool? EnableDiskEncryption { get; set; }
        /// <summary>A boolean value that indicates if double encryption is enabled.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Kusto.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"A boolean value that indicates if double encryption is enabled.",
        SerializedName = @"enableDoubleEncryption",
        PossibleTypes = new [] { typeof(bool) })]
        bool? EnableDoubleEncryption { get; set; }
        /// <summary>A boolean value that indicates if the purge operations are enabled.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Kusto.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"A boolean value that indicates if the purge operations are enabled.",
        SerializedName = @"enablePurge",
        PossibleTypes = new [] { typeof(bool) })]
        bool? EnablePurge { get; set; }
        /// <summary>A boolean value that indicates if the streaming ingest is enabled.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Kusto.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"A boolean value that indicates if the streaming ingest is enabled.",
        SerializedName = @"enableStreamingIngest",
        PossibleTypes = new [] { typeof(bool) })]
        bool? EnableStreamingIngest { get; set; }
        /// <summary>The engine type</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Kusto.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The engine type",
        SerializedName = @"engineType",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Kusto.Support.EngineType) })]
        Microsoft.Azure.PowerShell.Cmdlets.Kusto.Support.EngineType? EngineType { get; set; }
        /// <summary>The principal ID of resource identity.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Kusto.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The principal ID of resource identity.",
        SerializedName = @"principalId",
        PossibleTypes = new [] { typeof(string) })]
        string IdentityPrincipalId { get;  }
        /// <summary>The tenant ID of resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Kusto.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The tenant ID of resource.",
        SerializedName = @"tenantId",
        PossibleTypes = new [] { typeof(string) })]
        string IdentityTenantId { get;  }
        /// <summary>
        /// The type of managed identity used. The type 'SystemAssigned, UserAssigned' includes both an implicitly created identity
        /// and a set of user-assigned identities. The type 'None' will remove all identities.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Kusto.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The type of managed identity used. The type 'SystemAssigned, UserAssigned' includes both an implicitly created identity and a set of user-assigned identities. The type 'None' will remove all identities.",
        SerializedName = @"type",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Kusto.Support.IdentityType) })]
        Microsoft.Azure.PowerShell.Cmdlets.Kusto.Support.IdentityType? IdentityType { get; set; }
        /// <summary>
        /// The list of user identities associated with the Kusto cluster. The user identity dictionary key references will be ARM
        /// resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Kusto.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The list of user identities associated with the Kusto cluster. The user identity dictionary key references will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.",
        SerializedName = @"userAssignedIdentities",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Kusto.Models.Api20220201.IIdentityUserAssignedIdentities) })]
        Microsoft.Azure.PowerShell.Cmdlets.Kusto.Models.Api20220201.IIdentityUserAssignedIdentities IdentityUserAssignedIdentity { get; set; }
        /// <summary>The name of the key vault key.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Kusto.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The name of the key vault key.",
        SerializedName = @"keyName",
        PossibleTypes = new [] { typeof(string) })]
        string KeyVaultPropertyKeyName { get; set; }
        /// <summary>The Uri of the key vault.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Kusto.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The Uri of the key vault.",
        SerializedName = @"keyVaultUri",
        PossibleTypes = new [] { typeof(string) })]
        string KeyVaultPropertyKeyVaultUri { get; set; }
        /// <summary>The version of the key vault key.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Kusto.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The version of the key vault key.",
        SerializedName = @"keyVersion",
        PossibleTypes = new [] { typeof(string) })]
        string KeyVaultPropertyKeyVersion { get; set; }
        /// <summary>The user assigned identity (ARM resource id) that has access to the key.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Kusto.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The user assigned identity (ARM resource id) that has access to the key.",
        SerializedName = @"userIdentity",
        PossibleTypes = new [] { typeof(string) })]
        string KeyVaultPropertyUserIdentity { get; set; }
        /// <summary>The list of language extensions.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Kusto.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The list of language extensions.",
        SerializedName = @"value",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Kusto.Models.Api20220201.ILanguageExtension) })]
        Microsoft.Azure.PowerShell.Cmdlets.Kusto.Models.Api20220201.ILanguageExtension[] LanguageExtensionValue { get; set; }
        /// <summary>Resource location.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Kusto.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Resource location.",
        SerializedName = @"location",
        PossibleTypes = new [] { typeof(string) })]
        string Location { get; set; }
        /// <summary>
        /// A boolean value that indicate if the optimized autoscale feature is enabled or not.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Kusto.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"A boolean value that indicate if the optimized autoscale feature is enabled or not.",
        SerializedName = @"isEnabled",
        PossibleTypes = new [] { typeof(bool) })]
        bool? OptimizedAutoscaleIsEnabled { get; set; }
        /// <summary>Maximum allowed instances count.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Kusto.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Maximum allowed instances count.",
        SerializedName = @"maximum",
        PossibleTypes = new [] { typeof(int) })]
        int? OptimizedAutoscaleMaximum { get; set; }
        /// <summary>Minimum allowed instances count.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Kusto.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Minimum allowed instances count.",
        SerializedName = @"minimum",
        PossibleTypes = new [] { typeof(int) })]
        int? OptimizedAutoscaleMinimum { get; set; }
        /// <summary>The version of the template defined, for instance 1.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Kusto.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The version of the template defined, for instance 1.",
        SerializedName = @"version",
        PossibleTypes = new [] { typeof(int) })]
        int? OptimizedAutoscaleVersion { get; set; }
        /// <summary>A list of private endpoint connections.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Kusto.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"A list of private endpoint connections.",
        SerializedName = @"privateEndpointConnections",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Kusto.Models.Api20220201.IPrivateEndpointConnection) })]
        Microsoft.Azure.PowerShell.Cmdlets.Kusto.Models.Api20220201.IPrivateEndpointConnection[] PrivateEndpointConnection { get;  }
        /// <summary>The provisioned state of the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Kusto.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The provisioned state of the resource.",
        SerializedName = @"provisioningState",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Kusto.Support.ProvisioningState) })]
        Microsoft.Azure.PowerShell.Cmdlets.Kusto.Support.ProvisioningState? ProvisioningState { get;  }
        /// <summary>
        /// Indicates what public IP type to create - IPv4 (default), or DualStack (both IPv4 and IPv6)
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Kusto.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Indicates what public IP type to create - IPv4 (default), or DualStack (both IPv4 and IPv6)",
        SerializedName = @"publicIPType",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Kusto.Support.PublicIPType) })]
        Microsoft.Azure.PowerShell.Cmdlets.Kusto.Support.PublicIPType? PublicIPType { get; set; }
        /// <summary>
        /// Public network access to the cluster is enabled by default. When disabled, only private endpoint connection to the cluster
        /// is allowed
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Kusto.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Public network access to the cluster is enabled by default. When disabled, only private endpoint connection to the cluster is allowed",
        SerializedName = @"publicNetworkAccess",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Kusto.Support.PublicNetworkAccess) })]
        Microsoft.Azure.PowerShell.Cmdlets.Kusto.Support.PublicNetworkAccess? PublicNetworkAccess { get; set; }
        /// <summary>
        /// Whether or not to restrict outbound network access. Value is optional but if passed in, must be 'Enabled' or 'Disabled'
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Kusto.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Whether or not to restrict outbound network access.  Value is optional but if passed in, must be 'Enabled' or 'Disabled'",
        SerializedName = @"restrictOutboundNetworkAccess",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Kusto.Support.ClusterNetworkAccessFlag) })]
        Microsoft.Azure.PowerShell.Cmdlets.Kusto.Support.ClusterNetworkAccessFlag? RestrictOutboundNetworkAccess { get; set; }
        /// <summary>The number of instances of the cluster.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Kusto.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The number of instances of the cluster.",
        SerializedName = @"capacity",
        PossibleTypes = new [] { typeof(int) })]
        int? SkuCapacity { get; set; }
        /// <summary>SKU name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Kusto.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"SKU name.",
        SerializedName = @"name",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Kusto.Support.AzureSkuName) })]
        Microsoft.Azure.PowerShell.Cmdlets.Kusto.Support.AzureSkuName? SkuName { get; set; }
        /// <summary>SKU tier.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Kusto.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"SKU tier.",
        SerializedName = @"tier",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Kusto.Support.AzureSkuTier) })]
        Microsoft.Azure.PowerShell.Cmdlets.Kusto.Support.AzureSkuTier? SkuTier { get; set; }
        /// <summary>The state of the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Kusto.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The state of the resource.",
        SerializedName = @"state",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Kusto.Support.State) })]
        Microsoft.Azure.PowerShell.Cmdlets.Kusto.Support.State? State { get;  }
        /// <summary>The reason for the cluster's current state.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Kusto.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The reason for the cluster's current state.",
        SerializedName = @"stateReason",
        PossibleTypes = new [] { typeof(string) })]
        string StateReason { get;  }
        /// <summary>Resource tags.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Kusto.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Resource tags.",
        SerializedName = @"tags",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Kusto.Models.Api20220201.IClusterUpdateTags) })]
        Microsoft.Azure.PowerShell.Cmdlets.Kusto.Models.Api20220201.IClusterUpdateTags Tag { get; set; }
        /// <summary>The cluster's external tenants.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Kusto.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The cluster's external tenants.",
        SerializedName = @"trustedExternalTenants",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Kusto.Models.Api20220201.ITrustedExternalTenant) })]
        Microsoft.Azure.PowerShell.Cmdlets.Kusto.Models.Api20220201.ITrustedExternalTenant[] TrustedExternalTenant { get; set; }
        /// <summary>The cluster URI.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Kusto.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The cluster URI.",
        SerializedName = @"uri",
        PossibleTypes = new [] { typeof(string) })]
        string Uri { get;  }
        /// <summary>Virtual Cluster graduation properties</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Kusto.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Virtual Cluster graduation properties",
        SerializedName = @"virtualClusterGraduationProperties",
        PossibleTypes = new [] { typeof(string) })]
        string VirtualClusterGraduationProperty { get; set; }
        /// <summary>Data management's service public IP address resource id.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Kusto.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Data management's service public IP address resource id.",
        SerializedName = @"dataManagementPublicIpId",
        PossibleTypes = new [] { typeof(string) })]
        string VirtualNetworkConfigurationDataManagementPublicIPId { get; set; }
        /// <summary>Engine service's public IP address resource id.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Kusto.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Engine service's public IP address resource id.",
        SerializedName = @"enginePublicIpId",
        PossibleTypes = new [] { typeof(string) })]
        string VirtualNetworkConfigurationEnginePublicIPId { get; set; }
        /// <summary>The subnet resource id.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Kusto.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The subnet resource id.",
        SerializedName = @"subnetId",
        PossibleTypes = new [] { typeof(string) })]
        string VirtualNetworkConfigurationSubnetId { get; set; }

    }
    /// Class representing an update to a Kusto cluster.
    internal partial interface IClusterUpdateInternal :
        Microsoft.Azure.PowerShell.Cmdlets.Kusto.Models.Api10.IResourceInternal
    {
        /// <summary>The cluster's accepted audiences.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Kusto.Models.Api20220201.IAcceptedAudiences[] AcceptedAudience { get; set; }
        /// <summary>List of allowed FQDNs(Fully Qualified Domain Name) for egress from Cluster.</summary>
        string[] AllowedFqdnList { get; set; }
        /// <summary>The list of ips in the format of CIDR allowed to connect to the cluster.</summary>
        string[] AllowedIPRangeList { get; set; }
        /// <summary>The cluster data ingestion URI.</summary>
        string DataIngestionUri { get; set; }
        /// <summary>
        /// A boolean value that indicates if the cluster could be automatically stopped (due to lack of data or no activity for many
        /// days).
        /// </summary>
        bool? EnableAutoStop { get; set; }
        /// <summary>A boolean value that indicates if the cluster's disks are encrypted.</summary>
        bool? EnableDiskEncryption { get; set; }
        /// <summary>A boolean value that indicates if double encryption is enabled.</summary>
        bool? EnableDoubleEncryption { get; set; }
        /// <summary>A boolean value that indicates if the purge operations are enabled.</summary>
        bool? EnablePurge { get; set; }
        /// <summary>A boolean value that indicates if the streaming ingest is enabled.</summary>
        bool? EnableStreamingIngest { get; set; }
        /// <summary>The engine type</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Kusto.Support.EngineType? EngineType { get; set; }
        /// <summary>The identity of the cluster, if configured.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Kusto.Models.Api20220201.IIdentity Identity { get; set; }
        /// <summary>The principal ID of resource identity.</summary>
        string IdentityPrincipalId { get; set; }
        /// <summary>The tenant ID of resource.</summary>
        string IdentityTenantId { get; set; }
        /// <summary>
        /// The type of managed identity used. The type 'SystemAssigned, UserAssigned' includes both an implicitly created identity
        /// and a set of user-assigned identities. The type 'None' will remove all identities.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Kusto.Support.IdentityType? IdentityType { get; set; }
        /// <summary>
        /// The list of user identities associated with the Kusto cluster. The user identity dictionary key references will be ARM
        /// resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Kusto.Models.Api20220201.IIdentityUserAssignedIdentities IdentityUserAssignedIdentity { get; set; }
        /// <summary>KeyVault properties for the cluster encryption.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Kusto.Models.Api20220201.IKeyVaultProperties KeyVaultProperty { get; set; }
        /// <summary>The name of the key vault key.</summary>
        string KeyVaultPropertyKeyName { get; set; }
        /// <summary>The Uri of the key vault.</summary>
        string KeyVaultPropertyKeyVaultUri { get; set; }
        /// <summary>The version of the key vault key.</summary>
        string KeyVaultPropertyKeyVersion { get; set; }
        /// <summary>The user assigned identity (ARM resource id) that has access to the key.</summary>
        string KeyVaultPropertyUserIdentity { get; set; }
        /// <summary>List of the cluster's language extensions.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Kusto.Models.Api20220201.ILanguageExtensionsList LanguageExtension { get; set; }
        /// <summary>The list of language extensions.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Kusto.Models.Api20220201.ILanguageExtension[] LanguageExtensionValue { get; set; }
        /// <summary>Resource location.</summary>
        string Location { get; set; }
        /// <summary>Optimized auto scale definition.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Kusto.Models.Api20220201.IOptimizedAutoscale OptimizedAutoscale { get; set; }
        /// <summary>
        /// A boolean value that indicate if the optimized autoscale feature is enabled or not.
        /// </summary>
        bool? OptimizedAutoscaleIsEnabled { get; set; }
        /// <summary>Maximum allowed instances count.</summary>
        int? OptimizedAutoscaleMaximum { get; set; }
        /// <summary>Minimum allowed instances count.</summary>
        int? OptimizedAutoscaleMinimum { get; set; }
        /// <summary>The version of the template defined, for instance 1.</summary>
        int? OptimizedAutoscaleVersion { get; set; }
        /// <summary>A list of private endpoint connections.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Kusto.Models.Api20220201.IPrivateEndpointConnection[] PrivateEndpointConnection { get; set; }
        /// <summary>The cluster properties.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Kusto.Models.Api20220201.IClusterProperties Property { get; set; }
        /// <summary>The provisioned state of the resource.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Kusto.Support.ProvisioningState? ProvisioningState { get; set; }
        /// <summary>
        /// Indicates what public IP type to create - IPv4 (default), or DualStack (both IPv4 and IPv6)
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Kusto.Support.PublicIPType? PublicIPType { get; set; }
        /// <summary>
        /// Public network access to the cluster is enabled by default. When disabled, only private endpoint connection to the cluster
        /// is allowed
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Kusto.Support.PublicNetworkAccess? PublicNetworkAccess { get; set; }
        /// <summary>
        /// Whether or not to restrict outbound network access. Value is optional but if passed in, must be 'Enabled' or 'Disabled'
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Kusto.Support.ClusterNetworkAccessFlag? RestrictOutboundNetworkAccess { get; set; }
        /// <summary>The SKU of the cluster.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Kusto.Models.Api20220201.IAzureSku Sku { get; set; }
        /// <summary>The number of instances of the cluster.</summary>
        int? SkuCapacity { get; set; }
        /// <summary>SKU name.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Kusto.Support.AzureSkuName? SkuName { get; set; }
        /// <summary>SKU tier.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Kusto.Support.AzureSkuTier? SkuTier { get; set; }
        /// <summary>The state of the resource.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Kusto.Support.State? State { get; set; }
        /// <summary>The reason for the cluster's current state.</summary>
        string StateReason { get; set; }
        /// <summary>Resource tags.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Kusto.Models.Api20220201.IClusterUpdateTags Tag { get; set; }
        /// <summary>The cluster's external tenants.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Kusto.Models.Api20220201.ITrustedExternalTenant[] TrustedExternalTenant { get; set; }
        /// <summary>The cluster URI.</summary>
        string Uri { get; set; }
        /// <summary>Virtual Cluster graduation properties</summary>
        string VirtualClusterGraduationProperty { get; set; }
        /// <summary>Virtual network definition.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Kusto.Models.Api20220201.IVirtualNetworkConfiguration VirtualNetworkConfiguration { get; set; }
        /// <summary>Data management's service public IP address resource id.</summary>
        string VirtualNetworkConfigurationDataManagementPublicIPId { get; set; }
        /// <summary>Engine service's public IP address resource id.</summary>
        string VirtualNetworkConfigurationEnginePublicIPId { get; set; }
        /// <summary>The subnet resource id.</summary>
        string VirtualNetworkConfigurationSubnetId { get; set; }

    }
}