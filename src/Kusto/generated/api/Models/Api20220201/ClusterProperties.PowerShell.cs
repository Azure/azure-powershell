// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Kusto.Models.Api20220201
{
    using Microsoft.Azure.PowerShell.Cmdlets.Kusto.Runtime.PowerShell;

    /// <summary>Class representing the Kusto cluster properties.</summary>
    [System.ComponentModel.TypeConverter(typeof(ClusterPropertiesTypeConverter))]
    public partial class ClusterProperties
    {

        /// <summary>
        /// <c>AfterDeserializeDictionary</c> will be called after the deserialization has finished, allowing customization of the
        /// object before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>

        partial void AfterDeserializeDictionary(global::System.Collections.IDictionary content);

        /// <summary>
        /// <c>AfterDeserializePSObject</c> will be called after the deserialization has finished, allowing customization of the object
        /// before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>

        partial void AfterDeserializePSObject(global::System.Management.Automation.PSObject content);

        /// <summary>
        /// <c>BeforeDeserializeDictionary</c> will be called before the deserialization has commenced, allowing complete customization
        /// of the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <see "returnNow" /> output parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeDeserializeDictionary(global::System.Collections.IDictionary content, ref bool returnNow);

        /// <summary>
        /// <c>BeforeDeserializePSObject</c> will be called before the deserialization has commenced, allowing complete customization
        /// of the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <see "returnNow" /> output parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeDeserializePSObject(global::System.Management.Automation.PSObject content, ref bool returnNow);

        /// <summary>
        /// Deserializes a <see cref="global::System.Collections.IDictionary" /> into a new instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.Kusto.Models.Api20220201.ClusterProperties"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        internal ClusterProperties(global::System.Collections.IDictionary content)
        {
            bool returnNow = false;
            BeforeDeserializeDictionary(content, ref returnNow);
            if (returnNow)
            {
                return;
            }
            // actually deserialize
            if (content.Contains("OptimizedAutoscale"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Kusto.Models.Api20220201.IClusterPropertiesInternal)this).OptimizedAutoscale = (Microsoft.Azure.PowerShell.Cmdlets.Kusto.Models.Api20220201.IOptimizedAutoscale) content.GetValueForProperty("OptimizedAutoscale",((Microsoft.Azure.PowerShell.Cmdlets.Kusto.Models.Api20220201.IClusterPropertiesInternal)this).OptimizedAutoscale, Microsoft.Azure.PowerShell.Cmdlets.Kusto.Models.Api20220201.OptimizedAutoscaleTypeConverter.ConvertFrom);
            }
            if (content.Contains("VirtualNetworkConfiguration"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Kusto.Models.Api20220201.IClusterPropertiesInternal)this).VirtualNetworkConfiguration = (Microsoft.Azure.PowerShell.Cmdlets.Kusto.Models.Api20220201.IVirtualNetworkConfiguration) content.GetValueForProperty("VirtualNetworkConfiguration",((Microsoft.Azure.PowerShell.Cmdlets.Kusto.Models.Api20220201.IClusterPropertiesInternal)this).VirtualNetworkConfiguration, Microsoft.Azure.PowerShell.Cmdlets.Kusto.Models.Api20220201.VirtualNetworkConfigurationTypeConverter.ConvertFrom);
            }
            if (content.Contains("KeyVaultProperty"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Kusto.Models.Api20220201.IClusterPropertiesInternal)this).KeyVaultProperty = (Microsoft.Azure.PowerShell.Cmdlets.Kusto.Models.Api20220201.IKeyVaultProperties) content.GetValueForProperty("KeyVaultProperty",((Microsoft.Azure.PowerShell.Cmdlets.Kusto.Models.Api20220201.IClusterPropertiesInternal)this).KeyVaultProperty, Microsoft.Azure.PowerShell.Cmdlets.Kusto.Models.Api20220201.KeyVaultPropertiesTypeConverter.ConvertFrom);
            }
            if (content.Contains("LanguageExtension"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Kusto.Models.Api20220201.IClusterPropertiesInternal)this).LanguageExtension = (Microsoft.Azure.PowerShell.Cmdlets.Kusto.Models.Api20220201.ILanguageExtensionsList) content.GetValueForProperty("LanguageExtension",((Microsoft.Azure.PowerShell.Cmdlets.Kusto.Models.Api20220201.IClusterPropertiesInternal)this).LanguageExtension, Microsoft.Azure.PowerShell.Cmdlets.Kusto.Models.Api20220201.LanguageExtensionsListTypeConverter.ConvertFrom);
            }
            if (content.Contains("State"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Kusto.Models.Api20220201.IClusterPropertiesInternal)this).State = (Microsoft.Azure.PowerShell.Cmdlets.Kusto.Support.State?) content.GetValueForProperty("State",((Microsoft.Azure.PowerShell.Cmdlets.Kusto.Models.Api20220201.IClusterPropertiesInternal)this).State, Microsoft.Azure.PowerShell.Cmdlets.Kusto.Support.State.CreateFrom);
            }
            if (content.Contains("ProvisioningState"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Kusto.Models.Api20220201.IClusterPropertiesInternal)this).ProvisioningState = (Microsoft.Azure.PowerShell.Cmdlets.Kusto.Support.ProvisioningState?) content.GetValueForProperty("ProvisioningState",((Microsoft.Azure.PowerShell.Cmdlets.Kusto.Models.Api20220201.IClusterPropertiesInternal)this).ProvisioningState, Microsoft.Azure.PowerShell.Cmdlets.Kusto.Support.ProvisioningState.CreateFrom);
            }
            if (content.Contains("Uri"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Kusto.Models.Api20220201.IClusterPropertiesInternal)this).Uri = (string) content.GetValueForProperty("Uri",((Microsoft.Azure.PowerShell.Cmdlets.Kusto.Models.Api20220201.IClusterPropertiesInternal)this).Uri, global::System.Convert.ToString);
            }
            if (content.Contains("DataIngestionUri"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Kusto.Models.Api20220201.IClusterPropertiesInternal)this).DataIngestionUri = (string) content.GetValueForProperty("DataIngestionUri",((Microsoft.Azure.PowerShell.Cmdlets.Kusto.Models.Api20220201.IClusterPropertiesInternal)this).DataIngestionUri, global::System.Convert.ToString);
            }
            if (content.Contains("StateReason"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Kusto.Models.Api20220201.IClusterPropertiesInternal)this).StateReason = (string) content.GetValueForProperty("StateReason",((Microsoft.Azure.PowerShell.Cmdlets.Kusto.Models.Api20220201.IClusterPropertiesInternal)this).StateReason, global::System.Convert.ToString);
            }
            if (content.Contains("TrustedExternalTenant"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Kusto.Models.Api20220201.IClusterPropertiesInternal)this).TrustedExternalTenant = (Microsoft.Azure.PowerShell.Cmdlets.Kusto.Models.Api20220201.ITrustedExternalTenant[]) content.GetValueForProperty("TrustedExternalTenant",((Microsoft.Azure.PowerShell.Cmdlets.Kusto.Models.Api20220201.IClusterPropertiesInternal)this).TrustedExternalTenant, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.Kusto.Models.Api20220201.ITrustedExternalTenant>(__y, Microsoft.Azure.PowerShell.Cmdlets.Kusto.Models.Api20220201.TrustedExternalTenantTypeConverter.ConvertFrom));
            }
            if (content.Contains("EnableDiskEncryption"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Kusto.Models.Api20220201.IClusterPropertiesInternal)this).EnableDiskEncryption = (bool?) content.GetValueForProperty("EnableDiskEncryption",((Microsoft.Azure.PowerShell.Cmdlets.Kusto.Models.Api20220201.IClusterPropertiesInternal)this).EnableDiskEncryption, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("EnableStreamingIngest"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Kusto.Models.Api20220201.IClusterPropertiesInternal)this).EnableStreamingIngest = (bool?) content.GetValueForProperty("EnableStreamingIngest",((Microsoft.Azure.PowerShell.Cmdlets.Kusto.Models.Api20220201.IClusterPropertiesInternal)this).EnableStreamingIngest, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("EnablePurge"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Kusto.Models.Api20220201.IClusterPropertiesInternal)this).EnablePurge = (bool?) content.GetValueForProperty("EnablePurge",((Microsoft.Azure.PowerShell.Cmdlets.Kusto.Models.Api20220201.IClusterPropertiesInternal)this).EnablePurge, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("EnableDoubleEncryption"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Kusto.Models.Api20220201.IClusterPropertiesInternal)this).EnableDoubleEncryption = (bool?) content.GetValueForProperty("EnableDoubleEncryption",((Microsoft.Azure.PowerShell.Cmdlets.Kusto.Models.Api20220201.IClusterPropertiesInternal)this).EnableDoubleEncryption, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("PublicNetworkAccess"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Kusto.Models.Api20220201.IClusterPropertiesInternal)this).PublicNetworkAccess = (Microsoft.Azure.PowerShell.Cmdlets.Kusto.Support.PublicNetworkAccess?) content.GetValueForProperty("PublicNetworkAccess",((Microsoft.Azure.PowerShell.Cmdlets.Kusto.Models.Api20220201.IClusterPropertiesInternal)this).PublicNetworkAccess, Microsoft.Azure.PowerShell.Cmdlets.Kusto.Support.PublicNetworkAccess.CreateFrom);
            }
            if (content.Contains("AllowedIPRangeList"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Kusto.Models.Api20220201.IClusterPropertiesInternal)this).AllowedIPRangeList = (string[]) content.GetValueForProperty("AllowedIPRangeList",((Microsoft.Azure.PowerShell.Cmdlets.Kusto.Models.Api20220201.IClusterPropertiesInternal)this).AllowedIPRangeList, __y => TypeConverterExtensions.SelectToArray<string>(__y, global::System.Convert.ToString));
            }
            if (content.Contains("EngineType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Kusto.Models.Api20220201.IClusterPropertiesInternal)this).EngineType = (Microsoft.Azure.PowerShell.Cmdlets.Kusto.Support.EngineType?) content.GetValueForProperty("EngineType",((Microsoft.Azure.PowerShell.Cmdlets.Kusto.Models.Api20220201.IClusterPropertiesInternal)this).EngineType, Microsoft.Azure.PowerShell.Cmdlets.Kusto.Support.EngineType.CreateFrom);
            }
            if (content.Contains("AcceptedAudience"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Kusto.Models.Api20220201.IClusterPropertiesInternal)this).AcceptedAudience = (Microsoft.Azure.PowerShell.Cmdlets.Kusto.Models.Api20220201.IAcceptedAudiences[]) content.GetValueForProperty("AcceptedAudience",((Microsoft.Azure.PowerShell.Cmdlets.Kusto.Models.Api20220201.IClusterPropertiesInternal)this).AcceptedAudience, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.Kusto.Models.Api20220201.IAcceptedAudiences>(__y, Microsoft.Azure.PowerShell.Cmdlets.Kusto.Models.Api20220201.AcceptedAudiencesTypeConverter.ConvertFrom));
            }
            if (content.Contains("EnableAutoStop"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Kusto.Models.Api20220201.IClusterPropertiesInternal)this).EnableAutoStop = (bool?) content.GetValueForProperty("EnableAutoStop",((Microsoft.Azure.PowerShell.Cmdlets.Kusto.Models.Api20220201.IClusterPropertiesInternal)this).EnableAutoStop, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("RestrictOutboundNetworkAccess"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Kusto.Models.Api20220201.IClusterPropertiesInternal)this).RestrictOutboundNetworkAccess = (Microsoft.Azure.PowerShell.Cmdlets.Kusto.Support.ClusterNetworkAccessFlag?) content.GetValueForProperty("RestrictOutboundNetworkAccess",((Microsoft.Azure.PowerShell.Cmdlets.Kusto.Models.Api20220201.IClusterPropertiesInternal)this).RestrictOutboundNetworkAccess, Microsoft.Azure.PowerShell.Cmdlets.Kusto.Support.ClusterNetworkAccessFlag.CreateFrom);
            }
            if (content.Contains("AllowedFqdnList"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Kusto.Models.Api20220201.IClusterPropertiesInternal)this).AllowedFqdnList = (string[]) content.GetValueForProperty("AllowedFqdnList",((Microsoft.Azure.PowerShell.Cmdlets.Kusto.Models.Api20220201.IClusterPropertiesInternal)this).AllowedFqdnList, __y => TypeConverterExtensions.SelectToArray<string>(__y, global::System.Convert.ToString));
            }
            if (content.Contains("PublicIPType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Kusto.Models.Api20220201.IClusterPropertiesInternal)this).PublicIPType = (Microsoft.Azure.PowerShell.Cmdlets.Kusto.Support.PublicIPType?) content.GetValueForProperty("PublicIPType",((Microsoft.Azure.PowerShell.Cmdlets.Kusto.Models.Api20220201.IClusterPropertiesInternal)this).PublicIPType, Microsoft.Azure.PowerShell.Cmdlets.Kusto.Support.PublicIPType.CreateFrom);
            }
            if (content.Contains("VirtualClusterGraduationProperty"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Kusto.Models.Api20220201.IClusterPropertiesInternal)this).VirtualClusterGraduationProperty = (string) content.GetValueForProperty("VirtualClusterGraduationProperty",((Microsoft.Azure.PowerShell.Cmdlets.Kusto.Models.Api20220201.IClusterPropertiesInternal)this).VirtualClusterGraduationProperty, global::System.Convert.ToString);
            }
            if (content.Contains("PrivateEndpointConnection"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Kusto.Models.Api20220201.IClusterPropertiesInternal)this).PrivateEndpointConnection = (Microsoft.Azure.PowerShell.Cmdlets.Kusto.Models.Api20220201.IPrivateEndpointConnection[]) content.GetValueForProperty("PrivateEndpointConnection",((Microsoft.Azure.PowerShell.Cmdlets.Kusto.Models.Api20220201.IClusterPropertiesInternal)this).PrivateEndpointConnection, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.Kusto.Models.Api20220201.IPrivateEndpointConnection>(__y, Microsoft.Azure.PowerShell.Cmdlets.Kusto.Models.Api20220201.PrivateEndpointConnectionTypeConverter.ConvertFrom));
            }
            if (content.Contains("OptimizedAutoscaleVersion"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Kusto.Models.Api20220201.IClusterPropertiesInternal)this).OptimizedAutoscaleVersion = (int) content.GetValueForProperty("OptimizedAutoscaleVersion",((Microsoft.Azure.PowerShell.Cmdlets.Kusto.Models.Api20220201.IClusterPropertiesInternal)this).OptimizedAutoscaleVersion, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("OptimizedAutoscaleMinimum"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Kusto.Models.Api20220201.IClusterPropertiesInternal)this).OptimizedAutoscaleMinimum = (int) content.GetValueForProperty("OptimizedAutoscaleMinimum",((Microsoft.Azure.PowerShell.Cmdlets.Kusto.Models.Api20220201.IClusterPropertiesInternal)this).OptimizedAutoscaleMinimum, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("OptimizedAutoscaleMaximum"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Kusto.Models.Api20220201.IClusterPropertiesInternal)this).OptimizedAutoscaleMaximum = (int) content.GetValueForProperty("OptimizedAutoscaleMaximum",((Microsoft.Azure.PowerShell.Cmdlets.Kusto.Models.Api20220201.IClusterPropertiesInternal)this).OptimizedAutoscaleMaximum, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("VirtualNetworkConfigurationSubnetId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Kusto.Models.Api20220201.IClusterPropertiesInternal)this).VirtualNetworkConfigurationSubnetId = (string) content.GetValueForProperty("VirtualNetworkConfigurationSubnetId",((Microsoft.Azure.PowerShell.Cmdlets.Kusto.Models.Api20220201.IClusterPropertiesInternal)this).VirtualNetworkConfigurationSubnetId, global::System.Convert.ToString);
            }
            if (content.Contains("KeyVaultPropertyKeyName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Kusto.Models.Api20220201.IClusterPropertiesInternal)this).KeyVaultPropertyKeyName = (string) content.GetValueForProperty("KeyVaultPropertyKeyName",((Microsoft.Azure.PowerShell.Cmdlets.Kusto.Models.Api20220201.IClusterPropertiesInternal)this).KeyVaultPropertyKeyName, global::System.Convert.ToString);
            }
            if (content.Contains("KeyVaultPropertyKeyVersion"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Kusto.Models.Api20220201.IClusterPropertiesInternal)this).KeyVaultPropertyKeyVersion = (string) content.GetValueForProperty("KeyVaultPropertyKeyVersion",((Microsoft.Azure.PowerShell.Cmdlets.Kusto.Models.Api20220201.IClusterPropertiesInternal)this).KeyVaultPropertyKeyVersion, global::System.Convert.ToString);
            }
            if (content.Contains("KeyVaultPropertyUserIdentity"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Kusto.Models.Api20220201.IClusterPropertiesInternal)this).KeyVaultPropertyUserIdentity = (string) content.GetValueForProperty("KeyVaultPropertyUserIdentity",((Microsoft.Azure.PowerShell.Cmdlets.Kusto.Models.Api20220201.IClusterPropertiesInternal)this).KeyVaultPropertyUserIdentity, global::System.Convert.ToString);
            }
            if (content.Contains("OptimizedAutoscaleIsEnabled"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Kusto.Models.Api20220201.IClusterPropertiesInternal)this).OptimizedAutoscaleIsEnabled = (bool) content.GetValueForProperty("OptimizedAutoscaleIsEnabled",((Microsoft.Azure.PowerShell.Cmdlets.Kusto.Models.Api20220201.IClusterPropertiesInternal)this).OptimizedAutoscaleIsEnabled, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("VirtualNetworkConfigurationEnginePublicIPId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Kusto.Models.Api20220201.IClusterPropertiesInternal)this).VirtualNetworkConfigurationEnginePublicIPId = (string) content.GetValueForProperty("VirtualNetworkConfigurationEnginePublicIPId",((Microsoft.Azure.PowerShell.Cmdlets.Kusto.Models.Api20220201.IClusterPropertiesInternal)this).VirtualNetworkConfigurationEnginePublicIPId, global::System.Convert.ToString);
            }
            if (content.Contains("VirtualNetworkConfigurationDataManagementPublicIPId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Kusto.Models.Api20220201.IClusterPropertiesInternal)this).VirtualNetworkConfigurationDataManagementPublicIPId = (string) content.GetValueForProperty("VirtualNetworkConfigurationDataManagementPublicIPId",((Microsoft.Azure.PowerShell.Cmdlets.Kusto.Models.Api20220201.IClusterPropertiesInternal)this).VirtualNetworkConfigurationDataManagementPublicIPId, global::System.Convert.ToString);
            }
            if (content.Contains("KeyVaultPropertyKeyVaultUri"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Kusto.Models.Api20220201.IClusterPropertiesInternal)this).KeyVaultPropertyKeyVaultUri = (string) content.GetValueForProperty("KeyVaultPropertyKeyVaultUri",((Microsoft.Azure.PowerShell.Cmdlets.Kusto.Models.Api20220201.IClusterPropertiesInternal)this).KeyVaultPropertyKeyVaultUri, global::System.Convert.ToString);
            }
            if (content.Contains("LanguageExtensionValue"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Kusto.Models.Api20220201.IClusterPropertiesInternal)this).LanguageExtensionValue = (Microsoft.Azure.PowerShell.Cmdlets.Kusto.Models.Api20220201.ILanguageExtension[]) content.GetValueForProperty("LanguageExtensionValue",((Microsoft.Azure.PowerShell.Cmdlets.Kusto.Models.Api20220201.IClusterPropertiesInternal)this).LanguageExtensionValue, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.Kusto.Models.Api20220201.ILanguageExtension>(__y, Microsoft.Azure.PowerShell.Cmdlets.Kusto.Models.Api20220201.LanguageExtensionTypeConverter.ConvertFrom));
            }
            AfterDeserializeDictionary(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Management.Automation.PSObject" /> into a new instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.Kusto.Models.Api20220201.ClusterProperties"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        internal ClusterProperties(global::System.Management.Automation.PSObject content)
        {
            bool returnNow = false;
            BeforeDeserializePSObject(content, ref returnNow);
            if (returnNow)
            {
                return;
            }
            // actually deserialize
            if (content.Contains("OptimizedAutoscale"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Kusto.Models.Api20220201.IClusterPropertiesInternal)this).OptimizedAutoscale = (Microsoft.Azure.PowerShell.Cmdlets.Kusto.Models.Api20220201.IOptimizedAutoscale) content.GetValueForProperty("OptimizedAutoscale",((Microsoft.Azure.PowerShell.Cmdlets.Kusto.Models.Api20220201.IClusterPropertiesInternal)this).OptimizedAutoscale, Microsoft.Azure.PowerShell.Cmdlets.Kusto.Models.Api20220201.OptimizedAutoscaleTypeConverter.ConvertFrom);
            }
            if (content.Contains("VirtualNetworkConfiguration"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Kusto.Models.Api20220201.IClusterPropertiesInternal)this).VirtualNetworkConfiguration = (Microsoft.Azure.PowerShell.Cmdlets.Kusto.Models.Api20220201.IVirtualNetworkConfiguration) content.GetValueForProperty("VirtualNetworkConfiguration",((Microsoft.Azure.PowerShell.Cmdlets.Kusto.Models.Api20220201.IClusterPropertiesInternal)this).VirtualNetworkConfiguration, Microsoft.Azure.PowerShell.Cmdlets.Kusto.Models.Api20220201.VirtualNetworkConfigurationTypeConverter.ConvertFrom);
            }
            if (content.Contains("KeyVaultProperty"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Kusto.Models.Api20220201.IClusterPropertiesInternal)this).KeyVaultProperty = (Microsoft.Azure.PowerShell.Cmdlets.Kusto.Models.Api20220201.IKeyVaultProperties) content.GetValueForProperty("KeyVaultProperty",((Microsoft.Azure.PowerShell.Cmdlets.Kusto.Models.Api20220201.IClusterPropertiesInternal)this).KeyVaultProperty, Microsoft.Azure.PowerShell.Cmdlets.Kusto.Models.Api20220201.KeyVaultPropertiesTypeConverter.ConvertFrom);
            }
            if (content.Contains("LanguageExtension"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Kusto.Models.Api20220201.IClusterPropertiesInternal)this).LanguageExtension = (Microsoft.Azure.PowerShell.Cmdlets.Kusto.Models.Api20220201.ILanguageExtensionsList) content.GetValueForProperty("LanguageExtension",((Microsoft.Azure.PowerShell.Cmdlets.Kusto.Models.Api20220201.IClusterPropertiesInternal)this).LanguageExtension, Microsoft.Azure.PowerShell.Cmdlets.Kusto.Models.Api20220201.LanguageExtensionsListTypeConverter.ConvertFrom);
            }
            if (content.Contains("State"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Kusto.Models.Api20220201.IClusterPropertiesInternal)this).State = (Microsoft.Azure.PowerShell.Cmdlets.Kusto.Support.State?) content.GetValueForProperty("State",((Microsoft.Azure.PowerShell.Cmdlets.Kusto.Models.Api20220201.IClusterPropertiesInternal)this).State, Microsoft.Azure.PowerShell.Cmdlets.Kusto.Support.State.CreateFrom);
            }
            if (content.Contains("ProvisioningState"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Kusto.Models.Api20220201.IClusterPropertiesInternal)this).ProvisioningState = (Microsoft.Azure.PowerShell.Cmdlets.Kusto.Support.ProvisioningState?) content.GetValueForProperty("ProvisioningState",((Microsoft.Azure.PowerShell.Cmdlets.Kusto.Models.Api20220201.IClusterPropertiesInternal)this).ProvisioningState, Microsoft.Azure.PowerShell.Cmdlets.Kusto.Support.ProvisioningState.CreateFrom);
            }
            if (content.Contains("Uri"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Kusto.Models.Api20220201.IClusterPropertiesInternal)this).Uri = (string) content.GetValueForProperty("Uri",((Microsoft.Azure.PowerShell.Cmdlets.Kusto.Models.Api20220201.IClusterPropertiesInternal)this).Uri, global::System.Convert.ToString);
            }
            if (content.Contains("DataIngestionUri"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Kusto.Models.Api20220201.IClusterPropertiesInternal)this).DataIngestionUri = (string) content.GetValueForProperty("DataIngestionUri",((Microsoft.Azure.PowerShell.Cmdlets.Kusto.Models.Api20220201.IClusterPropertiesInternal)this).DataIngestionUri, global::System.Convert.ToString);
            }
            if (content.Contains("StateReason"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Kusto.Models.Api20220201.IClusterPropertiesInternal)this).StateReason = (string) content.GetValueForProperty("StateReason",((Microsoft.Azure.PowerShell.Cmdlets.Kusto.Models.Api20220201.IClusterPropertiesInternal)this).StateReason, global::System.Convert.ToString);
            }
            if (content.Contains("TrustedExternalTenant"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Kusto.Models.Api20220201.IClusterPropertiesInternal)this).TrustedExternalTenant = (Microsoft.Azure.PowerShell.Cmdlets.Kusto.Models.Api20220201.ITrustedExternalTenant[]) content.GetValueForProperty("TrustedExternalTenant",((Microsoft.Azure.PowerShell.Cmdlets.Kusto.Models.Api20220201.IClusterPropertiesInternal)this).TrustedExternalTenant, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.Kusto.Models.Api20220201.ITrustedExternalTenant>(__y, Microsoft.Azure.PowerShell.Cmdlets.Kusto.Models.Api20220201.TrustedExternalTenantTypeConverter.ConvertFrom));
            }
            if (content.Contains("EnableDiskEncryption"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Kusto.Models.Api20220201.IClusterPropertiesInternal)this).EnableDiskEncryption = (bool?) content.GetValueForProperty("EnableDiskEncryption",((Microsoft.Azure.PowerShell.Cmdlets.Kusto.Models.Api20220201.IClusterPropertiesInternal)this).EnableDiskEncryption, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("EnableStreamingIngest"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Kusto.Models.Api20220201.IClusterPropertiesInternal)this).EnableStreamingIngest = (bool?) content.GetValueForProperty("EnableStreamingIngest",((Microsoft.Azure.PowerShell.Cmdlets.Kusto.Models.Api20220201.IClusterPropertiesInternal)this).EnableStreamingIngest, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("EnablePurge"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Kusto.Models.Api20220201.IClusterPropertiesInternal)this).EnablePurge = (bool?) content.GetValueForProperty("EnablePurge",((Microsoft.Azure.PowerShell.Cmdlets.Kusto.Models.Api20220201.IClusterPropertiesInternal)this).EnablePurge, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("EnableDoubleEncryption"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Kusto.Models.Api20220201.IClusterPropertiesInternal)this).EnableDoubleEncryption = (bool?) content.GetValueForProperty("EnableDoubleEncryption",((Microsoft.Azure.PowerShell.Cmdlets.Kusto.Models.Api20220201.IClusterPropertiesInternal)this).EnableDoubleEncryption, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("PublicNetworkAccess"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Kusto.Models.Api20220201.IClusterPropertiesInternal)this).PublicNetworkAccess = (Microsoft.Azure.PowerShell.Cmdlets.Kusto.Support.PublicNetworkAccess?) content.GetValueForProperty("PublicNetworkAccess",((Microsoft.Azure.PowerShell.Cmdlets.Kusto.Models.Api20220201.IClusterPropertiesInternal)this).PublicNetworkAccess, Microsoft.Azure.PowerShell.Cmdlets.Kusto.Support.PublicNetworkAccess.CreateFrom);
            }
            if (content.Contains("AllowedIPRangeList"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Kusto.Models.Api20220201.IClusterPropertiesInternal)this).AllowedIPRangeList = (string[]) content.GetValueForProperty("AllowedIPRangeList",((Microsoft.Azure.PowerShell.Cmdlets.Kusto.Models.Api20220201.IClusterPropertiesInternal)this).AllowedIPRangeList, __y => TypeConverterExtensions.SelectToArray<string>(__y, global::System.Convert.ToString));
            }
            if (content.Contains("EngineType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Kusto.Models.Api20220201.IClusterPropertiesInternal)this).EngineType = (Microsoft.Azure.PowerShell.Cmdlets.Kusto.Support.EngineType?) content.GetValueForProperty("EngineType",((Microsoft.Azure.PowerShell.Cmdlets.Kusto.Models.Api20220201.IClusterPropertiesInternal)this).EngineType, Microsoft.Azure.PowerShell.Cmdlets.Kusto.Support.EngineType.CreateFrom);
            }
            if (content.Contains("AcceptedAudience"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Kusto.Models.Api20220201.IClusterPropertiesInternal)this).AcceptedAudience = (Microsoft.Azure.PowerShell.Cmdlets.Kusto.Models.Api20220201.IAcceptedAudiences[]) content.GetValueForProperty("AcceptedAudience",((Microsoft.Azure.PowerShell.Cmdlets.Kusto.Models.Api20220201.IClusterPropertiesInternal)this).AcceptedAudience, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.Kusto.Models.Api20220201.IAcceptedAudiences>(__y, Microsoft.Azure.PowerShell.Cmdlets.Kusto.Models.Api20220201.AcceptedAudiencesTypeConverter.ConvertFrom));
            }
            if (content.Contains("EnableAutoStop"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Kusto.Models.Api20220201.IClusterPropertiesInternal)this).EnableAutoStop = (bool?) content.GetValueForProperty("EnableAutoStop",((Microsoft.Azure.PowerShell.Cmdlets.Kusto.Models.Api20220201.IClusterPropertiesInternal)this).EnableAutoStop, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("RestrictOutboundNetworkAccess"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Kusto.Models.Api20220201.IClusterPropertiesInternal)this).RestrictOutboundNetworkAccess = (Microsoft.Azure.PowerShell.Cmdlets.Kusto.Support.ClusterNetworkAccessFlag?) content.GetValueForProperty("RestrictOutboundNetworkAccess",((Microsoft.Azure.PowerShell.Cmdlets.Kusto.Models.Api20220201.IClusterPropertiesInternal)this).RestrictOutboundNetworkAccess, Microsoft.Azure.PowerShell.Cmdlets.Kusto.Support.ClusterNetworkAccessFlag.CreateFrom);
            }
            if (content.Contains("AllowedFqdnList"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Kusto.Models.Api20220201.IClusterPropertiesInternal)this).AllowedFqdnList = (string[]) content.GetValueForProperty("AllowedFqdnList",((Microsoft.Azure.PowerShell.Cmdlets.Kusto.Models.Api20220201.IClusterPropertiesInternal)this).AllowedFqdnList, __y => TypeConverterExtensions.SelectToArray<string>(__y, global::System.Convert.ToString));
            }
            if (content.Contains("PublicIPType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Kusto.Models.Api20220201.IClusterPropertiesInternal)this).PublicIPType = (Microsoft.Azure.PowerShell.Cmdlets.Kusto.Support.PublicIPType?) content.GetValueForProperty("PublicIPType",((Microsoft.Azure.PowerShell.Cmdlets.Kusto.Models.Api20220201.IClusterPropertiesInternal)this).PublicIPType, Microsoft.Azure.PowerShell.Cmdlets.Kusto.Support.PublicIPType.CreateFrom);
            }
            if (content.Contains("VirtualClusterGraduationProperty"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Kusto.Models.Api20220201.IClusterPropertiesInternal)this).VirtualClusterGraduationProperty = (string) content.GetValueForProperty("VirtualClusterGraduationProperty",((Microsoft.Azure.PowerShell.Cmdlets.Kusto.Models.Api20220201.IClusterPropertiesInternal)this).VirtualClusterGraduationProperty, global::System.Convert.ToString);
            }
            if (content.Contains("PrivateEndpointConnection"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Kusto.Models.Api20220201.IClusterPropertiesInternal)this).PrivateEndpointConnection = (Microsoft.Azure.PowerShell.Cmdlets.Kusto.Models.Api20220201.IPrivateEndpointConnection[]) content.GetValueForProperty("PrivateEndpointConnection",((Microsoft.Azure.PowerShell.Cmdlets.Kusto.Models.Api20220201.IClusterPropertiesInternal)this).PrivateEndpointConnection, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.Kusto.Models.Api20220201.IPrivateEndpointConnection>(__y, Microsoft.Azure.PowerShell.Cmdlets.Kusto.Models.Api20220201.PrivateEndpointConnectionTypeConverter.ConvertFrom));
            }
            if (content.Contains("OptimizedAutoscaleVersion"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Kusto.Models.Api20220201.IClusterPropertiesInternal)this).OptimizedAutoscaleVersion = (int) content.GetValueForProperty("OptimizedAutoscaleVersion",((Microsoft.Azure.PowerShell.Cmdlets.Kusto.Models.Api20220201.IClusterPropertiesInternal)this).OptimizedAutoscaleVersion, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("OptimizedAutoscaleMinimum"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Kusto.Models.Api20220201.IClusterPropertiesInternal)this).OptimizedAutoscaleMinimum = (int) content.GetValueForProperty("OptimizedAutoscaleMinimum",((Microsoft.Azure.PowerShell.Cmdlets.Kusto.Models.Api20220201.IClusterPropertiesInternal)this).OptimizedAutoscaleMinimum, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("OptimizedAutoscaleMaximum"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Kusto.Models.Api20220201.IClusterPropertiesInternal)this).OptimizedAutoscaleMaximum = (int) content.GetValueForProperty("OptimizedAutoscaleMaximum",((Microsoft.Azure.PowerShell.Cmdlets.Kusto.Models.Api20220201.IClusterPropertiesInternal)this).OptimizedAutoscaleMaximum, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("VirtualNetworkConfigurationSubnetId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Kusto.Models.Api20220201.IClusterPropertiesInternal)this).VirtualNetworkConfigurationSubnetId = (string) content.GetValueForProperty("VirtualNetworkConfigurationSubnetId",((Microsoft.Azure.PowerShell.Cmdlets.Kusto.Models.Api20220201.IClusterPropertiesInternal)this).VirtualNetworkConfigurationSubnetId, global::System.Convert.ToString);
            }
            if (content.Contains("KeyVaultPropertyKeyName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Kusto.Models.Api20220201.IClusterPropertiesInternal)this).KeyVaultPropertyKeyName = (string) content.GetValueForProperty("KeyVaultPropertyKeyName",((Microsoft.Azure.PowerShell.Cmdlets.Kusto.Models.Api20220201.IClusterPropertiesInternal)this).KeyVaultPropertyKeyName, global::System.Convert.ToString);
            }
            if (content.Contains("KeyVaultPropertyKeyVersion"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Kusto.Models.Api20220201.IClusterPropertiesInternal)this).KeyVaultPropertyKeyVersion = (string) content.GetValueForProperty("KeyVaultPropertyKeyVersion",((Microsoft.Azure.PowerShell.Cmdlets.Kusto.Models.Api20220201.IClusterPropertiesInternal)this).KeyVaultPropertyKeyVersion, global::System.Convert.ToString);
            }
            if (content.Contains("KeyVaultPropertyUserIdentity"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Kusto.Models.Api20220201.IClusterPropertiesInternal)this).KeyVaultPropertyUserIdentity = (string) content.GetValueForProperty("KeyVaultPropertyUserIdentity",((Microsoft.Azure.PowerShell.Cmdlets.Kusto.Models.Api20220201.IClusterPropertiesInternal)this).KeyVaultPropertyUserIdentity, global::System.Convert.ToString);
            }
            if (content.Contains("OptimizedAutoscaleIsEnabled"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Kusto.Models.Api20220201.IClusterPropertiesInternal)this).OptimizedAutoscaleIsEnabled = (bool) content.GetValueForProperty("OptimizedAutoscaleIsEnabled",((Microsoft.Azure.PowerShell.Cmdlets.Kusto.Models.Api20220201.IClusterPropertiesInternal)this).OptimizedAutoscaleIsEnabled, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("VirtualNetworkConfigurationEnginePublicIPId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Kusto.Models.Api20220201.IClusterPropertiesInternal)this).VirtualNetworkConfigurationEnginePublicIPId = (string) content.GetValueForProperty("VirtualNetworkConfigurationEnginePublicIPId",((Microsoft.Azure.PowerShell.Cmdlets.Kusto.Models.Api20220201.IClusterPropertiesInternal)this).VirtualNetworkConfigurationEnginePublicIPId, global::System.Convert.ToString);
            }
            if (content.Contains("VirtualNetworkConfigurationDataManagementPublicIPId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Kusto.Models.Api20220201.IClusterPropertiesInternal)this).VirtualNetworkConfigurationDataManagementPublicIPId = (string) content.GetValueForProperty("VirtualNetworkConfigurationDataManagementPublicIPId",((Microsoft.Azure.PowerShell.Cmdlets.Kusto.Models.Api20220201.IClusterPropertiesInternal)this).VirtualNetworkConfigurationDataManagementPublicIPId, global::System.Convert.ToString);
            }
            if (content.Contains("KeyVaultPropertyKeyVaultUri"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Kusto.Models.Api20220201.IClusterPropertiesInternal)this).KeyVaultPropertyKeyVaultUri = (string) content.GetValueForProperty("KeyVaultPropertyKeyVaultUri",((Microsoft.Azure.PowerShell.Cmdlets.Kusto.Models.Api20220201.IClusterPropertiesInternal)this).KeyVaultPropertyKeyVaultUri, global::System.Convert.ToString);
            }
            if (content.Contains("LanguageExtensionValue"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Kusto.Models.Api20220201.IClusterPropertiesInternal)this).LanguageExtensionValue = (Microsoft.Azure.PowerShell.Cmdlets.Kusto.Models.Api20220201.ILanguageExtension[]) content.GetValueForProperty("LanguageExtensionValue",((Microsoft.Azure.PowerShell.Cmdlets.Kusto.Models.Api20220201.IClusterPropertiesInternal)this).LanguageExtensionValue, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.Kusto.Models.Api20220201.ILanguageExtension>(__y, Microsoft.Azure.PowerShell.Cmdlets.Kusto.Models.Api20220201.LanguageExtensionTypeConverter.ConvertFrom));
            }
            AfterDeserializePSObject(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Collections.IDictionary" /> into an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.Kusto.Models.Api20220201.ClusterProperties"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        /// <returns>
        /// an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.Kusto.Models.Api20220201.IClusterProperties" />.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.Kusto.Models.Api20220201.IClusterProperties DeserializeFromDictionary(global::System.Collections.IDictionary content)
        {
            return new ClusterProperties(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Management.Automation.PSObject" /> into an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.Kusto.Models.Api20220201.ClusterProperties"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        /// <returns>
        /// an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.Kusto.Models.Api20220201.IClusterProperties" />.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.Kusto.Models.Api20220201.IClusterProperties DeserializeFromPSObject(global::System.Management.Automation.PSObject content)
        {
            return new ClusterProperties(content);
        }

        /// <summary>
        /// Creates a new instance of <see cref="ClusterProperties" />, deserializing the content from a json string.
        /// </summary>
        /// <param name="jsonText">a string containing a JSON serialized instance of this model.</param>
        /// <returns>an instance of the <see cref="className" /> model class.</returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.Kusto.Models.Api20220201.IClusterProperties FromJsonString(string jsonText) => FromJson(Microsoft.Azure.PowerShell.Cmdlets.Kusto.Runtime.Json.JsonNode.Parse(jsonText));

        /// <summary>Serializes this instance to a json string.</summary>

        /// <returns>a <see cref="System.String" /> containing this model serialized to JSON text.</returns>
        public string ToJsonString() => ToJson(null, Microsoft.Azure.PowerShell.Cmdlets.Kusto.Runtime.SerializationMode.IncludeAll)?.ToString();
    }
    /// Class representing the Kusto cluster properties.
    [System.ComponentModel.TypeConverter(typeof(ClusterPropertiesTypeConverter))]
    public partial interface IClusterProperties

    {

    }
}