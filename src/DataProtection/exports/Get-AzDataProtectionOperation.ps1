
# ----------------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# http://www.apache.org/licenses/LICENSE-2.0
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# Code generated by Microsoft (R) AutoRest Code Generator.Changes may cause incorrect behavior and will be lost if the code
# is regenerated.
# ----------------------------------------------------------------------------------

<#
.Synopsis
Returns the list of available operations.
.Description
Returns the list of available operations.
.Example
PS C:\> Get-AzDataProtectionOperation

IsDataAction Name                                                                                                Origin
------------ ----                                                                                                ------
             Microsoft.DataProtection/locations/getBackupStatus/action                                           user
             Microsoft.DataProtection/backupVaults/backupInstances/write                                         user
             Microsoft.DataProtection/backupVaults/backupInstances/delete                                        user
             Microsoft.DataProtection/backupVaults/backupInstances/read                                          user
             Microsoft.DataProtection/backupVaults/backupInstances/read                                          user
             Microsoft.DataProtection/backupVaults/backupInstances/backup/action                                 user
             Microsoft.DataProtection/backupVaults/backupInstances/sync/action                                   user
             Microsoft.DataProtection/backupVaults/backupInstances/operationResults/read                         user
             Microsoft.DataProtection/backupVaults/backupInstances/stopProtection/action                         user
             Microsoft.DataProtection/backupVaults/backupInstances/suspendBackups/action                         user
             Microsoft.DataProtection/backupVaults/backupInstances/resumeProtection/action                       user
             Microsoft.DataProtection/backupVaults/backupInstances/resumeBackups/action                          user
             Microsoft.DataProtection/backupVaults/backupInstances/validateRestore/action                        user
             Microsoft.DataProtection/backupVaults/backupInstances/restore/action                                user
             Microsoft.DataProtection/backupVaults/backupPolicies/write                                          user
             Microsoft.DataProtection/backupVaults/backupPolicies/delete                                         user
             Microsoft.DataProtection/backupVaults/backupPolicies/read                                           user
             Microsoft.DataProtection/backupVaults/backupPolicies/read                                           user
             Microsoft.DataProtection/backupVaults/backupResourceGuardProxies/read                               user
             Microsoft.DataProtection/backupVaults/backupResourceGuardProxies/read                               user
             Microsoft.DataProtection/backupVaults/backupResourceGuardProxies/write                              user
             Microsoft.DataProtection/backupVaults/backupResourceGuardProxies/delete                             user
             Microsoft.DataProtection/backupVaults/backupResourceGuardProxies/unlockDelete/action                user
             Microsoft.DataProtection/backupVaults/backupInstances/recoveryPoints/read                           user
             Microsoft.DataProtection/backupVaults/backupInstances/recoveryPoints/read                           user
             Microsoft.DataProtection/backupVaults/backupInstances/findRestorableTimeRanges/action               user
             Microsoft.DataProtection/backupVaults/write                                                         user
             Microsoft.DataProtection/backupVaults/read                                                          user
             Microsoft.DataProtection/backupVaults/delete                                                        user
             Microsoft.DataProtection/backupVaults/operationResults/read                                         user
             Microsoft.DataProtection/locations/checkNameAvailability/action                                     user
             Microsoft.DataProtection/backupVaults/read                                                          user
             Microsoft.DataProtection/backupVaults/read                                                          user
             Microsoft.DataProtection/subscriptions/resourceGroups/providers/resourceGuards/write                user
             Microsoft.DataProtection/subscriptions/resourceGroups/providers/resourceGuards/read                 user
             Microsoft.DataProtection/subscriptions/resourceGroups/providers/resourceGuards/delete               user
             Microsoft.DataProtection/subscriptions/resourceGroups/providers/resourceGuards/read                 user
             Microsoft.DataProtection/subscriptions/providers/resourceGuards/read                                user
             Microsoft.DataProtection/subscriptions/resourceGroups/providers/resourceGuards/write                user
             Microsoft.DataProtection/subscriptions/resourceGroups/providers/resourceGuards/{operationName}/read user
             Microsoft.DataProtection/subscriptions/resourceGroups/providers/resourceGuards/{operationName}/read user
             Microsoft.DataProtection/subscriptions/providers/locations/checkFeatureSupport/action               user
             Microsoft.DataProtection/locations/operationStatus/read                                             user
             Microsoft.DataProtection/backupVaults/operationStatus/read                                          user
             Microsoft.DataProtection/subscriptions/resourceGroups/providers/operationStatus/read                user
             Microsoft.DataProtection/locations/operationResults/read                                            user
             Microsoft.DataProtection/backupVaults/validateForBackup/action                                      user
             Microsoft.DataProtection/backupVaults/backupJobs/read                                               user
             Microsoft.RecoveryServices/Vaults/backupJobs/read                                                   user
             Microsoft.DataProtection/register/action                                                            user
             Microsoft.DataProtection/unregister/action                                                          user
             Microsoft.DataProtection/operations/read                                                            user

.Outputs
Microsoft.Azure.PowerShell.Cmdlets.DataProtection.Models.Api20210701.IClientDiscoveryValueForSingleApi
.Link
https://docs.microsoft.com/powershell/module/az.dataprotection/get-azdataprotectionoperation
#>
function Get-AzDataProtectionOperation {
[OutputType([Microsoft.Azure.PowerShell.Cmdlets.DataProtection.Models.Api20210701.IClientDiscoveryValueForSingleApi])]
[CmdletBinding(DefaultParameterSetName='List', PositionalBinding=$false)]
param(
    [Parameter()]
    [Alias('AzureRMContext', 'AzureCredential')]
    [ValidateNotNull()]
    [Microsoft.Azure.PowerShell.Cmdlets.DataProtection.Category('Azure')]
    [System.Management.Automation.PSObject]
    # The credentials, account, tenant, and subscription used for communication with Azure.
    ${DefaultProfile},

    [Parameter(DontShow)]
    [Microsoft.Azure.PowerShell.Cmdlets.DataProtection.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Azure.PowerShell.Cmdlets.DataProtection.Category('Runtime')]
    [Microsoft.Azure.PowerShell.Cmdlets.DataProtection.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Azure.PowerShell.Cmdlets.DataProtection.Category('Runtime')]
    [Microsoft.Azure.PowerShell.Cmdlets.DataProtection.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter(DontShow)]
    [Microsoft.Azure.PowerShell.Cmdlets.DataProtection.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Azure.PowerShell.Cmdlets.DataProtection.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Azure.PowerShell.Cmdlets.DataProtection.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName
        $mapping = @{
            List = 'Az.DataProtection.private\Get-AzDataProtectionOperation_List';
        }
        $cmdInfo = Get-Command -Name $mapping[$parameterSet]
        [Microsoft.Azure.PowerShell.Cmdlets.DataProtection.Runtime.MessageAttributeHelper]::ProcessCustomAttributesAtRuntime($cmdInfo, $MyInvocation, $parameterSet, $PSCmdlet)
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {
        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {
        throw
    }
}

end {
    try {
        $steppablePipeline.End()
    } catch {
        throw
    }
}
}
