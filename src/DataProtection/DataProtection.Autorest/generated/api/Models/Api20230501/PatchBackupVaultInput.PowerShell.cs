// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.DataProtection.Models.Api20230501
{
    using Microsoft.Azure.PowerShell.Cmdlets.DataProtection.Runtime.PowerShell;

    /// <summary>Backup Vault Contract for Patch Backup Vault API.</summary>
    [System.ComponentModel.TypeConverter(typeof(PatchBackupVaultInputTypeConverter))]
    public partial class PatchBackupVaultInput
    {

        /// <summary>
        /// <c>AfterDeserializeDictionary</c> will be called after the deserialization has finished, allowing customization of the
        /// object before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>

        partial void AfterDeserializeDictionary(global::System.Collections.IDictionary content);

        /// <summary>
        /// <c>AfterDeserializePSObject</c> will be called after the deserialization has finished, allowing customization of the object
        /// before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>

        partial void AfterDeserializePSObject(global::System.Management.Automation.PSObject content);

        /// <summary>
        /// <c>BeforeDeserializeDictionary</c> will be called before the deserialization has commenced, allowing complete customization
        /// of the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <paramref name="returnNow" /> output
        /// parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeDeserializeDictionary(global::System.Collections.IDictionary content, ref bool returnNow);

        /// <summary>
        /// <c>BeforeDeserializePSObject</c> will be called before the deserialization has commenced, allowing complete customization
        /// of the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <paramref name="returnNow" /> output
        /// parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeDeserializePSObject(global::System.Management.Automation.PSObject content, ref bool returnNow);

        /// <summary>
        /// Deserializes a <see cref="global::System.Collections.IDictionary" /> into an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.DataProtection.Models.Api20230501.PatchBackupVaultInput"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        /// <returns>
        /// an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.DataProtection.Models.Api20230501.IPatchBackupVaultInput"
        /// />.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.DataProtection.Models.Api20230501.IPatchBackupVaultInput DeserializeFromDictionary(global::System.Collections.IDictionary content)
        {
            return new PatchBackupVaultInput(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Management.Automation.PSObject" /> into an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.DataProtection.Models.Api20230501.PatchBackupVaultInput"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        /// <returns>
        /// an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.DataProtection.Models.Api20230501.IPatchBackupVaultInput"
        /// />.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.DataProtection.Models.Api20230501.IPatchBackupVaultInput DeserializeFromPSObject(global::System.Management.Automation.PSObject content)
        {
            return new PatchBackupVaultInput(content);
        }

        /// <summary>
        /// Creates a new instance of <see cref="PatchBackupVaultInput" />, deserializing the content from a json string.
        /// </summary>
        /// <param name="jsonText">a string containing a JSON serialized instance of this model.</param>
        /// <returns>an instance of the <see cref="PatchBackupVaultInput" /> model class.</returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.DataProtection.Models.Api20230501.IPatchBackupVaultInput FromJsonString(string jsonText) => FromJson(Microsoft.Azure.PowerShell.Cmdlets.DataProtection.Runtime.Json.JsonNode.Parse(jsonText));

        /// <summary>
        /// Deserializes a <see cref="global::System.Collections.IDictionary" /> into a new instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.DataProtection.Models.Api20230501.PatchBackupVaultInput"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        internal PatchBackupVaultInput(global::System.Collections.IDictionary content)
        {
            bool returnNow = false;
            BeforeDeserializeDictionary(content, ref returnNow);
            if (returnNow)
            {
                return;
            }
            // actually deserialize
            if (content.Contains("MonitoringSetting"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DataProtection.Models.Api20230501.IPatchBackupVaultInputInternal)this).MonitoringSetting = (Microsoft.Azure.PowerShell.Cmdlets.DataProtection.Models.Api20230501.IMonitoringSettings) content.GetValueForProperty("MonitoringSetting",((Microsoft.Azure.PowerShell.Cmdlets.DataProtection.Models.Api20230501.IPatchBackupVaultInputInternal)this).MonitoringSetting, Microsoft.Azure.PowerShell.Cmdlets.DataProtection.Models.Api20230501.MonitoringSettingsTypeConverter.ConvertFrom);
            }
            if (content.Contains("SecuritySetting"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DataProtection.Models.Api20230501.IPatchBackupVaultInputInternal)this).SecuritySetting = (Microsoft.Azure.PowerShell.Cmdlets.DataProtection.Models.Api20230501.ISecuritySettings) content.GetValueForProperty("SecuritySetting",((Microsoft.Azure.PowerShell.Cmdlets.DataProtection.Models.Api20230501.IPatchBackupVaultInputInternal)this).SecuritySetting, Microsoft.Azure.PowerShell.Cmdlets.DataProtection.Models.Api20230501.SecuritySettingsTypeConverter.ConvertFrom);
            }
            if (content.Contains("FeatureSetting"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DataProtection.Models.Api20230501.IPatchBackupVaultInputInternal)this).FeatureSetting = (Microsoft.Azure.PowerShell.Cmdlets.DataProtection.Models.Api20230501.IFeatureSettings) content.GetValueForProperty("FeatureSetting",((Microsoft.Azure.PowerShell.Cmdlets.DataProtection.Models.Api20230501.IPatchBackupVaultInputInternal)this).FeatureSetting, Microsoft.Azure.PowerShell.Cmdlets.DataProtection.Models.Api20230501.FeatureSettingsTypeConverter.ConvertFrom);
            }
            if (content.Contains("SecuritySettingImmutabilitySetting"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DataProtection.Models.Api20230501.IPatchBackupVaultInputInternal)this).SecuritySettingImmutabilitySetting = (Microsoft.Azure.PowerShell.Cmdlets.DataProtection.Models.Api20230501.IImmutabilitySettings) content.GetValueForProperty("SecuritySettingImmutabilitySetting",((Microsoft.Azure.PowerShell.Cmdlets.DataProtection.Models.Api20230501.IPatchBackupVaultInputInternal)this).SecuritySettingImmutabilitySetting, Microsoft.Azure.PowerShell.Cmdlets.DataProtection.Models.Api20230501.ImmutabilitySettingsTypeConverter.ConvertFrom);
            }
            if (content.Contains("MonitoringSettingAzureMonitorAlertSetting"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DataProtection.Models.Api20230501.IPatchBackupVaultInputInternal)this).MonitoringSettingAzureMonitorAlertSetting = (Microsoft.Azure.PowerShell.Cmdlets.DataProtection.Models.Api20230501.IAzureMonitorAlertSettings) content.GetValueForProperty("MonitoringSettingAzureMonitorAlertSetting",((Microsoft.Azure.PowerShell.Cmdlets.DataProtection.Models.Api20230501.IPatchBackupVaultInputInternal)this).MonitoringSettingAzureMonitorAlertSetting, Microsoft.Azure.PowerShell.Cmdlets.DataProtection.Models.Api20230501.AzureMonitorAlertSettingsTypeConverter.ConvertFrom);
            }
            if (content.Contains("SoftDeleteSetting"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DataProtection.Models.Api20230501.IPatchBackupVaultInputInternal)this).SoftDeleteSetting = (Microsoft.Azure.PowerShell.Cmdlets.DataProtection.Models.Api20230501.ISoftDeleteSettings) content.GetValueForProperty("SoftDeleteSetting",((Microsoft.Azure.PowerShell.Cmdlets.DataProtection.Models.Api20230501.IPatchBackupVaultInputInternal)this).SoftDeleteSetting, Microsoft.Azure.PowerShell.Cmdlets.DataProtection.Models.Api20230501.SoftDeleteSettingsTypeConverter.ConvertFrom);
            }
            if (content.Contains("FeatureSettingCrossSubscriptionRestoreSetting"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DataProtection.Models.Api20230501.IPatchBackupVaultInputInternal)this).FeatureSettingCrossSubscriptionRestoreSetting = (Microsoft.Azure.PowerShell.Cmdlets.DataProtection.Models.Api20230501.ICrossSubscriptionRestoreSettings) content.GetValueForProperty("FeatureSettingCrossSubscriptionRestoreSetting",((Microsoft.Azure.PowerShell.Cmdlets.DataProtection.Models.Api20230501.IPatchBackupVaultInputInternal)this).FeatureSettingCrossSubscriptionRestoreSetting, Microsoft.Azure.PowerShell.Cmdlets.DataProtection.Models.Api20230501.CrossSubscriptionRestoreSettingsTypeConverter.ConvertFrom);
            }
            if (content.Contains("FeatureSettingCrossRegionRestoreSetting"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DataProtection.Models.Api20230501.IPatchBackupVaultInputInternal)this).FeatureSettingCrossRegionRestoreSetting = (Microsoft.Azure.PowerShell.Cmdlets.DataProtection.Models.Api20230501.ICrossRegionRestoreSettings) content.GetValueForProperty("FeatureSettingCrossRegionRestoreSetting",((Microsoft.Azure.PowerShell.Cmdlets.DataProtection.Models.Api20230501.IPatchBackupVaultInputInternal)this).FeatureSettingCrossRegionRestoreSetting, Microsoft.Azure.PowerShell.Cmdlets.DataProtection.Models.Api20230501.CrossRegionRestoreSettingsTypeConverter.ConvertFrom);
            }
            if (content.Contains("AzureMonitorAlertsForAllJobFailure"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DataProtection.Models.Api20230501.IPatchBackupVaultInputInternal)this).AzureMonitorAlertsForAllJobFailure = (Microsoft.Azure.PowerShell.Cmdlets.DataProtection.Support.AlertsState?) content.GetValueForProperty("AzureMonitorAlertsForAllJobFailure",((Microsoft.Azure.PowerShell.Cmdlets.DataProtection.Models.Api20230501.IPatchBackupVaultInputInternal)this).AzureMonitorAlertsForAllJobFailure, Microsoft.Azure.PowerShell.Cmdlets.DataProtection.Support.AlertsState.CreateFrom);
            }
            if (content.Contains("SoftDeleteState"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DataProtection.Models.Api20230501.IPatchBackupVaultInputInternal)this).SoftDeleteState = (Microsoft.Azure.PowerShell.Cmdlets.DataProtection.Support.SoftDeleteState?) content.GetValueForProperty("SoftDeleteState",((Microsoft.Azure.PowerShell.Cmdlets.DataProtection.Models.Api20230501.IPatchBackupVaultInputInternal)this).SoftDeleteState, Microsoft.Azure.PowerShell.Cmdlets.DataProtection.Support.SoftDeleteState.CreateFrom);
            }
            if (content.Contains("SoftDeleteRetentionDurationInDay"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DataProtection.Models.Api20230501.IPatchBackupVaultInputInternal)this).SoftDeleteRetentionDurationInDay = (double?) content.GetValueForProperty("SoftDeleteRetentionDurationInDay",((Microsoft.Azure.PowerShell.Cmdlets.DataProtection.Models.Api20230501.IPatchBackupVaultInputInternal)this).SoftDeleteRetentionDurationInDay, (__y)=> (double) global::System.Convert.ChangeType(__y, typeof(double)));
            }
            if (content.Contains("ImmutabilityState"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DataProtection.Models.Api20230501.IPatchBackupVaultInputInternal)this).ImmutabilityState = (Microsoft.Azure.PowerShell.Cmdlets.DataProtection.Support.ImmutabilityState?) content.GetValueForProperty("ImmutabilityState",((Microsoft.Azure.PowerShell.Cmdlets.DataProtection.Models.Api20230501.IPatchBackupVaultInputInternal)this).ImmutabilityState, Microsoft.Azure.PowerShell.Cmdlets.DataProtection.Support.ImmutabilityState.CreateFrom);
            }
            if (content.Contains("CrossSubscriptionRestoreState"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DataProtection.Models.Api20230501.IPatchBackupVaultInputInternal)this).CrossSubscriptionRestoreState = (Microsoft.Azure.PowerShell.Cmdlets.DataProtection.Support.CrossSubscriptionRestoreState?) content.GetValueForProperty("CrossSubscriptionRestoreState",((Microsoft.Azure.PowerShell.Cmdlets.DataProtection.Models.Api20230501.IPatchBackupVaultInputInternal)this).CrossSubscriptionRestoreState, Microsoft.Azure.PowerShell.Cmdlets.DataProtection.Support.CrossSubscriptionRestoreState.CreateFrom);
            }
            if (content.Contains("CrossRegionRestoreState"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DataProtection.Models.Api20230501.IPatchBackupVaultInputInternal)this).CrossRegionRestoreState = (Microsoft.Azure.PowerShell.Cmdlets.DataProtection.Support.CrossRegionRestoreState?) content.GetValueForProperty("CrossRegionRestoreState",((Microsoft.Azure.PowerShell.Cmdlets.DataProtection.Models.Api20230501.IPatchBackupVaultInputInternal)this).CrossRegionRestoreState, Microsoft.Azure.PowerShell.Cmdlets.DataProtection.Support.CrossRegionRestoreState.CreateFrom);
            }
            AfterDeserializeDictionary(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Management.Automation.PSObject" /> into a new instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.DataProtection.Models.Api20230501.PatchBackupVaultInput"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        internal PatchBackupVaultInput(global::System.Management.Automation.PSObject content)
        {
            bool returnNow = false;
            BeforeDeserializePSObject(content, ref returnNow);
            if (returnNow)
            {
                return;
            }
            // actually deserialize
            if (content.Contains("MonitoringSetting"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DataProtection.Models.Api20230501.IPatchBackupVaultInputInternal)this).MonitoringSetting = (Microsoft.Azure.PowerShell.Cmdlets.DataProtection.Models.Api20230501.IMonitoringSettings) content.GetValueForProperty("MonitoringSetting",((Microsoft.Azure.PowerShell.Cmdlets.DataProtection.Models.Api20230501.IPatchBackupVaultInputInternal)this).MonitoringSetting, Microsoft.Azure.PowerShell.Cmdlets.DataProtection.Models.Api20230501.MonitoringSettingsTypeConverter.ConvertFrom);
            }
            if (content.Contains("SecuritySetting"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DataProtection.Models.Api20230501.IPatchBackupVaultInputInternal)this).SecuritySetting = (Microsoft.Azure.PowerShell.Cmdlets.DataProtection.Models.Api20230501.ISecuritySettings) content.GetValueForProperty("SecuritySetting",((Microsoft.Azure.PowerShell.Cmdlets.DataProtection.Models.Api20230501.IPatchBackupVaultInputInternal)this).SecuritySetting, Microsoft.Azure.PowerShell.Cmdlets.DataProtection.Models.Api20230501.SecuritySettingsTypeConverter.ConvertFrom);
            }
            if (content.Contains("FeatureSetting"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DataProtection.Models.Api20230501.IPatchBackupVaultInputInternal)this).FeatureSetting = (Microsoft.Azure.PowerShell.Cmdlets.DataProtection.Models.Api20230501.IFeatureSettings) content.GetValueForProperty("FeatureSetting",((Microsoft.Azure.PowerShell.Cmdlets.DataProtection.Models.Api20230501.IPatchBackupVaultInputInternal)this).FeatureSetting, Microsoft.Azure.PowerShell.Cmdlets.DataProtection.Models.Api20230501.FeatureSettingsTypeConverter.ConvertFrom);
            }
            if (content.Contains("SecuritySettingImmutabilitySetting"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DataProtection.Models.Api20230501.IPatchBackupVaultInputInternal)this).SecuritySettingImmutabilitySetting = (Microsoft.Azure.PowerShell.Cmdlets.DataProtection.Models.Api20230501.IImmutabilitySettings) content.GetValueForProperty("SecuritySettingImmutabilitySetting",((Microsoft.Azure.PowerShell.Cmdlets.DataProtection.Models.Api20230501.IPatchBackupVaultInputInternal)this).SecuritySettingImmutabilitySetting, Microsoft.Azure.PowerShell.Cmdlets.DataProtection.Models.Api20230501.ImmutabilitySettingsTypeConverter.ConvertFrom);
            }
            if (content.Contains("MonitoringSettingAzureMonitorAlertSetting"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DataProtection.Models.Api20230501.IPatchBackupVaultInputInternal)this).MonitoringSettingAzureMonitorAlertSetting = (Microsoft.Azure.PowerShell.Cmdlets.DataProtection.Models.Api20230501.IAzureMonitorAlertSettings) content.GetValueForProperty("MonitoringSettingAzureMonitorAlertSetting",((Microsoft.Azure.PowerShell.Cmdlets.DataProtection.Models.Api20230501.IPatchBackupVaultInputInternal)this).MonitoringSettingAzureMonitorAlertSetting, Microsoft.Azure.PowerShell.Cmdlets.DataProtection.Models.Api20230501.AzureMonitorAlertSettingsTypeConverter.ConvertFrom);
            }
            if (content.Contains("SoftDeleteSetting"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DataProtection.Models.Api20230501.IPatchBackupVaultInputInternal)this).SoftDeleteSetting = (Microsoft.Azure.PowerShell.Cmdlets.DataProtection.Models.Api20230501.ISoftDeleteSettings) content.GetValueForProperty("SoftDeleteSetting",((Microsoft.Azure.PowerShell.Cmdlets.DataProtection.Models.Api20230501.IPatchBackupVaultInputInternal)this).SoftDeleteSetting, Microsoft.Azure.PowerShell.Cmdlets.DataProtection.Models.Api20230501.SoftDeleteSettingsTypeConverter.ConvertFrom);
            }
            if (content.Contains("FeatureSettingCrossSubscriptionRestoreSetting"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DataProtection.Models.Api20230501.IPatchBackupVaultInputInternal)this).FeatureSettingCrossSubscriptionRestoreSetting = (Microsoft.Azure.PowerShell.Cmdlets.DataProtection.Models.Api20230501.ICrossSubscriptionRestoreSettings) content.GetValueForProperty("FeatureSettingCrossSubscriptionRestoreSetting",((Microsoft.Azure.PowerShell.Cmdlets.DataProtection.Models.Api20230501.IPatchBackupVaultInputInternal)this).FeatureSettingCrossSubscriptionRestoreSetting, Microsoft.Azure.PowerShell.Cmdlets.DataProtection.Models.Api20230501.CrossSubscriptionRestoreSettingsTypeConverter.ConvertFrom);
            }
            if (content.Contains("FeatureSettingCrossRegionRestoreSetting"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DataProtection.Models.Api20230501.IPatchBackupVaultInputInternal)this).FeatureSettingCrossRegionRestoreSetting = (Microsoft.Azure.PowerShell.Cmdlets.DataProtection.Models.Api20230501.ICrossRegionRestoreSettings) content.GetValueForProperty("FeatureSettingCrossRegionRestoreSetting",((Microsoft.Azure.PowerShell.Cmdlets.DataProtection.Models.Api20230501.IPatchBackupVaultInputInternal)this).FeatureSettingCrossRegionRestoreSetting, Microsoft.Azure.PowerShell.Cmdlets.DataProtection.Models.Api20230501.CrossRegionRestoreSettingsTypeConverter.ConvertFrom);
            }
            if (content.Contains("AzureMonitorAlertsForAllJobFailure"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DataProtection.Models.Api20230501.IPatchBackupVaultInputInternal)this).AzureMonitorAlertsForAllJobFailure = (Microsoft.Azure.PowerShell.Cmdlets.DataProtection.Support.AlertsState?) content.GetValueForProperty("AzureMonitorAlertsForAllJobFailure",((Microsoft.Azure.PowerShell.Cmdlets.DataProtection.Models.Api20230501.IPatchBackupVaultInputInternal)this).AzureMonitorAlertsForAllJobFailure, Microsoft.Azure.PowerShell.Cmdlets.DataProtection.Support.AlertsState.CreateFrom);
            }
            if (content.Contains("SoftDeleteState"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DataProtection.Models.Api20230501.IPatchBackupVaultInputInternal)this).SoftDeleteState = (Microsoft.Azure.PowerShell.Cmdlets.DataProtection.Support.SoftDeleteState?) content.GetValueForProperty("SoftDeleteState",((Microsoft.Azure.PowerShell.Cmdlets.DataProtection.Models.Api20230501.IPatchBackupVaultInputInternal)this).SoftDeleteState, Microsoft.Azure.PowerShell.Cmdlets.DataProtection.Support.SoftDeleteState.CreateFrom);
            }
            if (content.Contains("SoftDeleteRetentionDurationInDay"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DataProtection.Models.Api20230501.IPatchBackupVaultInputInternal)this).SoftDeleteRetentionDurationInDay = (double?) content.GetValueForProperty("SoftDeleteRetentionDurationInDay",((Microsoft.Azure.PowerShell.Cmdlets.DataProtection.Models.Api20230501.IPatchBackupVaultInputInternal)this).SoftDeleteRetentionDurationInDay, (__y)=> (double) global::System.Convert.ChangeType(__y, typeof(double)));
            }
            if (content.Contains("ImmutabilityState"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DataProtection.Models.Api20230501.IPatchBackupVaultInputInternal)this).ImmutabilityState = (Microsoft.Azure.PowerShell.Cmdlets.DataProtection.Support.ImmutabilityState?) content.GetValueForProperty("ImmutabilityState",((Microsoft.Azure.PowerShell.Cmdlets.DataProtection.Models.Api20230501.IPatchBackupVaultInputInternal)this).ImmutabilityState, Microsoft.Azure.PowerShell.Cmdlets.DataProtection.Support.ImmutabilityState.CreateFrom);
            }
            if (content.Contains("CrossSubscriptionRestoreState"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DataProtection.Models.Api20230501.IPatchBackupVaultInputInternal)this).CrossSubscriptionRestoreState = (Microsoft.Azure.PowerShell.Cmdlets.DataProtection.Support.CrossSubscriptionRestoreState?) content.GetValueForProperty("CrossSubscriptionRestoreState",((Microsoft.Azure.PowerShell.Cmdlets.DataProtection.Models.Api20230501.IPatchBackupVaultInputInternal)this).CrossSubscriptionRestoreState, Microsoft.Azure.PowerShell.Cmdlets.DataProtection.Support.CrossSubscriptionRestoreState.CreateFrom);
            }
            if (content.Contains("CrossRegionRestoreState"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DataProtection.Models.Api20230501.IPatchBackupVaultInputInternal)this).CrossRegionRestoreState = (Microsoft.Azure.PowerShell.Cmdlets.DataProtection.Support.CrossRegionRestoreState?) content.GetValueForProperty("CrossRegionRestoreState",((Microsoft.Azure.PowerShell.Cmdlets.DataProtection.Models.Api20230501.IPatchBackupVaultInputInternal)this).CrossRegionRestoreState, Microsoft.Azure.PowerShell.Cmdlets.DataProtection.Support.CrossRegionRestoreState.CreateFrom);
            }
            AfterDeserializePSObject(content);
        }

        /// <summary>Serializes this instance to a json string.</summary>

        /// <returns>a <see cref="System.String" /> containing this model serialized to JSON text.</returns>
        public string ToJsonString() => ToJson(null, Microsoft.Azure.PowerShell.Cmdlets.DataProtection.Runtime.SerializationMode.IncludeAll)?.ToString();
    }
    /// Backup Vault Contract for Patch Backup Vault API.
    [System.ComponentModel.TypeConverter(typeof(PatchBackupVaultInputTypeConverter))]
    public partial interface IPatchBackupVaultInput

    {

    }
}