// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Quantum.Models.Api20220110Preview
{
    using static Microsoft.Azure.PowerShell.Cmdlets.Quantum.Runtime.Extensions;

    /// <summary>Provider properties.</summary>
    public partial class ProviderProperties
    {

        /// <summary>
        /// <c>AfterFromJson</c> will be called after the json deserialization has finished, allowing customization of the object
        /// before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="json">The JsonNode that should be deserialized into this object.</param>

        partial void AfterFromJson(Microsoft.Azure.PowerShell.Cmdlets.Quantum.Runtime.Json.JsonObject json);

        /// <summary>
        /// <c>AfterToJson</c> will be called after the json serialization has finished, allowing customization of the <see cref="Microsoft.Azure.PowerShell.Cmdlets.Quantum.Runtime.Json.JsonObject"
        /// /> before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="container">The JSON container that the serialization result will be placed in.</param>

        partial void AfterToJson(ref Microsoft.Azure.PowerShell.Cmdlets.Quantum.Runtime.Json.JsonObject container);

        /// <summary>
        /// <c>BeforeFromJson</c> will be called before the json deserialization has commenced, allowing complete customization of
        /// the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <paramref name= "returnNow" />
        /// output parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="json">The JsonNode that should be deserialized into this object.</param>
        /// <param name="returnNow">Determines if the rest of the deserialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeFromJson(Microsoft.Azure.PowerShell.Cmdlets.Quantum.Runtime.Json.JsonObject json, ref bool returnNow);

        /// <summary>
        /// <c>BeforeToJson</c> will be called before the json serialization has commenced, allowing complete customization of the
        /// object before it is serialized.
        /// If you wish to disable the default serialization entirely, return <c>true</c> in the <paramref name="returnNow" /> output
        /// parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="container">The JSON container that the serialization result will be placed in.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeToJson(ref Microsoft.Azure.PowerShell.Cmdlets.Quantum.Runtime.Json.JsonObject container, ref bool returnNow);

        /// <summary>
        /// Deserializes a <see cref="Microsoft.Azure.PowerShell.Cmdlets.Quantum.Runtime.Json.JsonNode"/> into an instance of Microsoft.Azure.PowerShell.Cmdlets.Quantum.Models.Api20220110Preview.IProviderProperties.
        /// </summary>
        /// <param name="node">a <see cref="Microsoft.Azure.PowerShell.Cmdlets.Quantum.Runtime.Json.JsonNode" /> to deserialize from.</param>
        /// <returns>
        /// an instance of Microsoft.Azure.PowerShell.Cmdlets.Quantum.Models.Api20220110Preview.IProviderProperties.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.Quantum.Models.Api20220110Preview.IProviderProperties FromJson(Microsoft.Azure.PowerShell.Cmdlets.Quantum.Runtime.Json.JsonNode node)
        {
            return node is Microsoft.Azure.PowerShell.Cmdlets.Quantum.Runtime.Json.JsonObject json ? new ProviderProperties(json) : null;
        }

        /// <summary>
        /// Deserializes a Microsoft.Azure.PowerShell.Cmdlets.Quantum.Runtime.Json.JsonObject into a new instance of <see cref="ProviderProperties" />.
        /// </summary>
        /// <param name="json">A Microsoft.Azure.PowerShell.Cmdlets.Quantum.Runtime.Json.JsonObject instance to deserialize from.</param>
        internal ProviderProperties(Microsoft.Azure.PowerShell.Cmdlets.Quantum.Runtime.Json.JsonObject json)
        {
            bool returnNow = false;
            BeforeFromJson(json, ref returnNow);
            if (returnNow)
            {
                return;
            }
            {_aad = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Quantum.Runtime.Json.JsonObject>("aad"), out var __jsonAad) ? Microsoft.Azure.PowerShell.Cmdlets.Quantum.Models.Api20220110Preview.ProviderPropertiesAad.FromJson(__jsonAad) : Aad;}
            {_managedApplication = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Quantum.Runtime.Json.JsonObject>("managedApplication"), out var __jsonManagedApplication) ? Microsoft.Azure.PowerShell.Cmdlets.Quantum.Models.Api20220110Preview.ProviderPropertiesManagedApplication.FromJson(__jsonManagedApplication) : ManagedApplication;}
            {_description = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Quantum.Runtime.Json.JsonString>("description"), out var __jsonDescription) ? (string)__jsonDescription : (string)Description;}
            {_providerType = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Quantum.Runtime.Json.JsonString>("providerType"), out var __jsonProviderType) ? (string)__jsonProviderType : (string)ProviderType;}
            {_company = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Quantum.Runtime.Json.JsonString>("company"), out var __jsonCompany) ? (string)__jsonCompany : (string)Company;}
            {_defaultEndpoint = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Quantum.Runtime.Json.JsonString>("defaultEndpoint"), out var __jsonDefaultEndpoint) ? (string)__jsonDefaultEndpoint : (string)DefaultEndpoint;}
            {_target = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Quantum.Runtime.Json.JsonArray>("targets"), out var __jsonTargets) ? If( __jsonTargets as Microsoft.Azure.PowerShell.Cmdlets.Quantum.Runtime.Json.JsonArray, out var __v) ? new global::System.Func<Microsoft.Azure.PowerShell.Cmdlets.Quantum.Models.Api20220110Preview.ITargetDescription[]>(()=> global::System.Linq.Enumerable.ToArray(global::System.Linq.Enumerable.Select(__v, (__u)=>(Microsoft.Azure.PowerShell.Cmdlets.Quantum.Models.Api20220110Preview.ITargetDescription) (Microsoft.Azure.PowerShell.Cmdlets.Quantum.Models.Api20220110Preview.TargetDescription.FromJson(__u) )) ))() : null : Target;}
            {_sku = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Quantum.Runtime.Json.JsonArray>("skus"), out var __jsonSkus) ? If( __jsonSkus as Microsoft.Azure.PowerShell.Cmdlets.Quantum.Runtime.Json.JsonArray, out var __q) ? new global::System.Func<Microsoft.Azure.PowerShell.Cmdlets.Quantum.Models.Api20220110Preview.ISkuDescription[]>(()=> global::System.Linq.Enumerable.ToArray(global::System.Linq.Enumerable.Select(__q, (__p)=>(Microsoft.Azure.PowerShell.Cmdlets.Quantum.Models.Api20220110Preview.ISkuDescription) (Microsoft.Azure.PowerShell.Cmdlets.Quantum.Models.Api20220110Preview.SkuDescription.FromJson(__p) )) ))() : null : Sku;}
            {_quotaDimension = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Quantum.Runtime.Json.JsonArray>("quotaDimensions"), out var __jsonQuotaDimensions) ? If( __jsonQuotaDimensions as Microsoft.Azure.PowerShell.Cmdlets.Quantum.Runtime.Json.JsonArray, out var __l) ? new global::System.Func<Microsoft.Azure.PowerShell.Cmdlets.Quantum.Models.Api20220110Preview.IQuotaDimension[]>(()=> global::System.Linq.Enumerable.ToArray(global::System.Linq.Enumerable.Select(__l, (__k)=>(Microsoft.Azure.PowerShell.Cmdlets.Quantum.Models.Api20220110Preview.IQuotaDimension) (Microsoft.Azure.PowerShell.Cmdlets.Quantum.Models.Api20220110Preview.QuotaDimension.FromJson(__k) )) ))() : null : QuotaDimension;}
            {_pricingDimension = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Quantum.Runtime.Json.JsonArray>("pricingDimensions"), out var __jsonPricingDimensions) ? If( __jsonPricingDimensions as Microsoft.Azure.PowerShell.Cmdlets.Quantum.Runtime.Json.JsonArray, out var __g) ? new global::System.Func<Microsoft.Azure.PowerShell.Cmdlets.Quantum.Models.Api20220110Preview.IPricingDimension[]>(()=> global::System.Linq.Enumerable.ToArray(global::System.Linq.Enumerable.Select(__g, (__f)=>(Microsoft.Azure.PowerShell.Cmdlets.Quantum.Models.Api20220110Preview.IPricingDimension) (Microsoft.Azure.PowerShell.Cmdlets.Quantum.Models.Api20220110Preview.PricingDimension.FromJson(__f) )) ))() : null : PricingDimension;}
            AfterFromJson(json);
        }

        /// <summary>
        /// Serializes this instance of <see cref="ProviderProperties" /> into a <see cref="Microsoft.Azure.PowerShell.Cmdlets.Quantum.Runtime.Json.JsonNode" />.
        /// </summary>
        /// <param name="container">The <see cref="Microsoft.Azure.PowerShell.Cmdlets.Quantum.Runtime.Json.JsonObject"/> container to serialize this object into. If the caller
        /// passes in <c>null</c>, a new instance will be created and returned to the caller.</param>
        /// <param name="serializationMode">Allows the caller to choose the depth of the serialization. See <see cref="Microsoft.Azure.PowerShell.Cmdlets.Quantum.Runtime.SerializationMode"/>.</param>
        /// <returns>
        /// a serialized instance of <see cref="ProviderProperties" /> as a <see cref="Microsoft.Azure.PowerShell.Cmdlets.Quantum.Runtime.Json.JsonNode" />.
        /// </returns>
        public Microsoft.Azure.PowerShell.Cmdlets.Quantum.Runtime.Json.JsonNode ToJson(Microsoft.Azure.PowerShell.Cmdlets.Quantum.Runtime.Json.JsonObject container, Microsoft.Azure.PowerShell.Cmdlets.Quantum.Runtime.SerializationMode serializationMode)
        {
            container = container ?? new Microsoft.Azure.PowerShell.Cmdlets.Quantum.Runtime.Json.JsonObject();

            bool returnNow = false;
            BeforeToJson(ref container, ref returnNow);
            if (returnNow)
            {
                return container;
            }
            AddIf( null != this._aad ? (Microsoft.Azure.PowerShell.Cmdlets.Quantum.Runtime.Json.JsonNode) this._aad.ToJson(null,serializationMode) : null, "aad" ,container.Add );
            AddIf( null != this._managedApplication ? (Microsoft.Azure.PowerShell.Cmdlets.Quantum.Runtime.Json.JsonNode) this._managedApplication.ToJson(null,serializationMode) : null, "managedApplication" ,container.Add );
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.Quantum.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != (((object)this._description)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.Quantum.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.Quantum.Runtime.Json.JsonString(this._description.ToString()) : null, "description" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.Quantum.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != (((object)this._providerType)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.Quantum.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.Quantum.Runtime.Json.JsonString(this._providerType.ToString()) : null, "providerType" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.Quantum.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != (((object)this._company)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.Quantum.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.Quantum.Runtime.Json.JsonString(this._company.ToString()) : null, "company" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.Quantum.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != (((object)this._defaultEndpoint)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.Quantum.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.Quantum.Runtime.Json.JsonString(this._defaultEndpoint.ToString()) : null, "defaultEndpoint" ,container.Add );
            }
            if (null != this._target)
            {
                var __w = new Microsoft.Azure.PowerShell.Cmdlets.Quantum.Runtime.Json.XNodeArray();
                foreach( var __x in this._target )
                {
                    AddIf(__x?.ToJson(null, serializationMode) ,__w.Add);
                }
                container.Add("targets",__w);
            }
            if (null != this._sku)
            {
                var __r = new Microsoft.Azure.PowerShell.Cmdlets.Quantum.Runtime.Json.XNodeArray();
                foreach( var __s in this._sku )
                {
                    AddIf(__s?.ToJson(null, serializationMode) ,__r.Add);
                }
                container.Add("skus",__r);
            }
            if (null != this._quotaDimension)
            {
                var __m = new Microsoft.Azure.PowerShell.Cmdlets.Quantum.Runtime.Json.XNodeArray();
                foreach( var __n in this._quotaDimension )
                {
                    AddIf(__n?.ToJson(null, serializationMode) ,__m.Add);
                }
                container.Add("quotaDimensions",__m);
            }
            if (null != this._pricingDimension)
            {
                var __h = new Microsoft.Azure.PowerShell.Cmdlets.Quantum.Runtime.Json.XNodeArray();
                foreach( var __i in this._pricingDimension )
                {
                    AddIf(__i?.ToJson(null, serializationMode) ,__h.Add);
                }
                container.Add("pricingDimensions",__h);
            }
            AfterToJson(ref container);
            return container;
        }
    }
}