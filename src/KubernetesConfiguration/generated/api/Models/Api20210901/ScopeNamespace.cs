// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20210901
{
    using static Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Runtime.Extensions;

    /// <summary>Specifies that the scope of the extension is Namespace</summary>
    public partial class ScopeNamespace :
        Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20210901.IScopeNamespace,
        Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20210901.IScopeNamespaceInternal
    {

        /// <summary>Backing field for <see cref="TargetNamespace" /> property.</summary>
        private string _targetNamespace;

        /// <summary>
        /// Namespace where the extension will be created for an Namespace scoped extension. If this namespace does not exist, it
        /// will be created
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Origin(Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.PropertyOrigin.Owned)]
        public string TargetNamespace { get => this._targetNamespace; set => this._targetNamespace = value; }

        /// <summary>Creates an new <see cref="ScopeNamespace" /> instance.</summary>
        public ScopeNamespace()
        {

        }
    }
    /// Specifies that the scope of the extension is Namespace
    public partial interface IScopeNamespace :
        Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Runtime.IJsonSerializable
    {
        /// <summary>
        /// Namespace where the extension will be created for an Namespace scoped extension. If this namespace does not exist, it
        /// will be created
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Namespace where the extension will be created for an Namespace scoped extension.  If this namespace does not exist, it will be created",
        SerializedName = @"targetNamespace",
        PossibleTypes = new [] { typeof(string) })]
        string TargetNamespace { get; set; }

    }
    /// Specifies that the scope of the extension is Namespace
    internal partial interface IScopeNamespaceInternal

    {
        /// <summary>
        /// Namespace where the extension will be created for an Namespace scoped extension. If this namespace does not exist, it
        /// will be created
        /// </summary>
        string TargetNamespace { get; set; }

    }
}