// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101
{
    using Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Runtime.PowerShell;

    /// <summary>Properties to create a Flux Configuration resource</summary>
    [System.ComponentModel.TypeConverter(typeof(FluxConfigurationPropertiesTypeConverter))]
    public partial class FluxConfigurationProperties
    {

        /// <summary>
        /// <c>AfterDeserializeDictionary</c> will be called after the deserialization has finished, allowing customization of the
        /// object before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>

        partial void AfterDeserializeDictionary(global::System.Collections.IDictionary content);

        /// <summary>
        /// <c>AfterDeserializePSObject</c> will be called after the deserialization has finished, allowing customization of the object
        /// before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>

        partial void AfterDeserializePSObject(global::System.Management.Automation.PSObject content);

        /// <summary>
        /// <c>BeforeDeserializeDictionary</c> will be called before the deserialization has commenced, allowing complete customization
        /// of the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <paramref name="returnNow" /> output
        /// parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeDeserializeDictionary(global::System.Collections.IDictionary content, ref bool returnNow);

        /// <summary>
        /// <c>BeforeDeserializePSObject</c> will be called before the deserialization has commenced, allowing complete customization
        /// of the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <paramref name="returnNow" /> output
        /// parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeDeserializePSObject(global::System.Management.Automation.PSObject content, ref bool returnNow);

        /// <summary>
        /// <c>OverrideToString</c> will be called if it is implemented. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="stringResult">/// instance serialized to a string, normally it is a Json</param>
        /// <param name="returnNow">/// set returnNow to true if you provide a customized OverrideToString function</param>

        partial void OverrideToString(ref string stringResult, ref bool returnNow);

        /// <summary>
        /// Deserializes a <see cref="global::System.Collections.IDictionary" /> into an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.FluxConfigurationProperties"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        /// <returns>
        /// an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IFluxConfigurationProperties"
        /// />.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IFluxConfigurationProperties DeserializeFromDictionary(global::System.Collections.IDictionary content)
        {
            return new FluxConfigurationProperties(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Management.Automation.PSObject" /> into an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.FluxConfigurationProperties"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        /// <returns>
        /// an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IFluxConfigurationProperties"
        /// />.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IFluxConfigurationProperties DeserializeFromPSObject(global::System.Management.Automation.PSObject content)
        {
            return new FluxConfigurationProperties(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Collections.IDictionary" /> into a new instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.FluxConfigurationProperties"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        internal FluxConfigurationProperties(global::System.Collections.IDictionary content)
        {
            bool returnNow = false;
            BeforeDeserializeDictionary(content, ref returnNow);
            if (returnNow)
            {
                return;
            }
            // actually deserialize
            if (content.Contains("GitRepository"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IFluxConfigurationPropertiesInternal)this).GitRepository = (Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IGitRepositoryDefinition) content.GetValueForProperty("GitRepository",((Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IFluxConfigurationPropertiesInternal)this).GitRepository, Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.GitRepositoryDefinitionTypeConverter.ConvertFrom);
            }
            if (content.Contains("Bucket"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IFluxConfigurationPropertiesInternal)this).Bucket = (Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IBucketDefinition) content.GetValueForProperty("Bucket",((Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IFluxConfigurationPropertiesInternal)this).Bucket, Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.BucketDefinitionTypeConverter.ConvertFrom);
            }
            if (content.Contains("AzureBlob"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IFluxConfigurationPropertiesInternal)this).AzureBlob = (Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IAzureBlobDefinition) content.GetValueForProperty("AzureBlob",((Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IFluxConfigurationPropertiesInternal)this).AzureBlob, Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.AzureBlobDefinitionTypeConverter.ConvertFrom);
            }
            if (content.Contains("Scope"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IFluxConfigurationPropertiesInternal)this).Scope = (Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Support.ScopeType?) content.GetValueForProperty("Scope",((Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IFluxConfigurationPropertiesInternal)this).Scope, Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Support.ScopeType.CreateFrom);
            }
            if (content.Contains("Namespace"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IFluxConfigurationPropertiesInternal)this).Namespace = (string) content.GetValueForProperty("Namespace",((Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IFluxConfigurationPropertiesInternal)this).Namespace, global::System.Convert.ToString);
            }
            if (content.Contains("SourceKind"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IFluxConfigurationPropertiesInternal)this).SourceKind = (Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Support.SourceKindType?) content.GetValueForProperty("SourceKind",((Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IFluxConfigurationPropertiesInternal)this).SourceKind, Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Support.SourceKindType.CreateFrom);
            }
            if (content.Contains("Suspend"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IFluxConfigurationPropertiesInternal)this).Suspend = (bool?) content.GetValueForProperty("Suspend",((Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IFluxConfigurationPropertiesInternal)this).Suspend, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("Kustomization"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IFluxConfigurationPropertiesInternal)this).Kustomization = (Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IFluxConfigurationPropertiesKustomizations) content.GetValueForProperty("Kustomization",((Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IFluxConfigurationPropertiesInternal)this).Kustomization, Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.FluxConfigurationPropertiesKustomizationsTypeConverter.ConvertFrom);
            }
            if (content.Contains("ConfigurationProtectedSetting"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IFluxConfigurationPropertiesInternal)this).ConfigurationProtectedSetting = (Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IFluxConfigurationPropertiesConfigurationProtectedSettings) content.GetValueForProperty("ConfigurationProtectedSetting",((Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IFluxConfigurationPropertiesInternal)this).ConfigurationProtectedSetting, Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.FluxConfigurationPropertiesConfigurationProtectedSettingsTypeConverter.ConvertFrom);
            }
            if (content.Contains("Statuses"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IFluxConfigurationPropertiesInternal)this).Statuses = (Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IObjectStatusDefinition[]) content.GetValueForProperty("Statuses",((Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IFluxConfigurationPropertiesInternal)this).Statuses, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IObjectStatusDefinition>(__y, Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.ObjectStatusDefinitionTypeConverter.ConvertFrom));
            }
            if (content.Contains("RepositoryPublicKey"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IFluxConfigurationPropertiesInternal)this).RepositoryPublicKey = (string) content.GetValueForProperty("RepositoryPublicKey",((Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IFluxConfigurationPropertiesInternal)this).RepositoryPublicKey, global::System.Convert.ToString);
            }
            if (content.Contains("SourceSyncedCommitId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IFluxConfigurationPropertiesInternal)this).SourceSyncedCommitId = (string) content.GetValueForProperty("SourceSyncedCommitId",((Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IFluxConfigurationPropertiesInternal)this).SourceSyncedCommitId, global::System.Convert.ToString);
            }
            if (content.Contains("SourceUpdatedAt"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IFluxConfigurationPropertiesInternal)this).SourceUpdatedAt = (global::System.DateTime?) content.GetValueForProperty("SourceUpdatedAt",((Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IFluxConfigurationPropertiesInternal)this).SourceUpdatedAt, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            if (content.Contains("StatusUpdatedAt"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IFluxConfigurationPropertiesInternal)this).StatusUpdatedAt = (global::System.DateTime?) content.GetValueForProperty("StatusUpdatedAt",((Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IFluxConfigurationPropertiesInternal)this).StatusUpdatedAt, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            if (content.Contains("ComplianceState"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IFluxConfigurationPropertiesInternal)this).ComplianceState = (Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Support.FluxComplianceState?) content.GetValueForProperty("ComplianceState",((Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IFluxConfigurationPropertiesInternal)this).ComplianceState, Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Support.FluxComplianceState.CreateFrom);
            }
            if (content.Contains("ProvisioningState"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IFluxConfigurationPropertiesInternal)this).ProvisioningState = (Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Support.ProvisioningState?) content.GetValueForProperty("ProvisioningState",((Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IFluxConfigurationPropertiesInternal)this).ProvisioningState, Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Support.ProvisioningState.CreateFrom);
            }
            if (content.Contains("ErrorMessage"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IFluxConfigurationPropertiesInternal)this).ErrorMessage = (string) content.GetValueForProperty("ErrorMessage",((Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IFluxConfigurationPropertiesInternal)this).ErrorMessage, global::System.Convert.ToString);
            }
            if (content.Contains("GitRepositoryRef"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IFluxConfigurationPropertiesInternal)this).GitRepositoryRef = (Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IRepositoryRefDefinition) content.GetValueForProperty("GitRepositoryRef",((Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IFluxConfigurationPropertiesInternal)this).GitRepositoryRef, Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.RepositoryRefDefinitionTypeConverter.ConvertFrom);
            }
            if (content.Contains("GitRepositoryUrl"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IFluxConfigurationPropertiesInternal)this).GitRepositoryUrl = (string) content.GetValueForProperty("GitRepositoryUrl",((Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IFluxConfigurationPropertiesInternal)this).GitRepositoryUrl, global::System.Convert.ToString);
            }
            if (content.Contains("GitRepositoryTimeoutInSecond"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IFluxConfigurationPropertiesInternal)this).GitRepositoryTimeoutInSecond = (long?) content.GetValueForProperty("GitRepositoryTimeoutInSecond",((Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IFluxConfigurationPropertiesInternal)this).GitRepositoryTimeoutInSecond, (__y)=> (long) global::System.Convert.ChangeType(__y, typeof(long)));
            }
            if (content.Contains("GitRepositorySyncIntervalInSecond"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IFluxConfigurationPropertiesInternal)this).GitRepositorySyncIntervalInSecond = (long?) content.GetValueForProperty("GitRepositorySyncIntervalInSecond",((Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IFluxConfigurationPropertiesInternal)this).GitRepositorySyncIntervalInSecond, (__y)=> (long) global::System.Convert.ChangeType(__y, typeof(long)));
            }
            if (content.Contains("GitRepositorySshKnownHost"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IFluxConfigurationPropertiesInternal)this).GitRepositorySshKnownHost = (string) content.GetValueForProperty("GitRepositorySshKnownHost",((Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IFluxConfigurationPropertiesInternal)this).GitRepositorySshKnownHost, global::System.Convert.ToString);
            }
            if (content.Contains("GitRepositoryHttpsUser"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IFluxConfigurationPropertiesInternal)this).GitRepositoryHttpsUser = (string) content.GetValueForProperty("GitRepositoryHttpsUser",((Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IFluxConfigurationPropertiesInternal)this).GitRepositoryHttpsUser, global::System.Convert.ToString);
            }
            if (content.Contains("GitRepositoryHttpsCaCert"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IFluxConfigurationPropertiesInternal)this).GitRepositoryHttpsCaCert = (string) content.GetValueForProperty("GitRepositoryHttpsCaCert",((Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IFluxConfigurationPropertiesInternal)this).GitRepositoryHttpsCaCert, global::System.Convert.ToString);
            }
            if (content.Contains("GitRepositoryLocalAuthRef"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IFluxConfigurationPropertiesInternal)this).GitRepositoryLocalAuthRef = (string) content.GetValueForProperty("GitRepositoryLocalAuthRef",((Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IFluxConfigurationPropertiesInternal)this).GitRepositoryLocalAuthRef, global::System.Convert.ToString);
            }
            if (content.Contains("BucketUrl"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IFluxConfigurationPropertiesInternal)this).BucketUrl = (string) content.GetValueForProperty("BucketUrl",((Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IFluxConfigurationPropertiesInternal)this).BucketUrl, global::System.Convert.ToString);
            }
            if (content.Contains("BucketName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IFluxConfigurationPropertiesInternal)this).BucketName = (string) content.GetValueForProperty("BucketName",((Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IFluxConfigurationPropertiesInternal)this).BucketName, global::System.Convert.ToString);
            }
            if (content.Contains("BucketInsecure"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IFluxConfigurationPropertiesInternal)this).BucketInsecure = (bool?) content.GetValueForProperty("BucketInsecure",((Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IFluxConfigurationPropertiesInternal)this).BucketInsecure, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("BucketTimeoutInSecond"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IFluxConfigurationPropertiesInternal)this).BucketTimeoutInSecond = (long?) content.GetValueForProperty("BucketTimeoutInSecond",((Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IFluxConfigurationPropertiesInternal)this).BucketTimeoutInSecond, (__y)=> (long) global::System.Convert.ChangeType(__y, typeof(long)));
            }
            if (content.Contains("BucketSyncIntervalInSecond"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IFluxConfigurationPropertiesInternal)this).BucketSyncIntervalInSecond = (long?) content.GetValueForProperty("BucketSyncIntervalInSecond",((Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IFluxConfigurationPropertiesInternal)this).BucketSyncIntervalInSecond, (__y)=> (long) global::System.Convert.ChangeType(__y, typeof(long)));
            }
            if (content.Contains("BucketAccessKey"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IFluxConfigurationPropertiesInternal)this).BucketAccessKey = (System.Security.SecureString) content.GetValueForProperty("BucketAccessKey",((Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IFluxConfigurationPropertiesInternal)this).BucketAccessKey, (object ss) => (System.Security.SecureString)ss);
            }
            if (content.Contains("BucketLocalAuthRef"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IFluxConfigurationPropertiesInternal)this).BucketLocalAuthRef = (string) content.GetValueForProperty("BucketLocalAuthRef",((Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IFluxConfigurationPropertiesInternal)this).BucketLocalAuthRef, global::System.Convert.ToString);
            }
            if (content.Contains("AzureBlobServicePrincipal"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IFluxConfigurationPropertiesInternal)this).AzureBlobServicePrincipal = (Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IServicePrincipalDefinition) content.GetValueForProperty("AzureBlobServicePrincipal",((Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IFluxConfigurationPropertiesInternal)this).AzureBlobServicePrincipal, Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.ServicePrincipalDefinitionTypeConverter.ConvertFrom);
            }
            if (content.Contains("AzureBlobManagedIdentity"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IFluxConfigurationPropertiesInternal)this).AzureBlobManagedIdentity = (Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IManagedIdentityDefinition) content.GetValueForProperty("AzureBlobManagedIdentity",((Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IFluxConfigurationPropertiesInternal)this).AzureBlobManagedIdentity, Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.ManagedIdentityDefinitionTypeConverter.ConvertFrom);
            }
            if (content.Contains("AzureBlobUrl"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IFluxConfigurationPropertiesInternal)this).AzureBlobUrl = (string) content.GetValueForProperty("AzureBlobUrl",((Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IFluxConfigurationPropertiesInternal)this).AzureBlobUrl, global::System.Convert.ToString);
            }
            if (content.Contains("AzureBlobContainerName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IFluxConfigurationPropertiesInternal)this).AzureBlobContainerName = (string) content.GetValueForProperty("AzureBlobContainerName",((Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IFluxConfigurationPropertiesInternal)this).AzureBlobContainerName, global::System.Convert.ToString);
            }
            if (content.Contains("AzureBlobTimeoutInSecond"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IFluxConfigurationPropertiesInternal)this).AzureBlobTimeoutInSecond = (long?) content.GetValueForProperty("AzureBlobTimeoutInSecond",((Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IFluxConfigurationPropertiesInternal)this).AzureBlobTimeoutInSecond, (__y)=> (long) global::System.Convert.ChangeType(__y, typeof(long)));
            }
            if (content.Contains("AzureBlobSyncIntervalInSecond"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IFluxConfigurationPropertiesInternal)this).AzureBlobSyncIntervalInSecond = (long?) content.GetValueForProperty("AzureBlobSyncIntervalInSecond",((Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IFluxConfigurationPropertiesInternal)this).AzureBlobSyncIntervalInSecond, (__y)=> (long) global::System.Convert.ChangeType(__y, typeof(long)));
            }
            if (content.Contains("AzureBlobAccountKey"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IFluxConfigurationPropertiesInternal)this).AzureBlobAccountKey = (string) content.GetValueForProperty("AzureBlobAccountKey",((Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IFluxConfigurationPropertiesInternal)this).AzureBlobAccountKey, global::System.Convert.ToString);
            }
            if (content.Contains("AzureBlobSasToken"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IFluxConfigurationPropertiesInternal)this).AzureBlobSasToken = (string) content.GetValueForProperty("AzureBlobSasToken",((Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IFluxConfigurationPropertiesInternal)this).AzureBlobSasToken, global::System.Convert.ToString);
            }
            if (content.Contains("AzureBlobLocalAuthRef"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IFluxConfigurationPropertiesInternal)this).AzureBlobLocalAuthRef = (string) content.GetValueForProperty("AzureBlobLocalAuthRef",((Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IFluxConfigurationPropertiesInternal)this).AzureBlobLocalAuthRef, global::System.Convert.ToString);
            }
            if (content.Contains("RepositoryRefBranch"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IFluxConfigurationPropertiesInternal)this).RepositoryRefBranch = (string) content.GetValueForProperty("RepositoryRefBranch",((Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IFluxConfigurationPropertiesInternal)this).RepositoryRefBranch, global::System.Convert.ToString);
            }
            if (content.Contains("RepositoryRefTag"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IFluxConfigurationPropertiesInternal)this).RepositoryRefTag = (string) content.GetValueForProperty("RepositoryRefTag",((Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IFluxConfigurationPropertiesInternal)this).RepositoryRefTag, global::System.Convert.ToString);
            }
            if (content.Contains("RepositoryRefSemver"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IFluxConfigurationPropertiesInternal)this).RepositoryRefSemver = (string) content.GetValueForProperty("RepositoryRefSemver",((Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IFluxConfigurationPropertiesInternal)this).RepositoryRefSemver, global::System.Convert.ToString);
            }
            if (content.Contains("RepositoryRefCommit"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IFluxConfigurationPropertiesInternal)this).RepositoryRefCommit = (string) content.GetValueForProperty("RepositoryRefCommit",((Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IFluxConfigurationPropertiesInternal)this).RepositoryRefCommit, global::System.Convert.ToString);
            }
            if (content.Contains("ServicePrincipalClientId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IFluxConfigurationPropertiesInternal)this).ServicePrincipalClientId = (string) content.GetValueForProperty("ServicePrincipalClientId",((Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IFluxConfigurationPropertiesInternal)this).ServicePrincipalClientId, global::System.Convert.ToString);
            }
            if (content.Contains("ServicePrincipalTenantId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IFluxConfigurationPropertiesInternal)this).ServicePrincipalTenantId = (string) content.GetValueForProperty("ServicePrincipalTenantId",((Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IFluxConfigurationPropertiesInternal)this).ServicePrincipalTenantId, global::System.Convert.ToString);
            }
            if (content.Contains("ServicePrincipalClientSecret"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IFluxConfigurationPropertiesInternal)this).ServicePrincipalClientSecret = (string) content.GetValueForProperty("ServicePrincipalClientSecret",((Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IFluxConfigurationPropertiesInternal)this).ServicePrincipalClientSecret, global::System.Convert.ToString);
            }
            if (content.Contains("ServicePrincipalClientCertificate"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IFluxConfigurationPropertiesInternal)this).ServicePrincipalClientCertificate = (string) content.GetValueForProperty("ServicePrincipalClientCertificate",((Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IFluxConfigurationPropertiesInternal)this).ServicePrincipalClientCertificate, global::System.Convert.ToString);
            }
            if (content.Contains("ServicePrincipalClientCertificatePassword"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IFluxConfigurationPropertiesInternal)this).ServicePrincipalClientCertificatePassword = (string) content.GetValueForProperty("ServicePrincipalClientCertificatePassword",((Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IFluxConfigurationPropertiesInternal)this).ServicePrincipalClientCertificatePassword, global::System.Convert.ToString);
            }
            if (content.Contains("ServicePrincipalClientCertificateSendChain"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IFluxConfigurationPropertiesInternal)this).ServicePrincipalClientCertificateSendChain = (bool?) content.GetValueForProperty("ServicePrincipalClientCertificateSendChain",((Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IFluxConfigurationPropertiesInternal)this).ServicePrincipalClientCertificateSendChain, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("ManagedIdentityClientId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IFluxConfigurationPropertiesInternal)this).ManagedIdentityClientId = (string) content.GetValueForProperty("ManagedIdentityClientId",((Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IFluxConfigurationPropertiesInternal)this).ManagedIdentityClientId, global::System.Convert.ToString);
            }
            AfterDeserializeDictionary(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Management.Automation.PSObject" /> into a new instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.FluxConfigurationProperties"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        internal FluxConfigurationProperties(global::System.Management.Automation.PSObject content)
        {
            bool returnNow = false;
            BeforeDeserializePSObject(content, ref returnNow);
            if (returnNow)
            {
                return;
            }
            // actually deserialize
            if (content.Contains("GitRepository"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IFluxConfigurationPropertiesInternal)this).GitRepository = (Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IGitRepositoryDefinition) content.GetValueForProperty("GitRepository",((Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IFluxConfigurationPropertiesInternal)this).GitRepository, Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.GitRepositoryDefinitionTypeConverter.ConvertFrom);
            }
            if (content.Contains("Bucket"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IFluxConfigurationPropertiesInternal)this).Bucket = (Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IBucketDefinition) content.GetValueForProperty("Bucket",((Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IFluxConfigurationPropertiesInternal)this).Bucket, Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.BucketDefinitionTypeConverter.ConvertFrom);
            }
            if (content.Contains("AzureBlob"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IFluxConfigurationPropertiesInternal)this).AzureBlob = (Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IAzureBlobDefinition) content.GetValueForProperty("AzureBlob",((Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IFluxConfigurationPropertiesInternal)this).AzureBlob, Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.AzureBlobDefinitionTypeConverter.ConvertFrom);
            }
            if (content.Contains("Scope"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IFluxConfigurationPropertiesInternal)this).Scope = (Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Support.ScopeType?) content.GetValueForProperty("Scope",((Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IFluxConfigurationPropertiesInternal)this).Scope, Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Support.ScopeType.CreateFrom);
            }
            if (content.Contains("Namespace"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IFluxConfigurationPropertiesInternal)this).Namespace = (string) content.GetValueForProperty("Namespace",((Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IFluxConfigurationPropertiesInternal)this).Namespace, global::System.Convert.ToString);
            }
            if (content.Contains("SourceKind"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IFluxConfigurationPropertiesInternal)this).SourceKind = (Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Support.SourceKindType?) content.GetValueForProperty("SourceKind",((Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IFluxConfigurationPropertiesInternal)this).SourceKind, Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Support.SourceKindType.CreateFrom);
            }
            if (content.Contains("Suspend"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IFluxConfigurationPropertiesInternal)this).Suspend = (bool?) content.GetValueForProperty("Suspend",((Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IFluxConfigurationPropertiesInternal)this).Suspend, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("Kustomization"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IFluxConfigurationPropertiesInternal)this).Kustomization = (Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IFluxConfigurationPropertiesKustomizations) content.GetValueForProperty("Kustomization",((Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IFluxConfigurationPropertiesInternal)this).Kustomization, Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.FluxConfigurationPropertiesKustomizationsTypeConverter.ConvertFrom);
            }
            if (content.Contains("ConfigurationProtectedSetting"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IFluxConfigurationPropertiesInternal)this).ConfigurationProtectedSetting = (Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IFluxConfigurationPropertiesConfigurationProtectedSettings) content.GetValueForProperty("ConfigurationProtectedSetting",((Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IFluxConfigurationPropertiesInternal)this).ConfigurationProtectedSetting, Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.FluxConfigurationPropertiesConfigurationProtectedSettingsTypeConverter.ConvertFrom);
            }
            if (content.Contains("Statuses"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IFluxConfigurationPropertiesInternal)this).Statuses = (Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IObjectStatusDefinition[]) content.GetValueForProperty("Statuses",((Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IFluxConfigurationPropertiesInternal)this).Statuses, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IObjectStatusDefinition>(__y, Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.ObjectStatusDefinitionTypeConverter.ConvertFrom));
            }
            if (content.Contains("RepositoryPublicKey"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IFluxConfigurationPropertiesInternal)this).RepositoryPublicKey = (string) content.GetValueForProperty("RepositoryPublicKey",((Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IFluxConfigurationPropertiesInternal)this).RepositoryPublicKey, global::System.Convert.ToString);
            }
            if (content.Contains("SourceSyncedCommitId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IFluxConfigurationPropertiesInternal)this).SourceSyncedCommitId = (string) content.GetValueForProperty("SourceSyncedCommitId",((Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IFluxConfigurationPropertiesInternal)this).SourceSyncedCommitId, global::System.Convert.ToString);
            }
            if (content.Contains("SourceUpdatedAt"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IFluxConfigurationPropertiesInternal)this).SourceUpdatedAt = (global::System.DateTime?) content.GetValueForProperty("SourceUpdatedAt",((Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IFluxConfigurationPropertiesInternal)this).SourceUpdatedAt, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            if (content.Contains("StatusUpdatedAt"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IFluxConfigurationPropertiesInternal)this).StatusUpdatedAt = (global::System.DateTime?) content.GetValueForProperty("StatusUpdatedAt",((Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IFluxConfigurationPropertiesInternal)this).StatusUpdatedAt, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            if (content.Contains("ComplianceState"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IFluxConfigurationPropertiesInternal)this).ComplianceState = (Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Support.FluxComplianceState?) content.GetValueForProperty("ComplianceState",((Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IFluxConfigurationPropertiesInternal)this).ComplianceState, Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Support.FluxComplianceState.CreateFrom);
            }
            if (content.Contains("ProvisioningState"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IFluxConfigurationPropertiesInternal)this).ProvisioningState = (Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Support.ProvisioningState?) content.GetValueForProperty("ProvisioningState",((Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IFluxConfigurationPropertiesInternal)this).ProvisioningState, Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Support.ProvisioningState.CreateFrom);
            }
            if (content.Contains("ErrorMessage"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IFluxConfigurationPropertiesInternal)this).ErrorMessage = (string) content.GetValueForProperty("ErrorMessage",((Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IFluxConfigurationPropertiesInternal)this).ErrorMessage, global::System.Convert.ToString);
            }
            if (content.Contains("GitRepositoryRef"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IFluxConfigurationPropertiesInternal)this).GitRepositoryRef = (Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IRepositoryRefDefinition) content.GetValueForProperty("GitRepositoryRef",((Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IFluxConfigurationPropertiesInternal)this).GitRepositoryRef, Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.RepositoryRefDefinitionTypeConverter.ConvertFrom);
            }
            if (content.Contains("GitRepositoryUrl"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IFluxConfigurationPropertiesInternal)this).GitRepositoryUrl = (string) content.GetValueForProperty("GitRepositoryUrl",((Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IFluxConfigurationPropertiesInternal)this).GitRepositoryUrl, global::System.Convert.ToString);
            }
            if (content.Contains("GitRepositoryTimeoutInSecond"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IFluxConfigurationPropertiesInternal)this).GitRepositoryTimeoutInSecond = (long?) content.GetValueForProperty("GitRepositoryTimeoutInSecond",((Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IFluxConfigurationPropertiesInternal)this).GitRepositoryTimeoutInSecond, (__y)=> (long) global::System.Convert.ChangeType(__y, typeof(long)));
            }
            if (content.Contains("GitRepositorySyncIntervalInSecond"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IFluxConfigurationPropertiesInternal)this).GitRepositorySyncIntervalInSecond = (long?) content.GetValueForProperty("GitRepositorySyncIntervalInSecond",((Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IFluxConfigurationPropertiesInternal)this).GitRepositorySyncIntervalInSecond, (__y)=> (long) global::System.Convert.ChangeType(__y, typeof(long)));
            }
            if (content.Contains("GitRepositorySshKnownHost"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IFluxConfigurationPropertiesInternal)this).GitRepositorySshKnownHost = (string) content.GetValueForProperty("GitRepositorySshKnownHost",((Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IFluxConfigurationPropertiesInternal)this).GitRepositorySshKnownHost, global::System.Convert.ToString);
            }
            if (content.Contains("GitRepositoryHttpsUser"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IFluxConfigurationPropertiesInternal)this).GitRepositoryHttpsUser = (string) content.GetValueForProperty("GitRepositoryHttpsUser",((Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IFluxConfigurationPropertiesInternal)this).GitRepositoryHttpsUser, global::System.Convert.ToString);
            }
            if (content.Contains("GitRepositoryHttpsCaCert"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IFluxConfigurationPropertiesInternal)this).GitRepositoryHttpsCaCert = (string) content.GetValueForProperty("GitRepositoryHttpsCaCert",((Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IFluxConfigurationPropertiesInternal)this).GitRepositoryHttpsCaCert, global::System.Convert.ToString);
            }
            if (content.Contains("GitRepositoryLocalAuthRef"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IFluxConfigurationPropertiesInternal)this).GitRepositoryLocalAuthRef = (string) content.GetValueForProperty("GitRepositoryLocalAuthRef",((Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IFluxConfigurationPropertiesInternal)this).GitRepositoryLocalAuthRef, global::System.Convert.ToString);
            }
            if (content.Contains("BucketUrl"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IFluxConfigurationPropertiesInternal)this).BucketUrl = (string) content.GetValueForProperty("BucketUrl",((Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IFluxConfigurationPropertiesInternal)this).BucketUrl, global::System.Convert.ToString);
            }
            if (content.Contains("BucketName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IFluxConfigurationPropertiesInternal)this).BucketName = (string) content.GetValueForProperty("BucketName",((Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IFluxConfigurationPropertiesInternal)this).BucketName, global::System.Convert.ToString);
            }
            if (content.Contains("BucketInsecure"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IFluxConfigurationPropertiesInternal)this).BucketInsecure = (bool?) content.GetValueForProperty("BucketInsecure",((Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IFluxConfigurationPropertiesInternal)this).BucketInsecure, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("BucketTimeoutInSecond"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IFluxConfigurationPropertiesInternal)this).BucketTimeoutInSecond = (long?) content.GetValueForProperty("BucketTimeoutInSecond",((Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IFluxConfigurationPropertiesInternal)this).BucketTimeoutInSecond, (__y)=> (long) global::System.Convert.ChangeType(__y, typeof(long)));
            }
            if (content.Contains("BucketSyncIntervalInSecond"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IFluxConfigurationPropertiesInternal)this).BucketSyncIntervalInSecond = (long?) content.GetValueForProperty("BucketSyncIntervalInSecond",((Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IFluxConfigurationPropertiesInternal)this).BucketSyncIntervalInSecond, (__y)=> (long) global::System.Convert.ChangeType(__y, typeof(long)));
            }
            if (content.Contains("BucketAccessKey"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IFluxConfigurationPropertiesInternal)this).BucketAccessKey = (System.Security.SecureString) content.GetValueForProperty("BucketAccessKey",((Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IFluxConfigurationPropertiesInternal)this).BucketAccessKey, (object ss) => (System.Security.SecureString)ss);
            }
            if (content.Contains("BucketLocalAuthRef"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IFluxConfigurationPropertiesInternal)this).BucketLocalAuthRef = (string) content.GetValueForProperty("BucketLocalAuthRef",((Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IFluxConfigurationPropertiesInternal)this).BucketLocalAuthRef, global::System.Convert.ToString);
            }
            if (content.Contains("AzureBlobServicePrincipal"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IFluxConfigurationPropertiesInternal)this).AzureBlobServicePrincipal = (Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IServicePrincipalDefinition) content.GetValueForProperty("AzureBlobServicePrincipal",((Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IFluxConfigurationPropertiesInternal)this).AzureBlobServicePrincipal, Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.ServicePrincipalDefinitionTypeConverter.ConvertFrom);
            }
            if (content.Contains("AzureBlobManagedIdentity"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IFluxConfigurationPropertiesInternal)this).AzureBlobManagedIdentity = (Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IManagedIdentityDefinition) content.GetValueForProperty("AzureBlobManagedIdentity",((Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IFluxConfigurationPropertiesInternal)this).AzureBlobManagedIdentity, Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.ManagedIdentityDefinitionTypeConverter.ConvertFrom);
            }
            if (content.Contains("AzureBlobUrl"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IFluxConfigurationPropertiesInternal)this).AzureBlobUrl = (string) content.GetValueForProperty("AzureBlobUrl",((Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IFluxConfigurationPropertiesInternal)this).AzureBlobUrl, global::System.Convert.ToString);
            }
            if (content.Contains("AzureBlobContainerName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IFluxConfigurationPropertiesInternal)this).AzureBlobContainerName = (string) content.GetValueForProperty("AzureBlobContainerName",((Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IFluxConfigurationPropertiesInternal)this).AzureBlobContainerName, global::System.Convert.ToString);
            }
            if (content.Contains("AzureBlobTimeoutInSecond"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IFluxConfigurationPropertiesInternal)this).AzureBlobTimeoutInSecond = (long?) content.GetValueForProperty("AzureBlobTimeoutInSecond",((Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IFluxConfigurationPropertiesInternal)this).AzureBlobTimeoutInSecond, (__y)=> (long) global::System.Convert.ChangeType(__y, typeof(long)));
            }
            if (content.Contains("AzureBlobSyncIntervalInSecond"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IFluxConfigurationPropertiesInternal)this).AzureBlobSyncIntervalInSecond = (long?) content.GetValueForProperty("AzureBlobSyncIntervalInSecond",((Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IFluxConfigurationPropertiesInternal)this).AzureBlobSyncIntervalInSecond, (__y)=> (long) global::System.Convert.ChangeType(__y, typeof(long)));
            }
            if (content.Contains("AzureBlobAccountKey"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IFluxConfigurationPropertiesInternal)this).AzureBlobAccountKey = (string) content.GetValueForProperty("AzureBlobAccountKey",((Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IFluxConfigurationPropertiesInternal)this).AzureBlobAccountKey, global::System.Convert.ToString);
            }
            if (content.Contains("AzureBlobSasToken"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IFluxConfigurationPropertiesInternal)this).AzureBlobSasToken = (string) content.GetValueForProperty("AzureBlobSasToken",((Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IFluxConfigurationPropertiesInternal)this).AzureBlobSasToken, global::System.Convert.ToString);
            }
            if (content.Contains("AzureBlobLocalAuthRef"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IFluxConfigurationPropertiesInternal)this).AzureBlobLocalAuthRef = (string) content.GetValueForProperty("AzureBlobLocalAuthRef",((Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IFluxConfigurationPropertiesInternal)this).AzureBlobLocalAuthRef, global::System.Convert.ToString);
            }
            if (content.Contains("RepositoryRefBranch"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IFluxConfigurationPropertiesInternal)this).RepositoryRefBranch = (string) content.GetValueForProperty("RepositoryRefBranch",((Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IFluxConfigurationPropertiesInternal)this).RepositoryRefBranch, global::System.Convert.ToString);
            }
            if (content.Contains("RepositoryRefTag"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IFluxConfigurationPropertiesInternal)this).RepositoryRefTag = (string) content.GetValueForProperty("RepositoryRefTag",((Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IFluxConfigurationPropertiesInternal)this).RepositoryRefTag, global::System.Convert.ToString);
            }
            if (content.Contains("RepositoryRefSemver"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IFluxConfigurationPropertiesInternal)this).RepositoryRefSemver = (string) content.GetValueForProperty("RepositoryRefSemver",((Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IFluxConfigurationPropertiesInternal)this).RepositoryRefSemver, global::System.Convert.ToString);
            }
            if (content.Contains("RepositoryRefCommit"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IFluxConfigurationPropertiesInternal)this).RepositoryRefCommit = (string) content.GetValueForProperty("RepositoryRefCommit",((Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IFluxConfigurationPropertiesInternal)this).RepositoryRefCommit, global::System.Convert.ToString);
            }
            if (content.Contains("ServicePrincipalClientId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IFluxConfigurationPropertiesInternal)this).ServicePrincipalClientId = (string) content.GetValueForProperty("ServicePrincipalClientId",((Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IFluxConfigurationPropertiesInternal)this).ServicePrincipalClientId, global::System.Convert.ToString);
            }
            if (content.Contains("ServicePrincipalTenantId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IFluxConfigurationPropertiesInternal)this).ServicePrincipalTenantId = (string) content.GetValueForProperty("ServicePrincipalTenantId",((Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IFluxConfigurationPropertiesInternal)this).ServicePrincipalTenantId, global::System.Convert.ToString);
            }
            if (content.Contains("ServicePrincipalClientSecret"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IFluxConfigurationPropertiesInternal)this).ServicePrincipalClientSecret = (string) content.GetValueForProperty("ServicePrincipalClientSecret",((Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IFluxConfigurationPropertiesInternal)this).ServicePrincipalClientSecret, global::System.Convert.ToString);
            }
            if (content.Contains("ServicePrincipalClientCertificate"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IFluxConfigurationPropertiesInternal)this).ServicePrincipalClientCertificate = (string) content.GetValueForProperty("ServicePrincipalClientCertificate",((Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IFluxConfigurationPropertiesInternal)this).ServicePrincipalClientCertificate, global::System.Convert.ToString);
            }
            if (content.Contains("ServicePrincipalClientCertificatePassword"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IFluxConfigurationPropertiesInternal)this).ServicePrincipalClientCertificatePassword = (string) content.GetValueForProperty("ServicePrincipalClientCertificatePassword",((Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IFluxConfigurationPropertiesInternal)this).ServicePrincipalClientCertificatePassword, global::System.Convert.ToString);
            }
            if (content.Contains("ServicePrincipalClientCertificateSendChain"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IFluxConfigurationPropertiesInternal)this).ServicePrincipalClientCertificateSendChain = (bool?) content.GetValueForProperty("ServicePrincipalClientCertificateSendChain",((Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IFluxConfigurationPropertiesInternal)this).ServicePrincipalClientCertificateSendChain, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("ManagedIdentityClientId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IFluxConfigurationPropertiesInternal)this).ManagedIdentityClientId = (string) content.GetValueForProperty("ManagedIdentityClientId",((Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IFluxConfigurationPropertiesInternal)this).ManagedIdentityClientId, global::System.Convert.ToString);
            }
            AfterDeserializePSObject(content);
        }

        /// <summary>
        /// Creates a new instance of <see cref="FluxConfigurationProperties" />, deserializing the content from a json string.
        /// </summary>
        /// <param name="jsonText">a string containing a JSON serialized instance of this model.</param>
        /// <returns>an instance of the <see cref="FluxConfigurationProperties" /> model class.</returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IFluxConfigurationProperties FromJsonString(string jsonText) => FromJson(Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Runtime.Json.JsonNode.Parse(jsonText));

        /// <summary>Serializes this instance to a json string.</summary>

        /// <returns>a <see cref="System.String" /> containing this model serialized to JSON text.</returns>
        public string ToJsonString() => ToJson(null, Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Runtime.SerializationMode.IncludeAll)?.ToString();

        public override string ToString()
        {
            var returnNow = false;
            var result = global::System.String.Empty;
            OverrideToString(ref result, ref returnNow);
            if (returnNow)
            {
                return result;
            }
            return ToJsonString();
        }
    }
    /// Properties to create a Flux Configuration resource
    [System.ComponentModel.TypeConverter(typeof(FluxConfigurationPropertiesTypeConverter))]
    public partial interface IFluxConfigurationProperties

    {

    }
}