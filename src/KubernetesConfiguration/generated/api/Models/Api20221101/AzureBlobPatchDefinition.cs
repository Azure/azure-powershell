// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101
{
    using static Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Runtime.Extensions;

    /// <summary>Parameters to reconcile to the AzureBlob source kind type.</summary>
    public partial class AzureBlobPatchDefinition :
        Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IAzureBlobPatchDefinition,
        Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IAzureBlobPatchDefinitionInternal
    {

        /// <summary>Backing field for <see cref="AccountKey" /> property.</summary>
        private string _accountKey;

        /// <summary>The account key (shared key) to access the storage account</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Origin(Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.PropertyOrigin.Owned)]
        public string AccountKey { get => this._accountKey; set => this._accountKey = value; }

        /// <summary>Backing field for <see cref="ContainerName" /> property.</summary>
        private string _containerName;

        /// <summary>
        /// The Azure Blob container name to sync from the url endpoint for the flux configuration.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Origin(Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.PropertyOrigin.Owned)]
        public string ContainerName { get => this._containerName; set => this._containerName = value; }

        /// <summary>Backing field for <see cref="LocalAuthRef" /> property.</summary>
        private string _localAuthRef;

        /// <summary>
        /// Name of a local secret on the Kubernetes cluster to use as the authentication secret rather than the managed or user-provided
        /// configuration secrets.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Origin(Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.PropertyOrigin.Owned)]
        public string LocalAuthRef { get => this._localAuthRef; set => this._localAuthRef = value; }

        /// <summary>Backing field for <see cref="ManagedIdentity" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IManagedIdentityPatchDefinition _managedIdentity;

        /// <summary>Parameters to authenticate using a Managed Identity.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Origin(Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IManagedIdentityPatchDefinition ManagedIdentity { get => (this._managedIdentity = this._managedIdentity ?? new Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.ManagedIdentityPatchDefinition()); set => this._managedIdentity = value; }

        /// <summary>The client Id for authenticating a Managed Identity.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Origin(Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.PropertyOrigin.Inlined)]
        public string ManagedIdentityClientId { get => ((Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IManagedIdentityPatchDefinitionInternal)ManagedIdentity).ClientId; set => ((Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IManagedIdentityPatchDefinitionInternal)ManagedIdentity).ClientId = value ?? null; }

        /// <summary>Internal Acessors for ManagedIdentity</summary>
        Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IManagedIdentityPatchDefinition Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IAzureBlobPatchDefinitionInternal.ManagedIdentity { get => (this._managedIdentity = this._managedIdentity ?? new Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.ManagedIdentityPatchDefinition()); set { {_managedIdentity = value;} } }

        /// <summary>Internal Acessors for ServicePrincipal</summary>
        Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IServicePrincipalPatchDefinition Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IAzureBlobPatchDefinitionInternal.ServicePrincipal { get => (this._servicePrincipal = this._servicePrincipal ?? new Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.ServicePrincipalPatchDefinition()); set { {_servicePrincipal = value;} } }

        /// <summary>Backing field for <see cref="SasToken" /> property.</summary>
        private string _sasToken;

        /// <summary>The Shared Access token to access the storage container</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Origin(Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.PropertyOrigin.Owned)]
        public string SasToken { get => this._sasToken; set => this._sasToken = value; }

        /// <summary>Backing field for <see cref="ServicePrincipal" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IServicePrincipalPatchDefinition _servicePrincipal;

        /// <summary>Parameters to authenticate using Service Principal.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Origin(Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IServicePrincipalPatchDefinition ServicePrincipal { get => (this._servicePrincipal = this._servicePrincipal ?? new Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.ServicePrincipalPatchDefinition()); set => this._servicePrincipal = value; }

        /// <summary>Base64-encoded certificate used to authenticate a Service Principal</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Origin(Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.PropertyOrigin.Inlined)]
        public string ServicePrincipalClientCertificate { get => ((Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IServicePrincipalPatchDefinitionInternal)ServicePrincipal).ClientCertificate; set => ((Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IServicePrincipalPatchDefinitionInternal)ServicePrincipal).ClientCertificate = value ?? null; }

        /// <summary>The password for the certificate used to authenticate a Service Principal</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Origin(Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.PropertyOrigin.Inlined)]
        public string ServicePrincipalClientCertificatePassword { get => ((Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IServicePrincipalPatchDefinitionInternal)ServicePrincipal).ClientCertificatePassword; set => ((Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IServicePrincipalPatchDefinitionInternal)ServicePrincipal).ClientCertificatePassword = value ?? null; }

        /// <summary>
        /// Specifies whether to include x5c header in client claims when acquiring a token to enable subject name / issuer based
        /// authentication for the Client Certificate
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Origin(Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.PropertyOrigin.Inlined)]
        public bool? ServicePrincipalClientCertificateSendChain { get => ((Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IServicePrincipalPatchDefinitionInternal)ServicePrincipal).ClientCertificateSendChain; set => ((Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IServicePrincipalPatchDefinitionInternal)ServicePrincipal).ClientCertificateSendChain = value ?? default(bool); }

        /// <summary>The client Id for authenticating a Service Principal.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Origin(Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.PropertyOrigin.Inlined)]
        public string ServicePrincipalClientId { get => ((Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IServicePrincipalPatchDefinitionInternal)ServicePrincipal).ClientId; set => ((Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IServicePrincipalPatchDefinitionInternal)ServicePrincipal).ClientId = value ?? null; }

        /// <summary>The client secret for authenticating a Service Principal</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Origin(Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.PropertyOrigin.Inlined)]
        public string ServicePrincipalClientSecret { get => ((Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IServicePrincipalPatchDefinitionInternal)ServicePrincipal).ClientSecret; set => ((Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IServicePrincipalPatchDefinitionInternal)ServicePrincipal).ClientSecret = value ?? null; }

        /// <summary>The tenant Id for authenticating a Service Principal</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Origin(Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.PropertyOrigin.Inlined)]
        public string ServicePrincipalTenantId { get => ((Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IServicePrincipalPatchDefinitionInternal)ServicePrincipal).TenantId; set => ((Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IServicePrincipalPatchDefinitionInternal)ServicePrincipal).TenantId = value ?? null; }

        /// <summary>Backing field for <see cref="SyncIntervalInSecond" /> property.</summary>
        private long? _syncIntervalInSecond;

        /// <summary>
        /// The interval at which to re-reconcile the cluster Azure Blob source with the remote.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Origin(Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.PropertyOrigin.Owned)]
        public long? SyncIntervalInSecond { get => this._syncIntervalInSecond; set => this._syncIntervalInSecond = value; }

        /// <summary>Backing field for <see cref="TimeoutInSecond" /> property.</summary>
        private long? _timeoutInSecond;

        /// <summary>
        /// The maximum time to attempt to reconcile the cluster Azure Blob source with the remote.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Origin(Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.PropertyOrigin.Owned)]
        public long? TimeoutInSecond { get => this._timeoutInSecond; set => this._timeoutInSecond = value; }

        /// <summary>Backing field for <see cref="Url" /> property.</summary>
        private string _url;

        /// <summary>The URL to sync for the flux configuration Azure Blob storage account.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Origin(Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.PropertyOrigin.Owned)]
        public string Url { get => this._url; set => this._url = value; }

        /// <summary>Creates an new <see cref="AzureBlobPatchDefinition" /> instance.</summary>
        public AzureBlobPatchDefinition()
        {

        }
    }
    /// Parameters to reconcile to the AzureBlob source kind type.
    public partial interface IAzureBlobPatchDefinition :
        Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Runtime.IJsonSerializable
    {
        /// <summary>The account key (shared key) to access the storage account</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The account key (shared key) to access the storage account",
        SerializedName = @"accountKey",
        PossibleTypes = new [] { typeof(string) })]
        string AccountKey { get; set; }
        /// <summary>
        /// The Azure Blob container name to sync from the url endpoint for the flux configuration.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The Azure Blob container name to sync from the url endpoint for the flux configuration.",
        SerializedName = @"containerName",
        PossibleTypes = new [] { typeof(string) })]
        string ContainerName { get; set; }
        /// <summary>
        /// Name of a local secret on the Kubernetes cluster to use as the authentication secret rather than the managed or user-provided
        /// configuration secrets.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Name of a local secret on the Kubernetes cluster to use as the authentication secret rather than the managed or user-provided configuration secrets.",
        SerializedName = @"localAuthRef",
        PossibleTypes = new [] { typeof(string) })]
        string LocalAuthRef { get; set; }
        /// <summary>The client Id for authenticating a Managed Identity.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The client Id for authenticating a Managed Identity.",
        SerializedName = @"clientId",
        PossibleTypes = new [] { typeof(string) })]
        string ManagedIdentityClientId { get; set; }
        /// <summary>The Shared Access token to access the storage container</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The Shared Access token to access the storage container",
        SerializedName = @"sasToken",
        PossibleTypes = new [] { typeof(string) })]
        string SasToken { get; set; }
        /// <summary>Base64-encoded certificate used to authenticate a Service Principal</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Base64-encoded certificate used to authenticate a Service Principal ",
        SerializedName = @"clientCertificate",
        PossibleTypes = new [] { typeof(string) })]
        string ServicePrincipalClientCertificate { get; set; }
        /// <summary>The password for the certificate used to authenticate a Service Principal</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The password for the certificate used to authenticate a Service Principal ",
        SerializedName = @"clientCertificatePassword",
        PossibleTypes = new [] { typeof(string) })]
        string ServicePrincipalClientCertificatePassword { get; set; }
        /// <summary>
        /// Specifies whether to include x5c header in client claims when acquiring a token to enable subject name / issuer based
        /// authentication for the Client Certificate
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Specifies whether to include x5c header in client claims when acquiring a token to enable subject name / issuer based authentication for the Client Certificate",
        SerializedName = @"clientCertificateSendChain",
        PossibleTypes = new [] { typeof(bool) })]
        bool? ServicePrincipalClientCertificateSendChain { get; set; }
        /// <summary>The client Id for authenticating a Service Principal.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The client Id for authenticating a Service Principal.",
        SerializedName = @"clientId",
        PossibleTypes = new [] { typeof(string) })]
        string ServicePrincipalClientId { get; set; }
        /// <summary>The client secret for authenticating a Service Principal</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The client secret for authenticating a Service Principal",
        SerializedName = @"clientSecret",
        PossibleTypes = new [] { typeof(string) })]
        string ServicePrincipalClientSecret { get; set; }
        /// <summary>The tenant Id for authenticating a Service Principal</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The tenant Id for authenticating a Service Principal",
        SerializedName = @"tenantId",
        PossibleTypes = new [] { typeof(string) })]
        string ServicePrincipalTenantId { get; set; }
        /// <summary>
        /// The interval at which to re-reconcile the cluster Azure Blob source with the remote.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The interval at which to re-reconcile the cluster Azure Blob source with the remote.",
        SerializedName = @"syncIntervalInSeconds",
        PossibleTypes = new [] { typeof(long) })]
        long? SyncIntervalInSecond { get; set; }
        /// <summary>
        /// The maximum time to attempt to reconcile the cluster Azure Blob source with the remote.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The maximum time to attempt to reconcile the cluster Azure Blob source with the remote.",
        SerializedName = @"timeoutInSeconds",
        PossibleTypes = new [] { typeof(long) })]
        long? TimeoutInSecond { get; set; }
        /// <summary>The URL to sync for the flux configuration Azure Blob storage account.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The URL to sync for the flux configuration Azure Blob storage account.",
        SerializedName = @"url",
        PossibleTypes = new [] { typeof(string) })]
        string Url { get; set; }

    }
    /// Parameters to reconcile to the AzureBlob source kind type.
    internal partial interface IAzureBlobPatchDefinitionInternal

    {
        /// <summary>The account key (shared key) to access the storage account</summary>
        string AccountKey { get; set; }
        /// <summary>
        /// The Azure Blob container name to sync from the url endpoint for the flux configuration.
        /// </summary>
        string ContainerName { get; set; }
        /// <summary>
        /// Name of a local secret on the Kubernetes cluster to use as the authentication secret rather than the managed or user-provided
        /// configuration secrets.
        /// </summary>
        string LocalAuthRef { get; set; }
        /// <summary>Parameters to authenticate using a Managed Identity.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IManagedIdentityPatchDefinition ManagedIdentity { get; set; }
        /// <summary>The client Id for authenticating a Managed Identity.</summary>
        string ManagedIdentityClientId { get; set; }
        /// <summary>The Shared Access token to access the storage container</summary>
        string SasToken { get; set; }
        /// <summary>Parameters to authenticate using Service Principal.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IServicePrincipalPatchDefinition ServicePrincipal { get; set; }
        /// <summary>Base64-encoded certificate used to authenticate a Service Principal</summary>
        string ServicePrincipalClientCertificate { get; set; }
        /// <summary>The password for the certificate used to authenticate a Service Principal</summary>
        string ServicePrincipalClientCertificatePassword { get; set; }
        /// <summary>
        /// Specifies whether to include x5c header in client claims when acquiring a token to enable subject name / issuer based
        /// authentication for the Client Certificate
        /// </summary>
        bool? ServicePrincipalClientCertificateSendChain { get; set; }
        /// <summary>The client Id for authenticating a Service Principal.</summary>
        string ServicePrincipalClientId { get; set; }
        /// <summary>The client secret for authenticating a Service Principal</summary>
        string ServicePrincipalClientSecret { get; set; }
        /// <summary>The tenant Id for authenticating a Service Principal</summary>
        string ServicePrincipalTenantId { get; set; }
        /// <summary>
        /// The interval at which to re-reconcile the cluster Azure Blob source with the remote.
        /// </summary>
        long? SyncIntervalInSecond { get; set; }
        /// <summary>
        /// The maximum time to attempt to reconcile the cluster Azure Blob source with the remote.
        /// </summary>
        long? TimeoutInSecond { get; set; }
        /// <summary>The URL to sync for the flux configuration Azure Blob storage account.</summary>
        string Url { get; set; }

    }
}