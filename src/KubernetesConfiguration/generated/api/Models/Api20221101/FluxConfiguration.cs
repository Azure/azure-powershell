// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101
{
    using static Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Runtime.Extensions;

    /// <summary>The Flux Configuration object returned in Get & Put response.</summary>
    public partial class FluxConfiguration :
        Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IFluxConfiguration,
        Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IFluxConfigurationInternal,
        Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Runtime.IValidates
    {
        /// <summary>
        /// Backing field for Inherited model <see cref= "Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20.IResource"
        /// />
        /// </summary>
        private Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20.IResource __resource = new Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20.Resource();

        /// <summary>The account key (shared key) to access the storage account</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Origin(Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.PropertyOrigin.Inlined)]
        public string AzureBlobAccountKey { get => ((Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IFluxConfigurationPropertiesInternal)Property).AzureBlobAccountKey; set => ((Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IFluxConfigurationPropertiesInternal)Property).AzureBlobAccountKey = value ?? null; }

        /// <summary>
        /// The Azure Blob container name to sync from the url endpoint for the flux configuration.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Origin(Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.PropertyOrigin.Inlined)]
        public string AzureBlobContainerName { get => ((Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IFluxConfigurationPropertiesInternal)Property).AzureBlobContainerName; set => ((Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IFluxConfigurationPropertiesInternal)Property).AzureBlobContainerName = value ?? null; }

        /// <summary>
        /// Name of a local secret on the Kubernetes cluster to use as the authentication secret rather than the managed or user-provided
        /// configuration secrets.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Origin(Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.PropertyOrigin.Inlined)]
        public string AzureBlobLocalAuthRef { get => ((Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IFluxConfigurationPropertiesInternal)Property).AzureBlobLocalAuthRef; set => ((Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IFluxConfigurationPropertiesInternal)Property).AzureBlobLocalAuthRef = value ?? null; }

        /// <summary>The Shared Access token to access the storage container</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Origin(Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.PropertyOrigin.Inlined)]
        public string AzureBlobSasToken { get => ((Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IFluxConfigurationPropertiesInternal)Property).AzureBlobSasToken; set => ((Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IFluxConfigurationPropertiesInternal)Property).AzureBlobSasToken = value ?? null; }

        /// <summary>
        /// The interval at which to re-reconcile the cluster Azure Blob source with the remote.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Origin(Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.PropertyOrigin.Inlined)]
        public long? AzureBlobSyncIntervalInSecond { get => ((Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IFluxConfigurationPropertiesInternal)Property).AzureBlobSyncIntervalInSecond; set => ((Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IFluxConfigurationPropertiesInternal)Property).AzureBlobSyncIntervalInSecond = value ?? default(long); }

        /// <summary>
        /// The maximum time to attempt to reconcile the cluster Azure Blob source with the remote.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Origin(Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.PropertyOrigin.Inlined)]
        public long? AzureBlobTimeoutInSecond { get => ((Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IFluxConfigurationPropertiesInternal)Property).AzureBlobTimeoutInSecond; set => ((Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IFluxConfigurationPropertiesInternal)Property).AzureBlobTimeoutInSecond = value ?? default(long); }

        /// <summary>The URL to sync for the flux configuration Azure Blob storage account.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Origin(Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.PropertyOrigin.Inlined)]
        public string AzureBlobUrl { get => ((Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IFluxConfigurationPropertiesInternal)Property).AzureBlobUrl; set => ((Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IFluxConfigurationPropertiesInternal)Property).AzureBlobUrl = value ?? null; }

        /// <summary>Plaintext access key used to securely access the S3 bucket</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Origin(Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.PropertyOrigin.Inlined)]
        public System.Security.SecureString BucketAccessKey { get => ((Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IFluxConfigurationPropertiesInternal)Property).BucketAccessKey; set => ((Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IFluxConfigurationPropertiesInternal)Property).BucketAccessKey = value ?? null; }

        /// <summary>
        /// Specify whether to use insecure communication when puling data from the S3 bucket.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Origin(Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.PropertyOrigin.Inlined)]
        public bool? BucketInsecure { get => ((Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IFluxConfigurationPropertiesInternal)Property).BucketInsecure; set => ((Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IFluxConfigurationPropertiesInternal)Property).BucketInsecure = value ?? default(bool); }

        /// <summary>
        /// Name of a local secret on the Kubernetes cluster to use as the authentication secret rather than the managed or user-provided
        /// configuration secrets.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Origin(Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.PropertyOrigin.Inlined)]
        public string BucketLocalAuthRef { get => ((Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IFluxConfigurationPropertiesInternal)Property).BucketLocalAuthRef; set => ((Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IFluxConfigurationPropertiesInternal)Property).BucketLocalAuthRef = value ?? null; }

        /// <summary>The bucket name to sync from the url endpoint for the flux configuration.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Origin(Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.PropertyOrigin.Inlined)]
        public string BucketName { get => ((Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IFluxConfigurationPropertiesInternal)Property).BucketName; set => ((Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IFluxConfigurationPropertiesInternal)Property).BucketName = value ?? null; }

        /// <summary>
        /// The interval at which to re-reconcile the cluster bucket source with the remote.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Origin(Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.PropertyOrigin.Inlined)]
        public long? BucketSyncIntervalInSecond { get => ((Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IFluxConfigurationPropertiesInternal)Property).BucketSyncIntervalInSecond; set => ((Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IFluxConfigurationPropertiesInternal)Property).BucketSyncIntervalInSecond = value ?? default(long); }

        /// <summary>
        /// The maximum time to attempt to reconcile the cluster bucket source with the remote.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Origin(Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.PropertyOrigin.Inlined)]
        public long? BucketTimeoutInSecond { get => ((Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IFluxConfigurationPropertiesInternal)Property).BucketTimeoutInSecond; set => ((Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IFluxConfigurationPropertiesInternal)Property).BucketTimeoutInSecond = value ?? default(long); }

        /// <summary>The URL to sync for the flux configuration S3 bucket.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Origin(Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.PropertyOrigin.Inlined)]
        public string BucketUrl { get => ((Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IFluxConfigurationPropertiesInternal)Property).BucketUrl; set => ((Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IFluxConfigurationPropertiesInternal)Property).BucketUrl = value ?? null; }

        /// <summary>
        /// Combined status of the Flux Kubernetes resources created by the fluxConfiguration or created by the managed objects.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Origin(Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Support.FluxComplianceState? ComplianceState { get => ((Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IFluxConfigurationPropertiesInternal)Property).ComplianceState; }

        /// <summary>Key-value pairs of protected configuration settings for the configuration</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Origin(Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IFluxConfigurationPropertiesConfigurationProtectedSettings ConfigurationProtectedSetting { get => ((Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IFluxConfigurationPropertiesInternal)Property).ConfigurationProtectedSetting; set => ((Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IFluxConfigurationPropertiesInternal)Property).ConfigurationProtectedSetting = value ?? null /* model class */; }

        /// <summary>Error message returned to the user in the case of provisioning failure.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Origin(Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.PropertyOrigin.Inlined)]
        public string ErrorMessage { get => ((Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IFluxConfigurationPropertiesInternal)Property).ErrorMessage; }

        /// <summary>
        /// Base64-encoded HTTPS certificate authority contents used to access git private git repositories over HTTPS
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Origin(Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.PropertyOrigin.Inlined)]
        public string GitRepositoryHttpsCaCert { get => ((Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IFluxConfigurationPropertiesInternal)Property).GitRepositoryHttpsCaCert; set => ((Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IFluxConfigurationPropertiesInternal)Property).GitRepositoryHttpsCaCert = value ?? null; }

        /// <summary>Plaintext HTTPS username used to access private git repositories over HTTPS</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Origin(Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.PropertyOrigin.Inlined)]
        public string GitRepositoryHttpsUser { get => ((Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IFluxConfigurationPropertiesInternal)Property).GitRepositoryHttpsUser; set => ((Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IFluxConfigurationPropertiesInternal)Property).GitRepositoryHttpsUser = value ?? null; }

        /// <summary>
        /// Name of a local secret on the Kubernetes cluster to use as the authentication secret rather than the managed or user-provided
        /// configuration secrets.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Origin(Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.PropertyOrigin.Inlined)]
        public string GitRepositoryLocalAuthRef { get => ((Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IFluxConfigurationPropertiesInternal)Property).GitRepositoryLocalAuthRef; set => ((Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IFluxConfigurationPropertiesInternal)Property).GitRepositoryLocalAuthRef = value ?? null; }

        /// <summary>
        /// Base64-encoded known_hosts value containing public SSH keys required to access private git repositories over SSH
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Origin(Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.PropertyOrigin.Inlined)]
        public string GitRepositorySshKnownHost { get => ((Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IFluxConfigurationPropertiesInternal)Property).GitRepositorySshKnownHost; set => ((Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IFluxConfigurationPropertiesInternal)Property).GitRepositorySshKnownHost = value ?? null; }

        /// <summary>
        /// The interval at which to re-reconcile the cluster git repository source with the remote.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Origin(Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.PropertyOrigin.Inlined)]
        public long? GitRepositorySyncIntervalInSecond { get => ((Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IFluxConfigurationPropertiesInternal)Property).GitRepositorySyncIntervalInSecond; set => ((Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IFluxConfigurationPropertiesInternal)Property).GitRepositorySyncIntervalInSecond = value ?? default(long); }

        /// <summary>
        /// The maximum time to attempt to reconcile the cluster git repository source with the remote.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Origin(Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.PropertyOrigin.Inlined)]
        public long? GitRepositoryTimeoutInSecond { get => ((Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IFluxConfigurationPropertiesInternal)Property).GitRepositoryTimeoutInSecond; set => ((Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IFluxConfigurationPropertiesInternal)Property).GitRepositoryTimeoutInSecond = value ?? default(long); }

        /// <summary>The URL to sync for the flux configuration git repository.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Origin(Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.PropertyOrigin.Inlined)]
        public string GitRepositoryUrl { get => ((Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IFluxConfigurationPropertiesInternal)Property).GitRepositoryUrl; set => ((Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IFluxConfigurationPropertiesInternal)Property).GitRepositoryUrl = value ?? null; }

        /// <summary>
        /// Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Origin(Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.PropertyOrigin.Inherited)]
        public string Id { get => ((Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20.IResourceInternal)__resource).Id; }

        /// <summary>
        /// Array of kustomizations used to reconcile the artifact pulled by the source type on the cluster.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Origin(Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IFluxConfigurationPropertiesKustomizations Kustomization { get => ((Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IFluxConfigurationPropertiesInternal)Property).Kustomization; set => ((Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IFluxConfigurationPropertiesInternal)Property).Kustomization = value ?? null /* model class */; }

        /// <summary>The client Id for authenticating a Managed Identity.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Origin(Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.PropertyOrigin.Inlined)]
        public string ManagedIdentityClientId { get => ((Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IFluxConfigurationPropertiesInternal)Property).ManagedIdentityClientId; set => ((Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IFluxConfigurationPropertiesInternal)Property).ManagedIdentityClientId = value ?? null; }

        /// <summary>Internal Acessors for Id</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20.IResourceInternal.Id { get => ((Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20.IResourceInternal)__resource).Id; set => ((Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20.IResourceInternal)__resource).Id = value; }

        /// <summary>Internal Acessors for Name</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20.IResourceInternal.Name { get => ((Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20.IResourceInternal)__resource).Name; set => ((Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20.IResourceInternal)__resource).Name = value; }

        /// <summary>Internal Acessors for Type</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20.IResourceInternal.Type { get => ((Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20.IResourceInternal)__resource).Type; set => ((Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20.IResourceInternal)__resource).Type = value; }

        /// <summary>Internal Acessors for AzureBlob</summary>
        Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IAzureBlobDefinition Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IFluxConfigurationInternal.AzureBlob { get => ((Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IFluxConfigurationPropertiesInternal)Property).AzureBlob; set => ((Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IFluxConfigurationPropertiesInternal)Property).AzureBlob = value; }

        /// <summary>Internal Acessors for AzureBlobManagedIdentity</summary>
        Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IManagedIdentityDefinition Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IFluxConfigurationInternal.AzureBlobManagedIdentity { get => ((Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IFluxConfigurationPropertiesInternal)Property).AzureBlobManagedIdentity; set => ((Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IFluxConfigurationPropertiesInternal)Property).AzureBlobManagedIdentity = value; }

        /// <summary>Internal Acessors for AzureBlobServicePrincipal</summary>
        Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IServicePrincipalDefinition Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IFluxConfigurationInternal.AzureBlobServicePrincipal { get => ((Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IFluxConfigurationPropertiesInternal)Property).AzureBlobServicePrincipal; set => ((Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IFluxConfigurationPropertiesInternal)Property).AzureBlobServicePrincipal = value; }

        /// <summary>Internal Acessors for Bucket</summary>
        Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IBucketDefinition Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IFluxConfigurationInternal.Bucket { get => ((Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IFluxConfigurationPropertiesInternal)Property).Bucket; set => ((Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IFluxConfigurationPropertiesInternal)Property).Bucket = value; }

        /// <summary>Internal Acessors for ComplianceState</summary>
        Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Support.FluxComplianceState? Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IFluxConfigurationInternal.ComplianceState { get => ((Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IFluxConfigurationPropertiesInternal)Property).ComplianceState; set => ((Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IFluxConfigurationPropertiesInternal)Property).ComplianceState = value; }

        /// <summary>Internal Acessors for ErrorMessage</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IFluxConfigurationInternal.ErrorMessage { get => ((Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IFluxConfigurationPropertiesInternal)Property).ErrorMessage; set => ((Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IFluxConfigurationPropertiesInternal)Property).ErrorMessage = value; }

        /// <summary>Internal Acessors for GitRepository</summary>
        Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IGitRepositoryDefinition Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IFluxConfigurationInternal.GitRepository { get => ((Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IFluxConfigurationPropertiesInternal)Property).GitRepository; set => ((Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IFluxConfigurationPropertiesInternal)Property).GitRepository = value; }

        /// <summary>Internal Acessors for GitRepositoryRef</summary>
        Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IRepositoryRefDefinition Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IFluxConfigurationInternal.GitRepositoryRef { get => ((Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IFluxConfigurationPropertiesInternal)Property).GitRepositoryRef; set => ((Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IFluxConfigurationPropertiesInternal)Property).GitRepositoryRef = value; }

        /// <summary>Internal Acessors for Property</summary>
        Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IFluxConfigurationProperties Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IFluxConfigurationInternal.Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.FluxConfigurationProperties()); set { {_property = value;} } }

        /// <summary>Internal Acessors for ProvisioningState</summary>
        Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Support.ProvisioningState? Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IFluxConfigurationInternal.ProvisioningState { get => ((Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IFluxConfigurationPropertiesInternal)Property).ProvisioningState; set => ((Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IFluxConfigurationPropertiesInternal)Property).ProvisioningState = value; }

        /// <summary>Internal Acessors for RepositoryPublicKey</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IFluxConfigurationInternal.RepositoryPublicKey { get => ((Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IFluxConfigurationPropertiesInternal)Property).RepositoryPublicKey; set => ((Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IFluxConfigurationPropertiesInternal)Property).RepositoryPublicKey = value; }

        /// <summary>Internal Acessors for SourceSyncedCommitId</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IFluxConfigurationInternal.SourceSyncedCommitId { get => ((Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IFluxConfigurationPropertiesInternal)Property).SourceSyncedCommitId; set => ((Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IFluxConfigurationPropertiesInternal)Property).SourceSyncedCommitId = value; }

        /// <summary>Internal Acessors for SourceUpdatedAt</summary>
        global::System.DateTime? Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IFluxConfigurationInternal.SourceUpdatedAt { get => ((Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IFluxConfigurationPropertiesInternal)Property).SourceUpdatedAt; set => ((Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IFluxConfigurationPropertiesInternal)Property).SourceUpdatedAt = value; }

        /// <summary>Internal Acessors for StatusUpdatedAt</summary>
        global::System.DateTime? Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IFluxConfigurationInternal.StatusUpdatedAt { get => ((Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IFluxConfigurationPropertiesInternal)Property).StatusUpdatedAt; set => ((Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IFluxConfigurationPropertiesInternal)Property).StatusUpdatedAt = value; }

        /// <summary>Internal Acessors for Statuses</summary>
        Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IObjectStatusDefinition[] Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IFluxConfigurationInternal.Statuses { get => ((Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IFluxConfigurationPropertiesInternal)Property).Statuses; set => ((Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IFluxConfigurationPropertiesInternal)Property).Statuses = value; }

        /// <summary>Internal Acessors for SystemData</summary>
        Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20.ISystemData Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IFluxConfigurationInternal.SystemData { get => (this._systemData = this._systemData ?? new Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20.SystemData()); set { {_systemData = value;} } }

        /// <summary>The name of the resource</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Origin(Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.PropertyOrigin.Inherited)]
        public string Name { get => ((Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20.IResourceInternal)__resource).Name; }

        /// <summary>
        /// The namespace to which this configuration is installed to. Maximum of 253 lower case alphanumeric characters, hyphen and
        /// period only.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Origin(Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.PropertyOrigin.Inlined)]
        public string Namespace { get => ((Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IFluxConfigurationPropertiesInternal)Property).Namespace; set => ((Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IFluxConfigurationPropertiesInternal)Property).Namespace = value ?? null; }

        /// <summary>Backing field for <see cref="Property" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IFluxConfigurationProperties _property;

        /// <summary>Properties to create a Flux Configuration resource</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Origin(Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IFluxConfigurationProperties Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.FluxConfigurationProperties()); set => this._property = value; }

        /// <summary>Status of the creation of the fluxConfiguration.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Origin(Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Support.ProvisioningState? ProvisioningState { get => ((Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IFluxConfigurationPropertiesInternal)Property).ProvisioningState; }

        /// <summary>
        /// Public Key associated with this fluxConfiguration (either generated within the cluster or provided by the user).
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Origin(Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.PropertyOrigin.Inlined)]
        public string RepositoryPublicKey { get => ((Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IFluxConfigurationPropertiesInternal)Property).RepositoryPublicKey; }

        /// <summary>The git repository branch name to checkout.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Origin(Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.PropertyOrigin.Inlined)]
        public string RepositoryRefBranch { get => ((Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IFluxConfigurationPropertiesInternal)Property).RepositoryRefBranch; set => ((Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IFluxConfigurationPropertiesInternal)Property).RepositoryRefBranch = value ?? null; }

        /// <summary>
        /// The commit SHA to checkout. This value must be combined with the branch name to be valid. This takes precedence over semver.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Origin(Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.PropertyOrigin.Inlined)]
        public string RepositoryRefCommit { get => ((Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IFluxConfigurationPropertiesInternal)Property).RepositoryRefCommit; set => ((Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IFluxConfigurationPropertiesInternal)Property).RepositoryRefCommit = value ?? null; }

        /// <summary>
        /// The semver range used to match against git repository tags. This takes precedence over tag.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Origin(Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.PropertyOrigin.Inlined)]
        public string RepositoryRefSemver { get => ((Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IFluxConfigurationPropertiesInternal)Property).RepositoryRefSemver; set => ((Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IFluxConfigurationPropertiesInternal)Property).RepositoryRefSemver = value ?? null; }

        /// <summary>The git repository tag name to checkout. This takes precedence over branch.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Origin(Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.PropertyOrigin.Inlined)]
        public string RepositoryRefTag { get => ((Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IFluxConfigurationPropertiesInternal)Property).RepositoryRefTag; set => ((Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IFluxConfigurationPropertiesInternal)Property).RepositoryRefTag = value ?? null; }

        /// <summary>Gets the resource group name</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Origin(Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.PropertyOrigin.Owned)]
        public string ResourceGroupName { get => (new global::System.Text.RegularExpressions.Regex("^/subscriptions/(?<subscriptionId>[^/]+)/resourceGroups/(?<resourceGroupName>[^/]+)/providers/", global::System.Text.RegularExpressions.RegexOptions.IgnoreCase).Match(this.Id).Success ? new global::System.Text.RegularExpressions.Regex("^/subscriptions/(?<subscriptionId>[^/]+)/resourceGroups/(?<resourceGroupName>[^/]+)/providers/", global::System.Text.RegularExpressions.RegexOptions.IgnoreCase).Match(this.Id).Groups["resourceGroupName"].Value : null); }

        /// <summary>Scope at which the operator will be installed.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Origin(Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Support.ScopeType? Scope { get => ((Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IFluxConfigurationPropertiesInternal)Property).Scope; set => ((Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IFluxConfigurationPropertiesInternal)Property).Scope = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Support.ScopeType)""); }

        /// <summary>Base64-encoded certificate used to authenticate a Service Principal</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Origin(Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.PropertyOrigin.Inlined)]
        public string ServicePrincipalClientCertificate { get => ((Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IFluxConfigurationPropertiesInternal)Property).ServicePrincipalClientCertificate; set => ((Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IFluxConfigurationPropertiesInternal)Property).ServicePrincipalClientCertificate = value ?? null; }

        /// <summary>The password for the certificate used to authenticate a Service Principal</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Origin(Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.PropertyOrigin.Inlined)]
        public string ServicePrincipalClientCertificatePassword { get => ((Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IFluxConfigurationPropertiesInternal)Property).ServicePrincipalClientCertificatePassword; set => ((Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IFluxConfigurationPropertiesInternal)Property).ServicePrincipalClientCertificatePassword = value ?? null; }

        /// <summary>
        /// Specifies whether to include x5c header in client claims when acquiring a token to enable subject name / issuer based
        /// authentication for the Client Certificate
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Origin(Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.PropertyOrigin.Inlined)]
        public bool? ServicePrincipalClientCertificateSendChain { get => ((Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IFluxConfigurationPropertiesInternal)Property).ServicePrincipalClientCertificateSendChain; set => ((Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IFluxConfigurationPropertiesInternal)Property).ServicePrincipalClientCertificateSendChain = value ?? default(bool); }

        /// <summary>The client Id for authenticating a Service Principal.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Origin(Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.PropertyOrigin.Inlined)]
        public string ServicePrincipalClientId { get => ((Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IFluxConfigurationPropertiesInternal)Property).ServicePrincipalClientId; set => ((Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IFluxConfigurationPropertiesInternal)Property).ServicePrincipalClientId = value ?? null; }

        /// <summary>The client secret for authenticating a Service Principal</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Origin(Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.PropertyOrigin.Inlined)]
        public string ServicePrincipalClientSecret { get => ((Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IFluxConfigurationPropertiesInternal)Property).ServicePrincipalClientSecret; set => ((Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IFluxConfigurationPropertiesInternal)Property).ServicePrincipalClientSecret = value ?? null; }

        /// <summary>The tenant Id for authenticating a Service Principal</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Origin(Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.PropertyOrigin.Inlined)]
        public string ServicePrincipalTenantId { get => ((Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IFluxConfigurationPropertiesInternal)Property).ServicePrincipalTenantId; set => ((Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IFluxConfigurationPropertiesInternal)Property).ServicePrincipalTenantId = value ?? null; }

        /// <summary>Source Kind to pull the configuration data from.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Origin(Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Support.SourceKindType? SourceKind { get => ((Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IFluxConfigurationPropertiesInternal)Property).SourceKind; set => ((Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IFluxConfigurationPropertiesInternal)Property).SourceKind = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Support.SourceKindType)""); }

        /// <summary>Branch and/or SHA of the source commit synced with the cluster.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Origin(Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.PropertyOrigin.Inlined)]
        public string SourceSyncedCommitId { get => ((Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IFluxConfigurationPropertiesInternal)Property).SourceSyncedCommitId; }

        /// <summary>Datetime the fluxConfiguration synced its source on the cluster.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Origin(Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.PropertyOrigin.Inlined)]
        public global::System.DateTime? SourceUpdatedAt { get => ((Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IFluxConfigurationPropertiesInternal)Property).SourceUpdatedAt; }

        /// <summary>Datetime the fluxConfiguration synced its status on the cluster with Azure.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Origin(Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.PropertyOrigin.Inlined)]
        public global::System.DateTime? StatusUpdatedAt { get => ((Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IFluxConfigurationPropertiesInternal)Property).StatusUpdatedAt; }

        /// <summary>
        /// Statuses of the Flux Kubernetes resources created by the fluxConfiguration or created by the managed objects provisioned
        /// by the fluxConfiguration.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Origin(Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IObjectStatusDefinition[] Statuses { get => ((Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IFluxConfigurationPropertiesInternal)Property).Statuses; }

        /// <summary>
        /// Whether this configuration should suspend its reconciliation of its kustomizations and sources.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Origin(Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.PropertyOrigin.Inlined)]
        public bool? Suspend { get => ((Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IFluxConfigurationPropertiesInternal)Property).Suspend; set => ((Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IFluxConfigurationPropertiesInternal)Property).Suspend = value ?? default(bool); }

        /// <summary>Backing field for <see cref="SystemData" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20.ISystemData _systemData;

        /// <summary>
        /// Top level metadata https://github.com/Azure/azure-resource-manager-rpc/blob/master/v1.0/common-api-contracts.md#system-metadata-for-all-azure-resources
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Origin(Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20.ISystemData SystemData { get => (this._systemData = this._systemData ?? new Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20.SystemData()); }

        /// <summary>The timestamp of resource creation (UTC).</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Origin(Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.PropertyOrigin.Inlined)]
        public global::System.DateTime? SystemDataCreatedAt { get => ((Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20.ISystemDataInternal)SystemData).CreatedAt; set => ((Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20.ISystemDataInternal)SystemData).CreatedAt = value ?? default(global::System.DateTime); }

        /// <summary>The identity that created the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Origin(Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.PropertyOrigin.Inlined)]
        public string SystemDataCreatedBy { get => ((Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20.ISystemDataInternal)SystemData).CreatedBy; set => ((Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20.ISystemDataInternal)SystemData).CreatedBy = value ?? null; }

        /// <summary>The type of identity that created the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Origin(Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Support.CreatedByType? SystemDataCreatedByType { get => ((Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20.ISystemDataInternal)SystemData).CreatedByType; set => ((Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20.ISystemDataInternal)SystemData).CreatedByType = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Support.CreatedByType)""); }

        /// <summary>The timestamp of resource last modification (UTC)</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Origin(Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.PropertyOrigin.Inlined)]
        public global::System.DateTime? SystemDataLastModifiedAt { get => ((Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20.ISystemDataInternal)SystemData).LastModifiedAt; set => ((Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20.ISystemDataInternal)SystemData).LastModifiedAt = value ?? default(global::System.DateTime); }

        /// <summary>The identity that last modified the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Origin(Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.PropertyOrigin.Inlined)]
        public string SystemDataLastModifiedBy { get => ((Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20.ISystemDataInternal)SystemData).LastModifiedBy; set => ((Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20.ISystemDataInternal)SystemData).LastModifiedBy = value ?? null; }

        /// <summary>The type of identity that last modified the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Origin(Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Support.CreatedByType? SystemDataLastModifiedByType { get => ((Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20.ISystemDataInternal)SystemData).LastModifiedByType; set => ((Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20.ISystemDataInternal)SystemData).LastModifiedByType = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Support.CreatedByType)""); }

        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Origin(Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.PropertyOrigin.Inherited)]
        public string Type { get => ((Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20.IResourceInternal)__resource).Type; }

        /// <summary>Creates an new <see cref="FluxConfiguration" /> instance.</summary>
        public FluxConfiguration()
        {

        }

        /// <summary>Validates that this object meets the validation criteria.</summary>
        /// <param name="eventListener">an <see cref="Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Runtime.IEventListener" /> instance that will receive validation
        /// events.</param>
        /// <returns>
        /// A <see cref = "global::System.Threading.Tasks.Task" /> that will be complete when validation is completed.
        /// </returns>
        public async global::System.Threading.Tasks.Task Validate(Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Runtime.IEventListener eventListener)
        {
            await eventListener.AssertNotNull(nameof(__resource), __resource);
            await eventListener.AssertObjectIsValid(nameof(__resource), __resource);
        }
    }
    /// The Flux Configuration object returned in Get & Put response.
    public partial interface IFluxConfiguration :
        Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Runtime.IJsonSerializable,
        Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20.IResource
    {
        /// <summary>The account key (shared key) to access the storage account</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The account key (shared key) to access the storage account",
        SerializedName = @"accountKey",
        PossibleTypes = new [] { typeof(string) })]
        string AzureBlobAccountKey { get; set; }
        /// <summary>
        /// The Azure Blob container name to sync from the url endpoint for the flux configuration.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The Azure Blob container name to sync from the url endpoint for the flux configuration.",
        SerializedName = @"containerName",
        PossibleTypes = new [] { typeof(string) })]
        string AzureBlobContainerName { get; set; }
        /// <summary>
        /// Name of a local secret on the Kubernetes cluster to use as the authentication secret rather than the managed or user-provided
        /// configuration secrets.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Name of a local secret on the Kubernetes cluster to use as the authentication secret rather than the managed or user-provided configuration secrets.",
        SerializedName = @"localAuthRef",
        PossibleTypes = new [] { typeof(string) })]
        string AzureBlobLocalAuthRef { get; set; }
        /// <summary>The Shared Access token to access the storage container</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The Shared Access token to access the storage container",
        SerializedName = @"sasToken",
        PossibleTypes = new [] { typeof(string) })]
        string AzureBlobSasToken { get; set; }
        /// <summary>
        /// The interval at which to re-reconcile the cluster Azure Blob source with the remote.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The interval at which to re-reconcile the cluster Azure Blob source with the remote.",
        SerializedName = @"syncIntervalInSeconds",
        PossibleTypes = new [] { typeof(long) })]
        long? AzureBlobSyncIntervalInSecond { get; set; }
        /// <summary>
        /// The maximum time to attempt to reconcile the cluster Azure Blob source with the remote.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The maximum time to attempt to reconcile the cluster Azure Blob source with the remote.",
        SerializedName = @"timeoutInSeconds",
        PossibleTypes = new [] { typeof(long) })]
        long? AzureBlobTimeoutInSecond { get; set; }
        /// <summary>The URL to sync for the flux configuration Azure Blob storage account.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The URL to sync for the flux configuration Azure Blob storage account.",
        SerializedName = @"url",
        PossibleTypes = new [] { typeof(string) })]
        string AzureBlobUrl { get; set; }
        /// <summary>Plaintext access key used to securely access the S3 bucket</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Plaintext access key used to securely access the S3 bucket",
        SerializedName = @"accessKey",
        PossibleTypes = new [] { typeof(System.Security.SecureString) })]
        System.Security.SecureString BucketAccessKey { get; set; }
        /// <summary>
        /// Specify whether to use insecure communication when puling data from the S3 bucket.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Specify whether to use insecure communication when puling data from the S3 bucket.",
        SerializedName = @"insecure",
        PossibleTypes = new [] { typeof(bool) })]
        bool? BucketInsecure { get; set; }
        /// <summary>
        /// Name of a local secret on the Kubernetes cluster to use as the authentication secret rather than the managed or user-provided
        /// configuration secrets.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Name of a local secret on the Kubernetes cluster to use as the authentication secret rather than the managed or user-provided configuration secrets.",
        SerializedName = @"localAuthRef",
        PossibleTypes = new [] { typeof(string) })]
        string BucketLocalAuthRef { get; set; }
        /// <summary>The bucket name to sync from the url endpoint for the flux configuration.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The bucket name to sync from the url endpoint for the flux configuration.",
        SerializedName = @"bucketName",
        PossibleTypes = new [] { typeof(string) })]
        string BucketName { get; set; }
        /// <summary>
        /// The interval at which to re-reconcile the cluster bucket source with the remote.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The interval at which to re-reconcile the cluster bucket source with the remote.",
        SerializedName = @"syncIntervalInSeconds",
        PossibleTypes = new [] { typeof(long) })]
        long? BucketSyncIntervalInSecond { get; set; }
        /// <summary>
        /// The maximum time to attempt to reconcile the cluster bucket source with the remote.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The maximum time to attempt to reconcile the cluster bucket source with the remote.",
        SerializedName = @"timeoutInSeconds",
        PossibleTypes = new [] { typeof(long) })]
        long? BucketTimeoutInSecond { get; set; }
        /// <summary>The URL to sync for the flux configuration S3 bucket.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The URL to sync for the flux configuration S3 bucket.",
        SerializedName = @"url",
        PossibleTypes = new [] { typeof(string) })]
        string BucketUrl { get; set; }
        /// <summary>
        /// Combined status of the Flux Kubernetes resources created by the fluxConfiguration or created by the managed objects.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Combined status of the Flux Kubernetes resources created by the fluxConfiguration or created by the managed objects.",
        SerializedName = @"complianceState",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Support.FluxComplianceState) })]
        Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Support.FluxComplianceState? ComplianceState { get;  }
        /// <summary>Key-value pairs of protected configuration settings for the configuration</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Key-value pairs of protected configuration settings for the configuration",
        SerializedName = @"configurationProtectedSettings",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IFluxConfigurationPropertiesConfigurationProtectedSettings) })]
        Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IFluxConfigurationPropertiesConfigurationProtectedSettings ConfigurationProtectedSetting { get; set; }
        /// <summary>Error message returned to the user in the case of provisioning failure.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Error message returned to the user in the case of provisioning failure.",
        SerializedName = @"errorMessage",
        PossibleTypes = new [] { typeof(string) })]
        string ErrorMessage { get;  }
        /// <summary>
        /// Base64-encoded HTTPS certificate authority contents used to access git private git repositories over HTTPS
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Base64-encoded HTTPS certificate authority contents used to access git private git repositories over HTTPS",
        SerializedName = @"httpsCACert",
        PossibleTypes = new [] { typeof(string) })]
        string GitRepositoryHttpsCaCert { get; set; }
        /// <summary>Plaintext HTTPS username used to access private git repositories over HTTPS</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Plaintext HTTPS username used to access private git repositories over HTTPS",
        SerializedName = @"httpsUser",
        PossibleTypes = new [] { typeof(string) })]
        string GitRepositoryHttpsUser { get; set; }
        /// <summary>
        /// Name of a local secret on the Kubernetes cluster to use as the authentication secret rather than the managed or user-provided
        /// configuration secrets.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Name of a local secret on the Kubernetes cluster to use as the authentication secret rather than the managed or user-provided configuration secrets.",
        SerializedName = @"localAuthRef",
        PossibleTypes = new [] { typeof(string) })]
        string GitRepositoryLocalAuthRef { get; set; }
        /// <summary>
        /// Base64-encoded known_hosts value containing public SSH keys required to access private git repositories over SSH
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Base64-encoded known_hosts value containing public SSH keys required to access private git repositories over SSH",
        SerializedName = @"sshKnownHosts",
        PossibleTypes = new [] { typeof(string) })]
        string GitRepositorySshKnownHost { get; set; }
        /// <summary>
        /// The interval at which to re-reconcile the cluster git repository source with the remote.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The interval at which to re-reconcile the cluster git repository source with the remote.",
        SerializedName = @"syncIntervalInSeconds",
        PossibleTypes = new [] { typeof(long) })]
        long? GitRepositorySyncIntervalInSecond { get; set; }
        /// <summary>
        /// The maximum time to attempt to reconcile the cluster git repository source with the remote.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The maximum time to attempt to reconcile the cluster git repository source with the remote.",
        SerializedName = @"timeoutInSeconds",
        PossibleTypes = new [] { typeof(long) })]
        long? GitRepositoryTimeoutInSecond { get; set; }
        /// <summary>The URL to sync for the flux configuration git repository.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The URL to sync for the flux configuration git repository.",
        SerializedName = @"url",
        PossibleTypes = new [] { typeof(string) })]
        string GitRepositoryUrl { get; set; }
        /// <summary>
        /// Array of kustomizations used to reconcile the artifact pulled by the source type on the cluster.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Array of kustomizations used to reconcile the artifact pulled by the source type on the cluster.",
        SerializedName = @"kustomizations",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IFluxConfigurationPropertiesKustomizations) })]
        Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IFluxConfigurationPropertiesKustomizations Kustomization { get; set; }
        /// <summary>The client Id for authenticating a Managed Identity.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The client Id for authenticating a Managed Identity.",
        SerializedName = @"clientId",
        PossibleTypes = new [] { typeof(string) })]
        string ManagedIdentityClientId { get; set; }
        /// <summary>
        /// The namespace to which this configuration is installed to. Maximum of 253 lower case alphanumeric characters, hyphen and
        /// period only.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The namespace to which this configuration is installed to. Maximum of 253 lower case alphanumeric characters, hyphen and period only.",
        SerializedName = @"namespace",
        PossibleTypes = new [] { typeof(string) })]
        string Namespace { get; set; }
        /// <summary>Status of the creation of the fluxConfiguration.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Status of the creation of the fluxConfiguration.",
        SerializedName = @"provisioningState",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Support.ProvisioningState) })]
        Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Support.ProvisioningState? ProvisioningState { get;  }
        /// <summary>
        /// Public Key associated with this fluxConfiguration (either generated within the cluster or provided by the user).
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Public Key associated with this fluxConfiguration (either generated within the cluster or provided by the user).",
        SerializedName = @"repositoryPublicKey",
        PossibleTypes = new [] { typeof(string) })]
        string RepositoryPublicKey { get;  }
        /// <summary>The git repository branch name to checkout.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The git repository branch name to checkout.",
        SerializedName = @"branch",
        PossibleTypes = new [] { typeof(string) })]
        string RepositoryRefBranch { get; set; }
        /// <summary>
        /// The commit SHA to checkout. This value must be combined with the branch name to be valid. This takes precedence over semver.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The commit SHA to checkout. This value must be combined with the branch name to be valid. This takes precedence over semver.",
        SerializedName = @"commit",
        PossibleTypes = new [] { typeof(string) })]
        string RepositoryRefCommit { get; set; }
        /// <summary>
        /// The semver range used to match against git repository tags. This takes precedence over tag.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The semver range used to match against git repository tags. This takes precedence over tag.",
        SerializedName = @"semver",
        PossibleTypes = new [] { typeof(string) })]
        string RepositoryRefSemver { get; set; }
        /// <summary>The git repository tag name to checkout. This takes precedence over branch.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The git repository tag name to checkout. This takes precedence over branch.",
        SerializedName = @"tag",
        PossibleTypes = new [] { typeof(string) })]
        string RepositoryRefTag { get; set; }
        /// <summary>Scope at which the operator will be installed.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Scope at which the operator will be installed.",
        SerializedName = @"scope",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Support.ScopeType) })]
        Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Support.ScopeType? Scope { get; set; }
        /// <summary>Base64-encoded certificate used to authenticate a Service Principal</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Base64-encoded certificate used to authenticate a Service Principal ",
        SerializedName = @"clientCertificate",
        PossibleTypes = new [] { typeof(string) })]
        string ServicePrincipalClientCertificate { get; set; }
        /// <summary>The password for the certificate used to authenticate a Service Principal</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The password for the certificate used to authenticate a Service Principal ",
        SerializedName = @"clientCertificatePassword",
        PossibleTypes = new [] { typeof(string) })]
        string ServicePrincipalClientCertificatePassword { get; set; }
        /// <summary>
        /// Specifies whether to include x5c header in client claims when acquiring a token to enable subject name / issuer based
        /// authentication for the Client Certificate
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Specifies whether to include x5c header in client claims when acquiring a token to enable subject name / issuer based authentication for the Client Certificate",
        SerializedName = @"clientCertificateSendChain",
        PossibleTypes = new [] { typeof(bool) })]
        bool? ServicePrincipalClientCertificateSendChain { get; set; }
        /// <summary>The client Id for authenticating a Service Principal.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The client Id for authenticating a Service Principal.",
        SerializedName = @"clientId",
        PossibleTypes = new [] { typeof(string) })]
        string ServicePrincipalClientId { get; set; }
        /// <summary>The client secret for authenticating a Service Principal</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The client secret for authenticating a Service Principal",
        SerializedName = @"clientSecret",
        PossibleTypes = new [] { typeof(string) })]
        string ServicePrincipalClientSecret { get; set; }
        /// <summary>The tenant Id for authenticating a Service Principal</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The tenant Id for authenticating a Service Principal",
        SerializedName = @"tenantId",
        PossibleTypes = new [] { typeof(string) })]
        string ServicePrincipalTenantId { get; set; }
        /// <summary>Source Kind to pull the configuration data from.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Source Kind to pull the configuration data from.",
        SerializedName = @"sourceKind",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Support.SourceKindType) })]
        Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Support.SourceKindType? SourceKind { get; set; }
        /// <summary>Branch and/or SHA of the source commit synced with the cluster.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Branch and/or SHA of the source commit synced with the cluster.",
        SerializedName = @"sourceSyncedCommitId",
        PossibleTypes = new [] { typeof(string) })]
        string SourceSyncedCommitId { get;  }
        /// <summary>Datetime the fluxConfiguration synced its source on the cluster.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Datetime the fluxConfiguration synced its source on the cluster.",
        SerializedName = @"sourceUpdatedAt",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? SourceUpdatedAt { get;  }
        /// <summary>Datetime the fluxConfiguration synced its status on the cluster with Azure.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Datetime the fluxConfiguration synced its status on the cluster with Azure.",
        SerializedName = @"statusUpdatedAt",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? StatusUpdatedAt { get;  }
        /// <summary>
        /// Statuses of the Flux Kubernetes resources created by the fluxConfiguration or created by the managed objects provisioned
        /// by the fluxConfiguration.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Statuses of the Flux Kubernetes resources created by the fluxConfiguration or created by the managed objects provisioned by the fluxConfiguration.",
        SerializedName = @"statuses",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IObjectStatusDefinition) })]
        Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IObjectStatusDefinition[] Statuses { get;  }
        /// <summary>
        /// Whether this configuration should suspend its reconciliation of its kustomizations and sources.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Whether this configuration should suspend its reconciliation of its kustomizations and sources.",
        SerializedName = @"suspend",
        PossibleTypes = new [] { typeof(bool) })]
        bool? Suspend { get; set; }
        /// <summary>The timestamp of resource creation (UTC).</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The timestamp of resource creation (UTC).",
        SerializedName = @"createdAt",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? SystemDataCreatedAt { get; set; }
        /// <summary>The identity that created the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The identity that created the resource.",
        SerializedName = @"createdBy",
        PossibleTypes = new [] { typeof(string) })]
        string SystemDataCreatedBy { get; set; }
        /// <summary>The type of identity that created the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The type of identity that created the resource.",
        SerializedName = @"createdByType",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Support.CreatedByType) })]
        Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Support.CreatedByType? SystemDataCreatedByType { get; set; }
        /// <summary>The timestamp of resource last modification (UTC)</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The timestamp of resource last modification (UTC)",
        SerializedName = @"lastModifiedAt",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? SystemDataLastModifiedAt { get; set; }
        /// <summary>The identity that last modified the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The identity that last modified the resource.",
        SerializedName = @"lastModifiedBy",
        PossibleTypes = new [] { typeof(string) })]
        string SystemDataLastModifiedBy { get; set; }
        /// <summary>The type of identity that last modified the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The type of identity that last modified the resource.",
        SerializedName = @"lastModifiedByType",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Support.CreatedByType) })]
        Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Support.CreatedByType? SystemDataLastModifiedByType { get; set; }

    }
    /// The Flux Configuration object returned in Get & Put response.
    internal partial interface IFluxConfigurationInternal :
        Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20.IResourceInternal
    {
        /// <summary>Parameters to reconcile to the AzureBlob source kind type.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IAzureBlobDefinition AzureBlob { get; set; }
        /// <summary>The account key (shared key) to access the storage account</summary>
        string AzureBlobAccountKey { get; set; }
        /// <summary>
        /// The Azure Blob container name to sync from the url endpoint for the flux configuration.
        /// </summary>
        string AzureBlobContainerName { get; set; }
        /// <summary>
        /// Name of a local secret on the Kubernetes cluster to use as the authentication secret rather than the managed or user-provided
        /// configuration secrets.
        /// </summary>
        string AzureBlobLocalAuthRef { get; set; }
        /// <summary>Parameters to authenticate using a Managed Identity.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IManagedIdentityDefinition AzureBlobManagedIdentity { get; set; }
        /// <summary>The Shared Access token to access the storage container</summary>
        string AzureBlobSasToken { get; set; }
        /// <summary>Parameters to authenticate using Service Principal.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IServicePrincipalDefinition AzureBlobServicePrincipal { get; set; }
        /// <summary>
        /// The interval at which to re-reconcile the cluster Azure Blob source with the remote.
        /// </summary>
        long? AzureBlobSyncIntervalInSecond { get; set; }
        /// <summary>
        /// The maximum time to attempt to reconcile the cluster Azure Blob source with the remote.
        /// </summary>
        long? AzureBlobTimeoutInSecond { get; set; }
        /// <summary>The URL to sync for the flux configuration Azure Blob storage account.</summary>
        string AzureBlobUrl { get; set; }
        /// <summary>Parameters to reconcile to the Bucket source kind type.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IBucketDefinition Bucket { get; set; }
        /// <summary>Plaintext access key used to securely access the S3 bucket</summary>
        System.Security.SecureString BucketAccessKey { get; set; }
        /// <summary>
        /// Specify whether to use insecure communication when puling data from the S3 bucket.
        /// </summary>
        bool? BucketInsecure { get; set; }
        /// <summary>
        /// Name of a local secret on the Kubernetes cluster to use as the authentication secret rather than the managed or user-provided
        /// configuration secrets.
        /// </summary>
        string BucketLocalAuthRef { get; set; }
        /// <summary>The bucket name to sync from the url endpoint for the flux configuration.</summary>
        string BucketName { get; set; }
        /// <summary>
        /// The interval at which to re-reconcile the cluster bucket source with the remote.
        /// </summary>
        long? BucketSyncIntervalInSecond { get; set; }
        /// <summary>
        /// The maximum time to attempt to reconcile the cluster bucket source with the remote.
        /// </summary>
        long? BucketTimeoutInSecond { get; set; }
        /// <summary>The URL to sync for the flux configuration S3 bucket.</summary>
        string BucketUrl { get; set; }
        /// <summary>
        /// Combined status of the Flux Kubernetes resources created by the fluxConfiguration or created by the managed objects.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Support.FluxComplianceState? ComplianceState { get; set; }
        /// <summary>Key-value pairs of protected configuration settings for the configuration</summary>
        Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IFluxConfigurationPropertiesConfigurationProtectedSettings ConfigurationProtectedSetting { get; set; }
        /// <summary>Error message returned to the user in the case of provisioning failure.</summary>
        string ErrorMessage { get; set; }
        /// <summary>Parameters to reconcile to the GitRepository source kind type.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IGitRepositoryDefinition GitRepository { get; set; }
        /// <summary>
        /// Base64-encoded HTTPS certificate authority contents used to access git private git repositories over HTTPS
        /// </summary>
        string GitRepositoryHttpsCaCert { get; set; }
        /// <summary>Plaintext HTTPS username used to access private git repositories over HTTPS</summary>
        string GitRepositoryHttpsUser { get; set; }
        /// <summary>
        /// Name of a local secret on the Kubernetes cluster to use as the authentication secret rather than the managed or user-provided
        /// configuration secrets.
        /// </summary>
        string GitRepositoryLocalAuthRef { get; set; }
        /// <summary>The source reference for the GitRepository object.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IRepositoryRefDefinition GitRepositoryRef { get; set; }
        /// <summary>
        /// Base64-encoded known_hosts value containing public SSH keys required to access private git repositories over SSH
        /// </summary>
        string GitRepositorySshKnownHost { get; set; }
        /// <summary>
        /// The interval at which to re-reconcile the cluster git repository source with the remote.
        /// </summary>
        long? GitRepositorySyncIntervalInSecond { get; set; }
        /// <summary>
        /// The maximum time to attempt to reconcile the cluster git repository source with the remote.
        /// </summary>
        long? GitRepositoryTimeoutInSecond { get; set; }
        /// <summary>The URL to sync for the flux configuration git repository.</summary>
        string GitRepositoryUrl { get; set; }
        /// <summary>
        /// Array of kustomizations used to reconcile the artifact pulled by the source type on the cluster.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IFluxConfigurationPropertiesKustomizations Kustomization { get; set; }
        /// <summary>The client Id for authenticating a Managed Identity.</summary>
        string ManagedIdentityClientId { get; set; }
        /// <summary>
        /// The namespace to which this configuration is installed to. Maximum of 253 lower case alphanumeric characters, hyphen and
        /// period only.
        /// </summary>
        string Namespace { get; set; }
        /// <summary>Properties to create a Flux Configuration resource</summary>
        Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IFluxConfigurationProperties Property { get; set; }
        /// <summary>Status of the creation of the fluxConfiguration.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Support.ProvisioningState? ProvisioningState { get; set; }
        /// <summary>
        /// Public Key associated with this fluxConfiguration (either generated within the cluster or provided by the user).
        /// </summary>
        string RepositoryPublicKey { get; set; }
        /// <summary>The git repository branch name to checkout.</summary>
        string RepositoryRefBranch { get; set; }
        /// <summary>
        /// The commit SHA to checkout. This value must be combined with the branch name to be valid. This takes precedence over semver.
        /// </summary>
        string RepositoryRefCommit { get; set; }
        /// <summary>
        /// The semver range used to match against git repository tags. This takes precedence over tag.
        /// </summary>
        string RepositoryRefSemver { get; set; }
        /// <summary>The git repository tag name to checkout. This takes precedence over branch.</summary>
        string RepositoryRefTag { get; set; }
        /// <summary>Scope at which the operator will be installed.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Support.ScopeType? Scope { get; set; }
        /// <summary>Base64-encoded certificate used to authenticate a Service Principal</summary>
        string ServicePrincipalClientCertificate { get; set; }
        /// <summary>The password for the certificate used to authenticate a Service Principal</summary>
        string ServicePrincipalClientCertificatePassword { get; set; }
        /// <summary>
        /// Specifies whether to include x5c header in client claims when acquiring a token to enable subject name / issuer based
        /// authentication for the Client Certificate
        /// </summary>
        bool? ServicePrincipalClientCertificateSendChain { get; set; }
        /// <summary>The client Id for authenticating a Service Principal.</summary>
        string ServicePrincipalClientId { get; set; }
        /// <summary>The client secret for authenticating a Service Principal</summary>
        string ServicePrincipalClientSecret { get; set; }
        /// <summary>The tenant Id for authenticating a Service Principal</summary>
        string ServicePrincipalTenantId { get; set; }
        /// <summary>Source Kind to pull the configuration data from.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Support.SourceKindType? SourceKind { get; set; }
        /// <summary>Branch and/or SHA of the source commit synced with the cluster.</summary>
        string SourceSyncedCommitId { get; set; }
        /// <summary>Datetime the fluxConfiguration synced its source on the cluster.</summary>
        global::System.DateTime? SourceUpdatedAt { get; set; }
        /// <summary>Datetime the fluxConfiguration synced its status on the cluster with Azure.</summary>
        global::System.DateTime? StatusUpdatedAt { get; set; }
        /// <summary>
        /// Statuses of the Flux Kubernetes resources created by the fluxConfiguration or created by the managed objects provisioned
        /// by the fluxConfiguration.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20221101.IObjectStatusDefinition[] Statuses { get; set; }
        /// <summary>
        /// Whether this configuration should suspend its reconciliation of its kustomizations and sources.
        /// </summary>
        bool? Suspend { get; set; }
        /// <summary>
        /// Top level metadata https://github.com/Azure/azure-resource-manager-rpc/blob/master/v1.0/common-api-contracts.md#system-metadata-for-all-azure-resources
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Models.Api20.ISystemData SystemData { get; set; }
        /// <summary>The timestamp of resource creation (UTC).</summary>
        global::System.DateTime? SystemDataCreatedAt { get; set; }
        /// <summary>The identity that created the resource.</summary>
        string SystemDataCreatedBy { get; set; }
        /// <summary>The type of identity that created the resource.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Support.CreatedByType? SystemDataCreatedByType { get; set; }
        /// <summary>The timestamp of resource last modification (UTC)</summary>
        global::System.DateTime? SystemDataLastModifiedAt { get; set; }
        /// <summary>The identity that last modified the resource.</summary>
        string SystemDataLastModifiedBy { get; set; }
        /// <summary>The type of identity that last modified the resource.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.KubernetesConfiguration.Support.CreatedByType? SystemDataLastModifiedByType { get; set; }

    }
}