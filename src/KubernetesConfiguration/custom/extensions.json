{
  "swagger": "2.0",
  "info": {
    "version": "2021-09-01",
    "title": "ExtensionsClient",
    "description": "Use these APIs to create extension resources through ARM, for Kubernetes Clusters."
  },
  "host": "management.azure.com",
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ],
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "flow": "implicit",
      "description": "Azure Active Directory OAuth2 Flow",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      }
    }
  },
  "paths": {
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{clusterRp}/{clusterResourceName}/{clusterName}/providers/Microsoft.KubernetesConfiguration/extensions/{extensionName}": {
      "put": {
        "tags": [
          "Extensions",
          "ClusterExtensions"
        ],
        "description": "Create a new Kubernetes Cluster Extension.",
        "operationId": "Extensions_Create",
        "x-ms-examples": {
          "Create Extension": {
            "$ref": "./examples/CreateExtension.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ClusterRpParameter"
          },
          {
            "$ref": "#/parameters/ClusterResourceNameParameter"
          },
          {
            "$ref": "#/parameters/ClusterNameParameter"
          },
          {
            "$ref": "#/parameters/ExtensionNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          },
          {
            "name": "extension",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Extension"
            },
            "description": "Properties necessary to Create an Extension."
          }
        ],
        "responses": {
          "201": {
            "description": "Request received successfully.",
            "schema": {
              "$ref": "#/definitions/Extension"
            }
          },
          "200": {
            "description": "Request received successfully for an existing resource.",
            "schema": {
              "$ref": "#/definitions/Extension"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        }
      },
      "get": {
        "tags": [
          "Extensions",
          "ClusterExtensions"
        ],
        "description": "Gets Kubernetes Cluster Extension.",
        "operationId": "Extensions_Get",
        "x-ms-examples": {
          "Get Extension": {
            "$ref": "./examples/GetExtension.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ClusterRpParameter"
          },
          {
            "$ref": "#/parameters/ClusterResourceNameParameter"
          },
          {
            "$ref": "#/parameters/ClusterNameParameter"
          },
          {
            "$ref": "#/parameters/ExtensionNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Extension"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Extensions",
          "ClusterExtensions"
        ],
        "description": "Delete a Kubernetes Cluster Extension. This will cause the Agent to Uninstall the extension from the cluster.",
        "operationId": "Extensions_Delete",
        "x-ms-examples": {
          "Delete Extension": {
            "$ref": "./examples/DeleteExtension.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ClusterRpParameter"
          },
          {
            "$ref": "#/parameters/ClusterResourceNameParameter"
          },
          {
            "$ref": "#/parameters/ClusterNameParameter"
          },
          {
            "$ref": "#/parameters/ExtensionNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          },
          {
            "name": "forceDelete",
            "in": "query",
            "description": "Delete the extension resource in Azure - not the normal asynchronous delete.",
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "202": {
            "description": "Accepted.  The request has been accepted for processing."
          },
          "204": {
            "description": "No Content.  The request has been accepted but the extension was not found."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        }
      },
      "patch": {
        "tags": [
          "Extensions",
          "ClusterExtensions"
        ],
        "description": "Patch an existing Kubernetes Cluster Extension.",
        "operationId": "Extensions_Update",
        "x-ms-examples": {
          "Update Extension": {
            "$ref": "./examples/PatchExtension.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ClusterRpParameter"
          },
          {
            "$ref": "#/parameters/ClusterResourceNameParameter"
          },
          {
            "$ref": "#/parameters/ClusterNameParameter"
          },
          {
            "$ref": "#/parameters/ExtensionNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          },
          {
            "name": "patchExtension",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/patchExtension"
            },
            "description": "Properties to Patch in an existing Extension."
          }
        ],
        "responses": {
          "202": {
            "description": "Request received successfully, and the resource will be updated asynchronously.",
            "schema": {
              "$ref": "#/definitions/Extension"
            }
          },
          "409": {
            "description": "Conflict",
            "x-ms-error-response": true,
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{clusterRp}/{clusterResourceName}/{clusterName}/providers/Microsoft.KubernetesConfiguration/extensions": {
      "get": {
        "tags": [
          "Extensions",
          "ClusterExtensions"
        ],
        "description": "List all Extensions in the cluster.",
        "operationId": "Extensions_List",
        "x-ms-examples": {
          "List Extensions": {
            "$ref": "./examples/ListExtensions.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ClusterRpParameter"
          },
          {
            "$ref": "#/parameters/ClusterResourceNameParameter"
          },
          {
            "$ref": "#/parameters/ClusterNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ExtensionsList"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{clusterRp}/{clusterResourceName}/{clusterName}/providers/Microsoft.KubernetesConfiguration/operations": {
      "get": {
        "tags": [
          "Operations in a Cluster"
        ],
        "operationId": "OperationStatus_List",
        "description": "List Async Operations, currently in progress, in a cluster",
        "x-ms-examples": {
          "AsyncOperationStatus List": {
            "$ref": "./examples/ListAsyncOperationStatus.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ClusterRpParameter"
          },
          {
            "$ref": "#/parameters/ClusterResourceNameParameter"
          },
          {
            "$ref": "#/parameters/ClusterNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Operations in a cluster",
            "schema": {
              "$ref": "#/definitions/OperationStatusList"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{clusterRp}/{clusterResourceName}/{clusterName}/providers/Microsoft.KubernetesConfiguration/extensions/{extensionName}/operations/{operationId}": {
      "get": {
        "tags": [
          "Operation Status"
        ],
        "operationId": "OperationStatus_Get",
        "description": "Get Async Operation status",
        "x-ms-examples": {
          "AsyncOperationStatus Get": {
            "$ref": "./examples/GetAsyncOperationStatus.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ClusterRpParameter"
          },
          {
            "$ref": "#/parameters/ClusterResourceNameParameter"
          },
          {
            "$ref": "#/parameters/ClusterNameParameter"
          },
          {
            "$ref": "#/parameters/ExtensionNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          },
          {
            "name": "operationId",
            "in": "path",
            "description": "operation Id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Operation Status",
            "schema": {
              "$ref": "#/definitions/OperationStatusResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/providers/Microsoft.KubernetesConfiguration/operations": {
      "get": {
        "tags": [
          "Operations"
        ],
        "operationId": "Operations_List",
        "x-ms-examples": {
          "BatchAccountDelete": {
            "$ref": "./examples/OperationsList.json"
          }
        },
        "description": "List all the available operations the KubernetesConfiguration resource provider supports, in this api-version.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK response definition.",
            "schema": {
              "$ref": "#/definitions/ResourceProviderOperationList"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    }
  },
  "definitions": {
    "ScopeCluster": {
      "description": "Specifies that the scope of the extension is Cluster",
      "x-nullable": true,
      "type": "object",
      "properties": {
        "releaseNamespace": {
          "description": "Namespace where the extension Release must be placed, for a Cluster scoped extension.  If this namespace does not exist, it will be created",
          "type": "string"
        }
      }
    },
    "ScopeNamespace": {
      "description": "Specifies that the scope of the extension is Namespace",
      "x-nullable": true,
      "type": "object",
      "properties": {
        "targetNamespace": {
          "description": "Namespace where the extension will be created for an Namespace scoped extension.  If this namespace does not exist, it will be created",
          "type": "string"
        }
      }
    },
    "Scope": {
      "description": "Scope of the extension. It can be either Cluster or Namespace; but not both.",
      "type": "object",
      "properties": {
        "cluster": {
          "$ref": "#/definitions/ScopeCluster"
        },
        "namespace": {
          "$ref": "#/definitions/ScopeNamespace"
        }
      }
    },
    "provisioningState": {
      "type": "string",
      "readOnly": true,
      "description": "The provisioning state of the extension resource.",
      "enum": [
        "Succeeded",
        "Failed",
        "Canceled",
        "Creating",
        "Updating",
        "Deleting"
      ],
      "x-ms-enum": {
        "name": "ProvisioningState",
        "modelAsString": true
      }
    },
    "ExtensionStatus": {
      "description": "Status from the extension.",
      "type": "object",
      "readOnly": true,
      "properties": {
        "code": {
          "type": "string",
          "description": "Status code provided by the Extension"
        },
        "displayStatus": {
          "type": "string",
          "description": "Short description of status of the extension."
        },
        "level": {
          "type": "string",
          "description": "Level of the status.",
          "enum": [
            "Error",
            "Warning",
            "Information"
          ],
          "default": "Information",
          "x-ms-enum": {
            "name": "LevelType",
            "modelAsString": true
          }
        },
        "message": {
          "type": "string",
          "description": "Detailed message of the status from the Extension."
        },
        "time": {
          "type": "string",
          "description": "DateLiteral (per ISO8601) noting the time of installation status."
        }
      }
    },
    "Extension": {
      "description": "The Extension object.",
      "type": "object",
      "properties": {
        "properties": {
          "type": "object",
          "x-ms-client-flatten": true,
          "description": "Properties of an Extension resource",
          "properties": {
            "extensionType": {
              "description": "Type of the Extension, of which this resource is an instance of.  It must be one of the Extension Types registered with Microsoft.KubernetesConfiguration by the Extension publisher.",
              "type": "string"
            },
            "autoUpgradeMinorVersion": {
              "description": "Flag to note if this extension participates in auto upgrade of minor version, or not.",
              "type": "boolean",
              "default": true
            },
            "releaseTrain": {
              "description": "ReleaseTrain this extension participates in for auto-upgrade (e.g. Stable, Preview, etc.) - only if autoUpgradeMinorVersion is 'true'.",
              "type": "string",
              "default": "Stable"
            },
            "version": {
              "description": "Version of the extension for this extension, if it is 'pinned' to a specific version. autoUpgradeMinorVersion must be 'false'.",
              "type": "string"
            },
            "scope": {
              "description": "Scope at which the extension is installed.",
              "$ref": "#/definitions/Scope"
            },
            "configurationSettings": {
              "description": "Configuration settings, as name-value pairs for configuring this extension.",
              "type": "object",
              "x-nullable": true,
              "additionalProperties": {
                "type": "string"
              }
            },
            "configurationProtectedSettings": {
              "description": "Configuration settings that are sensitive, as name-value pairs for configuring this extension.",
              "type": "object",
              "x-nullable": true,
              "x-ms-secret": true,
              "additionalProperties": {
                "type": "string"
              }
            },
            "provisioningState": {
              "$ref": "#/definitions/provisioningState"
            },
            "statuses": {
              "description": "Status from this extension.",
              "type": "array",
              "x-nullable": true,
              "items": {
                "$ref": "#/definitions/ExtensionStatus"
              }
            },
            "errorInfo": {
              "x-nullable": true,
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorDetail"
            },
            "customLocationSettings": {
              "description": "Custom Location settings properties.",
              "type": "object",
              "readOnly": true,
              "x-nullable": true,
              "additionalProperties": {
                "type": "string"
              }
            },
            "packageUri": {
              "description": "Uri of the Helm package",
              "type": "string",
              "readOnly": true,
              "x-nullable": true
            },
            "aksAssignedIdentity": {
              "description": "Identity of the Extension resource in an AKS cluster",
              "x-nullable": true,
              "type": "object",
              "properties": {
                "principalId": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The principal ID of resource identity."
                },
                "tenantId": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The tenant ID of resource."
                },
                "type": {
                  "type": "string",
                  "description": "The identity type.",
                  "enum": [
                    "SystemAssigned"
                  ],
                  "x-ms-enum": {
                    "name": "ResourceIdentityType",
                    "modelAsString": false
                  }
                }
              }
            }
          }
        },
        "identity": {
          "description": "Identity of the Extension resource",
          "x-nullable": true,
          "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/Identity"
        },
        "systemData": {
          "description": "Top level metadata https://github.com/Azure/azure-resource-manager-rpc/blob/master/v1.0/common-api-contracts.md#system-metadata-for-all-azure-resources",
          "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/systemData"
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "ExtensionsList": {
      "description": "Result of the request to list Extensions.  It contains a list of Extension objects and a URL link to get the next set of results.",
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "readOnly": true,
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "description": "List of Extensions within a Kubernetes cluster."
        },
        "nextLink": {
          "type": "string",
          "readOnly": true,
          "description": "URL to get the next set of extension objects, if any."
        }
      }
    },
    "ResourceProviderOperation": {
      "description": "Supported operation of this resource provider.",
      "type": "object",
      "readOnly": true,
      "properties": {
        "name": {
          "description": "Operation name, in format of {provider}/{resource}/{operation}",
          "type": "string"
        },
        "display": {
          "description": "Display metadata associated with the operation.",
          "type": "object",
          "properties": {
            "provider": {
              "description": "Resource provider: Microsoft KubernetesConfiguration.",
              "type": "string"
            },
            "resource": {
              "description": "Resource on which the operation is performed.",
              "type": "string"
            },
            "operation": {
              "description": "Type of operation: get, read, delete, etc.",
              "type": "string"
            },
            "description": {
              "description": "Description of this operation.",
              "type": "string"
            }
          }
        },
        "isDataAction": {
          "description": "The flag that indicates whether the operation applies to data plane.",
          "type": "boolean",
          "readOnly": true
        },
        "origin": {
          "description": "Origin of the operation",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "ResourceProviderOperationList": {
      "description": "Result of the request to list operations.",
      "type": "object",
      "readOnly": true,
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResourceProviderOperation"
          },
          "description": "List of operations supported by this resource provider."
        },
        "nextLink": {
          "type": "string",
          "readOnly": true,
          "description": "URL to the next set of results, if any."
        }
      }
    },
    "OperationStatusResult": {
      "description": "The current status of an async operation.",
      "type": "object",
      "required": [
        "status"
      ],
      "properties": {
        "id": {
          "description": "Fully qualified ID for the async operation.",
          "type": "string"
        },
        "name": {
          "description": "Name of the async operation.",
          "type": "string"
        },
        "status": {
          "description": "Operation status.",
          "type": "string"
        },
        "properties": {
          "description": "Additional information, if available.",
          "type": "object",
          "x-nullable": true,
          "x-ms-client-flatten": true,
          "additionalProperties": {
            "type": "string"
          }
        },
        "error": {
          "x-nullable": true,
          "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorDetail"
        }
      }
    },
    "OperationStatusList": {
      "description": "The async operations in progress, in the cluster.",
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "readOnly": true,
          "items": {
            "$ref": "#/definitions/OperationStatusResult"
          },
          "description": "List of async operations in progress, in the cluster."
        },
        "nextLink": {
          "type": "string",
          "readOnly": true,
          "description": "URL to get the next set of Operation Result objects, if any."
        }
      }
    },
    "patchExtension": {
      "description": "The Extension Patch Request object.",
      "type": "object",
      "properties": {
        "properties": {
          "type": "object",
          "x-ms-client-flatten": true,
          "description": "Updatable properties of an Extension Patch Request",
          "properties": {
            "autoUpgradeMinorVersion": {
              "description": "Flag to note if this extension participates in auto upgrade of minor version, or not.",
              "type": "boolean",
              "default": true
            },
            "releaseTrain": {
              "description": "ReleaseTrain this extension participates in for auto-upgrade (e.g. Stable, Preview, etc.) - only if autoUpgradeMinorVersion is 'true'.",
              "type": "string",
              "default": "Stable"
            },
            "version": {
              "description": "Version of the extension for this extension, if it is 'pinned' to a specific version. autoUpgradeMinorVersion must be 'false'.",
              "type": "string"
            },
            "configurationSettings": {
              "description": "Configuration settings, as name-value pairs for configuring this extension.",
              "type": "object",
              "x-nullable": true,
              "additionalProperties": {
                "type": "string"
              }
            },
            "configurationProtectedSettings": {
              "description": "Configuration settings that are sensitive, as name-value pairs for configuring this extension.",
              "type": "object",
              "x-nullable": true,
              "x-ms-secret": true,
              "additionalProperties": {
                "type": "string"
              }
            }
          }
        }
      }
    }
  },
  "parameters": {
    "ExtensionNameParameter": {
      "name": "extensionName",
      "in": "path",
      "description": "Name of the Extension.",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "ClusterRpParameter": {
      "name": "clusterRp",
      "in": "path",
      "required": true,
      "type": "string",
      "enum": [
        "Microsoft.ContainerService",
        "Microsoft.Kubernetes"
      ],
      "description": "The Kubernetes cluster RP - either Microsoft.ContainerService (for AKS clusters) or Microsoft.Kubernetes (for OnPrem K8S clusters).",
      "x-ms-parameter-location": "method"
    },
    "ClusterResourceNameParameter": {
      "name": "clusterResourceName",
      "in": "path",
      "required": true,
      "type": "string",
      "enum": [
        "managedClusters",
        "connectedClusters"
      ],
      "description": "The Kubernetes cluster resource name - either managedClusters (for AKS clusters) or connectedClusters (for OnPrem K8S clusters).",
      "x-ms-parameter-location": "method"
    },
    "ClusterNameParameter": {
      "name": "clusterName",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The name of the kubernetes cluster.",
      "x-ms-parameter-location": "method"
    }
  }
}