// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.Analysis.Models
{
    using System.Linq;

    /// <summary>
    /// Represents an instance of an Analysis Services resource.
    /// </summary>
    [Microsoft.Rest.Serialization.JsonTransformation]
    public partial class AnalysisServicesServer : Resource
    {
        /// <summary>
        /// Initializes a new instance of the AnalysisServicesServer class.
        /// </summary>
        public AnalysisServicesServer()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the AnalysisServicesServer class.
        /// </summary>

        /// <param name="id">An identifier that represents the Analysis Services resource.
        /// </param>

        /// <param name="name">The name of the Analysis Services resource.
        /// </param>

        /// <param name="type">The type of the Analysis Services resource.
        /// </param>

        /// <param name="location">Location of the Analysis Services resource.
        /// </param>

        /// <param name="sku">The SKU of the Analysis Services resource.
        /// </param>

        /// <param name="tags">Key-value pairs of additional resource provisioning properties.
        /// </param>

        /// <param name="gatewayDetails">The gateway details configured for the AS server.
        /// </param>

        /// <param name="state">The current state of Analysis Services resource. The state is to indicate
        /// more states outside of resource provisioning.
        /// Possible values include: &#39;Deleting&#39;, &#39;Succeeded&#39;, &#39;Failed&#39;, &#39;Paused&#39;,
        /// &#39;Suspended&#39;, &#39;Provisioning&#39;, &#39;Updating&#39;, &#39;Suspending&#39;, &#39;Pausing&#39;,
        /// &#39;Resuming&#39;, &#39;Preparing&#39;, &#39;Scaling&#39;</param>

        /// <param name="provisioningState">The current deployment state of Analysis Services resource. The
        /// provisioningState is to indicate states for resource provisioning.
        /// Possible values include: &#39;Deleting&#39;, &#39;Succeeded&#39;, &#39;Failed&#39;, &#39;Paused&#39;,
        /// &#39;Suspended&#39;, &#39;Provisioning&#39;, &#39;Updating&#39;, &#39;Suspending&#39;, &#39;Pausing&#39;,
        /// &#39;Resuming&#39;, &#39;Preparing&#39;, &#39;Scaling&#39;</param>

        /// <param name="asAdministrators">A collection of AS server administrators
        /// </param>

        /// <param name="backupBlobContainerUri">The SAS container URI to the backup container.
        /// </param>

        /// <param name="ipV4FirewallSettings">The firewall settings for the AS server.
        /// </param>

        /// <param name="querypoolConnectionMode">How the read-write server&#39;s participation in the query pool is
        /// controlled.&lt;br/&gt;It can have the following values: &lt;ul&gt;&lt;li&gt;readOnly -
        /// indicates that the read-write server is intended not to participate in
        /// query operations&lt;/li&gt;&lt;li&gt;all - indicates that the read-write server can
        /// participate in query operations&lt;/li&gt;&lt;/ul&gt;Specifying readOnly when capacity
        /// is 1 results in error.
        /// Possible values include: &#39;All&#39;, &#39;ReadOnly&#39;</param>

        /// <param name="serverFullName">The full name of the Analysis Services resource.
        /// </param>
        public AnalysisServicesServer(string location, ResourceSku sku, string id = default(string), string name = default(string), string type = default(string), System.Collections.Generic.IDictionary<string, string> tags = default(System.Collections.Generic.IDictionary<string, string>), GatewayDetails gatewayDetails = default(GatewayDetails), string state = default(string), string provisioningState = default(string), ServerAdministrators asAdministrators = default(ServerAdministrators), string backupBlobContainerUri = default(string), IPv4FirewallSettings ipV4FirewallSettings = default(IPv4FirewallSettings), ConnectionMode? querypoolConnectionMode = default(ConnectionMode?), string serverFullName = default(string))

        : base(location, sku, id, name, type, tags)
        {
            this.GatewayDetails = gatewayDetails;
            this.State = state;
            this.ProvisioningState = provisioningState;
            this.AsAdministrators = asAdministrators;
            this.BackupBlobContainerUri = backupBlobContainerUri;
            this.IpV4FirewallSettings = ipV4FirewallSettings;
            this.QuerypoolConnectionMode = querypoolConnectionMode;
            this.ServerFullName = serverFullName;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets or sets the gateway details configured for the AS server.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.gatewayDetails")]
        public GatewayDetails GatewayDetails {get; set; }

        /// <summary>
        /// Gets the current state of Analysis Services resource. The state is to
        /// indicate more states outside of resource provisioning. Possible values include: &#39;Deleting&#39;, &#39;Succeeded&#39;, &#39;Failed&#39;, &#39;Paused&#39;, &#39;Suspended&#39;, &#39;Provisioning&#39;, &#39;Updating&#39;, &#39;Suspending&#39;, &#39;Pausing&#39;, &#39;Resuming&#39;, &#39;Preparing&#39;, &#39;Scaling&#39;
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.state")]
        public string State {get; private set; }

        /// <summary>
        /// Gets the current deployment state of Analysis Services resource. The
        /// provisioningState is to indicate states for resource provisioning. Possible values include: &#39;Deleting&#39;, &#39;Succeeded&#39;, &#39;Failed&#39;, &#39;Paused&#39;, &#39;Suspended&#39;, &#39;Provisioning&#39;, &#39;Updating&#39;, &#39;Suspending&#39;, &#39;Pausing&#39;, &#39;Resuming&#39;, &#39;Preparing&#39;, &#39;Scaling&#39;
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.provisioningState")]
        public string ProvisioningState {get; private set; }

        /// <summary>
        /// Gets or sets a collection of AS server administrators
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.asAdministrators")]
        public ServerAdministrators AsAdministrators {get; set; }

        /// <summary>
        /// Gets or sets the SAS container URI to the backup container.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.backupBlobContainerUri")]
        public string BackupBlobContainerUri {get; set; }

        /// <summary>
        /// Gets or sets the firewall settings for the AS server.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.ipV4FirewallSettings")]
        public IPv4FirewallSettings IpV4FirewallSettings {get; set; }

        /// <summary>
        /// Gets or sets how the read-write server&#39;s participation in the query pool is
        /// controlled.&lt;br/&gt;It can have the following values: &lt;ul&gt;&lt;li&gt;readOnly -
        /// indicates that the read-write server is intended not to participate in
        /// query operations&lt;/li&gt;&lt;li&gt;all - indicates that the read-write server can
        /// participate in query operations&lt;/li&gt;&lt;/ul&gt;Specifying readOnly when capacity
        /// is 1 results in error. Possible values include: &#39;All&#39;, &#39;ReadOnly&#39;
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.querypoolConnectionMode")]
        public ConnectionMode? QuerypoolConnectionMode {get; set; }

        /// <summary>
        /// Gets the full name of the Analysis Services resource.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.serverFullName")]
        public string ServerFullName {get; private set; }
        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public override void Validate()
        {
            base.Validate();








        }
    }
}