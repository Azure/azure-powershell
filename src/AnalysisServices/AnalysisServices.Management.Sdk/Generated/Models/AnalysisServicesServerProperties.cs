// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.Analysis.Models
{
    using System.Linq;

    /// <summary>
    /// Properties of Analysis Services resource.
    /// </summary>
    public partial class AnalysisServicesServerProperties : AnalysisServicesServerMutableProperties
    {
        /// <summary>
        /// Initializes a new instance of the AnalysisServicesServerProperties class.
        /// </summary>
        public AnalysisServicesServerProperties()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the AnalysisServicesServerProperties class.
        /// </summary>

        /// <param name="asAdministrators">A collection of AS server administrators
        /// </param>

        /// <param name="backupBlobContainerUri">The SAS container URI to the backup container.
        /// </param>

        /// <param name="gatewayDetails">The gateway details configured for the AS server.
        /// </param>

        /// <param name="ipv4FirewallSettings">The firewall settings for the AS server.
        /// </param>

        /// <param name="querypoolConnectionMode">How the read-write server&#39;s participation in the query pool is
        /// controlled.&lt;br/&gt;It can have the following values: &lt;ul&gt;&lt;li&gt;readOnly -
        /// indicates that the read-write server is intended not to participate in
        /// query operations&lt;/li&gt;&lt;li&gt;all - indicates that the read-write server can
        /// participate in query operations&lt;/li&gt;&lt;/ul&gt;Specifying readOnly when capacity
        /// is 1 results in error.
        /// Possible values include: &#39;All&#39;, &#39;ReadOnly&#39;</param>

        /// <param name="state">The current state of Analysis Services resource. The state is to indicate
        /// more states outside of resource provisioning.
        /// Possible values include: &#39;Deleting&#39;, &#39;Succeeded&#39;, &#39;Failed&#39;, &#39;Paused&#39;,
        /// &#39;Suspended&#39;, &#39;Provisioning&#39;, &#39;Updating&#39;, &#39;Suspending&#39;, &#39;Pausing&#39;,
        /// &#39;Resuming&#39;, &#39;Preparing&#39;, &#39;Scaling&#39;</param>

        /// <param name="provisioningState">The current deployment state of Analysis Services resource. The
        /// provisioningState is to indicate states for resource provisioning.
        /// Possible values include: &#39;Deleting&#39;, &#39;Succeeded&#39;, &#39;Failed&#39;, &#39;Paused&#39;,
        /// &#39;Suspended&#39;, &#39;Provisioning&#39;, &#39;Updating&#39;, &#39;Suspending&#39;, &#39;Pausing&#39;,
        /// &#39;Resuming&#39;, &#39;Preparing&#39;, &#39;Scaling&#39;</param>

        /// <param name="serverFullName">The full name of the Analysis Services resource.
        /// </param>
        public AnalysisServicesServerProperties(ServerAdministrators asAdministrators = default(ServerAdministrators), string backupBlobContainerUri = default(string), GatewayDetails gatewayDetails = default(GatewayDetails), IPv4FirewallSettings ipv4FirewallSettings = default(IPv4FirewallSettings), ConnectionMode? querypoolConnectionMode = default(ConnectionMode?), string state = default(string), string provisioningState = default(string), string serverFullName = default(string))

        : base(asAdministrators, backupBlobContainerUri, gatewayDetails, ipv4FirewallSettings, querypoolConnectionMode)
        {
            this.State = state;
            this.ProvisioningState = provisioningState;
            this.ServerFullName = serverFullName;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets the current state of Analysis Services resource. The state is to
        /// indicate more states outside of resource provisioning. Possible values include: &#39;Deleting&#39;, &#39;Succeeded&#39;, &#39;Failed&#39;, &#39;Paused&#39;, &#39;Suspended&#39;, &#39;Provisioning&#39;, &#39;Updating&#39;, &#39;Suspending&#39;, &#39;Pausing&#39;, &#39;Resuming&#39;, &#39;Preparing&#39;, &#39;Scaling&#39;
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "state")]
        public string State {get; private set; }

        /// <summary>
        /// Gets the current deployment state of Analysis Services resource. The
        /// provisioningState is to indicate states for resource provisioning. Possible values include: &#39;Deleting&#39;, &#39;Succeeded&#39;, &#39;Failed&#39;, &#39;Paused&#39;, &#39;Suspended&#39;, &#39;Provisioning&#39;, &#39;Updating&#39;, &#39;Suspending&#39;, &#39;Pausing&#39;, &#39;Resuming&#39;, &#39;Preparing&#39;, &#39;Scaling&#39;
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "provisioningState")]
        public string ProvisioningState {get; private set; }

        /// <summary>
        /// Gets the full name of the Analysis Services resource.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "serverFullName")]
        public string ServerFullName {get; private set; }
    }
}