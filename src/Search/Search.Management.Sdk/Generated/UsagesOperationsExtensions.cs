// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.
namespace Microsoft.Azure.Management.Search
{
    using Microsoft.Rest.Azure;
    using Models;

    /// <summary>
    /// Extension methods for UsagesOperations
    /// </summary>
    public static partial class UsagesOperationsExtensions
    {
        /// <summary>
        /// Gets a list of all Search quota usages in the given subscription.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='searchManagementRequestOptions'>
        /// 
        /// </param>
        /// <param name='location'>
        /// The unique location name for a Microsoft Azure geographic region.
        /// </param>
        public static Microsoft.Rest.Azure.IPage<QuotaUsageResult> ListBySubscription(this IUsagesOperations operations, string location, SearchManagementRequestOptions searchManagementRequestOptions = default(SearchManagementRequestOptions))
        {
                return ((IUsagesOperations)operations).ListBySubscriptionAsync(location, searchManagementRequestOptions).GetAwaiter().GetResult();
        }

        /// <summary>
        /// Gets a list of all Search quota usages in the given subscription.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='searchManagementRequestOptions'>
        /// 
        /// </param>
        /// <param name='location'>
        /// The unique location name for a Microsoft Azure geographic region.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        public static async System.Threading.Tasks.Task<Microsoft.Rest.Azure.IPage<QuotaUsageResult>> ListBySubscriptionAsync(this IUsagesOperations operations, string location, SearchManagementRequestOptions searchManagementRequestOptions = default(SearchManagementRequestOptions), System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            using (var _result = await operations.ListBySubscriptionWithHttpMessagesAsync(location, searchManagementRequestOptions, null, cancellationToken).ConfigureAwait(false))
            {
                return _result.Body;
            }
        }
        /// <summary>
        /// Gets a list of all Search quota usages in the given subscription.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='nextPageLink'>
        /// The NextLink from the previous successful call to List operation.
        /// </param>
        public static Microsoft.Rest.Azure.IPage<QuotaUsageResult> ListBySubscriptionNext(this IUsagesOperations operations, string nextPageLink, SearchManagementRequestOptions searchManagementRequestOptions = default(SearchManagementRequestOptions))
        {
                return ((IUsagesOperations)operations).ListBySubscriptionNextAsync(nextPageLink, searchManagementRequestOptions).GetAwaiter().GetResult();
        }

        /// <summary>
        /// Gets a list of all Search quota usages in the given subscription.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='nextPageLink'>
        /// The NextLink from the previous successful call to List operation.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        public static async System.Threading.Tasks.Task<Microsoft.Rest.Azure.IPage<QuotaUsageResult>> ListBySubscriptionNextAsync(this IUsagesOperations operations, string nextPageLink, SearchManagementRequestOptions searchManagementRequestOptions = default(SearchManagementRequestOptions), System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            using (var _result = await operations.ListBySubscriptionNextWithHttpMessagesAsync(nextPageLink, searchManagementRequestOptions, null, cancellationToken).ConfigureAwait(false))
            {
                return _result.Body;
            }
        }
    }
}
