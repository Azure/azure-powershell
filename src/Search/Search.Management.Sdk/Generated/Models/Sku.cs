// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.Search.Models
{
    using System.Linq;

    /// <summary>
    /// Defines the SKU of an Azure Cognitive Search Service, which determines
    /// price tier and capacity limits.
    /// </summary>
    public partial class Sku
    {
        /// <summary>
        /// Initializes a new instance of the Sku class.
        /// </summary>
        public Sku()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the Sku class.
        /// </summary>

        /// <param name="name">The SKU of the search service. Valid values include: &#39;free&#39;: Shared
        /// service. &#39;basic&#39;: Dedicated service with up to 3 replicas. &#39;standard&#39;:
        /// Dedicated service with up to 12 partitions and 12 replicas. &#39;standard2&#39;:
        /// Similar to standard, but with more capacity per search unit. &#39;standard3&#39;:
        /// The largest Standard offering with up to 12 partitions and 12 replicas (or
        /// up to 3 partitions with more indexes if you also set the hostingMode
        /// property to &#39;highDensity&#39;). &#39;storage_optimized_l1&#39;: Supports 1TB per
        /// partition, up to 12 partitions. &#39;storage_optimized_l2&#39;: Supports 2TB per
        /// partition, up to 12 partitions.&#39;
        /// Possible values include: 'free', 'basic', 'standard', 'standard2',
        /// 'standard3', 'storage_optimized_l1', 'storage_optimized_l2'</param>
        public Sku(SkuName? name = default(SkuName?))

        {
            this.Name = name;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets or sets the SKU of the search service. Valid values include: &#39;free&#39;:
        /// Shared service. &#39;basic&#39;: Dedicated service with up to 3 replicas.
        /// &#39;standard&#39;: Dedicated service with up to 12 partitions and 12 replicas.
        /// &#39;standard2&#39;: Similar to standard, but with more capacity per search unit.
        /// &#39;standard3&#39;: The largest Standard offering with up to 12 partitions and 12
        /// replicas (or up to 3 partitions with more indexes if you also set the
        /// hostingMode property to &#39;highDensity&#39;). &#39;storage_optimized_l1&#39;: Supports
        /// 1TB per partition, up to 12 partitions. &#39;storage_optimized_l2&#39;: Supports
        /// 2TB per partition, up to 12 partitions.&#39; Possible values include: &#39;free&#39;, &#39;basic&#39;, &#39;standard&#39;, &#39;standard2&#39;, &#39;standard3&#39;, &#39;storage_optimized_l1&#39;, &#39;storage_optimized_l2&#39;
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "name")]
        public SkuName? Name {get; set; }
    }
}