// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.Search.Models
{

    /// <summary>
    /// Defines values for AadAuthFailureMode.
    /// </summary>


    [Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
    public enum AadAuthFailureMode
    {
        /// <summary>
        /// Indicates that requests that failed authentication should be presented with an HTTP status code of 403 (Forbidden).
        /// </summary>
        [System.Runtime.Serialization.EnumMember(Value = "http403")]
        Http403,
        /// <summary>
        /// Indicates that requests that failed authentication should be presented with an HTTP status code of 401 (Unauthorized) and present a Bearer Challenge.
        /// </summary>
        [System.Runtime.Serialization.EnumMember(Value = "http401WithBearerChallenge")]
        Http401WithBearerChallenge
    }
    internal static class AadAuthFailureModeEnumExtension
    {
        internal static string ToSerializedValue(this AadAuthFailureMode? value)
        {
            return value == null ? null : ((AadAuthFailureMode)value).ToSerializedValue();
        }
        internal static string ToSerializedValue(this AadAuthFailureMode value)
        {
            switch( value )
            {
                case AadAuthFailureMode.Http403:
                    return "http403";
                case AadAuthFailureMode.Http401WithBearerChallenge:
                    return "http401WithBearerChallenge";
            }
            return null;
        }
        internal static AadAuthFailureMode? ParseAadAuthFailureMode(this string value)
        {
            switch( value )
            {
                case "http403":
                    return AadAuthFailureMode.Http403;
                case "http401WithBearerChallenge":
                    return AadAuthFailureMode.Http401WithBearerChallenge;
            }
            return null;
        }
    }
}