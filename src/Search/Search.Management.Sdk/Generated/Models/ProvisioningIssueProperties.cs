// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.Search.Models
{
    using System.Linq;

    /// <summary>
    /// Details of a provisioning issue for a network security perimeter (NSP)
    /// configuration. Resource providers should generate separate provisioning
    /// issue elements for each separate issue detected, and include a meaningful
    /// and distinctive description, as well as any appropriate
    /// suggestedResourceIds and suggestedAccessRules
    /// </summary>
    public partial class ProvisioningIssueProperties
    {
        /// <summary>
        /// Initializes a new instance of the ProvisioningIssueProperties class.
        /// </summary>
        public ProvisioningIssueProperties()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the ProvisioningIssueProperties class.
        /// </summary>

        /// <param name="issueType">Type of issue
        /// Possible values include: &#39;Unknown&#39;, &#39;ConfigurationPropagationFailure&#39;,
        /// &#39;MissingPerimeterConfiguration&#39;, &#39;MissingIdentityConfiguration&#39;</param>

        /// <param name="severity">Severity of the issue.
        /// Possible values include: &#39;Warning&#39;, &#39;Error&#39;</param>

        /// <param name="description">Description of the issue
        /// </param>

        /// <param name="suggestedResourceIds">Fully qualified resource IDs of suggested resources that can be associated
        /// to the network security perimeter (NSP) to remediate the issue.
        /// </param>

        /// <param name="suggestedAccessRules">Access rules that can be added to the network security profile (NSP) to
        /// remediate the issue.
        /// </param>
        public ProvisioningIssueProperties(string issueType = default(string), string severity = default(string), string description = default(string), System.Collections.Generic.IList<string> suggestedResourceIds = default(System.Collections.Generic.IList<string>), System.Collections.Generic.IList<AccessRule> suggestedAccessRules = default(System.Collections.Generic.IList<AccessRule>))

        {
            this.IssueType = issueType;
            this.Severity = severity;
            this.Description = description;
            this.SuggestedResourceIds = suggestedResourceIds;
            this.SuggestedAccessRules = suggestedAccessRules;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets type of issue Possible values include: &#39;Unknown&#39;, &#39;ConfigurationPropagationFailure&#39;, &#39;MissingPerimeterConfiguration&#39;, &#39;MissingIdentityConfiguration&#39;
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "issueType")]
        public string IssueType {get; private set; }

        /// <summary>
        /// Gets severity of the issue. Possible values include: &#39;Warning&#39;, &#39;Error&#39;
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "severity")]
        public string Severity {get; private set; }

        /// <summary>
        /// Gets description of the issue
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "description")]
        public string Description {get; private set; }

        /// <summary>
        /// Gets fully qualified resource IDs of suggested resources that can be
        /// associated to the network security perimeter (NSP) to remediate the issue.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "suggestedResourceIds")]
        public System.Collections.Generic.IList<string> SuggestedResourceIds {get; private set; }

        /// <summary>
        /// Gets access rules that can be added to the network security profile (NSP)
        /// to remediate the issue.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "suggestedAccessRules")]
        public System.Collections.Generic.IList<AccessRule> SuggestedAccessRules {get; private set; }
    }
}