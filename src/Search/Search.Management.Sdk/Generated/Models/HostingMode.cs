// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.Search.Models
{

    /// <summary>
    /// Defines values for HostingMode.
    /// </summary>


    [Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
    public enum HostingMode
    {
        /// <summary>
        /// The limit on number of indexes is determined by the default limits for the SKU.
        /// </summary>
        [System.Runtime.Serialization.EnumMember(Value = "default")]
        Default,
        /// <summary>
        /// Only application for standard3 SKU, where the search service can have up to 1000 indexes.
        /// </summary>
        [System.Runtime.Serialization.EnumMember(Value = "highDensity")]
        HighDensity
    }
    internal static class HostingModeEnumExtension
    {
        internal static string ToSerializedValue(this HostingMode? value)
        {
            return value == null ? null : ((HostingMode)value).ToSerializedValue();
        }
        internal static string ToSerializedValue(this HostingMode value)
        {
            switch( value )
            {
                case HostingMode.Default:
                    return "default";
                case HostingMode.HighDensity:
                    return "highDensity";
            }
            return null;
        }
        internal static HostingMode? ParseHostingMode(this string value)
        {
            switch( value )
            {
                case "default":
                    return HostingMode.Default;
                case "highDensity":
                    return HostingMode.HighDensity;
            }
            return null;
        }
    }
}