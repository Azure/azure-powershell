// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.Search.Models
{
    using System.Linq;

    /// <summary>
    /// Identity for the resource.
    /// </summary>
    public partial class Identity
    {
        /// <summary>
        /// Initializes a new instance of the Identity class.
        /// </summary>
        public Identity()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the Identity class.
        /// </summary>

        /// <param name="principalId">The principal ID of the system-assigned identity of the search service.
        /// </param>

        /// <param name="tenantId">The tenant ID of the system-assigned identity of the search service.
        /// </param>

        /// <param name="type">The identity type.
        /// Possible values include: 'None', 'SystemAssigned'</param>
        public Identity(IdentityType type, string principalId = default(string), string tenantId = default(string))

        {
            this.PrincipalId = principalId;
            this.TenantId = tenantId;
            this.Type = type;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets the principal ID of the system-assigned identity of the search
        /// service.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "principalId")]
        public string PrincipalId {get; private set; }

        /// <summary>
        /// Gets the tenant ID of the system-assigned identity of the search service.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "tenantId")]
        public string TenantId {get; private set; }

        /// <summary>
        /// Gets or sets the identity type. Possible values include: &#39;None&#39;, &#39;SystemAssigned&#39;
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "type")]
        public IdentityType Type {get; set; }
        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {



        }
    }
}