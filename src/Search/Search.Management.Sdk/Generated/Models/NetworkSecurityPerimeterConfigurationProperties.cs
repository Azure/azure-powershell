// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.Search.Models
{
    using System.Linq;

    /// <summary>
    /// Network security configuration properties.
    /// </summary>
    public partial class NetworkSecurityPerimeterConfigurationProperties
    {
        /// <summary>
        /// Initializes a new instance of the NetworkSecurityPerimeterConfigurationProperties class.
        /// </summary>
        public NetworkSecurityPerimeterConfigurationProperties()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the NetworkSecurityPerimeterConfigurationProperties class.
        /// </summary>

        /// <param name="provisioningState">Provisioning state of a network security perimeter configuration that is
        /// being created or updated.
        /// Possible values include: &#39;Succeeded&#39;, &#39;Creating&#39;, &#39;Updating&#39;, &#39;Deleting&#39;,
        /// &#39;Accepted&#39;, &#39;Failed&#39;, &#39;Canceled&#39;</param>

        /// <param name="provisioningIssues">List of provisioning issues, if any
        /// </param>

        /// <param name="networkSecurityPerimeter">Information about a network security perimeter (NSP)
        /// </param>

        /// <param name="resourceAssociation">Information about resource association
        /// </param>

        /// <param name="profile">Network security perimeter configuration profile
        /// </param>
        public NetworkSecurityPerimeterConfigurationProperties(string provisioningState = default(string), System.Collections.Generic.IList<ProvisioningIssue> provisioningIssues = default(System.Collections.Generic.IList<ProvisioningIssue>), NetworkSecurityPerimeter networkSecurityPerimeter = default(NetworkSecurityPerimeter), ResourceAssociation resourceAssociation = default(ResourceAssociation), NetworkSecurityProfile profile = default(NetworkSecurityProfile))

        {
            this.ProvisioningState = provisioningState;
            this.ProvisioningIssues = provisioningIssues;
            this.NetworkSecurityPerimeter = networkSecurityPerimeter;
            this.ResourceAssociation = resourceAssociation;
            this.Profile = profile;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets provisioning state of a network security perimeter configuration that
        /// is being created or updated. Possible values include: &#39;Succeeded&#39;, &#39;Creating&#39;, &#39;Updating&#39;, &#39;Deleting&#39;, &#39;Accepted&#39;, &#39;Failed&#39;, &#39;Canceled&#39;
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "provisioningState")]
        public string ProvisioningState {get; private set; }

        /// <summary>
        /// Gets list of provisioning issues, if any
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "provisioningIssues")]
        public System.Collections.Generic.IList<ProvisioningIssue> ProvisioningIssues {get; private set; }

        /// <summary>
        /// Gets or sets information about a network security perimeter (NSP)
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "networkSecurityPerimeter")]
        public NetworkSecurityPerimeter NetworkSecurityPerimeter {get; set; }

        /// <summary>
        /// Gets or sets information about resource association
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "resourceAssociation")]
        public ResourceAssociation ResourceAssociation {get; set; }

        /// <summary>
        /// Gets or sets network security perimeter configuration profile
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "profile")]
        public NetworkSecurityProfile Profile {get; set; }
    }
}