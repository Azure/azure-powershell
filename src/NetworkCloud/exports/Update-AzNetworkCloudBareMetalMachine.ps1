
# ----------------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# http://www.apache.org/licenses/LICENSE-2.0
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# Code generated by Microsoft (R) AutoRest Code Generator.Changes may cause incorrect behavior and will be lost if the code
# is regenerated.
# ----------------------------------------------------------------------------------

<#
.Synopsis
Reimage the provided bare metal machine.
.Description
Reimage the provided bare metal machine.
.Example
{{ Add code here }}
.Example
{{ Add code here }}

.Inputs
Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api202212Preview.IBareMetalMachineReplaceParameters
.Inputs
Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.INetworkCloudIdentity
.Outputs
Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api202212Preview.IBareMetalMachine
.Outputs
System.Boolean
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

BAREMETALMACHINEREPLACEPARAMETER <IBareMetalMachineReplaceParameters>: BareMetalMachineReplaceParameters represents the body of the request to physically swap a bare metal machine for another.
  [BmcCredentialsPassword <String>]: The password of the administrator of the device used during initialization.
  [BmcCredentialsUsername <String>]: The username of the administrator of the device used during initialization.
  [BmcMacAddress <String>]: The MAC address of the BMC device.
  [BootMacAddress <String>]: The MAC address of a NIC connected to the PXE network.
  [MachineName <String>]: The OS-level hostname assigned to this machine.
  [SerialNumber <String>]: The serial number of the bare metal machine.

INPUTOBJECT <INetworkCloudIdentity>: Identity Parameter
  [BareMetalMachineKeySetName <String>]: The name of the bare metal machine key set.
  [BareMetalMachineName <String>]: The name of the bare metal machine.
  [BmcKeySetName <String>]: The name of the baseboard management controller key set.
  [CloudServicesNetworkName <String>]: The name of the cloud services network.
  [ClusterManagerName <String>]: The name of the cluster manager.
  [ClusterName <String>]: The name of the cluster.
  [ConsoleName <String>]: The name of the virtual machine console.
  [DefaultCniNetworkName <String>]: The name of the default CNI network.
  [HybridAksClusterName <String>]: The name of the Hybrid AKS cluster.
  [Id <String>]: Resource identity path
  [L2NetworkName <String>]: The name of the L2 network.
  [L3NetworkName <String>]: The name of the L3 network.
  [MetricsConfigurationName <String>]: The name of the metrics configuration for the cluster.
  [RackName <String>]: The name of the rack.
  [RackSkuName <String>]: The name of the rack SKU.
  [ResourceGroupName <String>]: The name of the resource group. The name is case insensitive.
  [StorageApplianceName <String>]: The name of the storage appliance.
  [SubscriptionId <String>]: The ID of the target subscription.
  [TrunkedNetworkName <String>]: The name of the trunked network.
  [VirtualMachineName <String>]: The name of the virtual machine.
  [VolumeName <String>]: The name of the volume.
.Link
https://learn.microsoft.com/powershell/module/az.networkcloud/update-aznetworkcloudbaremetalmachine
#>
function Update-AzNetworkCloudBareMetalMachine {
[OutputType([System.Boolean], [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api202212Preview.IBareMetalMachine])]
[CmdletBinding(DefaultParameterSetName='Reimage', PositionalBinding=$false, SupportsShouldProcess, ConfirmImpact='Medium')]
param(
    [Parameter(ParameterSetName='Reimage', Mandatory)]
    [Parameter(ParameterSetName='Replace', Mandatory)]
    [Parameter(ParameterSetName='ReplaceExpanded', Mandatory)]
    [Parameter(ParameterSetName='UpdateExpanded', Mandatory)]
    [Alias('BareMetalMachineName')]
    [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Category('Path')]
    [System.String]
    # The name of the bare metal machine.
    ${Name},

    [Parameter(ParameterSetName='Reimage', Mandatory)]
    [Parameter(ParameterSetName='Replace', Mandatory)]
    [Parameter(ParameterSetName='ReplaceExpanded', Mandatory)]
    [Parameter(ParameterSetName='UpdateExpanded', Mandatory)]
    [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Category('Path')]
    [System.String]
    # The name of the resource group.
    # The name is case insensitive.
    ${ResourceGroupName},

    [Parameter(ParameterSetName='Reimage')]
    [Parameter(ParameterSetName='Replace')]
    [Parameter(ParameterSetName='ReplaceExpanded')]
    [Parameter(ParameterSetName='UpdateExpanded')]
    [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Category('Path')]
    [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Runtime.DefaultInfo(Script='(Get-AzContext).Subscription.Id')]
    [System.String]
    # The ID of the target subscription.
    ${SubscriptionId},

    [Parameter(ParameterSetName='ReimageViaIdentity', Mandatory, ValueFromPipeline)]
    [Parameter(ParameterSetName='ReplaceViaIdentity', Mandatory, ValueFromPipeline)]
    [Parameter(ParameterSetName='ReplaceViaIdentityExpanded', Mandatory, ValueFromPipeline)]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded', Mandatory, ValueFromPipeline)]
    [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Category('Path')]
    [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.INetworkCloudIdentity]
    # Identity Parameter
    # To construct, see NOTES section for INPUTOBJECT properties and create a hash table.
    ${InputObject},

    [Parameter(ParameterSetName='Replace', Mandatory, ValueFromPipeline)]
    [Parameter(ParameterSetName='ReplaceViaIdentity', Mandatory, ValueFromPipeline)]
    [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Category('Body')]
    [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api202212Preview.IBareMetalMachineReplaceParameters]
    # BareMetalMachineReplaceParameters represents the body of the request to physically swap a bare metal machine for another.
    # To construct, see NOTES section for BAREMETALMACHINEREPLACEPARAMETER properties and create a hash table.
    ${BareMetalMachineReplaceParameter},

    [Parameter(ParameterSetName='ReplaceExpanded')]
    [Parameter(ParameterSetName='ReplaceViaIdentityExpanded')]
    [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Category('Body')]
    [System.String]
    # The password of the administrator of the device used during initialization.
    ${BmcCredentialsPassword},

    [Parameter(ParameterSetName='ReplaceExpanded')]
    [Parameter(ParameterSetName='ReplaceViaIdentityExpanded')]
    [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Category('Body')]
    [System.String]
    # The username of the administrator of the device used during initialization.
    ${BmcCredentialsUsername},

    [Parameter(ParameterSetName='ReplaceExpanded')]
    [Parameter(ParameterSetName='ReplaceViaIdentityExpanded')]
    [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Category('Body')]
    [System.String]
    # The MAC address of the BMC device.
    ${BmcMacAddress},

    [Parameter(ParameterSetName='ReplaceExpanded')]
    [Parameter(ParameterSetName='ReplaceViaIdentityExpanded')]
    [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Category('Body')]
    [System.String]
    # The MAC address of a NIC connected to the PXE network.
    ${BootMacAddress},

    [Parameter(ParameterSetName='ReplaceExpanded')]
    [Parameter(ParameterSetName='ReplaceViaIdentityExpanded')]
    [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Category('Body')]
    [System.String]
    # The OS-level hostname assigned to this machine.
    ${MachineName},

    [Parameter(ParameterSetName='ReplaceExpanded')]
    [Parameter(ParameterSetName='ReplaceViaIdentityExpanded')]
    [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Category('Body')]
    [System.String]
    # The serial number of the bare metal machine.
    ${SerialNumber},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Category('Body')]
    [System.String]
    # The details provided by the customer during the creation of rack manifeststhat allows for custom data to be associated with this machine.
    ${MachineDetail},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Category('Body')]
    [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Runtime.Info(PossibleTypes=([Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api202212Preview.IBareMetalMachinePatchParametersTags]))]
    [System.Collections.Hashtable]
    # The Azure resource tags that will replace the existing ones.
    ${Tag},

    [Parameter()]
    [Alias('AzureRMContext', 'AzureCredential')]
    [ValidateNotNull()]
    [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Category('Azure')]
    [System.Management.Automation.PSObject]
    # The DefaultProfile parameter is not functional.
    # Use the SubscriptionId parameter when available if executing the cmdlet against a different subscription.
    ${DefaultProfile},

    [Parameter()]
    [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Run the command as a job
    ${AsJob},

    [Parameter(DontShow)]
    [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Category('Runtime')]
    [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Category('Runtime')]
    [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter()]
    [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Run the command asynchronously
    ${NoWait},

    [Parameter(ParameterSetName='Reimage')]
    [Parameter(ParameterSetName='ReimageViaIdentity')]
    [Parameter(ParameterSetName='Replace')]
    [Parameter(ParameterSetName='ReplaceExpanded')]
    [Parameter(ParameterSetName='ReplaceViaIdentity')]
    [Parameter(ParameterSetName='ReplaceViaIdentityExpanded')]
    [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Returns true when the command succeeds
    ${PassThru},

    [Parameter(DontShow)]
    [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName

        if ($null -eq [Microsoft.WindowsAzure.Commands.Utilities.Common.AzurePSCmdlet]::PowerShellVersion) {
            [Microsoft.WindowsAzure.Commands.Utilities.Common.AzurePSCmdlet]::PowerShellVersion = $PSVersionTable.PSVersion.ToString()
        }         
        $preTelemetryId = [Microsoft.WindowsAzure.Commands.Common.MetricHelper]::TelemetryId
        if ($preTelemetryId -eq '') {
            [Microsoft.WindowsAzure.Commands.Common.MetricHelper]::TelemetryId =(New-Guid).ToString()
            [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.module]::Instance.Telemetry.Invoke('Create', $MyInvocation, $parameterSet, $PSCmdlet)
        } else {
            $internalCalledCmdlets = [Microsoft.WindowsAzure.Commands.Common.MetricHelper]::InternalCalledCmdlets
            if ($internalCalledCmdlets -eq '') {
                [Microsoft.WindowsAzure.Commands.Common.MetricHelper]::InternalCalledCmdlets = $MyInvocation.MyCommand.Name
            } else {
                [Microsoft.WindowsAzure.Commands.Common.MetricHelper]::InternalCalledCmdlets += ',' + $MyInvocation.MyCommand.Name
            }
            [Microsoft.WindowsAzure.Commands.Common.MetricHelper]::TelemetryId = 'internal'
        }

        $mapping = @{
            Reimage = 'Az.NetworkCloud.private\Update-AzNetworkCloudBareMetalMachine_Reimage';
            ReimageViaIdentity = 'Az.NetworkCloud.private\Update-AzNetworkCloudBareMetalMachine_ReimageViaIdentity';
            Replace = 'Az.NetworkCloud.private\Update-AzNetworkCloudBareMetalMachine_Replace';
            ReplaceExpanded = 'Az.NetworkCloud.private\Update-AzNetworkCloudBareMetalMachine_ReplaceExpanded';
            ReplaceViaIdentity = 'Az.NetworkCloud.private\Update-AzNetworkCloudBareMetalMachine_ReplaceViaIdentity';
            ReplaceViaIdentityExpanded = 'Az.NetworkCloud.private\Update-AzNetworkCloudBareMetalMachine_ReplaceViaIdentityExpanded';
            UpdateExpanded = 'Az.NetworkCloud.private\Update-AzNetworkCloudBareMetalMachine_UpdateExpanded';
            UpdateViaIdentityExpanded = 'Az.NetworkCloud.private\Update-AzNetworkCloudBareMetalMachine_UpdateViaIdentityExpanded';
        }
        if (('Reimage', 'Replace', 'ReplaceExpanded', 'UpdateExpanded') -contains $parameterSet -and -not $PSBoundParameters.ContainsKey('SubscriptionId')) {
            $PSBoundParameters['SubscriptionId'] = (Get-AzContext).Subscription.Id
        }
        $cmdInfo = Get-Command -Name $mapping[$parameterSet]
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Runtime.MessageAttributeHelper]::ProcessCustomAttributesAtRuntime($cmdInfo, $MyInvocation, $parameterSet, $PSCmdlet)
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {
        [Microsoft.WindowsAzure.Commands.Common.MetricHelper]::ClearTelemetryContext()
        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {
        [Microsoft.WindowsAzure.Commands.Common.MetricHelper]::ClearTelemetryContext()
        throw
    }

    finally {
        $backupTelemetryId = [Microsoft.WindowsAzure.Commands.Common.MetricHelper]::TelemetryId
        $backupInternalCalledCmdlets = [Microsoft.WindowsAzure.Commands.Common.MetricHelper]::InternalCalledCmdlets
        [Microsoft.WindowsAzure.Commands.Common.MetricHelper]::ClearTelemetryContext()
    }

}
end {
    try {
        $steppablePipeline.End()

        [Microsoft.WindowsAzure.Commands.Common.MetricHelper]::TelemetryId = $backupTelemetryId
        [Microsoft.WindowsAzure.Commands.Common.MetricHelper]::InternalCalledCmdlets = $backupInternalCalledCmdlets
        if ($preTelemetryId -eq '') {
            [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.module]::Instance.Telemetry.Invoke('Send', $MyInvocation, $parameterSet, $PSCmdlet)
            [Microsoft.WindowsAzure.Commands.Common.MetricHelper]::ClearTelemetryContext()
        }
        [Microsoft.WindowsAzure.Commands.Common.MetricHelper]::TelemetryId = $preTelemetryId

    } catch {
        [Microsoft.WindowsAzure.Commands.Common.MetricHelper]::ClearTelemetryContext()
        throw
    }
} 
}
