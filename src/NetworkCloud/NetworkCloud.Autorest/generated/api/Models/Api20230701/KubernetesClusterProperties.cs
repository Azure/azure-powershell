// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701
{
    using static Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Runtime.Extensions;

    /// <summary>
    /// KubernetesClusterProperties represents the properties of Kubernetes cluster resource.
    /// </summary>
    public partial class KubernetesClusterProperties :
        Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IKubernetesClusterProperties,
        Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IKubernetesClusterPropertiesInternal
    {

        /// <summary>Backing field for <see cref="AadConfiguration" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IAadConfiguration _aadConfiguration;

        /// <summary>The Azure Active Directory Integration properties.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IAadConfiguration AadConfiguration { get => (this._aadConfiguration = this._aadConfiguration ?? new Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.AadConfiguration()); set => this._aadConfiguration = value; }

        /// <summary>
        /// The list of Azure Active Directory group object IDs that will have an administrative role on the Kubernetes cluster.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.PropertyOrigin.Inlined)]
        public string[] AadConfigurationAdminGroupObjectId { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IAadConfigurationInternal)AadConfiguration).AdminGroupObjectId; set => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IAadConfigurationInternal)AadConfiguration).AdminGroupObjectId = value ?? null /* arrayOf */; }

        /// <summary>
        /// The user name for the administrator that will be applied to the operating systems that run Kubernetes nodes. If not supplied,
        /// a user name will be chosen by the service.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.PropertyOrigin.Inlined)]
        public string AdminUsername { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IAdministratorConfigurationInternal)AdministratorConfiguration).AdminUsername; set => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IAdministratorConfigurationInternal)AdministratorConfiguration).AdminUsername = value ?? null; }

        /// <summary>Backing field for <see cref="AdministratorConfiguration" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IAdministratorConfiguration _administratorConfiguration;

        /// <summary>
        /// The administrative credentials that will be applied to the control plane and agent pool nodes that do not specify their
        /// own values.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IAdministratorConfiguration AdministratorConfiguration { get => (this._administratorConfiguration = this._administratorConfiguration ?? new Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.AdministratorConfiguration()); set => this._administratorConfiguration = value; }

        /// <summary>The list of Layer 2 Networks and related configuration for attachment.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IL2NetworkAttachmentConfiguration[] AttachedNetworkConfigurationL2Network { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.INetworkConfigurationInternal)NetworkConfiguration).AttachedNetworkConfigurationL2Network; set => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.INetworkConfigurationInternal)NetworkConfiguration).AttachedNetworkConfigurationL2Network = value ?? null /* arrayOf */; }

        /// <summary>The list of Layer 3 Networks and related configuration for attachment.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IL3NetworkAttachmentConfiguration[] AttachedNetworkConfigurationL3Network { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.INetworkConfigurationInternal)NetworkConfiguration).AttachedNetworkConfigurationL3Network; set => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.INetworkConfigurationInternal)NetworkConfiguration).AttachedNetworkConfigurationL3Network = value ?? null /* arrayOf */; }

        /// <summary>The list of Trunked Networks and related configuration for attachment.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.ITrunkedNetworkAttachmentConfiguration[] AttachedNetworkConfigurationTrunkedNetwork { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.INetworkConfigurationInternal)NetworkConfiguration).AttachedNetworkConfigurationTrunkedNetwork; set => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.INetworkConfigurationInternal)NetworkConfiguration).AttachedNetworkConfigurationTrunkedNetwork = value ?? null /* arrayOf */; }

        /// <summary>Backing field for <see cref="AttachedNetworkId" /> property.</summary>
        private string[] _attachedNetworkId;

        /// <summary>
        /// The full list of network resource IDs that are attached to this cluster, including those attached only to specific agent
        /// pools.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.PropertyOrigin.Owned)]
        public string[] AttachedNetworkId { get => this._attachedNetworkId; }

        /// <summary>Backing field for <see cref="AvailableUpgrade" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IAvailableUpgrade[] _availableUpgrade;

        /// <summary>The list of versions that this Kubernetes cluster can be upgraded to.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IAvailableUpgrade[] AvailableUpgrade { get => this._availableUpgrade; }

        /// <summary>
        /// The association of IP address pools to the communities and peers, allowing for announcement of IPs.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IBgpAdvertisement[] BgpServiceLoadBalancerConfigurationBgpAdvertisement { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.INetworkConfigurationInternal)NetworkConfiguration).BgpServiceLoadBalancerConfigurationBgpAdvertisement; set => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.INetworkConfigurationInternal)NetworkConfiguration).BgpServiceLoadBalancerConfigurationBgpAdvertisement = value ?? null /* arrayOf */; }

        /// <summary>
        /// The list of additional BgpPeer entities that the Kubernetes cluster will peer with. All peering must be explicitly defined.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IServiceLoadBalancerBgpPeer[] BgpServiceLoadBalancerConfigurationBgpPeer { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.INetworkConfigurationInternal)NetworkConfiguration).BgpServiceLoadBalancerConfigurationBgpPeer; set => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.INetworkConfigurationInternal)NetworkConfiguration).BgpServiceLoadBalancerConfigurationBgpPeer = value ?? null /* arrayOf */; }

        /// <summary>The indicator to specify if the load balancer peers with the network fabric.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Support.FabricPeeringEnabled? BgpServiceLoadBalancerConfigurationFabricPeeringEnabled { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.INetworkConfigurationInternal)NetworkConfiguration).BgpServiceLoadBalancerConfigurationFabricPeeringEnabled; set => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.INetworkConfigurationInternal)NetworkConfiguration).BgpServiceLoadBalancerConfigurationFabricPeeringEnabled = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Support.FabricPeeringEnabled)""); }

        /// <summary>
        /// The list of pools of IP addresses that can be allocated to Load Balancer services.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IIPAddressPool[] BgpServiceLoadBalancerConfigurationIPAddressPool { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.INetworkConfigurationInternal)NetworkConfiguration).BgpServiceLoadBalancerConfigurationIPAddressPool; set => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.INetworkConfigurationInternal)NetworkConfiguration).BgpServiceLoadBalancerConfigurationIPAddressPool = value ?? null /* arrayOf */; }

        /// <summary>Backing field for <see cref="ClusterId" /> property.</summary>
        private string _clusterId;

        /// <summary>The resource ID of the Network Cloud cluster.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.PropertyOrigin.Owned)]
        public string ClusterId { get => this._clusterId; }

        /// <summary>Backing field for <see cref="ConnectedClusterId" /> property.</summary>
        private string _connectedClusterId;

        /// <summary>
        /// The resource ID of the connected cluster set up when this Kubernetes cluster is created.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.PropertyOrigin.Owned)]
        public string ConnectedClusterId { get => this._connectedClusterId; }

        /// <summary>Backing field for <see cref="ControlPlaneKubernetesVersion" /> property.</summary>
        private string _controlPlaneKubernetesVersion;

        /// <summary>The current running version of Kubernetes on the control plane.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.PropertyOrigin.Owned)]
        public string ControlPlaneKubernetesVersion { get => this._controlPlaneKubernetesVersion; }

        /// <summary>Backing field for <see cref="ControlPlaneNodeConfiguration" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IControlPlaneNodeConfiguration _controlPlaneNodeConfiguration;

        /// <summary>The defining characteristics of the control plane for this Kubernetes Cluster.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IControlPlaneNodeConfiguration ControlPlaneNodeConfiguration { get => (this._controlPlaneNodeConfiguration = this._controlPlaneNodeConfiguration ?? new Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.ControlPlaneNodeConfiguration()); set => this._controlPlaneNodeConfiguration = value; }

        /// <summary>
        /// The user name for the administrator that will be applied to the operating systems that run Kubernetes nodes. If not supplied,
        /// a user name will be chosen by the service.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.PropertyOrigin.Inlined)]
        public string ControlPlaneNodeConfigurationAdministratorConfigurationAdminUsername { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IControlPlaneNodeConfigurationInternal)ControlPlaneNodeConfiguration).AdministratorConfigurationAdminUsername; set => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IControlPlaneNodeConfigurationInternal)ControlPlaneNodeConfiguration).AdministratorConfigurationAdminUsername = value ?? null; }

        /// <summary>
        /// The SSH configuration for the operating systems that run the nodes in the Kubernetes cluster. In some cases, specification
        /// of public keys may be required to produce a working environment.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.ISshPublicKey[] ControlPlaneNodeConfigurationAdministratorConfigurationSshPublicKey { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IControlPlaneNodeConfigurationInternal)ControlPlaneNodeConfiguration).AdministratorConfigurationSshPublicKey; set => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IControlPlaneNodeConfigurationInternal)ControlPlaneNodeConfiguration).AdministratorConfigurationSshPublicKey = value ?? null /* arrayOf */; }

        /// <summary>
        /// The list of availability zones of the Network Cloud cluster to be used for the provisioning of nodes in the control plane.
        /// If not specified, all availability zones will be used.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.PropertyOrigin.Inlined)]
        public string[] ControlPlaneNodeConfigurationAvailabilityZone { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IControlPlaneNodeConfigurationInternal)ControlPlaneNodeConfiguration).AvailabilityZone; set => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IControlPlaneNodeConfigurationInternal)ControlPlaneNodeConfiguration).AvailabilityZone = value ?? null /* arrayOf */; }

        /// <summary>The number of virtual machines that use this configuration.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.PropertyOrigin.Inlined)]
        public long ControlPlaneNodeConfigurationCount { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IControlPlaneNodeConfigurationInternal)ControlPlaneNodeConfiguration).Count; set => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IControlPlaneNodeConfigurationInternal)ControlPlaneNodeConfiguration).Count = value ; }

        /// <summary>The name of the VM SKU supplied during creation.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.PropertyOrigin.Inlined)]
        public string ControlPlaneNodeConfigurationVMSkuName { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IControlPlaneNodeConfigurationInternal)ControlPlaneNodeConfiguration).VMSkuName; set => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IControlPlaneNodeConfigurationInternal)ControlPlaneNodeConfiguration).VMSkuName = value ; }

        /// <summary>Backing field for <see cref="DetailedStatus" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Support.KubernetesClusterDetailedStatus? _detailedStatus;

        /// <summary>The current status of the Kubernetes cluster.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Support.KubernetesClusterDetailedStatus? DetailedStatus { get => this._detailedStatus; }

        /// <summary>Backing field for <see cref="DetailedStatusMessage" /> property.</summary>
        private string _detailedStatusMessage;

        /// <summary>The descriptive message about the current detailed status.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.PropertyOrigin.Owned)]
        public string DetailedStatusMessage { get => this._detailedStatusMessage; }

        /// <summary>Backing field for <see cref="FeatureStatuses" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IFeatureStatus[] _featureStatuses;

        /// <summary>The current feature settings.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IFeatureStatus[] FeatureStatuses { get => this._featureStatuses; }

        /// <summary>Backing field for <see cref="InitialAgentPoolConfiguration" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IInitialAgentPoolConfiguration[] _initialAgentPoolConfiguration;

        /// <summary>
        /// The agent pools that are created with this Kubernetes cluster for running critical system services and workloads. This
        /// data in this field is only used during creation, and the field will be empty following the creation of the Kubernetes
        /// Cluster. After creation, the management of agent pools is done using the agentPools sub-resource.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IInitialAgentPoolConfiguration[] InitialAgentPoolConfiguration { get => this._initialAgentPoolConfiguration; set => this._initialAgentPoolConfiguration = value; }

        /// <summary>Backing field for <see cref="KubernetesVersion" /> property.</summary>
        private string _kubernetesVersion;

        /// <summary>
        /// The Kubernetes version for this cluster. Accepts n.n, n.n.n, and n.n.n-n format. The interpreted version used will be
        /// resolved into this field after creation or update.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.PropertyOrigin.Owned)]
        public string KubernetesVersion { get => this._kubernetesVersion; set => this._kubernetesVersion = value; }

        /// <summary>Backing field for <see cref="ManagedResourceGroupConfiguration" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IManagedResourceGroupConfiguration _managedResourceGroupConfiguration;

        /// <summary>The configuration of the managed resource group associated with the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IManagedResourceGroupConfiguration ManagedResourceGroupConfiguration { get => (this._managedResourceGroupConfiguration = this._managedResourceGroupConfiguration ?? new Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.ManagedResourceGroupConfiguration()); set => this._managedResourceGroupConfiguration = value; }

        /// <summary>
        /// The location of the managed resource group. If not specified, the location of the parent resource is chosen.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.PropertyOrigin.Inlined)]
        public string ManagedResourceGroupConfigurationLocation { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IManagedResourceGroupConfigurationInternal)ManagedResourceGroupConfiguration).Location; set => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IManagedResourceGroupConfigurationInternal)ManagedResourceGroupConfiguration).Location = value ?? null; }

        /// <summary>
        /// The name for the managed resource group. If not specified, the unique name is automatically generated.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.PropertyOrigin.Inlined)]
        public string ManagedResourceGroupConfigurationName { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IManagedResourceGroupConfigurationInternal)ManagedResourceGroupConfiguration).Name; set => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IManagedResourceGroupConfigurationInternal)ManagedResourceGroupConfiguration).Name = value ?? null; }

        /// <summary>Internal Acessors for AadConfiguration</summary>
        Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IAadConfiguration Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IKubernetesClusterPropertiesInternal.AadConfiguration { get => (this._aadConfiguration = this._aadConfiguration ?? new Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.AadConfiguration()); set { {_aadConfiguration = value;} } }

        /// <summary>Internal Acessors for AdministratorConfiguration</summary>
        Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IAdministratorConfiguration Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IKubernetesClusterPropertiesInternal.AdministratorConfiguration { get => (this._administratorConfiguration = this._administratorConfiguration ?? new Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.AdministratorConfiguration()); set { {_administratorConfiguration = value;} } }

        /// <summary>Internal Acessors for AttachedNetworkId</summary>
        string[] Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IKubernetesClusterPropertiesInternal.AttachedNetworkId { get => this._attachedNetworkId; set { {_attachedNetworkId = value;} } }

        /// <summary>Internal Acessors for AvailableUpgrade</summary>
        Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IAvailableUpgrade[] Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IKubernetesClusterPropertiesInternal.AvailableUpgrade { get => this._availableUpgrade; set { {_availableUpgrade = value;} } }

        /// <summary>Internal Acessors for ClusterId</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IKubernetesClusterPropertiesInternal.ClusterId { get => this._clusterId; set { {_clusterId = value;} } }

        /// <summary>Internal Acessors for ConnectedClusterId</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IKubernetesClusterPropertiesInternal.ConnectedClusterId { get => this._connectedClusterId; set { {_connectedClusterId = value;} } }

        /// <summary>Internal Acessors for ControlPlaneKubernetesVersion</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IKubernetesClusterPropertiesInternal.ControlPlaneKubernetesVersion { get => this._controlPlaneKubernetesVersion; set { {_controlPlaneKubernetesVersion = value;} } }

        /// <summary>Internal Acessors for ControlPlaneNodeConfiguration</summary>
        Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IControlPlaneNodeConfiguration Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IKubernetesClusterPropertiesInternal.ControlPlaneNodeConfiguration { get => (this._controlPlaneNodeConfiguration = this._controlPlaneNodeConfiguration ?? new Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.ControlPlaneNodeConfiguration()); set { {_controlPlaneNodeConfiguration = value;} } }

        /// <summary>Internal Acessors for ControlPlaneNodeConfigurationAdministratorConfiguration</summary>
        Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IAdministratorConfiguration Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IKubernetesClusterPropertiesInternal.ControlPlaneNodeConfigurationAdministratorConfiguration { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IControlPlaneNodeConfigurationInternal)ControlPlaneNodeConfiguration).AdministratorConfiguration; set => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IControlPlaneNodeConfigurationInternal)ControlPlaneNodeConfiguration).AdministratorConfiguration = value; }

        /// <summary>Internal Acessors for DetailedStatus</summary>
        Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Support.KubernetesClusterDetailedStatus? Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IKubernetesClusterPropertiesInternal.DetailedStatus { get => this._detailedStatus; set { {_detailedStatus = value;} } }

        /// <summary>Internal Acessors for DetailedStatusMessage</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IKubernetesClusterPropertiesInternal.DetailedStatusMessage { get => this._detailedStatusMessage; set { {_detailedStatusMessage = value;} } }

        /// <summary>Internal Acessors for FeatureStatuses</summary>
        Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IFeatureStatus[] Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IKubernetesClusterPropertiesInternal.FeatureStatuses { get => this._featureStatuses; set { {_featureStatuses = value;} } }

        /// <summary>Internal Acessors for ManagedResourceGroupConfiguration</summary>
        Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IManagedResourceGroupConfiguration Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IKubernetesClusterPropertiesInternal.ManagedResourceGroupConfiguration { get => (this._managedResourceGroupConfiguration = this._managedResourceGroupConfiguration ?? new Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.ManagedResourceGroupConfiguration()); set { {_managedResourceGroupConfiguration = value;} } }

        /// <summary>Internal Acessors for NetworkConfiguration</summary>
        Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.INetworkConfiguration Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IKubernetesClusterPropertiesInternal.NetworkConfiguration { get => (this._networkConfiguration = this._networkConfiguration ?? new Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.NetworkConfiguration()); set { {_networkConfiguration = value;} } }

        /// <summary>Internal Acessors for NetworkConfigurationAttachedNetworkConfiguration</summary>
        Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IAttachedNetworkConfiguration Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IKubernetesClusterPropertiesInternal.NetworkConfigurationAttachedNetworkConfiguration { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.INetworkConfigurationInternal)NetworkConfiguration).AttachedNetworkConfiguration; set => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.INetworkConfigurationInternal)NetworkConfiguration).AttachedNetworkConfiguration = value; }

        /// <summary>Internal Acessors for NetworkConfigurationBgpServiceLoadBalancerConfiguration</summary>
        Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IBgpServiceLoadBalancerConfiguration Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IKubernetesClusterPropertiesInternal.NetworkConfigurationBgpServiceLoadBalancerConfiguration { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.INetworkConfigurationInternal)NetworkConfiguration).BgpServiceLoadBalancerConfiguration; set => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.INetworkConfigurationInternal)NetworkConfiguration).BgpServiceLoadBalancerConfiguration = value; }

        /// <summary>Internal Acessors for Node</summary>
        Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IKubernetesClusterNode[] Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IKubernetesClusterPropertiesInternal.Node { get => this._node; set { {_node = value;} } }

        /// <summary>Internal Acessors for ProvisioningState</summary>
        Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Support.KubernetesClusterProvisioningState? Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IKubernetesClusterPropertiesInternal.ProvisioningState { get => this._provisioningState; set { {_provisioningState = value;} } }

        /// <summary>Backing field for <see cref="NetworkConfiguration" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.INetworkConfiguration _networkConfiguration;

        /// <summary>
        /// The configuration of the Kubernetes cluster networking, including the attachment of networks that span the cluster.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.INetworkConfiguration NetworkConfiguration { get => (this._networkConfiguration = this._networkConfiguration ?? new Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.NetworkConfiguration()); set => this._networkConfiguration = value; }

        /// <summary>The resource ID of the associated Cloud Services network.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.PropertyOrigin.Inlined)]
        public string NetworkConfigurationCloudServicesNetworkId { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.INetworkConfigurationInternal)NetworkConfiguration).CloudServicesNetworkId; set => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.INetworkConfigurationInternal)NetworkConfiguration).CloudServicesNetworkId = value ; }

        /// <summary>
        /// The resource ID of the Layer 3 network that is used for creation of the Container Networking Interface network.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.PropertyOrigin.Inlined)]
        public string NetworkConfigurationCniNetworkId { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.INetworkConfigurationInternal)NetworkConfiguration).CniNetworkId; set => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.INetworkConfigurationInternal)NetworkConfiguration).CniNetworkId = value ; }

        /// <summary>
        /// The IP address assigned to the Kubernetes DNS service. It must be within the Kubernetes service address range specified
        /// in service CIDR.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.PropertyOrigin.Inlined)]
        public string NetworkConfigurationDnsServiceIP { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.INetworkConfigurationInternal)NetworkConfiguration).DnsServiceIP; set => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.INetworkConfigurationInternal)NetworkConfiguration).DnsServiceIP = value ?? null; }

        /// <summary>
        /// The CIDR notation IP ranges from which to assign pod IPs. One IPv4 CIDR is expected for single-stack networking. Two CIDRs,
        /// one for each IP family (IPv4/IPv6), is expected for dual-stack networking.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.PropertyOrigin.Inlined)]
        public string[] NetworkConfigurationPodCidr { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.INetworkConfigurationInternal)NetworkConfiguration).PodCidr; set => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.INetworkConfigurationInternal)NetworkConfiguration).PodCidr = value ?? null /* arrayOf */; }

        /// <summary>
        /// The CIDR notation IP ranges from which to assign service IPs. One IPv4 CIDR is expected for single-stack networking. Two
        /// CIDRs, one for each IP family (IPv4/IPv6), is expected for dual-stack networking.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.PropertyOrigin.Inlined)]
        public string[] NetworkConfigurationServiceCidr { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.INetworkConfigurationInternal)NetworkConfiguration).ServiceCidr; set => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.INetworkConfigurationInternal)NetworkConfiguration).ServiceCidr = value ?? null /* arrayOf */; }

        /// <summary>Backing field for <see cref="Node" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IKubernetesClusterNode[] _node;

        /// <summary>The details of the nodes in this cluster.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IKubernetesClusterNode[] Node { get => this._node; }

        /// <summary>Backing field for <see cref="ProvisioningState" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Support.KubernetesClusterProvisioningState? _provisioningState;

        /// <summary>The provisioning state of the Kubernetes cluster resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Support.KubernetesClusterProvisioningState? ProvisioningState { get => this._provisioningState; }

        /// <summary>
        /// The SSH configuration for the operating systems that run the nodes in the Kubernetes cluster. In some cases, specification
        /// of public keys may be required to produce a working environment.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.ISshPublicKey[] SshPublicKey { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IAdministratorConfigurationInternal)AdministratorConfiguration).SshPublicKey; set => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IAdministratorConfigurationInternal)AdministratorConfiguration).SshPublicKey = value ?? null /* arrayOf */; }

        /// <summary>Creates an new <see cref="KubernetesClusterProperties" /> instance.</summary>
        public KubernetesClusterProperties()
        {

        }
    }
    /// KubernetesClusterProperties represents the properties of Kubernetes cluster resource.
    public partial interface IKubernetesClusterProperties :
        Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Runtime.IJsonSerializable
    {
        /// <summary>
        /// The list of Azure Active Directory group object IDs that will have an administrative role on the Kubernetes cluster.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The list of Azure Active Directory group object IDs that will have an administrative role on the Kubernetes cluster.",
        SerializedName = @"adminGroupObjectIds",
        PossibleTypes = new [] { typeof(string) })]
        string[] AadConfigurationAdminGroupObjectId { get; set; }
        /// <summary>
        /// The user name for the administrator that will be applied to the operating systems that run Kubernetes nodes. If not supplied,
        /// a user name will be chosen by the service.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The user name for the administrator that will be applied to the operating systems that run Kubernetes nodes. If not supplied, a user name will be chosen by the service.",
        SerializedName = @"adminUsername",
        PossibleTypes = new [] { typeof(string) })]
        string AdminUsername { get; set; }
        /// <summary>The list of Layer 2 Networks and related configuration for attachment.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The list of Layer 2 Networks and related configuration for attachment.",
        SerializedName = @"l2Networks",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IL2NetworkAttachmentConfiguration) })]
        Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IL2NetworkAttachmentConfiguration[] AttachedNetworkConfigurationL2Network { get; set; }
        /// <summary>The list of Layer 3 Networks and related configuration for attachment.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The list of Layer 3 Networks and related configuration for attachment.",
        SerializedName = @"l3Networks",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IL3NetworkAttachmentConfiguration) })]
        Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IL3NetworkAttachmentConfiguration[] AttachedNetworkConfigurationL3Network { get; set; }
        /// <summary>The list of Trunked Networks and related configuration for attachment.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The list of Trunked Networks and related configuration for attachment.",
        SerializedName = @"trunkedNetworks",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.ITrunkedNetworkAttachmentConfiguration) })]
        Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.ITrunkedNetworkAttachmentConfiguration[] AttachedNetworkConfigurationTrunkedNetwork { get; set; }
        /// <summary>
        /// The full list of network resource IDs that are attached to this cluster, including those attached only to specific agent
        /// pools.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The full list of network resource IDs that are attached to this cluster, including those attached only to specific agent pools.",
        SerializedName = @"attachedNetworkIds",
        PossibleTypes = new [] { typeof(string) })]
        string[] AttachedNetworkId { get;  }
        /// <summary>The list of versions that this Kubernetes cluster can be upgraded to.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The list of versions that this Kubernetes cluster can be upgraded to.",
        SerializedName = @"availableUpgrades",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IAvailableUpgrade) })]
        Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IAvailableUpgrade[] AvailableUpgrade { get;  }
        /// <summary>
        /// The association of IP address pools to the communities and peers, allowing for announcement of IPs.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The association of IP address pools to the communities and peers, allowing for announcement of IPs.",
        SerializedName = @"bgpAdvertisements",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IBgpAdvertisement) })]
        Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IBgpAdvertisement[] BgpServiceLoadBalancerConfigurationBgpAdvertisement { get; set; }
        /// <summary>
        /// The list of additional BgpPeer entities that the Kubernetes cluster will peer with. All peering must be explicitly defined.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The list of additional BgpPeer entities that the Kubernetes cluster will peer with. All peering must be explicitly defined.",
        SerializedName = @"bgpPeers",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IServiceLoadBalancerBgpPeer) })]
        Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IServiceLoadBalancerBgpPeer[] BgpServiceLoadBalancerConfigurationBgpPeer { get; set; }
        /// <summary>The indicator to specify if the load balancer peers with the network fabric.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The indicator to specify if the load balancer peers with the network fabric.",
        SerializedName = @"fabricPeeringEnabled",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Support.FabricPeeringEnabled) })]
        Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Support.FabricPeeringEnabled? BgpServiceLoadBalancerConfigurationFabricPeeringEnabled { get; set; }
        /// <summary>
        /// The list of pools of IP addresses that can be allocated to Load Balancer services.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The list of pools of IP addresses that can be allocated to Load Balancer services.",
        SerializedName = @"ipAddressPools",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IIPAddressPool) })]
        Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IIPAddressPool[] BgpServiceLoadBalancerConfigurationIPAddressPool { get; set; }
        /// <summary>The resource ID of the Network Cloud cluster.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The resource ID of the Network Cloud cluster.",
        SerializedName = @"clusterId",
        PossibleTypes = new [] { typeof(string) })]
        string ClusterId { get;  }
        /// <summary>
        /// The resource ID of the connected cluster set up when this Kubernetes cluster is created.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The resource ID of the connected cluster set up when this Kubernetes cluster is created.",
        SerializedName = @"connectedClusterId",
        PossibleTypes = new [] { typeof(string) })]
        string ConnectedClusterId { get;  }
        /// <summary>The current running version of Kubernetes on the control plane.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The current running version of Kubernetes on the control plane.",
        SerializedName = @"controlPlaneKubernetesVersion",
        PossibleTypes = new [] { typeof(string) })]
        string ControlPlaneKubernetesVersion { get;  }
        /// <summary>
        /// The user name for the administrator that will be applied to the operating systems that run Kubernetes nodes. If not supplied,
        /// a user name will be chosen by the service.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The user name for the administrator that will be applied to the operating systems that run Kubernetes nodes. If not supplied, a user name will be chosen by the service.",
        SerializedName = @"adminUsername",
        PossibleTypes = new [] { typeof(string) })]
        string ControlPlaneNodeConfigurationAdministratorConfigurationAdminUsername { get; set; }
        /// <summary>
        /// The SSH configuration for the operating systems that run the nodes in the Kubernetes cluster. In some cases, specification
        /// of public keys may be required to produce a working environment.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The SSH configuration for the operating systems that run the nodes in the Kubernetes cluster. In some cases, specification of public keys may be required to produce a working environment.",
        SerializedName = @"sshPublicKeys",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.ISshPublicKey) })]
        Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.ISshPublicKey[] ControlPlaneNodeConfigurationAdministratorConfigurationSshPublicKey { get; set; }
        /// <summary>
        /// The list of availability zones of the Network Cloud cluster to be used for the provisioning of nodes in the control plane.
        /// If not specified, all availability zones will be used.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The list of availability zones of the Network Cloud cluster to be used for the provisioning of nodes in the control plane. If not specified, all availability zones will be used.",
        SerializedName = @"availabilityZones",
        PossibleTypes = new [] { typeof(string) })]
        string[] ControlPlaneNodeConfigurationAvailabilityZone { get; set; }
        /// <summary>The number of virtual machines that use this configuration.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"The number of virtual machines that use this configuration.",
        SerializedName = @"count",
        PossibleTypes = new [] { typeof(long) })]
        long ControlPlaneNodeConfigurationCount { get; set; }
        /// <summary>The name of the VM SKU supplied during creation.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"The name of the VM SKU supplied during creation.",
        SerializedName = @"vmSkuName",
        PossibleTypes = new [] { typeof(string) })]
        string ControlPlaneNodeConfigurationVMSkuName { get; set; }
        /// <summary>The current status of the Kubernetes cluster.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The current status of the Kubernetes cluster.",
        SerializedName = @"detailedStatus",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Support.KubernetesClusterDetailedStatus) })]
        Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Support.KubernetesClusterDetailedStatus? DetailedStatus { get;  }
        /// <summary>The descriptive message about the current detailed status.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The descriptive message about the current detailed status.",
        SerializedName = @"detailedStatusMessage",
        PossibleTypes = new [] { typeof(string) })]
        string DetailedStatusMessage { get;  }
        /// <summary>The current feature settings.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The current feature settings.",
        SerializedName = @"featureStatuses",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IFeatureStatus) })]
        Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IFeatureStatus[] FeatureStatuses { get;  }
        /// <summary>
        /// The agent pools that are created with this Kubernetes cluster for running critical system services and workloads. This
        /// data in this field is only used during creation, and the field will be empty following the creation of the Kubernetes
        /// Cluster. After creation, the management of agent pools is done using the agentPools sub-resource.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"The agent pools that are created with this Kubernetes cluster for running critical system services and workloads. This data in this field is only used during creation, and the field will be empty following the creation of the Kubernetes Cluster. After creation, the management of agent pools is done using the agentPools sub-resource.",
        SerializedName = @"initialAgentPoolConfigurations",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IInitialAgentPoolConfiguration) })]
        Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IInitialAgentPoolConfiguration[] InitialAgentPoolConfiguration { get; set; }
        /// <summary>
        /// The Kubernetes version for this cluster. Accepts n.n, n.n.n, and n.n.n-n format. The interpreted version used will be
        /// resolved into this field after creation or update.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"The Kubernetes version for this cluster. Accepts n.n, n.n.n, and n.n.n-n format. The interpreted version used will be resolved into this field after creation or update.",
        SerializedName = @"kubernetesVersion",
        PossibleTypes = new [] { typeof(string) })]
        string KubernetesVersion { get; set; }
        /// <summary>
        /// The location of the managed resource group. If not specified, the location of the parent resource is chosen.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The location of the managed resource group. If not specified, the location of the parent resource is chosen.",
        SerializedName = @"location",
        PossibleTypes = new [] { typeof(string) })]
        string ManagedResourceGroupConfigurationLocation { get; set; }
        /// <summary>
        /// The name for the managed resource group. If not specified, the unique name is automatically generated.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The name for the managed resource group. If not specified, the unique name is automatically generated.",
        SerializedName = @"name",
        PossibleTypes = new [] { typeof(string) })]
        string ManagedResourceGroupConfigurationName { get; set; }
        /// <summary>The resource ID of the associated Cloud Services network.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"The resource ID of the associated Cloud Services network.",
        SerializedName = @"cloudServicesNetworkId",
        PossibleTypes = new [] { typeof(string) })]
        string NetworkConfigurationCloudServicesNetworkId { get; set; }
        /// <summary>
        /// The resource ID of the Layer 3 network that is used for creation of the Container Networking Interface network.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"The resource ID of the Layer 3 network that is used for creation of the Container Networking Interface network.",
        SerializedName = @"cniNetworkId",
        PossibleTypes = new [] { typeof(string) })]
        string NetworkConfigurationCniNetworkId { get; set; }
        /// <summary>
        /// The IP address assigned to the Kubernetes DNS service. It must be within the Kubernetes service address range specified
        /// in service CIDR.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The IP address assigned to the Kubernetes DNS service. It must be within the Kubernetes service address range specified in service CIDR.",
        SerializedName = @"dnsServiceIp",
        PossibleTypes = new [] { typeof(string) })]
        string NetworkConfigurationDnsServiceIP { get; set; }
        /// <summary>
        /// The CIDR notation IP ranges from which to assign pod IPs. One IPv4 CIDR is expected for single-stack networking. Two CIDRs,
        /// one for each IP family (IPv4/IPv6), is expected for dual-stack networking.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The CIDR notation IP ranges from which to assign pod IPs. One IPv4 CIDR is expected for single-stack networking. Two CIDRs, one for each IP family (IPv4/IPv6), is expected for dual-stack networking.",
        SerializedName = @"podCidrs",
        PossibleTypes = new [] { typeof(string) })]
        string[] NetworkConfigurationPodCidr { get; set; }
        /// <summary>
        /// The CIDR notation IP ranges from which to assign service IPs. One IPv4 CIDR is expected for single-stack networking. Two
        /// CIDRs, one for each IP family (IPv4/IPv6), is expected for dual-stack networking.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The CIDR notation IP ranges from which to assign service IPs. One IPv4 CIDR is expected for single-stack networking. Two CIDRs, one for each IP family (IPv4/IPv6), is expected for dual-stack networking.",
        SerializedName = @"serviceCidrs",
        PossibleTypes = new [] { typeof(string) })]
        string[] NetworkConfigurationServiceCidr { get; set; }
        /// <summary>The details of the nodes in this cluster.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The details of the nodes in this cluster.",
        SerializedName = @"nodes",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IKubernetesClusterNode) })]
        Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IKubernetesClusterNode[] Node { get;  }
        /// <summary>The provisioning state of the Kubernetes cluster resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The provisioning state of the Kubernetes cluster resource.",
        SerializedName = @"provisioningState",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Support.KubernetesClusterProvisioningState) })]
        Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Support.KubernetesClusterProvisioningState? ProvisioningState { get;  }
        /// <summary>
        /// The SSH configuration for the operating systems that run the nodes in the Kubernetes cluster. In some cases, specification
        /// of public keys may be required to produce a working environment.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The SSH configuration for the operating systems that run the nodes in the Kubernetes cluster. In some cases, specification of public keys may be required to produce a working environment.",
        SerializedName = @"sshPublicKeys",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.ISshPublicKey) })]
        Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.ISshPublicKey[] SshPublicKey { get; set; }

    }
    /// KubernetesClusterProperties represents the properties of Kubernetes cluster resource.
    internal partial interface IKubernetesClusterPropertiesInternal

    {
        /// <summary>The Azure Active Directory Integration properties.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IAadConfiguration AadConfiguration { get; set; }
        /// <summary>
        /// The list of Azure Active Directory group object IDs that will have an administrative role on the Kubernetes cluster.
        /// </summary>
        string[] AadConfigurationAdminGroupObjectId { get; set; }
        /// <summary>
        /// The user name for the administrator that will be applied to the operating systems that run Kubernetes nodes. If not supplied,
        /// a user name will be chosen by the service.
        /// </summary>
        string AdminUsername { get; set; }
        /// <summary>
        /// The administrative credentials that will be applied to the control plane and agent pool nodes that do not specify their
        /// own values.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IAdministratorConfiguration AdministratorConfiguration { get; set; }
        /// <summary>The list of Layer 2 Networks and related configuration for attachment.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IL2NetworkAttachmentConfiguration[] AttachedNetworkConfigurationL2Network { get; set; }
        /// <summary>The list of Layer 3 Networks and related configuration for attachment.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IL3NetworkAttachmentConfiguration[] AttachedNetworkConfigurationL3Network { get; set; }
        /// <summary>The list of Trunked Networks and related configuration for attachment.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.ITrunkedNetworkAttachmentConfiguration[] AttachedNetworkConfigurationTrunkedNetwork { get; set; }
        /// <summary>
        /// The full list of network resource IDs that are attached to this cluster, including those attached only to specific agent
        /// pools.
        /// </summary>
        string[] AttachedNetworkId { get; set; }
        /// <summary>The list of versions that this Kubernetes cluster can be upgraded to.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IAvailableUpgrade[] AvailableUpgrade { get; set; }
        /// <summary>
        /// The association of IP address pools to the communities and peers, allowing for announcement of IPs.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IBgpAdvertisement[] BgpServiceLoadBalancerConfigurationBgpAdvertisement { get; set; }
        /// <summary>
        /// The list of additional BgpPeer entities that the Kubernetes cluster will peer with. All peering must be explicitly defined.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IServiceLoadBalancerBgpPeer[] BgpServiceLoadBalancerConfigurationBgpPeer { get; set; }
        /// <summary>The indicator to specify if the load balancer peers with the network fabric.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Support.FabricPeeringEnabled? BgpServiceLoadBalancerConfigurationFabricPeeringEnabled { get; set; }
        /// <summary>
        /// The list of pools of IP addresses that can be allocated to Load Balancer services.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IIPAddressPool[] BgpServiceLoadBalancerConfigurationIPAddressPool { get; set; }
        /// <summary>The resource ID of the Network Cloud cluster.</summary>
        string ClusterId { get; set; }
        /// <summary>
        /// The resource ID of the connected cluster set up when this Kubernetes cluster is created.
        /// </summary>
        string ConnectedClusterId { get; set; }
        /// <summary>The current running version of Kubernetes on the control plane.</summary>
        string ControlPlaneKubernetesVersion { get; set; }
        /// <summary>The defining characteristics of the control plane for this Kubernetes Cluster.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IControlPlaneNodeConfiguration ControlPlaneNodeConfiguration { get; set; }
        /// <summary>The administrator credentials to be used for the nodes in the control plane.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IAdministratorConfiguration ControlPlaneNodeConfigurationAdministratorConfiguration { get; set; }
        /// <summary>
        /// The user name for the administrator that will be applied to the operating systems that run Kubernetes nodes. If not supplied,
        /// a user name will be chosen by the service.
        /// </summary>
        string ControlPlaneNodeConfigurationAdministratorConfigurationAdminUsername { get; set; }
        /// <summary>
        /// The SSH configuration for the operating systems that run the nodes in the Kubernetes cluster. In some cases, specification
        /// of public keys may be required to produce a working environment.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.ISshPublicKey[] ControlPlaneNodeConfigurationAdministratorConfigurationSshPublicKey { get; set; }
        /// <summary>
        /// The list of availability zones of the Network Cloud cluster to be used for the provisioning of nodes in the control plane.
        /// If not specified, all availability zones will be used.
        /// </summary>
        string[] ControlPlaneNodeConfigurationAvailabilityZone { get; set; }
        /// <summary>The number of virtual machines that use this configuration.</summary>
        long ControlPlaneNodeConfigurationCount { get; set; }
        /// <summary>The name of the VM SKU supplied during creation.</summary>
        string ControlPlaneNodeConfigurationVMSkuName { get; set; }
        /// <summary>The current status of the Kubernetes cluster.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Support.KubernetesClusterDetailedStatus? DetailedStatus { get; set; }
        /// <summary>The descriptive message about the current detailed status.</summary>
        string DetailedStatusMessage { get; set; }
        /// <summary>The current feature settings.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IFeatureStatus[] FeatureStatuses { get; set; }
        /// <summary>
        /// The agent pools that are created with this Kubernetes cluster for running critical system services and workloads. This
        /// data in this field is only used during creation, and the field will be empty following the creation of the Kubernetes
        /// Cluster. After creation, the management of agent pools is done using the agentPools sub-resource.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IInitialAgentPoolConfiguration[] InitialAgentPoolConfiguration { get; set; }
        /// <summary>
        /// The Kubernetes version for this cluster. Accepts n.n, n.n.n, and n.n.n-n format. The interpreted version used will be
        /// resolved into this field after creation or update.
        /// </summary>
        string KubernetesVersion { get; set; }
        /// <summary>The configuration of the managed resource group associated with the resource.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IManagedResourceGroupConfiguration ManagedResourceGroupConfiguration { get; set; }
        /// <summary>
        /// The location of the managed resource group. If not specified, the location of the parent resource is chosen.
        /// </summary>
        string ManagedResourceGroupConfigurationLocation { get; set; }
        /// <summary>
        /// The name for the managed resource group. If not specified, the unique name is automatically generated.
        /// </summary>
        string ManagedResourceGroupConfigurationName { get; set; }
        /// <summary>
        /// The configuration of the Kubernetes cluster networking, including the attachment of networks that span the cluster.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.INetworkConfiguration NetworkConfiguration { get; set; }
        /// <summary>
        /// The configuration of networks being attached to the cluster for use by the workloads that run on this Kubernetes cluster.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IAttachedNetworkConfiguration NetworkConfigurationAttachedNetworkConfiguration { get; set; }
        /// <summary>The configuration of the BGP service load balancer for this Kubernetes cluster.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IBgpServiceLoadBalancerConfiguration NetworkConfigurationBgpServiceLoadBalancerConfiguration { get; set; }
        /// <summary>The resource ID of the associated Cloud Services network.</summary>
        string NetworkConfigurationCloudServicesNetworkId { get; set; }
        /// <summary>
        /// The resource ID of the Layer 3 network that is used for creation of the Container Networking Interface network.
        /// </summary>
        string NetworkConfigurationCniNetworkId { get; set; }
        /// <summary>
        /// The IP address assigned to the Kubernetes DNS service. It must be within the Kubernetes service address range specified
        /// in service CIDR.
        /// </summary>
        string NetworkConfigurationDnsServiceIP { get; set; }
        /// <summary>
        /// The CIDR notation IP ranges from which to assign pod IPs. One IPv4 CIDR is expected for single-stack networking. Two CIDRs,
        /// one for each IP family (IPv4/IPv6), is expected for dual-stack networking.
        /// </summary>
        string[] NetworkConfigurationPodCidr { get; set; }
        /// <summary>
        /// The CIDR notation IP ranges from which to assign service IPs. One IPv4 CIDR is expected for single-stack networking. Two
        /// CIDRs, one for each IP family (IPv4/IPv6), is expected for dual-stack networking.
        /// </summary>
        string[] NetworkConfigurationServiceCidr { get; set; }
        /// <summary>The details of the nodes in this cluster.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IKubernetesClusterNode[] Node { get; set; }
        /// <summary>The provisioning state of the Kubernetes cluster resource.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Support.KubernetesClusterProvisioningState? ProvisioningState { get; set; }
        /// <summary>
        /// The SSH configuration for the operating systems that run the nodes in the Kubernetes cluster. In some cases, specification
        /// of public keys may be required to produce a working environment.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.ISshPublicKey[] SshPublicKey { get; set; }

    }
}