// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701
{
    using static Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Runtime.Extensions;

    /// <summary>
    /// ImageRepositoryCredentials represents the credentials used to login to the image repository.
    /// </summary>
    public partial class ImageRepositoryCredentials :
        Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IImageRepositoryCredentials,
        Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IImageRepositoryCredentialsInternal
    {

        /// <summary>Backing field for <see cref="Password" /> property.</summary>
        private System.Security.SecureString _password;

        /// <summary>The password or token used to access an image in the target repository.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.PropertyOrigin.Owned)]
        public System.Security.SecureString Password { get => this._password; set => this._password = value; }

        /// <summary>Backing field for <see cref="RegistryUrl" /> property.</summary>
        private string _registryUrl;

        /// <summary>
        /// The URL of the authentication server used to validate the repository credentials.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.PropertyOrigin.Owned)]
        public string RegistryUrl { get => this._registryUrl; set => this._registryUrl = value; }

        /// <summary>Backing field for <see cref="Username" /> property.</summary>
        private string _username;

        /// <summary>The username used to access an image in the target repository.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.PropertyOrigin.Owned)]
        public string Username { get => this._username; set => this._username = value; }

        /// <summary>Creates an new <see cref="ImageRepositoryCredentials" /> instance.</summary>
        public ImageRepositoryCredentials()
        {

        }
    }
    /// ImageRepositoryCredentials represents the credentials used to login to the image repository.
    public partial interface IImageRepositoryCredentials :
        Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Runtime.IJsonSerializable
    {
        /// <summary>The password or token used to access an image in the target repository.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"The password or token used to access an image in the target repository.",
        SerializedName = @"password",
        PossibleTypes = new [] { typeof(System.Security.SecureString) })]
        System.Security.SecureString Password { get; set; }
        /// <summary>
        /// The URL of the authentication server used to validate the repository credentials.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"The URL of the authentication server used to validate the repository credentials.",
        SerializedName = @"registryUrl",
        PossibleTypes = new [] { typeof(string) })]
        string RegistryUrl { get; set; }
        /// <summary>The username used to access an image in the target repository.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"The username used to access an image in the target repository.",
        SerializedName = @"username",
        PossibleTypes = new [] { typeof(string) })]
        string Username { get; set; }

    }
    /// ImageRepositoryCredentials represents the credentials used to login to the image repository.
    internal partial interface IImageRepositoryCredentialsInternal

    {
        /// <summary>The password or token used to access an image in the target repository.</summary>
        System.Security.SecureString Password { get; set; }
        /// <summary>
        /// The URL of the authentication server used to validate the repository credentials.
        /// </summary>
        string RegistryUrl { get; set; }
        /// <summary>The username used to access an image in the target repository.</summary>
        string Username { get; set; }

    }
}