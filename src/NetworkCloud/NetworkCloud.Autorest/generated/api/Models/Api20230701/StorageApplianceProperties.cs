// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701
{
    using static Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Runtime.Extensions;

    /// <summary>StorageApplianceProperties represents the properties of the storage appliance.</summary>
    public partial class StorageApplianceProperties :
        Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IStorageApplianceProperties,
        Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IStorageAppliancePropertiesInternal
    {

        /// <summary>Backing field for <see cref="AdministratorCredentials" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IAdministrativeCredentials _administratorCredentials;

        /// <summary>The credentials of the administrative interface on this storage appliance.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IAdministrativeCredentials AdministratorCredentials { get => (this._administratorCredentials = this._administratorCredentials ?? new Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.AdministrativeCredentials()); set => this._administratorCredentials = value; }

        /// <summary>The password of the administrator of the device used during initialization.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.PropertyOrigin.Inlined)]
        public System.Security.SecureString AdministratorCredentialsPassword { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IAdministrativeCredentialsInternal)AdministratorCredentials).Password; set => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IAdministrativeCredentialsInternal)AdministratorCredentials).Password = value ; }

        /// <summary>The username of the administrator of the device used during initialization.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.PropertyOrigin.Inlined)]
        public string AdministratorCredentialsUsername { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IAdministrativeCredentialsInternal)AdministratorCredentials).Username; set => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IAdministrativeCredentialsInternal)AdministratorCredentials).Username = value ; }

        /// <summary>Backing field for <see cref="Capacity" /> property.</summary>
        private long? _capacity;

        /// <summary>The total capacity of the storage appliance.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.PropertyOrigin.Owned)]
        public long? Capacity { get => this._capacity; }

        /// <summary>Backing field for <see cref="CapacityUsed" /> property.</summary>
        private long? _capacityUsed;

        /// <summary>The amount of storage consumed.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.PropertyOrigin.Owned)]
        public long? CapacityUsed { get => this._capacityUsed; }

        /// <summary>Backing field for <see cref="ClusterId" /> property.</summary>
        private string _clusterId;

        /// <summary>The resource ID of the cluster this storage appliance is associated with.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.PropertyOrigin.Owned)]
        public string ClusterId { get => this._clusterId; }

        /// <summary>Backing field for <see cref="DetailedStatus" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Support.StorageApplianceDetailedStatus? _detailedStatus;

        /// <summary>The detailed status of the storage appliance.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Support.StorageApplianceDetailedStatus? DetailedStatus { get => this._detailedStatus; }

        /// <summary>Backing field for <see cref="DetailedStatusMessage" /> property.</summary>
        private string _detailedStatusMessage;

        /// <summary>The descriptive message about the current detailed status.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.PropertyOrigin.Owned)]
        public string DetailedStatusMessage { get => this._detailedStatusMessage; }

        /// <summary>Backing field for <see cref="ManagementIpv4Address" /> property.</summary>
        private string _managementIpv4Address;

        /// <summary>The endpoint for the management interface of the storage appliance.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.PropertyOrigin.Owned)]
        public string ManagementIpv4Address { get => this._managementIpv4Address; }

        /// <summary>Internal Acessors for AdministratorCredentials</summary>
        Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IAdministrativeCredentials Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IStorageAppliancePropertiesInternal.AdministratorCredentials { get => (this._administratorCredentials = this._administratorCredentials ?? new Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.AdministrativeCredentials()); set { {_administratorCredentials = value;} } }

        /// <summary>Internal Acessors for Capacity</summary>
        long? Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IStorageAppliancePropertiesInternal.Capacity { get => this._capacity; set { {_capacity = value;} } }

        /// <summary>Internal Acessors for CapacityUsed</summary>
        long? Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IStorageAppliancePropertiesInternal.CapacityUsed { get => this._capacityUsed; set { {_capacityUsed = value;} } }

        /// <summary>Internal Acessors for ClusterId</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IStorageAppliancePropertiesInternal.ClusterId { get => this._clusterId; set { {_clusterId = value;} } }

        /// <summary>Internal Acessors for DetailedStatus</summary>
        Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Support.StorageApplianceDetailedStatus? Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IStorageAppliancePropertiesInternal.DetailedStatus { get => this._detailedStatus; set { {_detailedStatus = value;} } }

        /// <summary>Internal Acessors for DetailedStatusMessage</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IStorageAppliancePropertiesInternal.DetailedStatusMessage { get => this._detailedStatusMessage; set { {_detailedStatusMessage = value;} } }

        /// <summary>Internal Acessors for ManagementIpv4Address</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IStorageAppliancePropertiesInternal.ManagementIpv4Address { get => this._managementIpv4Address; set { {_managementIpv4Address = value;} } }

        /// <summary>Internal Acessors for ProvisioningState</summary>
        Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Support.StorageApplianceProvisioningState? Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IStorageAppliancePropertiesInternal.ProvisioningState { get => this._provisioningState; set { {_provisioningState = value;} } }

        /// <summary>Internal Acessors for RemoteVendorManagementFeature</summary>
        Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Support.RemoteVendorManagementFeature? Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IStorageAppliancePropertiesInternal.RemoteVendorManagementFeature { get => this._remoteVendorManagementFeature; set { {_remoteVendorManagementFeature = value;} } }

        /// <summary>Internal Acessors for RemoteVendorManagementStatus</summary>
        Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Support.RemoteVendorManagementStatus? Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IStorageAppliancePropertiesInternal.RemoteVendorManagementStatus { get => this._remoteVendorManagementStatus; set { {_remoteVendorManagementStatus = value;} } }

        /// <summary>Backing field for <see cref="ProvisioningState" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Support.StorageApplianceProvisioningState? _provisioningState;

        /// <summary>The provisioning state of the storage appliance.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Support.StorageApplianceProvisioningState? ProvisioningState { get => this._provisioningState; }

        /// <summary>Backing field for <see cref="RackId" /> property.</summary>
        private string _rackId;

        /// <summary>The resource ID of the rack where this storage appliance resides.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.PropertyOrigin.Owned)]
        public string RackId { get => this._rackId; set => this._rackId = value; }

        /// <summary>Backing field for <see cref="RackSlot" /> property.</summary>
        private long _rackSlot;

        /// <summary>The slot the storage appliance is in the rack based on the BOM configuration.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.PropertyOrigin.Owned)]
        public long RackSlot { get => this._rackSlot; set => this._rackSlot = value; }

        /// <summary>Backing field for <see cref="RemoteVendorManagementFeature" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Support.RemoteVendorManagementFeature? _remoteVendorManagementFeature;

        /// <summary>
        /// The indicator of whether the storage appliance supports remote vendor management.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Support.RemoteVendorManagementFeature? RemoteVendorManagementFeature { get => this._remoteVendorManagementFeature; }

        /// <summary>Backing field for <see cref="RemoteVendorManagementStatus" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Support.RemoteVendorManagementStatus? _remoteVendorManagementStatus;

        /// <summary>
        /// The indicator of whether the remote vendor management feature is enabled or disabled, or unsupported if it is an unsupported
        /// feature.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Support.RemoteVendorManagementStatus? RemoteVendorManagementStatus { get => this._remoteVendorManagementStatus; }

        /// <summary>Backing field for <see cref="SerialNumber" /> property.</summary>
        private string _serialNumber;

        /// <summary>The serial number for the storage appliance.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.PropertyOrigin.Owned)]
        public string SerialNumber { get => this._serialNumber; set => this._serialNumber = value; }

        /// <summary>Backing field for <see cref="StorageApplianceSkuId" /> property.</summary>
        private string _storageApplianceSkuId;

        /// <summary>The SKU for the storage appliance.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.PropertyOrigin.Owned)]
        public string StorageApplianceSkuId { get => this._storageApplianceSkuId; set => this._storageApplianceSkuId = value; }

        /// <summary>Creates an new <see cref="StorageApplianceProperties" /> instance.</summary>
        public StorageApplianceProperties()
        {

        }
    }
    /// StorageApplianceProperties represents the properties of the storage appliance.
    public partial interface IStorageApplianceProperties :
        Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Runtime.IJsonSerializable
    {
        /// <summary>The password of the administrator of the device used during initialization.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"The password of the administrator of the device used during initialization.",
        SerializedName = @"password",
        PossibleTypes = new [] { typeof(System.Security.SecureString) })]
        System.Security.SecureString AdministratorCredentialsPassword { get; set; }
        /// <summary>The username of the administrator of the device used during initialization.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"The username of the administrator of the device used during initialization.",
        SerializedName = @"username",
        PossibleTypes = new [] { typeof(string) })]
        string AdministratorCredentialsUsername { get; set; }
        /// <summary>The total capacity of the storage appliance.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The total capacity of the storage appliance.",
        SerializedName = @"capacity",
        PossibleTypes = new [] { typeof(long) })]
        long? Capacity { get;  }
        /// <summary>The amount of storage consumed.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The amount of storage consumed.",
        SerializedName = @"capacityUsed",
        PossibleTypes = new [] { typeof(long) })]
        long? CapacityUsed { get;  }
        /// <summary>The resource ID of the cluster this storage appliance is associated with.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The resource ID of the cluster this storage appliance is associated with.",
        SerializedName = @"clusterId",
        PossibleTypes = new [] { typeof(string) })]
        string ClusterId { get;  }
        /// <summary>The detailed status of the storage appliance.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The detailed status of the storage appliance.",
        SerializedName = @"detailedStatus",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Support.StorageApplianceDetailedStatus) })]
        Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Support.StorageApplianceDetailedStatus? DetailedStatus { get;  }
        /// <summary>The descriptive message about the current detailed status.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The descriptive message about the current detailed status.",
        SerializedName = @"detailedStatusMessage",
        PossibleTypes = new [] { typeof(string) })]
        string DetailedStatusMessage { get;  }
        /// <summary>The endpoint for the management interface of the storage appliance.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The endpoint for the management interface of the storage appliance.",
        SerializedName = @"managementIpv4Address",
        PossibleTypes = new [] { typeof(string) })]
        string ManagementIpv4Address { get;  }
        /// <summary>The provisioning state of the storage appliance.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The provisioning state of the storage appliance.",
        SerializedName = @"provisioningState",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Support.StorageApplianceProvisioningState) })]
        Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Support.StorageApplianceProvisioningState? ProvisioningState { get;  }
        /// <summary>The resource ID of the rack where this storage appliance resides.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"The resource ID of the rack where this storage appliance resides.",
        SerializedName = @"rackId",
        PossibleTypes = new [] { typeof(string) })]
        string RackId { get; set; }
        /// <summary>The slot the storage appliance is in the rack based on the BOM configuration.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"The slot the storage appliance is in the rack based on the BOM configuration.",
        SerializedName = @"rackSlot",
        PossibleTypes = new [] { typeof(long) })]
        long RackSlot { get; set; }
        /// <summary>
        /// The indicator of whether the storage appliance supports remote vendor management.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The indicator of whether the storage appliance supports remote vendor management.",
        SerializedName = @"remoteVendorManagementFeature",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Support.RemoteVendorManagementFeature) })]
        Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Support.RemoteVendorManagementFeature? RemoteVendorManagementFeature { get;  }
        /// <summary>
        /// The indicator of whether the remote vendor management feature is enabled or disabled, or unsupported if it is an unsupported
        /// feature.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The indicator of whether the remote vendor management feature is enabled or disabled, or unsupported if it is an unsupported feature.",
        SerializedName = @"remoteVendorManagementStatus",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Support.RemoteVendorManagementStatus) })]
        Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Support.RemoteVendorManagementStatus? RemoteVendorManagementStatus { get;  }
        /// <summary>The serial number for the storage appliance.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"The serial number for the storage appliance.",
        SerializedName = @"serialNumber",
        PossibleTypes = new [] { typeof(string) })]
        string SerialNumber { get; set; }
        /// <summary>The SKU for the storage appliance.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"The SKU for the storage appliance.",
        SerializedName = @"storageApplianceSkuId",
        PossibleTypes = new [] { typeof(string) })]
        string StorageApplianceSkuId { get; set; }

    }
    /// StorageApplianceProperties represents the properties of the storage appliance.
    internal partial interface IStorageAppliancePropertiesInternal

    {
        /// <summary>The credentials of the administrative interface on this storage appliance.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IAdministrativeCredentials AdministratorCredentials { get; set; }
        /// <summary>The password of the administrator of the device used during initialization.</summary>
        System.Security.SecureString AdministratorCredentialsPassword { get; set; }
        /// <summary>The username of the administrator of the device used during initialization.</summary>
        string AdministratorCredentialsUsername { get; set; }
        /// <summary>The total capacity of the storage appliance.</summary>
        long? Capacity { get; set; }
        /// <summary>The amount of storage consumed.</summary>
        long? CapacityUsed { get; set; }
        /// <summary>The resource ID of the cluster this storage appliance is associated with.</summary>
        string ClusterId { get; set; }
        /// <summary>The detailed status of the storage appliance.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Support.StorageApplianceDetailedStatus? DetailedStatus { get; set; }
        /// <summary>The descriptive message about the current detailed status.</summary>
        string DetailedStatusMessage { get; set; }
        /// <summary>The endpoint for the management interface of the storage appliance.</summary>
        string ManagementIpv4Address { get; set; }
        /// <summary>The provisioning state of the storage appliance.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Support.StorageApplianceProvisioningState? ProvisioningState { get; set; }
        /// <summary>The resource ID of the rack where this storage appliance resides.</summary>
        string RackId { get; set; }
        /// <summary>The slot the storage appliance is in the rack based on the BOM configuration.</summary>
        long RackSlot { get; set; }
        /// <summary>
        /// The indicator of whether the storage appliance supports remote vendor management.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Support.RemoteVendorManagementFeature? RemoteVendorManagementFeature { get; set; }
        /// <summary>
        /// The indicator of whether the remote vendor management feature is enabled or disabled, or unsupported if it is an unsupported
        /// feature.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Support.RemoteVendorManagementStatus? RemoteVendorManagementStatus { get; set; }
        /// <summary>The serial number for the storage appliance.</summary>
        string SerialNumber { get; set; }
        /// <summary>The SKU for the storage appliance.</summary>
        string StorageApplianceSkuId { get; set; }

    }
}