// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701
{
    using static Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Runtime.Extensions;

    /// <summary>
    /// RackSkuProperties represents the properties of compute-related hardware for a rack. This supports both aggregator and
    /// compute racks.
    /// </summary>
    public partial class RackSkuProperties :
        Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IRackSkuProperties,
        Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IRackSkuPropertiesInternal
    {

        /// <summary>Backing field for <see cref="ComputeMachine" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IMachineSkuSlot[] _computeMachine;

        /// <summary>
        /// The list of machine SKUs and associated rack slot for the compute-dedicated machines in this rack model.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IMachineSkuSlot[] ComputeMachine { get => this._computeMachine; }

        /// <summary>Backing field for <see cref="ControllerMachine" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IMachineSkuSlot[] _controllerMachine;

        /// <summary>
        /// The list of machine SKUs and associated rack slot for the control-plane dedicated machines in this rack model.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IMachineSkuSlot[] ControllerMachine { get => this._controllerMachine; }

        /// <summary>Backing field for <see cref="Description" /> property.</summary>
        private string _description;

        /// <summary>The free-form text describing the rack.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.PropertyOrigin.Owned)]
        public string Description { get => this._description; }

        /// <summary>Backing field for <see cref="MaxClusterSlot" /> property.</summary>
        private long? _maxClusterSlot;

        /// <summary>
        /// The maximum number of compute racks supported by an aggregator rack. 0 if this is a compute rack or a rack for a single
        /// rack cluster(rackType="Single").
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.PropertyOrigin.Owned)]
        public long? MaxClusterSlot { get => this._maxClusterSlot; }

        /// <summary>Internal Acessors for ComputeMachine</summary>
        Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IMachineSkuSlot[] Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IRackSkuPropertiesInternal.ComputeMachine { get => this._computeMachine; set { {_computeMachine = value;} } }

        /// <summary>Internal Acessors for ControllerMachine</summary>
        Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IMachineSkuSlot[] Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IRackSkuPropertiesInternal.ControllerMachine { get => this._controllerMachine; set { {_controllerMachine = value;} } }

        /// <summary>Internal Acessors for Description</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IRackSkuPropertiesInternal.Description { get => this._description; set { {_description = value;} } }

        /// <summary>Internal Acessors for MaxClusterSlot</summary>
        long? Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IRackSkuPropertiesInternal.MaxClusterSlot { get => this._maxClusterSlot; set { {_maxClusterSlot = value;} } }

        /// <summary>Internal Acessors for ProvisioningState</summary>
        Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Support.RackSkuProvisioningState? Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IRackSkuPropertiesInternal.ProvisioningState { get => this._provisioningState; set { {_provisioningState = value;} } }

        /// <summary>Internal Acessors for RackType</summary>
        Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Support.RackSkuType? Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IRackSkuPropertiesInternal.RackType { get => this._rackType; set { {_rackType = value;} } }

        /// <summary>Internal Acessors for StorageAppliance</summary>
        Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IStorageApplianceSkuSlot[] Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IRackSkuPropertiesInternal.StorageAppliance { get => this._storageAppliance; set { {_storageAppliance = value;} } }

        /// <summary>Internal Acessors for SupportedRackSkuId</summary>
        string[] Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IRackSkuPropertiesInternal.SupportedRackSkuId { get => this._supportedRackSkuId; set { {_supportedRackSkuId = value;} } }

        /// <summary>Backing field for <see cref="ProvisioningState" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Support.RackSkuProvisioningState? _provisioningState;

        /// <summary>The provisioning state of the rack SKU resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Support.RackSkuProvisioningState? ProvisioningState { get => this._provisioningState; }

        /// <summary>Backing field for <see cref="RackType" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Support.RackSkuType? _rackType;

        /// <summary>The type of the rack.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Support.RackSkuType? RackType { get => this._rackType; }

        /// <summary>Backing field for <see cref="StorageAppliance" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IStorageApplianceSkuSlot[] _storageAppliance;

        /// <summary>
        /// The list of appliance SKUs and associated rack slot for the storage appliance(s) in this rack model.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IStorageApplianceSkuSlot[] StorageAppliance { get => this._storageAppliance; }

        /// <summary>Backing field for <see cref="SupportedRackSkuId" /> property.</summary>
        private string[] _supportedRackSkuId;

        /// <summary>The list of supported SKUs if the rack is an aggregator.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.PropertyOrigin.Owned)]
        public string[] SupportedRackSkuId { get => this._supportedRackSkuId; }

        /// <summary>Creates an new <see cref="RackSkuProperties" /> instance.</summary>
        public RackSkuProperties()
        {

        }
    }
    /// RackSkuProperties represents the properties of compute-related hardware for a rack. This supports both aggregator and
    /// compute racks.
    public partial interface IRackSkuProperties :
        Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Runtime.IJsonSerializable
    {
        /// <summary>
        /// The list of machine SKUs and associated rack slot for the compute-dedicated machines in this rack model.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The list of machine SKUs and associated rack slot for the compute-dedicated machines in this rack model.",
        SerializedName = @"computeMachines",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IMachineSkuSlot) })]
        Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IMachineSkuSlot[] ComputeMachine { get;  }
        /// <summary>
        /// The list of machine SKUs and associated rack slot for the control-plane dedicated machines in this rack model.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The list of machine SKUs and associated rack slot for the control-plane dedicated machines in this rack model.",
        SerializedName = @"controllerMachines",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IMachineSkuSlot) })]
        Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IMachineSkuSlot[] ControllerMachine { get;  }
        /// <summary>The free-form text describing the rack.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The free-form text describing the rack.",
        SerializedName = @"description",
        PossibleTypes = new [] { typeof(string) })]
        string Description { get;  }
        /// <summary>
        /// The maximum number of compute racks supported by an aggregator rack. 0 if this is a compute rack or a rack for a single
        /// rack cluster(rackType="Single").
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The maximum number of compute racks supported by an aggregator rack. 0 if this is a compute rack or a rack for a single rack cluster(rackType=""Single"").",
        SerializedName = @"maxClusterSlots",
        PossibleTypes = new [] { typeof(long) })]
        long? MaxClusterSlot { get;  }
        /// <summary>The provisioning state of the rack SKU resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The provisioning state of the rack SKU resource.",
        SerializedName = @"provisioningState",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Support.RackSkuProvisioningState) })]
        Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Support.RackSkuProvisioningState? ProvisioningState { get;  }
        /// <summary>The type of the rack.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The type of the rack.",
        SerializedName = @"rackType",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Support.RackSkuType) })]
        Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Support.RackSkuType? RackType { get;  }
        /// <summary>
        /// The list of appliance SKUs and associated rack slot for the storage appliance(s) in this rack model.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The list of appliance SKUs and associated rack slot for the storage appliance(s) in this rack model.",
        SerializedName = @"storageAppliances",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IStorageApplianceSkuSlot) })]
        Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IStorageApplianceSkuSlot[] StorageAppliance { get;  }
        /// <summary>The list of supported SKUs if the rack is an aggregator.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The list of supported SKUs if the rack is an aggregator.",
        SerializedName = @"supportedRackSkuIds",
        PossibleTypes = new [] { typeof(string) })]
        string[] SupportedRackSkuId { get;  }

    }
    /// RackSkuProperties represents the properties of compute-related hardware for a rack. This supports both aggregator and
    /// compute racks.
    internal partial interface IRackSkuPropertiesInternal

    {
        /// <summary>
        /// The list of machine SKUs and associated rack slot for the compute-dedicated machines in this rack model.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IMachineSkuSlot[] ComputeMachine { get; set; }
        /// <summary>
        /// The list of machine SKUs and associated rack slot for the control-plane dedicated machines in this rack model.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IMachineSkuSlot[] ControllerMachine { get; set; }
        /// <summary>The free-form text describing the rack.</summary>
        string Description { get; set; }
        /// <summary>
        /// The maximum number of compute racks supported by an aggregator rack. 0 if this is a compute rack or a rack for a single
        /// rack cluster(rackType="Single").
        /// </summary>
        long? MaxClusterSlot { get; set; }
        /// <summary>The provisioning state of the rack SKU resource.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Support.RackSkuProvisioningState? ProvisioningState { get; set; }
        /// <summary>The type of the rack.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Support.RackSkuType? RackType { get; set; }
        /// <summary>
        /// The list of appliance SKUs and associated rack slot for the storage appliance(s) in this rack model.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IStorageApplianceSkuSlot[] StorageAppliance { get; set; }
        /// <summary>The list of supported SKUs if the rack is an aggregator.</summary>
        string[] SupportedRackSkuId { get; set; }

    }
}