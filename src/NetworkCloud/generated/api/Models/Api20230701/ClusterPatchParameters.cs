// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701
{
    using static Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Runtime.Extensions;

    /// <summary>
    /// ClusterPatchParameters represents the body of the request to patch the cluster properties.
    /// </summary>
    public partial class ClusterPatchParameters :
        Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IClusterPatchParameters,
        Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IClusterPatchParametersInternal
    {

        /// <summary>
        /// The zone name used for this rack when created. Availability zones are used for workload placement.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.PropertyOrigin.Inlined)]
        public string AggregatorOrSingleRackDefinitionAvailabilityZone { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IClusterPatchPropertiesInternal)Property).AggregatorOrSingleRackDefinitionAvailabilityZone; set => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IClusterPatchPropertiesInternal)Property).AggregatorOrSingleRackDefinitionAvailabilityZone = value ?? null; }

        /// <summary>The unordered list of bare metal machine configuration.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IBareMetalMachineConfigurationData[] AggregatorOrSingleRackDefinitionBareMetalMachineConfigurationData { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IClusterPatchPropertiesInternal)Property).AggregatorOrSingleRackDefinitionBareMetalMachineConfigurationData; set => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IClusterPatchPropertiesInternal)Property).AggregatorOrSingleRackDefinitionBareMetalMachineConfigurationData = value ?? null /* arrayOf */; }

        /// <summary>The resource ID of the network rack that matches this rack definition.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.PropertyOrigin.Inlined)]
        public string AggregatorOrSingleRackDefinitionNetworkRackId { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IClusterPatchPropertiesInternal)Property).AggregatorOrSingleRackDefinitionNetworkRackId; set => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IClusterPatchPropertiesInternal)Property).AggregatorOrSingleRackDefinitionNetworkRackId = value ?? null; }

        /// <summary>The free-form description of the rack's location.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.PropertyOrigin.Inlined)]
        public string AggregatorOrSingleRackDefinitionRackLocation { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IClusterPatchPropertiesInternal)Property).AggregatorOrSingleRackDefinitionRackLocation; set => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IClusterPatchPropertiesInternal)Property).AggregatorOrSingleRackDefinitionRackLocation = value ?? null; }

        /// <summary>
        /// The unique identifier for the rack within Network Cloud cluster. An alternate unique alphanumeric value other than a serial
        /// number may be provided if desired.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.PropertyOrigin.Inlined)]
        public string AggregatorOrSingleRackDefinitionRackSerialNumber { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IClusterPatchPropertiesInternal)Property).AggregatorOrSingleRackDefinitionRackSerialNumber; set => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IClusterPatchPropertiesInternal)Property).AggregatorOrSingleRackDefinitionRackSerialNumber = value ?? null; }

        /// <summary>The resource ID of the sku for the rack being added.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.PropertyOrigin.Inlined)]
        public string AggregatorOrSingleRackDefinitionRackSkuId { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IClusterPatchPropertiesInternal)Property).AggregatorOrSingleRackDefinitionRackSkuId; set => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IClusterPatchPropertiesInternal)Property).AggregatorOrSingleRackDefinitionRackSkuId = value ?? null; }

        /// <summary>The list of storage appliance configuration data for this rack.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IStorageApplianceConfigurationData[] AggregatorOrSingleRackDefinitionStorageApplianceConfigurationData { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IClusterPatchPropertiesInternal)Property).AggregatorOrSingleRackDefinitionStorageApplianceConfigurationData; set => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IClusterPatchPropertiesInternal)Property).AggregatorOrSingleRackDefinitionStorageApplianceConfigurationData = value ?? null /* arrayOf */; }

        /// <summary>
        /// The customer-provided location information to identify where the cluster resides.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.PropertyOrigin.Inlined)]
        public string ClusterLocation { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IClusterPatchPropertiesInternal)Property).ClusterLocation; set => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IClusterPatchPropertiesInternal)Property).ClusterLocation = value ?? null; }

        /// <summary>The application ID, also known as client ID, of the service principal.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.PropertyOrigin.Inlined)]
        public string ClusterServicePrincipalApplicationId { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IClusterPatchPropertiesInternal)Property).ClusterServicePrincipalApplicationId; set => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IClusterPatchPropertiesInternal)Property).ClusterServicePrincipalApplicationId = value ?? null; }

        /// <summary>The principal ID, also known as the object ID, of the service principal.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.PropertyOrigin.Inlined)]
        public string ClusterServicePrincipalId { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IClusterPatchPropertiesInternal)Property).ClusterServicePrincipalId; set => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IClusterPatchPropertiesInternal)Property).ClusterServicePrincipalId = value ?? null; }

        /// <summary>The password of the service principal.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.PropertyOrigin.Inlined)]
        public System.Security.SecureString ClusterServicePrincipalPassword { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IClusterPatchPropertiesInternal)Property).ClusterServicePrincipalPassword; set => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IClusterPatchPropertiesInternal)Property).ClusterServicePrincipalPassword = value ?? null; }

        /// <summary>
        /// The tenant ID, also known as the directory ID, of the tenant in which the service principal is created.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.PropertyOrigin.Inlined)]
        public string ClusterServicePrincipalTenantId { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IClusterPatchPropertiesInternal)Property).ClusterServicePrincipalTenantId; set => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IClusterPatchPropertiesInternal)Property).ClusterServicePrincipalTenantId = value ?? null; }

        /// <summary>Selection of how the type evaluation is applied to the cluster calculation.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Support.ValidationThresholdGrouping? ComputeDeploymentThresholdGrouping { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IClusterPatchPropertiesInternal)Property).ComputeDeploymentThresholdGrouping; set => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IClusterPatchPropertiesInternal)Property).ComputeDeploymentThresholdGrouping = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Support.ValidationThresholdGrouping)""); }

        /// <summary>Selection of how the threshold should be evaluated.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Support.ValidationThresholdType? ComputeDeploymentThresholdType { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IClusterPatchPropertiesInternal)Property).ComputeDeploymentThresholdType; set => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IClusterPatchPropertiesInternal)Property).ComputeDeploymentThresholdType = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Support.ValidationThresholdType)""); }

        /// <summary>The numeric threshold value.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.PropertyOrigin.Inlined)]
        public long? ComputeDeploymentThresholdValue { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IClusterPatchPropertiesInternal)Property).ComputeDeploymentThresholdValue; set => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IClusterPatchPropertiesInternal)Property).ComputeDeploymentThresholdValue = value ?? default(long); }

        /// <summary>
        /// The list of rack definitions for the compute racks in a multi-rack
        /// cluster, or an empty list in a single-rack cluster.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IRackDefinition[] ComputeRackDefinition { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IClusterPatchPropertiesInternal)Property).ComputeRackDefinition; set => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IClusterPatchPropertiesInternal)Property).ComputeRackDefinition = value ?? null /* arrayOf */; }

        /// <summary>Internal Acessors for AggregatorOrSingleRackDefinition</summary>
        Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IRackDefinition Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IClusterPatchParametersInternal.AggregatorOrSingleRackDefinition { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IClusterPatchPropertiesInternal)Property).AggregatorOrSingleRackDefinition; set => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IClusterPatchPropertiesInternal)Property).AggregatorOrSingleRackDefinition = value; }

        /// <summary>Internal Acessors for ClusterServicePrincipal</summary>
        Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IServicePrincipalInformation Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IClusterPatchParametersInternal.ClusterServicePrincipal { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IClusterPatchPropertiesInternal)Property).ClusterServicePrincipal; set => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IClusterPatchPropertiesInternal)Property).ClusterServicePrincipal = value; }

        /// <summary>Internal Acessors for ComputeDeploymentThreshold</summary>
        Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IValidationThreshold Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IClusterPatchParametersInternal.ComputeDeploymentThreshold { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IClusterPatchPropertiesInternal)Property).ComputeDeploymentThreshold; set => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IClusterPatchPropertiesInternal)Property).ComputeDeploymentThreshold = value; }

        /// <summary>Internal Acessors for Property</summary>
        Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IClusterPatchProperties Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IClusterPatchParametersInternal.Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.ClusterPatchProperties()); set { {_property = value;} } }

        /// <summary>Backing field for <see cref="Property" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IClusterPatchProperties _property;

        /// <summary>The list of the resource properties.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IClusterPatchProperties Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.ClusterPatchProperties()); set => this._property = value; }

        /// <summary>Backing field for <see cref="Tag" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IClusterPatchParametersTags _tag;

        /// <summary>The Azure resource tags that will replace the existing ones.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IClusterPatchParametersTags Tag { get => (this._tag = this._tag ?? new Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.ClusterPatchParametersTags()); set => this._tag = value; }

        /// <summary>Creates an new <see cref="ClusterPatchParameters" /> instance.</summary>
        public ClusterPatchParameters()
        {

        }
    }
    /// ClusterPatchParameters represents the body of the request to patch the cluster properties.
    public partial interface IClusterPatchParameters :
        Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Runtime.IJsonSerializable
    {
        /// <summary>
        /// The zone name used for this rack when created. Availability zones are used for workload placement.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The zone name used for this rack when created. Availability zones are used for workload placement.",
        SerializedName = @"availabilityZone",
        PossibleTypes = new [] { typeof(string) })]
        string AggregatorOrSingleRackDefinitionAvailabilityZone { get; set; }
        /// <summary>The unordered list of bare metal machine configuration.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The unordered list of bare metal machine configuration.",
        SerializedName = @"bareMetalMachineConfigurationData",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IBareMetalMachineConfigurationData) })]
        Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IBareMetalMachineConfigurationData[] AggregatorOrSingleRackDefinitionBareMetalMachineConfigurationData { get; set; }
        /// <summary>The resource ID of the network rack that matches this rack definition.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The resource ID of the network rack that matches this rack definition.",
        SerializedName = @"networkRackId",
        PossibleTypes = new [] { typeof(string) })]
        string AggregatorOrSingleRackDefinitionNetworkRackId { get; set; }
        /// <summary>The free-form description of the rack's location.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The free-form description of the rack's location.",
        SerializedName = @"rackLocation",
        PossibleTypes = new [] { typeof(string) })]
        string AggregatorOrSingleRackDefinitionRackLocation { get; set; }
        /// <summary>
        /// The unique identifier for the rack within Network Cloud cluster. An alternate unique alphanumeric value other than a serial
        /// number may be provided if desired.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The unique identifier for the rack within Network Cloud cluster. An alternate unique alphanumeric value other than a serial number may be provided if desired.",
        SerializedName = @"rackSerialNumber",
        PossibleTypes = new [] { typeof(string) })]
        string AggregatorOrSingleRackDefinitionRackSerialNumber { get; set; }
        /// <summary>The resource ID of the sku for the rack being added.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The resource ID of the sku for the rack being added.",
        SerializedName = @"rackSkuId",
        PossibleTypes = new [] { typeof(string) })]
        string AggregatorOrSingleRackDefinitionRackSkuId { get; set; }
        /// <summary>The list of storage appliance configuration data for this rack.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The list of storage appliance configuration data for this rack.",
        SerializedName = @"storageApplianceConfigurationData",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IStorageApplianceConfigurationData) })]
        Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IStorageApplianceConfigurationData[] AggregatorOrSingleRackDefinitionStorageApplianceConfigurationData { get; set; }
        /// <summary>
        /// The customer-provided location information to identify where the cluster resides.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The customer-provided location information to identify where the cluster resides.",
        SerializedName = @"clusterLocation",
        PossibleTypes = new [] { typeof(string) })]
        string ClusterLocation { get; set; }
        /// <summary>The application ID, also known as client ID, of the service principal.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The application ID, also known as client ID, of the service principal.",
        SerializedName = @"applicationId",
        PossibleTypes = new [] { typeof(string) })]
        string ClusterServicePrincipalApplicationId { get; set; }
        /// <summary>The principal ID, also known as the object ID, of the service principal.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The principal ID, also known as the object ID, of the service principal.",
        SerializedName = @"principalId",
        PossibleTypes = new [] { typeof(string) })]
        string ClusterServicePrincipalId { get; set; }
        /// <summary>The password of the service principal.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The password of the service principal.",
        SerializedName = @"password",
        PossibleTypes = new [] { typeof(System.Security.SecureString) })]
        System.Security.SecureString ClusterServicePrincipalPassword { get; set; }
        /// <summary>
        /// The tenant ID, also known as the directory ID, of the tenant in which the service principal is created.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The tenant ID, also known as the directory ID, of the tenant in which the service principal is created.",
        SerializedName = @"tenantId",
        PossibleTypes = new [] { typeof(string) })]
        string ClusterServicePrincipalTenantId { get; set; }
        /// <summary>Selection of how the type evaluation is applied to the cluster calculation.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Selection of how the type evaluation is applied to the cluster calculation.",
        SerializedName = @"grouping",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Support.ValidationThresholdGrouping) })]
        Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Support.ValidationThresholdGrouping? ComputeDeploymentThresholdGrouping { get; set; }
        /// <summary>Selection of how the threshold should be evaluated.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Selection of how the threshold should be evaluated.",
        SerializedName = @"type",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Support.ValidationThresholdType) })]
        Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Support.ValidationThresholdType? ComputeDeploymentThresholdType { get; set; }
        /// <summary>The numeric threshold value.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The numeric threshold value.",
        SerializedName = @"value",
        PossibleTypes = new [] { typeof(long) })]
        long? ComputeDeploymentThresholdValue { get; set; }
        /// <summary>
        /// The list of rack definitions for the compute racks in a multi-rack
        /// cluster, or an empty list in a single-rack cluster.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The list of rack definitions for the compute racks in a multi-rack
        cluster, or an empty list in a single-rack cluster.",
        SerializedName = @"computeRackDefinitions",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IRackDefinition) })]
        Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IRackDefinition[] ComputeRackDefinition { get; set; }
        /// <summary>The Azure resource tags that will replace the existing ones.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The Azure resource tags that will replace the existing ones.",
        SerializedName = @"tags",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IClusterPatchParametersTags) })]
        Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IClusterPatchParametersTags Tag { get; set; }

    }
    /// ClusterPatchParameters represents the body of the request to patch the cluster properties.
    internal partial interface IClusterPatchParametersInternal

    {
        /// <summary>
        /// The rack definition that is intended to reflect only a single rack in a single rack cluster, or an aggregator rack in
        /// a multi-rack cluster.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IRackDefinition AggregatorOrSingleRackDefinition { get; set; }
        /// <summary>
        /// The zone name used for this rack when created. Availability zones are used for workload placement.
        /// </summary>
        string AggregatorOrSingleRackDefinitionAvailabilityZone { get; set; }
        /// <summary>The unordered list of bare metal machine configuration.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IBareMetalMachineConfigurationData[] AggregatorOrSingleRackDefinitionBareMetalMachineConfigurationData { get; set; }
        /// <summary>The resource ID of the network rack that matches this rack definition.</summary>
        string AggregatorOrSingleRackDefinitionNetworkRackId { get; set; }
        /// <summary>The free-form description of the rack's location.</summary>
        string AggregatorOrSingleRackDefinitionRackLocation { get; set; }
        /// <summary>
        /// The unique identifier for the rack within Network Cloud cluster. An alternate unique alphanumeric value other than a serial
        /// number may be provided if desired.
        /// </summary>
        string AggregatorOrSingleRackDefinitionRackSerialNumber { get; set; }
        /// <summary>The resource ID of the sku for the rack being added.</summary>
        string AggregatorOrSingleRackDefinitionRackSkuId { get; set; }
        /// <summary>The list of storage appliance configuration data for this rack.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IStorageApplianceConfigurationData[] AggregatorOrSingleRackDefinitionStorageApplianceConfigurationData { get; set; }
        /// <summary>
        /// The customer-provided location information to identify where the cluster resides.
        /// </summary>
        string ClusterLocation { get; set; }
        /// <summary>
        /// The service principal to be used by the cluster during Arc Appliance installation.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IServicePrincipalInformation ClusterServicePrincipal { get; set; }
        /// <summary>The application ID, also known as client ID, of the service principal.</summary>
        string ClusterServicePrincipalApplicationId { get; set; }
        /// <summary>The principal ID, also known as the object ID, of the service principal.</summary>
        string ClusterServicePrincipalId { get; set; }
        /// <summary>The password of the service principal.</summary>
        System.Security.SecureString ClusterServicePrincipalPassword { get; set; }
        /// <summary>
        /// The tenant ID, also known as the directory ID, of the tenant in which the service principal is created.
        /// </summary>
        string ClusterServicePrincipalTenantId { get; set; }
        /// <summary>
        /// The validation threshold indicating the allowable failures of compute machines during environment validation and deployment.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IValidationThreshold ComputeDeploymentThreshold { get; set; }
        /// <summary>Selection of how the type evaluation is applied to the cluster calculation.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Support.ValidationThresholdGrouping? ComputeDeploymentThresholdGrouping { get; set; }
        /// <summary>Selection of how the threshold should be evaluated.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Support.ValidationThresholdType? ComputeDeploymentThresholdType { get; set; }
        /// <summary>The numeric threshold value.</summary>
        long? ComputeDeploymentThresholdValue { get; set; }
        /// <summary>
        /// The list of rack definitions for the compute racks in a multi-rack
        /// cluster, or an empty list in a single-rack cluster.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IRackDefinition[] ComputeRackDefinition { get; set; }
        /// <summary>The list of the resource properties.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IClusterPatchProperties Property { get; set; }
        /// <summary>The Azure resource tags that will replace the existing ones.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IClusterPatchParametersTags Tag { get; set; }

    }
}