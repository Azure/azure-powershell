// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701
{
    using static Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Runtime.Extensions;

    /// <summary>BareMetalMachine represents the physical machine in the rack.</summary>
    public partial class BareMetalMachine :
        Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IBareMetalMachine,
        Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IBareMetalMachineInternal,
        Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Runtime.IValidates
    {
        /// <summary>
        /// Backing field for Inherited model <see cref= "Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api40.ITrackedResource"
        /// />
        /// </summary>
        private Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api40.ITrackedResource __trackedResource = new Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api40.TrackedResource();

        /// <summary>
        /// The list of resource IDs for the other Microsoft.NetworkCloud resources that have attached this network.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.PropertyOrigin.Inlined)]
        public string[] AssociatedResourceId { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IBareMetalMachinePropertiesInternal)Property).AssociatedResourceId; }

        /// <summary>
        /// The connection string for the baseboard management controller including IP address and protocol.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.PropertyOrigin.Inlined)]
        public string BmcConnectionString { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IBareMetalMachinePropertiesInternal)Property).BmcConnectionString; set => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IBareMetalMachinePropertiesInternal)Property).BmcConnectionString = value ; }

        /// <summary>The password of the administrator of the device used during initialization.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.PropertyOrigin.Inlined)]
        public System.Security.SecureString BmcCredentialsPassword { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IBareMetalMachinePropertiesInternal)Property).BmcCredentialsPassword; set => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IBareMetalMachinePropertiesInternal)Property).BmcCredentialsPassword = value ; }

        /// <summary>The username of the administrator of the device used during initialization.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.PropertyOrigin.Inlined)]
        public string BmcCredentialsUsername { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IBareMetalMachinePropertiesInternal)Property).BmcCredentialsUsername; set => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IBareMetalMachinePropertiesInternal)Property).BmcCredentialsUsername = value ; }

        /// <summary>The MAC address of the BMC device.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.PropertyOrigin.Inlined)]
        public string BmcMacAddress { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IBareMetalMachinePropertiesInternal)Property).BmcMacAddress; set => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IBareMetalMachinePropertiesInternal)Property).BmcMacAddress = value ; }

        /// <summary>The MAC address of a NIC connected to the PXE network.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.PropertyOrigin.Inlined)]
        public string BootMacAddress { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IBareMetalMachinePropertiesInternal)Property).BootMacAddress; set => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IBareMetalMachinePropertiesInternal)Property).BootMacAddress = value ; }

        /// <summary>The resource ID of the cluster this bare metal machine is associated with.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.PropertyOrigin.Inlined)]
        public string ClusterId { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IBareMetalMachinePropertiesInternal)Property).ClusterId; }

        /// <summary>The cordon status of the bare metal machine.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Support.BareMetalMachineCordonStatus? CordonStatus { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IBareMetalMachinePropertiesInternal)Property).CordonStatus; }

        /// <summary>The more detailed status of the bare metal machine.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Support.BareMetalMachineDetailedStatus? DetailedStatus { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IBareMetalMachinePropertiesInternal)Property).DetailedStatus; }

        /// <summary>The descriptive message about the current detailed status.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.PropertyOrigin.Inlined)]
        public string DetailedStatusMessage { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IBareMetalMachinePropertiesInternal)Property).DetailedStatusMessage; }

        /// <summary>Backing field for <see cref="ExtendedLocation" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IExtendedLocation _extendedLocation;

        /// <summary>The extended location of the cluster associated with the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IExtendedLocation ExtendedLocation { get => (this._extendedLocation = this._extendedLocation ?? new Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.ExtendedLocation()); set => this._extendedLocation = value; }

        /// <summary>The resource ID of the extended location on which the resource will be created.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.PropertyOrigin.Inlined)]
        public string ExtendedLocationName { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IExtendedLocationInternal)ExtendedLocation).Name; set => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IExtendedLocationInternal)ExtendedLocation).Name = value ; }

        /// <summary>The extended location type, for example, CustomLocation.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.PropertyOrigin.Inlined)]
        public string ExtendedLocationType { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IExtendedLocationInternal)ExtendedLocation).Type; set => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IExtendedLocationInternal)ExtendedLocation).Type = value ; }

        /// <summary>
        /// Freeform data extracted from the environment about this machine. This information varies depending on the specific hardware
        /// and configuration.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.PropertyOrigin.Inlined)]
        public string HardwareInventoryAdditionalHostInformation { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IBareMetalMachinePropertiesInternal)Property).HardwareInventoryAdditionalHostInformation; }

        /// <summary>
        /// The list of network interfaces and associated details for the bare metal machine.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IHardwareInventoryNetworkInterface[] HardwareInventoryInterface { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IBareMetalMachinePropertiesInternal)Property).HardwareInventoryInterface; }

        /// <summary>
        /// Field Deprecated. Will be removed in an upcoming version. The list of network interface cards and associated details for
        /// the bare metal machine.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.INic[] HardwareInventoryNic { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IBareMetalMachinePropertiesInternal)Property).HardwareInventoryNic; }

        /// <summary>The timestamp of the hardware validation execution.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.PropertyOrigin.Inlined)]
        public global::System.DateTime? HardwareValidationStatusLastValidationTime { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IBareMetalMachinePropertiesInternal)Property).HardwareValidationStatusLastValidationTime; }

        /// <summary>The outcome of the hardware validation.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Support.BareMetalMachineHardwareValidationResult? HardwareValidationStatusResult { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IBareMetalMachinePropertiesInternal)Property).HardwareValidationStatusResult; }

        /// <summary>
        /// Field Deprecated. These fields will be empty/omitted. The list of the resource IDs for the HybridAksClusters that have
        /// nodes hosted on this bare metal machine.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.PropertyOrigin.Inlined)]
        public string[] HybridAksClustersAssociatedId { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IBareMetalMachinePropertiesInternal)Property).HybridAksClustersAssociatedId; }

        /// <summary>
        /// Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.PropertyOrigin.Inherited)]
        public string Id { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api40.IResourceInternal)__trackedResource).Id; }

        /// <summary>
        /// The name of this machine represented by the host object in the Cluster's Kubernetes control plane.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.PropertyOrigin.Inlined)]
        public string KubernetesNodeName { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IBareMetalMachinePropertiesInternal)Property).KubernetesNodeName; }

        /// <summary>The version of Kubernetes running on this machine.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.PropertyOrigin.Inlined)]
        public string KubernetesVersion { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IBareMetalMachinePropertiesInternal)Property).KubernetesVersion; }

        /// <summary>The geo-location where the resource lives</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.PropertyOrigin.Inherited)]
        public string Location { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api40.ITrackedResourceInternal)__trackedResource).Location; set => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api40.ITrackedResourceInternal)__trackedResource).Location = value ; }

        /// <summary>The custom details provided by the customer.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.PropertyOrigin.Inlined)]
        public string MachineDetail { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IBareMetalMachinePropertiesInternal)Property).MachineDetail; set => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IBareMetalMachinePropertiesInternal)Property).MachineDetail = value ; }

        /// <summary>The OS-level hostname assigned to this machine.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.PropertyOrigin.Inlined)]
        public string MachineName { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IBareMetalMachinePropertiesInternal)Property).MachineName; set => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IBareMetalMachinePropertiesInternal)Property).MachineName = value ; }

        /// <summary>The unique internal identifier of the bare metal machine SKU.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.PropertyOrigin.Inlined)]
        public string MachineSkuId { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IBareMetalMachinePropertiesInternal)Property).MachineSkuId; set => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IBareMetalMachinePropertiesInternal)Property).MachineSkuId = value ; }

        /// <summary>Internal Acessors for AssociatedResourceId</summary>
        string[] Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IBareMetalMachineInternal.AssociatedResourceId { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IBareMetalMachinePropertiesInternal)Property).AssociatedResourceId; set => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IBareMetalMachinePropertiesInternal)Property).AssociatedResourceId = value; }

        /// <summary>Internal Acessors for BmcCredentials</summary>
        Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IAdministrativeCredentials Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IBareMetalMachineInternal.BmcCredentials { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IBareMetalMachinePropertiesInternal)Property).BmcCredentials; set => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IBareMetalMachinePropertiesInternal)Property).BmcCredentials = value; }

        /// <summary>Internal Acessors for ClusterId</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IBareMetalMachineInternal.ClusterId { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IBareMetalMachinePropertiesInternal)Property).ClusterId; set => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IBareMetalMachinePropertiesInternal)Property).ClusterId = value; }

        /// <summary>Internal Acessors for CordonStatus</summary>
        Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Support.BareMetalMachineCordonStatus? Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IBareMetalMachineInternal.CordonStatus { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IBareMetalMachinePropertiesInternal)Property).CordonStatus; set => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IBareMetalMachinePropertiesInternal)Property).CordonStatus = value; }

        /// <summary>Internal Acessors for DetailedStatus</summary>
        Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Support.BareMetalMachineDetailedStatus? Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IBareMetalMachineInternal.DetailedStatus { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IBareMetalMachinePropertiesInternal)Property).DetailedStatus; set => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IBareMetalMachinePropertiesInternal)Property).DetailedStatus = value; }

        /// <summary>Internal Acessors for DetailedStatusMessage</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IBareMetalMachineInternal.DetailedStatusMessage { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IBareMetalMachinePropertiesInternal)Property).DetailedStatusMessage; set => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IBareMetalMachinePropertiesInternal)Property).DetailedStatusMessage = value; }

        /// <summary>Internal Acessors for ExtendedLocation</summary>
        Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IExtendedLocation Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IBareMetalMachineInternal.ExtendedLocation { get => (this._extendedLocation = this._extendedLocation ?? new Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.ExtendedLocation()); set { {_extendedLocation = value;} } }

        /// <summary>Internal Acessors for HardwareInventory</summary>
        Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IHardwareInventory Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IBareMetalMachineInternal.HardwareInventory { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IBareMetalMachinePropertiesInternal)Property).HardwareInventory; set => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IBareMetalMachinePropertiesInternal)Property).HardwareInventory = value; }

        /// <summary>Internal Acessors for HardwareInventoryAdditionalHostInformation</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IBareMetalMachineInternal.HardwareInventoryAdditionalHostInformation { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IBareMetalMachinePropertiesInternal)Property).HardwareInventoryAdditionalHostInformation; set => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IBareMetalMachinePropertiesInternal)Property).HardwareInventoryAdditionalHostInformation = value; }

        /// <summary>Internal Acessors for HardwareInventoryInterface</summary>
        Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IHardwareInventoryNetworkInterface[] Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IBareMetalMachineInternal.HardwareInventoryInterface { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IBareMetalMachinePropertiesInternal)Property).HardwareInventoryInterface; set => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IBareMetalMachinePropertiesInternal)Property).HardwareInventoryInterface = value; }

        /// <summary>Internal Acessors for HardwareInventoryNic</summary>
        Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.INic[] Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IBareMetalMachineInternal.HardwareInventoryNic { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IBareMetalMachinePropertiesInternal)Property).HardwareInventoryNic; set => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IBareMetalMachinePropertiesInternal)Property).HardwareInventoryNic = value; }

        /// <summary>Internal Acessors for HardwareValidationStatus</summary>
        Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IHardwareValidationStatus Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IBareMetalMachineInternal.HardwareValidationStatus { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IBareMetalMachinePropertiesInternal)Property).HardwareValidationStatus; set => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IBareMetalMachinePropertiesInternal)Property).HardwareValidationStatus = value; }

        /// <summary>Internal Acessors for HardwareValidationStatusLastValidationTime</summary>
        global::System.DateTime? Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IBareMetalMachineInternal.HardwareValidationStatusLastValidationTime { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IBareMetalMachinePropertiesInternal)Property).HardwareValidationStatusLastValidationTime; set => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IBareMetalMachinePropertiesInternal)Property).HardwareValidationStatusLastValidationTime = value; }

        /// <summary>Internal Acessors for HardwareValidationStatusResult</summary>
        Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Support.BareMetalMachineHardwareValidationResult? Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IBareMetalMachineInternal.HardwareValidationStatusResult { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IBareMetalMachinePropertiesInternal)Property).HardwareValidationStatusResult; set => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IBareMetalMachinePropertiesInternal)Property).HardwareValidationStatusResult = value; }

        /// <summary>Internal Acessors for HybridAksClustersAssociatedId</summary>
        string[] Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IBareMetalMachineInternal.HybridAksClustersAssociatedId { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IBareMetalMachinePropertiesInternal)Property).HybridAksClustersAssociatedId; set => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IBareMetalMachinePropertiesInternal)Property).HybridAksClustersAssociatedId = value; }

        /// <summary>Internal Acessors for KubernetesNodeName</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IBareMetalMachineInternal.KubernetesNodeName { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IBareMetalMachinePropertiesInternal)Property).KubernetesNodeName; set => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IBareMetalMachinePropertiesInternal)Property).KubernetesNodeName = value; }

        /// <summary>Internal Acessors for KubernetesVersion</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IBareMetalMachineInternal.KubernetesVersion { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IBareMetalMachinePropertiesInternal)Property).KubernetesVersion; set => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IBareMetalMachinePropertiesInternal)Property).KubernetesVersion = value; }

        /// <summary>Internal Acessors for OSImage</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IBareMetalMachineInternal.OSImage { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IBareMetalMachinePropertiesInternal)Property).OSImage; set => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IBareMetalMachinePropertiesInternal)Property).OSImage = value; }

        /// <summary>Internal Acessors for OamIpv4Address</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IBareMetalMachineInternal.OamIpv4Address { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IBareMetalMachinePropertiesInternal)Property).OamIpv4Address; set => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IBareMetalMachinePropertiesInternal)Property).OamIpv4Address = value; }

        /// <summary>Internal Acessors for OamIpv6Address</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IBareMetalMachineInternal.OamIpv6Address { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IBareMetalMachinePropertiesInternal)Property).OamIpv6Address; set => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IBareMetalMachinePropertiesInternal)Property).OamIpv6Address = value; }

        /// <summary>Internal Acessors for PowerState</summary>
        Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Support.BareMetalMachinePowerState? Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IBareMetalMachineInternal.PowerState { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IBareMetalMachinePropertiesInternal)Property).PowerState; set => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IBareMetalMachinePropertiesInternal)Property).PowerState = value; }

        /// <summary>Internal Acessors for Property</summary>
        Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IBareMetalMachineProperties Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IBareMetalMachineInternal.Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.BareMetalMachineProperties()); set { {_property = value;} } }

        /// <summary>Internal Acessors for ProvisioningState</summary>
        Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Support.BareMetalMachineProvisioningState? Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IBareMetalMachineInternal.ProvisioningState { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IBareMetalMachinePropertiesInternal)Property).ProvisioningState; set => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IBareMetalMachinePropertiesInternal)Property).ProvisioningState = value; }

        /// <summary>Internal Acessors for ReadyState</summary>
        Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Support.BareMetalMachineReadyState? Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IBareMetalMachineInternal.ReadyState { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IBareMetalMachinePropertiesInternal)Property).ReadyState; set => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IBareMetalMachinePropertiesInternal)Property).ReadyState = value; }

        /// <summary>Internal Acessors for ServiceTag</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IBareMetalMachineInternal.ServiceTag { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IBareMetalMachinePropertiesInternal)Property).ServiceTag; set => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IBareMetalMachinePropertiesInternal)Property).ServiceTag = value; }

        /// <summary>Internal Acessors for VirtualMachinesAssociatedId</summary>
        string[] Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IBareMetalMachineInternal.VirtualMachinesAssociatedId { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IBareMetalMachinePropertiesInternal)Property).VirtualMachinesAssociatedId; set => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IBareMetalMachinePropertiesInternal)Property).VirtualMachinesAssociatedId = value; }

        /// <summary>Internal Acessors for Id</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api40.IResourceInternal.Id { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api40.IResourceInternal)__trackedResource).Id; set => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api40.IResourceInternal)__trackedResource).Id = value; }

        /// <summary>Internal Acessors for Name</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api40.IResourceInternal.Name { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api40.IResourceInternal)__trackedResource).Name; set => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api40.IResourceInternal)__trackedResource).Name = value; }

        /// <summary>Internal Acessors for SystemData</summary>
        Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api40.ISystemData Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api40.IResourceInternal.SystemData { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api40.IResourceInternal)__trackedResource).SystemData; set => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api40.IResourceInternal)__trackedResource).SystemData = value; }

        /// <summary>Internal Acessors for Type</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api40.IResourceInternal.Type { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api40.IResourceInternal)__trackedResource).Type; set => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api40.IResourceInternal)__trackedResource).Type = value; }

        /// <summary>The name of the resource</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.PropertyOrigin.Inherited)]
        public string Name { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api40.IResourceInternal)__trackedResource).Name; }

        /// <summary>The image that is currently provisioned to the OS disk.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.PropertyOrigin.Inlined)]
        public string OSImage { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IBareMetalMachinePropertiesInternal)Property).OSImage; }

        /// <summary>
        /// The IPv4 address that is assigned to the bare metal machine during the cluster deployment.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.PropertyOrigin.Inlined)]
        public string OamIpv4Address { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IBareMetalMachinePropertiesInternal)Property).OamIpv4Address; }

        /// <summary>
        /// The IPv6 address that is assigned to the bare metal machine during the cluster deployment.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.PropertyOrigin.Inlined)]
        public string OamIpv6Address { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IBareMetalMachinePropertiesInternal)Property).OamIpv6Address; }

        /// <summary>The power state derived from the baseboard management controller.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Support.BareMetalMachinePowerState? PowerState { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IBareMetalMachinePropertiesInternal)Property).PowerState; }

        /// <summary>Backing field for <see cref="Property" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IBareMetalMachineProperties _property;

        /// <summary>The list of the resource properties.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IBareMetalMachineProperties Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.BareMetalMachineProperties()); set => this._property = value; }

        /// <summary>The provisioning state of the bare metal machine.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Support.BareMetalMachineProvisioningState? ProvisioningState { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IBareMetalMachinePropertiesInternal)Property).ProvisioningState; }

        /// <summary>The resource ID of the rack where this bare metal machine resides.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.PropertyOrigin.Inlined)]
        public string RackId { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IBareMetalMachinePropertiesInternal)Property).RackId; set => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IBareMetalMachinePropertiesInternal)Property).RackId = value ; }

        /// <summary>
        /// The rack slot in which this bare metal machine is located, ordered from the bottom up i.e. the lowest slot is 1.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.PropertyOrigin.Inlined)]
        public long RackSlot { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IBareMetalMachinePropertiesInternal)Property).RackSlot; set => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IBareMetalMachinePropertiesInternal)Property).RackSlot = value ; }

        /// <summary>The indicator of whether the bare metal machine is ready to receive workloads.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Support.BareMetalMachineReadyState? ReadyState { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IBareMetalMachinePropertiesInternal)Property).ReadyState; }

        /// <summary>Gets the resource group name</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.PropertyOrigin.Owned)]
        public string ResourceGroupName { get => (new global::System.Text.RegularExpressions.Regex("^/subscriptions/(?<subscriptionId>[^/]+)/resourceGroups/(?<resourceGroupName>[^/]+)/providers/", global::System.Text.RegularExpressions.RegexOptions.IgnoreCase).Match(this.Id).Success ? new global::System.Text.RegularExpressions.Regex("^/subscriptions/(?<subscriptionId>[^/]+)/resourceGroups/(?<resourceGroupName>[^/]+)/providers/", global::System.Text.RegularExpressions.RegexOptions.IgnoreCase).Match(this.Id).Groups["resourceGroupName"].Value : null); }

        /// <summary>The serial number of the bare metal machine.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.PropertyOrigin.Inlined)]
        public string SerialNumber { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IBareMetalMachinePropertiesInternal)Property).SerialNumber; set => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IBareMetalMachinePropertiesInternal)Property).SerialNumber = value ; }

        /// <summary>The discovered value of the machine's service tag.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.PropertyOrigin.Inlined)]
        public string ServiceTag { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IBareMetalMachinePropertiesInternal)Property).ServiceTag; }

        /// <summary>
        /// Azure Resource Manager metadata containing createdBy and modifiedBy information.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.PropertyOrigin.Inherited)]
        public Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api40.ISystemData SystemData { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api40.IResourceInternal)__trackedResource).SystemData; }

        /// <summary>The timestamp of resource creation (UTC).</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.PropertyOrigin.Inherited)]
        public global::System.DateTime? SystemDataCreatedAt { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api40.IResourceInternal)__trackedResource).SystemDataCreatedAt; set => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api40.IResourceInternal)__trackedResource).SystemDataCreatedAt = value ?? default(global::System.DateTime); }

        /// <summary>The identity that created the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.PropertyOrigin.Inherited)]
        public string SystemDataCreatedBy { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api40.IResourceInternal)__trackedResource).SystemDataCreatedBy; set => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api40.IResourceInternal)__trackedResource).SystemDataCreatedBy = value ?? null; }

        /// <summary>The type of identity that created the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.PropertyOrigin.Inherited)]
        public Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Support.CreatedByType? SystemDataCreatedByType { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api40.IResourceInternal)__trackedResource).SystemDataCreatedByType; set => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api40.IResourceInternal)__trackedResource).SystemDataCreatedByType = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Support.CreatedByType)""); }

        /// <summary>The timestamp of resource last modification (UTC)</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.PropertyOrigin.Inherited)]
        public global::System.DateTime? SystemDataLastModifiedAt { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api40.IResourceInternal)__trackedResource).SystemDataLastModifiedAt; set => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api40.IResourceInternal)__trackedResource).SystemDataLastModifiedAt = value ?? default(global::System.DateTime); }

        /// <summary>The identity that last modified the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.PropertyOrigin.Inherited)]
        public string SystemDataLastModifiedBy { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api40.IResourceInternal)__trackedResource).SystemDataLastModifiedBy; set => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api40.IResourceInternal)__trackedResource).SystemDataLastModifiedBy = value ?? null; }

        /// <summary>The type of identity that last modified the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.PropertyOrigin.Inherited)]
        public Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Support.CreatedByType? SystemDataLastModifiedByType { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api40.IResourceInternal)__trackedResource).SystemDataLastModifiedByType; set => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api40.IResourceInternal)__trackedResource).SystemDataLastModifiedByType = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Support.CreatedByType)""); }

        /// <summary>Resource tags.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.PropertyOrigin.Inherited)]
        public Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api40.ITrackedResourceTags Tag { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api40.ITrackedResourceInternal)__trackedResource).Tag; set => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api40.ITrackedResourceInternal)__trackedResource).Tag = value ?? null /* model class */; }

        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.PropertyOrigin.Inherited)]
        public string Type { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api40.IResourceInternal)__trackedResource).Type; }

        /// <summary>
        /// Field Deprecated. These fields will be empty/omitted. The list of the resource IDs for the VirtualMachines that are hosted
        /// on this bare metal machine.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.PropertyOrigin.Inlined)]
        public string[] VirtualMachinesAssociatedId { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IBareMetalMachinePropertiesInternal)Property).VirtualMachinesAssociatedId; }

        /// <summary>Creates an new <see cref="BareMetalMachine" /> instance.</summary>
        public BareMetalMachine()
        {

        }

        /// <summary>Validates that this object meets the validation criteria.</summary>
        /// <param name="eventListener">an <see cref="Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Runtime.IEventListener" /> instance that will receive validation
        /// events.</param>
        /// <returns>
        /// A <see cref = "global::System.Threading.Tasks.Task" /> that will be complete when validation is completed.
        /// </returns>
        public async global::System.Threading.Tasks.Task Validate(Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Runtime.IEventListener eventListener)
        {
            await eventListener.AssertNotNull(nameof(__trackedResource), __trackedResource);
            await eventListener.AssertObjectIsValid(nameof(__trackedResource), __trackedResource);
        }
    }
    /// BareMetalMachine represents the physical machine in the rack.
    public partial interface IBareMetalMachine :
        Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Runtime.IJsonSerializable,
        Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api40.ITrackedResource
    {
        /// <summary>
        /// The list of resource IDs for the other Microsoft.NetworkCloud resources that have attached this network.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The list of resource IDs for the other Microsoft.NetworkCloud resources that have attached this network.",
        SerializedName = @"associatedResourceIds",
        PossibleTypes = new [] { typeof(string) })]
        string[] AssociatedResourceId { get;  }
        /// <summary>
        /// The connection string for the baseboard management controller including IP address and protocol.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"The connection string for the baseboard management controller including IP address and protocol.",
        SerializedName = @"bmcConnectionString",
        PossibleTypes = new [] { typeof(string) })]
        string BmcConnectionString { get; set; }
        /// <summary>The password of the administrator of the device used during initialization.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"The password of the administrator of the device used during initialization.",
        SerializedName = @"password",
        PossibleTypes = new [] { typeof(System.Security.SecureString) })]
        System.Security.SecureString BmcCredentialsPassword { get; set; }
        /// <summary>The username of the administrator of the device used during initialization.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"The username of the administrator of the device used during initialization.",
        SerializedName = @"username",
        PossibleTypes = new [] { typeof(string) })]
        string BmcCredentialsUsername { get; set; }
        /// <summary>The MAC address of the BMC device.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"The MAC address of the BMC device.",
        SerializedName = @"bmcMacAddress",
        PossibleTypes = new [] { typeof(string) })]
        string BmcMacAddress { get; set; }
        /// <summary>The MAC address of a NIC connected to the PXE network.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"The MAC address of a NIC connected to the PXE network.",
        SerializedName = @"bootMacAddress",
        PossibleTypes = new [] { typeof(string) })]
        string BootMacAddress { get; set; }
        /// <summary>The resource ID of the cluster this bare metal machine is associated with.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The resource ID of the cluster this bare metal machine is associated with.",
        SerializedName = @"clusterId",
        PossibleTypes = new [] { typeof(string) })]
        string ClusterId { get;  }
        /// <summary>The cordon status of the bare metal machine.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The cordon status of the bare metal machine.",
        SerializedName = @"cordonStatus",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Support.BareMetalMachineCordonStatus) })]
        Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Support.BareMetalMachineCordonStatus? CordonStatus { get;  }
        /// <summary>The more detailed status of the bare metal machine.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The more detailed status of the bare metal machine.",
        SerializedName = @"detailedStatus",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Support.BareMetalMachineDetailedStatus) })]
        Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Support.BareMetalMachineDetailedStatus? DetailedStatus { get;  }
        /// <summary>The descriptive message about the current detailed status.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The descriptive message about the current detailed status.",
        SerializedName = @"detailedStatusMessage",
        PossibleTypes = new [] { typeof(string) })]
        string DetailedStatusMessage { get;  }
        /// <summary>The resource ID of the extended location on which the resource will be created.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"The resource ID of the extended location on which the resource will be created.",
        SerializedName = @"name",
        PossibleTypes = new [] { typeof(string) })]
        string ExtendedLocationName { get; set; }
        /// <summary>The extended location type, for example, CustomLocation.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"The extended location type, for example, CustomLocation.",
        SerializedName = @"type",
        PossibleTypes = new [] { typeof(string) })]
        string ExtendedLocationType { get; set; }
        /// <summary>
        /// Freeform data extracted from the environment about this machine. This information varies depending on the specific hardware
        /// and configuration.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Freeform data extracted from the environment about this machine. This information varies depending on the specific hardware and configuration.",
        SerializedName = @"additionalHostInformation",
        PossibleTypes = new [] { typeof(string) })]
        string HardwareInventoryAdditionalHostInformation { get;  }
        /// <summary>
        /// The list of network interfaces and associated details for the bare metal machine.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The list of network interfaces and associated details for the bare metal machine.",
        SerializedName = @"interfaces",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IHardwareInventoryNetworkInterface) })]
        Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IHardwareInventoryNetworkInterface[] HardwareInventoryInterface { get;  }
        /// <summary>
        /// Field Deprecated. Will be removed in an upcoming version. The list of network interface cards and associated details for
        /// the bare metal machine.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Field Deprecated. Will be removed in an upcoming version. The list of network interface cards and associated details for the bare metal machine.",
        SerializedName = @"nics",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.INic) })]
        Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.INic[] HardwareInventoryNic { get;  }
        /// <summary>The timestamp of the hardware validation execution.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The timestamp of the hardware validation execution.",
        SerializedName = @"lastValidationTime",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? HardwareValidationStatusLastValidationTime { get;  }
        /// <summary>The outcome of the hardware validation.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The outcome of the hardware validation.",
        SerializedName = @"result",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Support.BareMetalMachineHardwareValidationResult) })]
        Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Support.BareMetalMachineHardwareValidationResult? HardwareValidationStatusResult { get;  }
        /// <summary>
        /// Field Deprecated. These fields will be empty/omitted. The list of the resource IDs for the HybridAksClusters that have
        /// nodes hosted on this bare metal machine.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Field Deprecated. These fields will be empty/omitted. The list of the resource IDs for the HybridAksClusters that have nodes hosted on this bare metal machine.",
        SerializedName = @"hybridAksClustersAssociatedIds",
        PossibleTypes = new [] { typeof(string) })]
        string[] HybridAksClustersAssociatedId { get;  }
        /// <summary>
        /// The name of this machine represented by the host object in the Cluster's Kubernetes control plane.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The name of this machine represented by the host object in the Cluster's Kubernetes control plane.",
        SerializedName = @"kubernetesNodeName",
        PossibleTypes = new [] { typeof(string) })]
        string KubernetesNodeName { get;  }
        /// <summary>The version of Kubernetes running on this machine.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The version of Kubernetes running on this machine.",
        SerializedName = @"kubernetesVersion",
        PossibleTypes = new [] { typeof(string) })]
        string KubernetesVersion { get;  }
        /// <summary>The custom details provided by the customer.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"The custom details provided by the customer.",
        SerializedName = @"machineDetails",
        PossibleTypes = new [] { typeof(string) })]
        string MachineDetail { get; set; }
        /// <summary>The OS-level hostname assigned to this machine.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"The OS-level hostname assigned to this machine.",
        SerializedName = @"machineName",
        PossibleTypes = new [] { typeof(string) })]
        string MachineName { get; set; }
        /// <summary>The unique internal identifier of the bare metal machine SKU.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"The unique internal identifier of the bare metal machine SKU.",
        SerializedName = @"machineSkuId",
        PossibleTypes = new [] { typeof(string) })]
        string MachineSkuId { get; set; }
        /// <summary>The image that is currently provisioned to the OS disk.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The image that is currently provisioned to the OS disk.",
        SerializedName = @"osImage",
        PossibleTypes = new [] { typeof(string) })]
        string OSImage { get;  }
        /// <summary>
        /// The IPv4 address that is assigned to the bare metal machine during the cluster deployment.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The IPv4 address that is assigned to the bare metal machine during the cluster deployment.",
        SerializedName = @"oamIpv4Address",
        PossibleTypes = new [] { typeof(string) })]
        string OamIpv4Address { get;  }
        /// <summary>
        /// The IPv6 address that is assigned to the bare metal machine during the cluster deployment.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The IPv6 address that is assigned to the bare metal machine during the cluster deployment.",
        SerializedName = @"oamIpv6Address",
        PossibleTypes = new [] { typeof(string) })]
        string OamIpv6Address { get;  }
        /// <summary>The power state derived from the baseboard management controller.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The power state derived from the baseboard management controller.",
        SerializedName = @"powerState",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Support.BareMetalMachinePowerState) })]
        Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Support.BareMetalMachinePowerState? PowerState { get;  }
        /// <summary>The provisioning state of the bare metal machine.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The provisioning state of the bare metal machine.",
        SerializedName = @"provisioningState",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Support.BareMetalMachineProvisioningState) })]
        Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Support.BareMetalMachineProvisioningState? ProvisioningState { get;  }
        /// <summary>The resource ID of the rack where this bare metal machine resides.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"The resource ID of the rack where this bare metal machine resides.",
        SerializedName = @"rackId",
        PossibleTypes = new [] { typeof(string) })]
        string RackId { get; set; }
        /// <summary>
        /// The rack slot in which this bare metal machine is located, ordered from the bottom up i.e. the lowest slot is 1.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"The rack slot in which this bare metal machine is located, ordered from the bottom up i.e. the lowest slot is 1.",
        SerializedName = @"rackSlot",
        PossibleTypes = new [] { typeof(long) })]
        long RackSlot { get; set; }
        /// <summary>The indicator of whether the bare metal machine is ready to receive workloads.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The indicator of whether the bare metal machine is ready to receive workloads.",
        SerializedName = @"readyState",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Support.BareMetalMachineReadyState) })]
        Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Support.BareMetalMachineReadyState? ReadyState { get;  }
        /// <summary>The serial number of the bare metal machine.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"The serial number of the bare metal machine.",
        SerializedName = @"serialNumber",
        PossibleTypes = new [] { typeof(string) })]
        string SerialNumber { get; set; }
        /// <summary>The discovered value of the machine's service tag.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The discovered value of the machine's service tag.",
        SerializedName = @"serviceTag",
        PossibleTypes = new [] { typeof(string) })]
        string ServiceTag { get;  }
        /// <summary>
        /// Field Deprecated. These fields will be empty/omitted. The list of the resource IDs for the VirtualMachines that are hosted
        /// on this bare metal machine.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Field Deprecated. These fields will be empty/omitted. The list of the resource IDs for the VirtualMachines that are hosted on this bare metal machine.",
        SerializedName = @"virtualMachinesAssociatedIds",
        PossibleTypes = new [] { typeof(string) })]
        string[] VirtualMachinesAssociatedId { get;  }

    }
    /// BareMetalMachine represents the physical machine in the rack.
    internal partial interface IBareMetalMachineInternal :
        Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api40.ITrackedResourceInternal
    {
        /// <summary>
        /// The list of resource IDs for the other Microsoft.NetworkCloud resources that have attached this network.
        /// </summary>
        string[] AssociatedResourceId { get; set; }
        /// <summary>
        /// The connection string for the baseboard management controller including IP address and protocol.
        /// </summary>
        string BmcConnectionString { get; set; }
        /// <summary>
        /// The credentials of the baseboard management controller on this bare metal machine.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IAdministrativeCredentials BmcCredentials { get; set; }
        /// <summary>The password of the administrator of the device used during initialization.</summary>
        System.Security.SecureString BmcCredentialsPassword { get; set; }
        /// <summary>The username of the administrator of the device used during initialization.</summary>
        string BmcCredentialsUsername { get; set; }
        /// <summary>The MAC address of the BMC device.</summary>
        string BmcMacAddress { get; set; }
        /// <summary>The MAC address of a NIC connected to the PXE network.</summary>
        string BootMacAddress { get; set; }
        /// <summary>The resource ID of the cluster this bare metal machine is associated with.</summary>
        string ClusterId { get; set; }
        /// <summary>The cordon status of the bare metal machine.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Support.BareMetalMachineCordonStatus? CordonStatus { get; set; }
        /// <summary>The more detailed status of the bare metal machine.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Support.BareMetalMachineDetailedStatus? DetailedStatus { get; set; }
        /// <summary>The descriptive message about the current detailed status.</summary>
        string DetailedStatusMessage { get; set; }
        /// <summary>The extended location of the cluster associated with the resource.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IExtendedLocation ExtendedLocation { get; set; }
        /// <summary>The resource ID of the extended location on which the resource will be created.</summary>
        string ExtendedLocationName { get; set; }
        /// <summary>The extended location type, for example, CustomLocation.</summary>
        string ExtendedLocationType { get; set; }
        /// <summary>
        /// The hardware inventory, including information acquired from the model/sku information and from the ironic inspector.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IHardwareInventory HardwareInventory { get; set; }
        /// <summary>
        /// Freeform data extracted from the environment about this machine. This information varies depending on the specific hardware
        /// and configuration.
        /// </summary>
        string HardwareInventoryAdditionalHostInformation { get; set; }
        /// <summary>
        /// The list of network interfaces and associated details for the bare metal machine.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IHardwareInventoryNetworkInterface[] HardwareInventoryInterface { get; set; }
        /// <summary>
        /// Field Deprecated. Will be removed in an upcoming version. The list of network interface cards and associated details for
        /// the bare metal machine.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.INic[] HardwareInventoryNic { get; set; }
        /// <summary>
        /// The details of the latest hardware validation performed for this bare metal machine.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IHardwareValidationStatus HardwareValidationStatus { get; set; }
        /// <summary>The timestamp of the hardware validation execution.</summary>
        global::System.DateTime? HardwareValidationStatusLastValidationTime { get; set; }
        /// <summary>The outcome of the hardware validation.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Support.BareMetalMachineHardwareValidationResult? HardwareValidationStatusResult { get; set; }
        /// <summary>
        /// Field Deprecated. These fields will be empty/omitted. The list of the resource IDs for the HybridAksClusters that have
        /// nodes hosted on this bare metal machine.
        /// </summary>
        string[] HybridAksClustersAssociatedId { get; set; }
        /// <summary>
        /// The name of this machine represented by the host object in the Cluster's Kubernetes control plane.
        /// </summary>
        string KubernetesNodeName { get; set; }
        /// <summary>The version of Kubernetes running on this machine.</summary>
        string KubernetesVersion { get; set; }
        /// <summary>The custom details provided by the customer.</summary>
        string MachineDetail { get; set; }
        /// <summary>The OS-level hostname assigned to this machine.</summary>
        string MachineName { get; set; }
        /// <summary>The unique internal identifier of the bare metal machine SKU.</summary>
        string MachineSkuId { get; set; }
        /// <summary>The image that is currently provisioned to the OS disk.</summary>
        string OSImage { get; set; }
        /// <summary>
        /// The IPv4 address that is assigned to the bare metal machine during the cluster deployment.
        /// </summary>
        string OamIpv4Address { get; set; }
        /// <summary>
        /// The IPv6 address that is assigned to the bare metal machine during the cluster deployment.
        /// </summary>
        string OamIpv6Address { get; set; }
        /// <summary>The power state derived from the baseboard management controller.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Support.BareMetalMachinePowerState? PowerState { get; set; }
        /// <summary>The list of the resource properties.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IBareMetalMachineProperties Property { get; set; }
        /// <summary>The provisioning state of the bare metal machine.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Support.BareMetalMachineProvisioningState? ProvisioningState { get; set; }
        /// <summary>The resource ID of the rack where this bare metal machine resides.</summary>
        string RackId { get; set; }
        /// <summary>
        /// The rack slot in which this bare metal machine is located, ordered from the bottom up i.e. the lowest slot is 1.
        /// </summary>
        long RackSlot { get; set; }
        /// <summary>The indicator of whether the bare metal machine is ready to receive workloads.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Support.BareMetalMachineReadyState? ReadyState { get; set; }
        /// <summary>The serial number of the bare metal machine.</summary>
        string SerialNumber { get; set; }
        /// <summary>The discovered value of the machine's service tag.</summary>
        string ServiceTag { get; set; }
        /// <summary>
        /// Field Deprecated. These fields will be empty/omitted. The list of the resource IDs for the VirtualMachines that are hosted
        /// on this bare metal machine.
        /// </summary>
        string[] VirtualMachinesAssociatedId { get; set; }

    }
}