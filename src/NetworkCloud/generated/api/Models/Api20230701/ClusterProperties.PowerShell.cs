// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701
{
    using Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Runtime.PowerShell;

    /// <summary>ClusterProperties represents the properties of a cluster.</summary>
    [System.ComponentModel.TypeConverter(typeof(ClusterPropertiesTypeConverter))]
    public partial class ClusterProperties
    {

        /// <summary>
        /// <c>AfterDeserializeDictionary</c> will be called after the deserialization has finished, allowing customization of the
        /// object before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>

        partial void AfterDeserializeDictionary(global::System.Collections.IDictionary content);

        /// <summary>
        /// <c>AfterDeserializePSObject</c> will be called after the deserialization has finished, allowing customization of the object
        /// before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>

        partial void AfterDeserializePSObject(global::System.Management.Automation.PSObject content);

        /// <summary>
        /// <c>BeforeDeserializeDictionary</c> will be called before the deserialization has commenced, allowing complete customization
        /// of the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <paramref name="returnNow" /> output
        /// parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeDeserializeDictionary(global::System.Collections.IDictionary content, ref bool returnNow);

        /// <summary>
        /// <c>BeforeDeserializePSObject</c> will be called before the deserialization has commenced, allowing complete customization
        /// of the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <paramref name="returnNow" /> output
        /// parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeDeserializePSObject(global::System.Management.Automation.PSObject content, ref bool returnNow);

        /// <summary>
        /// <c>OverrideToString</c> will be called if it is implemented. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="stringResult">/// instance serialized to a string, normally it is a Json</param>
        /// <param name="returnNow">/// set returnNow to true if you provide a customized OverrideToString function</param>

        partial void OverrideToString(ref string stringResult, ref bool returnNow);

        /// <summary>
        /// Deserializes a <see cref="global::System.Collections.IDictionary" /> into a new instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.ClusterProperties"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        internal ClusterProperties(global::System.Collections.IDictionary content)
        {
            bool returnNow = false;
            BeforeDeserializeDictionary(content, ref returnNow);
            if (returnNow)
            {
                return;
            }
            // actually deserialize
            if (content.Contains("AggregatorOrSingleRackDefinition"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IClusterPropertiesInternal)this).AggregatorOrSingleRackDefinition = (Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IRackDefinition) content.GetValueForProperty("AggregatorOrSingleRackDefinition",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IClusterPropertiesInternal)this).AggregatorOrSingleRackDefinition, Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.RackDefinitionTypeConverter.ConvertFrom);
            }
            if (content.Contains("ClusterCapacity"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IClusterPropertiesInternal)this).ClusterCapacity = (Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IClusterCapacity) content.GetValueForProperty("ClusterCapacity",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IClusterPropertiesInternal)this).ClusterCapacity, Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.ClusterCapacityTypeConverter.ConvertFrom);
            }
            if (content.Contains("ClusterExtendedLocation"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IClusterPropertiesInternal)this).ClusterExtendedLocation = (Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IExtendedLocation) content.GetValueForProperty("ClusterExtendedLocation",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IClusterPropertiesInternal)this).ClusterExtendedLocation, Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.ExtendedLocationTypeConverter.ConvertFrom);
            }
            if (content.Contains("ClusterServicePrincipal"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IClusterPropertiesInternal)this).ClusterServicePrincipal = (Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IServicePrincipalInformation) content.GetValueForProperty("ClusterServicePrincipal",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IClusterPropertiesInternal)this).ClusterServicePrincipal, Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.ServicePrincipalInformationTypeConverter.ConvertFrom);
            }
            if (content.Contains("ComputeDeploymentThreshold"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IClusterPropertiesInternal)this).ComputeDeploymentThreshold = (Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IValidationThreshold) content.GetValueForProperty("ComputeDeploymentThreshold",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IClusterPropertiesInternal)this).ComputeDeploymentThreshold, Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.ValidationThresholdTypeConverter.ConvertFrom);
            }
            if (content.Contains("HybridAksExtendedLocation"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IClusterPropertiesInternal)this).HybridAksExtendedLocation = (Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IExtendedLocation) content.GetValueForProperty("HybridAksExtendedLocation",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IClusterPropertiesInternal)this).HybridAksExtendedLocation, Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.ExtendedLocationTypeConverter.ConvertFrom);
            }
            if (content.Contains("ManagedResourceGroupConfiguration"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IClusterPropertiesInternal)this).ManagedResourceGroupConfiguration = (Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IManagedResourceGroupConfiguration) content.GetValueForProperty("ManagedResourceGroupConfiguration",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IClusterPropertiesInternal)this).ManagedResourceGroupConfiguration, Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.ManagedResourceGroupConfigurationTypeConverter.ConvertFrom);
            }
            if (content.Contains("AnalyticsWorkspaceId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IClusterPropertiesInternal)this).AnalyticsWorkspaceId = (string) content.GetValueForProperty("AnalyticsWorkspaceId",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IClusterPropertiesInternal)this).AnalyticsWorkspaceId, global::System.Convert.ToString);
            }
            if (content.Contains("AvailableUpgradeVersion"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IClusterPropertiesInternal)this).AvailableUpgradeVersion = (Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IClusterAvailableUpgradeVersion[]) content.GetValueForProperty("AvailableUpgradeVersion",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IClusterPropertiesInternal)this).AvailableUpgradeVersion, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IClusterAvailableUpgradeVersion>(__y, Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.ClusterAvailableUpgradeVersionTypeConverter.ConvertFrom));
            }
            if (content.Contains("ClusterConnectionStatus"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IClusterPropertiesInternal)this).ClusterConnectionStatus = (Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Support.ClusterConnectionStatus?) content.GetValueForProperty("ClusterConnectionStatus",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IClusterPropertiesInternal)this).ClusterConnectionStatus, Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Support.ClusterConnectionStatus.CreateFrom);
            }
            if (content.Contains("ClusterLocation"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IClusterPropertiesInternal)this).ClusterLocation = (string) content.GetValueForProperty("ClusterLocation",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IClusterPropertiesInternal)this).ClusterLocation, global::System.Convert.ToString);
            }
            if (content.Contains("ClusterManagerConnectionStatus"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IClusterPropertiesInternal)this).ClusterManagerConnectionStatus = (Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Support.ClusterManagerConnectionStatus?) content.GetValueForProperty("ClusterManagerConnectionStatus",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IClusterPropertiesInternal)this).ClusterManagerConnectionStatus, Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Support.ClusterManagerConnectionStatus.CreateFrom);
            }
            if (content.Contains("ClusterManagerId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IClusterPropertiesInternal)this).ClusterManagerId = (string) content.GetValueForProperty("ClusterManagerId",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IClusterPropertiesInternal)this).ClusterManagerId, global::System.Convert.ToString);
            }
            if (content.Contains("ClusterType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IClusterPropertiesInternal)this).ClusterType = (Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Support.ClusterType) content.GetValueForProperty("ClusterType",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IClusterPropertiesInternal)this).ClusterType, Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Support.ClusterType.CreateFrom);
            }
            if (content.Contains("ClusterVersion"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IClusterPropertiesInternal)this).ClusterVersion = (string) content.GetValueForProperty("ClusterVersion",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IClusterPropertiesInternal)this).ClusterVersion, global::System.Convert.ToString);
            }
            if (content.Contains("ComputeRackDefinition"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IClusterPropertiesInternal)this).ComputeRackDefinition = (Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IRackDefinition[]) content.GetValueForProperty("ComputeRackDefinition",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IClusterPropertiesInternal)this).ComputeRackDefinition, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IRackDefinition>(__y, Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.RackDefinitionTypeConverter.ConvertFrom));
            }
            if (content.Contains("DetailedStatus"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IClusterPropertiesInternal)this).DetailedStatus = (Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Support.ClusterDetailedStatus?) content.GetValueForProperty("DetailedStatus",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IClusterPropertiesInternal)this).DetailedStatus, Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Support.ClusterDetailedStatus.CreateFrom);
            }
            if (content.Contains("DetailedStatusMessage"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IClusterPropertiesInternal)this).DetailedStatusMessage = (string) content.GetValueForProperty("DetailedStatusMessage",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IClusterPropertiesInternal)this).DetailedStatusMessage, global::System.Convert.ToString);
            }
            if (content.Contains("ManualActionCount"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IClusterPropertiesInternal)this).ManualActionCount = (long?) content.GetValueForProperty("ManualActionCount",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IClusterPropertiesInternal)this).ManualActionCount, (__y)=> (long) global::System.Convert.ChangeType(__y, typeof(long)));
            }
            if (content.Contains("NetworkFabricId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IClusterPropertiesInternal)this).NetworkFabricId = (string) content.GetValueForProperty("NetworkFabricId",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IClusterPropertiesInternal)this).NetworkFabricId, global::System.Convert.ToString);
            }
            if (content.Contains("ProvisioningState"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IClusterPropertiesInternal)this).ProvisioningState = (Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Support.ClusterProvisioningState?) content.GetValueForProperty("ProvisioningState",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IClusterPropertiesInternal)this).ProvisioningState, Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Support.ClusterProvisioningState.CreateFrom);
            }
            if (content.Contains("SupportExpiryDate"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IClusterPropertiesInternal)this).SupportExpiryDate = (string) content.GetValueForProperty("SupportExpiryDate",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IClusterPropertiesInternal)this).SupportExpiryDate, global::System.Convert.ToString);
            }
            if (content.Contains("WorkloadResourceId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IClusterPropertiesInternal)this).WorkloadResourceId = (string[]) content.GetValueForProperty("WorkloadResourceId",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IClusterPropertiesInternal)this).WorkloadResourceId, __y => TypeConverterExtensions.SelectToArray<string>(__y, global::System.Convert.ToString));
            }
            if (content.Contains("ManagedResourceGroupConfigurationLocation"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IClusterPropertiesInternal)this).ManagedResourceGroupConfigurationLocation = (string) content.GetValueForProperty("ManagedResourceGroupConfigurationLocation",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IClusterPropertiesInternal)this).ManagedResourceGroupConfigurationLocation, global::System.Convert.ToString);
            }
            if (content.Contains("ManagedResourceGroupConfigurationName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IClusterPropertiesInternal)this).ManagedResourceGroupConfigurationName = (string) content.GetValueForProperty("ManagedResourceGroupConfigurationName",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IClusterPropertiesInternal)this).ManagedResourceGroupConfigurationName, global::System.Convert.ToString);
            }
            if (content.Contains("AggregatorOrSingleRackDefinitionAvailabilityZone"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IClusterPropertiesInternal)this).AggregatorOrSingleRackDefinitionAvailabilityZone = (string) content.GetValueForProperty("AggregatorOrSingleRackDefinitionAvailabilityZone",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IClusterPropertiesInternal)this).AggregatorOrSingleRackDefinitionAvailabilityZone, global::System.Convert.ToString);
            }
            if (content.Contains("AggregatorOrSingleRackDefinitionBareMetalMachineConfigurationData"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IClusterPropertiesInternal)this).AggregatorOrSingleRackDefinitionBareMetalMachineConfigurationData = (Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IBareMetalMachineConfigurationData[]) content.GetValueForProperty("AggregatorOrSingleRackDefinitionBareMetalMachineConfigurationData",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IClusterPropertiesInternal)this).AggregatorOrSingleRackDefinitionBareMetalMachineConfigurationData, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IBareMetalMachineConfigurationData>(__y, Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.BareMetalMachineConfigurationDataTypeConverter.ConvertFrom));
            }
            if (content.Contains("AggregatorOrSingleRackDefinitionNetworkRackId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IClusterPropertiesInternal)this).AggregatorOrSingleRackDefinitionNetworkRackId = (string) content.GetValueForProperty("AggregatorOrSingleRackDefinitionNetworkRackId",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IClusterPropertiesInternal)this).AggregatorOrSingleRackDefinitionNetworkRackId, global::System.Convert.ToString);
            }
            if (content.Contains("AggregatorOrSingleRackDefinitionRackLocation"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IClusterPropertiesInternal)this).AggregatorOrSingleRackDefinitionRackLocation = (string) content.GetValueForProperty("AggregatorOrSingleRackDefinitionRackLocation",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IClusterPropertiesInternal)this).AggregatorOrSingleRackDefinitionRackLocation, global::System.Convert.ToString);
            }
            if (content.Contains("AggregatorOrSingleRackDefinitionRackSerialNumber"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IClusterPropertiesInternal)this).AggregatorOrSingleRackDefinitionRackSerialNumber = (string) content.GetValueForProperty("AggregatorOrSingleRackDefinitionRackSerialNumber",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IClusterPropertiesInternal)this).AggregatorOrSingleRackDefinitionRackSerialNumber, global::System.Convert.ToString);
            }
            if (content.Contains("AggregatorOrSingleRackDefinitionRackSkuId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IClusterPropertiesInternal)this).AggregatorOrSingleRackDefinitionRackSkuId = (string) content.GetValueForProperty("AggregatorOrSingleRackDefinitionRackSkuId",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IClusterPropertiesInternal)this).AggregatorOrSingleRackDefinitionRackSkuId, global::System.Convert.ToString);
            }
            if (content.Contains("AggregatorOrSingleRackDefinitionStorageApplianceConfigurationData"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IClusterPropertiesInternal)this).AggregatorOrSingleRackDefinitionStorageApplianceConfigurationData = (Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IStorageApplianceConfigurationData[]) content.GetValueForProperty("AggregatorOrSingleRackDefinitionStorageApplianceConfigurationData",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IClusterPropertiesInternal)this).AggregatorOrSingleRackDefinitionStorageApplianceConfigurationData, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IStorageApplianceConfigurationData>(__y, Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.StorageApplianceConfigurationDataTypeConverter.ConvertFrom));
            }
            if (content.Contains("ClusterCapacityAvailableApplianceStorageGb"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IClusterPropertiesInternal)this).ClusterCapacityAvailableApplianceStorageGb = (long?) content.GetValueForProperty("ClusterCapacityAvailableApplianceStorageGb",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IClusterPropertiesInternal)this).ClusterCapacityAvailableApplianceStorageGb, (__y)=> (long) global::System.Convert.ChangeType(__y, typeof(long)));
            }
            if (content.Contains("ClusterCapacityAvailableCoreCount"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IClusterPropertiesInternal)this).ClusterCapacityAvailableCoreCount = (long?) content.GetValueForProperty("ClusterCapacityAvailableCoreCount",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IClusterPropertiesInternal)this).ClusterCapacityAvailableCoreCount, (__y)=> (long) global::System.Convert.ChangeType(__y, typeof(long)));
            }
            if (content.Contains("ClusterCapacityAvailableHostStorageGb"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IClusterPropertiesInternal)this).ClusterCapacityAvailableHostStorageGb = (long?) content.GetValueForProperty("ClusterCapacityAvailableHostStorageGb",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IClusterPropertiesInternal)this).ClusterCapacityAvailableHostStorageGb, (__y)=> (long) global::System.Convert.ChangeType(__y, typeof(long)));
            }
            if (content.Contains("ClusterCapacityAvailableMemoryGb"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IClusterPropertiesInternal)this).ClusterCapacityAvailableMemoryGb = (long?) content.GetValueForProperty("ClusterCapacityAvailableMemoryGb",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IClusterPropertiesInternal)this).ClusterCapacityAvailableMemoryGb, (__y)=> (long) global::System.Convert.ChangeType(__y, typeof(long)));
            }
            if (content.Contains("ClusterCapacityTotalApplianceStorageGb"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IClusterPropertiesInternal)this).ClusterCapacityTotalApplianceStorageGb = (long?) content.GetValueForProperty("ClusterCapacityTotalApplianceStorageGb",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IClusterPropertiesInternal)this).ClusterCapacityTotalApplianceStorageGb, (__y)=> (long) global::System.Convert.ChangeType(__y, typeof(long)));
            }
            if (content.Contains("ClusterCapacityTotalCoreCount"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IClusterPropertiesInternal)this).ClusterCapacityTotalCoreCount = (long?) content.GetValueForProperty("ClusterCapacityTotalCoreCount",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IClusterPropertiesInternal)this).ClusterCapacityTotalCoreCount, (__y)=> (long) global::System.Convert.ChangeType(__y, typeof(long)));
            }
            if (content.Contains("ClusterCapacityTotalHostStorageGb"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IClusterPropertiesInternal)this).ClusterCapacityTotalHostStorageGb = (long?) content.GetValueForProperty("ClusterCapacityTotalHostStorageGb",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IClusterPropertiesInternal)this).ClusterCapacityTotalHostStorageGb, (__y)=> (long) global::System.Convert.ChangeType(__y, typeof(long)));
            }
            if (content.Contains("ClusterCapacityTotalMemoryGb"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IClusterPropertiesInternal)this).ClusterCapacityTotalMemoryGb = (long?) content.GetValueForProperty("ClusterCapacityTotalMemoryGb",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IClusterPropertiesInternal)this).ClusterCapacityTotalMemoryGb, (__y)=> (long) global::System.Convert.ChangeType(__y, typeof(long)));
            }
            if (content.Contains("ClusterExtendedLocationName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IClusterPropertiesInternal)this).ClusterExtendedLocationName = (string) content.GetValueForProperty("ClusterExtendedLocationName",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IClusterPropertiesInternal)this).ClusterExtendedLocationName, global::System.Convert.ToString);
            }
            if (content.Contains("ClusterExtendedLocationType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IClusterPropertiesInternal)this).ClusterExtendedLocationType = (string) content.GetValueForProperty("ClusterExtendedLocationType",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IClusterPropertiesInternal)this).ClusterExtendedLocationType, global::System.Convert.ToString);
            }
            if (content.Contains("ClusterServicePrincipalApplicationId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IClusterPropertiesInternal)this).ClusterServicePrincipalApplicationId = (string) content.GetValueForProperty("ClusterServicePrincipalApplicationId",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IClusterPropertiesInternal)this).ClusterServicePrincipalApplicationId, global::System.Convert.ToString);
            }
            if (content.Contains("ClusterServicePrincipalPassword"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IClusterPropertiesInternal)this).ClusterServicePrincipalPassword = (System.Security.SecureString) content.GetValueForProperty("ClusterServicePrincipalPassword",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IClusterPropertiesInternal)this).ClusterServicePrincipalPassword, (object ss) => (System.Security.SecureString)ss);
            }
            if (content.Contains("ClusterServicePrincipalId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IClusterPropertiesInternal)this).ClusterServicePrincipalId = (string) content.GetValueForProperty("ClusterServicePrincipalId",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IClusterPropertiesInternal)this).ClusterServicePrincipalId, global::System.Convert.ToString);
            }
            if (content.Contains("ClusterServicePrincipalTenantId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IClusterPropertiesInternal)this).ClusterServicePrincipalTenantId = (string) content.GetValueForProperty("ClusterServicePrincipalTenantId",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IClusterPropertiesInternal)this).ClusterServicePrincipalTenantId, global::System.Convert.ToString);
            }
            if (content.Contains("ComputeDeploymentThresholdGrouping"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IClusterPropertiesInternal)this).ComputeDeploymentThresholdGrouping = (Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Support.ValidationThresholdGrouping) content.GetValueForProperty("ComputeDeploymentThresholdGrouping",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IClusterPropertiesInternal)this).ComputeDeploymentThresholdGrouping, Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Support.ValidationThresholdGrouping.CreateFrom);
            }
            if (content.Contains("ComputeDeploymentThresholdType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IClusterPropertiesInternal)this).ComputeDeploymentThresholdType = (Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Support.ValidationThresholdType) content.GetValueForProperty("ComputeDeploymentThresholdType",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IClusterPropertiesInternal)this).ComputeDeploymentThresholdType, Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Support.ValidationThresholdType.CreateFrom);
            }
            if (content.Contains("ComputeDeploymentThresholdValue"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IClusterPropertiesInternal)this).ComputeDeploymentThresholdValue = (long) content.GetValueForProperty("ComputeDeploymentThresholdValue",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IClusterPropertiesInternal)this).ComputeDeploymentThresholdValue, (__y)=> (long) global::System.Convert.ChangeType(__y, typeof(long)));
            }
            if (content.Contains("HybridAkExtendedLocationName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IClusterPropertiesInternal)this).HybridAkExtendedLocationName = (string) content.GetValueForProperty("HybridAkExtendedLocationName",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IClusterPropertiesInternal)this).HybridAkExtendedLocationName, global::System.Convert.ToString);
            }
            if (content.Contains("HybridAkExtendedLocationType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IClusterPropertiesInternal)this).HybridAkExtendedLocationType = (string) content.GetValueForProperty("HybridAkExtendedLocationType",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IClusterPropertiesInternal)this).HybridAkExtendedLocationType, global::System.Convert.ToString);
            }
            AfterDeserializeDictionary(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Management.Automation.PSObject" /> into a new instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.ClusterProperties"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        internal ClusterProperties(global::System.Management.Automation.PSObject content)
        {
            bool returnNow = false;
            BeforeDeserializePSObject(content, ref returnNow);
            if (returnNow)
            {
                return;
            }
            // actually deserialize
            if (content.Contains("AggregatorOrSingleRackDefinition"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IClusterPropertiesInternal)this).AggregatorOrSingleRackDefinition = (Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IRackDefinition) content.GetValueForProperty("AggregatorOrSingleRackDefinition",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IClusterPropertiesInternal)this).AggregatorOrSingleRackDefinition, Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.RackDefinitionTypeConverter.ConvertFrom);
            }
            if (content.Contains("ClusterCapacity"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IClusterPropertiesInternal)this).ClusterCapacity = (Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IClusterCapacity) content.GetValueForProperty("ClusterCapacity",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IClusterPropertiesInternal)this).ClusterCapacity, Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.ClusterCapacityTypeConverter.ConvertFrom);
            }
            if (content.Contains("ClusterExtendedLocation"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IClusterPropertiesInternal)this).ClusterExtendedLocation = (Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IExtendedLocation) content.GetValueForProperty("ClusterExtendedLocation",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IClusterPropertiesInternal)this).ClusterExtendedLocation, Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.ExtendedLocationTypeConverter.ConvertFrom);
            }
            if (content.Contains("ClusterServicePrincipal"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IClusterPropertiesInternal)this).ClusterServicePrincipal = (Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IServicePrincipalInformation) content.GetValueForProperty("ClusterServicePrincipal",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IClusterPropertiesInternal)this).ClusterServicePrincipal, Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.ServicePrincipalInformationTypeConverter.ConvertFrom);
            }
            if (content.Contains("ComputeDeploymentThreshold"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IClusterPropertiesInternal)this).ComputeDeploymentThreshold = (Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IValidationThreshold) content.GetValueForProperty("ComputeDeploymentThreshold",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IClusterPropertiesInternal)this).ComputeDeploymentThreshold, Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.ValidationThresholdTypeConverter.ConvertFrom);
            }
            if (content.Contains("HybridAksExtendedLocation"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IClusterPropertiesInternal)this).HybridAksExtendedLocation = (Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IExtendedLocation) content.GetValueForProperty("HybridAksExtendedLocation",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IClusterPropertiesInternal)this).HybridAksExtendedLocation, Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.ExtendedLocationTypeConverter.ConvertFrom);
            }
            if (content.Contains("ManagedResourceGroupConfiguration"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IClusterPropertiesInternal)this).ManagedResourceGroupConfiguration = (Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IManagedResourceGroupConfiguration) content.GetValueForProperty("ManagedResourceGroupConfiguration",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IClusterPropertiesInternal)this).ManagedResourceGroupConfiguration, Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.ManagedResourceGroupConfigurationTypeConverter.ConvertFrom);
            }
            if (content.Contains("AnalyticsWorkspaceId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IClusterPropertiesInternal)this).AnalyticsWorkspaceId = (string) content.GetValueForProperty("AnalyticsWorkspaceId",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IClusterPropertiesInternal)this).AnalyticsWorkspaceId, global::System.Convert.ToString);
            }
            if (content.Contains("AvailableUpgradeVersion"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IClusterPropertiesInternal)this).AvailableUpgradeVersion = (Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IClusterAvailableUpgradeVersion[]) content.GetValueForProperty("AvailableUpgradeVersion",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IClusterPropertiesInternal)this).AvailableUpgradeVersion, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IClusterAvailableUpgradeVersion>(__y, Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.ClusterAvailableUpgradeVersionTypeConverter.ConvertFrom));
            }
            if (content.Contains("ClusterConnectionStatus"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IClusterPropertiesInternal)this).ClusterConnectionStatus = (Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Support.ClusterConnectionStatus?) content.GetValueForProperty("ClusterConnectionStatus",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IClusterPropertiesInternal)this).ClusterConnectionStatus, Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Support.ClusterConnectionStatus.CreateFrom);
            }
            if (content.Contains("ClusterLocation"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IClusterPropertiesInternal)this).ClusterLocation = (string) content.GetValueForProperty("ClusterLocation",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IClusterPropertiesInternal)this).ClusterLocation, global::System.Convert.ToString);
            }
            if (content.Contains("ClusterManagerConnectionStatus"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IClusterPropertiesInternal)this).ClusterManagerConnectionStatus = (Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Support.ClusterManagerConnectionStatus?) content.GetValueForProperty("ClusterManagerConnectionStatus",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IClusterPropertiesInternal)this).ClusterManagerConnectionStatus, Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Support.ClusterManagerConnectionStatus.CreateFrom);
            }
            if (content.Contains("ClusterManagerId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IClusterPropertiesInternal)this).ClusterManagerId = (string) content.GetValueForProperty("ClusterManagerId",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IClusterPropertiesInternal)this).ClusterManagerId, global::System.Convert.ToString);
            }
            if (content.Contains("ClusterType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IClusterPropertiesInternal)this).ClusterType = (Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Support.ClusterType) content.GetValueForProperty("ClusterType",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IClusterPropertiesInternal)this).ClusterType, Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Support.ClusterType.CreateFrom);
            }
            if (content.Contains("ClusterVersion"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IClusterPropertiesInternal)this).ClusterVersion = (string) content.GetValueForProperty("ClusterVersion",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IClusterPropertiesInternal)this).ClusterVersion, global::System.Convert.ToString);
            }
            if (content.Contains("ComputeRackDefinition"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IClusterPropertiesInternal)this).ComputeRackDefinition = (Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IRackDefinition[]) content.GetValueForProperty("ComputeRackDefinition",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IClusterPropertiesInternal)this).ComputeRackDefinition, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IRackDefinition>(__y, Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.RackDefinitionTypeConverter.ConvertFrom));
            }
            if (content.Contains("DetailedStatus"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IClusterPropertiesInternal)this).DetailedStatus = (Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Support.ClusterDetailedStatus?) content.GetValueForProperty("DetailedStatus",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IClusterPropertiesInternal)this).DetailedStatus, Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Support.ClusterDetailedStatus.CreateFrom);
            }
            if (content.Contains("DetailedStatusMessage"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IClusterPropertiesInternal)this).DetailedStatusMessage = (string) content.GetValueForProperty("DetailedStatusMessage",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IClusterPropertiesInternal)this).DetailedStatusMessage, global::System.Convert.ToString);
            }
            if (content.Contains("ManualActionCount"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IClusterPropertiesInternal)this).ManualActionCount = (long?) content.GetValueForProperty("ManualActionCount",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IClusterPropertiesInternal)this).ManualActionCount, (__y)=> (long) global::System.Convert.ChangeType(__y, typeof(long)));
            }
            if (content.Contains("NetworkFabricId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IClusterPropertiesInternal)this).NetworkFabricId = (string) content.GetValueForProperty("NetworkFabricId",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IClusterPropertiesInternal)this).NetworkFabricId, global::System.Convert.ToString);
            }
            if (content.Contains("ProvisioningState"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IClusterPropertiesInternal)this).ProvisioningState = (Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Support.ClusterProvisioningState?) content.GetValueForProperty("ProvisioningState",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IClusterPropertiesInternal)this).ProvisioningState, Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Support.ClusterProvisioningState.CreateFrom);
            }
            if (content.Contains("SupportExpiryDate"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IClusterPropertiesInternal)this).SupportExpiryDate = (string) content.GetValueForProperty("SupportExpiryDate",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IClusterPropertiesInternal)this).SupportExpiryDate, global::System.Convert.ToString);
            }
            if (content.Contains("WorkloadResourceId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IClusterPropertiesInternal)this).WorkloadResourceId = (string[]) content.GetValueForProperty("WorkloadResourceId",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IClusterPropertiesInternal)this).WorkloadResourceId, __y => TypeConverterExtensions.SelectToArray<string>(__y, global::System.Convert.ToString));
            }
            if (content.Contains("ManagedResourceGroupConfigurationLocation"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IClusterPropertiesInternal)this).ManagedResourceGroupConfigurationLocation = (string) content.GetValueForProperty("ManagedResourceGroupConfigurationLocation",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IClusterPropertiesInternal)this).ManagedResourceGroupConfigurationLocation, global::System.Convert.ToString);
            }
            if (content.Contains("ManagedResourceGroupConfigurationName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IClusterPropertiesInternal)this).ManagedResourceGroupConfigurationName = (string) content.GetValueForProperty("ManagedResourceGroupConfigurationName",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IClusterPropertiesInternal)this).ManagedResourceGroupConfigurationName, global::System.Convert.ToString);
            }
            if (content.Contains("AggregatorOrSingleRackDefinitionAvailabilityZone"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IClusterPropertiesInternal)this).AggregatorOrSingleRackDefinitionAvailabilityZone = (string) content.GetValueForProperty("AggregatorOrSingleRackDefinitionAvailabilityZone",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IClusterPropertiesInternal)this).AggregatorOrSingleRackDefinitionAvailabilityZone, global::System.Convert.ToString);
            }
            if (content.Contains("AggregatorOrSingleRackDefinitionBareMetalMachineConfigurationData"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IClusterPropertiesInternal)this).AggregatorOrSingleRackDefinitionBareMetalMachineConfigurationData = (Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IBareMetalMachineConfigurationData[]) content.GetValueForProperty("AggregatorOrSingleRackDefinitionBareMetalMachineConfigurationData",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IClusterPropertiesInternal)this).AggregatorOrSingleRackDefinitionBareMetalMachineConfigurationData, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IBareMetalMachineConfigurationData>(__y, Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.BareMetalMachineConfigurationDataTypeConverter.ConvertFrom));
            }
            if (content.Contains("AggregatorOrSingleRackDefinitionNetworkRackId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IClusterPropertiesInternal)this).AggregatorOrSingleRackDefinitionNetworkRackId = (string) content.GetValueForProperty("AggregatorOrSingleRackDefinitionNetworkRackId",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IClusterPropertiesInternal)this).AggregatorOrSingleRackDefinitionNetworkRackId, global::System.Convert.ToString);
            }
            if (content.Contains("AggregatorOrSingleRackDefinitionRackLocation"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IClusterPropertiesInternal)this).AggregatorOrSingleRackDefinitionRackLocation = (string) content.GetValueForProperty("AggregatorOrSingleRackDefinitionRackLocation",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IClusterPropertiesInternal)this).AggregatorOrSingleRackDefinitionRackLocation, global::System.Convert.ToString);
            }
            if (content.Contains("AggregatorOrSingleRackDefinitionRackSerialNumber"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IClusterPropertiesInternal)this).AggregatorOrSingleRackDefinitionRackSerialNumber = (string) content.GetValueForProperty("AggregatorOrSingleRackDefinitionRackSerialNumber",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IClusterPropertiesInternal)this).AggregatorOrSingleRackDefinitionRackSerialNumber, global::System.Convert.ToString);
            }
            if (content.Contains("AggregatorOrSingleRackDefinitionRackSkuId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IClusterPropertiesInternal)this).AggregatorOrSingleRackDefinitionRackSkuId = (string) content.GetValueForProperty("AggregatorOrSingleRackDefinitionRackSkuId",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IClusterPropertiesInternal)this).AggregatorOrSingleRackDefinitionRackSkuId, global::System.Convert.ToString);
            }
            if (content.Contains("AggregatorOrSingleRackDefinitionStorageApplianceConfigurationData"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IClusterPropertiesInternal)this).AggregatorOrSingleRackDefinitionStorageApplianceConfigurationData = (Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IStorageApplianceConfigurationData[]) content.GetValueForProperty("AggregatorOrSingleRackDefinitionStorageApplianceConfigurationData",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IClusterPropertiesInternal)this).AggregatorOrSingleRackDefinitionStorageApplianceConfigurationData, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IStorageApplianceConfigurationData>(__y, Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.StorageApplianceConfigurationDataTypeConverter.ConvertFrom));
            }
            if (content.Contains("ClusterCapacityAvailableApplianceStorageGb"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IClusterPropertiesInternal)this).ClusterCapacityAvailableApplianceStorageGb = (long?) content.GetValueForProperty("ClusterCapacityAvailableApplianceStorageGb",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IClusterPropertiesInternal)this).ClusterCapacityAvailableApplianceStorageGb, (__y)=> (long) global::System.Convert.ChangeType(__y, typeof(long)));
            }
            if (content.Contains("ClusterCapacityAvailableCoreCount"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IClusterPropertiesInternal)this).ClusterCapacityAvailableCoreCount = (long?) content.GetValueForProperty("ClusterCapacityAvailableCoreCount",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IClusterPropertiesInternal)this).ClusterCapacityAvailableCoreCount, (__y)=> (long) global::System.Convert.ChangeType(__y, typeof(long)));
            }
            if (content.Contains("ClusterCapacityAvailableHostStorageGb"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IClusterPropertiesInternal)this).ClusterCapacityAvailableHostStorageGb = (long?) content.GetValueForProperty("ClusterCapacityAvailableHostStorageGb",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IClusterPropertiesInternal)this).ClusterCapacityAvailableHostStorageGb, (__y)=> (long) global::System.Convert.ChangeType(__y, typeof(long)));
            }
            if (content.Contains("ClusterCapacityAvailableMemoryGb"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IClusterPropertiesInternal)this).ClusterCapacityAvailableMemoryGb = (long?) content.GetValueForProperty("ClusterCapacityAvailableMemoryGb",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IClusterPropertiesInternal)this).ClusterCapacityAvailableMemoryGb, (__y)=> (long) global::System.Convert.ChangeType(__y, typeof(long)));
            }
            if (content.Contains("ClusterCapacityTotalApplianceStorageGb"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IClusterPropertiesInternal)this).ClusterCapacityTotalApplianceStorageGb = (long?) content.GetValueForProperty("ClusterCapacityTotalApplianceStorageGb",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IClusterPropertiesInternal)this).ClusterCapacityTotalApplianceStorageGb, (__y)=> (long) global::System.Convert.ChangeType(__y, typeof(long)));
            }
            if (content.Contains("ClusterCapacityTotalCoreCount"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IClusterPropertiesInternal)this).ClusterCapacityTotalCoreCount = (long?) content.GetValueForProperty("ClusterCapacityTotalCoreCount",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IClusterPropertiesInternal)this).ClusterCapacityTotalCoreCount, (__y)=> (long) global::System.Convert.ChangeType(__y, typeof(long)));
            }
            if (content.Contains("ClusterCapacityTotalHostStorageGb"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IClusterPropertiesInternal)this).ClusterCapacityTotalHostStorageGb = (long?) content.GetValueForProperty("ClusterCapacityTotalHostStorageGb",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IClusterPropertiesInternal)this).ClusterCapacityTotalHostStorageGb, (__y)=> (long) global::System.Convert.ChangeType(__y, typeof(long)));
            }
            if (content.Contains("ClusterCapacityTotalMemoryGb"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IClusterPropertiesInternal)this).ClusterCapacityTotalMemoryGb = (long?) content.GetValueForProperty("ClusterCapacityTotalMemoryGb",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IClusterPropertiesInternal)this).ClusterCapacityTotalMemoryGb, (__y)=> (long) global::System.Convert.ChangeType(__y, typeof(long)));
            }
            if (content.Contains("ClusterExtendedLocationName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IClusterPropertiesInternal)this).ClusterExtendedLocationName = (string) content.GetValueForProperty("ClusterExtendedLocationName",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IClusterPropertiesInternal)this).ClusterExtendedLocationName, global::System.Convert.ToString);
            }
            if (content.Contains("ClusterExtendedLocationType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IClusterPropertiesInternal)this).ClusterExtendedLocationType = (string) content.GetValueForProperty("ClusterExtendedLocationType",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IClusterPropertiesInternal)this).ClusterExtendedLocationType, global::System.Convert.ToString);
            }
            if (content.Contains("ClusterServicePrincipalApplicationId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IClusterPropertiesInternal)this).ClusterServicePrincipalApplicationId = (string) content.GetValueForProperty("ClusterServicePrincipalApplicationId",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IClusterPropertiesInternal)this).ClusterServicePrincipalApplicationId, global::System.Convert.ToString);
            }
            if (content.Contains("ClusterServicePrincipalPassword"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IClusterPropertiesInternal)this).ClusterServicePrincipalPassword = (System.Security.SecureString) content.GetValueForProperty("ClusterServicePrincipalPassword",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IClusterPropertiesInternal)this).ClusterServicePrincipalPassword, (object ss) => (System.Security.SecureString)ss);
            }
            if (content.Contains("ClusterServicePrincipalId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IClusterPropertiesInternal)this).ClusterServicePrincipalId = (string) content.GetValueForProperty("ClusterServicePrincipalId",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IClusterPropertiesInternal)this).ClusterServicePrincipalId, global::System.Convert.ToString);
            }
            if (content.Contains("ClusterServicePrincipalTenantId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IClusterPropertiesInternal)this).ClusterServicePrincipalTenantId = (string) content.GetValueForProperty("ClusterServicePrincipalTenantId",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IClusterPropertiesInternal)this).ClusterServicePrincipalTenantId, global::System.Convert.ToString);
            }
            if (content.Contains("ComputeDeploymentThresholdGrouping"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IClusterPropertiesInternal)this).ComputeDeploymentThresholdGrouping = (Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Support.ValidationThresholdGrouping) content.GetValueForProperty("ComputeDeploymentThresholdGrouping",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IClusterPropertiesInternal)this).ComputeDeploymentThresholdGrouping, Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Support.ValidationThresholdGrouping.CreateFrom);
            }
            if (content.Contains("ComputeDeploymentThresholdType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IClusterPropertiesInternal)this).ComputeDeploymentThresholdType = (Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Support.ValidationThresholdType) content.GetValueForProperty("ComputeDeploymentThresholdType",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IClusterPropertiesInternal)this).ComputeDeploymentThresholdType, Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Support.ValidationThresholdType.CreateFrom);
            }
            if (content.Contains("ComputeDeploymentThresholdValue"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IClusterPropertiesInternal)this).ComputeDeploymentThresholdValue = (long) content.GetValueForProperty("ComputeDeploymentThresholdValue",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IClusterPropertiesInternal)this).ComputeDeploymentThresholdValue, (__y)=> (long) global::System.Convert.ChangeType(__y, typeof(long)));
            }
            if (content.Contains("HybridAkExtendedLocationName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IClusterPropertiesInternal)this).HybridAkExtendedLocationName = (string) content.GetValueForProperty("HybridAkExtendedLocationName",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IClusterPropertiesInternal)this).HybridAkExtendedLocationName, global::System.Convert.ToString);
            }
            if (content.Contains("HybridAkExtendedLocationType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IClusterPropertiesInternal)this).HybridAkExtendedLocationType = (string) content.GetValueForProperty("HybridAkExtendedLocationType",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IClusterPropertiesInternal)this).HybridAkExtendedLocationType, global::System.Convert.ToString);
            }
            AfterDeserializePSObject(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Collections.IDictionary" /> into an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.ClusterProperties"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        /// <returns>
        /// an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IClusterProperties" />.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IClusterProperties DeserializeFromDictionary(global::System.Collections.IDictionary content)
        {
            return new ClusterProperties(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Management.Automation.PSObject" /> into an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.ClusterProperties"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        /// <returns>
        /// an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IClusterProperties" />.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IClusterProperties DeserializeFromPSObject(global::System.Management.Automation.PSObject content)
        {
            return new ClusterProperties(content);
        }

        /// <summary>
        /// Creates a new instance of <see cref="ClusterProperties" />, deserializing the content from a json string.
        /// </summary>
        /// <param name="jsonText">a string containing a JSON serialized instance of this model.</param>
        /// <returns>an instance of the <see cref="ClusterProperties" /> model class.</returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IClusterProperties FromJsonString(string jsonText) => FromJson(Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Runtime.Json.JsonNode.Parse(jsonText));

        /// <summary>Serializes this instance to a json string.</summary>

        /// <returns>a <see cref="System.String" /> containing this model serialized to JSON text.</returns>
        public string ToJsonString() => ToJson(null, Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Runtime.SerializationMode.IncludeAll)?.ToString();

        public override string ToString()
        {
            var returnNow = false;
            var result = global::System.String.Empty;
            OverrideToString(ref result, ref returnNow);
            if (returnNow)
            {
                return result;
            }
            return ToJsonString();
        }
    }
    /// ClusterProperties represents the properties of a cluster.
    [System.ComponentModel.TypeConverter(typeof(ClusterPropertiesTypeConverter))]
    public partial interface IClusterProperties

    {

    }
}