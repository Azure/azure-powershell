// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701
{
    using Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Runtime.PowerShell;

    /// <summary>KubernetesCluster represents the Kubernetes cluster hosted on Network Cloud.</summary>
    [System.ComponentModel.TypeConverter(typeof(KubernetesClusterTypeConverter))]
    public partial class KubernetesCluster
    {

        /// <summary>
        /// <c>AfterDeserializeDictionary</c> will be called after the deserialization has finished, allowing customization of the
        /// object before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>

        partial void AfterDeserializeDictionary(global::System.Collections.IDictionary content);

        /// <summary>
        /// <c>AfterDeserializePSObject</c> will be called after the deserialization has finished, allowing customization of the object
        /// before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>

        partial void AfterDeserializePSObject(global::System.Management.Automation.PSObject content);

        /// <summary>
        /// <c>BeforeDeserializeDictionary</c> will be called before the deserialization has commenced, allowing complete customization
        /// of the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <paramref name="returnNow" /> output
        /// parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeDeserializeDictionary(global::System.Collections.IDictionary content, ref bool returnNow);

        /// <summary>
        /// <c>BeforeDeserializePSObject</c> will be called before the deserialization has commenced, allowing complete customization
        /// of the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <paramref name="returnNow" /> output
        /// parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeDeserializePSObject(global::System.Management.Automation.PSObject content, ref bool returnNow);

        /// <summary>
        /// <c>OverrideToString</c> will be called if it is implemented. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="stringResult">/// instance serialized to a string, normally it is a Json</param>
        /// <param name="returnNow">/// set returnNow to true if you provide a customized OverrideToString function</param>

        partial void OverrideToString(ref string stringResult, ref bool returnNow);

        /// <summary>
        /// Deserializes a <see cref="global::System.Collections.IDictionary" /> into an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.KubernetesCluster"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        /// <returns>
        /// an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IKubernetesCluster" />.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IKubernetesCluster DeserializeFromDictionary(global::System.Collections.IDictionary content)
        {
            return new KubernetesCluster(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Management.Automation.PSObject" /> into an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.KubernetesCluster"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        /// <returns>
        /// an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IKubernetesCluster" />.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IKubernetesCluster DeserializeFromPSObject(global::System.Management.Automation.PSObject content)
        {
            return new KubernetesCluster(content);
        }

        /// <summary>
        /// Creates a new instance of <see cref="KubernetesCluster" />, deserializing the content from a json string.
        /// </summary>
        /// <param name="jsonText">a string containing a JSON serialized instance of this model.</param>
        /// <returns>an instance of the <see cref="KubernetesCluster" /> model class.</returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IKubernetesCluster FromJsonString(string jsonText) => FromJson(Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Runtime.Json.JsonNode.Parse(jsonText));

        /// <summary>
        /// Deserializes a <see cref="global::System.Collections.IDictionary" /> into a new instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.KubernetesCluster"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        internal KubernetesCluster(global::System.Collections.IDictionary content)
        {
            bool returnNow = false;
            BeforeDeserializeDictionary(content, ref returnNow);
            if (returnNow)
            {
                return;
            }
            // actually deserialize
            if (content.Contains("ExtendedLocation"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IKubernetesClusterInternal)this).ExtendedLocation = (Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IExtendedLocation) content.GetValueForProperty("ExtendedLocation",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IKubernetesClusterInternal)this).ExtendedLocation, Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.ExtendedLocationTypeConverter.ConvertFrom);
            }
            if (content.Contains("Property"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IKubernetesClusterInternal)this).Property = (Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IKubernetesClusterProperties) content.GetValueForProperty("Property",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IKubernetesClusterInternal)this).Property, Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.KubernetesClusterPropertiesTypeConverter.ConvertFrom);
            }
            if (content.Contains("SystemDataCreatedBy"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api40.IResourceInternal)this).SystemDataCreatedBy = (string) content.GetValueForProperty("SystemDataCreatedBy",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api40.IResourceInternal)this).SystemDataCreatedBy, global::System.Convert.ToString);
            }
            if (content.Contains("SystemDataCreatedAt"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api40.IResourceInternal)this).SystemDataCreatedAt = (global::System.DateTime?) content.GetValueForProperty("SystemDataCreatedAt",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api40.IResourceInternal)this).SystemDataCreatedAt, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            if (content.Contains("SystemDataCreatedByType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api40.IResourceInternal)this).SystemDataCreatedByType = (Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Support.CreatedByType?) content.GetValueForProperty("SystemDataCreatedByType",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api40.IResourceInternal)this).SystemDataCreatedByType, Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Support.CreatedByType.CreateFrom);
            }
            if (content.Contains("SystemDataLastModifiedBy"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api40.IResourceInternal)this).SystemDataLastModifiedBy = (string) content.GetValueForProperty("SystemDataLastModifiedBy",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api40.IResourceInternal)this).SystemDataLastModifiedBy, global::System.Convert.ToString);
            }
            if (content.Contains("SystemDataLastModifiedByType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api40.IResourceInternal)this).SystemDataLastModifiedByType = (Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Support.CreatedByType?) content.GetValueForProperty("SystemDataLastModifiedByType",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api40.IResourceInternal)this).SystemDataLastModifiedByType, Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Support.CreatedByType.CreateFrom);
            }
            if (content.Contains("SystemDataLastModifiedAt"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api40.IResourceInternal)this).SystemDataLastModifiedAt = (global::System.DateTime?) content.GetValueForProperty("SystemDataLastModifiedAt",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api40.IResourceInternal)this).SystemDataLastModifiedAt, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            if (content.Contains("SystemData"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api40.IResourceInternal)this).SystemData = (Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api40.ISystemData) content.GetValueForProperty("SystemData",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api40.IResourceInternal)this).SystemData, Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api40.SystemDataTypeConverter.ConvertFrom);
            }
            if (content.Contains("Id"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api40.IResourceInternal)this).Id = (string) content.GetValueForProperty("Id",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api40.IResourceInternal)this).Id, global::System.Convert.ToString);
            }
            if (content.Contains("Name"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api40.IResourceInternal)this).Name = (string) content.GetValueForProperty("Name",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api40.IResourceInternal)this).Name, global::System.Convert.ToString);
            }
            if (content.Contains("Type"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api40.IResourceInternal)this).Type = (string) content.GetValueForProperty("Type",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api40.IResourceInternal)this).Type, global::System.Convert.ToString);
            }
            if (content.Contains("Tag"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api40.ITrackedResourceInternal)this).Tag = (Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api40.ITrackedResourceTags) content.GetValueForProperty("Tag",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api40.ITrackedResourceInternal)this).Tag, Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api40.TrackedResourceTagsTypeConverter.ConvertFrom);
            }
            if (content.Contains("Location"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api40.ITrackedResourceInternal)this).Location = (string) content.GetValueForProperty("Location",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api40.ITrackedResourceInternal)this).Location, global::System.Convert.ToString);
            }
            if (content.Contains("ExtendedLocationName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IKubernetesClusterInternal)this).ExtendedLocationName = (string) content.GetValueForProperty("ExtendedLocationName",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IKubernetesClusterInternal)this).ExtendedLocationName, global::System.Convert.ToString);
            }
            if (content.Contains("ExtendedLocationType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IKubernetesClusterInternal)this).ExtendedLocationType = (string) content.GetValueForProperty("ExtendedLocationType",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IKubernetesClusterInternal)this).ExtendedLocationType, global::System.Convert.ToString);
            }
            if (content.Contains("AadConfiguration"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IKubernetesClusterInternal)this).AadConfiguration = (Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IAadConfiguration) content.GetValueForProperty("AadConfiguration",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IKubernetesClusterInternal)this).AadConfiguration, Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.AadConfigurationTypeConverter.ConvertFrom);
            }
            if (content.Contains("AdministratorConfiguration"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IKubernetesClusterInternal)this).AdministratorConfiguration = (Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IAdministratorConfiguration) content.GetValueForProperty("AdministratorConfiguration",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IKubernetesClusterInternal)this).AdministratorConfiguration, Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.AdministratorConfigurationTypeConverter.ConvertFrom);
            }
            if (content.Contains("NetworkConfiguration"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IKubernetesClusterInternal)this).NetworkConfiguration = (Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.INetworkConfiguration) content.GetValueForProperty("NetworkConfiguration",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IKubernetesClusterInternal)this).NetworkConfiguration, Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.NetworkConfigurationTypeConverter.ConvertFrom);
            }
            if (content.Contains("ControlPlaneNodeConfiguration"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IKubernetesClusterInternal)this).ControlPlaneNodeConfiguration = (Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IControlPlaneNodeConfiguration) content.GetValueForProperty("ControlPlaneNodeConfiguration",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IKubernetesClusterInternal)this).ControlPlaneNodeConfiguration, Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.ControlPlaneNodeConfigurationTypeConverter.ConvertFrom);
            }
            if (content.Contains("ManagedResourceGroupConfiguration"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IKubernetesClusterInternal)this).ManagedResourceGroupConfiguration = (Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IManagedResourceGroupConfiguration) content.GetValueForProperty("ManagedResourceGroupConfiguration",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IKubernetesClusterInternal)this).ManagedResourceGroupConfiguration, Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.ManagedResourceGroupConfigurationTypeConverter.ConvertFrom);
            }
            if (content.Contains("AttachedNetworkId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IKubernetesClusterInternal)this).AttachedNetworkId = (string[]) content.GetValueForProperty("AttachedNetworkId",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IKubernetesClusterInternal)this).AttachedNetworkId, __y => TypeConverterExtensions.SelectToArray<string>(__y, global::System.Convert.ToString));
            }
            if (content.Contains("AvailableUpgrade"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IKubernetesClusterInternal)this).AvailableUpgrade = (Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IAvailableUpgrade[]) content.GetValueForProperty("AvailableUpgrade",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IKubernetesClusterInternal)this).AvailableUpgrade, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IAvailableUpgrade>(__y, Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.AvailableUpgradeTypeConverter.ConvertFrom));
            }
            if (content.Contains("ClusterId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IKubernetesClusterInternal)this).ClusterId = (string) content.GetValueForProperty("ClusterId",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IKubernetesClusterInternal)this).ClusterId, global::System.Convert.ToString);
            }
            if (content.Contains("ConnectedClusterId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IKubernetesClusterInternal)this).ConnectedClusterId = (string) content.GetValueForProperty("ConnectedClusterId",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IKubernetesClusterInternal)this).ConnectedClusterId, global::System.Convert.ToString);
            }
            if (content.Contains("ControlPlaneKubernetesVersion"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IKubernetesClusterInternal)this).ControlPlaneKubernetesVersion = (string) content.GetValueForProperty("ControlPlaneKubernetesVersion",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IKubernetesClusterInternal)this).ControlPlaneKubernetesVersion, global::System.Convert.ToString);
            }
            if (content.Contains("DetailedStatus"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IKubernetesClusterInternal)this).DetailedStatus = (Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Support.KubernetesClusterDetailedStatus?) content.GetValueForProperty("DetailedStatus",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IKubernetesClusterInternal)this).DetailedStatus, Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Support.KubernetesClusterDetailedStatus.CreateFrom);
            }
            if (content.Contains("DetailedStatusMessage"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IKubernetesClusterInternal)this).DetailedStatusMessage = (string) content.GetValueForProperty("DetailedStatusMessage",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IKubernetesClusterInternal)this).DetailedStatusMessage, global::System.Convert.ToString);
            }
            if (content.Contains("FeatureStatuses"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IKubernetesClusterInternal)this).FeatureStatuses = (Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IFeatureStatus[]) content.GetValueForProperty("FeatureStatuses",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IKubernetesClusterInternal)this).FeatureStatuses, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IFeatureStatus>(__y, Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.FeatureStatusTypeConverter.ConvertFrom));
            }
            if (content.Contains("InitialAgentPoolConfiguration"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IKubernetesClusterInternal)this).InitialAgentPoolConfiguration = (Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IInitialAgentPoolConfiguration[]) content.GetValueForProperty("InitialAgentPoolConfiguration",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IKubernetesClusterInternal)this).InitialAgentPoolConfiguration, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IInitialAgentPoolConfiguration>(__y, Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.InitialAgentPoolConfigurationTypeConverter.ConvertFrom));
            }
            if (content.Contains("KubernetesVersion"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IKubernetesClusterInternal)this).KubernetesVersion = (string) content.GetValueForProperty("KubernetesVersion",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IKubernetesClusterInternal)this).KubernetesVersion, global::System.Convert.ToString);
            }
            if (content.Contains("Node"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IKubernetesClusterInternal)this).Node = (Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IKubernetesClusterNode[]) content.GetValueForProperty("Node",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IKubernetesClusterInternal)this).Node, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IKubernetesClusterNode>(__y, Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.KubernetesClusterNodeTypeConverter.ConvertFrom));
            }
            if (content.Contains("ProvisioningState"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IKubernetesClusterInternal)this).ProvisioningState = (Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Support.KubernetesClusterProvisioningState?) content.GetValueForProperty("ProvisioningState",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IKubernetesClusterInternal)this).ProvisioningState, Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Support.KubernetesClusterProvisioningState.CreateFrom);
            }
            if (content.Contains("AdminUsername"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IKubernetesClusterInternal)this).AdminUsername = (string) content.GetValueForProperty("AdminUsername",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IKubernetesClusterInternal)this).AdminUsername, global::System.Convert.ToString);
            }
            if (content.Contains("ControlPlaneNodeConfigurationAdministratorConfiguration"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IKubernetesClusterInternal)this).ControlPlaneNodeConfigurationAdministratorConfiguration = (Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IAdministratorConfiguration) content.GetValueForProperty("ControlPlaneNodeConfigurationAdministratorConfiguration",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IKubernetesClusterInternal)this).ControlPlaneNodeConfigurationAdministratorConfiguration, Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.AdministratorConfigurationTypeConverter.ConvertFrom);
            }
            if (content.Contains("ControlPlaneNodeConfigurationAvailabilityZone"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IKubernetesClusterInternal)this).ControlPlaneNodeConfigurationAvailabilityZone = (string[]) content.GetValueForProperty("ControlPlaneNodeConfigurationAvailabilityZone",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IKubernetesClusterInternal)this).ControlPlaneNodeConfigurationAvailabilityZone, __y => TypeConverterExtensions.SelectToArray<string>(__y, global::System.Convert.ToString));
            }
            if (content.Contains("ControlPlaneNodeConfigurationCount"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IKubernetesClusterInternal)this).ControlPlaneNodeConfigurationCount = (long) content.GetValueForProperty("ControlPlaneNodeConfigurationCount",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IKubernetesClusterInternal)this).ControlPlaneNodeConfigurationCount, (__y)=> (long) global::System.Convert.ChangeType(__y, typeof(long)));
            }
            if (content.Contains("ManagedResourceGroupConfigurationLocation"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IKubernetesClusterInternal)this).ManagedResourceGroupConfigurationLocation = (string) content.GetValueForProperty("ManagedResourceGroupConfigurationLocation",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IKubernetesClusterInternal)this).ManagedResourceGroupConfigurationLocation, global::System.Convert.ToString);
            }
            if (content.Contains("ManagedResourceGroupConfigurationName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IKubernetesClusterInternal)this).ManagedResourceGroupConfigurationName = (string) content.GetValueForProperty("ManagedResourceGroupConfigurationName",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IKubernetesClusterInternal)this).ManagedResourceGroupConfigurationName, global::System.Convert.ToString);
            }
            if (content.Contains("NetworkConfigurationPodCidr"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IKubernetesClusterInternal)this).NetworkConfigurationPodCidr = (string[]) content.GetValueForProperty("NetworkConfigurationPodCidr",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IKubernetesClusterInternal)this).NetworkConfigurationPodCidr, __y => TypeConverterExtensions.SelectToArray<string>(__y, global::System.Convert.ToString));
            }
            if (content.Contains("NetworkConfigurationServiceCidr"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IKubernetesClusterInternal)this).NetworkConfigurationServiceCidr = (string[]) content.GetValueForProperty("NetworkConfigurationServiceCidr",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IKubernetesClusterInternal)this).NetworkConfigurationServiceCidr, __y => TypeConverterExtensions.SelectToArray<string>(__y, global::System.Convert.ToString));
            }
            if (content.Contains("AadConfigurationAdminGroupObjectId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IKubernetesClusterInternal)this).AadConfigurationAdminGroupObjectId = (string[]) content.GetValueForProperty("AadConfigurationAdminGroupObjectId",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IKubernetesClusterInternal)this).AadConfigurationAdminGroupObjectId, __y => TypeConverterExtensions.SelectToArray<string>(__y, global::System.Convert.ToString));
            }
            if (content.Contains("SshPublicKey"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IKubernetesClusterInternal)this).SshPublicKey = (Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.ISshPublicKey[]) content.GetValueForProperty("SshPublicKey",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IKubernetesClusterInternal)this).SshPublicKey, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.ISshPublicKey>(__y, Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.SshPublicKeyTypeConverter.ConvertFrom));
            }
            if (content.Contains("ControlPlaneNodeConfigurationVMSkuName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IKubernetesClusterInternal)this).ControlPlaneNodeConfigurationVMSkuName = (string) content.GetValueForProperty("ControlPlaneNodeConfigurationVMSkuName",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IKubernetesClusterInternal)this).ControlPlaneNodeConfigurationVMSkuName, global::System.Convert.ToString);
            }
            if (content.Contains("ControlPlaneNodeConfigurationAdministratorConfigurationAdminUsername"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IKubernetesClusterInternal)this).ControlPlaneNodeConfigurationAdministratorConfigurationAdminUsername = (string) content.GetValueForProperty("ControlPlaneNodeConfigurationAdministratorConfigurationAdminUsername",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IKubernetesClusterInternal)this).ControlPlaneNodeConfigurationAdministratorConfigurationAdminUsername, global::System.Convert.ToString);
            }
            if (content.Contains("NetworkConfigurationAttachedNetworkConfiguration"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IKubernetesClusterInternal)this).NetworkConfigurationAttachedNetworkConfiguration = (Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IAttachedNetworkConfiguration) content.GetValueForProperty("NetworkConfigurationAttachedNetworkConfiguration",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IKubernetesClusterInternal)this).NetworkConfigurationAttachedNetworkConfiguration, Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.AttachedNetworkConfigurationTypeConverter.ConvertFrom);
            }
            if (content.Contains("NetworkConfigurationBgpServiceLoadBalancerConfiguration"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IKubernetesClusterInternal)this).NetworkConfigurationBgpServiceLoadBalancerConfiguration = (Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IBgpServiceLoadBalancerConfiguration) content.GetValueForProperty("NetworkConfigurationBgpServiceLoadBalancerConfiguration",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IKubernetesClusterInternal)this).NetworkConfigurationBgpServiceLoadBalancerConfiguration, Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.BgpServiceLoadBalancerConfigurationTypeConverter.ConvertFrom);
            }
            if (content.Contains("NetworkConfigurationCloudServicesNetworkId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IKubernetesClusterInternal)this).NetworkConfigurationCloudServicesNetworkId = (string) content.GetValueForProperty("NetworkConfigurationCloudServicesNetworkId",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IKubernetesClusterInternal)this).NetworkConfigurationCloudServicesNetworkId, global::System.Convert.ToString);
            }
            if (content.Contains("NetworkConfigurationCniNetworkId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IKubernetesClusterInternal)this).NetworkConfigurationCniNetworkId = (string) content.GetValueForProperty("NetworkConfigurationCniNetworkId",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IKubernetesClusterInternal)this).NetworkConfigurationCniNetworkId, global::System.Convert.ToString);
            }
            if (content.Contains("NetworkConfigurationDnsServiceIP"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IKubernetesClusterInternal)this).NetworkConfigurationDnsServiceIP = (string) content.GetValueForProperty("NetworkConfigurationDnsServiceIP",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IKubernetesClusterInternal)this).NetworkConfigurationDnsServiceIP, global::System.Convert.ToString);
            }
            if (content.Contains("AttachedNetworkConfigurationL2Network"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IKubernetesClusterInternal)this).AttachedNetworkConfigurationL2Network = (Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IL2NetworkAttachmentConfiguration[]) content.GetValueForProperty("AttachedNetworkConfigurationL2Network",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IKubernetesClusterInternal)this).AttachedNetworkConfigurationL2Network, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IL2NetworkAttachmentConfiguration>(__y, Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.L2NetworkAttachmentConfigurationTypeConverter.ConvertFrom));
            }
            if (content.Contains("AttachedNetworkConfigurationL3Network"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IKubernetesClusterInternal)this).AttachedNetworkConfigurationL3Network = (Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IL3NetworkAttachmentConfiguration[]) content.GetValueForProperty("AttachedNetworkConfigurationL3Network",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IKubernetesClusterInternal)this).AttachedNetworkConfigurationL3Network, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IL3NetworkAttachmentConfiguration>(__y, Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.L3NetworkAttachmentConfigurationTypeConverter.ConvertFrom));
            }
            if (content.Contains("AttachedNetworkConfigurationTrunkedNetwork"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IKubernetesClusterInternal)this).AttachedNetworkConfigurationTrunkedNetwork = (Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.ITrunkedNetworkAttachmentConfiguration[]) content.GetValueForProperty("AttachedNetworkConfigurationTrunkedNetwork",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IKubernetesClusterInternal)this).AttachedNetworkConfigurationTrunkedNetwork, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.ITrunkedNetworkAttachmentConfiguration>(__y, Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.TrunkedNetworkAttachmentConfigurationTypeConverter.ConvertFrom));
            }
            if (content.Contains("BgpServiceLoadBalancerConfigurationBgpAdvertisement"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IKubernetesClusterInternal)this).BgpServiceLoadBalancerConfigurationBgpAdvertisement = (Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IBgpAdvertisement[]) content.GetValueForProperty("BgpServiceLoadBalancerConfigurationBgpAdvertisement",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IKubernetesClusterInternal)this).BgpServiceLoadBalancerConfigurationBgpAdvertisement, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IBgpAdvertisement>(__y, Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.BgpAdvertisementTypeConverter.ConvertFrom));
            }
            if (content.Contains("BgpServiceLoadBalancerConfigurationBgpPeer"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IKubernetesClusterInternal)this).BgpServiceLoadBalancerConfigurationBgpPeer = (Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IServiceLoadBalancerBgpPeer[]) content.GetValueForProperty("BgpServiceLoadBalancerConfigurationBgpPeer",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IKubernetesClusterInternal)this).BgpServiceLoadBalancerConfigurationBgpPeer, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IServiceLoadBalancerBgpPeer>(__y, Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.ServiceLoadBalancerBgpPeerTypeConverter.ConvertFrom));
            }
            if (content.Contains("ControlPlaneNodeConfigurationAdministratorConfigurationSshPublicKey"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IKubernetesClusterInternal)this).ControlPlaneNodeConfigurationAdministratorConfigurationSshPublicKey = (Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.ISshPublicKey[]) content.GetValueForProperty("ControlPlaneNodeConfigurationAdministratorConfigurationSshPublicKey",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IKubernetesClusterInternal)this).ControlPlaneNodeConfigurationAdministratorConfigurationSshPublicKey, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.ISshPublicKey>(__y, Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.SshPublicKeyTypeConverter.ConvertFrom));
            }
            if (content.Contains("BgpServiceLoadBalancerConfigurationFabricPeeringEnabled"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IKubernetesClusterInternal)this).BgpServiceLoadBalancerConfigurationFabricPeeringEnabled = (Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Support.FabricPeeringEnabled?) content.GetValueForProperty("BgpServiceLoadBalancerConfigurationFabricPeeringEnabled",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IKubernetesClusterInternal)this).BgpServiceLoadBalancerConfigurationFabricPeeringEnabled, Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Support.FabricPeeringEnabled.CreateFrom);
            }
            if (content.Contains("BgpServiceLoadBalancerConfigurationIPAddressPool"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IKubernetesClusterInternal)this).BgpServiceLoadBalancerConfigurationIPAddressPool = (Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IIPAddressPool[]) content.GetValueForProperty("BgpServiceLoadBalancerConfigurationIPAddressPool",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IKubernetesClusterInternal)this).BgpServiceLoadBalancerConfigurationIPAddressPool, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IIPAddressPool>(__y, Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IPAddressPoolTypeConverter.ConvertFrom));
            }
            AfterDeserializeDictionary(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Management.Automation.PSObject" /> into a new instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.KubernetesCluster"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        internal KubernetesCluster(global::System.Management.Automation.PSObject content)
        {
            bool returnNow = false;
            BeforeDeserializePSObject(content, ref returnNow);
            if (returnNow)
            {
                return;
            }
            // actually deserialize
            if (content.Contains("ExtendedLocation"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IKubernetesClusterInternal)this).ExtendedLocation = (Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IExtendedLocation) content.GetValueForProperty("ExtendedLocation",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IKubernetesClusterInternal)this).ExtendedLocation, Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.ExtendedLocationTypeConverter.ConvertFrom);
            }
            if (content.Contains("Property"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IKubernetesClusterInternal)this).Property = (Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IKubernetesClusterProperties) content.GetValueForProperty("Property",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IKubernetesClusterInternal)this).Property, Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.KubernetesClusterPropertiesTypeConverter.ConvertFrom);
            }
            if (content.Contains("SystemDataCreatedBy"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api40.IResourceInternal)this).SystemDataCreatedBy = (string) content.GetValueForProperty("SystemDataCreatedBy",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api40.IResourceInternal)this).SystemDataCreatedBy, global::System.Convert.ToString);
            }
            if (content.Contains("SystemDataCreatedAt"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api40.IResourceInternal)this).SystemDataCreatedAt = (global::System.DateTime?) content.GetValueForProperty("SystemDataCreatedAt",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api40.IResourceInternal)this).SystemDataCreatedAt, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            if (content.Contains("SystemDataCreatedByType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api40.IResourceInternal)this).SystemDataCreatedByType = (Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Support.CreatedByType?) content.GetValueForProperty("SystemDataCreatedByType",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api40.IResourceInternal)this).SystemDataCreatedByType, Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Support.CreatedByType.CreateFrom);
            }
            if (content.Contains("SystemDataLastModifiedBy"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api40.IResourceInternal)this).SystemDataLastModifiedBy = (string) content.GetValueForProperty("SystemDataLastModifiedBy",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api40.IResourceInternal)this).SystemDataLastModifiedBy, global::System.Convert.ToString);
            }
            if (content.Contains("SystemDataLastModifiedByType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api40.IResourceInternal)this).SystemDataLastModifiedByType = (Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Support.CreatedByType?) content.GetValueForProperty("SystemDataLastModifiedByType",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api40.IResourceInternal)this).SystemDataLastModifiedByType, Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Support.CreatedByType.CreateFrom);
            }
            if (content.Contains("SystemDataLastModifiedAt"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api40.IResourceInternal)this).SystemDataLastModifiedAt = (global::System.DateTime?) content.GetValueForProperty("SystemDataLastModifiedAt",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api40.IResourceInternal)this).SystemDataLastModifiedAt, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            if (content.Contains("SystemData"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api40.IResourceInternal)this).SystemData = (Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api40.ISystemData) content.GetValueForProperty("SystemData",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api40.IResourceInternal)this).SystemData, Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api40.SystemDataTypeConverter.ConvertFrom);
            }
            if (content.Contains("Id"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api40.IResourceInternal)this).Id = (string) content.GetValueForProperty("Id",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api40.IResourceInternal)this).Id, global::System.Convert.ToString);
            }
            if (content.Contains("Name"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api40.IResourceInternal)this).Name = (string) content.GetValueForProperty("Name",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api40.IResourceInternal)this).Name, global::System.Convert.ToString);
            }
            if (content.Contains("Type"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api40.IResourceInternal)this).Type = (string) content.GetValueForProperty("Type",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api40.IResourceInternal)this).Type, global::System.Convert.ToString);
            }
            if (content.Contains("Tag"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api40.ITrackedResourceInternal)this).Tag = (Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api40.ITrackedResourceTags) content.GetValueForProperty("Tag",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api40.ITrackedResourceInternal)this).Tag, Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api40.TrackedResourceTagsTypeConverter.ConvertFrom);
            }
            if (content.Contains("Location"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api40.ITrackedResourceInternal)this).Location = (string) content.GetValueForProperty("Location",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api40.ITrackedResourceInternal)this).Location, global::System.Convert.ToString);
            }
            if (content.Contains("ExtendedLocationName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IKubernetesClusterInternal)this).ExtendedLocationName = (string) content.GetValueForProperty("ExtendedLocationName",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IKubernetesClusterInternal)this).ExtendedLocationName, global::System.Convert.ToString);
            }
            if (content.Contains("ExtendedLocationType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IKubernetesClusterInternal)this).ExtendedLocationType = (string) content.GetValueForProperty("ExtendedLocationType",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IKubernetesClusterInternal)this).ExtendedLocationType, global::System.Convert.ToString);
            }
            if (content.Contains("AadConfiguration"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IKubernetesClusterInternal)this).AadConfiguration = (Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IAadConfiguration) content.GetValueForProperty("AadConfiguration",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IKubernetesClusterInternal)this).AadConfiguration, Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.AadConfigurationTypeConverter.ConvertFrom);
            }
            if (content.Contains("AdministratorConfiguration"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IKubernetesClusterInternal)this).AdministratorConfiguration = (Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IAdministratorConfiguration) content.GetValueForProperty("AdministratorConfiguration",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IKubernetesClusterInternal)this).AdministratorConfiguration, Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.AdministratorConfigurationTypeConverter.ConvertFrom);
            }
            if (content.Contains("NetworkConfiguration"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IKubernetesClusterInternal)this).NetworkConfiguration = (Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.INetworkConfiguration) content.GetValueForProperty("NetworkConfiguration",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IKubernetesClusterInternal)this).NetworkConfiguration, Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.NetworkConfigurationTypeConverter.ConvertFrom);
            }
            if (content.Contains("ControlPlaneNodeConfiguration"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IKubernetesClusterInternal)this).ControlPlaneNodeConfiguration = (Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IControlPlaneNodeConfiguration) content.GetValueForProperty("ControlPlaneNodeConfiguration",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IKubernetesClusterInternal)this).ControlPlaneNodeConfiguration, Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.ControlPlaneNodeConfigurationTypeConverter.ConvertFrom);
            }
            if (content.Contains("ManagedResourceGroupConfiguration"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IKubernetesClusterInternal)this).ManagedResourceGroupConfiguration = (Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IManagedResourceGroupConfiguration) content.GetValueForProperty("ManagedResourceGroupConfiguration",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IKubernetesClusterInternal)this).ManagedResourceGroupConfiguration, Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.ManagedResourceGroupConfigurationTypeConverter.ConvertFrom);
            }
            if (content.Contains("AttachedNetworkId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IKubernetesClusterInternal)this).AttachedNetworkId = (string[]) content.GetValueForProperty("AttachedNetworkId",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IKubernetesClusterInternal)this).AttachedNetworkId, __y => TypeConverterExtensions.SelectToArray<string>(__y, global::System.Convert.ToString));
            }
            if (content.Contains("AvailableUpgrade"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IKubernetesClusterInternal)this).AvailableUpgrade = (Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IAvailableUpgrade[]) content.GetValueForProperty("AvailableUpgrade",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IKubernetesClusterInternal)this).AvailableUpgrade, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IAvailableUpgrade>(__y, Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.AvailableUpgradeTypeConverter.ConvertFrom));
            }
            if (content.Contains("ClusterId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IKubernetesClusterInternal)this).ClusterId = (string) content.GetValueForProperty("ClusterId",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IKubernetesClusterInternal)this).ClusterId, global::System.Convert.ToString);
            }
            if (content.Contains("ConnectedClusterId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IKubernetesClusterInternal)this).ConnectedClusterId = (string) content.GetValueForProperty("ConnectedClusterId",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IKubernetesClusterInternal)this).ConnectedClusterId, global::System.Convert.ToString);
            }
            if (content.Contains("ControlPlaneKubernetesVersion"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IKubernetesClusterInternal)this).ControlPlaneKubernetesVersion = (string) content.GetValueForProperty("ControlPlaneKubernetesVersion",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IKubernetesClusterInternal)this).ControlPlaneKubernetesVersion, global::System.Convert.ToString);
            }
            if (content.Contains("DetailedStatus"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IKubernetesClusterInternal)this).DetailedStatus = (Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Support.KubernetesClusterDetailedStatus?) content.GetValueForProperty("DetailedStatus",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IKubernetesClusterInternal)this).DetailedStatus, Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Support.KubernetesClusterDetailedStatus.CreateFrom);
            }
            if (content.Contains("DetailedStatusMessage"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IKubernetesClusterInternal)this).DetailedStatusMessage = (string) content.GetValueForProperty("DetailedStatusMessage",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IKubernetesClusterInternal)this).DetailedStatusMessage, global::System.Convert.ToString);
            }
            if (content.Contains("FeatureStatuses"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IKubernetesClusterInternal)this).FeatureStatuses = (Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IFeatureStatus[]) content.GetValueForProperty("FeatureStatuses",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IKubernetesClusterInternal)this).FeatureStatuses, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IFeatureStatus>(__y, Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.FeatureStatusTypeConverter.ConvertFrom));
            }
            if (content.Contains("InitialAgentPoolConfiguration"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IKubernetesClusterInternal)this).InitialAgentPoolConfiguration = (Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IInitialAgentPoolConfiguration[]) content.GetValueForProperty("InitialAgentPoolConfiguration",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IKubernetesClusterInternal)this).InitialAgentPoolConfiguration, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IInitialAgentPoolConfiguration>(__y, Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.InitialAgentPoolConfigurationTypeConverter.ConvertFrom));
            }
            if (content.Contains("KubernetesVersion"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IKubernetesClusterInternal)this).KubernetesVersion = (string) content.GetValueForProperty("KubernetesVersion",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IKubernetesClusterInternal)this).KubernetesVersion, global::System.Convert.ToString);
            }
            if (content.Contains("Node"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IKubernetesClusterInternal)this).Node = (Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IKubernetesClusterNode[]) content.GetValueForProperty("Node",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IKubernetesClusterInternal)this).Node, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IKubernetesClusterNode>(__y, Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.KubernetesClusterNodeTypeConverter.ConvertFrom));
            }
            if (content.Contains("ProvisioningState"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IKubernetesClusterInternal)this).ProvisioningState = (Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Support.KubernetesClusterProvisioningState?) content.GetValueForProperty("ProvisioningState",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IKubernetesClusterInternal)this).ProvisioningState, Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Support.KubernetesClusterProvisioningState.CreateFrom);
            }
            if (content.Contains("AdminUsername"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IKubernetesClusterInternal)this).AdminUsername = (string) content.GetValueForProperty("AdminUsername",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IKubernetesClusterInternal)this).AdminUsername, global::System.Convert.ToString);
            }
            if (content.Contains("ControlPlaneNodeConfigurationAdministratorConfiguration"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IKubernetesClusterInternal)this).ControlPlaneNodeConfigurationAdministratorConfiguration = (Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IAdministratorConfiguration) content.GetValueForProperty("ControlPlaneNodeConfigurationAdministratorConfiguration",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IKubernetesClusterInternal)this).ControlPlaneNodeConfigurationAdministratorConfiguration, Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.AdministratorConfigurationTypeConverter.ConvertFrom);
            }
            if (content.Contains("ControlPlaneNodeConfigurationAvailabilityZone"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IKubernetesClusterInternal)this).ControlPlaneNodeConfigurationAvailabilityZone = (string[]) content.GetValueForProperty("ControlPlaneNodeConfigurationAvailabilityZone",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IKubernetesClusterInternal)this).ControlPlaneNodeConfigurationAvailabilityZone, __y => TypeConverterExtensions.SelectToArray<string>(__y, global::System.Convert.ToString));
            }
            if (content.Contains("ControlPlaneNodeConfigurationCount"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IKubernetesClusterInternal)this).ControlPlaneNodeConfigurationCount = (long) content.GetValueForProperty("ControlPlaneNodeConfigurationCount",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IKubernetesClusterInternal)this).ControlPlaneNodeConfigurationCount, (__y)=> (long) global::System.Convert.ChangeType(__y, typeof(long)));
            }
            if (content.Contains("ManagedResourceGroupConfigurationLocation"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IKubernetesClusterInternal)this).ManagedResourceGroupConfigurationLocation = (string) content.GetValueForProperty("ManagedResourceGroupConfigurationLocation",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IKubernetesClusterInternal)this).ManagedResourceGroupConfigurationLocation, global::System.Convert.ToString);
            }
            if (content.Contains("ManagedResourceGroupConfigurationName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IKubernetesClusterInternal)this).ManagedResourceGroupConfigurationName = (string) content.GetValueForProperty("ManagedResourceGroupConfigurationName",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IKubernetesClusterInternal)this).ManagedResourceGroupConfigurationName, global::System.Convert.ToString);
            }
            if (content.Contains("NetworkConfigurationPodCidr"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IKubernetesClusterInternal)this).NetworkConfigurationPodCidr = (string[]) content.GetValueForProperty("NetworkConfigurationPodCidr",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IKubernetesClusterInternal)this).NetworkConfigurationPodCidr, __y => TypeConverterExtensions.SelectToArray<string>(__y, global::System.Convert.ToString));
            }
            if (content.Contains("NetworkConfigurationServiceCidr"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IKubernetesClusterInternal)this).NetworkConfigurationServiceCidr = (string[]) content.GetValueForProperty("NetworkConfigurationServiceCidr",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IKubernetesClusterInternal)this).NetworkConfigurationServiceCidr, __y => TypeConverterExtensions.SelectToArray<string>(__y, global::System.Convert.ToString));
            }
            if (content.Contains("AadConfigurationAdminGroupObjectId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IKubernetesClusterInternal)this).AadConfigurationAdminGroupObjectId = (string[]) content.GetValueForProperty("AadConfigurationAdminGroupObjectId",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IKubernetesClusterInternal)this).AadConfigurationAdminGroupObjectId, __y => TypeConverterExtensions.SelectToArray<string>(__y, global::System.Convert.ToString));
            }
            if (content.Contains("SshPublicKey"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IKubernetesClusterInternal)this).SshPublicKey = (Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.ISshPublicKey[]) content.GetValueForProperty("SshPublicKey",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IKubernetesClusterInternal)this).SshPublicKey, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.ISshPublicKey>(__y, Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.SshPublicKeyTypeConverter.ConvertFrom));
            }
            if (content.Contains("ControlPlaneNodeConfigurationVMSkuName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IKubernetesClusterInternal)this).ControlPlaneNodeConfigurationVMSkuName = (string) content.GetValueForProperty("ControlPlaneNodeConfigurationVMSkuName",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IKubernetesClusterInternal)this).ControlPlaneNodeConfigurationVMSkuName, global::System.Convert.ToString);
            }
            if (content.Contains("ControlPlaneNodeConfigurationAdministratorConfigurationAdminUsername"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IKubernetesClusterInternal)this).ControlPlaneNodeConfigurationAdministratorConfigurationAdminUsername = (string) content.GetValueForProperty("ControlPlaneNodeConfigurationAdministratorConfigurationAdminUsername",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IKubernetesClusterInternal)this).ControlPlaneNodeConfigurationAdministratorConfigurationAdminUsername, global::System.Convert.ToString);
            }
            if (content.Contains("NetworkConfigurationAttachedNetworkConfiguration"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IKubernetesClusterInternal)this).NetworkConfigurationAttachedNetworkConfiguration = (Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IAttachedNetworkConfiguration) content.GetValueForProperty("NetworkConfigurationAttachedNetworkConfiguration",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IKubernetesClusterInternal)this).NetworkConfigurationAttachedNetworkConfiguration, Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.AttachedNetworkConfigurationTypeConverter.ConvertFrom);
            }
            if (content.Contains("NetworkConfigurationBgpServiceLoadBalancerConfiguration"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IKubernetesClusterInternal)this).NetworkConfigurationBgpServiceLoadBalancerConfiguration = (Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IBgpServiceLoadBalancerConfiguration) content.GetValueForProperty("NetworkConfigurationBgpServiceLoadBalancerConfiguration",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IKubernetesClusterInternal)this).NetworkConfigurationBgpServiceLoadBalancerConfiguration, Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.BgpServiceLoadBalancerConfigurationTypeConverter.ConvertFrom);
            }
            if (content.Contains("NetworkConfigurationCloudServicesNetworkId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IKubernetesClusterInternal)this).NetworkConfigurationCloudServicesNetworkId = (string) content.GetValueForProperty("NetworkConfigurationCloudServicesNetworkId",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IKubernetesClusterInternal)this).NetworkConfigurationCloudServicesNetworkId, global::System.Convert.ToString);
            }
            if (content.Contains("NetworkConfigurationCniNetworkId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IKubernetesClusterInternal)this).NetworkConfigurationCniNetworkId = (string) content.GetValueForProperty("NetworkConfigurationCniNetworkId",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IKubernetesClusterInternal)this).NetworkConfigurationCniNetworkId, global::System.Convert.ToString);
            }
            if (content.Contains("NetworkConfigurationDnsServiceIP"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IKubernetesClusterInternal)this).NetworkConfigurationDnsServiceIP = (string) content.GetValueForProperty("NetworkConfigurationDnsServiceIP",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IKubernetesClusterInternal)this).NetworkConfigurationDnsServiceIP, global::System.Convert.ToString);
            }
            if (content.Contains("AttachedNetworkConfigurationL2Network"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IKubernetesClusterInternal)this).AttachedNetworkConfigurationL2Network = (Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IL2NetworkAttachmentConfiguration[]) content.GetValueForProperty("AttachedNetworkConfigurationL2Network",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IKubernetesClusterInternal)this).AttachedNetworkConfigurationL2Network, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IL2NetworkAttachmentConfiguration>(__y, Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.L2NetworkAttachmentConfigurationTypeConverter.ConvertFrom));
            }
            if (content.Contains("AttachedNetworkConfigurationL3Network"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IKubernetesClusterInternal)this).AttachedNetworkConfigurationL3Network = (Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IL3NetworkAttachmentConfiguration[]) content.GetValueForProperty("AttachedNetworkConfigurationL3Network",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IKubernetesClusterInternal)this).AttachedNetworkConfigurationL3Network, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IL3NetworkAttachmentConfiguration>(__y, Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.L3NetworkAttachmentConfigurationTypeConverter.ConvertFrom));
            }
            if (content.Contains("AttachedNetworkConfigurationTrunkedNetwork"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IKubernetesClusterInternal)this).AttachedNetworkConfigurationTrunkedNetwork = (Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.ITrunkedNetworkAttachmentConfiguration[]) content.GetValueForProperty("AttachedNetworkConfigurationTrunkedNetwork",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IKubernetesClusterInternal)this).AttachedNetworkConfigurationTrunkedNetwork, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.ITrunkedNetworkAttachmentConfiguration>(__y, Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.TrunkedNetworkAttachmentConfigurationTypeConverter.ConvertFrom));
            }
            if (content.Contains("BgpServiceLoadBalancerConfigurationBgpAdvertisement"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IKubernetesClusterInternal)this).BgpServiceLoadBalancerConfigurationBgpAdvertisement = (Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IBgpAdvertisement[]) content.GetValueForProperty("BgpServiceLoadBalancerConfigurationBgpAdvertisement",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IKubernetesClusterInternal)this).BgpServiceLoadBalancerConfigurationBgpAdvertisement, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IBgpAdvertisement>(__y, Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.BgpAdvertisementTypeConverter.ConvertFrom));
            }
            if (content.Contains("BgpServiceLoadBalancerConfigurationBgpPeer"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IKubernetesClusterInternal)this).BgpServiceLoadBalancerConfigurationBgpPeer = (Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IServiceLoadBalancerBgpPeer[]) content.GetValueForProperty("BgpServiceLoadBalancerConfigurationBgpPeer",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IKubernetesClusterInternal)this).BgpServiceLoadBalancerConfigurationBgpPeer, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IServiceLoadBalancerBgpPeer>(__y, Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.ServiceLoadBalancerBgpPeerTypeConverter.ConvertFrom));
            }
            if (content.Contains("ControlPlaneNodeConfigurationAdministratorConfigurationSshPublicKey"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IKubernetesClusterInternal)this).ControlPlaneNodeConfigurationAdministratorConfigurationSshPublicKey = (Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.ISshPublicKey[]) content.GetValueForProperty("ControlPlaneNodeConfigurationAdministratorConfigurationSshPublicKey",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IKubernetesClusterInternal)this).ControlPlaneNodeConfigurationAdministratorConfigurationSshPublicKey, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.ISshPublicKey>(__y, Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.SshPublicKeyTypeConverter.ConvertFrom));
            }
            if (content.Contains("BgpServiceLoadBalancerConfigurationFabricPeeringEnabled"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IKubernetesClusterInternal)this).BgpServiceLoadBalancerConfigurationFabricPeeringEnabled = (Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Support.FabricPeeringEnabled?) content.GetValueForProperty("BgpServiceLoadBalancerConfigurationFabricPeeringEnabled",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IKubernetesClusterInternal)this).BgpServiceLoadBalancerConfigurationFabricPeeringEnabled, Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Support.FabricPeeringEnabled.CreateFrom);
            }
            if (content.Contains("BgpServiceLoadBalancerConfigurationIPAddressPool"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IKubernetesClusterInternal)this).BgpServiceLoadBalancerConfigurationIPAddressPool = (Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IIPAddressPool[]) content.GetValueForProperty("BgpServiceLoadBalancerConfigurationIPAddressPool",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IKubernetesClusterInternal)this).BgpServiceLoadBalancerConfigurationIPAddressPool, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IIPAddressPool>(__y, Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IPAddressPoolTypeConverter.ConvertFrom));
            }
            AfterDeserializePSObject(content);
        }

        /// <summary>Serializes this instance to a json string.</summary>

        /// <returns>a <see cref="System.String" /> containing this model serialized to JSON text.</returns>
        public string ToJsonString() => ToJson(null, Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Runtime.SerializationMode.IncludeAll)?.ToString();

        public override string ToString()
        {
            var returnNow = false;
            var result = global::System.String.Empty;
            OverrideToString(ref result, ref returnNow);
            if (returnNow)
            {
                return result;
            }
            return ToJsonString();
        }
    }
    /// KubernetesCluster represents the Kubernetes cluster hosted on Network Cloud.
    [System.ComponentModel.TypeConverter(typeof(KubernetesClusterTypeConverter))]
    public partial interface IKubernetesCluster

    {

    }
}