// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api202212Preview
{
    using static Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Runtime.Extensions;

    /// <summary>Cluster represents the on-premises Network Cloud cluster.</summary>
    public partial class Cluster :
        Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api202212Preview.ICluster,
        Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api202212Preview.IClusterInternal,
        Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Runtime.IValidates,
        Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Runtime.IHeaderSerializable
    {
        /// <summary>
        /// Backing field for Inherited model <see cref= "Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api30.ITrackedResource"
        /// />
        /// </summary>
        private Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api30.ITrackedResource __trackedResource = new Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api30.TrackedResource();

        /// <summary>The zone name used for this rack when created.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.PropertyOrigin.Inlined)]
        public string AggregatorOrSingleRackDefinitionAvailabilityZone { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api202212Preview.IClusterPropertiesInternal)Property).AggregatorOrSingleRackDefinitionAvailabilityZone; set => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api202212Preview.IClusterPropertiesInternal)Property).AggregatorOrSingleRackDefinitionAvailabilityZone = value ?? null; }

        /// <summary>The unordered list of bare metal machine configuration.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api202212Preview.IBareMetalMachineConfigurationData[] AggregatorOrSingleRackDefinitionBareMetalMachineConfigurationData { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api202212Preview.IClusterPropertiesInternal)Property).AggregatorOrSingleRackDefinitionBareMetalMachineConfigurationData; set => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api202212Preview.IClusterPropertiesInternal)Property).AggregatorOrSingleRackDefinitionBareMetalMachineConfigurationData = value ?? null /* arrayOf */; }

        /// <summary>The resource ID of the network rack that matches this rack definition.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.PropertyOrigin.Inlined)]
        public string AggregatorOrSingleRackDefinitionNetworkRackId { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api202212Preview.IClusterPropertiesInternal)Property).AggregatorOrSingleRackDefinitionNetworkRackId; set => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api202212Preview.IClusterPropertiesInternal)Property).AggregatorOrSingleRackDefinitionNetworkRackId = value ; }

        /// <summary>The free-form description of the rack's location.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.PropertyOrigin.Inlined)]
        public string AggregatorOrSingleRackDefinitionRackLocation { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api202212Preview.IClusterPropertiesInternal)Property).AggregatorOrSingleRackDefinitionRackLocation; set => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api202212Preview.IClusterPropertiesInternal)Property).AggregatorOrSingleRackDefinitionRackLocation = value ?? null; }

        /// <summary>
        /// The unique identifier for the rack within Network Cloud cluster. An alternate unique alphanumeric value other than a serial
        /// number may be provided if desired.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.PropertyOrigin.Inlined)]
        public string AggregatorOrSingleRackDefinitionRackSerialNumber { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api202212Preview.IClusterPropertiesInternal)Property).AggregatorOrSingleRackDefinitionRackSerialNumber; set => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api202212Preview.IClusterPropertiesInternal)Property).AggregatorOrSingleRackDefinitionRackSerialNumber = value ; }

        /// <summary>The resource ID of the sku for the rack being added.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.PropertyOrigin.Inlined)]
        public string AggregatorOrSingleRackDefinitionRackSkuId { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api202212Preview.IClusterPropertiesInternal)Property).AggregatorOrSingleRackDefinitionRackSkuId; set => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api202212Preview.IClusterPropertiesInternal)Property).AggregatorOrSingleRackDefinitionRackSkuId = value ; }

        /// <summary>The list of storage appliance configuration data for this rack.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api202212Preview.IStorageApplianceConfigurationData[] AggregatorOrSingleRackDefinitionStorageApplianceConfigurationData { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api202212Preview.IClusterPropertiesInternal)Property).AggregatorOrSingleRackDefinitionStorageApplianceConfigurationData; set => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api202212Preview.IClusterPropertiesInternal)Property).AggregatorOrSingleRackDefinitionStorageApplianceConfigurationData = value ?? null /* arrayOf */; }

        /// <summary>
        /// The resource ID of the Log Analytics Workspace that will be used for storing relevant logs.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.PropertyOrigin.Inlined)]
        public string AnalyticsWorkspaceId { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api202212Preview.IClusterPropertiesInternal)Property).AnalyticsWorkspaceId; set => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api202212Preview.IClusterPropertiesInternal)Property).AnalyticsWorkspaceId = value ; }

        /// <summary>The list of cluster runtime version upgrades available for this cluster.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api202212Preview.IClusterAvailableUpgradeVersion[] AvailableUpgradeVersion { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api202212Preview.IClusterPropertiesInternal)Property).AvailableUpgradeVersion; }

        /// <summary>Backing field for <see cref="AzureAsyncOperation" /> property.</summary>
        private string _azureAsyncOperation;

        [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.PropertyOrigin.Owned)]
        public string AzureAsyncOperation { get => this._azureAsyncOperation; set => this._azureAsyncOperation = value; }

        /// <summary>The remaining appliance-based storage in GB available for workload use.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.PropertyOrigin.Inlined)]
        public long? CapacityAvailableApplianceStorageGb { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api202212Preview.IClusterPropertiesInternal)Property).ClusterCapacityAvailableApplianceStorageGb; set => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api202212Preview.IClusterPropertiesInternal)Property).ClusterCapacityAvailableApplianceStorageGb = value ?? default(long); }

        /// <summary>
        /// The remaining number of cores that are available in this cluster for workload use.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.PropertyOrigin.Inlined)]
        public long? CapacityAvailableCoreCount { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api202212Preview.IClusterPropertiesInternal)Property).ClusterCapacityAvailableCoreCount; set => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api202212Preview.IClusterPropertiesInternal)Property).ClusterCapacityAvailableCoreCount = value ?? default(long); }

        /// <summary>The remaining machine or host-based storage in GB available for workload use.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.PropertyOrigin.Inlined)]
        public long? CapacityAvailableHostStorageGb { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api202212Preview.IClusterPropertiesInternal)Property).ClusterCapacityAvailableHostStorageGb; set => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api202212Preview.IClusterPropertiesInternal)Property).ClusterCapacityAvailableHostStorageGb = value ?? default(long); }

        /// <summary>The remaining memory in GB that are available in this cluster for workload use.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.PropertyOrigin.Inlined)]
        public long? CapacityAvailableMemoryGb { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api202212Preview.IClusterPropertiesInternal)Property).ClusterCapacityAvailableMemoryGb; set => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api202212Preview.IClusterPropertiesInternal)Property).ClusterCapacityAvailableMemoryGb = value ?? default(long); }

        /// <summary>
        /// The total appliance-based storage in GB supported by this cluster for workload use.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.PropertyOrigin.Inlined)]
        public long? CapacityTotalApplianceStorageGb { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api202212Preview.IClusterPropertiesInternal)Property).ClusterCapacityTotalApplianceStorageGb; set => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api202212Preview.IClusterPropertiesInternal)Property).ClusterCapacityTotalApplianceStorageGb = value ?? default(long); }

        /// <summary>The total number of cores that are supported by this cluster for workload use.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.PropertyOrigin.Inlined)]
        public long? CapacityTotalCoreCount { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api202212Preview.IClusterPropertiesInternal)Property).ClusterCapacityTotalCoreCount; set => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api202212Preview.IClusterPropertiesInternal)Property).ClusterCapacityTotalCoreCount = value ?? default(long); }

        /// <summary>
        /// The total machine or host-based storage in GB supported by this cluster for workload use.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.PropertyOrigin.Inlined)]
        public long? CapacityTotalHostStorageGb { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api202212Preview.IClusterPropertiesInternal)Property).ClusterCapacityTotalHostStorageGb; set => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api202212Preview.IClusterPropertiesInternal)Property).ClusterCapacityTotalHostStorageGb = value ?? default(long); }

        /// <summary>The total memory supported by this cluster for workload use.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.PropertyOrigin.Inlined)]
        public long? CapacityTotalMemoryGb { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api202212Preview.IClusterPropertiesInternal)Property).ClusterCapacityTotalMemoryGb; set => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api202212Preview.IClusterPropertiesInternal)Property).ClusterCapacityTotalMemoryGb = value ?? default(long); }

        /// <summary>The resource ID of the extended location on which the resource will be created.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.PropertyOrigin.Inlined)]
        public string ClusterExtendedLocationName { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api202212Preview.IClusterPropertiesInternal)Property).ClusterExtendedLocationName; set => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api202212Preview.IClusterPropertiesInternal)Property).ClusterExtendedLocationName = value ?? null; }

        /// <summary>The extended location type, for example, CustomLocation.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.PropertyOrigin.Inlined)]
        public string ClusterExtendedLocationType { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api202212Preview.IClusterPropertiesInternal)Property).ClusterExtendedLocationType; set => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api202212Preview.IClusterPropertiesInternal)Property).ClusterExtendedLocationType = value ?? null; }

        /// <summary>
        /// The customer-provided location information to identify where the cluster resides.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.PropertyOrigin.Inlined)]
        public string ClusterLocation { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api202212Preview.IClusterPropertiesInternal)Property).ClusterLocation; set => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api202212Preview.IClusterPropertiesInternal)Property).ClusterLocation = value ?? null; }

        /// <summary>The type of rack configuration for the cluster.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Support.ClusterType ClusterType { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api202212Preview.IClusterPropertiesInternal)Property).ClusterType; set => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api202212Preview.IClusterPropertiesInternal)Property).ClusterType = value ; }

        /// <summary>Selection of how the type evaluation is applied to the cluster calculation.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Support.ValidationThresholdGrouping? ComputeDeploymentThresholdGrouping { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api202212Preview.IClusterPropertiesInternal)Property).ComputeDeploymentThresholdGrouping; set => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api202212Preview.IClusterPropertiesInternal)Property).ComputeDeploymentThresholdGrouping = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Support.ValidationThresholdGrouping)""); }

        /// <summary>Selection of how the threshold should be evaluated.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Support.ValidationThresholdType? ComputeDeploymentThresholdType { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api202212Preview.IClusterPropertiesInternal)Property).ComputeDeploymentThresholdType; set => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api202212Preview.IClusterPropertiesInternal)Property).ComputeDeploymentThresholdType = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Support.ValidationThresholdType)""); }

        /// <summary>The numeric threshold value.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.PropertyOrigin.Inlined)]
        public long? ComputeDeploymentThresholdValue { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api202212Preview.IClusterPropertiesInternal)Property).ComputeDeploymentThresholdValue; set => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api202212Preview.IClusterPropertiesInternal)Property).ComputeDeploymentThresholdValue = value ?? default(long); }

        /// <summary>
        /// The list of rack definitions for the compute racks in a multi-rack
        /// cluster, or an empty list in a single-rack cluster.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api202212Preview.IRackDefinition[] ComputeRackDefinition { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api202212Preview.IClusterPropertiesInternal)Property).ComputeRackDefinition; set => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api202212Preview.IClusterPropertiesInternal)Property).ComputeRackDefinition = value ?? null /* arrayOf */; }

        /// <summary>The latest heartbeat status between the cluster manager and the cluster.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Support.ClusterConnectionStatus? ConnectionStatus { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api202212Preview.IClusterPropertiesInternal)Property).ClusterConnectionStatus; }

        /// <summary>The current detailed status of the cluster.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Support.ClusterDetailedStatus? DetailedStatus { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api202212Preview.IClusterPropertiesInternal)Property).DetailedStatus; }

        /// <summary>The descriptive message about the detailed status.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.PropertyOrigin.Inlined)]
        public string DetailedStatusMessage { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api202212Preview.IClusterPropertiesInternal)Property).DetailedStatusMessage; }

        /// <summary>Backing field for <see cref="ExtendedLocation" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api202212Preview.IExtendedLocation _extendedLocation;

        /// <summary>The extended location of the cluster manager associated with the cluster.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api202212Preview.IExtendedLocation ExtendedLocation { get => (this._extendedLocation = this._extendedLocation ?? new Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api202212Preview.ExtendedLocation()); set => this._extendedLocation = value; }

        /// <summary>The resource ID of the extended location on which the resource will be created.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.PropertyOrigin.Inlined)]
        public string ExtendedLocationName { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api202212Preview.IExtendedLocationInternal)ExtendedLocation).Name; set => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api202212Preview.IExtendedLocationInternal)ExtendedLocation).Name = value ; }

        /// <summary>The extended location type, for example, CustomLocation.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.PropertyOrigin.Inlined)]
        public string ExtendedLocationType { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api202212Preview.IExtendedLocationInternal)ExtendedLocation).Type; set => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api202212Preview.IExtendedLocationInternal)ExtendedLocation).Type = value ; }

        /// <summary>The resource ID of the extended location on which the resource will be created.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.PropertyOrigin.Inlined)]
        public string HybridAkExtendedLocationName { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api202212Preview.IClusterPropertiesInternal)Property).HybridAkExtendedLocationName; set => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api202212Preview.IClusterPropertiesInternal)Property).HybridAkExtendedLocationName = value ?? null; }

        /// <summary>The extended location type, for example, CustomLocation.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.PropertyOrigin.Inlined)]
        public string HybridAkExtendedLocationType { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api202212Preview.IClusterPropertiesInternal)Property).HybridAkExtendedLocationType; set => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api202212Preview.IClusterPropertiesInternal)Property).HybridAkExtendedLocationType = value ?? null; }

        /// <summary>
        /// Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.PropertyOrigin.Inherited)]
        public string Id { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api30.IResourceInternal)__trackedResource).Id; }

        /// <summary>The geo-location where the resource lives</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.PropertyOrigin.Inherited)]
        public string Location { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api30.ITrackedResourceInternal)__trackedResource).Location; set => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api30.ITrackedResourceInternal)__trackedResource).Location = value ; }

        /// <summary>
        /// The location of the managed resource group. If not specified, the location of the parent resource is chosen.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.PropertyOrigin.Inlined)]
        public string ManagedResourceGroupConfigurationLocation { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api202212Preview.IClusterPropertiesInternal)Property).ManagedResourceGroupConfigurationLocation; set => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api202212Preview.IClusterPropertiesInternal)Property).ManagedResourceGroupConfigurationLocation = value ?? null; }

        /// <summary>
        /// The name for the managed resource group. If not specified, the unique name is automatically generated.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.PropertyOrigin.Inlined)]
        public string ManagedResourceGroupConfigurationName { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api202212Preview.IClusterPropertiesInternal)Property).ManagedResourceGroupConfigurationName; set => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api202212Preview.IClusterPropertiesInternal)Property).ManagedResourceGroupConfigurationName = value ?? null; }

        /// <summary>The latest connectivity status between cluster manager and the cluster.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Support.ClusterManagerConnectionStatus? ManagerConnectionStatus { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api202212Preview.IClusterPropertiesInternal)Property).ClusterManagerConnectionStatus; }

        /// <summary>
        /// The resource ID of the cluster manager that manages this cluster. This is set by the Cluster Manager when the cluster
        /// is created.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.PropertyOrigin.Inlined)]
        public string ManagerId { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api202212Preview.IClusterPropertiesInternal)Property).ClusterManagerId; }

        /// <summary>The count of Manual Action Taken (MAT) events that have not been validated.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.PropertyOrigin.Inlined)]
        public long? ManualActionCount { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api202212Preview.IClusterPropertiesInternal)Property).ManualActionCount; }

        /// <summary>Internal Acessors for AggregatorOrSingleRackDefinition</summary>
        Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api202212Preview.IRackDefinition Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api202212Preview.IClusterInternal.AggregatorOrSingleRackDefinition { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api202212Preview.IClusterPropertiesInternal)Property).AggregatorOrSingleRackDefinition; set => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api202212Preview.IClusterPropertiesInternal)Property).AggregatorOrSingleRackDefinition = value; }

        /// <summary>Internal Acessors for AvailableUpgradeVersion</summary>
        Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api202212Preview.IClusterAvailableUpgradeVersion[] Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api202212Preview.IClusterInternal.AvailableUpgradeVersion { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api202212Preview.IClusterPropertiesInternal)Property).AvailableUpgradeVersion; set => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api202212Preview.IClusterPropertiesInternal)Property).AvailableUpgradeVersion = value; }

        /// <summary>Internal Acessors for Capacity</summary>
        Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api202212Preview.IClusterCapacity Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api202212Preview.IClusterInternal.Capacity { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api202212Preview.IClusterPropertiesInternal)Property).ClusterCapacity; set => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api202212Preview.IClusterPropertiesInternal)Property).ClusterCapacity = value; }

        /// <summary>Internal Acessors for ClusterExtendedLocation</summary>
        Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api202212Preview.IExtendedLocation Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api202212Preview.IClusterInternal.ClusterExtendedLocation { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api202212Preview.IClusterPropertiesInternal)Property).ClusterExtendedLocation; set => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api202212Preview.IClusterPropertiesInternal)Property).ClusterExtendedLocation = value; }

        /// <summary>Internal Acessors for ComputeDeploymentThreshold</summary>
        Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api202212Preview.IValidationThreshold Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api202212Preview.IClusterInternal.ComputeDeploymentThreshold { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api202212Preview.IClusterPropertiesInternal)Property).ComputeDeploymentThreshold; set => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api202212Preview.IClusterPropertiesInternal)Property).ComputeDeploymentThreshold = value; }

        /// <summary>Internal Acessors for ConnectionStatus</summary>
        Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Support.ClusterConnectionStatus? Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api202212Preview.IClusterInternal.ConnectionStatus { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api202212Preview.IClusterPropertiesInternal)Property).ClusterConnectionStatus; set => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api202212Preview.IClusterPropertiesInternal)Property).ClusterConnectionStatus = value; }

        /// <summary>Internal Acessors for DetailedStatus</summary>
        Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Support.ClusterDetailedStatus? Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api202212Preview.IClusterInternal.DetailedStatus { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api202212Preview.IClusterPropertiesInternal)Property).DetailedStatus; set => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api202212Preview.IClusterPropertiesInternal)Property).DetailedStatus = value; }

        /// <summary>Internal Acessors for DetailedStatusMessage</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api202212Preview.IClusterInternal.DetailedStatusMessage { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api202212Preview.IClusterPropertiesInternal)Property).DetailedStatusMessage; set => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api202212Preview.IClusterPropertiesInternal)Property).DetailedStatusMessage = value; }

        /// <summary>Internal Acessors for ExtendedLocation</summary>
        Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api202212Preview.IExtendedLocation Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api202212Preview.IClusterInternal.ExtendedLocation { get => (this._extendedLocation = this._extendedLocation ?? new Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api202212Preview.ExtendedLocation()); set { {_extendedLocation = value;} } }

        /// <summary>Internal Acessors for HybridAksExtendedLocation</summary>
        Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api202212Preview.IExtendedLocation Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api202212Preview.IClusterInternal.HybridAksExtendedLocation { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api202212Preview.IClusterPropertiesInternal)Property).HybridAksExtendedLocation; set => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api202212Preview.IClusterPropertiesInternal)Property).HybridAksExtendedLocation = value; }

        /// <summary>Internal Acessors for ManagedResourceGroupConfiguration</summary>
        Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api202212Preview.IManagedResourceGroupConfiguration Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api202212Preview.IClusterInternal.ManagedResourceGroupConfiguration { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api202212Preview.IClusterPropertiesInternal)Property).ManagedResourceGroupConfiguration; set => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api202212Preview.IClusterPropertiesInternal)Property).ManagedResourceGroupConfiguration = value; }

        /// <summary>Internal Acessors for ManagerConnectionStatus</summary>
        Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Support.ClusterManagerConnectionStatus? Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api202212Preview.IClusterInternal.ManagerConnectionStatus { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api202212Preview.IClusterPropertiesInternal)Property).ClusterManagerConnectionStatus; set => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api202212Preview.IClusterPropertiesInternal)Property).ClusterManagerConnectionStatus = value; }

        /// <summary>Internal Acessors for ManagerId</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api202212Preview.IClusterInternal.ManagerId { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api202212Preview.IClusterPropertiesInternal)Property).ClusterManagerId; set => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api202212Preview.IClusterPropertiesInternal)Property).ClusterManagerId = value; }

        /// <summary>Internal Acessors for ManualActionCount</summary>
        long? Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api202212Preview.IClusterInternal.ManualActionCount { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api202212Preview.IClusterPropertiesInternal)Property).ManualActionCount; set => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api202212Preview.IClusterPropertiesInternal)Property).ManualActionCount = value; }

        /// <summary>Internal Acessors for Property</summary>
        Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api202212Preview.IClusterProperties Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api202212Preview.IClusterInternal.Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api202212Preview.ClusterProperties()); set { {_property = value;} } }

        /// <summary>Internal Acessors for ProvisioningState</summary>
        Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Support.ClusterProvisioningState? Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api202212Preview.IClusterInternal.ProvisioningState { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api202212Preview.IClusterPropertiesInternal)Property).ProvisioningState; set => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api202212Preview.IClusterPropertiesInternal)Property).ProvisioningState = value; }

        /// <summary>Internal Acessors for ServicePrincipal</summary>
        Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api202212Preview.IServicePrincipalInformation Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api202212Preview.IClusterInternal.ServicePrincipal { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api202212Preview.IClusterPropertiesInternal)Property).ClusterServicePrincipal; set => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api202212Preview.IClusterPropertiesInternal)Property).ClusterServicePrincipal = value; }

        /// <summary>Internal Acessors for SupportExpiryDate</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api202212Preview.IClusterInternal.SupportExpiryDate { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api202212Preview.IClusterPropertiesInternal)Property).SupportExpiryDate; set => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api202212Preview.IClusterPropertiesInternal)Property).SupportExpiryDate = value; }

        /// <summary>Internal Acessors for WorkloadResourceId</summary>
        string[] Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api202212Preview.IClusterInternal.WorkloadResourceId { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api202212Preview.IClusterPropertiesInternal)Property).WorkloadResourceId; set => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api202212Preview.IClusterPropertiesInternal)Property).WorkloadResourceId = value; }

        /// <summary>Internal Acessors for Id</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api30.IResourceInternal.Id { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api30.IResourceInternal)__trackedResource).Id; set => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api30.IResourceInternal)__trackedResource).Id = value; }

        /// <summary>Internal Acessors for Name</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api30.IResourceInternal.Name { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api30.IResourceInternal)__trackedResource).Name; set => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api30.IResourceInternal)__trackedResource).Name = value; }

        /// <summary>Internal Acessors for SystemData</summary>
        Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api30.ISystemData Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api30.IResourceInternal.SystemData { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api30.IResourceInternal)__trackedResource).SystemData; set => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api30.IResourceInternal)__trackedResource).SystemData = value; }

        /// <summary>Internal Acessors for Type</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api30.IResourceInternal.Type { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api30.IResourceInternal)__trackedResource).Type; set => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api30.IResourceInternal)__trackedResource).Type = value; }

        /// <summary>The name of the resource</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.PropertyOrigin.Inherited)]
        public string Name { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api30.IResourceInternal)__trackedResource).Name; }

        /// <summary>The resource ID of the Network Fabric associated with the cluster.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.PropertyOrigin.Inlined)]
        public string NetworkFabricId { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api202212Preview.IClusterPropertiesInternal)Property).NetworkFabricId; set => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api202212Preview.IClusterPropertiesInternal)Property).NetworkFabricId = value ; }

        /// <summary>Backing field for <see cref="Property" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api202212Preview.IClusterProperties _property;

        /// <summary>The list of the resource properties.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api202212Preview.IClusterProperties Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api202212Preview.ClusterProperties()); set => this._property = value; }

        /// <summary>The provisioning state of the cluster.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Support.ClusterProvisioningState? ProvisioningState { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api202212Preview.IClusterPropertiesInternal)Property).ProvisioningState; }

        /// <summary>Gets the resource group name</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.PropertyOrigin.Owned)]
        public string ResourceGroupName { get => (new global::System.Text.RegularExpressions.Regex("^/subscriptions/(?<subscriptionId>[^/]+)/resourceGroups/(?<resourceGroupName>[^/]+)/providers/", global::System.Text.RegularExpressions.RegexOptions.IgnoreCase).Match(this.Id).Success ? new global::System.Text.RegularExpressions.Regex("^/subscriptions/(?<subscriptionId>[^/]+)/resourceGroups/(?<resourceGroupName>[^/]+)/providers/", global::System.Text.RegularExpressions.RegexOptions.IgnoreCase).Match(this.Id).Groups["resourceGroupName"].Value : null); }

        /// <summary>The application ID, also known as client ID, of the service principal.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.PropertyOrigin.Inlined)]
        public string ServicePrincipalApplicationId { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api202212Preview.IClusterPropertiesInternal)Property).ClusterServicePrincipalApplicationId; set => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api202212Preview.IClusterPropertiesInternal)Property).ClusterServicePrincipalApplicationId = value ?? null; }

        /// <summary>The principal ID, also known as the object ID, of the service principal.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.PropertyOrigin.Inlined)]
        public string ServicePrincipalId { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api202212Preview.IClusterPropertiesInternal)Property).ClusterServicePrincipalId; set => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api202212Preview.IClusterPropertiesInternal)Property).ClusterServicePrincipalId = value ?? null; }

        /// <summary>The password of the service principal.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.PropertyOrigin.Inlined)]
        public string ServicePrincipalPassword { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api202212Preview.IClusterPropertiesInternal)Property).ClusterServicePrincipalPassword; set => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api202212Preview.IClusterPropertiesInternal)Property).ClusterServicePrincipalPassword = value ?? null; }

        /// <summary>
        /// The tenant ID, also known as the directory ID, of the tenant in which the service principal is created.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.PropertyOrigin.Inlined)]
        public string ServicePrincipalTenantId { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api202212Preview.IClusterPropertiesInternal)Property).ClusterServicePrincipalTenantId; set => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api202212Preview.IClusterPropertiesInternal)Property).ClusterServicePrincipalTenantId = value ?? null; }

        /// <summary>The support end date of the runtime version of the cluster.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.PropertyOrigin.Inlined)]
        public string SupportExpiryDate { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api202212Preview.IClusterPropertiesInternal)Property).SupportExpiryDate; }

        /// <summary>
        /// Azure Resource Manager metadata containing createdBy and modifiedBy information.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.PropertyOrigin.Inherited)]
        public Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api30.ISystemData SystemData { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api30.IResourceInternal)__trackedResource).SystemData; }

        /// <summary>The timestamp of resource creation (UTC).</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.PropertyOrigin.Inherited)]
        public global::System.DateTime? SystemDataCreatedAt { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api30.IResourceInternal)__trackedResource).SystemDataCreatedAt; set => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api30.IResourceInternal)__trackedResource).SystemDataCreatedAt = value ?? default(global::System.DateTime); }

        /// <summary>The identity that created the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.PropertyOrigin.Inherited)]
        public string SystemDataCreatedBy { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api30.IResourceInternal)__trackedResource).SystemDataCreatedBy; set => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api30.IResourceInternal)__trackedResource).SystemDataCreatedBy = value ?? null; }

        /// <summary>The type of identity that created the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.PropertyOrigin.Inherited)]
        public Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Support.CreatedByType? SystemDataCreatedByType { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api30.IResourceInternal)__trackedResource).SystemDataCreatedByType; set => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api30.IResourceInternal)__trackedResource).SystemDataCreatedByType = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Support.CreatedByType)""); }

        /// <summary>The timestamp of resource last modification (UTC)</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.PropertyOrigin.Inherited)]
        public global::System.DateTime? SystemDataLastModifiedAt { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api30.IResourceInternal)__trackedResource).SystemDataLastModifiedAt; set => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api30.IResourceInternal)__trackedResource).SystemDataLastModifiedAt = value ?? default(global::System.DateTime); }

        /// <summary>The identity that last modified the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.PropertyOrigin.Inherited)]
        public string SystemDataLastModifiedBy { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api30.IResourceInternal)__trackedResource).SystemDataLastModifiedBy; set => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api30.IResourceInternal)__trackedResource).SystemDataLastModifiedBy = value ?? null; }

        /// <summary>The type of identity that last modified the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.PropertyOrigin.Inherited)]
        public Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Support.CreatedByType? SystemDataLastModifiedByType { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api30.IResourceInternal)__trackedResource).SystemDataLastModifiedByType; set => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api30.IResourceInternal)__trackedResource).SystemDataLastModifiedByType = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Support.CreatedByType)""); }

        /// <summary>Resource tags.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.PropertyOrigin.Inherited)]
        public Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api30.ITrackedResourceTags Tag { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api30.ITrackedResourceInternal)__trackedResource).Tag; set => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api30.ITrackedResourceInternal)__trackedResource).Tag = value ?? null /* model class */; }

        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.PropertyOrigin.Inherited)]
        public string Type { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api30.IResourceInternal)__trackedResource).Type; }

        /// <summary>The current runtime version of the cluster.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.PropertyOrigin.Inlined)]
        public string Version { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api202212Preview.IClusterPropertiesInternal)Property).ClusterVersion; set => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api202212Preview.IClusterPropertiesInternal)Property).ClusterVersion = value ; }

        /// <summary>The list of workload resource IDs that are hosted within this cluster.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.PropertyOrigin.Inlined)]
        public string[] WorkloadResourceId { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api202212Preview.IClusterPropertiesInternal)Property).WorkloadResourceId; }

        /// <summary>Creates an new <see cref="Cluster" /> instance.</summary>
        public Cluster()
        {

        }

        /// <param name="headers"></param>
        void Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Runtime.IHeaderSerializable.ReadHeaders(global::System.Net.Http.Headers.HttpResponseHeaders headers)
        {
            if (headers.TryGetValues("Azure-AsyncOperation", out var __azureAsyncOperationHeader0))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api202212Preview.IClusterInternal)this).AzureAsyncOperation = System.Linq.Enumerable.FirstOrDefault(__azureAsyncOperationHeader0) is string __headerAzureAsyncOperationHeader0 ? __headerAzureAsyncOperationHeader0 : (string)null;
            }
        }

        /// <summary>Validates that this object meets the validation criteria.</summary>
        /// <param name="eventListener">an <see cref="Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Runtime.IEventListener" /> instance that will receive validation
        /// events.</param>
        /// <returns>
        /// A <see cref = "global::System.Threading.Tasks.Task" /> that will be complete when validation is completed.
        /// </returns>
        public async global::System.Threading.Tasks.Task Validate(Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Runtime.IEventListener eventListener)
        {
            await eventListener.AssertNotNull(nameof(__trackedResource), __trackedResource);
            await eventListener.AssertObjectIsValid(nameof(__trackedResource), __trackedResource);
        }
    }
    /// Cluster represents the on-premises Network Cloud cluster.
    public partial interface ICluster :
        Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Runtime.IJsonSerializable,
        Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api30.ITrackedResource
    {
        /// <summary>The zone name used for this rack when created.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The zone name used for this rack when created.",
        SerializedName = @"availabilityZone",
        PossibleTypes = new [] { typeof(string) })]
        string AggregatorOrSingleRackDefinitionAvailabilityZone { get; set; }
        /// <summary>The unordered list of bare metal machine configuration.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The unordered list of bare metal machine configuration.",
        SerializedName = @"bareMetalMachineConfigurationData",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api202212Preview.IBareMetalMachineConfigurationData) })]
        Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api202212Preview.IBareMetalMachineConfigurationData[] AggregatorOrSingleRackDefinitionBareMetalMachineConfigurationData { get; set; }
        /// <summary>The resource ID of the network rack that matches this rack definition.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"The resource ID of the network rack that matches this rack definition.",
        SerializedName = @"networkRackId",
        PossibleTypes = new [] { typeof(string) })]
        string AggregatorOrSingleRackDefinitionNetworkRackId { get; set; }
        /// <summary>The free-form description of the rack's location.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The free-form description of the rack's location.",
        SerializedName = @"rackLocation",
        PossibleTypes = new [] { typeof(string) })]
        string AggregatorOrSingleRackDefinitionRackLocation { get; set; }
        /// <summary>
        /// The unique identifier for the rack within Network Cloud cluster. An alternate unique alphanumeric value other than a serial
        /// number may be provided if desired.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"The unique identifier for the rack within Network Cloud cluster. An alternate unique alphanumeric value other than a serial number may be provided if desired.",
        SerializedName = @"rackSerialNumber",
        PossibleTypes = new [] { typeof(string) })]
        string AggregatorOrSingleRackDefinitionRackSerialNumber { get; set; }
        /// <summary>The resource ID of the sku for the rack being added.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"The resource ID of the sku for the rack being added.",
        SerializedName = @"rackSkuId",
        PossibleTypes = new [] { typeof(string) })]
        string AggregatorOrSingleRackDefinitionRackSkuId { get; set; }
        /// <summary>The list of storage appliance configuration data for this rack.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The list of storage appliance configuration data for this rack.",
        SerializedName = @"storageApplianceConfigurationData",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api202212Preview.IStorageApplianceConfigurationData) })]
        Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api202212Preview.IStorageApplianceConfigurationData[] AggregatorOrSingleRackDefinitionStorageApplianceConfigurationData { get; set; }
        /// <summary>
        /// The resource ID of the Log Analytics Workspace that will be used for storing relevant logs.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"The resource ID of the Log Analytics Workspace that will be used for storing relevant logs.",
        SerializedName = @"analyticsWorkspaceId",
        PossibleTypes = new [] { typeof(string) })]
        string AnalyticsWorkspaceId { get; set; }
        /// <summary>The list of cluster runtime version upgrades available for this cluster.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The list of cluster runtime version upgrades available for this cluster.",
        SerializedName = @"availableUpgradeVersions",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api202212Preview.IClusterAvailableUpgradeVersion) })]
        Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api202212Preview.IClusterAvailableUpgradeVersion[] AvailableUpgradeVersion { get;  }

        [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"",
        SerializedName = @"Azure-AsyncOperation",
        PossibleTypes = new [] { typeof(string) })]
        string AzureAsyncOperation { get; set; }
        /// <summary>The remaining appliance-based storage in GB available for workload use.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The remaining appliance-based storage in GB available for workload use.",
        SerializedName = @"availableApplianceStorageGB",
        PossibleTypes = new [] { typeof(long) })]
        long? CapacityAvailableApplianceStorageGb { get; set; }
        /// <summary>
        /// The remaining number of cores that are available in this cluster for workload use.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The remaining number of cores that are available in this cluster for workload use.",
        SerializedName = @"availableCoreCount",
        PossibleTypes = new [] { typeof(long) })]
        long? CapacityAvailableCoreCount { get; set; }
        /// <summary>The remaining machine or host-based storage in GB available for workload use.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The remaining machine or host-based storage in GB available for workload use.",
        SerializedName = @"availableHostStorageGB",
        PossibleTypes = new [] { typeof(long) })]
        long? CapacityAvailableHostStorageGb { get; set; }
        /// <summary>The remaining memory in GB that are available in this cluster for workload use.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The remaining memory in GB that are available in this cluster for workload use.",
        SerializedName = @"availableMemoryGB",
        PossibleTypes = new [] { typeof(long) })]
        long? CapacityAvailableMemoryGb { get; set; }
        /// <summary>
        /// The total appliance-based storage in GB supported by this cluster for workload use.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The total appliance-based storage in GB supported by this cluster for workload use.",
        SerializedName = @"totalApplianceStorageGB",
        PossibleTypes = new [] { typeof(long) })]
        long? CapacityTotalApplianceStorageGb { get; set; }
        /// <summary>The total number of cores that are supported by this cluster for workload use.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The total number of cores that are supported by this cluster for workload use.",
        SerializedName = @"totalCoreCount",
        PossibleTypes = new [] { typeof(long) })]
        long? CapacityTotalCoreCount { get; set; }
        /// <summary>
        /// The total machine or host-based storage in GB supported by this cluster for workload use.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The total machine or host-based storage in GB supported by this cluster for workload use.",
        SerializedName = @"totalHostStorageGB",
        PossibleTypes = new [] { typeof(long) })]
        long? CapacityTotalHostStorageGb { get; set; }
        /// <summary>The total memory supported by this cluster for workload use.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The total memory supported by this cluster for workload use.",
        SerializedName = @"totalMemoryGB",
        PossibleTypes = new [] { typeof(long) })]
        long? CapacityTotalMemoryGb { get; set; }
        /// <summary>The resource ID of the extended location on which the resource will be created.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The resource ID of the extended location on which the resource will be created.",
        SerializedName = @"name",
        PossibleTypes = new [] { typeof(string) })]
        string ClusterExtendedLocationName { get; set; }
        /// <summary>The extended location type, for example, CustomLocation.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The extended location type, for example, CustomLocation.",
        SerializedName = @"type",
        PossibleTypes = new [] { typeof(string) })]
        string ClusterExtendedLocationType { get; set; }
        /// <summary>
        /// The customer-provided location information to identify where the cluster resides.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The customer-provided location information to identify where the cluster resides.",
        SerializedName = @"clusterLocation",
        PossibleTypes = new [] { typeof(string) })]
        string ClusterLocation { get; set; }
        /// <summary>The type of rack configuration for the cluster.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"The type of rack configuration for the cluster.",
        SerializedName = @"clusterType",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Support.ClusterType) })]
        Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Support.ClusterType ClusterType { get; set; }
        /// <summary>Selection of how the type evaluation is applied to the cluster calculation.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Selection of how the type evaluation is applied to the cluster calculation.",
        SerializedName = @"grouping",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Support.ValidationThresholdGrouping) })]
        Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Support.ValidationThresholdGrouping? ComputeDeploymentThresholdGrouping { get; set; }
        /// <summary>Selection of how the threshold should be evaluated.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Selection of how the threshold should be evaluated.",
        SerializedName = @"type",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Support.ValidationThresholdType) })]
        Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Support.ValidationThresholdType? ComputeDeploymentThresholdType { get; set; }
        /// <summary>The numeric threshold value.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The numeric threshold value.",
        SerializedName = @"value",
        PossibleTypes = new [] { typeof(long) })]
        long? ComputeDeploymentThresholdValue { get; set; }
        /// <summary>
        /// The list of rack definitions for the compute racks in a multi-rack
        /// cluster, or an empty list in a single-rack cluster.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The list of rack definitions for the compute racks in a multi-rack
        cluster, or an empty list in a single-rack cluster.",
        SerializedName = @"computeRackDefinitions",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api202212Preview.IRackDefinition) })]
        Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api202212Preview.IRackDefinition[] ComputeRackDefinition { get; set; }
        /// <summary>The latest heartbeat status between the cluster manager and the cluster.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The latest heartbeat status between the cluster manager and the cluster.",
        SerializedName = @"clusterConnectionStatus",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Support.ClusterConnectionStatus) })]
        Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Support.ClusterConnectionStatus? ConnectionStatus { get;  }
        /// <summary>The current detailed status of the cluster.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The current detailed status of the cluster.",
        SerializedName = @"detailedStatus",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Support.ClusterDetailedStatus) })]
        Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Support.ClusterDetailedStatus? DetailedStatus { get;  }
        /// <summary>The descriptive message about the detailed status.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The descriptive message about the detailed status.",
        SerializedName = @"detailedStatusMessage",
        PossibleTypes = new [] { typeof(string) })]
        string DetailedStatusMessage { get;  }
        /// <summary>The resource ID of the extended location on which the resource will be created.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"The resource ID of the extended location on which the resource will be created.",
        SerializedName = @"name",
        PossibleTypes = new [] { typeof(string) })]
        string ExtendedLocationName { get; set; }
        /// <summary>The extended location type, for example, CustomLocation.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"The extended location type, for example, CustomLocation.",
        SerializedName = @"type",
        PossibleTypes = new [] { typeof(string) })]
        string ExtendedLocationType { get; set; }
        /// <summary>The resource ID of the extended location on which the resource will be created.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The resource ID of the extended location on which the resource will be created.",
        SerializedName = @"name",
        PossibleTypes = new [] { typeof(string) })]
        string HybridAkExtendedLocationName { get; set; }
        /// <summary>The extended location type, for example, CustomLocation.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The extended location type, for example, CustomLocation.",
        SerializedName = @"type",
        PossibleTypes = new [] { typeof(string) })]
        string HybridAkExtendedLocationType { get; set; }
        /// <summary>
        /// The location of the managed resource group. If not specified, the location of the parent resource is chosen.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The location of the managed resource group. If not specified, the location of the parent resource is chosen.",
        SerializedName = @"location",
        PossibleTypes = new [] { typeof(string) })]
        string ManagedResourceGroupConfigurationLocation { get; set; }
        /// <summary>
        /// The name for the managed resource group. If not specified, the unique name is automatically generated.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The name for the managed resource group. If not specified, the unique name is automatically generated.",
        SerializedName = @"name",
        PossibleTypes = new [] { typeof(string) })]
        string ManagedResourceGroupConfigurationName { get; set; }
        /// <summary>The latest connectivity status between cluster manager and the cluster.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The latest connectivity status between cluster manager and the cluster.",
        SerializedName = @"clusterManagerConnectionStatus",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Support.ClusterManagerConnectionStatus) })]
        Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Support.ClusterManagerConnectionStatus? ManagerConnectionStatus { get;  }
        /// <summary>
        /// The resource ID of the cluster manager that manages this cluster. This is set by the Cluster Manager when the cluster
        /// is created.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The resource ID of the cluster manager that manages this cluster. This is set by the Cluster Manager when the cluster is created.",
        SerializedName = @"clusterManagerId",
        PossibleTypes = new [] { typeof(string) })]
        string ManagerId { get;  }
        /// <summary>The count of Manual Action Taken (MAT) events that have not been validated.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The count of Manual Action Taken (MAT) events that have not been validated.",
        SerializedName = @"manualActionCount",
        PossibleTypes = new [] { typeof(long) })]
        long? ManualActionCount { get;  }
        /// <summary>The resource ID of the Network Fabric associated with the cluster.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"The resource ID of the Network Fabric associated with the cluster.",
        SerializedName = @"networkFabricId",
        PossibleTypes = new [] { typeof(string) })]
        string NetworkFabricId { get; set; }
        /// <summary>The provisioning state of the cluster.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The provisioning state of the cluster.",
        SerializedName = @"provisioningState",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Support.ClusterProvisioningState) })]
        Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Support.ClusterProvisioningState? ProvisioningState { get;  }
        /// <summary>The application ID, also known as client ID, of the service principal.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The application ID, also known as client ID, of the service principal.",
        SerializedName = @"applicationId",
        PossibleTypes = new [] { typeof(string) })]
        string ServicePrincipalApplicationId { get; set; }
        /// <summary>The principal ID, also known as the object ID, of the service principal.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The principal ID, also known as the object ID, of the service principal.",
        SerializedName = @"principalId",
        PossibleTypes = new [] { typeof(string) })]
        string ServicePrincipalId { get; set; }
        /// <summary>The password of the service principal.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The password of the service principal.",
        SerializedName = @"password",
        PossibleTypes = new [] { typeof(string) })]
        string ServicePrincipalPassword { get; set; }
        /// <summary>
        /// The tenant ID, also known as the directory ID, of the tenant in which the service principal is created.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The tenant ID, also known as the directory ID, of the tenant in which the service principal is created.",
        SerializedName = @"tenantId",
        PossibleTypes = new [] { typeof(string) })]
        string ServicePrincipalTenantId { get; set; }
        /// <summary>The support end date of the runtime version of the cluster.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The support end date of the runtime version of the cluster.",
        SerializedName = @"supportExpiryDate",
        PossibleTypes = new [] { typeof(string) })]
        string SupportExpiryDate { get;  }
        /// <summary>The current runtime version of the cluster.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"The current runtime version of the cluster.",
        SerializedName = @"clusterVersion",
        PossibleTypes = new [] { typeof(string) })]
        string Version { get; set; }
        /// <summary>The list of workload resource IDs that are hosted within this cluster.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The list of workload resource IDs that are hosted within this cluster.",
        SerializedName = @"workloadResourceIds",
        PossibleTypes = new [] { typeof(string) })]
        string[] WorkloadResourceId { get;  }

    }
    /// Cluster represents the on-premises Network Cloud cluster.
    internal partial interface IClusterInternal :
        Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api30.ITrackedResourceInternal
    {
        /// <summary>
        /// The rack definition that is intended to reflect only a single rack in a single rack cluster, or an aggregator rack in
        /// a multi-rack cluster.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api202212Preview.IRackDefinition AggregatorOrSingleRackDefinition { get; set; }
        /// <summary>The zone name used for this rack when created.</summary>
        string AggregatorOrSingleRackDefinitionAvailabilityZone { get; set; }
        /// <summary>The unordered list of bare metal machine configuration.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api202212Preview.IBareMetalMachineConfigurationData[] AggregatorOrSingleRackDefinitionBareMetalMachineConfigurationData { get; set; }
        /// <summary>The resource ID of the network rack that matches this rack definition.</summary>
        string AggregatorOrSingleRackDefinitionNetworkRackId { get; set; }
        /// <summary>The free-form description of the rack's location.</summary>
        string AggregatorOrSingleRackDefinitionRackLocation { get; set; }
        /// <summary>
        /// The unique identifier for the rack within Network Cloud cluster. An alternate unique alphanumeric value other than a serial
        /// number may be provided if desired.
        /// </summary>
        string AggregatorOrSingleRackDefinitionRackSerialNumber { get; set; }
        /// <summary>The resource ID of the sku for the rack being added.</summary>
        string AggregatorOrSingleRackDefinitionRackSkuId { get; set; }
        /// <summary>The list of storage appliance configuration data for this rack.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api202212Preview.IStorageApplianceConfigurationData[] AggregatorOrSingleRackDefinitionStorageApplianceConfigurationData { get; set; }
        /// <summary>
        /// The resource ID of the Log Analytics Workspace that will be used for storing relevant logs.
        /// </summary>
        string AnalyticsWorkspaceId { get; set; }
        /// <summary>The list of cluster runtime version upgrades available for this cluster.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api202212Preview.IClusterAvailableUpgradeVersion[] AvailableUpgradeVersion { get; set; }

        string AzureAsyncOperation { get; set; }
        /// <summary>The capacity supported by this cluster.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api202212Preview.IClusterCapacity Capacity { get; set; }
        /// <summary>The remaining appliance-based storage in GB available for workload use.</summary>
        long? CapacityAvailableApplianceStorageGb { get; set; }
        /// <summary>
        /// The remaining number of cores that are available in this cluster for workload use.
        /// </summary>
        long? CapacityAvailableCoreCount { get; set; }
        /// <summary>The remaining machine or host-based storage in GB available for workload use.</summary>
        long? CapacityAvailableHostStorageGb { get; set; }
        /// <summary>The remaining memory in GB that are available in this cluster for workload use.</summary>
        long? CapacityAvailableMemoryGb { get; set; }
        /// <summary>
        /// The total appliance-based storage in GB supported by this cluster for workload use.
        /// </summary>
        long? CapacityTotalApplianceStorageGb { get; set; }
        /// <summary>The total number of cores that are supported by this cluster for workload use.</summary>
        long? CapacityTotalCoreCount { get; set; }
        /// <summary>
        /// The total machine or host-based storage in GB supported by this cluster for workload use.
        /// </summary>
        long? CapacityTotalHostStorageGb { get; set; }
        /// <summary>The total memory supported by this cluster for workload use.</summary>
        long? CapacityTotalMemoryGb { get; set; }
        /// <summary>
        /// The extended location (custom location) that represents the cluster's control plane location. This extended location is
        /// used to route the requests of child objects of the cluster that are handled by the platform operator.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api202212Preview.IExtendedLocation ClusterExtendedLocation { get; set; }
        /// <summary>The resource ID of the extended location on which the resource will be created.</summary>
        string ClusterExtendedLocationName { get; set; }
        /// <summary>The extended location type, for example, CustomLocation.</summary>
        string ClusterExtendedLocationType { get; set; }
        /// <summary>
        /// The customer-provided location information to identify where the cluster resides.
        /// </summary>
        string ClusterLocation { get; set; }
        /// <summary>The type of rack configuration for the cluster.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Support.ClusterType ClusterType { get; set; }
        /// <summary>
        /// The validation threshold indicating the allowable failures of compute machines during environment validation and deployment.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api202212Preview.IValidationThreshold ComputeDeploymentThreshold { get; set; }
        /// <summary>Selection of how the type evaluation is applied to the cluster calculation.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Support.ValidationThresholdGrouping? ComputeDeploymentThresholdGrouping { get; set; }
        /// <summary>Selection of how the threshold should be evaluated.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Support.ValidationThresholdType? ComputeDeploymentThresholdType { get; set; }
        /// <summary>The numeric threshold value.</summary>
        long? ComputeDeploymentThresholdValue { get; set; }
        /// <summary>
        /// The list of rack definitions for the compute racks in a multi-rack
        /// cluster, or an empty list in a single-rack cluster.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api202212Preview.IRackDefinition[] ComputeRackDefinition { get; set; }
        /// <summary>The latest heartbeat status between the cluster manager and the cluster.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Support.ClusterConnectionStatus? ConnectionStatus { get; set; }
        /// <summary>The current detailed status of the cluster.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Support.ClusterDetailedStatus? DetailedStatus { get; set; }
        /// <summary>The descriptive message about the detailed status.</summary>
        string DetailedStatusMessage { get; set; }
        /// <summary>The extended location of the cluster manager associated with the cluster.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api202212Preview.IExtendedLocation ExtendedLocation { get; set; }
        /// <summary>The resource ID of the extended location on which the resource will be created.</summary>
        string ExtendedLocationName { get; set; }
        /// <summary>The extended location type, for example, CustomLocation.</summary>
        string ExtendedLocationType { get; set; }
        /// <summary>The resource ID of the extended location on which the resource will be created.</summary>
        string HybridAkExtendedLocationName { get; set; }
        /// <summary>The extended location type, for example, CustomLocation.</summary>
        string HybridAkExtendedLocationType { get; set; }
        /// <summary>
        /// The extended location (custom location) that represents the Hybrid AKS control plane location. This extended location
        /// is used when creating provisioned clusters (Hybrid AKS clusters).
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api202212Preview.IExtendedLocation HybridAksExtendedLocation { get; set; }
        /// <summary>The configuration of the managed resource group associated with the resource.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api202212Preview.IManagedResourceGroupConfiguration ManagedResourceGroupConfiguration { get; set; }
        /// <summary>
        /// The location of the managed resource group. If not specified, the location of the parent resource is chosen.
        /// </summary>
        string ManagedResourceGroupConfigurationLocation { get; set; }
        /// <summary>
        /// The name for the managed resource group. If not specified, the unique name is automatically generated.
        /// </summary>
        string ManagedResourceGroupConfigurationName { get; set; }
        /// <summary>The latest connectivity status between cluster manager and the cluster.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Support.ClusterManagerConnectionStatus? ManagerConnectionStatus { get; set; }
        /// <summary>
        /// The resource ID of the cluster manager that manages this cluster. This is set by the Cluster Manager when the cluster
        /// is created.
        /// </summary>
        string ManagerId { get; set; }
        /// <summary>The count of Manual Action Taken (MAT) events that have not been validated.</summary>
        long? ManualActionCount { get; set; }
        /// <summary>The resource ID of the Network Fabric associated with the cluster.</summary>
        string NetworkFabricId { get; set; }
        /// <summary>The list of the resource properties.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api202212Preview.IClusterProperties Property { get; set; }
        /// <summary>The provisioning state of the cluster.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Support.ClusterProvisioningState? ProvisioningState { get; set; }
        /// <summary>
        /// The service principal to be used by the cluster during Arc Appliance installation.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api202212Preview.IServicePrincipalInformation ServicePrincipal { get; set; }
        /// <summary>The application ID, also known as client ID, of the service principal.</summary>
        string ServicePrincipalApplicationId { get; set; }
        /// <summary>The principal ID, also known as the object ID, of the service principal.</summary>
        string ServicePrincipalId { get; set; }
        /// <summary>The password of the service principal.</summary>
        string ServicePrincipalPassword { get; set; }
        /// <summary>
        /// The tenant ID, also known as the directory ID, of the tenant in which the service principal is created.
        /// </summary>
        string ServicePrincipalTenantId { get; set; }
        /// <summary>The support end date of the runtime version of the cluster.</summary>
        string SupportExpiryDate { get; set; }
        /// <summary>The current runtime version of the cluster.</summary>
        string Version { get; set; }
        /// <summary>The list of workload resource IDs that are hosted within this cluster.</summary>
        string[] WorkloadResourceId { get; set; }

    }
}