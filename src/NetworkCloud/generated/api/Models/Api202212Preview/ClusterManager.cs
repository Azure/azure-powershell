// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api202212Preview
{
    using static Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Runtime.Extensions;

    /// <summary>
    /// ClusterManager represents a control-plane to manage one or more on-premises clusters.
    /// </summary>
    public partial class ClusterManager :
        Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api202212Preview.IClusterManager,
        Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api202212Preview.IClusterManagerInternal,
        Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Runtime.IValidates,
        Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Runtime.IHeaderSerializable
    {
        /// <summary>
        /// Backing field for Inherited model <see cref= "Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api30.ITrackedResource"
        /// />
        /// </summary>
        private Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api30.ITrackedResource __trackedResource = new Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api30.TrackedResource();

        /// <summary>
        /// The resource ID of the Log Analytics workspace that is used for the logs collection.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.PropertyOrigin.Inlined)]
        public string AnalyticsWorkspaceId { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api202212Preview.IClusterManagerPropertiesInternal)Property).AnalyticsWorkspaceId; set => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api202212Preview.IClusterManagerPropertiesInternal)Property).AnalyticsWorkspaceId = value ?? null; }

        /// <summary>
        /// Field deprecated, this value will no longer influence the cluster manager allocation process and will be removed in a
        /// future version. The Azure availability zones within the region that will be used to support the cluster manager resource.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.PropertyOrigin.Inlined)]
        public string[] AvailabilityZone { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api202212Preview.IClusterManagerPropertiesInternal)Property).AvailabilityZone; set => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api202212Preview.IClusterManagerPropertiesInternal)Property).AvailabilityZone = value ?? null /* arrayOf */; }

        /// <summary>Backing field for <see cref="AzureAsyncOperation" /> property.</summary>
        private string _azureAsyncOperation;

        [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.PropertyOrigin.Owned)]
        public string AzureAsyncOperation { get => this._azureAsyncOperation; set => this._azureAsyncOperation = value; }

        /// <summary>
        /// The list of the cluster versions the manager supports. It is used as input in clusterVersion property of a cluster resource.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api202212Preview.IClusterAvailableVersion[] ClusterVersion { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api202212Preview.IClusterManagerPropertiesInternal)Property).ClusterVersion; }

        /// <summary>
        /// The detailed status that provides additional information about the cluster manager.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Support.ClusterManagerDetailedStatus? DetailedStatus { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api202212Preview.IClusterManagerPropertiesInternal)Property).DetailedStatus; }

        /// <summary>The descriptive message about the current detailed status.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.PropertyOrigin.Inlined)]
        public string DetailedStatusMessage { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api202212Preview.IClusterManagerPropertiesInternal)Property).DetailedStatusMessage; }

        /// <summary>
        /// The resource ID of the fabric controller that has one to one mapping with the cluster manager.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.PropertyOrigin.Inlined)]
        public string FabricControllerId { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api202212Preview.IClusterManagerPropertiesInternal)Property).FabricControllerId; set => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api202212Preview.IClusterManagerPropertiesInternal)Property).FabricControllerId = value ; }

        /// <summary>
        /// Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.PropertyOrigin.Inherited)]
        public string Id { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api30.IResourceInternal)__trackedResource).Id; }

        /// <summary>The geo-location where the resource lives</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.PropertyOrigin.Inherited)]
        public string Location { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api30.ITrackedResourceInternal)__trackedResource).Location; set => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api30.ITrackedResourceInternal)__trackedResource).Location = value ; }

        /// <summary>
        /// The location of the managed resource group. If not specified, the location of the parent resource is chosen.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.PropertyOrigin.Inlined)]
        public string ManagedResourceGroupConfigurationLocation { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api202212Preview.IClusterManagerPropertiesInternal)Property).ManagedResourceGroupConfigurationLocation; set => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api202212Preview.IClusterManagerPropertiesInternal)Property).ManagedResourceGroupConfigurationLocation = value ?? null; }

        /// <summary>
        /// The name for the managed resource group. If not specified, the unique name is automatically generated.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.PropertyOrigin.Inlined)]
        public string ManagedResourceGroupConfigurationName { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api202212Preview.IClusterManagerPropertiesInternal)Property).ManagedResourceGroupConfigurationName; set => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api202212Preview.IClusterManagerPropertiesInternal)Property).ManagedResourceGroupConfigurationName = value ?? null; }

        /// <summary>The resource ID of the extended location on which the resource will be created.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.PropertyOrigin.Inlined)]
        public string ManagerExtendedLocationName { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api202212Preview.IClusterManagerPropertiesInternal)Property).ManagerExtendedLocationName; set => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api202212Preview.IClusterManagerPropertiesInternal)Property).ManagerExtendedLocationName = value ?? null; }

        /// <summary>The extended location type, for example, CustomLocation.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.PropertyOrigin.Inlined)]
        public string ManagerExtendedLocationType { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api202212Preview.IClusterManagerPropertiesInternal)Property).ManagerExtendedLocationType; set => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api202212Preview.IClusterManagerPropertiesInternal)Property).ManagerExtendedLocationType = value ?? null; }

        /// <summary>Internal Acessors for ClusterVersion</summary>
        Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api202212Preview.IClusterAvailableVersion[] Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api202212Preview.IClusterManagerInternal.ClusterVersion { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api202212Preview.IClusterManagerPropertiesInternal)Property).ClusterVersion; set => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api202212Preview.IClusterManagerPropertiesInternal)Property).ClusterVersion = value; }

        /// <summary>Internal Acessors for DetailedStatus</summary>
        Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Support.ClusterManagerDetailedStatus? Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api202212Preview.IClusterManagerInternal.DetailedStatus { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api202212Preview.IClusterManagerPropertiesInternal)Property).DetailedStatus; set => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api202212Preview.IClusterManagerPropertiesInternal)Property).DetailedStatus = value; }

        /// <summary>Internal Acessors for DetailedStatusMessage</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api202212Preview.IClusterManagerInternal.DetailedStatusMessage { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api202212Preview.IClusterManagerPropertiesInternal)Property).DetailedStatusMessage; set => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api202212Preview.IClusterManagerPropertiesInternal)Property).DetailedStatusMessage = value; }

        /// <summary>Internal Acessors for ManagedResourceGroupConfiguration</summary>
        Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api202212Preview.IManagedResourceGroupConfiguration Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api202212Preview.IClusterManagerInternal.ManagedResourceGroupConfiguration { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api202212Preview.IClusterManagerPropertiesInternal)Property).ManagedResourceGroupConfiguration; set => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api202212Preview.IClusterManagerPropertiesInternal)Property).ManagedResourceGroupConfiguration = value; }

        /// <summary>Internal Acessors for ManagerExtendedLocation</summary>
        Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api202212Preview.IExtendedLocation Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api202212Preview.IClusterManagerInternal.ManagerExtendedLocation { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api202212Preview.IClusterManagerPropertiesInternal)Property).ManagerExtendedLocation; set => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api202212Preview.IClusterManagerPropertiesInternal)Property).ManagerExtendedLocation = value; }

        /// <summary>Internal Acessors for Property</summary>
        Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api202212Preview.IClusterManagerProperties Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api202212Preview.IClusterManagerInternal.Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api202212Preview.ClusterManagerProperties()); set { {_property = value;} } }

        /// <summary>Internal Acessors for ProvisioningState</summary>
        Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Support.ClusterManagerProvisioningState? Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api202212Preview.IClusterManagerInternal.ProvisioningState { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api202212Preview.IClusterManagerPropertiesInternal)Property).ProvisioningState; set => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api202212Preview.IClusterManagerPropertiesInternal)Property).ProvisioningState = value; }

        /// <summary>Internal Acessors for Id</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api30.IResourceInternal.Id { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api30.IResourceInternal)__trackedResource).Id; set => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api30.IResourceInternal)__trackedResource).Id = value; }

        /// <summary>Internal Acessors for Name</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api30.IResourceInternal.Name { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api30.IResourceInternal)__trackedResource).Name; set => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api30.IResourceInternal)__trackedResource).Name = value; }

        /// <summary>Internal Acessors for SystemData</summary>
        Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api30.ISystemData Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api30.IResourceInternal.SystemData { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api30.IResourceInternal)__trackedResource).SystemData; set => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api30.IResourceInternal)__trackedResource).SystemData = value; }

        /// <summary>Internal Acessors for Type</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api30.IResourceInternal.Type { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api30.IResourceInternal)__trackedResource).Type; set => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api30.IResourceInternal)__trackedResource).Type = value; }

        /// <summary>The name of the resource</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.PropertyOrigin.Inherited)]
        public string Name { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api30.IResourceInternal)__trackedResource).Name; }

        /// <summary>Backing field for <see cref="Property" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api202212Preview.IClusterManagerProperties _property;

        /// <summary>The list of the resource properties.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api202212Preview.IClusterManagerProperties Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api202212Preview.ClusterManagerProperties()); set => this._property = value; }

        /// <summary>The provisioning state of the cluster manager.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Support.ClusterManagerProvisioningState? ProvisioningState { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api202212Preview.IClusterManagerPropertiesInternal)Property).ProvisioningState; }

        /// <summary>Gets the resource group name</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.PropertyOrigin.Owned)]
        public string ResourceGroupName { get => (new global::System.Text.RegularExpressions.Regex("^/subscriptions/(?<subscriptionId>[^/]+)/resourceGroups/(?<resourceGroupName>[^/]+)/providers/", global::System.Text.RegularExpressions.RegexOptions.IgnoreCase).Match(this.Id).Success ? new global::System.Text.RegularExpressions.Regex("^/subscriptions/(?<subscriptionId>[^/]+)/resourceGroups/(?<resourceGroupName>[^/]+)/providers/", global::System.Text.RegularExpressions.RegexOptions.IgnoreCase).Match(this.Id).Groups["resourceGroupName"].Value : null); }

        /// <summary>
        /// Azure Resource Manager metadata containing createdBy and modifiedBy information.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.PropertyOrigin.Inherited)]
        public Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api30.ISystemData SystemData { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api30.IResourceInternal)__trackedResource).SystemData; }

        /// <summary>The timestamp of resource creation (UTC).</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.PropertyOrigin.Inherited)]
        public global::System.DateTime? SystemDataCreatedAt { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api30.IResourceInternal)__trackedResource).SystemDataCreatedAt; set => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api30.IResourceInternal)__trackedResource).SystemDataCreatedAt = value ?? default(global::System.DateTime); }

        /// <summary>The identity that created the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.PropertyOrigin.Inherited)]
        public string SystemDataCreatedBy { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api30.IResourceInternal)__trackedResource).SystemDataCreatedBy; set => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api30.IResourceInternal)__trackedResource).SystemDataCreatedBy = value ?? null; }

        /// <summary>The type of identity that created the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.PropertyOrigin.Inherited)]
        public Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Support.CreatedByType? SystemDataCreatedByType { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api30.IResourceInternal)__trackedResource).SystemDataCreatedByType; set => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api30.IResourceInternal)__trackedResource).SystemDataCreatedByType = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Support.CreatedByType)""); }

        /// <summary>The timestamp of resource last modification (UTC)</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.PropertyOrigin.Inherited)]
        public global::System.DateTime? SystemDataLastModifiedAt { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api30.IResourceInternal)__trackedResource).SystemDataLastModifiedAt; set => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api30.IResourceInternal)__trackedResource).SystemDataLastModifiedAt = value ?? default(global::System.DateTime); }

        /// <summary>The identity that last modified the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.PropertyOrigin.Inherited)]
        public string SystemDataLastModifiedBy { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api30.IResourceInternal)__trackedResource).SystemDataLastModifiedBy; set => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api30.IResourceInternal)__trackedResource).SystemDataLastModifiedBy = value ?? null; }

        /// <summary>The type of identity that last modified the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.PropertyOrigin.Inherited)]
        public Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Support.CreatedByType? SystemDataLastModifiedByType { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api30.IResourceInternal)__trackedResource).SystemDataLastModifiedByType; set => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api30.IResourceInternal)__trackedResource).SystemDataLastModifiedByType = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Support.CreatedByType)""); }

        /// <summary>Resource tags.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.PropertyOrigin.Inherited)]
        public Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api30.ITrackedResourceTags Tag { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api30.ITrackedResourceInternal)__trackedResource).Tag; set => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api30.ITrackedResourceInternal)__trackedResource).Tag = value ?? null /* model class */; }

        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.PropertyOrigin.Inherited)]
        public string Type { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api30.IResourceInternal)__trackedResource).Type; }

        /// <summary>
        /// Field deprecated, this value will no longer influence the cluster manager allocation process and will be removed in a
        /// future version. The size of the Azure virtual machines to use for hosting the cluster manager resource.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.PropertyOrigin.Inlined)]
        public string VMSize { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api202212Preview.IClusterManagerPropertiesInternal)Property).VMSize; set => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api202212Preview.IClusterManagerPropertiesInternal)Property).VMSize = value ?? null; }

        /// <summary>Creates an new <see cref="ClusterManager" /> instance.</summary>
        public ClusterManager()
        {

        }

        /// <param name="headers"></param>
        void Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Runtime.IHeaderSerializable.ReadHeaders(global::System.Net.Http.Headers.HttpResponseHeaders headers)
        {
            if (headers.TryGetValues("Azure-AsyncOperation", out var __azureAsyncOperationHeader0))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api202212Preview.IClusterManagerInternal)this).AzureAsyncOperation = System.Linq.Enumerable.FirstOrDefault(__azureAsyncOperationHeader0) is string __headerAzureAsyncOperationHeader0 ? __headerAzureAsyncOperationHeader0 : (string)null;
            }
        }

        /// <summary>Validates that this object meets the validation criteria.</summary>
        /// <param name="eventListener">an <see cref="Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Runtime.IEventListener" /> instance that will receive validation
        /// events.</param>
        /// <returns>
        /// A <see cref = "global::System.Threading.Tasks.Task" /> that will be complete when validation is completed.
        /// </returns>
        public async global::System.Threading.Tasks.Task Validate(Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Runtime.IEventListener eventListener)
        {
            await eventListener.AssertNotNull(nameof(__trackedResource), __trackedResource);
            await eventListener.AssertObjectIsValid(nameof(__trackedResource), __trackedResource);
        }
    }
    /// ClusterManager represents a control-plane to manage one or more on-premises clusters.
    public partial interface IClusterManager :
        Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Runtime.IJsonSerializable,
        Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api30.ITrackedResource
    {
        /// <summary>
        /// The resource ID of the Log Analytics workspace that is used for the logs collection.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The resource ID of the Log Analytics workspace that is used for the logs collection.",
        SerializedName = @"analyticsWorkspaceId",
        PossibleTypes = new [] { typeof(string) })]
        string AnalyticsWorkspaceId { get; set; }
        /// <summary>
        /// Field deprecated, this value will no longer influence the cluster manager allocation process and will be removed in a
        /// future version. The Azure availability zones within the region that will be used to support the cluster manager resource.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Field deprecated, this value will no longer influence the cluster manager allocation process and will be removed in a future version. The Azure availability zones within the region that will be used to support the cluster manager resource.",
        SerializedName = @"availabilityZones",
        PossibleTypes = new [] { typeof(string) })]
        string[] AvailabilityZone { get; set; }

        [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"",
        SerializedName = @"Azure-AsyncOperation",
        PossibleTypes = new [] { typeof(string) })]
        string AzureAsyncOperation { get; set; }
        /// <summary>
        /// The list of the cluster versions the manager supports. It is used as input in clusterVersion property of a cluster resource.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The list of the cluster versions the manager supports. It is used as input in clusterVersion property of a cluster resource.",
        SerializedName = @"clusterVersions",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api202212Preview.IClusterAvailableVersion) })]
        Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api202212Preview.IClusterAvailableVersion[] ClusterVersion { get;  }
        /// <summary>
        /// The detailed status that provides additional information about the cluster manager.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The detailed status that provides additional information about the cluster manager.",
        SerializedName = @"detailedStatus",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Support.ClusterManagerDetailedStatus) })]
        Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Support.ClusterManagerDetailedStatus? DetailedStatus { get;  }
        /// <summary>The descriptive message about the current detailed status.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The descriptive message about the current detailed status.",
        SerializedName = @"detailedStatusMessage",
        PossibleTypes = new [] { typeof(string) })]
        string DetailedStatusMessage { get;  }
        /// <summary>
        /// The resource ID of the fabric controller that has one to one mapping with the cluster manager.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"The resource ID of the fabric controller that has one to one mapping with the cluster manager.",
        SerializedName = @"fabricControllerId",
        PossibleTypes = new [] { typeof(string) })]
        string FabricControllerId { get; set; }
        /// <summary>
        /// The location of the managed resource group. If not specified, the location of the parent resource is chosen.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The location of the managed resource group. If not specified, the location of the parent resource is chosen.",
        SerializedName = @"location",
        PossibleTypes = new [] { typeof(string) })]
        string ManagedResourceGroupConfigurationLocation { get; set; }
        /// <summary>
        /// The name for the managed resource group. If not specified, the unique name is automatically generated.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The name for the managed resource group. If not specified, the unique name is automatically generated.",
        SerializedName = @"name",
        PossibleTypes = new [] { typeof(string) })]
        string ManagedResourceGroupConfigurationName { get; set; }
        /// <summary>The resource ID of the extended location on which the resource will be created.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The resource ID of the extended location on which the resource will be created.",
        SerializedName = @"name",
        PossibleTypes = new [] { typeof(string) })]
        string ManagerExtendedLocationName { get; set; }
        /// <summary>The extended location type, for example, CustomLocation.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The extended location type, for example, CustomLocation.",
        SerializedName = @"type",
        PossibleTypes = new [] { typeof(string) })]
        string ManagerExtendedLocationType { get; set; }
        /// <summary>The provisioning state of the cluster manager.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The provisioning state of the cluster manager.",
        SerializedName = @"provisioningState",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Support.ClusterManagerProvisioningState) })]
        Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Support.ClusterManagerProvisioningState? ProvisioningState { get;  }
        /// <summary>
        /// Field deprecated, this value will no longer influence the cluster manager allocation process and will be removed in a
        /// future version. The size of the Azure virtual machines to use for hosting the cluster manager resource.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Field deprecated, this value will no longer influence the cluster manager allocation process and will be removed in a future version. The size of the Azure virtual machines to use for hosting the cluster manager resource.",
        SerializedName = @"vmSize",
        PossibleTypes = new [] { typeof(string) })]
        string VMSize { get; set; }

    }
    /// ClusterManager represents a control-plane to manage one or more on-premises clusters.
    internal partial interface IClusterManagerInternal :
        Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api30.ITrackedResourceInternal
    {
        /// <summary>
        /// The resource ID of the Log Analytics workspace that is used for the logs collection.
        /// </summary>
        string AnalyticsWorkspaceId { get; set; }
        /// <summary>
        /// Field deprecated, this value will no longer influence the cluster manager allocation process and will be removed in a
        /// future version. The Azure availability zones within the region that will be used to support the cluster manager resource.
        /// </summary>
        string[] AvailabilityZone { get; set; }

        string AzureAsyncOperation { get; set; }
        /// <summary>
        /// The list of the cluster versions the manager supports. It is used as input in clusterVersion property of a cluster resource.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api202212Preview.IClusterAvailableVersion[] ClusterVersion { get; set; }
        /// <summary>
        /// The detailed status that provides additional information about the cluster manager.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Support.ClusterManagerDetailedStatus? DetailedStatus { get; set; }
        /// <summary>The descriptive message about the current detailed status.</summary>
        string DetailedStatusMessage { get; set; }
        /// <summary>
        /// The resource ID of the fabric controller that has one to one mapping with the cluster manager.
        /// </summary>
        string FabricControllerId { get; set; }
        /// <summary>The configuration of the managed resource group associated with the resource.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api202212Preview.IManagedResourceGroupConfiguration ManagedResourceGroupConfiguration { get; set; }
        /// <summary>
        /// The location of the managed resource group. If not specified, the location of the parent resource is chosen.
        /// </summary>
        string ManagedResourceGroupConfigurationLocation { get; set; }
        /// <summary>
        /// The name for the managed resource group. If not specified, the unique name is automatically generated.
        /// </summary>
        string ManagedResourceGroupConfigurationName { get; set; }
        /// <summary>
        /// The extended location (custom location) that represents the cluster manager's control plane location. This extended location
        /// is used when creating cluster and rack manifest resources.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api202212Preview.IExtendedLocation ManagerExtendedLocation { get; set; }
        /// <summary>The resource ID of the extended location on which the resource will be created.</summary>
        string ManagerExtendedLocationName { get; set; }
        /// <summary>The extended location type, for example, CustomLocation.</summary>
        string ManagerExtendedLocationType { get; set; }
        /// <summary>The list of the resource properties.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api202212Preview.IClusterManagerProperties Property { get; set; }
        /// <summary>The provisioning state of the cluster manager.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Support.ClusterManagerProvisioningState? ProvisioningState { get; set; }
        /// <summary>
        /// Field deprecated, this value will no longer influence the cluster manager allocation process and will be removed in a
        /// future version. The size of the Azure virtual machines to use for hosting the cluster manager resource.
        /// </summary>
        string VMSize { get; set; }

    }
}