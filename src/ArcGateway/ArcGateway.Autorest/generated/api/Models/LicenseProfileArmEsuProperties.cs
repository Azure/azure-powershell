// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.ArcGateway.Models
{
    using static Microsoft.Azure.PowerShell.Cmdlets.ArcGateway.Runtime.Extensions;

    /// <summary>Describes the properties of a License Profile ARM model.</summary>
    public partial class LicenseProfileArmEsuProperties :
        Microsoft.Azure.PowerShell.Cmdlets.ArcGateway.Models.ILicenseProfileArmEsuProperties,
        Microsoft.Azure.PowerShell.Cmdlets.ArcGateway.Models.ILicenseProfileArmEsuPropertiesInternal,
        Microsoft.Azure.PowerShell.Cmdlets.ArcGateway.Runtime.IValidates
    {
        /// <summary>
        /// Backing field for Inherited model <see cref= "Microsoft.Azure.PowerShell.Cmdlets.ArcGateway.Models.ILicenseProfileArmEsuPropertiesWithoutAssignedLicense"
        /// />
        /// </summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ArcGateway.Models.ILicenseProfileArmEsuPropertiesWithoutAssignedLicense __licenseProfileArmEsuPropertiesWithoutAssignedLicense = new Microsoft.Azure.PowerShell.Cmdlets.ArcGateway.Models.LicenseProfileArmEsuPropertiesWithoutAssignedLicense();

        /// <summary>Backing field for <see cref="AssignedLicense" /> property.</summary>
        private string _assignedLicense;

        /// <summary>The resource id of the license.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ArcGateway.Origin(Microsoft.Azure.PowerShell.Cmdlets.ArcGateway.PropertyOrigin.Owned)]
        public string AssignedLicense { get => this._assignedLicense; set => this._assignedLicense = value; }

        /// <summary>The guid id of the license.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ArcGateway.Origin(Microsoft.Azure.PowerShell.Cmdlets.ArcGateway.PropertyOrigin.Inherited)]
        public string AssignedLicenseImmutableId { get => ((Microsoft.Azure.PowerShell.Cmdlets.ArcGateway.Models.ILicenseProfileStorageModelEsuPropertiesInternal)__licenseProfileArmEsuPropertiesWithoutAssignedLicense).AssignedLicenseImmutableId; }

        /// <summary>Indicates the eligibility state of Esu.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ArcGateway.Origin(Microsoft.Azure.PowerShell.Cmdlets.ArcGateway.PropertyOrigin.Inherited)]
        public string EsuEligibility { get => ((Microsoft.Azure.PowerShell.Cmdlets.ArcGateway.Models.ILicenseProfileArmEsuPropertiesWithoutAssignedLicenseInternal)__licenseProfileArmEsuPropertiesWithoutAssignedLicense).EsuEligibility; }

        /// <summary>The list of ESU keys.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ArcGateway.Origin(Microsoft.Azure.PowerShell.Cmdlets.ArcGateway.PropertyOrigin.Inherited)]
        public System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.ArcGateway.Models.IEsuKey> EsuKey { get => ((Microsoft.Azure.PowerShell.Cmdlets.ArcGateway.Models.ILicenseProfileStorageModelEsuPropertiesInternal)__licenseProfileArmEsuPropertiesWithoutAssignedLicense).EsuKey; }

        /// <summary>Indicates whether there is an ESU Key currently active for the machine.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ArcGateway.Origin(Microsoft.Azure.PowerShell.Cmdlets.ArcGateway.PropertyOrigin.Inherited)]
        public string EsuKeyState { get => ((Microsoft.Azure.PowerShell.Cmdlets.ArcGateway.Models.ILicenseProfileArmEsuPropertiesWithoutAssignedLicenseInternal)__licenseProfileArmEsuPropertiesWithoutAssignedLicense).EsuKeyState; }

        /// <summary>Internal Acessors for EsuEligibility</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.ArcGateway.Models.ILicenseProfileArmEsuPropertiesWithoutAssignedLicenseInternal.EsuEligibility { get => ((Microsoft.Azure.PowerShell.Cmdlets.ArcGateway.Models.ILicenseProfileArmEsuPropertiesWithoutAssignedLicenseInternal)__licenseProfileArmEsuPropertiesWithoutAssignedLicense).EsuEligibility; set => ((Microsoft.Azure.PowerShell.Cmdlets.ArcGateway.Models.ILicenseProfileArmEsuPropertiesWithoutAssignedLicenseInternal)__licenseProfileArmEsuPropertiesWithoutAssignedLicense).EsuEligibility = value; }

        /// <summary>Internal Acessors for EsuKeyState</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.ArcGateway.Models.ILicenseProfileArmEsuPropertiesWithoutAssignedLicenseInternal.EsuKeyState { get => ((Microsoft.Azure.PowerShell.Cmdlets.ArcGateway.Models.ILicenseProfileArmEsuPropertiesWithoutAssignedLicenseInternal)__licenseProfileArmEsuPropertiesWithoutAssignedLicense).EsuKeyState; set => ((Microsoft.Azure.PowerShell.Cmdlets.ArcGateway.Models.ILicenseProfileArmEsuPropertiesWithoutAssignedLicenseInternal)__licenseProfileArmEsuPropertiesWithoutAssignedLicense).EsuKeyState = value; }

        /// <summary>Internal Acessors for ServerType</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.ArcGateway.Models.ILicenseProfileArmEsuPropertiesWithoutAssignedLicenseInternal.ServerType { get => ((Microsoft.Azure.PowerShell.Cmdlets.ArcGateway.Models.ILicenseProfileArmEsuPropertiesWithoutAssignedLicenseInternal)__licenseProfileArmEsuPropertiesWithoutAssignedLicense).ServerType; set => ((Microsoft.Azure.PowerShell.Cmdlets.ArcGateway.Models.ILicenseProfileArmEsuPropertiesWithoutAssignedLicenseInternal)__licenseProfileArmEsuPropertiesWithoutAssignedLicense).ServerType = value; }

        /// <summary>Internal Acessors for AssignedLicenseImmutableId</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.ArcGateway.Models.ILicenseProfileStorageModelEsuPropertiesInternal.AssignedLicenseImmutableId { get => ((Microsoft.Azure.PowerShell.Cmdlets.ArcGateway.Models.ILicenseProfileStorageModelEsuPropertiesInternal)__licenseProfileArmEsuPropertiesWithoutAssignedLicense).AssignedLicenseImmutableId; set => ((Microsoft.Azure.PowerShell.Cmdlets.ArcGateway.Models.ILicenseProfileStorageModelEsuPropertiesInternal)__licenseProfileArmEsuPropertiesWithoutAssignedLicense).AssignedLicenseImmutableId = value; }

        /// <summary>Internal Acessors for EsuKey</summary>
        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.ArcGateway.Models.IEsuKey> Microsoft.Azure.PowerShell.Cmdlets.ArcGateway.Models.ILicenseProfileStorageModelEsuPropertiesInternal.EsuKey { get => ((Microsoft.Azure.PowerShell.Cmdlets.ArcGateway.Models.ILicenseProfileStorageModelEsuPropertiesInternal)__licenseProfileArmEsuPropertiesWithoutAssignedLicense).EsuKey; set => ((Microsoft.Azure.PowerShell.Cmdlets.ArcGateway.Models.ILicenseProfileStorageModelEsuPropertiesInternal)__licenseProfileArmEsuPropertiesWithoutAssignedLicense).EsuKey = value; }

        /// <summary>The type of the Esu servers.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ArcGateway.Origin(Microsoft.Azure.PowerShell.Cmdlets.ArcGateway.PropertyOrigin.Inherited)]
        public string ServerType { get => ((Microsoft.Azure.PowerShell.Cmdlets.ArcGateway.Models.ILicenseProfileArmEsuPropertiesWithoutAssignedLicenseInternal)__licenseProfileArmEsuPropertiesWithoutAssignedLicense).ServerType; }

        /// <summary>Creates an new <see cref="LicenseProfileArmEsuProperties" /> instance.</summary>
        public LicenseProfileArmEsuProperties()
        {

        }

        /// <summary>Validates that this object meets the validation criteria.</summary>
        /// <param name="eventListener">an <see cref="Microsoft.Azure.PowerShell.Cmdlets.ArcGateway.Runtime.IEventListener" /> instance that will receive validation
        /// events.</param>
        /// <returns>
        /// A <see cref = "global::System.Threading.Tasks.Task" /> that will be complete when validation is completed.
        /// </returns>
        public async global::System.Threading.Tasks.Task Validate(Microsoft.Azure.PowerShell.Cmdlets.ArcGateway.Runtime.IEventListener eventListener)
        {
            await eventListener.AssertNotNull(nameof(__licenseProfileArmEsuPropertiesWithoutAssignedLicense), __licenseProfileArmEsuPropertiesWithoutAssignedLicense);
            await eventListener.AssertObjectIsValid(nameof(__licenseProfileArmEsuPropertiesWithoutAssignedLicense), __licenseProfileArmEsuPropertiesWithoutAssignedLicense);
        }
    }
    /// Describes the properties of a License Profile ARM model.
    public partial interface ILicenseProfileArmEsuProperties :
        Microsoft.Azure.PowerShell.Cmdlets.ArcGateway.Runtime.IJsonSerializable,
        Microsoft.Azure.PowerShell.Cmdlets.ArcGateway.Models.ILicenseProfileArmEsuPropertiesWithoutAssignedLicense
    {
        /// <summary>The resource id of the license.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ArcGateway.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The resource id of the license.",
        SerializedName = @"assignedLicense",
        PossibleTypes = new [] { typeof(string) })]
        string AssignedLicense { get; set; }

    }
    /// Describes the properties of a License Profile ARM model.
    internal partial interface ILicenseProfileArmEsuPropertiesInternal :
        Microsoft.Azure.PowerShell.Cmdlets.ArcGateway.Models.ILicenseProfileArmEsuPropertiesWithoutAssignedLicenseInternal
    {
        /// <summary>The resource id of the license.</summary>
        string AssignedLicense { get; set; }

    }
}