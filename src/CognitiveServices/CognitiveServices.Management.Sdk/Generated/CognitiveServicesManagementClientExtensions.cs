// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.
namespace Microsoft.Azure.Management.CognitiveServices
{
    using Microsoft.Rest.Azure;
    using Models;

    /// <summary>
    /// Extension methods for CognitiveServicesManagementClient
    /// </summary>
    public static partial class CognitiveServicesManagementClientExtensions
    {
        /// <summary>
        /// Check available SKUs.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='location'>
        /// Resource location.
        /// </param>
        public static SkuAvailabilityListResult CheckSkuAvailability(this ICognitiveServicesManagementClient operations, string location, System.Collections.Generic.IList<string> skus, string kind, string type)
        {
                return ((ICognitiveServicesManagementClient)operations).CheckSkuAvailabilityAsync(location, skus, kind, type).GetAwaiter().GetResult();
        }

        /// <summary>
        /// Check available SKUs.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='location'>
        /// Resource location.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        public static async System.Threading.Tasks.Task<SkuAvailabilityListResult> CheckSkuAvailabilityAsync(this ICognitiveServicesManagementClient operations, string location, System.Collections.Generic.IList<string> skus, string kind, string type, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            using (var _result = await operations.CheckSkuAvailabilityWithHttpMessagesAsync(location, skus, kind, type, null, cancellationToken).ConfigureAwait(false))
            {
                return _result.Body;
            }
        }
        /// <summary>
        /// Check whether a domain is available.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        public static DomainAvailability CheckDomainAvailability(this ICognitiveServicesManagementClient operations, string subdomainName, string type, string kind = default(string))
        {
                return ((ICognitiveServicesManagementClient)operations).CheckDomainAvailabilityAsync(subdomainName, type, kind).GetAwaiter().GetResult();
        }

        /// <summary>
        /// Check whether a domain is available.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        public static async System.Threading.Tasks.Task<DomainAvailability> CheckDomainAvailabilityAsync(this ICognitiveServicesManagementClient operations, string subdomainName, string type, string kind = default(string), System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            using (var _result = await operations.CheckDomainAvailabilityWithHttpMessagesAsync(subdomainName, type, kind, null, cancellationToken).ConfigureAwait(false))
            {
                return _result.Body;
            }
        }
    }
}
