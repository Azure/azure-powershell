// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.
namespace Microsoft.Azure.Management.CognitiveServices
{
    using Microsoft.Rest.Azure;
    using Models;

    /// <summary>
    /// Extension methods for NetworkSecurityPerimeterConfigurationsOperations
    /// </summary>
    public static partial class NetworkSecurityPerimeterConfigurationsOperationsExtensions
    {
        /// <summary>
        /// Gets a list of NSP configurations for an account.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='resourceGroupName'>
        /// The name of the resource group. The name is case insensitive.
        /// </param>
        /// <param name='accountName'>
        /// The name of Cognitive Services account.
        /// </param>
        public static Microsoft.Rest.Azure.IPage<NetworkSecurityPerimeterConfiguration> List(this INetworkSecurityPerimeterConfigurationsOperations operations, string resourceGroupName, string accountName)
        {
                return ((INetworkSecurityPerimeterConfigurationsOperations)operations).ListAsync(resourceGroupName, accountName).GetAwaiter().GetResult();
        }

        /// <summary>
        /// Gets a list of NSP configurations for an account.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='resourceGroupName'>
        /// The name of the resource group. The name is case insensitive.
        /// </param>
        /// <param name='accountName'>
        /// The name of Cognitive Services account.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        public static async System.Threading.Tasks.Task<Microsoft.Rest.Azure.IPage<NetworkSecurityPerimeterConfiguration>> ListAsync(this INetworkSecurityPerimeterConfigurationsOperations operations, string resourceGroupName, string accountName, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            using (var _result = await operations.ListWithHttpMessagesAsync(resourceGroupName, accountName, null, cancellationToken).ConfigureAwait(false))
            {
                return _result.Body;
            }
        }
        /// <summary>
        /// Gets the specified NSP configurations for an account.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='resourceGroupName'>
        /// The name of the resource group. The name is case insensitive.
        /// </param>
        /// <param name='accountName'>
        /// The name of Cognitive Services account.
        /// </param>
        /// <param name='nspConfigurationName'>
        /// The name of the NSP Configuration.
        /// </param>
        public static NetworkSecurityPerimeterConfiguration Get(this INetworkSecurityPerimeterConfigurationsOperations operations, string resourceGroupName, string accountName, string nspConfigurationName)
        {
                return ((INetworkSecurityPerimeterConfigurationsOperations)operations).GetAsync(resourceGroupName, accountName, nspConfigurationName).GetAwaiter().GetResult();
        }

        /// <summary>
        /// Gets the specified NSP configurations for an account.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='resourceGroupName'>
        /// The name of the resource group. The name is case insensitive.
        /// </param>
        /// <param name='accountName'>
        /// The name of Cognitive Services account.
        /// </param>
        /// <param name='nspConfigurationName'>
        /// The name of the NSP Configuration.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        public static async System.Threading.Tasks.Task<NetworkSecurityPerimeterConfiguration> GetAsync(this INetworkSecurityPerimeterConfigurationsOperations operations, string resourceGroupName, string accountName, string nspConfigurationName, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            using (var _result = await operations.GetWithHttpMessagesAsync(resourceGroupName, accountName, nspConfigurationName, null, cancellationToken).ConfigureAwait(false))
            {
                return _result.Body;
            }
        }
        /// <summary>
        /// Reconcile the NSP configuration for an account.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='resourceGroupName'>
        /// The name of the resource group. The name is case insensitive.
        /// </param>
        /// <param name='accountName'>
        /// The name of Cognitive Services account.
        /// </param>
        /// <param name='nspConfigurationName'>
        /// The name of the NSP Configuration.
        /// </param>
        public static NetworkSecurityPerimeterConfiguration Reconcile(this INetworkSecurityPerimeterConfigurationsOperations operations, string resourceGroupName, string accountName, string nspConfigurationName)
        {
                return ((INetworkSecurityPerimeterConfigurationsOperations)operations).ReconcileAsync(resourceGroupName, accountName, nspConfigurationName).GetAwaiter().GetResult();
        }

        /// <summary>
        /// Reconcile the NSP configuration for an account.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='resourceGroupName'>
        /// The name of the resource group. The name is case insensitive.
        /// </param>
        /// <param name='accountName'>
        /// The name of Cognitive Services account.
        /// </param>
        /// <param name='nspConfigurationName'>
        /// The name of the NSP Configuration.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        public static async System.Threading.Tasks.Task<NetworkSecurityPerimeterConfiguration> ReconcileAsync(this INetworkSecurityPerimeterConfigurationsOperations operations, string resourceGroupName, string accountName, string nspConfigurationName, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            using (var _result = await operations.ReconcileWithHttpMessagesAsync(resourceGroupName, accountName, nspConfigurationName, null, cancellationToken).ConfigureAwait(false))
            {
                return _result.Body;
            }
        }
        /// <summary>
        /// Reconcile the NSP configuration for an account.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='resourceGroupName'>
        /// The name of the resource group. The name is case insensitive.
        /// </param>
        /// <param name='accountName'>
        /// The name of Cognitive Services account.
        /// </param>
        /// <param name='nspConfigurationName'>
        /// The name of the NSP Configuration.
        /// </param>
        public static NetworkSecurityPerimeterConfiguration BeginReconcile(this INetworkSecurityPerimeterConfigurationsOperations operations, string resourceGroupName, string accountName, string nspConfigurationName)
        {
                return ((INetworkSecurityPerimeterConfigurationsOperations)operations).BeginReconcileAsync(resourceGroupName, accountName, nspConfigurationName).GetAwaiter().GetResult();
        }

        /// <summary>
        /// Reconcile the NSP configuration for an account.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='resourceGroupName'>
        /// The name of the resource group. The name is case insensitive.
        /// </param>
        /// <param name='accountName'>
        /// The name of Cognitive Services account.
        /// </param>
        /// <param name='nspConfigurationName'>
        /// The name of the NSP Configuration.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        public static async System.Threading.Tasks.Task<NetworkSecurityPerimeterConfiguration> BeginReconcileAsync(this INetworkSecurityPerimeterConfigurationsOperations operations, string resourceGroupName, string accountName, string nspConfigurationName, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            using (var _result = await operations.BeginReconcileWithHttpMessagesAsync(resourceGroupName, accountName, nspConfigurationName, null, cancellationToken).ConfigureAwait(false))
            {
                return _result.Body;
            }
        }
        /// <summary>
        /// Gets a list of NSP configurations for an account.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='nextPageLink'>
        /// The NextLink from the previous successful call to List operation.
        /// </param>
        public static Microsoft.Rest.Azure.IPage<NetworkSecurityPerimeterConfiguration> ListNext(this INetworkSecurityPerimeterConfigurationsOperations operations, string nextPageLink)
        {
                return ((INetworkSecurityPerimeterConfigurationsOperations)operations).ListNextAsync(nextPageLink).GetAwaiter().GetResult();
        }

        /// <summary>
        /// Gets a list of NSP configurations for an account.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='nextPageLink'>
        /// The NextLink from the previous successful call to List operation.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        public static async System.Threading.Tasks.Task<Microsoft.Rest.Azure.IPage<NetworkSecurityPerimeterConfiguration>> ListNextAsync(this INetworkSecurityPerimeterConfigurationsOperations operations, string nextPageLink, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            using (var _result = await operations.ListNextWithHttpMessagesAsync(nextPageLink, null, cancellationToken).ConfigureAwait(false))
            {
                return _result.Body;
            }
        }
    }
}
