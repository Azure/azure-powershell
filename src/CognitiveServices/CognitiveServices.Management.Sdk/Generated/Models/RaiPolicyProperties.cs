// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.CognitiveServices.Models
{
    using System.Linq;

    /// <summary>
    /// Azure OpenAI Content Filters properties.
    /// </summary>
    public partial class RaiPolicyProperties
    {
        /// <summary>
        /// Initializes a new instance of the RaiPolicyProperties class.
        /// </summary>
        public RaiPolicyProperties()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the RaiPolicyProperties class.
        /// </summary>

        /// <param name="policyType">Content Filters policy type.
        /// Possible values include: &#39;UserManaged&#39;, &#39;SystemManaged&#39;</param>

        /// <param name="mode">Content Filters mode.
        /// Possible values include: &#39;Default&#39;, &#39;Deferred&#39;, &#39;Blocking&#39;</param>

        /// <param name="basePolicyName">Name of the base Content Filters.
        /// </param>

        /// <param name="promptBlocklists">The list of blocklists for prompt.
        /// </param>

        /// <param name="completionBlocklists">The list of blocklists for completion.
        /// </param>

        /// <param name="contentFilters">The list of Content Filters.
        /// </param>
        public RaiPolicyProperties(string policyType = default(string), string mode = default(string), string basePolicyName = default(string), System.Collections.Generic.IList<RaiBlocklistConfig> promptBlocklists = default(System.Collections.Generic.IList<RaiBlocklistConfig>), System.Collections.Generic.IList<RaiBlocklistConfig> completionBlocklists = default(System.Collections.Generic.IList<RaiBlocklistConfig>), System.Collections.Generic.IList<RaiPolicyContentFilter> contentFilters = default(System.Collections.Generic.IList<RaiPolicyContentFilter>))

        {
            this.PolicyType = policyType;
            this.Mode = mode;
            this.BasePolicyName = basePolicyName;
            this.PromptBlocklists = promptBlocklists;
            this.CompletionBlocklists = completionBlocklists;
            this.ContentFilters = contentFilters;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets content Filters policy type. Possible values include: &#39;UserManaged&#39;, &#39;SystemManaged&#39;
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "policyType")]
        public string PolicyType {get; private set; }

        /// <summary>
        /// Gets or sets content Filters mode. Possible values include: &#39;Default&#39;, &#39;Deferred&#39;, &#39;Blocking&#39;
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "mode")]
        public string Mode {get; set; }

        /// <summary>
        /// Gets or sets name of the base Content Filters.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "basePolicyName")]
        public string BasePolicyName {get; set; }

        /// <summary>
        /// Gets or sets the list of blocklists for prompt.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "promptBlocklists")]
        public System.Collections.Generic.IList<RaiBlocklistConfig> PromptBlocklists {get; set; }

        /// <summary>
        /// Gets or sets the list of blocklists for completion.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "completionBlocklists")]
        public System.Collections.Generic.IList<RaiBlocklistConfig> CompletionBlocklists {get; set; }

        /// <summary>
        /// Gets or sets the list of Content Filters.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "contentFilters")]
        public System.Collections.Generic.IList<RaiPolicyContentFilter> ContentFilters {get; set; }
    }
}