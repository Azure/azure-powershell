// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.CognitiveServices.Models
{
    using System.Linq;

    /// <summary>
    /// The multiregion settings Cognitive Services account.
    /// </summary>
    public partial class MultiRegionSettings
    {
        /// <summary>
        /// Initializes a new instance of the MultiRegionSettings class.
        /// </summary>
        public MultiRegionSettings()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the MultiRegionSettings class.
        /// </summary>

        /// <param name="routingMethod">Multiregion routing methods.
        /// Possible values include: 'Priority', 'Weighted', 'Performance'</param>

        /// <param name="regions">
        /// </param>
        public MultiRegionSettings(string routingMethod = default(string), System.Collections.Generic.IList<RegionSetting> regions = default(System.Collections.Generic.IList<RegionSetting>))

        {
            this.RoutingMethod = routingMethod;
            this.Regions = regions;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets or sets multiregion routing methods. Possible values include: &#39;Priority&#39;, &#39;Weighted&#39;, &#39;Performance&#39;
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "routingMethod")]
        public string RoutingMethod {get; set; }

        /// <summary>
        /// Gets or sets
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "regions")]
        public System.Collections.Generic.IList<RegionSetting> Regions {get; set; }
    }
}