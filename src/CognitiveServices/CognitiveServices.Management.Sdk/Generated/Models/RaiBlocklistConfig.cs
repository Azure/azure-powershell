// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.CognitiveServices.Models
{
    using System.Linq;

    /// <summary>
    /// Azure OpenAI blocklist config.
    /// </summary>
    public partial class RaiBlocklistConfig
    {
        /// <summary>
        /// Initializes a new instance of the RaiBlocklistConfig class.
        /// </summary>
        public RaiBlocklistConfig()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the RaiBlocklistConfig class.
        /// </summary>

        /// <param name="blocklistName">Name of ContentFilter.
        /// </param>

        /// <param name="blocking">If blocking would occur.
        /// </param>
        public RaiBlocklistConfig(string blocklistName = default(string), bool? blocking = default(bool?))

        {
            this.BlocklistName = blocklistName;
            this.Blocking = blocking;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets or sets name of ContentFilter.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "blocklistName")]
        public string BlocklistName {get; set; }

        /// <summary>
        /// Gets or sets if blocking would occur.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "blocking")]
        public bool? Blocking {get; set; }
    }
}