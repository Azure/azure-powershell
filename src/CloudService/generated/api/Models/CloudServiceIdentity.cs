// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.CloudService.Models
{
    using static Microsoft.Azure.PowerShell.Cmdlets.CloudService.Runtime.Extensions;

    public partial class CloudServiceIdentity :
        Microsoft.Azure.PowerShell.Cmdlets.CloudService.Models.ICloudServiceIdentity,
        Microsoft.Azure.PowerShell.Cmdlets.CloudService.Models.ICloudServiceIdentityInternal
    {

        /// <summary>Backing field for <see cref="CloudServiceName" /> property.</summary>
        private string _cloudServiceName;

        [Microsoft.Azure.PowerShell.Cmdlets.CloudService.Origin(Microsoft.Azure.PowerShell.Cmdlets.CloudService.PropertyOrigin.Owned)]
        public string CloudServiceName { get => this._cloudServiceName; set => this._cloudServiceName = value; }

        /// <summary>Backing field for <see cref="Id" /> property.</summary>
        private string _id;

        /// <summary>Resource identity path</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CloudService.Origin(Microsoft.Azure.PowerShell.Cmdlets.CloudService.PropertyOrigin.Owned)]
        public string Id { get => this._id; set => this._id = value; }

        /// <summary>Backing field for <see cref="Location" /> property.</summary>
        private string _location;

        /// <summary>Name of the location that the OS version pertains to.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CloudService.Origin(Microsoft.Azure.PowerShell.Cmdlets.CloudService.PropertyOrigin.Owned)]
        public string Location { get => this._location; set => this._location = value; }

        /// <summary>Backing field for <see cref="OSFamilyName" /> property.</summary>
        private string _oSFamilyName;

        /// <summary>Name of the OS family.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CloudService.Origin(Microsoft.Azure.PowerShell.Cmdlets.CloudService.PropertyOrigin.Owned)]
        public string OSFamilyName { get => this._oSFamilyName; set => this._oSFamilyName = value; }

        /// <summary>Backing field for <see cref="OSVersionName" /> property.</summary>
        private string _oSVersionName;

        /// <summary>Name of the OS version.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CloudService.Origin(Microsoft.Azure.PowerShell.Cmdlets.CloudService.PropertyOrigin.Owned)]
        public string OSVersionName { get => this._oSVersionName; set => this._oSVersionName = value; }

        /// <summary>Backing field for <see cref="ResourceGroupName" /> property.</summary>
        private string _resourceGroupName;

        [Microsoft.Azure.PowerShell.Cmdlets.CloudService.Origin(Microsoft.Azure.PowerShell.Cmdlets.CloudService.PropertyOrigin.Owned)]
        public string ResourceGroupName { get => this._resourceGroupName; set => this._resourceGroupName = value; }

        /// <summary>Backing field for <see cref="RoleInstanceName" /> property.</summary>
        private string _roleInstanceName;

        /// <summary>Name of the role instance.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CloudService.Origin(Microsoft.Azure.PowerShell.Cmdlets.CloudService.PropertyOrigin.Owned)]
        public string RoleInstanceName { get => this._roleInstanceName; set => this._roleInstanceName = value; }

        /// <summary>Backing field for <see cref="RoleName" /> property.</summary>
        private string _roleName;

        /// <summary>Name of the role.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CloudService.Origin(Microsoft.Azure.PowerShell.Cmdlets.CloudService.PropertyOrigin.Owned)]
        public string RoleName { get => this._roleName; set => this._roleName = value; }

        /// <summary>Backing field for <see cref="SubscriptionId" /> property.</summary>
        private string _subscriptionId;

        /// <summary>
        /// Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI
        /// for every service call.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CloudService.Origin(Microsoft.Azure.PowerShell.Cmdlets.CloudService.PropertyOrigin.Owned)]
        public string SubscriptionId { get => this._subscriptionId; set => this._subscriptionId = value; }

        /// <summary>Backing field for <see cref="UpdateDomain" /> property.</summary>
        private int? _updateDomain;

        /// <summary>
        /// Specifies an integer value that identifies the update domain. Update domains are identified with a zero-based index: the
        /// first update domain has an ID of 0, the second has an ID of 1, and so on.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CloudService.Origin(Microsoft.Azure.PowerShell.Cmdlets.CloudService.PropertyOrigin.Owned)]
        public int? UpdateDomain { get => this._updateDomain; set => this._updateDomain = value; }

        /// <summary>Creates an new <see cref="CloudServiceIdentity" /> instance.</summary>
        public CloudServiceIdentity()
        {

        }
    }
    public partial interface ICloudServiceIdentity :
        Microsoft.Azure.PowerShell.Cmdlets.CloudService.Runtime.IJsonSerializable
    {
        [Microsoft.Azure.PowerShell.Cmdlets.CloudService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"",
        SerializedName = @"cloudServiceName",
        PossibleTypes = new [] { typeof(string) })]
        string CloudServiceName { get; set; }
        /// <summary>Resource identity path</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CloudService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Resource identity path",
        SerializedName = @"id",
        PossibleTypes = new [] { typeof(string) })]
        string Id { get; set; }
        /// <summary>Name of the location that the OS version pertains to.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CloudService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Name of the location that the OS version pertains to.",
        SerializedName = @"location",
        PossibleTypes = new [] { typeof(string) })]
        string Location { get; set; }
        /// <summary>Name of the OS family.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CloudService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Name of the OS family.",
        SerializedName = @"osFamilyName",
        PossibleTypes = new [] { typeof(string) })]
        string OSFamilyName { get; set; }
        /// <summary>Name of the OS version.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CloudService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Name of the OS version.",
        SerializedName = @"osVersionName",
        PossibleTypes = new [] { typeof(string) })]
        string OSVersionName { get; set; }

        [Microsoft.Azure.PowerShell.Cmdlets.CloudService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"",
        SerializedName = @"resourceGroupName",
        PossibleTypes = new [] { typeof(string) })]
        string ResourceGroupName { get; set; }
        /// <summary>Name of the role instance.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CloudService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Name of the role instance.",
        SerializedName = @"roleInstanceName",
        PossibleTypes = new [] { typeof(string) })]
        string RoleInstanceName { get; set; }
        /// <summary>Name of the role.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CloudService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Name of the role.",
        SerializedName = @"roleName",
        PossibleTypes = new [] { typeof(string) })]
        string RoleName { get; set; }
        /// <summary>
        /// Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI
        /// for every service call.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CloudService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
        SerializedName = @"subscriptionId",
        PossibleTypes = new [] { typeof(string) })]
        string SubscriptionId { get; set; }
        /// <summary>
        /// Specifies an integer value that identifies the update domain. Update domains are identified with a zero-based index: the
        /// first update domain has an ID of 0, the second has an ID of 1, and so on.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CloudService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Specifies an integer value that identifies the update domain. Update domains are identified with a zero-based index: the first update domain has an ID of 0, the second has an ID of 1, and so on.",
        SerializedName = @"updateDomain",
        PossibleTypes = new [] { typeof(int) })]
        int? UpdateDomain { get; set; }

    }
    internal partial interface ICloudServiceIdentityInternal

    {
        string CloudServiceName { get; set; }
        /// <summary>Resource identity path</summary>
        string Id { get; set; }
        /// <summary>Name of the location that the OS version pertains to.</summary>
        string Location { get; set; }
        /// <summary>Name of the OS family.</summary>
        string OSFamilyName { get; set; }
        /// <summary>Name of the OS version.</summary>
        string OSVersionName { get; set; }

        string ResourceGroupName { get; set; }
        /// <summary>Name of the role instance.</summary>
        string RoleInstanceName { get; set; }
        /// <summary>Name of the role.</summary>
        string RoleName { get; set; }
        /// <summary>
        /// Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI
        /// for every service call.
        /// </summary>
        string SubscriptionId { get; set; }
        /// <summary>
        /// Specifies an integer value that identifies the update domain. Update domains are identified with a zero-based index: the
        /// first update domain has an ID of 0, the second has an ID of 1, and so on.
        /// </summary>
        int? UpdateDomain { get; set; }

    }
}