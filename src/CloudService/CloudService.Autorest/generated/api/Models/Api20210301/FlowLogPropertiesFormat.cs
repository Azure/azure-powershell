// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.CloudService.Models.Api20210301
{
    using static Microsoft.Azure.PowerShell.Cmdlets.CloudService.Runtime.Extensions;

    /// <summary>Parameters that define the configuration of flow log.</summary>
    public partial class FlowLogPropertiesFormat :
        Microsoft.Azure.PowerShell.Cmdlets.CloudService.Models.Api20210301.IFlowLogPropertiesFormat,
        Microsoft.Azure.PowerShell.Cmdlets.CloudService.Models.Api20210301.IFlowLogPropertiesFormatInternal
    {

        /// <summary>Backing field for <see cref="Enabled" /> property.</summary>
        private bool? _enabled;

        /// <summary>Flag to enable/disable flow logging.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CloudService.Origin(Microsoft.Azure.PowerShell.Cmdlets.CloudService.PropertyOrigin.Owned)]
        public bool? Enabled { get => this._enabled; set => this._enabled = value; }

        /// <summary>Backing field for <see cref="FlowAnalyticsConfiguration" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.CloudService.Models.Api20210301.ITrafficAnalyticsProperties _flowAnalyticsConfiguration;

        /// <summary>Parameters that define the configuration of traffic analytics.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CloudService.Origin(Microsoft.Azure.PowerShell.Cmdlets.CloudService.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.CloudService.Models.Api20210301.ITrafficAnalyticsProperties FlowAnalyticsConfiguration { get => (this._flowAnalyticsConfiguration = this._flowAnalyticsConfiguration ?? new Microsoft.Azure.PowerShell.Cmdlets.CloudService.Models.Api20210301.TrafficAnalyticsProperties()); set => this._flowAnalyticsConfiguration = value; }

        /// <summary>Backing field for <see cref="Format" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.CloudService.Models.Api20210301.IFlowLogFormatParameters _format;

        /// <summary>Parameters that define the flow log format.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CloudService.Origin(Microsoft.Azure.PowerShell.Cmdlets.CloudService.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.CloudService.Models.Api20210301.IFlowLogFormatParameters Format { get => (this._format = this._format ?? new Microsoft.Azure.PowerShell.Cmdlets.CloudService.Models.Api20210301.FlowLogFormatParameters()); set => this._format = value; }

        /// <summary>The file type of flow log.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CloudService.Origin(Microsoft.Azure.PowerShell.Cmdlets.CloudService.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.CloudService.Support.FlowLogFormatType? FormatType { get => ((Microsoft.Azure.PowerShell.Cmdlets.CloudService.Models.Api20210301.IFlowLogFormatParametersInternal)Format).Type; set => ((Microsoft.Azure.PowerShell.Cmdlets.CloudService.Models.Api20210301.IFlowLogFormatParametersInternal)Format).Type = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.CloudService.Support.FlowLogFormatType)""); }

        /// <summary>The version (revision) of the flow log.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CloudService.Origin(Microsoft.Azure.PowerShell.Cmdlets.CloudService.PropertyOrigin.Inlined)]
        public int? FormatVersion { get => ((Microsoft.Azure.PowerShell.Cmdlets.CloudService.Models.Api20210301.IFlowLogFormatParametersInternal)Format).Version; set => ((Microsoft.Azure.PowerShell.Cmdlets.CloudService.Models.Api20210301.IFlowLogFormatParametersInternal)Format).Version = value ?? default(int); }

        /// <summary>
        /// Internal Acessors for FlowAnalyticConfigurationNetworkWatcherFlowAnalyticsConfiguration
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.CloudService.Models.Api20210301.ITrafficAnalyticsConfigurationProperties Microsoft.Azure.PowerShell.Cmdlets.CloudService.Models.Api20210301.IFlowLogPropertiesFormatInternal.FlowAnalyticConfigurationNetworkWatcherFlowAnalyticsConfiguration { get => ((Microsoft.Azure.PowerShell.Cmdlets.CloudService.Models.Api20210301.ITrafficAnalyticsPropertiesInternal)FlowAnalyticsConfiguration).NetworkWatcherFlowAnalyticsConfiguration; set => ((Microsoft.Azure.PowerShell.Cmdlets.CloudService.Models.Api20210301.ITrafficAnalyticsPropertiesInternal)FlowAnalyticsConfiguration).NetworkWatcherFlowAnalyticsConfiguration = value; }

        /// <summary>Internal Acessors for FlowAnalyticsConfiguration</summary>
        Microsoft.Azure.PowerShell.Cmdlets.CloudService.Models.Api20210301.ITrafficAnalyticsProperties Microsoft.Azure.PowerShell.Cmdlets.CloudService.Models.Api20210301.IFlowLogPropertiesFormatInternal.FlowAnalyticsConfiguration { get => (this._flowAnalyticsConfiguration = this._flowAnalyticsConfiguration ?? new Microsoft.Azure.PowerShell.Cmdlets.CloudService.Models.Api20210301.TrafficAnalyticsProperties()); set { {_flowAnalyticsConfiguration = value;} } }

        /// <summary>Internal Acessors for Format</summary>
        Microsoft.Azure.PowerShell.Cmdlets.CloudService.Models.Api20210301.IFlowLogFormatParameters Microsoft.Azure.PowerShell.Cmdlets.CloudService.Models.Api20210301.IFlowLogPropertiesFormatInternal.Format { get => (this._format = this._format ?? new Microsoft.Azure.PowerShell.Cmdlets.CloudService.Models.Api20210301.FlowLogFormatParameters()); set { {_format = value;} } }

        /// <summary>Internal Acessors for ProvisioningState</summary>
        Microsoft.Azure.PowerShell.Cmdlets.CloudService.Support.ProvisioningState? Microsoft.Azure.PowerShell.Cmdlets.CloudService.Models.Api20210301.IFlowLogPropertiesFormatInternal.ProvisioningState { get => this._provisioningState; set { {_provisioningState = value;} } }

        /// <summary>Internal Acessors for RetentionPolicy</summary>
        Microsoft.Azure.PowerShell.Cmdlets.CloudService.Models.Api20210301.IRetentionPolicyParameters Microsoft.Azure.PowerShell.Cmdlets.CloudService.Models.Api20210301.IFlowLogPropertiesFormatInternal.RetentionPolicy { get => (this._retentionPolicy = this._retentionPolicy ?? new Microsoft.Azure.PowerShell.Cmdlets.CloudService.Models.Api20210301.RetentionPolicyParameters()); set { {_retentionPolicy = value;} } }

        /// <summary>Internal Acessors for TargetResourceGuid</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.CloudService.Models.Api20210301.IFlowLogPropertiesFormatInternal.TargetResourceGuid { get => this._targetResourceGuid; set { {_targetResourceGuid = value;} } }

        /// <summary>Flag to enable/disable traffic analytics.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CloudService.Origin(Microsoft.Azure.PowerShell.Cmdlets.CloudService.PropertyOrigin.Inlined)]
        public bool? NetworkWatcherFlowAnalyticConfigurationEnabled { get => ((Microsoft.Azure.PowerShell.Cmdlets.CloudService.Models.Api20210301.ITrafficAnalyticsPropertiesInternal)FlowAnalyticsConfiguration).NetworkWatcherFlowAnalyticConfigurationEnabled; set => ((Microsoft.Azure.PowerShell.Cmdlets.CloudService.Models.Api20210301.ITrafficAnalyticsPropertiesInternal)FlowAnalyticsConfiguration).NetworkWatcherFlowAnalyticConfigurationEnabled = value ?? default(bool); }

        /// <summary>
        /// The interval in minutes which would decide how frequently TA service should do flow analytics.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CloudService.Origin(Microsoft.Azure.PowerShell.Cmdlets.CloudService.PropertyOrigin.Inlined)]
        public int? NetworkWatcherFlowAnalyticConfigurationTrafficAnalyticsInterval { get => ((Microsoft.Azure.PowerShell.Cmdlets.CloudService.Models.Api20210301.ITrafficAnalyticsPropertiesInternal)FlowAnalyticsConfiguration).NetworkWatcherFlowAnalyticConfigurationTrafficAnalyticsInterval; set => ((Microsoft.Azure.PowerShell.Cmdlets.CloudService.Models.Api20210301.ITrafficAnalyticsPropertiesInternal)FlowAnalyticsConfiguration).NetworkWatcherFlowAnalyticConfigurationTrafficAnalyticsInterval = value ?? default(int); }

        /// <summary>The resource guid of the attached workspace.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CloudService.Origin(Microsoft.Azure.PowerShell.Cmdlets.CloudService.PropertyOrigin.Inlined)]
        public string NetworkWatcherFlowAnalyticConfigurationWorkspaceId { get => ((Microsoft.Azure.PowerShell.Cmdlets.CloudService.Models.Api20210301.ITrafficAnalyticsPropertiesInternal)FlowAnalyticsConfiguration).NetworkWatcherFlowAnalyticConfigurationWorkspaceId; set => ((Microsoft.Azure.PowerShell.Cmdlets.CloudService.Models.Api20210301.ITrafficAnalyticsPropertiesInternal)FlowAnalyticsConfiguration).NetworkWatcherFlowAnalyticConfigurationWorkspaceId = value ?? null; }

        /// <summary>The location of the attached workspace.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CloudService.Origin(Microsoft.Azure.PowerShell.Cmdlets.CloudService.PropertyOrigin.Inlined)]
        public string NetworkWatcherFlowAnalyticConfigurationWorkspaceRegion { get => ((Microsoft.Azure.PowerShell.Cmdlets.CloudService.Models.Api20210301.ITrafficAnalyticsPropertiesInternal)FlowAnalyticsConfiguration).NetworkWatcherFlowAnalyticConfigurationWorkspaceRegion; set => ((Microsoft.Azure.PowerShell.Cmdlets.CloudService.Models.Api20210301.ITrafficAnalyticsPropertiesInternal)FlowAnalyticsConfiguration).NetworkWatcherFlowAnalyticConfigurationWorkspaceRegion = value ?? null; }

        /// <summary>Resource Id of the attached workspace.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CloudService.Origin(Microsoft.Azure.PowerShell.Cmdlets.CloudService.PropertyOrigin.Inlined)]
        public string NetworkWatcherFlowAnalyticConfigurationWorkspaceResourceId { get => ((Microsoft.Azure.PowerShell.Cmdlets.CloudService.Models.Api20210301.ITrafficAnalyticsPropertiesInternal)FlowAnalyticsConfiguration).NetworkWatcherFlowAnalyticConfigurationWorkspaceResourceId; set => ((Microsoft.Azure.PowerShell.Cmdlets.CloudService.Models.Api20210301.ITrafficAnalyticsPropertiesInternal)FlowAnalyticsConfiguration).NetworkWatcherFlowAnalyticConfigurationWorkspaceResourceId = value ?? null; }

        /// <summary>Backing field for <see cref="ProvisioningState" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.CloudService.Support.ProvisioningState? _provisioningState;

        /// <summary>The provisioning state of the flow log.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CloudService.Origin(Microsoft.Azure.PowerShell.Cmdlets.CloudService.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.CloudService.Support.ProvisioningState? ProvisioningState { get => this._provisioningState; }

        /// <summary>Backing field for <see cref="RetentionPolicy" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.CloudService.Models.Api20210301.IRetentionPolicyParameters _retentionPolicy;

        /// <summary>Parameters that define the retention policy for flow log.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CloudService.Origin(Microsoft.Azure.PowerShell.Cmdlets.CloudService.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.CloudService.Models.Api20210301.IRetentionPolicyParameters RetentionPolicy { get => (this._retentionPolicy = this._retentionPolicy ?? new Microsoft.Azure.PowerShell.Cmdlets.CloudService.Models.Api20210301.RetentionPolicyParameters()); set => this._retentionPolicy = value; }

        /// <summary>Number of days to retain flow log records.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CloudService.Origin(Microsoft.Azure.PowerShell.Cmdlets.CloudService.PropertyOrigin.Inlined)]
        public int? RetentionPolicyDay { get => ((Microsoft.Azure.PowerShell.Cmdlets.CloudService.Models.Api20210301.IRetentionPolicyParametersInternal)RetentionPolicy).Day; set => ((Microsoft.Azure.PowerShell.Cmdlets.CloudService.Models.Api20210301.IRetentionPolicyParametersInternal)RetentionPolicy).Day = value ?? default(int); }

        /// <summary>Flag to enable/disable retention.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CloudService.Origin(Microsoft.Azure.PowerShell.Cmdlets.CloudService.PropertyOrigin.Inlined)]
        public bool? RetentionPolicyEnabled { get => ((Microsoft.Azure.PowerShell.Cmdlets.CloudService.Models.Api20210301.IRetentionPolicyParametersInternal)RetentionPolicy).Enabled; set => ((Microsoft.Azure.PowerShell.Cmdlets.CloudService.Models.Api20210301.IRetentionPolicyParametersInternal)RetentionPolicy).Enabled = value ?? default(bool); }

        /// <summary>Backing field for <see cref="StorageId" /> property.</summary>
        private string _storageId;

        /// <summary>ID of the storage account which is used to store the flow log.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CloudService.Origin(Microsoft.Azure.PowerShell.Cmdlets.CloudService.PropertyOrigin.Owned)]
        public string StorageId { get => this._storageId; set => this._storageId = value; }

        /// <summary>Backing field for <see cref="TargetResourceGuid" /> property.</summary>
        private string _targetResourceGuid;

        /// <summary>Guid of network security group to which flow log will be applied.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CloudService.Origin(Microsoft.Azure.PowerShell.Cmdlets.CloudService.PropertyOrigin.Owned)]
        public string TargetResourceGuid { get => this._targetResourceGuid; }

        /// <summary>Backing field for <see cref="TargetResourceId" /> property.</summary>
        private string _targetResourceId;

        /// <summary>ID of network security group to which flow log will be applied.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CloudService.Origin(Microsoft.Azure.PowerShell.Cmdlets.CloudService.PropertyOrigin.Owned)]
        public string TargetResourceId { get => this._targetResourceId; set => this._targetResourceId = value; }

        /// <summary>Creates an new <see cref="FlowLogPropertiesFormat" /> instance.</summary>
        public FlowLogPropertiesFormat()
        {

        }
    }
    /// Parameters that define the configuration of flow log.
    public partial interface IFlowLogPropertiesFormat :
        Microsoft.Azure.PowerShell.Cmdlets.CloudService.Runtime.IJsonSerializable
    {
        /// <summary>Flag to enable/disable flow logging.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CloudService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Flag to enable/disable flow logging.",
        SerializedName = @"enabled",
        PossibleTypes = new [] { typeof(bool) })]
        bool? Enabled { get; set; }
        /// <summary>The file type of flow log.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CloudService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The file type of flow log.",
        SerializedName = @"type",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.CloudService.Support.FlowLogFormatType) })]
        Microsoft.Azure.PowerShell.Cmdlets.CloudService.Support.FlowLogFormatType? FormatType { get; set; }
        /// <summary>The version (revision) of the flow log.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CloudService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The version (revision) of the flow log.",
        SerializedName = @"version",
        PossibleTypes = new [] { typeof(int) })]
        int? FormatVersion { get; set; }
        /// <summary>Flag to enable/disable traffic analytics.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CloudService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Flag to enable/disable traffic analytics.",
        SerializedName = @"enabled",
        PossibleTypes = new [] { typeof(bool) })]
        bool? NetworkWatcherFlowAnalyticConfigurationEnabled { get; set; }
        /// <summary>
        /// The interval in minutes which would decide how frequently TA service should do flow analytics.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CloudService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The interval in minutes which would decide how frequently TA service should do flow analytics.",
        SerializedName = @"trafficAnalyticsInterval",
        PossibleTypes = new [] { typeof(int) })]
        int? NetworkWatcherFlowAnalyticConfigurationTrafficAnalyticsInterval { get; set; }
        /// <summary>The resource guid of the attached workspace.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CloudService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The resource guid of the attached workspace.",
        SerializedName = @"workspaceId",
        PossibleTypes = new [] { typeof(string) })]
        string NetworkWatcherFlowAnalyticConfigurationWorkspaceId { get; set; }
        /// <summary>The location of the attached workspace.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CloudService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The location of the attached workspace.",
        SerializedName = @"workspaceRegion",
        PossibleTypes = new [] { typeof(string) })]
        string NetworkWatcherFlowAnalyticConfigurationWorkspaceRegion { get; set; }
        /// <summary>Resource Id of the attached workspace.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CloudService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Resource Id of the attached workspace.",
        SerializedName = @"workspaceResourceId",
        PossibleTypes = new [] { typeof(string) })]
        string NetworkWatcherFlowAnalyticConfigurationWorkspaceResourceId { get; set; }
        /// <summary>The provisioning state of the flow log.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CloudService.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The provisioning state of the flow log.",
        SerializedName = @"provisioningState",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.CloudService.Support.ProvisioningState) })]
        Microsoft.Azure.PowerShell.Cmdlets.CloudService.Support.ProvisioningState? ProvisioningState { get;  }
        /// <summary>Number of days to retain flow log records.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CloudService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Number of days to retain flow log records.",
        SerializedName = @"days",
        PossibleTypes = new [] { typeof(int) })]
        int? RetentionPolicyDay { get; set; }
        /// <summary>Flag to enable/disable retention.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CloudService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Flag to enable/disable retention.",
        SerializedName = @"enabled",
        PossibleTypes = new [] { typeof(bool) })]
        bool? RetentionPolicyEnabled { get; set; }
        /// <summary>ID of the storage account which is used to store the flow log.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CloudService.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"ID of the storage account which is used to store the flow log.",
        SerializedName = @"storageId",
        PossibleTypes = new [] { typeof(string) })]
        string StorageId { get; set; }
        /// <summary>Guid of network security group to which flow log will be applied.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CloudService.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Guid of network security group to which flow log will be applied.",
        SerializedName = @"targetResourceGuid",
        PossibleTypes = new [] { typeof(string) })]
        string TargetResourceGuid { get;  }
        /// <summary>ID of network security group to which flow log will be applied.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CloudService.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"ID of network security group to which flow log will be applied.",
        SerializedName = @"targetResourceId",
        PossibleTypes = new [] { typeof(string) })]
        string TargetResourceId { get; set; }

    }
    /// Parameters that define the configuration of flow log.
    internal partial interface IFlowLogPropertiesFormatInternal

    {
        /// <summary>Flag to enable/disable flow logging.</summary>
        bool? Enabled { get; set; }
        /// <summary>Parameters that define the configuration of traffic analytics.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.CloudService.Models.Api20210301.ITrafficAnalyticsConfigurationProperties FlowAnalyticConfigurationNetworkWatcherFlowAnalyticsConfiguration { get; set; }
        /// <summary>Parameters that define the configuration of traffic analytics.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.CloudService.Models.Api20210301.ITrafficAnalyticsProperties FlowAnalyticsConfiguration { get; set; }
        /// <summary>Parameters that define the flow log format.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.CloudService.Models.Api20210301.IFlowLogFormatParameters Format { get; set; }
        /// <summary>The file type of flow log.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.CloudService.Support.FlowLogFormatType? FormatType { get; set; }
        /// <summary>The version (revision) of the flow log.</summary>
        int? FormatVersion { get; set; }
        /// <summary>Flag to enable/disable traffic analytics.</summary>
        bool? NetworkWatcherFlowAnalyticConfigurationEnabled { get; set; }
        /// <summary>
        /// The interval in minutes which would decide how frequently TA service should do flow analytics.
        /// </summary>
        int? NetworkWatcherFlowAnalyticConfigurationTrafficAnalyticsInterval { get; set; }
        /// <summary>The resource guid of the attached workspace.</summary>
        string NetworkWatcherFlowAnalyticConfigurationWorkspaceId { get; set; }
        /// <summary>The location of the attached workspace.</summary>
        string NetworkWatcherFlowAnalyticConfigurationWorkspaceRegion { get; set; }
        /// <summary>Resource Id of the attached workspace.</summary>
        string NetworkWatcherFlowAnalyticConfigurationWorkspaceResourceId { get; set; }
        /// <summary>The provisioning state of the flow log.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.CloudService.Support.ProvisioningState? ProvisioningState { get; set; }
        /// <summary>Parameters that define the retention policy for flow log.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.CloudService.Models.Api20210301.IRetentionPolicyParameters RetentionPolicy { get; set; }
        /// <summary>Number of days to retain flow log records.</summary>
        int? RetentionPolicyDay { get; set; }
        /// <summary>Flag to enable/disable retention.</summary>
        bool? RetentionPolicyEnabled { get; set; }
        /// <summary>ID of the storage account which is used to store the flow log.</summary>
        string StorageId { get; set; }
        /// <summary>Guid of network security group to which flow log will be applied.</summary>
        string TargetResourceGuid { get; set; }
        /// <summary>ID of network security group to which flow log will be applied.</summary>
        string TargetResourceId { get; set; }

    }
}