
# ----------------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# http://www.apache.org/licenses/LICENSE-2.0
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# Code generated by Microsoft (R) AutoRest Code Generator.Changes may cause incorrect behavior and will be lost if the code
# is regenerated.
# ----------------------------------------------------------------------------------

<#
.Synopsis
Create an in-memory object for Extension.
.Description
Create an in-memory object for Extension.

.Outputs
Microsoft.Azure.PowerShell.Cmdlets.CloudService.Models.Extension
.Link
https://learn.microsoft.com/powershell/module/Az.CloudService/new-azcloudserviceextensionobject
#>
function New-AzCloudServiceExtensionObject {
    [Microsoft.Azure.PowerShell.Cmdlets.CloudService.ModelCmdletAttribute()]
    [OutputType('Microsoft.Azure.PowerShell.Cmdlets.CloudService.Models.Extension')]
    [CmdletBinding(PositionalBinding=$false)]
    Param(

        [Parameter(HelpMessage="Explicitly specify whether platform can automatically upgrade typeHandlerVersion to higher minor versions when they become available.")]
        [bool]
        $AutoUpgradeMinorVersion,
        [Parameter(HelpMessage="Tag to force apply the provided public and protected settings.
        Changing the tag value allows for re-running the extension without changing any of the public or protected settings.
        If forceUpdateTag is not changed, updates to public or protected settings would still be applied by the handler.
        If neither forceUpdateTag nor any of public or protected settings change, extension would flow to the role instance with the same sequence-number, and
        it is up to handler implementation whether to re-run it or not.")]
        [string]
        $ForceUpdateTag,
        [Parameter(HelpMessage="The name of the extension.")]
        [string]
        $Name,
        [Parameter(HelpMessage="Protected settings for the extension which are encrypted before sent to the role instance.")]
        [string]
        $ProtectedSetting,
        [Parameter(HelpMessage="Secret URL which contains the protected settings of the extension.")]
        [string]
        $ProtectedSettingFromKeyVaultSecretUrl,
        [Parameter(HelpMessage="The name of the extension handler publisher.")]
        [string]
        $Publisher,
        [Parameter(HelpMessage="Optional list of roles to apply this extension. If property is not specified or '*' is specified, extension is applied to all roles in the cloud service.")]
        [string[]]
        $RolesAppliedTo,
        [Parameter(HelpMessage="Public settings for the extension. For JSON extensions, this is the JSON settings for the extension. For XML Extension (like RDP), this is the XML setting for the extension.")]
        [string]
        $Setting,
        [Parameter(HelpMessage="Resource Id.")]
        [string]
        $SourceVaultId,
        [Parameter(HelpMessage="Specifies the type of the extension.")]
        [string]
        $Type,
        [Parameter(HelpMessage="Specifies the version of the extension. Specifies the version of the extension. If this element is not specified or an asterisk (*) is used as the value, the latest version of the extension is used. If the value is specified with a major version number and an asterisk as the minor version number (X.), the latest minor version of the specified major version is selected. If a major version number and a minor version number are specified (X.Y), the specific extension version is selected. If a version is specified, an auto-upgrade is performed on the role instance.")]
        [string]
        $TypeHandlerVersion
    )

    process {
        $Object = [Microsoft.Azure.PowerShell.Cmdlets.CloudService.Models.Extension]::New()

        if ($PSBoundParameters.ContainsKey('AutoUpgradeMinorVersion')) {
            $Object.AutoUpgradeMinorVersion = $AutoUpgradeMinorVersion
        }
        if ($PSBoundParameters.ContainsKey('ForceUpdateTag')) {
            $Object.ForceUpdateTag = $ForceUpdateTag
        }
        if ($PSBoundParameters.ContainsKey('Name')) {
            $Object.Name = $Name
        }
        if ($PSBoundParameters.ContainsKey('ProtectedSetting')) {
            $Object.ProtectedSetting = $ProtectedSetting
        }
        if ($PSBoundParameters.ContainsKey('ProtectedSettingFromKeyVaultSecretUrl')) {
            $Object.ProtectedSettingFromKeyVaultSecretUrl = $ProtectedSettingFromKeyVaultSecretUrl
        }
        if ($PSBoundParameters.ContainsKey('Publisher')) {
            $Object.Publisher = $Publisher
        }
        if ($PSBoundParameters.ContainsKey('RolesAppliedTo')) {
            $Object.RolesAppliedTo = $RolesAppliedTo
        }
        if ($PSBoundParameters.ContainsKey('Setting')) {
            $Object.Setting = $Setting
        }
        if ($PSBoundParameters.ContainsKey('SourceVaultId')) {
            $Object.SourceVaultId = $SourceVaultId
        }
        if ($PSBoundParameters.ContainsKey('Type')) {
            $Object.Type = $Type
        }
        if ($PSBoundParameters.ContainsKey('TypeHandlerVersion')) {
            $Object.TypeHandlerVersion = $TypeHandlerVersion
        }
        return $Object
    }
}

