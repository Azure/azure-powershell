// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20230201
{
    using static Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Runtime.Extensions;

    /// <summary>Simple policy schedule.</summary>
    public partial class SimpleSchedulePolicy
    {

        /// <summary>
        /// <c>AfterFromJson</c> will be called after the json deserialization has finished, allowing customization of the object
        /// before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="json">The JsonNode that should be deserialized into this object.</param>

        partial void AfterFromJson(Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Runtime.Json.JsonObject json);

        /// <summary>
        /// <c>AfterToJson</c> will be called after the json serialization has finished, allowing customization of the <see cref="Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Runtime.Json.JsonObject"
        /// /> before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="container">The JSON container that the serialization result will be placed in.</param>

        partial void AfterToJson(ref Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Runtime.Json.JsonObject container);

        /// <summary>
        /// <c>BeforeFromJson</c> will be called before the json deserialization has commenced, allowing complete customization of
        /// the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <paramref name= "returnNow" />
        /// output parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="json">The JsonNode that should be deserialized into this object.</param>
        /// <param name="returnNow">Determines if the rest of the deserialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeFromJson(Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Runtime.Json.JsonObject json, ref bool returnNow);

        /// <summary>
        /// <c>BeforeToJson</c> will be called before the json serialization has commenced, allowing complete customization of the
        /// object before it is serialized.
        /// If you wish to disable the default serialization entirely, return <c>true</c> in the <paramref name="returnNow" /> output
        /// parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="container">The JSON container that the serialization result will be placed in.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeToJson(ref Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Runtime.Json.JsonObject container, ref bool returnNow);

        /// <summary>
        /// Deserializes a <see cref="Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Runtime.Json.JsonNode"/> into an instance of Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20230201.ISimpleSchedulePolicy.
        /// </summary>
        /// <param name="node">a <see cref="Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Runtime.Json.JsonNode" /> to deserialize from.</param>
        /// <returns>
        /// an instance of Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20230201.ISimpleSchedulePolicy.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20230201.ISimpleSchedulePolicy FromJson(Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Runtime.Json.JsonNode node)
        {
            return node is Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Runtime.Json.JsonObject json ? new SimpleSchedulePolicy(json) : null;
        }

        /// <summary>
        /// Deserializes a Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Runtime.Json.JsonObject into a new instance of <see cref="SimpleSchedulePolicy" />.
        /// </summary>
        /// <param name="json">A Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Runtime.Json.JsonObject instance to deserialize from.</param>
        internal SimpleSchedulePolicy(Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Runtime.Json.JsonObject json)
        {
            bool returnNow = false;
            BeforeFromJson(json, ref returnNow);
            if (returnNow)
            {
                return;
            }
            __schedulePolicy = new Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20230201.SchedulePolicy(json);
            {_scheduleRunFrequency = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Runtime.Json.JsonString>("scheduleRunFrequency"), out var __jsonScheduleRunFrequency) ? (string)__jsonScheduleRunFrequency : (string)ScheduleRunFrequency;}
            {_scheduleRunDay = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Runtime.Json.JsonArray>("scheduleRunDays"), out var __jsonScheduleRunDays) ? If( __jsonScheduleRunDays as Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Runtime.Json.JsonArray, out var __v) ? new global::System.Func<Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Support.DayOfWeek[]>(()=> global::System.Linq.Enumerable.ToArray(global::System.Linq.Enumerable.Select(__v, (__u)=>(Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Support.DayOfWeek) (__u is Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Runtime.Json.JsonString __t ? (Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Support.DayOfWeek)(__t.ToString()) : ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Support.DayOfWeek)""))) ))() : null : ScheduleRunDay;}
            {_scheduleRunTime = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Runtime.Json.JsonArray>("scheduleRunTimes"), out var __jsonScheduleRunTimes) ? If( __jsonScheduleRunTimes as Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Runtime.Json.JsonArray, out var __q) ? new global::System.Func<global::System.DateTime[]>(()=> global::System.Linq.Enumerable.ToArray(global::System.Linq.Enumerable.Select(__q, (__p)=>(global::System.DateTime) (__p is Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Runtime.Json.JsonString __o ? global::System.DateTime.TryParse((string)__o, global::System.Globalization.CultureInfo.InvariantCulture, global::System.Globalization.DateTimeStyles.AdjustToUniversal, out var __oValue) ? __oValue : default(global::System.DateTime) : default(global::System.DateTime))) ))() : null : ScheduleRunTime;}
            {_hourlySchedule = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Runtime.Json.JsonObject>("hourlySchedule"), out var __jsonHourlySchedule) ? Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20230201.HourlySchedule.FromJson(__jsonHourlySchedule) : HourlySchedule;}
            {_scheduleWeeklyFrequency = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Runtime.Json.JsonNumber>("scheduleWeeklyFrequency"), out var __jsonScheduleWeeklyFrequency) ? (int?)__jsonScheduleWeeklyFrequency : ScheduleWeeklyFrequency;}
            AfterFromJson(json);
        }

        /// <summary>
        /// Serializes this instance of <see cref="SimpleSchedulePolicy" /> into a <see cref="Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Runtime.Json.JsonNode" />.
        /// </summary>
        /// <param name="container">The <see cref="Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Runtime.Json.JsonObject"/> container to serialize this object into. If the caller
        /// passes in <c>null</c>, a new instance will be created and returned to the caller.</param>
        /// <param name="serializationMode">Allows the caller to choose the depth of the serialization. See <see cref="Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Runtime.SerializationMode"/>.</param>
        /// <returns>
        /// a serialized instance of <see cref="SimpleSchedulePolicy" /> as a <see cref="Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Runtime.Json.JsonNode" />.
        /// </returns>
        public Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Runtime.Json.JsonNode ToJson(Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Runtime.Json.JsonObject container, Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Runtime.SerializationMode serializationMode)
        {
            container = container ?? new Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Runtime.Json.JsonObject();

            bool returnNow = false;
            BeforeToJson(ref container, ref returnNow);
            if (returnNow)
            {
                return container;
            }
            __schedulePolicy?.ToJson(container, serializationMode);
            AddIf( null != (((object)this._scheduleRunFrequency)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Runtime.Json.JsonString(this._scheduleRunFrequency.ToString()) : null, "scheduleRunFrequency" ,container.Add );
            if (null != this._scheduleRunDay)
            {
                var __w = new Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Runtime.Json.XNodeArray();
                foreach( var __x in this._scheduleRunDay )
                {
                    AddIf(null != (((object)__x)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Runtime.Json.JsonString(__x.ToString()) : null ,__w.Add);
                }
                container.Add("scheduleRunDays",__w);
            }
            if (null != this._scheduleRunTime)
            {
                var __r = new Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Runtime.Json.XNodeArray();
                foreach( var __s in this._scheduleRunTime )
                {
                    AddIf((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Runtime.Json.JsonString(__s.ToString(@"yyyy'-'MM'-'dd'T'HH':'mm':'ss.fffffffK",global::System.Globalization.CultureInfo.InvariantCulture)) ,__r.Add);
                }
                container.Add("scheduleRunTimes",__r);
            }
            AddIf( null != this._hourlySchedule ? (Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Runtime.Json.JsonNode) this._hourlySchedule.ToJson(null,serializationMode) : null, "hourlySchedule" ,container.Add );
            AddIf( null != this._scheduleWeeklyFrequency ? (Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Runtime.Json.JsonNode)new Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Runtime.Json.JsonNumber((int)this._scheduleWeeklyFrequency) : null, "scheduleWeeklyFrequency" ,container.Add );
            AfterToJson(ref container);
            return container;
        }
    }
}