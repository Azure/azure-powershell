// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20230201
{
    using static Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Runtime.Extensions;

    /// <summary>IaaS VM workload-specific restore.</summary>
    public partial class IaasVMRestoreRequest :
        Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20230201.IIaasVMRestoreRequest,
        Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20230201.IIaasVMRestoreRequestInternal,
        Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Runtime.IValidates
    {
        /// <summary>
        /// Backing field for Inherited model <see cref= "Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20230201.IRestoreRequest"
        /// />
        /// </summary>
        private Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20230201.IRestoreRequest __restoreRequest = new Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20230201.RestoreRequest();

        /// <summary>Backing field for <see cref="AffinityGroup" /> property.</summary>
        private string _affinityGroup;

        /// <summary>
        /// Affinity group associated to VM to be restored. Used only for Classic Compute Virtual Machines.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.PropertyOrigin.Owned)]
        public string AffinityGroup { get => this._affinityGroup; set => this._affinityGroup = value; }

        /// <summary>Backing field for <see cref="CreateNewCloudService" /> property.</summary>
        private bool? _createNewCloudService;

        /// <summary>
        /// Should a new cloud service be created while restoring the VM. If this is false, VM will be restored to the same
        /// cloud service as it was at the time of backup.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.PropertyOrigin.Owned)]
        public bool? CreateNewCloudService { get => this._createNewCloudService; set => this._createNewCloudService = value; }

        /// <summary>Backing field for <see cref="DiskEncryptionSetId" /> property.</summary>
        private string _diskEncryptionSetId;

        /// <summary>
        /// DiskEncryptionSet's ID - needed if the VM needs to be encrypted at rest during restore with customer managed key.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.PropertyOrigin.Owned)]
        public string DiskEncryptionSetId { get => this._diskEncryptionSetId; set => this._diskEncryptionSetId = value; }

        /// <summary>Backing field for <see cref="EncryptionDetail" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20230201.IEncryptionDetails _encryptionDetail;

        /// <summary>Details needed if the VM was encrypted at the time of backup.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20230201.IEncryptionDetails EncryptionDetail { get => (this._encryptionDetail = this._encryptionDetail ?? new Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20230201.EncryptionDetails()); set => this._encryptionDetail = value; }

        /// <summary>
        /// Identifies whether this backup copy represents an encrypted VM at the time of backup.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.PropertyOrigin.Inlined)]
        public bool? EncryptionDetailEncryptionEnabled { get => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20230201.IEncryptionDetailsInternal)EncryptionDetail).EncryptionEnabled; set => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20230201.IEncryptionDetailsInternal)EncryptionDetail).EncryptionEnabled = value ?? default(bool); }

        /// <summary>Key Url.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.PropertyOrigin.Inlined)]
        public string EncryptionDetailKekUrl { get => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20230201.IEncryptionDetailsInternal)EncryptionDetail).KekUrl; set => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20230201.IEncryptionDetailsInternal)EncryptionDetail).KekUrl = value ?? null; }

        /// <summary>ID of Key Vault where KEK is stored.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.PropertyOrigin.Inlined)]
        public string EncryptionDetailKekVaultId { get => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20230201.IEncryptionDetailsInternal)EncryptionDetail).KekVaultId; set => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20230201.IEncryptionDetailsInternal)EncryptionDetail).KekVaultId = value ?? null; }

        /// <summary>Secret Url.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.PropertyOrigin.Inlined)]
        public string EncryptionDetailSecretKeyUrl { get => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20230201.IEncryptionDetailsInternal)EncryptionDetail).SecretKeyUrl; set => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20230201.IEncryptionDetailsInternal)EncryptionDetail).SecretKeyUrl = value ?? null; }

        /// <summary>ID of Key Vault where Secret is stored.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.PropertyOrigin.Inlined)]
        public string EncryptionDetailSecretKeyVaultId { get => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20230201.IEncryptionDetailsInternal)EncryptionDetail).SecretKeyVaultId; set => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20230201.IEncryptionDetailsInternal)EncryptionDetail).SecretKeyVaultId = value ?? null; }

        /// <summary>Backing field for <see cref="ExtendedLocation" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20230201.IExtendedLocation _extendedLocation;

        /// <summary>
        /// Target extended location where the VM should be restored,
        /// should be null if restore is to be done in public cloud
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20230201.IExtendedLocation ExtendedLocation { get => (this._extendedLocation = this._extendedLocation ?? new Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20230201.ExtendedLocation()); set => this._extendedLocation = value; }

        /// <summary>Name of the extended location.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.PropertyOrigin.Inlined)]
        public string ExtendedLocationName { get => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20230201.IExtendedLocationInternal)ExtendedLocation).Name; set => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20230201.IExtendedLocationInternal)ExtendedLocation).Name = value ?? null; }

        /// <summary>Type of the extended location. Possible values include: 'EdgeZone'</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.PropertyOrigin.Inlined)]
        public string ExtendedLocationType { get => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20230201.IExtendedLocationInternal)ExtendedLocation).Type; set => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20230201.IExtendedLocationInternal)ExtendedLocation).Type = value ?? null; }

        /// <summary>Backing field for <see cref="IdentityBasedRestoreDetail" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20230201.IIdentityBasedRestoreDetails _identityBasedRestoreDetail;

        /// <summary>IaaS VM workload specific restore details for restores using managed identity.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20230201.IIdentityBasedRestoreDetails IdentityBasedRestoreDetail { get => (this._identityBasedRestoreDetail = this._identityBasedRestoreDetail ?? new Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20230201.IdentityBasedRestoreDetails()); set => this._identityBasedRestoreDetail = value; }

        /// <summary>Gets the class type.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.PropertyOrigin.Inlined)]
        public string IdentityBasedRestoreDetailObjectType { get => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20230201.IIdentityBasedRestoreDetailsInternal)IdentityBasedRestoreDetail).ObjectType; set => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20230201.IIdentityBasedRestoreDetailsInternal)IdentityBasedRestoreDetail).ObjectType = value ?? null; }

        /// <summary>Fully qualified ARM ID of the target storage account.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.PropertyOrigin.Inlined)]
        public string IdentityBasedRestoreDetailTargetStorageAccountId { get => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20230201.IIdentityBasedRestoreDetailsInternal)IdentityBasedRestoreDetail).TargetStorageAccountId; set => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20230201.IIdentityBasedRestoreDetailsInternal)IdentityBasedRestoreDetail).TargetStorageAccountId = value ?? null; }

        /// <summary>Backing field for <see cref="IdentityInfo" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20230201.IIdentityInfo _identityInfo;

        /// <summary>Managed Identity information required to access customer storage account.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20230201.IIdentityInfo IdentityInfo { get => (this._identityInfo = this._identityInfo ?? new Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20230201.IdentityInfo()); set => this._identityInfo = value; }

        /// <summary>To differentiate if the managed identity is system assigned or user assigned</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.PropertyOrigin.Inlined)]
        public bool? IdentityInfoIsSystemAssignedIdentity { get => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20230201.IIdentityInfoInternal)IdentityInfo).IsSystemAssignedIdentity; set => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20230201.IIdentityInfoInternal)IdentityInfo).IsSystemAssignedIdentity = value ?? default(bool); }

        /// <summary>
        /// Managed Identity Resource Id
        /// Optional: Might not be required in the case of system assigned managed identity
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.PropertyOrigin.Inlined)]
        public string IdentityInfoManagedIdentityResourceId { get => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20230201.IIdentityInfoInternal)IdentityInfo).ManagedIdentityResourceId; set => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20230201.IIdentityInfoInternal)IdentityInfo).ManagedIdentityResourceId = value ?? null; }

        /// <summary>Internal Acessors for EncryptionDetail</summary>
        Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20230201.IEncryptionDetails Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20230201.IIaasVMRestoreRequestInternal.EncryptionDetail { get => (this._encryptionDetail = this._encryptionDetail ?? new Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20230201.EncryptionDetails()); set { {_encryptionDetail = value;} } }

        /// <summary>Internal Acessors for ExtendedLocation</summary>
        Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20230201.IExtendedLocation Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20230201.IIaasVMRestoreRequestInternal.ExtendedLocation { get => (this._extendedLocation = this._extendedLocation ?? new Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20230201.ExtendedLocation()); set { {_extendedLocation = value;} } }

        /// <summary>Internal Acessors for IdentityBasedRestoreDetail</summary>
        Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20230201.IIdentityBasedRestoreDetails Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20230201.IIaasVMRestoreRequestInternal.IdentityBasedRestoreDetail { get => (this._identityBasedRestoreDetail = this._identityBasedRestoreDetail ?? new Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20230201.IdentityBasedRestoreDetails()); set { {_identityBasedRestoreDetail = value;} } }

        /// <summary>Internal Acessors for IdentityInfo</summary>
        Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20230201.IIdentityInfo Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20230201.IIaasVMRestoreRequestInternal.IdentityInfo { get => (this._identityInfo = this._identityInfo ?? new Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20230201.IdentityInfo()); set { {_identityInfo = value;} } }

        /// <summary>Internal Acessors for SecuredVMDetail</summary>
        Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20230201.ISecuredVMDetails Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20230201.IIaasVMRestoreRequestInternal.SecuredVMDetail { get => (this._securedVMDetail = this._securedVMDetail ?? new Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20230201.SecuredVMDetails()); set { {_securedVMDetail = value;} } }

        /// <summary>Internal Acessors for TargetDiskNetworkAccessSetting</summary>
        Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20230201.ITargetDiskNetworkAccessSettings Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20230201.IIaasVMRestoreRequestInternal.TargetDiskNetworkAccessSetting { get => (this._targetDiskNetworkAccessSetting = this._targetDiskNetworkAccessSetting ?? new Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20230201.TargetDiskNetworkAccessSettings()); set { {_targetDiskNetworkAccessSetting = value;} } }

        /// <summary>
        /// This property will be used as the discriminator for deciding the specific types in the polymorphic chain of types.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.PropertyOrigin.Inherited)]
        public string ObjectType { get => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20230201.IRestoreRequestInternal)__restoreRequest).ObjectType; set => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20230201.IRestoreRequestInternal)__restoreRequest).ObjectType = value ; }

        /// <summary>Backing field for <see cref="OriginalStorageAccountOption" /> property.</summary>
        private bool? _originalStorageAccountOption;

        /// <summary>Original Storage Account Option</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.PropertyOrigin.Owned)]
        public bool? OriginalStorageAccountOption { get => this._originalStorageAccountOption; set => this._originalStorageAccountOption = value; }

        /// <summary>Backing field for <see cref="RecoveryPointId" /> property.</summary>
        private string _recoveryPointId;

        /// <summary>ID of the backup copy to be recovered.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.PropertyOrigin.Owned)]
        public string RecoveryPointId { get => this._recoveryPointId; set => this._recoveryPointId = value; }

        /// <summary>Backing field for <see cref="RecoveryType" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Support.RecoveryType? _recoveryType;

        /// <summary>Type of this recovery.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Support.RecoveryType? RecoveryType { get => this._recoveryType; set => this._recoveryType = value; }

        /// <summary>Backing field for <see cref="Region" /> property.</summary>
        private string _region;

        /// <summary>Region in which the virtual machine is restored.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.PropertyOrigin.Owned)]
        public string Region { get => this._region; set => this._region = value; }

        /// <summary>Backing field for <see cref="RestoreDiskLunList" /> property.</summary>
        private int[] _restoreDiskLunList;

        /// <summary>List of Disk LUNs for partial restore</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.PropertyOrigin.Owned)]
        public int[] RestoreDiskLunList { get => this._restoreDiskLunList; set => this._restoreDiskLunList = value; }

        /// <summary>Backing field for <see cref="RestoreWithManagedDisk" /> property.</summary>
        private bool? _restoreWithManagedDisk;

        /// <summary>Flag to denote of an Unmanaged disk VM should be restored with Managed disks.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.PropertyOrigin.Owned)]
        public bool? RestoreWithManagedDisk { get => this._restoreWithManagedDisk; set => this._restoreWithManagedDisk = value; }

        /// <summary>Backing field for <see cref="SecuredVMDetail" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20230201.ISecuredVMDetails _securedVMDetail;

        /// <summary>Stores Secured VM Details</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20230201.ISecuredVMDetails SecuredVMDetail { get => (this._securedVMDetail = this._securedVMDetail ?? new Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20230201.SecuredVMDetails()); set => this._securedVMDetail = value; }

        /// <summary>Gets or Sets Disk Encryption Set Id for Secured VM OS Disk</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.PropertyOrigin.Inlined)]
        public string SecuredVMDetailSecuredVmosdiskEncryptionSetId { get => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20230201.ISecuredVMDetailsInternal)SecuredVMDetail).SecuredVmosDiskEncryptionSetId; set => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20230201.ISecuredVMDetailsInternal)SecuredVMDetail).SecuredVmosDiskEncryptionSetId = value ?? null; }

        /// <summary>Backing field for <see cref="SourceResourceId" /> property.</summary>
        private string _sourceResourceId;

        /// <summary>Fully qualified ARM ID of the VM which is being recovered.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.PropertyOrigin.Owned)]
        public string SourceResourceId { get => this._sourceResourceId; set => this._sourceResourceId = value; }

        /// <summary>Backing field for <see cref="StorageAccountId" /> property.</summary>
        private string _storageAccountId;

        /// <summary>
        /// Fully qualified ARM ID of the storage account to which the VM has to be restored.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.PropertyOrigin.Owned)]
        public string StorageAccountId { get => this._storageAccountId; set => this._storageAccountId = value; }

        /// <summary>Backing field for <see cref="SubnetId" /> property.</summary>
        private string _subnetId;

        /// <summary>
        /// Subnet ID, is the subnet ID associated with the to be restored VM. For Classic VMs it would be
        /// {VnetID}/Subnet/{SubnetName} and, for the Azure Resource Manager VMs it would be ARM resource ID used to represent
        /// the subnet.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.PropertyOrigin.Owned)]
        public string SubnetId { get => this._subnetId; set => this._subnetId = value; }

        /// <summary>Backing field for <see cref="TargetDiskNetworkAccessSetting" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20230201.ITargetDiskNetworkAccessSettings _targetDiskNetworkAccessSetting;

        /// <summary>Specifies target network access settings for disks of VM to be restored,</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20230201.ITargetDiskNetworkAccessSettings TargetDiskNetworkAccessSetting { get => (this._targetDiskNetworkAccessSetting = this._targetDiskNetworkAccessSetting ?? new Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20230201.TargetDiskNetworkAccessSettings()); set => this._targetDiskNetworkAccessSetting = value; }

        /// <summary>
        /// Gets or sets the ARM resource ID of the target disk access to be used when TargetDiskNetworkAccessOption is set to TargetDiskNetworkAccessOption.UseNew
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.PropertyOrigin.Inlined)]
        public string TargetDiskNetworkAccessSettingTargetDiskAccessId { get => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20230201.ITargetDiskNetworkAccessSettingsInternal)TargetDiskNetworkAccessSetting).TargetDiskAccessId; set => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20230201.ITargetDiskNetworkAccessSettingsInternal)TargetDiskNetworkAccessSetting).TargetDiskAccessId = value ?? null; }

        /// <summary>Network access settings to be used for restored disks</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Support.TargetDiskNetworkAccessOption? TargetDiskNetworkAccessSettingTargetDiskNetworkAccessOption { get => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20230201.ITargetDiskNetworkAccessSettingsInternal)TargetDiskNetworkAccessSetting).TargetDiskNetworkAccessOption; set => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20230201.ITargetDiskNetworkAccessSettingsInternal)TargetDiskNetworkAccessSetting).TargetDiskNetworkAccessOption = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Support.TargetDiskNetworkAccessOption)""); }

        /// <summary>Backing field for <see cref="TargetDomainNameId" /> property.</summary>
        private string _targetDomainNameId;

        /// <summary>
        /// Fully qualified ARM ID of the domain name to be associated to the VM being restored. This applies only to Classic
        /// Virtual Machines.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.PropertyOrigin.Owned)]
        public string TargetDomainNameId { get => this._targetDomainNameId; set => this._targetDomainNameId = value; }

        /// <summary>Backing field for <see cref="TargetResourceGroupId" /> property.</summary>
        private string _targetResourceGroupId;

        /// <summary>
        /// This is the ARM Id of the resource group that you want to create for this Virtual machine and other artifacts.
        /// For e.g. /subscriptions/{subId}/resourcegroups/{rg}
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.PropertyOrigin.Owned)]
        public string TargetResourceGroupId { get => this._targetResourceGroupId; set => this._targetResourceGroupId = value; }

        /// <summary>Backing field for <see cref="TargetVirtualMachineId" /> property.</summary>
        private string _targetVirtualMachineId;

        /// <summary>
        /// This is the complete ARM Id of the VM that will be created.
        /// For e.g. /subscriptions/{subId}/resourcegroups/{rg}/provider/Microsoft.Compute/virtualmachines/{vm}
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.PropertyOrigin.Owned)]
        public string TargetVirtualMachineId { get => this._targetVirtualMachineId; set => this._targetVirtualMachineId = value; }

        /// <summary>Backing field for <see cref="VirtualNetworkId" /> property.</summary>
        private string _virtualNetworkId;

        /// <summary>
        /// This is the virtual network Id of the vnet that will be attached to the virtual machine.
        /// User will be validated for join action permissions in the linked access.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.PropertyOrigin.Owned)]
        public string VirtualNetworkId { get => this._virtualNetworkId; set => this._virtualNetworkId = value; }

        /// <summary>Backing field for <see cref="Zone" /> property.</summary>
        private string[] _zone;

        /// <summary>Target zone where the VM and its disks should be restored.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.PropertyOrigin.Owned)]
        public string[] Zone { get => this._zone; set => this._zone = value; }

        /// <summary>Creates an new <see cref="IaasVMRestoreRequest" /> instance.</summary>
        public IaasVMRestoreRequest()
        {

        }

        /// <summary>Validates that this object meets the validation criteria.</summary>
        /// <param name="eventListener">an <see cref="Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Runtime.IEventListener" /> instance that will receive validation
        /// events.</param>
        /// <returns>
        /// A <see cref = "global::System.Threading.Tasks.Task" /> that will be complete when validation is completed.
        /// </returns>
        public async global::System.Threading.Tasks.Task Validate(Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Runtime.IEventListener eventListener)
        {
            await eventListener.AssertNotNull(nameof(__restoreRequest), __restoreRequest);
            await eventListener.AssertObjectIsValid(nameof(__restoreRequest), __restoreRequest);
        }
    }
    /// IaaS VM workload-specific restore.
    public partial interface IIaasVMRestoreRequest :
        Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Runtime.IJsonSerializable,
        Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20230201.IRestoreRequest
    {
        /// <summary>
        /// Affinity group associated to VM to be restored. Used only for Classic Compute Virtual Machines.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Affinity group associated to VM to be restored. Used only for Classic Compute Virtual Machines.",
        SerializedName = @"affinityGroup",
        PossibleTypes = new [] { typeof(string) })]
        string AffinityGroup { get; set; }
        /// <summary>
        /// Should a new cloud service be created while restoring the VM. If this is false, VM will be restored to the same
        /// cloud service as it was at the time of backup.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Should a new cloud service be created while restoring the VM. If this is false, VM will be restored to the same
        cloud service as it was at the time of backup.",
        SerializedName = @"createNewCloudService",
        PossibleTypes = new [] { typeof(bool) })]
        bool? CreateNewCloudService { get; set; }
        /// <summary>
        /// DiskEncryptionSet's ID - needed if the VM needs to be encrypted at rest during restore with customer managed key.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"DiskEncryptionSet's ID - needed if the VM needs to be encrypted at rest during restore with customer managed key.",
        SerializedName = @"diskEncryptionSetId",
        PossibleTypes = new [] { typeof(string) })]
        string DiskEncryptionSetId { get; set; }
        /// <summary>
        /// Identifies whether this backup copy represents an encrypted VM at the time of backup.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Identifies whether this backup copy represents an encrypted VM at the time of backup.",
        SerializedName = @"encryptionEnabled",
        PossibleTypes = new [] { typeof(bool) })]
        bool? EncryptionDetailEncryptionEnabled { get; set; }
        /// <summary>Key Url.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Key Url.",
        SerializedName = @"kekUrl",
        PossibleTypes = new [] { typeof(string) })]
        string EncryptionDetailKekUrl { get; set; }
        /// <summary>ID of Key Vault where KEK is stored.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"ID of Key Vault where KEK is stored.",
        SerializedName = @"kekVaultId",
        PossibleTypes = new [] { typeof(string) })]
        string EncryptionDetailKekVaultId { get; set; }
        /// <summary>Secret Url.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Secret Url.",
        SerializedName = @"secretKeyUrl",
        PossibleTypes = new [] { typeof(string) })]
        string EncryptionDetailSecretKeyUrl { get; set; }
        /// <summary>ID of Key Vault where Secret is stored.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"ID of Key Vault where Secret is stored.",
        SerializedName = @"secretKeyVaultId",
        PossibleTypes = new [] { typeof(string) })]
        string EncryptionDetailSecretKeyVaultId { get; set; }
        /// <summary>Name of the extended location.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Name of the extended location.",
        SerializedName = @"name",
        PossibleTypes = new [] { typeof(string) })]
        string ExtendedLocationName { get; set; }
        /// <summary>Type of the extended location. Possible values include: 'EdgeZone'</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Type of the extended location. Possible values include: 'EdgeZone'",
        SerializedName = @"type",
        PossibleTypes = new [] { typeof(string) })]
        string ExtendedLocationType { get; set; }
        /// <summary>Gets the class type.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Gets the class type.",
        SerializedName = @"objectType",
        PossibleTypes = new [] { typeof(string) })]
        string IdentityBasedRestoreDetailObjectType { get; set; }
        /// <summary>Fully qualified ARM ID of the target storage account.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Fully qualified ARM ID of the target storage account.",
        SerializedName = @"targetStorageAccountId",
        PossibleTypes = new [] { typeof(string) })]
        string IdentityBasedRestoreDetailTargetStorageAccountId { get; set; }
        /// <summary>To differentiate if the managed identity is system assigned or user assigned</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"To differentiate if the managed identity is system assigned or user assigned",
        SerializedName = @"isSystemAssignedIdentity",
        PossibleTypes = new [] { typeof(bool) })]
        bool? IdentityInfoIsSystemAssignedIdentity { get; set; }
        /// <summary>
        /// Managed Identity Resource Id
        /// Optional: Might not be required in the case of system assigned managed identity
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Managed Identity Resource Id
        Optional: Might not be required in the case of system assigned managed identity",
        SerializedName = @"managedIdentityResourceId",
        PossibleTypes = new [] { typeof(string) })]
        string IdentityInfoManagedIdentityResourceId { get; set; }
        /// <summary>Original Storage Account Option</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Original Storage Account Option",
        SerializedName = @"originalStorageAccountOption",
        PossibleTypes = new [] { typeof(bool) })]
        bool? OriginalStorageAccountOption { get; set; }
        /// <summary>ID of the backup copy to be recovered.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"ID of the backup copy to be recovered.",
        SerializedName = @"recoveryPointId",
        PossibleTypes = new [] { typeof(string) })]
        string RecoveryPointId { get; set; }
        /// <summary>Type of this recovery.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Type of this recovery.",
        SerializedName = @"recoveryType",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Support.RecoveryType) })]
        Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Support.RecoveryType? RecoveryType { get; set; }
        /// <summary>Region in which the virtual machine is restored.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Region in which the virtual machine is restored.",
        SerializedName = @"region",
        PossibleTypes = new [] { typeof(string) })]
        string Region { get; set; }
        /// <summary>List of Disk LUNs for partial restore</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"List of Disk LUNs for partial restore",
        SerializedName = @"restoreDiskLunList",
        PossibleTypes = new [] { typeof(int) })]
        int[] RestoreDiskLunList { get; set; }
        /// <summary>Flag to denote of an Unmanaged disk VM should be restored with Managed disks.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Flag to denote of an Unmanaged disk VM should be restored with Managed disks.",
        SerializedName = @"restoreWithManagedDisks",
        PossibleTypes = new [] { typeof(bool) })]
        bool? RestoreWithManagedDisk { get; set; }
        /// <summary>Gets or Sets Disk Encryption Set Id for Secured VM OS Disk</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Gets or Sets Disk Encryption Set Id for Secured VM OS Disk",
        SerializedName = @"securedVMOsDiskEncryptionSetId",
        PossibleTypes = new [] { typeof(string) })]
        string SecuredVMDetailSecuredVmosdiskEncryptionSetId { get; set; }
        /// <summary>Fully qualified ARM ID of the VM which is being recovered.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Fully qualified ARM ID of the VM which is being recovered.",
        SerializedName = @"sourceResourceId",
        PossibleTypes = new [] { typeof(string) })]
        string SourceResourceId { get; set; }
        /// <summary>
        /// Fully qualified ARM ID of the storage account to which the VM has to be restored.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Fully qualified ARM ID of the storage account to which the VM has to be restored.",
        SerializedName = @"storageAccountId",
        PossibleTypes = new [] { typeof(string) })]
        string StorageAccountId { get; set; }
        /// <summary>
        /// Subnet ID, is the subnet ID associated with the to be restored VM. For Classic VMs it would be
        /// {VnetID}/Subnet/{SubnetName} and, for the Azure Resource Manager VMs it would be ARM resource ID used to represent
        /// the subnet.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Subnet ID, is the subnet ID associated with the to be restored VM. For Classic VMs it would be
        {VnetID}/Subnet/{SubnetName} and, for the Azure Resource Manager VMs it would be ARM resource ID used to represent
        the subnet.",
        SerializedName = @"subnetId",
        PossibleTypes = new [] { typeof(string) })]
        string SubnetId { get; set; }
        /// <summary>
        /// Gets or sets the ARM resource ID of the target disk access to be used when TargetDiskNetworkAccessOption is set to TargetDiskNetworkAccessOption.UseNew
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Gets or sets the ARM resource ID of the target disk access to be used when TargetDiskNetworkAccessOption is set to TargetDiskNetworkAccessOption.UseNew",
        SerializedName = @"targetDiskAccessId",
        PossibleTypes = new [] { typeof(string) })]
        string TargetDiskNetworkAccessSettingTargetDiskAccessId { get; set; }
        /// <summary>Network access settings to be used for restored disks</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Network access settings to be used for restored disks",
        SerializedName = @"targetDiskNetworkAccessOption",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Support.TargetDiskNetworkAccessOption) })]
        Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Support.TargetDiskNetworkAccessOption? TargetDiskNetworkAccessSettingTargetDiskNetworkAccessOption { get; set; }
        /// <summary>
        /// Fully qualified ARM ID of the domain name to be associated to the VM being restored. This applies only to Classic
        /// Virtual Machines.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Fully qualified ARM ID of the domain name to be associated to the VM being restored. This applies only to Classic
        Virtual Machines.",
        SerializedName = @"targetDomainNameId",
        PossibleTypes = new [] { typeof(string) })]
        string TargetDomainNameId { get; set; }
        /// <summary>
        /// This is the ARM Id of the resource group that you want to create for this Virtual machine and other artifacts.
        /// For e.g. /subscriptions/{subId}/resourcegroups/{rg}
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"This is the ARM Id of the resource group that you want to create for this Virtual machine and other artifacts.
        For e.g. /subscriptions/{subId}/resourcegroups/{rg}",
        SerializedName = @"targetResourceGroupId",
        PossibleTypes = new [] { typeof(string) })]
        string TargetResourceGroupId { get; set; }
        /// <summary>
        /// This is the complete ARM Id of the VM that will be created.
        /// For e.g. /subscriptions/{subId}/resourcegroups/{rg}/provider/Microsoft.Compute/virtualmachines/{vm}
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"This is the complete ARM Id of the VM that will be created.
        For e.g. /subscriptions/{subId}/resourcegroups/{rg}/provider/Microsoft.Compute/virtualmachines/{vm}",
        SerializedName = @"targetVirtualMachineId",
        PossibleTypes = new [] { typeof(string) })]
        string TargetVirtualMachineId { get; set; }
        /// <summary>
        /// This is the virtual network Id of the vnet that will be attached to the virtual machine.
        /// User will be validated for join action permissions in the linked access.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"This is the virtual network Id of the vnet that will be attached to the virtual machine.
        User will be validated for join action permissions in the linked access.",
        SerializedName = @"virtualNetworkId",
        PossibleTypes = new [] { typeof(string) })]
        string VirtualNetworkId { get; set; }
        /// <summary>Target zone where the VM and its disks should be restored.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Target zone where the VM and its disks should be restored.",
        SerializedName = @"zones",
        PossibleTypes = new [] { typeof(string) })]
        string[] Zone { get; set; }

    }
    /// IaaS VM workload-specific restore.
    internal partial interface IIaasVMRestoreRequestInternal :
        Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20230201.IRestoreRequestInternal
    {
        /// <summary>
        /// Affinity group associated to VM to be restored. Used only for Classic Compute Virtual Machines.
        /// </summary>
        string AffinityGroup { get; set; }
        /// <summary>
        /// Should a new cloud service be created while restoring the VM. If this is false, VM will be restored to the same
        /// cloud service as it was at the time of backup.
        /// </summary>
        bool? CreateNewCloudService { get; set; }
        /// <summary>
        /// DiskEncryptionSet's ID - needed if the VM needs to be encrypted at rest during restore with customer managed key.
        /// </summary>
        string DiskEncryptionSetId { get; set; }
        /// <summary>Details needed if the VM was encrypted at the time of backup.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20230201.IEncryptionDetails EncryptionDetail { get; set; }
        /// <summary>
        /// Identifies whether this backup copy represents an encrypted VM at the time of backup.
        /// </summary>
        bool? EncryptionDetailEncryptionEnabled { get; set; }
        /// <summary>Key Url.</summary>
        string EncryptionDetailKekUrl { get; set; }
        /// <summary>ID of Key Vault where KEK is stored.</summary>
        string EncryptionDetailKekVaultId { get; set; }
        /// <summary>Secret Url.</summary>
        string EncryptionDetailSecretKeyUrl { get; set; }
        /// <summary>ID of Key Vault where Secret is stored.</summary>
        string EncryptionDetailSecretKeyVaultId { get; set; }
        /// <summary>
        /// Target extended location where the VM should be restored,
        /// should be null if restore is to be done in public cloud
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20230201.IExtendedLocation ExtendedLocation { get; set; }
        /// <summary>Name of the extended location.</summary>
        string ExtendedLocationName { get; set; }
        /// <summary>Type of the extended location. Possible values include: 'EdgeZone'</summary>
        string ExtendedLocationType { get; set; }
        /// <summary>IaaS VM workload specific restore details for restores using managed identity.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20230201.IIdentityBasedRestoreDetails IdentityBasedRestoreDetail { get; set; }
        /// <summary>Gets the class type.</summary>
        string IdentityBasedRestoreDetailObjectType { get; set; }
        /// <summary>Fully qualified ARM ID of the target storage account.</summary>
        string IdentityBasedRestoreDetailTargetStorageAccountId { get; set; }
        /// <summary>Managed Identity information required to access customer storage account.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20230201.IIdentityInfo IdentityInfo { get; set; }
        /// <summary>To differentiate if the managed identity is system assigned or user assigned</summary>
        bool? IdentityInfoIsSystemAssignedIdentity { get; set; }
        /// <summary>
        /// Managed Identity Resource Id
        /// Optional: Might not be required in the case of system assigned managed identity
        /// </summary>
        string IdentityInfoManagedIdentityResourceId { get; set; }
        /// <summary>Original Storage Account Option</summary>
        bool? OriginalStorageAccountOption { get; set; }
        /// <summary>ID of the backup copy to be recovered.</summary>
        string RecoveryPointId { get; set; }
        /// <summary>Type of this recovery.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Support.RecoveryType? RecoveryType { get; set; }
        /// <summary>Region in which the virtual machine is restored.</summary>
        string Region { get; set; }
        /// <summary>List of Disk LUNs for partial restore</summary>
        int[] RestoreDiskLunList { get; set; }
        /// <summary>Flag to denote of an Unmanaged disk VM should be restored with Managed disks.</summary>
        bool? RestoreWithManagedDisk { get; set; }
        /// <summary>Stores Secured VM Details</summary>
        Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20230201.ISecuredVMDetails SecuredVMDetail { get; set; }
        /// <summary>Gets or Sets Disk Encryption Set Id for Secured VM OS Disk</summary>
        string SecuredVMDetailSecuredVmosdiskEncryptionSetId { get; set; }
        /// <summary>Fully qualified ARM ID of the VM which is being recovered.</summary>
        string SourceResourceId { get; set; }
        /// <summary>
        /// Fully qualified ARM ID of the storage account to which the VM has to be restored.
        /// </summary>
        string StorageAccountId { get; set; }
        /// <summary>
        /// Subnet ID, is the subnet ID associated with the to be restored VM. For Classic VMs it would be
        /// {VnetID}/Subnet/{SubnetName} and, for the Azure Resource Manager VMs it would be ARM resource ID used to represent
        /// the subnet.
        /// </summary>
        string SubnetId { get; set; }
        /// <summary>Specifies target network access settings for disks of VM to be restored,</summary>
        Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20230201.ITargetDiskNetworkAccessSettings TargetDiskNetworkAccessSetting { get; set; }
        /// <summary>
        /// Gets or sets the ARM resource ID of the target disk access to be used when TargetDiskNetworkAccessOption is set to TargetDiskNetworkAccessOption.UseNew
        /// </summary>
        string TargetDiskNetworkAccessSettingTargetDiskAccessId { get; set; }
        /// <summary>Network access settings to be used for restored disks</summary>
        Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Support.TargetDiskNetworkAccessOption? TargetDiskNetworkAccessSettingTargetDiskNetworkAccessOption { get; set; }
        /// <summary>
        /// Fully qualified ARM ID of the domain name to be associated to the VM being restored. This applies only to Classic
        /// Virtual Machines.
        /// </summary>
        string TargetDomainNameId { get; set; }
        /// <summary>
        /// This is the ARM Id of the resource group that you want to create for this Virtual machine and other artifacts.
        /// For e.g. /subscriptions/{subId}/resourcegroups/{rg}
        /// </summary>
        string TargetResourceGroupId { get; set; }
        /// <summary>
        /// This is the complete ARM Id of the VM that will be created.
        /// For e.g. /subscriptions/{subId}/resourcegroups/{rg}/provider/Microsoft.Compute/virtualmachines/{vm}
        /// </summary>
        string TargetVirtualMachineId { get; set; }
        /// <summary>
        /// This is the virtual network Id of the vnet that will be attached to the virtual machine.
        /// User will be validated for join action permissions in the linked access.
        /// </summary>
        string VirtualNetworkId { get; set; }
        /// <summary>Target zone where the VM and its disks should be restored.</summary>
        string[] Zone { get; set; }

    }
}