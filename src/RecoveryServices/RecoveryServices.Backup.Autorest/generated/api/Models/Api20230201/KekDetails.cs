// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20230201
{
    using static Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Runtime.Extensions;

    /// <summary>KEK is encryption key for BEK.</summary>
    public partial class KekDetails :
        Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20230201.IKekDetails,
        Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20230201.IKekDetailsInternal
    {

        /// <summary>Backing field for <see cref="KeyBackupData" /> property.</summary>
        private string _keyBackupData;

        /// <summary>KEK data.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.PropertyOrigin.Owned)]
        public string KeyBackupData { get => this._keyBackupData; set => this._keyBackupData = value; }

        /// <summary>Backing field for <see cref="KeyUrl" /> property.</summary>
        private string _keyUrl;

        /// <summary>Key is KEK.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.PropertyOrigin.Owned)]
        public string KeyUrl { get => this._keyUrl; set => this._keyUrl = value; }

        /// <summary>Backing field for <see cref="KeyVaultId" /> property.</summary>
        private string _keyVaultId;

        /// <summary>Key Vault ID where this Key is stored.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.PropertyOrigin.Owned)]
        public string KeyVaultId { get => this._keyVaultId; set => this._keyVaultId = value; }

        /// <summary>Creates an new <see cref="KekDetails" /> instance.</summary>
        public KekDetails()
        {

        }
    }
    /// KEK is encryption key for BEK.
    public partial interface IKekDetails :
        Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Runtime.IJsonSerializable
    {
        /// <summary>KEK data.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"KEK data.",
        SerializedName = @"keyBackupData",
        PossibleTypes = new [] { typeof(string) })]
        string KeyBackupData { get; set; }
        /// <summary>Key is KEK.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Key is KEK.",
        SerializedName = @"keyUrl",
        PossibleTypes = new [] { typeof(string) })]
        string KeyUrl { get; set; }
        /// <summary>Key Vault ID where this Key is stored.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Key Vault ID where this Key is stored.",
        SerializedName = @"keyVaultId",
        PossibleTypes = new [] { typeof(string) })]
        string KeyVaultId { get; set; }

    }
    /// KEK is encryption key for BEK.
    internal partial interface IKekDetailsInternal

    {
        /// <summary>KEK data.</summary>
        string KeyBackupData { get; set; }
        /// <summary>Key is KEK.</summary>
        string KeyUrl { get; set; }
        /// <summary>Key Vault ID where this Key is stored.</summary>
        string KeyVaultId { get; set; }

    }
}