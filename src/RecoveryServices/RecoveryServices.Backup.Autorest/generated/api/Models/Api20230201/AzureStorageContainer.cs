// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20230201
{
    using static Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Runtime.Extensions;

    /// <summary>Azure Storage Account workload-specific container.</summary>
    public partial class AzureStorageContainer :
        Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20230201.IAzureStorageContainer,
        Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20230201.IAzureStorageContainerInternal,
        Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Runtime.IValidates
    {
        /// <summary>
        /// Backing field for Inherited model <see cref= "Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20230201.IProtectionContainer"
        /// />
        /// </summary>
        private Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20230201.IProtectionContainer __protectionContainer = new Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20230201.ProtectionContainer();

        /// <summary>Backing field for <see cref="AcquireStorageAccountLock" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Support.AcquireStorageAccountLock? _acquireStorageAccountLock;

        /// <summary>Whether storage account lock is to be acquired for this container or not.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Support.AcquireStorageAccountLock? AcquireStorageAccountLock { get => this._acquireStorageAccountLock; set => this._acquireStorageAccountLock = value; }

        /// <summary>Type of backup management for the container.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.PropertyOrigin.Inherited)]
        public Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Support.BackupManagementType? BackupManagementType { get => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20230201.IProtectionContainerInternal)__protectionContainer).BackupManagementType; set => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20230201.IProtectionContainerInternal)__protectionContainer).BackupManagementType = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Support.BackupManagementType)""); }

        /// <summary>
        /// Type of the container. The value of this property for: 1. Compute Azure VM is Microsoft.Compute/virtualMachines 2.
        /// Classic Compute Azure VM is Microsoft.ClassicCompute/virtualMachines 3. Windows machines (like MAB, DPM etc) is
        /// Windows 4. Azure SQL instance is AzureSqlContainer. 5. Storage containers is StorageContainer. 6. Azure workload
        /// Backup is VMAppContainer
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.PropertyOrigin.Inherited)]
        public Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Support.ProtectableContainerType ContainerType { get => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20230201.IProtectionContainerInternal)__protectionContainer).ContainerType; set => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20230201.IProtectionContainerInternal)__protectionContainer).ContainerType = value ; }

        /// <summary>Friendly name of the container.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.PropertyOrigin.Inherited)]
        public string FriendlyName { get => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20230201.IProtectionContainerInternal)__protectionContainer).FriendlyName; set => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20230201.IProtectionContainerInternal)__protectionContainer).FriendlyName = value ?? null; }

        /// <summary>Status of health of the container.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.PropertyOrigin.Inherited)]
        public string HealthStatus { get => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20230201.IProtectionContainerInternal)__protectionContainer).HealthStatus; set => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20230201.IProtectionContainerInternal)__protectionContainer).HealthStatus = value ?? null; }

        /// <summary>Type of the protectable object associated with this container</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.PropertyOrigin.Inherited)]
        public string ProtectableObjectType { get => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20230201.IProtectionContainerInternal)__protectionContainer).ProtectableObjectType; set => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20230201.IProtectionContainerInternal)__protectionContainer).ProtectableObjectType = value ?? null; }

        /// <summary>Backing field for <see cref="ProtectedItemCount" /> property.</summary>
        private long? _protectedItemCount;

        /// <summary>Number of items backed up in this container.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.PropertyOrigin.Owned)]
        public long? ProtectedItemCount { get => this._protectedItemCount; set => this._protectedItemCount = value; }

        /// <summary>Status of registration of the container with the Recovery Services Vault.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.PropertyOrigin.Inherited)]
        public string RegistrationStatus { get => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20230201.IProtectionContainerInternal)__protectionContainer).RegistrationStatus; set => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20230201.IProtectionContainerInternal)__protectionContainer).RegistrationStatus = value ?? null; }

        /// <summary>Backing field for <see cref="ResourceGroup" /> property.</summary>
        private string _resourceGroup;

        /// <summary>Resource group name of Recovery Services Vault.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.PropertyOrigin.Owned)]
        public string ResourceGroup { get => this._resourceGroup; set => this._resourceGroup = value; }

        /// <summary>Backing field for <see cref="SourceResourceId" /> property.</summary>
        private string _sourceResourceId;

        /// <summary>Fully qualified ARM url.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.PropertyOrigin.Owned)]
        public string SourceResourceId { get => this._sourceResourceId; set => this._sourceResourceId = value; }

        /// <summary>Backing field for <see cref="StorageAccountVersion" /> property.</summary>
        private string _storageAccountVersion;

        /// <summary>Storage account version.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.PropertyOrigin.Owned)]
        public string StorageAccountVersion { get => this._storageAccountVersion; set => this._storageAccountVersion = value; }

        /// <summary>Creates an new <see cref="AzureStorageContainer" /> instance.</summary>
        public AzureStorageContainer()
        {

        }

        /// <summary>Validates that this object meets the validation criteria.</summary>
        /// <param name="eventListener">an <see cref="Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Runtime.IEventListener" /> instance that will receive validation
        /// events.</param>
        /// <returns>
        /// A <see cref = "global::System.Threading.Tasks.Task" /> that will be complete when validation is completed.
        /// </returns>
        public async global::System.Threading.Tasks.Task Validate(Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Runtime.IEventListener eventListener)
        {
            await eventListener.AssertNotNull(nameof(__protectionContainer), __protectionContainer);
            await eventListener.AssertObjectIsValid(nameof(__protectionContainer), __protectionContainer);
        }
    }
    /// Azure Storage Account workload-specific container.
    public partial interface IAzureStorageContainer :
        Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Runtime.IJsonSerializable,
        Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20230201.IProtectionContainer
    {
        /// <summary>Whether storage account lock is to be acquired for this container or not.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Whether storage account lock is to be acquired for this container or not.",
        SerializedName = @"acquireStorageAccountLock",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Support.AcquireStorageAccountLock) })]
        Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Support.AcquireStorageAccountLock? AcquireStorageAccountLock { get; set; }
        /// <summary>Number of items backed up in this container.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Number of items backed up in this container.",
        SerializedName = @"protectedItemCount",
        PossibleTypes = new [] { typeof(long) })]
        long? ProtectedItemCount { get; set; }
        /// <summary>Resource group name of Recovery Services Vault.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Resource group name of Recovery Services Vault.",
        SerializedName = @"resourceGroup",
        PossibleTypes = new [] { typeof(string) })]
        string ResourceGroup { get; set; }
        /// <summary>Fully qualified ARM url.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Fully qualified ARM url.",
        SerializedName = @"sourceResourceId",
        PossibleTypes = new [] { typeof(string) })]
        string SourceResourceId { get; set; }
        /// <summary>Storage account version.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Storage account version.",
        SerializedName = @"storageAccountVersion",
        PossibleTypes = new [] { typeof(string) })]
        string StorageAccountVersion { get; set; }

    }
    /// Azure Storage Account workload-specific container.
    internal partial interface IAzureStorageContainerInternal :
        Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20230201.IProtectionContainerInternal
    {
        /// <summary>Whether storage account lock is to be acquired for this container or not.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Support.AcquireStorageAccountLock? AcquireStorageAccountLock { get; set; }
        /// <summary>Number of items backed up in this container.</summary>
        long? ProtectedItemCount { get; set; }
        /// <summary>Resource group name of Recovery Services Vault.</summary>
        string ResourceGroup { get; set; }
        /// <summary>Fully qualified ARM url.</summary>
        string SourceResourceId { get; set; }
        /// <summary>Storage account version.</summary>
        string StorageAccountVersion { get; set; }

    }
}