// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20230201
{
    using static Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Runtime.Extensions;

    /// <summary>Details needed if the VM was encrypted at the time of backup.</summary>
    public partial class EncryptionDetails :
        Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20230201.IEncryptionDetails,
        Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20230201.IEncryptionDetailsInternal
    {

        /// <summary>Backing field for <see cref="EncryptionEnabled" /> property.</summary>
        private bool? _encryptionEnabled;

        /// <summary>
        /// Identifies whether this backup copy represents an encrypted VM at the time of backup.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.PropertyOrigin.Owned)]
        public bool? EncryptionEnabled { get => this._encryptionEnabled; set => this._encryptionEnabled = value; }

        /// <summary>Backing field for <see cref="KekUrl" /> property.</summary>
        private string _kekUrl;

        /// <summary>Key Url.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.PropertyOrigin.Owned)]
        public string KekUrl { get => this._kekUrl; set => this._kekUrl = value; }

        /// <summary>Backing field for <see cref="KekVaultId" /> property.</summary>
        private string _kekVaultId;

        /// <summary>ID of Key Vault where KEK is stored.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.PropertyOrigin.Owned)]
        public string KekVaultId { get => this._kekVaultId; set => this._kekVaultId = value; }

        /// <summary>Backing field for <see cref="SecretKeyUrl" /> property.</summary>
        private string _secretKeyUrl;

        /// <summary>Secret Url.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.PropertyOrigin.Owned)]
        public string SecretKeyUrl { get => this._secretKeyUrl; set => this._secretKeyUrl = value; }

        /// <summary>Backing field for <see cref="SecretKeyVaultId" /> property.</summary>
        private string _secretKeyVaultId;

        /// <summary>ID of Key Vault where Secret is stored.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.PropertyOrigin.Owned)]
        public string SecretKeyVaultId { get => this._secretKeyVaultId; set => this._secretKeyVaultId = value; }

        /// <summary>Creates an new <see cref="EncryptionDetails" /> instance.</summary>
        public EncryptionDetails()
        {

        }
    }
    /// Details needed if the VM was encrypted at the time of backup.
    public partial interface IEncryptionDetails :
        Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Runtime.IJsonSerializable
    {
        /// <summary>
        /// Identifies whether this backup copy represents an encrypted VM at the time of backup.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Identifies whether this backup copy represents an encrypted VM at the time of backup.",
        SerializedName = @"encryptionEnabled",
        PossibleTypes = new [] { typeof(bool) })]
        bool? EncryptionEnabled { get; set; }
        /// <summary>Key Url.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Key Url.",
        SerializedName = @"kekUrl",
        PossibleTypes = new [] { typeof(string) })]
        string KekUrl { get; set; }
        /// <summary>ID of Key Vault where KEK is stored.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"ID of Key Vault where KEK is stored.",
        SerializedName = @"kekVaultId",
        PossibleTypes = new [] { typeof(string) })]
        string KekVaultId { get; set; }
        /// <summary>Secret Url.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Secret Url.",
        SerializedName = @"secretKeyUrl",
        PossibleTypes = new [] { typeof(string) })]
        string SecretKeyUrl { get; set; }
        /// <summary>ID of Key Vault where Secret is stored.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"ID of Key Vault where Secret is stored.",
        SerializedName = @"secretKeyVaultId",
        PossibleTypes = new [] { typeof(string) })]
        string SecretKeyVaultId { get; set; }

    }
    /// Details needed if the VM was encrypted at the time of backup.
    internal partial interface IEncryptionDetailsInternal

    {
        /// <summary>
        /// Identifies whether this backup copy represents an encrypted VM at the time of backup.
        /// </summary>
        bool? EncryptionEnabled { get; set; }
        /// <summary>Key Url.</summary>
        string KekUrl { get; set; }
        /// <summary>ID of Key Vault where KEK is stored.</summary>
        string KekVaultId { get; set; }
        /// <summary>Secret Url.</summary>
        string SecretKeyUrl { get; set; }
        /// <summary>ID of Key Vault where Secret is stored.</summary>
        string SecretKeyVaultId { get; set; }

    }
}