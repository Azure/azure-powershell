// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20230201
{
    using static Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Runtime.Extensions;

    /// <summary>IaaS VM workload specific backup copy.</summary>
    public partial class IaasVMRecoveryPoint :
        Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20230201.IIaasVMRecoveryPoint,
        Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20230201.IIaasVMRecoveryPointInternal,
        Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Runtime.IValidates
    {
        /// <summary>
        /// Backing field for Inherited model <see cref= "Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20230201.IRecoveryPoint"
        /// />
        /// </summary>
        private Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20230201.IRecoveryPoint __recoveryPoint = new Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20230201.RecoveryPoint();

        /// <summary>BEK data.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.PropertyOrigin.Inlined)]
        public string BekDetailSecretData { get => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20230201.IKeyAndSecretDetailsInternal)KeyAndSecret).BekDetailSecretData; set => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20230201.IKeyAndSecretDetailsInternal)KeyAndSecret).BekDetailSecretData = value ?? null; }

        /// <summary>Secret is BEK.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.PropertyOrigin.Inlined)]
        public string BekDetailSecretUrl { get => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20230201.IKeyAndSecretDetailsInternal)KeyAndSecret).BekDetailSecretUrl; set => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20230201.IKeyAndSecretDetailsInternal)KeyAndSecret).BekDetailSecretUrl = value ?? null; }

        /// <summary>ID of the Key Vault where this Secret is stored.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.PropertyOrigin.Inlined)]
        public string BekDetailSecretVaultId { get => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20230201.IKeyAndSecretDetailsInternal)KeyAndSecret).BekDetailSecretVaultId; set => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20230201.IKeyAndSecretDetailsInternal)KeyAndSecret).BekDetailSecretVaultId = value ?? null; }

        /// <summary>Backing field for <see cref="IsInstantIlrSessionActive" /> property.</summary>
        private bool? _isInstantIlrSessionActive;

        /// <summary>Is the session to recover items from this backup copy still active.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.PropertyOrigin.Owned)]
        public bool? IsInstantIlrSessionActive { get => this._isInstantIlrSessionActive; set => this._isInstantIlrSessionActive = value; }

        /// <summary>Backing field for <see cref="IsManagedVirtualMachine" /> property.</summary>
        private bool? _isManagedVirtualMachine;

        /// <summary>Whether VM is with Managed Disks</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.PropertyOrigin.Owned)]
        public bool? IsManagedVirtualMachine { get => this._isManagedVirtualMachine; set => this._isManagedVirtualMachine = value; }

        /// <summary>Backing field for <see cref="IsPrivateAccessEnabledOnAnyDisk" /> property.</summary>
        private bool? _isPrivateAccessEnabledOnAnyDisk;

        /// <summary>
        /// This flag denotes if any of the disks in the VM are using Private access network setting
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.PropertyOrigin.Owned)]
        public bool? IsPrivateAccessEnabledOnAnyDisk { get => this._isPrivateAccessEnabledOnAnyDisk; set => this._isPrivateAccessEnabledOnAnyDisk = value; }

        /// <summary>Backing field for <see cref="IsSourceVMEncrypted" /> property.</summary>
        private bool? _isSourceVMEncrypted;

        /// <summary>Identifies whether the VM was encrypted when the backup copy is created.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.PropertyOrigin.Owned)]
        public bool? IsSourceVMEncrypted { get => this._isSourceVMEncrypted; set => this._isSourceVMEncrypted = value; }

        /// <summary>KEK data.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.PropertyOrigin.Inlined)]
        public string KekDetailKeyBackupData { get => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20230201.IKeyAndSecretDetailsInternal)KeyAndSecret).KekDetailKeyBackupData; set => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20230201.IKeyAndSecretDetailsInternal)KeyAndSecret).KekDetailKeyBackupData = value ?? null; }

        /// <summary>Key is KEK.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.PropertyOrigin.Inlined)]
        public string KekDetailKeyUrl { get => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20230201.IKeyAndSecretDetailsInternal)KeyAndSecret).KekDetailKeyUrl; set => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20230201.IKeyAndSecretDetailsInternal)KeyAndSecret).KekDetailKeyUrl = value ?? null; }

        /// <summary>Key Vault ID where this Key is stored.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.PropertyOrigin.Inlined)]
        public string KekDetailKeyVaultId { get => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20230201.IKeyAndSecretDetailsInternal)KeyAndSecret).KekDetailKeyVaultId; set => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20230201.IKeyAndSecretDetailsInternal)KeyAndSecret).KekDetailKeyVaultId = value ?? null; }

        /// <summary>Backing field for <see cref="KeyAndSecret" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20230201.IKeyAndSecretDetails _keyAndSecret;

        /// <summary>
        /// Required details for recovering an encrypted VM. Applicable only when IsSourceVMEncrypted is true.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20230201.IKeyAndSecretDetails KeyAndSecret { get => (this._keyAndSecret = this._keyAndSecret ?? new Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20230201.KeyAndSecretDetails()); set => this._keyAndSecret = value; }

        /// <summary>Encryption mechanism: None/ SinglePass/ DoublePass</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.PropertyOrigin.Inlined)]
        public string KeyAndSecretEncryptionMechanism { get => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20230201.IKeyAndSecretDetailsInternal)KeyAndSecret).EncryptionMechanism; set => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20230201.IKeyAndSecretDetailsInternal)KeyAndSecret).EncryptionMechanism = value ?? null; }

        /// <summary>Internal Acessors for KeyAndSecret</summary>
        Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20230201.IKeyAndSecretDetails Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20230201.IIaasVMRecoveryPointInternal.KeyAndSecret { get => (this._keyAndSecret = this._keyAndSecret ?? new Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20230201.KeyAndSecretDetails()); set { {_keyAndSecret = value;} } }

        /// <summary>Internal Acessors for KeyAndSecretBekDetail</summary>
        Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20230201.IBekDetails Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20230201.IIaasVMRecoveryPointInternal.KeyAndSecretBekDetail { get => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20230201.IKeyAndSecretDetailsInternal)KeyAndSecret).BekDetail; set => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20230201.IKeyAndSecretDetailsInternal)KeyAndSecret).BekDetail = value; }

        /// <summary>Internal Acessors for KeyAndSecretKekDetail</summary>
        Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20230201.IKekDetails Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20230201.IIaasVMRecoveryPointInternal.KeyAndSecretKekDetail { get => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20230201.IKeyAndSecretDetailsInternal)KeyAndSecret).KekDetail; set => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20230201.IKeyAndSecretDetailsInternal)KeyAndSecret).KekDetail = value; }

        /// <summary>Internal Acessors for RecoveryPointDiskConfiguration</summary>
        Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20230201.IRecoveryPointDiskConfiguration Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20230201.IIaasVMRecoveryPointInternal.RecoveryPointDiskConfiguration { get => (this._recoveryPointDiskConfiguration = this._recoveryPointDiskConfiguration ?? new Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20230201.RecoveryPointDiskConfiguration()); set { {_recoveryPointDiskConfiguration = value;} } }

        /// <summary>Internal Acessors for RecoveryPointProperty</summary>
        Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20230201.IRecoveryPointProperties Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20230201.IIaasVMRecoveryPointInternal.RecoveryPointProperty { get => (this._recoveryPointProperty = this._recoveryPointProperty ?? new Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20230201.RecoveryPointProperties()); set { {_recoveryPointProperty = value;} } }

        /// <summary>Backing field for <see cref="OSType" /> property.</summary>
        private string _oSType;

        /// <summary>OS type</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.PropertyOrigin.Owned)]
        public string OSType { get => this._oSType; set => this._oSType = value; }

        /// <summary>
        /// This property will be used as the discriminator for deciding the specific types in the polymorphic chain of types.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.PropertyOrigin.Inherited)]
        public string ObjectType { get => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20230201.IRecoveryPointInternal)__recoveryPoint).ObjectType; set => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20230201.IRecoveryPointInternal)__recoveryPoint).ObjectType = value ; }

        /// <summary>Backing field for <see cref="OriginalStorageAccountOption" /> property.</summary>
        private bool? _originalStorageAccountOption;

        /// <summary>Original Storage Account Option</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.PropertyOrigin.Owned)]
        public bool? OriginalStorageAccountOption { get => this._originalStorageAccountOption; set => this._originalStorageAccountOption = value; }

        /// <summary>Backing field for <see cref="RecoveryPointAdditionalInfo" /> property.</summary>
        private string _recoveryPointAdditionalInfo;

        /// <summary>Additional information associated with this backup copy.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.PropertyOrigin.Owned)]
        public string RecoveryPointAdditionalInfo { get => this._recoveryPointAdditionalInfo; set => this._recoveryPointAdditionalInfo = value; }

        /// <summary>Backing field for <see cref="RecoveryPointDiskConfiguration" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20230201.IRecoveryPointDiskConfiguration _recoveryPointDiskConfiguration;

        /// <summary>Disk configuration</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20230201.IRecoveryPointDiskConfiguration RecoveryPointDiskConfiguration { get => (this._recoveryPointDiskConfiguration = this._recoveryPointDiskConfiguration ?? new Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20230201.RecoveryPointDiskConfiguration()); set => this._recoveryPointDiskConfiguration = value; }

        /// <summary>Information of disks excluded from backup</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20230201.IDiskInformation[] RecoveryPointDiskConfigurationExcludedDiskList { get => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20230201.IRecoveryPointDiskConfigurationInternal)RecoveryPointDiskConfiguration).ExcludedDiskList; set => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20230201.IRecoveryPointDiskConfigurationInternal)RecoveryPointDiskConfiguration).ExcludedDiskList = value ?? null /* arrayOf */; }

        /// <summary>Information of disks included in backup</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20230201.IDiskInformation[] RecoveryPointDiskConfigurationIncludedDiskList { get => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20230201.IRecoveryPointDiskConfigurationInternal)RecoveryPointDiskConfiguration).IncludedDiskList; set => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20230201.IRecoveryPointDiskConfigurationInternal)RecoveryPointDiskConfiguration).IncludedDiskList = value ?? null /* arrayOf */; }

        /// <summary>Number of disks attached to the VM</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.PropertyOrigin.Inlined)]
        public int? RecoveryPointDiskConfigurationNumberOfDisksAttachedToVM { get => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20230201.IRecoveryPointDiskConfigurationInternal)RecoveryPointDiskConfiguration).NumberOfDisksAttachedToVM; set => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20230201.IRecoveryPointDiskConfigurationInternal)RecoveryPointDiskConfiguration).NumberOfDisksAttachedToVM = value ?? default(int); }

        /// <summary>Number of disks included in backup</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.PropertyOrigin.Inlined)]
        public int? RecoveryPointDiskConfigurationNumberOfDisksIncludedInBackup { get => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20230201.IRecoveryPointDiskConfigurationInternal)RecoveryPointDiskConfiguration).NumberOfDisksIncludedInBackup; set => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20230201.IRecoveryPointDiskConfigurationInternal)RecoveryPointDiskConfiguration).NumberOfDisksIncludedInBackup = value ?? default(int); }

        /// <summary>Backing field for <see cref="RecoveryPointMoveReadinessInfo" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20230201.IIaasVMRecoveryPointMoveReadinessInfo _recoveryPointMoveReadinessInfo;

        /// <summary>Eligibility of RP to be moved to another tier</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20230201.IIaasVMRecoveryPointMoveReadinessInfo RecoveryPointMoveReadinessInfo { get => (this._recoveryPointMoveReadinessInfo = this._recoveryPointMoveReadinessInfo ?? new Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20230201.IaasVMRecoveryPointMoveReadinessInfo()); set => this._recoveryPointMoveReadinessInfo = value; }

        /// <summary>Backing field for <see cref="RecoveryPointProperty" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20230201.IRecoveryPointProperties _recoveryPointProperty;

        /// <summary>Properties of Recovery Point</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20230201.IRecoveryPointProperties RecoveryPointProperty { get => (this._recoveryPointProperty = this._recoveryPointProperty ?? new Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20230201.RecoveryPointProperties()); set => this._recoveryPointProperty = value; }

        /// <summary>Expiry time of Recovery Point in UTC.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.PropertyOrigin.Inlined)]
        public string RecoveryPointPropertyExpiryTime { get => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20230201.IRecoveryPointPropertiesInternal)RecoveryPointProperty).ExpiryTime; set => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20230201.IRecoveryPointPropertiesInternal)RecoveryPointProperty).ExpiryTime = value ?? null; }

        /// <summary>Bool to indicate whether RP is in soft delete state or not</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.PropertyOrigin.Inlined)]
        public bool? RecoveryPointPropertyIsSoftDeleted { get => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20230201.IRecoveryPointPropertiesInternal)RecoveryPointProperty).IsSoftDeleted; set => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20230201.IRecoveryPointPropertiesInternal)RecoveryPointProperty).IsSoftDeleted = value ?? default(bool); }

        /// <summary>Rule name tagged on Recovery Point that governs life cycle</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.PropertyOrigin.Inlined)]
        public string RecoveryPointPropertyRuleName { get => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20230201.IRecoveryPointPropertiesInternal)RecoveryPointProperty).RuleName; set => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20230201.IRecoveryPointPropertiesInternal)RecoveryPointProperty).RuleName = value ?? null; }

        /// <summary>Backing field for <see cref="RecoveryPointTierDetail" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20230201.IRecoveryPointTierInformationV2[] _recoveryPointTierDetail;

        /// <summary>Recovery point tier information.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20230201.IRecoveryPointTierInformationV2[] RecoveryPointTierDetail { get => this._recoveryPointTierDetail; set => this._recoveryPointTierDetail = value; }

        /// <summary>Backing field for <see cref="RecoveryPointTime" /> property.</summary>
        private global::System.DateTime? _recoveryPointTime;

        /// <summary>Time at which this backup copy was created.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.PropertyOrigin.Owned)]
        public global::System.DateTime? RecoveryPointTime { get => this._recoveryPointTime; set => this._recoveryPointTime = value; }

        /// <summary>Backing field for <see cref="RecoveryPointType" /> property.</summary>
        private string _recoveryPointType;

        /// <summary>Type of the backup copy.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.PropertyOrigin.Owned)]
        public string RecoveryPointType { get => this._recoveryPointType; set => this._recoveryPointType = value; }

        /// <summary>Backing field for <see cref="SecurityType" /> property.</summary>
        private string _securityType;

        /// <summary>Security Type of the Disk</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.PropertyOrigin.Owned)]
        public string SecurityType { get => this._securityType; set => this._securityType = value; }

        /// <summary>Backing field for <see cref="SourceVMStorageType" /> property.</summary>
        private string _sourceVMStorageType;

        /// <summary>Storage type of the VM whose backup copy is created.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.PropertyOrigin.Owned)]
        public string SourceVMStorageType { get => this._sourceVMStorageType; set => this._sourceVMStorageType = value; }

        /// <summary>Backing field for <see cref="VirtualMachineSize" /> property.</summary>
        private string _virtualMachineSize;

        /// <summary>Virtual Machine Size</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.PropertyOrigin.Owned)]
        public string VirtualMachineSize { get => this._virtualMachineSize; set => this._virtualMachineSize = value; }

        /// <summary>Backing field for <see cref="Zone" /> property.</summary>
        private string[] _zone;

        /// <summary>
        /// Identifies the zone of the VM at the time of backup. Applicable only for zone-pinned Vms
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.PropertyOrigin.Owned)]
        public string[] Zone { get => this._zone; set => this._zone = value; }

        /// <summary>Creates an new <see cref="IaasVMRecoveryPoint" /> instance.</summary>
        public IaasVMRecoveryPoint()
        {

        }

        /// <summary>Validates that this object meets the validation criteria.</summary>
        /// <param name="eventListener">an <see cref="Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Runtime.IEventListener" /> instance that will receive validation
        /// events.</param>
        /// <returns>
        /// A <see cref = "global::System.Threading.Tasks.Task" /> that will be complete when validation is completed.
        /// </returns>
        public async global::System.Threading.Tasks.Task Validate(Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Runtime.IEventListener eventListener)
        {
            await eventListener.AssertNotNull(nameof(__recoveryPoint), __recoveryPoint);
            await eventListener.AssertObjectIsValid(nameof(__recoveryPoint), __recoveryPoint);
        }
    }
    /// IaaS VM workload specific backup copy.
    public partial interface IIaasVMRecoveryPoint :
        Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Runtime.IJsonSerializable,
        Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20230201.IRecoveryPoint
    {
        /// <summary>BEK data.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"BEK data.",
        SerializedName = @"secretData",
        PossibleTypes = new [] { typeof(string) })]
        string BekDetailSecretData { get; set; }
        /// <summary>Secret is BEK.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Secret is BEK.",
        SerializedName = @"secretUrl",
        PossibleTypes = new [] { typeof(string) })]
        string BekDetailSecretUrl { get; set; }
        /// <summary>ID of the Key Vault where this Secret is stored.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"ID of the Key Vault where this Secret is stored.",
        SerializedName = @"secretVaultId",
        PossibleTypes = new [] { typeof(string) })]
        string BekDetailSecretVaultId { get; set; }
        /// <summary>Is the session to recover items from this backup copy still active.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Is the session to recover items from this backup copy still active.",
        SerializedName = @"isInstantIlrSessionActive",
        PossibleTypes = new [] { typeof(bool) })]
        bool? IsInstantIlrSessionActive { get; set; }
        /// <summary>Whether VM is with Managed Disks</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Whether VM is with Managed Disks",
        SerializedName = @"isManagedVirtualMachine",
        PossibleTypes = new [] { typeof(bool) })]
        bool? IsManagedVirtualMachine { get; set; }
        /// <summary>
        /// This flag denotes if any of the disks in the VM are using Private access network setting
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"This flag denotes if any of the disks in the VM are using Private access network setting",
        SerializedName = @"isPrivateAccessEnabledOnAnyDisk",
        PossibleTypes = new [] { typeof(bool) })]
        bool? IsPrivateAccessEnabledOnAnyDisk { get; set; }
        /// <summary>Identifies whether the VM was encrypted when the backup copy is created.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Identifies whether the VM was encrypted when the backup copy is created.",
        SerializedName = @"isSourceVMEncrypted",
        PossibleTypes = new [] { typeof(bool) })]
        bool? IsSourceVMEncrypted { get; set; }
        /// <summary>KEK data.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"KEK data.",
        SerializedName = @"keyBackupData",
        PossibleTypes = new [] { typeof(string) })]
        string KekDetailKeyBackupData { get; set; }
        /// <summary>Key is KEK.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Key is KEK.",
        SerializedName = @"keyUrl",
        PossibleTypes = new [] { typeof(string) })]
        string KekDetailKeyUrl { get; set; }
        /// <summary>Key Vault ID where this Key is stored.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Key Vault ID where this Key is stored.",
        SerializedName = @"keyVaultId",
        PossibleTypes = new [] { typeof(string) })]
        string KekDetailKeyVaultId { get; set; }
        /// <summary>Encryption mechanism: None/ SinglePass/ DoublePass</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Encryption mechanism: None/ SinglePass/ DoublePass",
        SerializedName = @"encryptionMechanism",
        PossibleTypes = new [] { typeof(string) })]
        string KeyAndSecretEncryptionMechanism { get; set; }
        /// <summary>OS type</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"OS type",
        SerializedName = @"osType",
        PossibleTypes = new [] { typeof(string) })]
        string OSType { get; set; }
        /// <summary>Original Storage Account Option</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Original Storage Account Option",
        SerializedName = @"originalStorageAccountOption",
        PossibleTypes = new [] { typeof(bool) })]
        bool? OriginalStorageAccountOption { get; set; }
        /// <summary>Additional information associated with this backup copy.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Additional information associated with this backup copy.",
        SerializedName = @"recoveryPointAdditionalInfo",
        PossibleTypes = new [] { typeof(string) })]
        string RecoveryPointAdditionalInfo { get; set; }
        /// <summary>Information of disks excluded from backup</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Information of disks excluded from backup",
        SerializedName = @"excludedDiskList",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20230201.IDiskInformation) })]
        Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20230201.IDiskInformation[] RecoveryPointDiskConfigurationExcludedDiskList { get; set; }
        /// <summary>Information of disks included in backup</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Information of disks included in backup",
        SerializedName = @"includedDiskList",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20230201.IDiskInformation) })]
        Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20230201.IDiskInformation[] RecoveryPointDiskConfigurationIncludedDiskList { get; set; }
        /// <summary>Number of disks attached to the VM</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Number of disks attached to the VM",
        SerializedName = @"numberOfDisksAttachedToVm",
        PossibleTypes = new [] { typeof(int) })]
        int? RecoveryPointDiskConfigurationNumberOfDisksAttachedToVM { get; set; }
        /// <summary>Number of disks included in backup</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Number of disks included in backup",
        SerializedName = @"numberOfDisksIncludedInBackup",
        PossibleTypes = new [] { typeof(int) })]
        int? RecoveryPointDiskConfigurationNumberOfDisksIncludedInBackup { get; set; }
        /// <summary>Eligibility of RP to be moved to another tier</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Eligibility of RP to be moved to another tier",
        SerializedName = @"recoveryPointMoveReadinessInfo",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20230201.IIaasVMRecoveryPointMoveReadinessInfo) })]
        Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20230201.IIaasVMRecoveryPointMoveReadinessInfo RecoveryPointMoveReadinessInfo { get; set; }
        /// <summary>Expiry time of Recovery Point in UTC.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Expiry time of Recovery Point in UTC.",
        SerializedName = @"expiryTime",
        PossibleTypes = new [] { typeof(string) })]
        string RecoveryPointPropertyExpiryTime { get; set; }
        /// <summary>Bool to indicate whether RP is in soft delete state or not</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Bool to indicate whether RP is in soft delete state or not",
        SerializedName = @"isSoftDeleted",
        PossibleTypes = new [] { typeof(bool) })]
        bool? RecoveryPointPropertyIsSoftDeleted { get; set; }
        /// <summary>Rule name tagged on Recovery Point that governs life cycle</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Rule name tagged on Recovery Point that governs life cycle",
        SerializedName = @"ruleName",
        PossibleTypes = new [] { typeof(string) })]
        string RecoveryPointPropertyRuleName { get; set; }
        /// <summary>Recovery point tier information.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Recovery point tier information.",
        SerializedName = @"recoveryPointTierDetails",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20230201.IRecoveryPointTierInformationV2) })]
        Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20230201.IRecoveryPointTierInformationV2[] RecoveryPointTierDetail { get; set; }
        /// <summary>Time at which this backup copy was created.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Time at which this backup copy was created.",
        SerializedName = @"recoveryPointTime",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? RecoveryPointTime { get; set; }
        /// <summary>Type of the backup copy.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Type of the backup copy.",
        SerializedName = @"recoveryPointType",
        PossibleTypes = new [] { typeof(string) })]
        string RecoveryPointType { get; set; }
        /// <summary>Security Type of the Disk</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Security Type of the Disk",
        SerializedName = @"securityType",
        PossibleTypes = new [] { typeof(string) })]
        string SecurityType { get; set; }
        /// <summary>Storage type of the VM whose backup copy is created.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Storage type of the VM whose backup copy is created.",
        SerializedName = @"sourceVMStorageType",
        PossibleTypes = new [] { typeof(string) })]
        string SourceVMStorageType { get; set; }
        /// <summary>Virtual Machine Size</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Virtual Machine Size",
        SerializedName = @"virtualMachineSize",
        PossibleTypes = new [] { typeof(string) })]
        string VirtualMachineSize { get; set; }
        /// <summary>
        /// Identifies the zone of the VM at the time of backup. Applicable only for zone-pinned Vms
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Identifies the zone of the VM at the time of backup. Applicable only for zone-pinned Vms",
        SerializedName = @"zones",
        PossibleTypes = new [] { typeof(string) })]
        string[] Zone { get; set; }

    }
    /// IaaS VM workload specific backup copy.
    internal partial interface IIaasVMRecoveryPointInternal :
        Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20230201.IRecoveryPointInternal
    {
        /// <summary>BEK data.</summary>
        string BekDetailSecretData { get; set; }
        /// <summary>Secret is BEK.</summary>
        string BekDetailSecretUrl { get; set; }
        /// <summary>ID of the Key Vault where this Secret is stored.</summary>
        string BekDetailSecretVaultId { get; set; }
        /// <summary>Is the session to recover items from this backup copy still active.</summary>
        bool? IsInstantIlrSessionActive { get; set; }
        /// <summary>Whether VM is with Managed Disks</summary>
        bool? IsManagedVirtualMachine { get; set; }
        /// <summary>
        /// This flag denotes if any of the disks in the VM are using Private access network setting
        /// </summary>
        bool? IsPrivateAccessEnabledOnAnyDisk { get; set; }
        /// <summary>Identifies whether the VM was encrypted when the backup copy is created.</summary>
        bool? IsSourceVMEncrypted { get; set; }
        /// <summary>KEK data.</summary>
        string KekDetailKeyBackupData { get; set; }
        /// <summary>Key is KEK.</summary>
        string KekDetailKeyUrl { get; set; }
        /// <summary>Key Vault ID where this Key is stored.</summary>
        string KekDetailKeyVaultId { get; set; }
        /// <summary>
        /// Required details for recovering an encrypted VM. Applicable only when IsSourceVMEncrypted is true.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20230201.IKeyAndSecretDetails KeyAndSecret { get; set; }
        /// <summary>BEK is bitlocker encryption key.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20230201.IBekDetails KeyAndSecretBekDetail { get; set; }
        /// <summary>Encryption mechanism: None/ SinglePass/ DoublePass</summary>
        string KeyAndSecretEncryptionMechanism { get; set; }
        /// <summary>KEK is encryption key for BEK.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20230201.IKekDetails KeyAndSecretKekDetail { get; set; }
        /// <summary>OS type</summary>
        string OSType { get; set; }
        /// <summary>Original Storage Account Option</summary>
        bool? OriginalStorageAccountOption { get; set; }
        /// <summary>Additional information associated with this backup copy.</summary>
        string RecoveryPointAdditionalInfo { get; set; }
        /// <summary>Disk configuration</summary>
        Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20230201.IRecoveryPointDiskConfiguration RecoveryPointDiskConfiguration { get; set; }
        /// <summary>Information of disks excluded from backup</summary>
        Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20230201.IDiskInformation[] RecoveryPointDiskConfigurationExcludedDiskList { get; set; }
        /// <summary>Information of disks included in backup</summary>
        Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20230201.IDiskInformation[] RecoveryPointDiskConfigurationIncludedDiskList { get; set; }
        /// <summary>Number of disks attached to the VM</summary>
        int? RecoveryPointDiskConfigurationNumberOfDisksAttachedToVM { get; set; }
        /// <summary>Number of disks included in backup</summary>
        int? RecoveryPointDiskConfigurationNumberOfDisksIncludedInBackup { get; set; }
        /// <summary>Eligibility of RP to be moved to another tier</summary>
        Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20230201.IIaasVMRecoveryPointMoveReadinessInfo RecoveryPointMoveReadinessInfo { get; set; }
        /// <summary>Properties of Recovery Point</summary>
        Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20230201.IRecoveryPointProperties RecoveryPointProperty { get; set; }
        /// <summary>Expiry time of Recovery Point in UTC.</summary>
        string RecoveryPointPropertyExpiryTime { get; set; }
        /// <summary>Bool to indicate whether RP is in soft delete state or not</summary>
        bool? RecoveryPointPropertyIsSoftDeleted { get; set; }
        /// <summary>Rule name tagged on Recovery Point that governs life cycle</summary>
        string RecoveryPointPropertyRuleName { get; set; }
        /// <summary>Recovery point tier information.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20230201.IRecoveryPointTierInformationV2[] RecoveryPointTierDetail { get; set; }
        /// <summary>Time at which this backup copy was created.</summary>
        global::System.DateTime? RecoveryPointTime { get; set; }
        /// <summary>Type of the backup copy.</summary>
        string RecoveryPointType { get; set; }
        /// <summary>Security Type of the Disk</summary>
        string SecurityType { get; set; }
        /// <summary>Storage type of the VM whose backup copy is created.</summary>
        string SourceVMStorageType { get; set; }
        /// <summary>Virtual Machine Size</summary>
        string VirtualMachineSize { get; set; }
        /// <summary>
        /// Identifies the zone of the VM at the time of backup. Applicable only for zone-pinned Vms
        /// </summary>
        string[] Zone { get; set; }

    }
}