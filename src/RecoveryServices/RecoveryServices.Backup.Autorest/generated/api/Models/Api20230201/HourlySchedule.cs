// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20230201
{
    using static Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Runtime.Extensions;

    public partial class HourlySchedule :
        Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20230201.IHourlySchedule,
        Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20230201.IHourlyScheduleInternal
    {

        /// <summary>Backing field for <see cref="Interval" /> property.</summary>
        private int? _interval;

        /// <summary>
        /// Interval at which backup needs to be triggered. For hourly the value
        /// can be 4/6/8/12
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.PropertyOrigin.Owned)]
        public int? Interval { get => this._interval; set => this._interval = value; }

        /// <summary>Backing field for <see cref="ScheduleWindowDuration" /> property.</summary>
        private int? _scheduleWindowDuration;

        /// <summary>To specify duration of the backup window</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.PropertyOrigin.Owned)]
        public int? ScheduleWindowDuration { get => this._scheduleWindowDuration; set => this._scheduleWindowDuration = value; }

        /// <summary>Backing field for <see cref="ScheduleWindowStartTime" /> property.</summary>
        private global::System.DateTime? _scheduleWindowStartTime;

        /// <summary>To specify start time of the backup window</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.PropertyOrigin.Owned)]
        public global::System.DateTime? ScheduleWindowStartTime { get => this._scheduleWindowStartTime; set => this._scheduleWindowStartTime = value; }

        /// <summary>Creates an new <see cref="HourlySchedule" /> instance.</summary>
        public HourlySchedule()
        {

        }
    }
    public partial interface IHourlySchedule :
        Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Runtime.IJsonSerializable
    {
        /// <summary>
        /// Interval at which backup needs to be triggered. For hourly the value
        /// can be 4/6/8/12
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Interval at which backup needs to be triggered. For hourly the value
         can be 4/6/8/12",
        SerializedName = @"interval",
        PossibleTypes = new [] { typeof(int) })]
        int? Interval { get; set; }
        /// <summary>To specify duration of the backup window</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"To specify duration of the backup window",
        SerializedName = @"scheduleWindowDuration",
        PossibleTypes = new [] { typeof(int) })]
        int? ScheduleWindowDuration { get; set; }
        /// <summary>To specify start time of the backup window</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"To specify start time of the backup window",
        SerializedName = @"scheduleWindowStartTime",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? ScheduleWindowStartTime { get; set; }

    }
    internal partial interface IHourlyScheduleInternal

    {
        /// <summary>
        /// Interval at which backup needs to be triggered. For hourly the value
        /// can be 4/6/8/12
        /// </summary>
        int? Interval { get; set; }
        /// <summary>To specify duration of the backup window</summary>
        int? ScheduleWindowDuration { get; set; }
        /// <summary>To specify start time of the backup window</summary>
        global::System.DateTime? ScheduleWindowStartTime { get; set; }

    }
}