// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20230201
{
    using static Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Runtime.Extensions;

    /// <summary>DPM workload-specific protection container.</summary>
    public partial class DpmContainer :
        Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20230201.IDpmContainer,
        Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20230201.IDpmContainerInternal,
        Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Runtime.IValidates
    {
        /// <summary>
        /// Backing field for Inherited model <see cref= "Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20230201.IProtectionContainer"
        /// />
        /// </summary>
        private Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20230201.IProtectionContainer __protectionContainer = new Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20230201.ProtectionContainer();

        /// <summary>Type of backup management for the container.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.PropertyOrigin.Inherited)]
        public Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Support.BackupManagementType? BackupManagementType { get => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20230201.IProtectionContainerInternal)__protectionContainer).BackupManagementType; set => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20230201.IProtectionContainerInternal)__protectionContainer).BackupManagementType = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Support.BackupManagementType)""); }

        /// <summary>Backing field for <see cref="CanReRegister" /> property.</summary>
        private bool? _canReRegister;

        /// <summary>Specifies whether the container is re-registrable.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.PropertyOrigin.Owned)]
        public bool? CanReRegister { get => this._canReRegister; set => this._canReRegister = value; }

        /// <summary>Backing field for <see cref="ContainerId" /> property.</summary>
        private string _containerId;

        /// <summary>ID of container.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.PropertyOrigin.Owned)]
        public string ContainerId { get => this._containerId; set => this._containerId = value; }

        /// <summary>
        /// Type of the container. The value of this property for: 1. Compute Azure VM is Microsoft.Compute/virtualMachines 2.
        /// Classic Compute Azure VM is Microsoft.ClassicCompute/virtualMachines 3. Windows machines (like MAB, DPM etc) is
        /// Windows 4. Azure SQL instance is AzureSqlContainer. 5. Storage containers is StorageContainer. 6. Azure workload
        /// Backup is VMAppContainer
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.PropertyOrigin.Inherited)]
        public Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Support.ProtectableContainerType ContainerType { get => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20230201.IProtectionContainerInternal)__protectionContainer).ContainerType; set => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20230201.IProtectionContainerInternal)__protectionContainer).ContainerType = value ; }

        /// <summary>Backing field for <see cref="DpmAgentVersion" /> property.</summary>
        private string _dpmAgentVersion;

        /// <summary>Backup engine Agent version</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.PropertyOrigin.Owned)]
        public string DpmAgentVersion { get => this._dpmAgentVersion; set => this._dpmAgentVersion = value; }

        /// <summary>Backing field for <see cref="DpmServer" /> property.</summary>
        private string[] _dpmServer;

        /// <summary>List of BackupEngines protecting the container</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.PropertyOrigin.Owned)]
        public string[] DpmServer { get => this._dpmServer; set => this._dpmServer = value; }

        /// <summary>Backing field for <see cref="ExtendedInfo" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20230201.IDpmContainerExtendedInfo _extendedInfo;

        /// <summary>Extended Info of the container.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20230201.IDpmContainerExtendedInfo ExtendedInfo { get => (this._extendedInfo = this._extendedInfo ?? new Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20230201.DpmContainerExtendedInfo()); set => this._extendedInfo = value; }

        /// <summary>Last refresh time of the DPMContainer.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.PropertyOrigin.Inlined)]
        public global::System.DateTime? ExtendedInfoLastRefreshedAt { get => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20230201.IDpmContainerExtendedInfoInternal)ExtendedInfo).LastRefreshedAt; set => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20230201.IDpmContainerExtendedInfoInternal)ExtendedInfo).LastRefreshedAt = value ?? default(global::System.DateTime); }

        /// <summary>Friendly name of the container.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.PropertyOrigin.Inherited)]
        public string FriendlyName { get => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20230201.IProtectionContainerInternal)__protectionContainer).FriendlyName; set => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20230201.IProtectionContainerInternal)__protectionContainer).FriendlyName = value ?? null; }

        /// <summary>Status of health of the container.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.PropertyOrigin.Inherited)]
        public string HealthStatus { get => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20230201.IProtectionContainerInternal)__protectionContainer).HealthStatus; set => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20230201.IProtectionContainerInternal)__protectionContainer).HealthStatus = value ?? null; }

        /// <summary>Internal Acessors for ExtendedInfo</summary>
        Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20230201.IDpmContainerExtendedInfo Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20230201.IDpmContainerInternal.ExtendedInfo { get => (this._extendedInfo = this._extendedInfo ?? new Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20230201.DpmContainerExtendedInfo()); set { {_extendedInfo = value;} } }

        /// <summary>Type of the protectable object associated with this container</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.PropertyOrigin.Inherited)]
        public string ProtectableObjectType { get => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20230201.IProtectionContainerInternal)__protectionContainer).ProtectableObjectType; set => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20230201.IProtectionContainerInternal)__protectionContainer).ProtectableObjectType = value ?? null; }

        /// <summary>Backing field for <see cref="ProtectedItemCount" /> property.</summary>
        private long? _protectedItemCount;

        /// <summary>Number of protected items in the BackupEngine</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.PropertyOrigin.Owned)]
        public long? ProtectedItemCount { get => this._protectedItemCount; set => this._protectedItemCount = value; }

        /// <summary>Backing field for <see cref="ProtectionStatus" /> property.</summary>
        private string _protectionStatus;

        /// <summary>Protection status of the container.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.PropertyOrigin.Owned)]
        public string ProtectionStatus { get => this._protectionStatus; set => this._protectionStatus = value; }

        /// <summary>Status of registration of the container with the Recovery Services Vault.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.PropertyOrigin.Inherited)]
        public string RegistrationStatus { get => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20230201.IProtectionContainerInternal)__protectionContainer).RegistrationStatus; set => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20230201.IProtectionContainerInternal)__protectionContainer).RegistrationStatus = value ?? null; }

        /// <summary>Backing field for <see cref="UpgradeAvailable" /> property.</summary>
        private bool? _upgradeAvailable;

        /// <summary>To check if upgrade available</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.PropertyOrigin.Owned)]
        public bool? UpgradeAvailable { get => this._upgradeAvailable; set => this._upgradeAvailable = value; }

        /// <summary>Creates an new <see cref="DpmContainer" /> instance.</summary>
        public DpmContainer()
        {

        }

        /// <summary>Validates that this object meets the validation criteria.</summary>
        /// <param name="eventListener">an <see cref="Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Runtime.IEventListener" /> instance that will receive validation
        /// events.</param>
        /// <returns>
        /// A <see cref = "global::System.Threading.Tasks.Task" /> that will be complete when validation is completed.
        /// </returns>
        public async global::System.Threading.Tasks.Task Validate(Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Runtime.IEventListener eventListener)
        {
            await eventListener.AssertNotNull(nameof(__protectionContainer), __protectionContainer);
            await eventListener.AssertObjectIsValid(nameof(__protectionContainer), __protectionContainer);
        }
    }
    /// DPM workload-specific protection container.
    public partial interface IDpmContainer :
        Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Runtime.IJsonSerializable,
        Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20230201.IProtectionContainer
    {
        /// <summary>Specifies whether the container is re-registrable.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Specifies whether the container is re-registrable.",
        SerializedName = @"canReRegister",
        PossibleTypes = new [] { typeof(bool) })]
        bool? CanReRegister { get; set; }
        /// <summary>ID of container.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"ID of container.",
        SerializedName = @"containerId",
        PossibleTypes = new [] { typeof(string) })]
        string ContainerId { get; set; }
        /// <summary>Backup engine Agent version</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Backup engine Agent version",
        SerializedName = @"dpmAgentVersion",
        PossibleTypes = new [] { typeof(string) })]
        string DpmAgentVersion { get; set; }
        /// <summary>List of BackupEngines protecting the container</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"List of BackupEngines protecting the container",
        SerializedName = @"dpmServers",
        PossibleTypes = new [] { typeof(string) })]
        string[] DpmServer { get; set; }
        /// <summary>Last refresh time of the DPMContainer.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Last refresh time of the DPMContainer.",
        SerializedName = @"lastRefreshedAt",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? ExtendedInfoLastRefreshedAt { get; set; }
        /// <summary>Number of protected items in the BackupEngine</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Number of protected items in the BackupEngine",
        SerializedName = @"protectedItemCount",
        PossibleTypes = new [] { typeof(long) })]
        long? ProtectedItemCount { get; set; }
        /// <summary>Protection status of the container.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Protection status of the container.",
        SerializedName = @"protectionStatus",
        PossibleTypes = new [] { typeof(string) })]
        string ProtectionStatus { get; set; }
        /// <summary>To check if upgrade available</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"To check if upgrade available",
        SerializedName = @"upgradeAvailable",
        PossibleTypes = new [] { typeof(bool) })]
        bool? UpgradeAvailable { get; set; }

    }
    /// DPM workload-specific protection container.
    internal partial interface IDpmContainerInternal :
        Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20230201.IProtectionContainerInternal
    {
        /// <summary>Specifies whether the container is re-registrable.</summary>
        bool? CanReRegister { get; set; }
        /// <summary>ID of container.</summary>
        string ContainerId { get; set; }
        /// <summary>Backup engine Agent version</summary>
        string DpmAgentVersion { get; set; }
        /// <summary>List of BackupEngines protecting the container</summary>
        string[] DpmServer { get; set; }
        /// <summary>Extended Info of the container.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20230201.IDpmContainerExtendedInfo ExtendedInfo { get; set; }
        /// <summary>Last refresh time of the DPMContainer.</summary>
        global::System.DateTime? ExtendedInfoLastRefreshedAt { get; set; }
        /// <summary>Number of protected items in the BackupEngine</summary>
        long? ProtectedItemCount { get; set; }
        /// <summary>Protection status of the container.</summary>
        string ProtectionStatus { get; set; }
        /// <summary>To check if upgrade available</summary>
        bool? UpgradeAvailable { get; set; }

    }
}