// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20230201
{
    using static Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Runtime.Extensions;

    /// <summary>Data Protection Manager (DPM) specific backup engine.</summary>
    public partial class DpmBackupEngine :
        Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20230201.IDpmBackupEngine,
        Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20230201.IDpmBackupEngineInternal,
        Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Runtime.IValidates
    {
        /// <summary>
        /// Backing field for Inherited model <see cref= "Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20230201.IBackupEngineBase"
        /// />
        /// </summary>
        private Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20230201.IBackupEngineBase __backupEngineBase = new Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20230201.BackupEngineBase();

        /// <summary>Backup agent version</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.PropertyOrigin.Inherited)]
        public string AzureBackupAgentVersion { get => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20230201.IBackupEngineBaseInternal)__backupEngineBase).AzureBackupAgentVersion; set => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20230201.IBackupEngineBaseInternal)__backupEngineBase).AzureBackupAgentVersion = value ?? null; }

        /// <summary>ID of the backup engine.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.PropertyOrigin.Inherited)]
        public string BackupEngineId { get => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20230201.IBackupEngineBaseInternal)__backupEngineBase).BackupEngineId; set => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20230201.IBackupEngineBaseInternal)__backupEngineBase).BackupEngineId = value ?? null; }

        /// <summary>
        /// Status of the backup engine with the Recovery Services Vault. = {Active/Deleting/DeleteFailed}
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.PropertyOrigin.Inherited)]
        public string BackupEngineState { get => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20230201.IBackupEngineBaseInternal)__backupEngineBase).BackupEngineState; set => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20230201.IBackupEngineBaseInternal)__backupEngineBase).BackupEngineState = value ?? null; }

        /// <summary>Type of the backup engine.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.PropertyOrigin.Inherited)]
        public Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Support.BackupEngineType BackupEngineType { get => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20230201.IBackupEngineBaseInternal)__backupEngineBase).BackupEngineType; set => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20230201.IBackupEngineBaseInternal)__backupEngineBase).BackupEngineType = value ; }

        /// <summary>Type of backup management for the backup engine.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.PropertyOrigin.Inherited)]
        public Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Support.BackupManagementType? BackupManagementType { get => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20230201.IBackupEngineBaseInternal)__backupEngineBase).BackupManagementType; set => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20230201.IBackupEngineBaseInternal)__backupEngineBase).BackupManagementType = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Support.BackupManagementType)""); }

        /// <summary>Flag indicating if the backup engine be registered, once already registered.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.PropertyOrigin.Inherited)]
        public bool? CanReRegister { get => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20230201.IBackupEngineBaseInternal)__backupEngineBase).CanReRegister; set => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20230201.IBackupEngineBaseInternal)__backupEngineBase).CanReRegister = value ?? default(bool); }

        /// <summary>Backup engine version</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.PropertyOrigin.Inherited)]
        public string DpmVersion { get => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20230201.IBackupEngineBaseInternal)__backupEngineBase).DpmVersion; set => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20230201.IBackupEngineBaseInternal)__backupEngineBase).DpmVersion = value ?? null; }

        /// <summary>Extended info of the backupengine</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.PropertyOrigin.Inherited)]
        public Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20230201.IBackupEngineExtendedInfo ExtendedInfo { get => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20230201.IBackupEngineBaseInternal)__backupEngineBase).ExtendedInfo; set => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20230201.IBackupEngineBaseInternal)__backupEngineBase).ExtendedInfo = value ?? null /* model class */; }

        /// <summary>Disk space currently available in the backup engine.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.PropertyOrigin.Inherited)]
        public double? ExtendedInfoAvailableDiskSpace { get => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20230201.IBackupEngineBaseInternal)__backupEngineBase).ExtendedInfoAvailableDiskSpace; set => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20230201.IBackupEngineBaseInternal)__backupEngineBase).ExtendedInfoAvailableDiskSpace = value ?? default(double); }

        /// <summary>Protected instances in the backup engine.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.PropertyOrigin.Inherited)]
        public int? ExtendedInfoAzureProtectedInstance { get => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20230201.IBackupEngineBaseInternal)__backupEngineBase).ExtendedInfoAzureProtectedInstance; set => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20230201.IBackupEngineBaseInternal)__backupEngineBase).ExtendedInfoAzureProtectedInstance = value ?? default(int); }

        /// <summary>Database name of backup engine.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.PropertyOrigin.Inherited)]
        public string ExtendedInfoDatabaseName { get => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20230201.IBackupEngineBaseInternal)__backupEngineBase).ExtendedInfoDatabaseName; set => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20230201.IBackupEngineBaseInternal)__backupEngineBase).ExtendedInfoDatabaseName = value ?? null; }

        /// <summary>Number of disks in the backup engine.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.PropertyOrigin.Inherited)]
        public int? ExtendedInfoDiskCount { get => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20230201.IBackupEngineBaseInternal)__backupEngineBase).ExtendedInfoDiskCount; set => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20230201.IBackupEngineBaseInternal)__backupEngineBase).ExtendedInfoDiskCount = value ?? default(int); }

        /// <summary>Number of protected items in the backup engine.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.PropertyOrigin.Inherited)]
        public int? ExtendedInfoProtectedItemsCount { get => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20230201.IBackupEngineBaseInternal)__backupEngineBase).ExtendedInfoProtectedItemsCount; set => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20230201.IBackupEngineBaseInternal)__backupEngineBase).ExtendedInfoProtectedItemsCount = value ?? default(int); }

        /// <summary>Number of protected servers in the backup engine.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.PropertyOrigin.Inherited)]
        public int? ExtendedInfoProtectedServersCount { get => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20230201.IBackupEngineBaseInternal)__backupEngineBase).ExtendedInfoProtectedServersCount; set => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20230201.IBackupEngineBaseInternal)__backupEngineBase).ExtendedInfoProtectedServersCount = value ?? default(int); }

        /// <summary>Last refresh time in the backup engine.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.PropertyOrigin.Inherited)]
        public global::System.DateTime? ExtendedInfoRefreshedAt { get => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20230201.IBackupEngineBaseInternal)__backupEngineBase).ExtendedInfoRefreshedAt; set => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20230201.IBackupEngineBaseInternal)__backupEngineBase).ExtendedInfoRefreshedAt = value ?? default(global::System.DateTime); }

        /// <summary>Disk space used in the backup engine.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.PropertyOrigin.Inherited)]
        public double? ExtendedInfoUsedDiskSpace { get => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20230201.IBackupEngineBaseInternal)__backupEngineBase).ExtendedInfoUsedDiskSpace; set => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20230201.IBackupEngineBaseInternal)__backupEngineBase).ExtendedInfoUsedDiskSpace = value ?? default(double); }

        /// <summary>Friendly name of the backup engine.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.PropertyOrigin.Inherited)]
        public string FriendlyName { get => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20230201.IBackupEngineBaseInternal)__backupEngineBase).FriendlyName; set => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20230201.IBackupEngineBaseInternal)__backupEngineBase).FriendlyName = value ?? null; }

        /// <summary>Backup status of the backup engine.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.PropertyOrigin.Inherited)]
        public string HealthStatus { get => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20230201.IBackupEngineBaseInternal)__backupEngineBase).HealthStatus; set => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20230201.IBackupEngineBaseInternal)__backupEngineBase).HealthStatus = value ?? null; }

        /// <summary>To check if backup agent upgrade available</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.PropertyOrigin.Inherited)]
        public bool? IsAzureBackupAgentUpgradeAvailable { get => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20230201.IBackupEngineBaseInternal)__backupEngineBase).IsAzureBackupAgentUpgradeAvailable; set => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20230201.IBackupEngineBaseInternal)__backupEngineBase).IsAzureBackupAgentUpgradeAvailable = value ?? default(bool); }

        /// <summary>To check if backup engine upgrade available</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.PropertyOrigin.Inherited)]
        public bool? IsDpmUpgradeAvailable { get => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20230201.IBackupEngineBaseInternal)__backupEngineBase).IsDpmUpgradeAvailable; set => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20230201.IBackupEngineBaseInternal)__backupEngineBase).IsDpmUpgradeAvailable = value ?? default(bool); }

        /// <summary>Registration status of the backup engine with the Recovery Services Vault.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.PropertyOrigin.Inherited)]
        public string RegistrationStatus { get => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20230201.IBackupEngineBaseInternal)__backupEngineBase).RegistrationStatus; set => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20230201.IBackupEngineBaseInternal)__backupEngineBase).RegistrationStatus = value ?? null; }

        /// <summary>Creates an new <see cref="DpmBackupEngine" /> instance.</summary>
        public DpmBackupEngine()
        {

        }

        /// <summary>Validates that this object meets the validation criteria.</summary>
        /// <param name="eventListener">an <see cref="Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Runtime.IEventListener" /> instance that will receive validation
        /// events.</param>
        /// <returns>
        /// A <see cref = "global::System.Threading.Tasks.Task" /> that will be complete when validation is completed.
        /// </returns>
        public async global::System.Threading.Tasks.Task Validate(Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Runtime.IEventListener eventListener)
        {
            await eventListener.AssertNotNull(nameof(__backupEngineBase), __backupEngineBase);
            await eventListener.AssertObjectIsValid(nameof(__backupEngineBase), __backupEngineBase);
        }
    }
    /// Data Protection Manager (DPM) specific backup engine.
    public partial interface IDpmBackupEngine :
        Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Runtime.IJsonSerializable,
        Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20230201.IBackupEngineBase
    {

    }
    /// Data Protection Manager (DPM) specific backup engine.
    internal partial interface IDpmBackupEngineInternal :
        Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20230201.IBackupEngineBaseInternal
    {

    }
}