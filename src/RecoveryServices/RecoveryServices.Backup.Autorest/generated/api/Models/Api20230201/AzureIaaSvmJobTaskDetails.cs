// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20230201
{
    using static Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Runtime.Extensions;

    /// <summary>Azure IaaS VM workload-specific job task details.</summary>
    public partial class AzureIaaSvmJobTaskDetails :
        Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20230201.IAzureIaaSvmJobTaskDetails,
        Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20230201.IAzureIaaSvmJobTaskDetailsInternal
    {

        /// <summary>Backing field for <see cref="Duration" /> property.</summary>
        private global::System.TimeSpan? _duration;

        /// <summary>Time elapsed for task.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.PropertyOrigin.Owned)]
        public global::System.TimeSpan? Duration { get => this._duration; set => this._duration = value; }

        /// <summary>Backing field for <see cref="EndTime" /> property.</summary>
        private global::System.DateTime? _endTime;

        /// <summary>The end time.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.PropertyOrigin.Owned)]
        public global::System.DateTime? EndTime { get => this._endTime; set => this._endTime = value; }

        /// <summary>Backing field for <see cref="InstanceId" /> property.</summary>
        private string _instanceId;

        /// <summary>The instanceId.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.PropertyOrigin.Owned)]
        public string InstanceId { get => this._instanceId; set => this._instanceId = value; }

        /// <summary>Backing field for <see cref="ProgressPercentage" /> property.</summary>
        private double? _progressPercentage;

        /// <summary>Progress of the task.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.PropertyOrigin.Owned)]
        public double? ProgressPercentage { get => this._progressPercentage; set => this._progressPercentage = value; }

        /// <summary>Backing field for <see cref="StartTime" /> property.</summary>
        private global::System.DateTime? _startTime;

        /// <summary>The start time.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.PropertyOrigin.Owned)]
        public global::System.DateTime? StartTime { get => this._startTime; set => this._startTime = value; }

        /// <summary>Backing field for <see cref="Status" /> property.</summary>
        private string _status;

        /// <summary>The status.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.PropertyOrigin.Owned)]
        public string Status { get => this._status; set => this._status = value; }

        /// <summary>Backing field for <see cref="TaskExecutionDetail" /> property.</summary>
        private string _taskExecutionDetail;

        /// <summary>
        /// Details about execution of the task.
        /// eg: number of bytes transferred etc
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.PropertyOrigin.Owned)]
        public string TaskExecutionDetail { get => this._taskExecutionDetail; set => this._taskExecutionDetail = value; }

        /// <summary>Backing field for <see cref="TaskId" /> property.</summary>
        private string _taskId;

        /// <summary>The task display name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.PropertyOrigin.Owned)]
        public string TaskId { get => this._taskId; set => this._taskId = value; }

        /// <summary>Creates an new <see cref="AzureIaaSvmJobTaskDetails" /> instance.</summary>
        public AzureIaaSvmJobTaskDetails()
        {

        }
    }
    /// Azure IaaS VM workload-specific job task details.
    public partial interface IAzureIaaSvmJobTaskDetails :
        Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Runtime.IJsonSerializable
    {
        /// <summary>Time elapsed for task.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Time elapsed for task.",
        SerializedName = @"duration",
        PossibleTypes = new [] { typeof(global::System.TimeSpan) })]
        global::System.TimeSpan? Duration { get; set; }
        /// <summary>The end time.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The end time.",
        SerializedName = @"endTime",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? EndTime { get; set; }
        /// <summary>The instanceId.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The instanceId.",
        SerializedName = @"instanceId",
        PossibleTypes = new [] { typeof(string) })]
        string InstanceId { get; set; }
        /// <summary>Progress of the task.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Progress of the task.",
        SerializedName = @"progressPercentage",
        PossibleTypes = new [] { typeof(double) })]
        double? ProgressPercentage { get; set; }
        /// <summary>The start time.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The start time.",
        SerializedName = @"startTime",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? StartTime { get; set; }
        /// <summary>The status.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The status.",
        SerializedName = @"status",
        PossibleTypes = new [] { typeof(string) })]
        string Status { get; set; }
        /// <summary>
        /// Details about execution of the task.
        /// eg: number of bytes transferred etc
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Details about execution of the task.
        eg: number of bytes transferred etc",
        SerializedName = @"taskExecutionDetails",
        PossibleTypes = new [] { typeof(string) })]
        string TaskExecutionDetail { get; set; }
        /// <summary>The task display name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The task display name.",
        SerializedName = @"taskId",
        PossibleTypes = new [] { typeof(string) })]
        string TaskId { get; set; }

    }
    /// Azure IaaS VM workload-specific job task details.
    internal partial interface IAzureIaaSvmJobTaskDetailsInternal

    {
        /// <summary>Time elapsed for task.</summary>
        global::System.TimeSpan? Duration { get; set; }
        /// <summary>The end time.</summary>
        global::System.DateTime? EndTime { get; set; }
        /// <summary>The instanceId.</summary>
        string InstanceId { get; set; }
        /// <summary>Progress of the task.</summary>
        double? ProgressPercentage { get; set; }
        /// <summary>The start time.</summary>
        global::System.DateTime? StartTime { get; set; }
        /// <summary>The status.</summary>
        string Status { get; set; }
        /// <summary>
        /// Details about execution of the task.
        /// eg: number of bytes transferred etc
        /// </summary>
        string TaskExecutionDetail { get; set; }
        /// <summary>The task display name.</summary>
        string TaskId { get; set; }

    }
}