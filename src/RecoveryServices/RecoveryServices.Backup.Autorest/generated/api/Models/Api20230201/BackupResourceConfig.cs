// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20230201
{
    using static Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Runtime.Extensions;

    /// <summary>The resource storage details.</summary>
    public partial class BackupResourceConfig :
        Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20230201.IBackupResourceConfig,
        Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20230201.IBackupResourceConfigInternal
    {

        /// <summary>Backing field for <see cref="CrossRegionRestoreFlag" /> property.</summary>
        private bool? _crossRegionRestoreFlag;

        /// <summary>Opt in details of Cross Region Restore feature.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.PropertyOrigin.Owned)]
        public bool? CrossRegionRestoreFlag { get => this._crossRegionRestoreFlag; set => this._crossRegionRestoreFlag = value; }

        /// <summary>Backing field for <see cref="DedupState" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Support.DedupState? _dedupState;

        /// <summary>Vault Dedup state</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Support.DedupState? DedupState { get => this._dedupState; set => this._dedupState = value; }

        /// <summary>Backing field for <see cref="StorageModelType" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Support.StorageType? _storageModelType;

        /// <summary>Storage type</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Support.StorageType? StorageModelType { get => this._storageModelType; set => this._storageModelType = value; }

        /// <summary>Backing field for <see cref="StorageType" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Support.StorageType? _storageType;

        /// <summary>Storage type.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Support.StorageType? StorageType { get => this._storageType; set => this._storageType = value; }

        /// <summary>Backing field for <see cref="StorageTypeState" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Support.StorageTypeState? _storageTypeState;

        /// <summary>
        /// Locked or Unlocked. Once a machine is registered against a resource, the storageTypeState is always Locked.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Support.StorageTypeState? StorageTypeState { get => this._storageTypeState; set => this._storageTypeState = value; }

        /// <summary>Backing field for <see cref="XcoolState" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Support.XcoolState? _xcoolState;

        /// <summary>Vault x-cool state</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Support.XcoolState? XcoolState { get => this._xcoolState; set => this._xcoolState = value; }

        /// <summary>Creates an new <see cref="BackupResourceConfig" /> instance.</summary>
        public BackupResourceConfig()
        {

        }
    }
    /// The resource storage details.
    public partial interface IBackupResourceConfig :
        Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Runtime.IJsonSerializable
    {
        /// <summary>Opt in details of Cross Region Restore feature.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Opt in details of Cross Region Restore feature.",
        SerializedName = @"crossRegionRestoreFlag",
        PossibleTypes = new [] { typeof(bool) })]
        bool? CrossRegionRestoreFlag { get; set; }
        /// <summary>Vault Dedup state</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Vault Dedup state",
        SerializedName = @"dedupState",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Support.DedupState) })]
        Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Support.DedupState? DedupState { get; set; }
        /// <summary>Storage type</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Storage type",
        SerializedName = @"storageModelType",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Support.StorageType) })]
        Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Support.StorageType? StorageModelType { get; set; }
        /// <summary>Storage type.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Storage type.",
        SerializedName = @"storageType",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Support.StorageType) })]
        Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Support.StorageType? StorageType { get; set; }
        /// <summary>
        /// Locked or Unlocked. Once a machine is registered against a resource, the storageTypeState is always Locked.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Locked or Unlocked. Once a machine is registered against a resource, the storageTypeState is always Locked.",
        SerializedName = @"storageTypeState",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Support.StorageTypeState) })]
        Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Support.StorageTypeState? StorageTypeState { get; set; }
        /// <summary>Vault x-cool state</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Vault x-cool state",
        SerializedName = @"xcoolState",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Support.XcoolState) })]
        Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Support.XcoolState? XcoolState { get; set; }

    }
    /// The resource storage details.
    internal partial interface IBackupResourceConfigInternal

    {
        /// <summary>Opt in details of Cross Region Restore feature.</summary>
        bool? CrossRegionRestoreFlag { get; set; }
        /// <summary>Vault Dedup state</summary>
        Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Support.DedupState? DedupState { get; set; }
        /// <summary>Storage type</summary>
        Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Support.StorageType? StorageModelType { get; set; }
        /// <summary>Storage type.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Support.StorageType? StorageType { get; set; }
        /// <summary>
        /// Locked or Unlocked. Once a machine is registered against a resource, the storageTypeState is always Locked.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Support.StorageTypeState? StorageTypeState { get; set; }
        /// <summary>Vault x-cool state</summary>
        Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Support.XcoolState? XcoolState { get; set; }

    }
}