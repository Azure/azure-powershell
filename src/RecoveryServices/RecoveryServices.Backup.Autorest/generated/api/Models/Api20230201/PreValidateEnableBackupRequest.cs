// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20230201
{
    using static Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Runtime.Extensions;

    /// <summary>
    /// Contract to validate if backup can be enabled on the given resource in a given vault and given configuration.
    /// It will validate followings
    /// 1. Vault capacity
    /// 2. VM is already protected
    /// 3. Any VM related configuration passed in properties.
    /// </summary>
    public partial class PreValidateEnableBackupRequest :
        Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20230201.IPreValidateEnableBackupRequest,
        Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20230201.IPreValidateEnableBackupRequestInternal
    {

        /// <summary>Backing field for <see cref="Property" /> property.</summary>
        private string _property;

        /// <summary>Configuration of VM if any needs to be validated like OS type etc</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.PropertyOrigin.Owned)]
        public string Property { get => this._property; set => this._property = value; }

        /// <summary>Backing field for <see cref="ResourceId" /> property.</summary>
        private string _resourceId;

        /// <summary>ARM Virtual Machine Id</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.PropertyOrigin.Owned)]
        public string ResourceId { get => this._resourceId; set => this._resourceId = value; }

        /// <summary>Backing field for <see cref="ResourceType" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Support.DataSourceType? _resourceType;

        /// <summary>ProtectedItem Type- VM, SqlDataBase, AzureFileShare etc</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Support.DataSourceType? ResourceType { get => this._resourceType; set => this._resourceType = value; }

        /// <summary>Backing field for <see cref="VaultId" /> property.</summary>
        private string _vaultId;

        /// <summary>ARM id of the Recovery Services Vault</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.PropertyOrigin.Owned)]
        public string VaultId { get => this._vaultId; set => this._vaultId = value; }

        /// <summary>Creates an new <see cref="PreValidateEnableBackupRequest" /> instance.</summary>
        public PreValidateEnableBackupRequest()
        {

        }
    }
    /// Contract to validate if backup can be enabled on the given resource in a given vault and given configuration.
    /// It will validate followings
    /// 1. Vault capacity
    /// 2. VM is already protected
    /// 3. Any VM related configuration passed in properties.
    public partial interface IPreValidateEnableBackupRequest :
        Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Runtime.IJsonSerializable
    {
        /// <summary>Configuration of VM if any needs to be validated like OS type etc</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Configuration of VM if any needs to be validated like OS type etc",
        SerializedName = @"properties",
        PossibleTypes = new [] { typeof(string) })]
        string Property { get; set; }
        /// <summary>ARM Virtual Machine Id</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"ARM Virtual Machine Id",
        SerializedName = @"resourceId",
        PossibleTypes = new [] { typeof(string) })]
        string ResourceId { get; set; }
        /// <summary>ProtectedItem Type- VM, SqlDataBase, AzureFileShare etc</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"ProtectedItem Type- VM, SqlDataBase, AzureFileShare etc",
        SerializedName = @"resourceType",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Support.DataSourceType) })]
        Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Support.DataSourceType? ResourceType { get; set; }
        /// <summary>ARM id of the Recovery Services Vault</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"ARM id of the Recovery Services Vault",
        SerializedName = @"vaultId",
        PossibleTypes = new [] { typeof(string) })]
        string VaultId { get; set; }

    }
    /// Contract to validate if backup can be enabled on the given resource in a given vault and given configuration.
    /// It will validate followings
    /// 1. Vault capacity
    /// 2. VM is already protected
    /// 3. Any VM related configuration passed in properties.
    internal partial interface IPreValidateEnableBackupRequestInternal

    {
        /// <summary>Configuration of VM if any needs to be validated like OS type etc</summary>
        string Property { get; set; }
        /// <summary>ARM Virtual Machine Id</summary>
        string ResourceId { get; set; }
        /// <summary>ProtectedItem Type- VM, SqlDataBase, AzureFileShare etc</summary>
        Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Support.DataSourceType? ResourceType { get; set; }
        /// <summary>ARM id of the Recovery Services Vault</summary>
        string VaultId { get; set; }

    }
}