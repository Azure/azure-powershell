// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20230201
{
    using static Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Runtime.Extensions;

    /// <summary>Backup resource vault config details.</summary>
    public partial class BackupResourceVaultConfig :
        Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20230201.IBackupResourceVaultConfig,
        Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20230201.IBackupResourceVaultConfigInternal
    {

        /// <summary>Backing field for <see cref="EnhancedSecurityState" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Support.EnhancedSecurityState? _enhancedSecurityState;

        /// <summary>Enabled or Disabled.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Support.EnhancedSecurityState? EnhancedSecurityState { get => this._enhancedSecurityState; set => this._enhancedSecurityState = value; }

        /// <summary>Backing field for <see cref="IsSoftDeleteFeatureStateEditable" /> property.</summary>
        private bool? _isSoftDeleteFeatureStateEditable;

        /// <summary>Is soft delete feature state editable</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.PropertyOrigin.Owned)]
        public bool? IsSoftDeleteFeatureStateEditable { get => this._isSoftDeleteFeatureStateEditable; set => this._isSoftDeleteFeatureStateEditable = value; }

        /// <summary>Backing field for <see cref="ResourceGuardOperationRequest" /> property.</summary>
        private string[] _resourceGuardOperationRequest;

        /// <summary>ResourceGuard Operation Requests</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.PropertyOrigin.Owned)]
        public string[] ResourceGuardOperationRequest { get => this._resourceGuardOperationRequest; set => this._resourceGuardOperationRequest = value; }

        /// <summary>Backing field for <see cref="SoftDeleteFeatureState" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Support.SoftDeleteFeatureState? _softDeleteFeatureState;

        /// <summary>Soft Delete feature state</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Support.SoftDeleteFeatureState? SoftDeleteFeatureState { get => this._softDeleteFeatureState; set => this._softDeleteFeatureState = value; }

        /// <summary>Backing field for <see cref="StorageModelType" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Support.StorageType? _storageModelType;

        /// <summary>Storage type.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Support.StorageType? StorageModelType { get => this._storageModelType; set => this._storageModelType = value; }

        /// <summary>Backing field for <see cref="StorageType" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Support.StorageType? _storageType;

        /// <summary>Storage type.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Support.StorageType? StorageType { get => this._storageType; set => this._storageType = value; }

        /// <summary>Backing field for <see cref="StorageTypeState" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Support.StorageTypeState? _storageTypeState;

        /// <summary>
        /// Locked or Unlocked. Once a machine is registered against a resource, the storageTypeState is always Locked.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Support.StorageTypeState? StorageTypeState { get => this._storageTypeState; set => this._storageTypeState = value; }

        /// <summary>Creates an new <see cref="BackupResourceVaultConfig" /> instance.</summary>
        public BackupResourceVaultConfig()
        {

        }
    }
    /// Backup resource vault config details.
    public partial interface IBackupResourceVaultConfig :
        Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Runtime.IJsonSerializable
    {
        /// <summary>Enabled or Disabled.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Enabled or Disabled.",
        SerializedName = @"enhancedSecurityState",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Support.EnhancedSecurityState) })]
        Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Support.EnhancedSecurityState? EnhancedSecurityState { get; set; }
        /// <summary>Is soft delete feature state editable</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Is soft delete feature state editable",
        SerializedName = @"isSoftDeleteFeatureStateEditable",
        PossibleTypes = new [] { typeof(bool) })]
        bool? IsSoftDeleteFeatureStateEditable { get; set; }
        /// <summary>ResourceGuard Operation Requests</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"ResourceGuard Operation Requests",
        SerializedName = @"resourceGuardOperationRequests",
        PossibleTypes = new [] { typeof(string) })]
        string[] ResourceGuardOperationRequest { get; set; }
        /// <summary>Soft Delete feature state</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Soft Delete feature state",
        SerializedName = @"softDeleteFeatureState",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Support.SoftDeleteFeatureState) })]
        Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Support.SoftDeleteFeatureState? SoftDeleteFeatureState { get; set; }
        /// <summary>Storage type.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Storage type.",
        SerializedName = @"storageModelType",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Support.StorageType) })]
        Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Support.StorageType? StorageModelType { get; set; }
        /// <summary>Storage type.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Storage type.",
        SerializedName = @"storageType",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Support.StorageType) })]
        Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Support.StorageType? StorageType { get; set; }
        /// <summary>
        /// Locked or Unlocked. Once a machine is registered against a resource, the storageTypeState is always Locked.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Locked or Unlocked. Once a machine is registered against a resource, the storageTypeState is always Locked.",
        SerializedName = @"storageTypeState",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Support.StorageTypeState) })]
        Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Support.StorageTypeState? StorageTypeState { get; set; }

    }
    /// Backup resource vault config details.
    internal partial interface IBackupResourceVaultConfigInternal

    {
        /// <summary>Enabled or Disabled.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Support.EnhancedSecurityState? EnhancedSecurityState { get; set; }
        /// <summary>Is soft delete feature state editable</summary>
        bool? IsSoftDeleteFeatureStateEditable { get; set; }
        /// <summary>ResourceGuard Operation Requests</summary>
        string[] ResourceGuardOperationRequest { get; set; }
        /// <summary>Soft Delete feature state</summary>
        Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Support.SoftDeleteFeatureState? SoftDeleteFeatureState { get; set; }
        /// <summary>Storage type.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Support.StorageType? StorageModelType { get; set; }
        /// <summary>Storage type.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Support.StorageType? StorageType { get; set; }
        /// <summary>
        /// Locked or Unlocked. Once a machine is registered against a resource, the storageTypeState is always Locked.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Support.StorageTypeState? StorageTypeState { get; set; }

    }
}