// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20230201
{
    using static Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Runtime.Extensions;

    /// <summary>Base class for backup items.</summary>
    public partial class ProtectedItem :
        Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20230201.IProtectedItem,
        Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20230201.IProtectedItemInternal
    {

        /// <summary>Backing field for <see cref="BackupManagementType" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Support.BackupManagementType? _backupManagementType;

        /// <summary>Type of backup management for the backed up item.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Support.BackupManagementType? BackupManagementType { get => this._backupManagementType; }

        /// <summary>Backing field for <see cref="BackupSetName" /> property.</summary>
        private string _backupSetName;

        /// <summary>Name of the backup set the backup item belongs to</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.PropertyOrigin.Owned)]
        public string BackupSetName { get => this._backupSetName; set => this._backupSetName = value; }

        /// <summary>Backing field for <see cref="ContainerName" /> property.</summary>
        private string _containerName;

        /// <summary>Unique name of container</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.PropertyOrigin.Owned)]
        public string ContainerName { get => this._containerName; set => this._containerName = value; }

        /// <summary>Backing field for <see cref="CreateMode" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Support.CreateMode? _createMode;

        /// <summary>
        /// Create mode to indicate recovery of existing soft deleted data source or creation of new data source.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Support.CreateMode? CreateMode { get => this._createMode; set => this._createMode = value; }

        /// <summary>Backing field for <see cref="DeferredDeleteTimeInUtc" /> property.</summary>
        private global::System.DateTime? _deferredDeleteTimeInUtc;

        /// <summary>Time for deferred deletion in UTC</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.PropertyOrigin.Owned)]
        public global::System.DateTime? DeferredDeleteTimeInUtc { get => this._deferredDeleteTimeInUtc; set => this._deferredDeleteTimeInUtc = value; }

        /// <summary>Backing field for <see cref="DeferredDeleteTimeRemaining" /> property.</summary>
        private string _deferredDeleteTimeRemaining;

        /// <summary>Time remaining before the DS marked for deferred delete is permanently deleted</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.PropertyOrigin.Owned)]
        public string DeferredDeleteTimeRemaining { get => this._deferredDeleteTimeRemaining; set => this._deferredDeleteTimeRemaining = value; }

        /// <summary>Backing field for <see cref="IsArchiveEnabled" /> property.</summary>
        private bool? _isArchiveEnabled;

        /// <summary>Flag to identify whether datasource is protected in archive</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.PropertyOrigin.Owned)]
        public bool? IsArchiveEnabled { get => this._isArchiveEnabled; set => this._isArchiveEnabled = value; }

        /// <summary>Backing field for <see cref="IsDeferredDeleteScheduleUpcoming" /> property.</summary>
        private bool? _isDeferredDeleteScheduleUpcoming;

        /// <summary>Flag to identify whether the deferred deleted DS is to be purged soon</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.PropertyOrigin.Owned)]
        public bool? IsDeferredDeleteScheduleUpcoming { get => this._isDeferredDeleteScheduleUpcoming; set => this._isDeferredDeleteScheduleUpcoming = value; }

        /// <summary>Backing field for <see cref="IsRehydrate" /> property.</summary>
        private bool? _isRehydrate;

        /// <summary>Flag to identify that deferred deleted DS is to be moved into Pause state</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.PropertyOrigin.Owned)]
        public bool? IsRehydrate { get => this._isRehydrate; set => this._isRehydrate = value; }

        /// <summary>Backing field for <see cref="IsScheduledForDeferredDelete" /> property.</summary>
        private bool? _isScheduledForDeferredDelete;

        /// <summary>Flag to identify whether the DS is scheduled for deferred delete</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.PropertyOrigin.Owned)]
        public bool? IsScheduledForDeferredDelete { get => this._isScheduledForDeferredDelete; set => this._isScheduledForDeferredDelete = value; }

        /// <summary>Backing field for <see cref="LastRecoveryPoint" /> property.</summary>
        private global::System.DateTime? _lastRecoveryPoint;

        /// <summary>Timestamp when the last (latest) backup copy was created for this backup item.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.PropertyOrigin.Owned)]
        public global::System.DateTime? LastRecoveryPoint { get => this._lastRecoveryPoint; set => this._lastRecoveryPoint = value; }

        /// <summary>Internal Acessors for BackupManagementType</summary>
        Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Support.BackupManagementType? Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20230201.IProtectedItemInternal.BackupManagementType { get => this._backupManagementType; set { {_backupManagementType = value;} } }

        /// <summary>Internal Acessors for WorkloadType</summary>
        Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Support.DataSourceType? Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20230201.IProtectedItemInternal.WorkloadType { get => this._workloadType; set { {_workloadType = value;} } }

        /// <summary>Backing field for <see cref="PolicyId" /> property.</summary>
        private string _policyId;

        /// <summary>ID of the backup policy with which this item is backed up.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.PropertyOrigin.Owned)]
        public string PolicyId { get => this._policyId; set => this._policyId = value; }

        /// <summary>Backing field for <see cref="PolicyName" /> property.</summary>
        private string _policyName;

        /// <summary>Name of the policy used for protection</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.PropertyOrigin.Owned)]
        public string PolicyName { get => this._policyName; set => this._policyName = value; }

        /// <summary>Backing field for <see cref="ResourceGuardOperationRequest" /> property.</summary>
        private string[] _resourceGuardOperationRequest;

        /// <summary>ResourceGuardOperationRequests on which LAC check will be performed</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.PropertyOrigin.Owned)]
        public string[] ResourceGuardOperationRequest { get => this._resourceGuardOperationRequest; set => this._resourceGuardOperationRequest = value; }

        /// <summary>Backing field for <see cref="SoftDeleteRetentionPeriod" /> property.</summary>
        private int? _softDeleteRetentionPeriod;

        /// <summary>Soft delete retention period in days</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.PropertyOrigin.Owned)]
        public int? SoftDeleteRetentionPeriod { get => this._softDeleteRetentionPeriod; set => this._softDeleteRetentionPeriod = value; }

        /// <summary>Backing field for <see cref="SourceResourceId" /> property.</summary>
        private string _sourceResourceId;

        /// <summary>ARM ID of the resource to be backed up.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.PropertyOrigin.Owned)]
        public string SourceResourceId { get => this._sourceResourceId; set => this._sourceResourceId = value; }

        /// <summary>Backing field for <see cref="Type" /> property.</summary>
        private string _type;

        /// <summary>backup item type.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.PropertyOrigin.Owned)]
        public string Type { get => this._type; set => this._type = value; }

        /// <summary>Backing field for <see cref="WorkloadType" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Support.DataSourceType? _workloadType;

        /// <summary>Type of workload this item represents.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Support.DataSourceType? WorkloadType { get => this._workloadType; }

        /// <summary>Creates an new <see cref="ProtectedItem" /> instance.</summary>
        public ProtectedItem()
        {

        }
    }
    /// Base class for backup items.
    public partial interface IProtectedItem :
        Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Runtime.IJsonSerializable
    {
        /// <summary>Type of backup management for the backed up item.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Type of backup management for the backed up item.",
        SerializedName = @"backupManagementType",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Support.BackupManagementType) })]
        Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Support.BackupManagementType? BackupManagementType { get;  }
        /// <summary>Name of the backup set the backup item belongs to</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Name of the backup set the backup item belongs to",
        SerializedName = @"backupSetName",
        PossibleTypes = new [] { typeof(string) })]
        string BackupSetName { get; set; }
        /// <summary>Unique name of container</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Unique name of container",
        SerializedName = @"containerName",
        PossibleTypes = new [] { typeof(string) })]
        string ContainerName { get; set; }
        /// <summary>
        /// Create mode to indicate recovery of existing soft deleted data source or creation of new data source.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Create mode to indicate recovery of existing soft deleted data source or creation of new data source.",
        SerializedName = @"createMode",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Support.CreateMode) })]
        Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Support.CreateMode? CreateMode { get; set; }
        /// <summary>Time for deferred deletion in UTC</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Time for deferred deletion in UTC",
        SerializedName = @"deferredDeleteTimeInUTC",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? DeferredDeleteTimeInUtc { get; set; }
        /// <summary>Time remaining before the DS marked for deferred delete is permanently deleted</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Time remaining before the DS marked for deferred delete is permanently deleted",
        SerializedName = @"deferredDeleteTimeRemaining",
        PossibleTypes = new [] { typeof(string) })]
        string DeferredDeleteTimeRemaining { get; set; }
        /// <summary>Flag to identify whether datasource is protected in archive</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Flag to identify whether datasource is protected in archive",
        SerializedName = @"isArchiveEnabled",
        PossibleTypes = new [] { typeof(bool) })]
        bool? IsArchiveEnabled { get; set; }
        /// <summary>Flag to identify whether the deferred deleted DS is to be purged soon</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Flag to identify whether the deferred deleted DS is to be purged soon",
        SerializedName = @"isDeferredDeleteScheduleUpcoming",
        PossibleTypes = new [] { typeof(bool) })]
        bool? IsDeferredDeleteScheduleUpcoming { get; set; }
        /// <summary>Flag to identify that deferred deleted DS is to be moved into Pause state</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Flag to identify that deferred deleted DS is to be moved into Pause state",
        SerializedName = @"isRehydrate",
        PossibleTypes = new [] { typeof(bool) })]
        bool? IsRehydrate { get; set; }
        /// <summary>Flag to identify whether the DS is scheduled for deferred delete</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Flag to identify whether the DS is scheduled for deferred delete",
        SerializedName = @"isScheduledForDeferredDelete",
        PossibleTypes = new [] { typeof(bool) })]
        bool? IsScheduledForDeferredDelete { get; set; }
        /// <summary>Timestamp when the last (latest) backup copy was created for this backup item.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Timestamp when the last (latest) backup copy was created for this backup item.",
        SerializedName = @"lastRecoveryPoint",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? LastRecoveryPoint { get; set; }
        /// <summary>ID of the backup policy with which this item is backed up.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"ID of the backup policy with which this item is backed up.",
        SerializedName = @"policyId",
        PossibleTypes = new [] { typeof(string) })]
        string PolicyId { get; set; }
        /// <summary>Name of the policy used for protection</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Name of the policy used for protection",
        SerializedName = @"policyName",
        PossibleTypes = new [] { typeof(string) })]
        string PolicyName { get; set; }
        /// <summary>ResourceGuardOperationRequests on which LAC check will be performed</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"ResourceGuardOperationRequests on which LAC check will be performed",
        SerializedName = @"resourceGuardOperationRequests",
        PossibleTypes = new [] { typeof(string) })]
        string[] ResourceGuardOperationRequest { get; set; }
        /// <summary>Soft delete retention period in days</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Soft delete retention period in days",
        SerializedName = @"softDeleteRetentionPeriod",
        PossibleTypes = new [] { typeof(int) })]
        int? SoftDeleteRetentionPeriod { get; set; }
        /// <summary>ARM ID of the resource to be backed up.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"ARM ID of the resource to be backed up.",
        SerializedName = @"sourceResourceId",
        PossibleTypes = new [] { typeof(string) })]
        string SourceResourceId { get; set; }
        /// <summary>backup item type.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"backup item type.",
        SerializedName = @"protectedItemType",
        PossibleTypes = new [] { typeof(string) })]
        string Type { get; set; }
        /// <summary>Type of workload this item represents.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Type of workload this item represents.",
        SerializedName = @"workloadType",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Support.DataSourceType) })]
        Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Support.DataSourceType? WorkloadType { get;  }

    }
    /// Base class for backup items.
    internal partial interface IProtectedItemInternal

    {
        /// <summary>Type of backup management for the backed up item.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Support.BackupManagementType? BackupManagementType { get; set; }
        /// <summary>Name of the backup set the backup item belongs to</summary>
        string BackupSetName { get; set; }
        /// <summary>Unique name of container</summary>
        string ContainerName { get; set; }
        /// <summary>
        /// Create mode to indicate recovery of existing soft deleted data source or creation of new data source.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Support.CreateMode? CreateMode { get; set; }
        /// <summary>Time for deferred deletion in UTC</summary>
        global::System.DateTime? DeferredDeleteTimeInUtc { get; set; }
        /// <summary>Time remaining before the DS marked for deferred delete is permanently deleted</summary>
        string DeferredDeleteTimeRemaining { get; set; }
        /// <summary>Flag to identify whether datasource is protected in archive</summary>
        bool? IsArchiveEnabled { get; set; }
        /// <summary>Flag to identify whether the deferred deleted DS is to be purged soon</summary>
        bool? IsDeferredDeleteScheduleUpcoming { get; set; }
        /// <summary>Flag to identify that deferred deleted DS is to be moved into Pause state</summary>
        bool? IsRehydrate { get; set; }
        /// <summary>Flag to identify whether the DS is scheduled for deferred delete</summary>
        bool? IsScheduledForDeferredDelete { get; set; }
        /// <summary>Timestamp when the last (latest) backup copy was created for this backup item.</summary>
        global::System.DateTime? LastRecoveryPoint { get; set; }
        /// <summary>ID of the backup policy with which this item is backed up.</summary>
        string PolicyId { get; set; }
        /// <summary>Name of the policy used for protection</summary>
        string PolicyName { get; set; }
        /// <summary>ResourceGuardOperationRequests on which LAC check will be performed</summary>
        string[] ResourceGuardOperationRequest { get; set; }
        /// <summary>Soft delete retention period in days</summary>
        int? SoftDeleteRetentionPeriod { get; set; }
        /// <summary>ARM ID of the resource to be backed up.</summary>
        string SourceResourceId { get; set; }
        /// <summary>backup item type.</summary>
        string Type { get; set; }
        /// <summary>Type of workload this item represents.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Support.DataSourceType? WorkloadType { get; set; }

    }
}