// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20230201
{
    using static Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Runtime.Extensions;

    /// <summary>Client script details for file / folder restore.</summary>
    public partial class ClientScriptForConnect :
        Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20230201.IClientScriptForConnect,
        Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20230201.IClientScriptForConnectInternal
    {

        /// <summary>Backing field for <see cref="OSType" /> property.</summary>
        private string _oSType;

        /// <summary>
        /// OS type - Windows, Linux etc. for which this file / folder restore client script works.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.PropertyOrigin.Owned)]
        public string OSType { get => this._oSType; set => this._oSType = value; }

        /// <summary>Backing field for <see cref="ScriptContent" /> property.</summary>
        private string _scriptContent;

        /// <summary>File content of the client script for file / folder restore.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.PropertyOrigin.Owned)]
        public string ScriptContent { get => this._scriptContent; set => this._scriptContent = value; }

        /// <summary>Backing field for <see cref="ScriptExtension" /> property.</summary>
        private string _scriptExtension;

        /// <summary>
        /// File extension of the client script for file / folder restore - .ps1 , .sh , etc.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.PropertyOrigin.Owned)]
        public string ScriptExtension { get => this._scriptExtension; set => this._scriptExtension = value; }

        /// <summary>Backing field for <see cref="ScriptNameSuffix" /> property.</summary>
        private string _scriptNameSuffix;

        /// <summary>
        /// Mandatory suffix that should be added to the name of script that is given for download to user.
        /// If its null or empty then , ignore it.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.PropertyOrigin.Owned)]
        public string ScriptNameSuffix { get => this._scriptNameSuffix; set => this._scriptNameSuffix = value; }

        /// <summary>Backing field for <see cref="Url" /> property.</summary>
        private string _url;

        /// <summary>
        /// URL of Executable from where to source the content. If this is not null then ScriptContent should not be used
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.PropertyOrigin.Owned)]
        public string Url { get => this._url; set => this._url = value; }

        /// <summary>Creates an new <see cref="ClientScriptForConnect" /> instance.</summary>
        public ClientScriptForConnect()
        {

        }
    }
    /// Client script details for file / folder restore.
    public partial interface IClientScriptForConnect :
        Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Runtime.IJsonSerializable
    {
        /// <summary>
        /// OS type - Windows, Linux etc. for which this file / folder restore client script works.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"OS type - Windows, Linux etc. for which this file / folder restore client script works.",
        SerializedName = @"osType",
        PossibleTypes = new [] { typeof(string) })]
        string OSType { get; set; }
        /// <summary>File content of the client script for file / folder restore.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"File content of the client script for file / folder restore.",
        SerializedName = @"scriptContent",
        PossibleTypes = new [] { typeof(string) })]
        string ScriptContent { get; set; }
        /// <summary>
        /// File extension of the client script for file / folder restore - .ps1 , .sh , etc.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"File extension of the client script for file / folder restore - .ps1 , .sh , etc.",
        SerializedName = @"scriptExtension",
        PossibleTypes = new [] { typeof(string) })]
        string ScriptExtension { get; set; }
        /// <summary>
        /// Mandatory suffix that should be added to the name of script that is given for download to user.
        /// If its null or empty then , ignore it.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Mandatory suffix that should be added to the name of script that is given for download to user.
        If its null or empty then , ignore it.",
        SerializedName = @"scriptNameSuffix",
        PossibleTypes = new [] { typeof(string) })]
        string ScriptNameSuffix { get; set; }
        /// <summary>
        /// URL of Executable from where to source the content. If this is not null then ScriptContent should not be used
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"URL of Executable from where to source the content. If this is not null then ScriptContent should not be used",
        SerializedName = @"url",
        PossibleTypes = new [] { typeof(string) })]
        string Url { get; set; }

    }
    /// Client script details for file / folder restore.
    internal partial interface IClientScriptForConnectInternal

    {
        /// <summary>
        /// OS type - Windows, Linux etc. for which this file / folder restore client script works.
        /// </summary>
        string OSType { get; set; }
        /// <summary>File content of the client script for file / folder restore.</summary>
        string ScriptContent { get; set; }
        /// <summary>
        /// File extension of the client script for file / folder restore - .ps1 , .sh , etc.
        /// </summary>
        string ScriptExtension { get; set; }
        /// <summary>
        /// Mandatory suffix that should be added to the name of script that is given for download to user.
        /// If its null or empty then , ignore it.
        /// </summary>
        string ScriptNameSuffix { get; set; }
        /// <summary>
        /// URL of Executable from where to source the content. If this is not null then ScriptContent should not be used
        /// </summary>
        string Url { get; set; }

    }
}