// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20230201
{
    using static Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Runtime.Extensions;

    /// <summary>The query filters that can be used with the list containers API.</summary>
    public partial class BmsContainerQueryObject :
        Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20230201.IBmsContainerQueryObject,
        Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20230201.IBmsContainerQueryObjectInternal
    {

        /// <summary>Backing field for <see cref="BackupEngineName" /> property.</summary>
        private string _backupEngineName;

        /// <summary>Backup engine name</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.PropertyOrigin.Owned)]
        public string BackupEngineName { get => this._backupEngineName; set => this._backupEngineName = value; }

        /// <summary>Backing field for <see cref="BackupManagementType" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Support.BackupManagementType _backupManagementType;

        /// <summary>Backup management type for this container.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Support.BackupManagementType BackupManagementType { get => this._backupManagementType; set => this._backupManagementType = value; }

        /// <summary>Backing field for <see cref="ContainerType" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Support.ContainerType? _containerType;

        /// <summary>Type of container for filter</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Support.ContainerType? ContainerType { get => this._containerType; set => this._containerType = value; }

        /// <summary>Backing field for <see cref="FabricName" /> property.</summary>
        private string _fabricName;

        /// <summary>Fabric name for filter</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.PropertyOrigin.Owned)]
        public string FabricName { get => this._fabricName; set => this._fabricName = value; }

        /// <summary>Backing field for <see cref="FriendlyName" /> property.</summary>
        private string _friendlyName;

        /// <summary>Friendly name of this container.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.PropertyOrigin.Owned)]
        public string FriendlyName { get => this._friendlyName; set => this._friendlyName = value; }

        /// <summary>Backing field for <see cref="Status" /> property.</summary>
        private string _status;

        /// <summary>Status of registration of this container with the Recovery Services Vault.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.PropertyOrigin.Owned)]
        public string Status { get => this._status; set => this._status = value; }

        /// <summary>Creates an new <see cref="BmsContainerQueryObject" /> instance.</summary>
        public BmsContainerQueryObject()
        {

        }
    }
    /// The query filters that can be used with the list containers API.
    public partial interface IBmsContainerQueryObject :
        Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Runtime.IJsonSerializable
    {
        /// <summary>Backup engine name</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Backup engine name",
        SerializedName = @"backupEngineName",
        PossibleTypes = new [] { typeof(string) })]
        string BackupEngineName { get; set; }
        /// <summary>Backup management type for this container.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"Backup management type for this container.",
        SerializedName = @"backupManagementType",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Support.BackupManagementType) })]
        Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Support.BackupManagementType BackupManagementType { get; set; }
        /// <summary>Type of container for filter</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Type of container for filter",
        SerializedName = @"containerType",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Support.ContainerType) })]
        Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Support.ContainerType? ContainerType { get; set; }
        /// <summary>Fabric name for filter</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Fabric name for filter",
        SerializedName = @"fabricName",
        PossibleTypes = new [] { typeof(string) })]
        string FabricName { get; set; }
        /// <summary>Friendly name of this container.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Friendly name of this container.",
        SerializedName = @"friendlyName",
        PossibleTypes = new [] { typeof(string) })]
        string FriendlyName { get; set; }
        /// <summary>Status of registration of this container with the Recovery Services Vault.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Status of registration of this container with the Recovery Services Vault.",
        SerializedName = @"status",
        PossibleTypes = new [] { typeof(string) })]
        string Status { get; set; }

    }
    /// The query filters that can be used with the list containers API.
    internal partial interface IBmsContainerQueryObjectInternal

    {
        /// <summary>Backup engine name</summary>
        string BackupEngineName { get; set; }
        /// <summary>Backup management type for this container.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Support.BackupManagementType BackupManagementType { get; set; }
        /// <summary>Type of container for filter</summary>
        Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Support.ContainerType? ContainerType { get; set; }
        /// <summary>Fabric name for filter</summary>
        string FabricName { get; set; }
        /// <summary>Friendly name of this container.</summary>
        string FriendlyName { get; set; }
        /// <summary>Status of registration of this container with the Recovery Services Vault.</summary>
        string Status { get; set; }

    }
}