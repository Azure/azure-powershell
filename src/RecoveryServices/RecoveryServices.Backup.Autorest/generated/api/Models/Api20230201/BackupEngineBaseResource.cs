// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20230201
{
    using static Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Runtime.Extensions;

    /// <summary>
    /// The base backup engine class. All workload specific backup engines derive from this class.
    /// </summary>
    public partial class BackupEngineBaseResource :
        Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20230201.IBackupEngineBaseResource,
        Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20230201.IBackupEngineBaseResourceInternal,
        Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Runtime.IValidates
    {
        /// <summary>
        /// Backing field for Inherited model <see cref= "Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20230201.IResource"
        /// />
        /// </summary>
        private Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20230201.IResource __resource = new Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20230201.Resource();

        /// <summary>Backup agent version</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.PropertyOrigin.Inlined)]
        public string AzureBackupAgentVersion { get => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20230201.IBackupEngineBaseInternal)Property).AzureBackupAgentVersion; set => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20230201.IBackupEngineBaseInternal)Property).AzureBackupAgentVersion = value ?? null; }

        /// <summary>ID of the backup engine.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.PropertyOrigin.Inlined)]
        public string BackupEngineId { get => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20230201.IBackupEngineBaseInternal)Property).BackupEngineId; set => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20230201.IBackupEngineBaseInternal)Property).BackupEngineId = value ?? null; }

        /// <summary>
        /// Status of the backup engine with the Recovery Services Vault. = {Active/Deleting/DeleteFailed}
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.PropertyOrigin.Inlined)]
        public string BackupEngineState { get => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20230201.IBackupEngineBaseInternal)Property).BackupEngineState; set => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20230201.IBackupEngineBaseInternal)Property).BackupEngineState = value ?? null; }

        /// <summary>Type of the backup engine.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Support.BackupEngineType? BackupEngineType { get => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20230201.IBackupEngineBaseInternal)Property).BackupEngineType; set => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20230201.IBackupEngineBaseInternal)Property).BackupEngineType = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Support.BackupEngineType)""); }

        /// <summary>Type of backup management for the backup engine.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Support.BackupManagementType? BackupManagementType { get => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20230201.IBackupEngineBaseInternal)Property).BackupManagementType; set => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20230201.IBackupEngineBaseInternal)Property).BackupManagementType = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Support.BackupManagementType)""); }

        /// <summary>Flag indicating if the backup engine be registered, once already registered.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.PropertyOrigin.Inlined)]
        public bool? CanReRegister { get => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20230201.IBackupEngineBaseInternal)Property).CanReRegister; set => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20230201.IBackupEngineBaseInternal)Property).CanReRegister = value ?? default(bool); }

        /// <summary>Backup engine version</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.PropertyOrigin.Inlined)]
        public string DpmVersion { get => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20230201.IBackupEngineBaseInternal)Property).DpmVersion; set => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20230201.IBackupEngineBaseInternal)Property).DpmVersion = value ?? null; }

        /// <summary>Optional ETag.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.PropertyOrigin.Inherited)]
        public string ETag { get => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20230201.IResourceInternal)__resource).ETag; set => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20230201.IResourceInternal)__resource).ETag = value ?? null; }

        /// <summary>Disk space currently available in the backup engine.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.PropertyOrigin.Inlined)]
        public double? ExtendedInfoAvailableDiskSpace { get => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20230201.IBackupEngineBaseInternal)Property).ExtendedInfoAvailableDiskSpace; set => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20230201.IBackupEngineBaseInternal)Property).ExtendedInfoAvailableDiskSpace = value ?? default(double); }

        /// <summary>Protected instances in the backup engine.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.PropertyOrigin.Inlined)]
        public int? ExtendedInfoAzureProtectedInstance { get => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20230201.IBackupEngineBaseInternal)Property).ExtendedInfoAzureProtectedInstance; set => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20230201.IBackupEngineBaseInternal)Property).ExtendedInfoAzureProtectedInstance = value ?? default(int); }

        /// <summary>Database name of backup engine.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.PropertyOrigin.Inlined)]
        public string ExtendedInfoDatabaseName { get => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20230201.IBackupEngineBaseInternal)Property).ExtendedInfoDatabaseName; set => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20230201.IBackupEngineBaseInternal)Property).ExtendedInfoDatabaseName = value ?? null; }

        /// <summary>Number of disks in the backup engine.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.PropertyOrigin.Inlined)]
        public int? ExtendedInfoDiskCount { get => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20230201.IBackupEngineBaseInternal)Property).ExtendedInfoDiskCount; set => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20230201.IBackupEngineBaseInternal)Property).ExtendedInfoDiskCount = value ?? default(int); }

        /// <summary>Number of protected items in the backup engine.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.PropertyOrigin.Inlined)]
        public int? ExtendedInfoProtectedItemsCount { get => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20230201.IBackupEngineBaseInternal)Property).ExtendedInfoProtectedItemsCount; set => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20230201.IBackupEngineBaseInternal)Property).ExtendedInfoProtectedItemsCount = value ?? default(int); }

        /// <summary>Number of protected servers in the backup engine.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.PropertyOrigin.Inlined)]
        public int? ExtendedInfoProtectedServersCount { get => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20230201.IBackupEngineBaseInternal)Property).ExtendedInfoProtectedServersCount; set => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20230201.IBackupEngineBaseInternal)Property).ExtendedInfoProtectedServersCount = value ?? default(int); }

        /// <summary>Last refresh time in the backup engine.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.PropertyOrigin.Inlined)]
        public global::System.DateTime? ExtendedInfoRefreshedAt { get => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20230201.IBackupEngineBaseInternal)Property).ExtendedInfoRefreshedAt; set => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20230201.IBackupEngineBaseInternal)Property).ExtendedInfoRefreshedAt = value ?? default(global::System.DateTime); }

        /// <summary>Disk space used in the backup engine.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.PropertyOrigin.Inlined)]
        public double? ExtendedInfoUsedDiskSpace { get => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20230201.IBackupEngineBaseInternal)Property).ExtendedInfoUsedDiskSpace; set => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20230201.IBackupEngineBaseInternal)Property).ExtendedInfoUsedDiskSpace = value ?? default(double); }

        /// <summary>Friendly name of the backup engine.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.PropertyOrigin.Inlined)]
        public string FriendlyName { get => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20230201.IBackupEngineBaseInternal)Property).FriendlyName; set => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20230201.IBackupEngineBaseInternal)Property).FriendlyName = value ?? null; }

        /// <summary>Backup status of the backup engine.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.PropertyOrigin.Inlined)]
        public string HealthStatus { get => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20230201.IBackupEngineBaseInternal)Property).HealthStatus; set => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20230201.IBackupEngineBaseInternal)Property).HealthStatus = value ?? null; }

        /// <summary>Resource Id represents the complete path to the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.PropertyOrigin.Inherited)]
        public string Id { get => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20230201.IResourceInternal)__resource).Id; }

        /// <summary>To check if backup agent upgrade available</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.PropertyOrigin.Inlined)]
        public bool? IsAzureBackupAgentUpgradeAvailable { get => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20230201.IBackupEngineBaseInternal)Property).IsAzureBackupAgentUpgradeAvailable; set => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20230201.IBackupEngineBaseInternal)Property).IsAzureBackupAgentUpgradeAvailable = value ?? default(bool); }

        /// <summary>To check if backup engine upgrade available</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.PropertyOrigin.Inlined)]
        public bool? IsDpmUpgradeAvailable { get => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20230201.IBackupEngineBaseInternal)Property).IsDpmUpgradeAvailable; set => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20230201.IBackupEngineBaseInternal)Property).IsDpmUpgradeAvailable = value ?? default(bool); }

        /// <summary>Resource location.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.PropertyOrigin.Inherited)]
        public string Location { get => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20230201.IResourceInternal)__resource).Location; set => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20230201.IResourceInternal)__resource).Location = value ?? null; }

        /// <summary>Internal Acessors for ExtendedInfo</summary>
        Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20230201.IBackupEngineExtendedInfo Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20230201.IBackupEngineBaseResourceInternal.ExtendedInfo { get => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20230201.IBackupEngineBaseInternal)Property).ExtendedInfo; set => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20230201.IBackupEngineBaseInternal)Property).ExtendedInfo = value; }

        /// <summary>Internal Acessors for Property</summary>
        Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20230201.IBackupEngineBase Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20230201.IBackupEngineBaseResourceInternal.Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20230201.BackupEngineBase()); set { {_property = value;} } }

        /// <summary>Internal Acessors for Id</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20230201.IResourceInternal.Id { get => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20230201.IResourceInternal)__resource).Id; set => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20230201.IResourceInternal)__resource).Id = value; }

        /// <summary>Internal Acessors for Name</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20230201.IResourceInternal.Name { get => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20230201.IResourceInternal)__resource).Name; set => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20230201.IResourceInternal)__resource).Name = value; }

        /// <summary>Internal Acessors for Type</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20230201.IResourceInternal.Type { get => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20230201.IResourceInternal)__resource).Type; set => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20230201.IResourceInternal)__resource).Type = value; }

        /// <summary>Resource name associated with the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.PropertyOrigin.Inherited)]
        public string Name { get => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20230201.IResourceInternal)__resource).Name; }

        /// <summary>Backing field for <see cref="Property" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20230201.IBackupEngineBase _property;

        /// <summary>BackupEngineBaseResource properties</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20230201.IBackupEngineBase Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20230201.BackupEngineBase()); set => this._property = value; }

        /// <summary>Registration status of the backup engine with the Recovery Services Vault.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.PropertyOrigin.Inlined)]
        public string RegistrationStatus { get => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20230201.IBackupEngineBaseInternal)Property).RegistrationStatus; set => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20230201.IBackupEngineBaseInternal)Property).RegistrationStatus = value ?? null; }

        /// <summary>Resource tags.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.PropertyOrigin.Inherited)]
        public Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20230201.IResourceTags Tag { get => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20230201.IResourceInternal)__resource).Tag; set => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20230201.IResourceInternal)__resource).Tag = value ?? null /* model class */; }

        /// <summary>
        /// Resource type represents the complete path of the form Namespace/ResourceType/ResourceType/...
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.PropertyOrigin.Inherited)]
        public string Type { get => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20230201.IResourceInternal)__resource).Type; }

        /// <summary>Creates an new <see cref="BackupEngineBaseResource" /> instance.</summary>
        public BackupEngineBaseResource()
        {

        }

        /// <summary>Validates that this object meets the validation criteria.</summary>
        /// <param name="eventListener">an <see cref="Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Runtime.IEventListener" /> instance that will receive validation
        /// events.</param>
        /// <returns>
        /// A <see cref = "global::System.Threading.Tasks.Task" /> that will be complete when validation is completed.
        /// </returns>
        public async global::System.Threading.Tasks.Task Validate(Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Runtime.IEventListener eventListener)
        {
            await eventListener.AssertNotNull(nameof(__resource), __resource);
            await eventListener.AssertObjectIsValid(nameof(__resource), __resource);
        }
    }
    /// The base backup engine class. All workload specific backup engines derive from this class.
    public partial interface IBackupEngineBaseResource :
        Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Runtime.IJsonSerializable,
        Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20230201.IResource
    {
        /// <summary>Backup agent version</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Backup agent version",
        SerializedName = @"azureBackupAgentVersion",
        PossibleTypes = new [] { typeof(string) })]
        string AzureBackupAgentVersion { get; set; }
        /// <summary>ID of the backup engine.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"ID of the backup engine.",
        SerializedName = @"backupEngineId",
        PossibleTypes = new [] { typeof(string) })]
        string BackupEngineId { get; set; }
        /// <summary>
        /// Status of the backup engine with the Recovery Services Vault. = {Active/Deleting/DeleteFailed}
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Status of the backup engine with the Recovery Services Vault. = {Active/Deleting/DeleteFailed}",
        SerializedName = @"backupEngineState",
        PossibleTypes = new [] { typeof(string) })]
        string BackupEngineState { get; set; }
        /// <summary>Type of the backup engine.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Type of the backup engine.",
        SerializedName = @"backupEngineType",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Support.BackupEngineType) })]
        Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Support.BackupEngineType? BackupEngineType { get; set; }
        /// <summary>Type of backup management for the backup engine.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Type of backup management for the backup engine.",
        SerializedName = @"backupManagementType",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Support.BackupManagementType) })]
        Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Support.BackupManagementType? BackupManagementType { get; set; }
        /// <summary>Flag indicating if the backup engine be registered, once already registered.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Flag indicating if the backup engine be registered, once already registered.",
        SerializedName = @"canReRegister",
        PossibleTypes = new [] { typeof(bool) })]
        bool? CanReRegister { get; set; }
        /// <summary>Backup engine version</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Backup engine version",
        SerializedName = @"dpmVersion",
        PossibleTypes = new [] { typeof(string) })]
        string DpmVersion { get; set; }
        /// <summary>Disk space currently available in the backup engine.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Disk space currently available in the backup engine.",
        SerializedName = @"availableDiskSpace",
        PossibleTypes = new [] { typeof(double) })]
        double? ExtendedInfoAvailableDiskSpace { get; set; }
        /// <summary>Protected instances in the backup engine.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Protected instances in the backup engine.",
        SerializedName = @"azureProtectedInstances",
        PossibleTypes = new [] { typeof(int) })]
        int? ExtendedInfoAzureProtectedInstance { get; set; }
        /// <summary>Database name of backup engine.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Database name of backup engine.",
        SerializedName = @"databaseName",
        PossibleTypes = new [] { typeof(string) })]
        string ExtendedInfoDatabaseName { get; set; }
        /// <summary>Number of disks in the backup engine.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Number of disks in the backup engine.",
        SerializedName = @"diskCount",
        PossibleTypes = new [] { typeof(int) })]
        int? ExtendedInfoDiskCount { get; set; }
        /// <summary>Number of protected items in the backup engine.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Number of protected items in the backup engine.",
        SerializedName = @"protectedItemsCount",
        PossibleTypes = new [] { typeof(int) })]
        int? ExtendedInfoProtectedItemsCount { get; set; }
        /// <summary>Number of protected servers in the backup engine.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Number of protected servers in the backup engine.",
        SerializedName = @"protectedServersCount",
        PossibleTypes = new [] { typeof(int) })]
        int? ExtendedInfoProtectedServersCount { get; set; }
        /// <summary>Last refresh time in the backup engine.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Last refresh time in the backup engine.",
        SerializedName = @"refreshedAt",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? ExtendedInfoRefreshedAt { get; set; }
        /// <summary>Disk space used in the backup engine.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Disk space used in the backup engine.",
        SerializedName = @"usedDiskSpace",
        PossibleTypes = new [] { typeof(double) })]
        double? ExtendedInfoUsedDiskSpace { get; set; }
        /// <summary>Friendly name of the backup engine.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Friendly name of the backup engine.",
        SerializedName = @"friendlyName",
        PossibleTypes = new [] { typeof(string) })]
        string FriendlyName { get; set; }
        /// <summary>Backup status of the backup engine.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Backup status of the backup engine.",
        SerializedName = @"healthStatus",
        PossibleTypes = new [] { typeof(string) })]
        string HealthStatus { get; set; }
        /// <summary>To check if backup agent upgrade available</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"To check if backup agent upgrade available",
        SerializedName = @"isAzureBackupAgentUpgradeAvailable",
        PossibleTypes = new [] { typeof(bool) })]
        bool? IsAzureBackupAgentUpgradeAvailable { get; set; }
        /// <summary>To check if backup engine upgrade available</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"To check if backup engine upgrade available",
        SerializedName = @"isDpmUpgradeAvailable",
        PossibleTypes = new [] { typeof(bool) })]
        bool? IsDpmUpgradeAvailable { get; set; }
        /// <summary>Registration status of the backup engine with the Recovery Services Vault.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Registration status of the backup engine with the Recovery Services Vault.",
        SerializedName = @"registrationStatus",
        PossibleTypes = new [] { typeof(string) })]
        string RegistrationStatus { get; set; }

    }
    /// The base backup engine class. All workload specific backup engines derive from this class.
    internal partial interface IBackupEngineBaseResourceInternal :
        Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20230201.IResourceInternal
    {
        /// <summary>Backup agent version</summary>
        string AzureBackupAgentVersion { get; set; }
        /// <summary>ID of the backup engine.</summary>
        string BackupEngineId { get; set; }
        /// <summary>
        /// Status of the backup engine with the Recovery Services Vault. = {Active/Deleting/DeleteFailed}
        /// </summary>
        string BackupEngineState { get; set; }
        /// <summary>Type of the backup engine.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Support.BackupEngineType? BackupEngineType { get; set; }
        /// <summary>Type of backup management for the backup engine.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Support.BackupManagementType? BackupManagementType { get; set; }
        /// <summary>Flag indicating if the backup engine be registered, once already registered.</summary>
        bool? CanReRegister { get; set; }
        /// <summary>Backup engine version</summary>
        string DpmVersion { get; set; }
        /// <summary>Extended info of the backupengine</summary>
        Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20230201.IBackupEngineExtendedInfo ExtendedInfo { get; set; }
        /// <summary>Disk space currently available in the backup engine.</summary>
        double? ExtendedInfoAvailableDiskSpace { get; set; }
        /// <summary>Protected instances in the backup engine.</summary>
        int? ExtendedInfoAzureProtectedInstance { get; set; }
        /// <summary>Database name of backup engine.</summary>
        string ExtendedInfoDatabaseName { get; set; }
        /// <summary>Number of disks in the backup engine.</summary>
        int? ExtendedInfoDiskCount { get; set; }
        /// <summary>Number of protected items in the backup engine.</summary>
        int? ExtendedInfoProtectedItemsCount { get; set; }
        /// <summary>Number of protected servers in the backup engine.</summary>
        int? ExtendedInfoProtectedServersCount { get; set; }
        /// <summary>Last refresh time in the backup engine.</summary>
        global::System.DateTime? ExtendedInfoRefreshedAt { get; set; }
        /// <summary>Disk space used in the backup engine.</summary>
        double? ExtendedInfoUsedDiskSpace { get; set; }
        /// <summary>Friendly name of the backup engine.</summary>
        string FriendlyName { get; set; }
        /// <summary>Backup status of the backup engine.</summary>
        string HealthStatus { get; set; }
        /// <summary>To check if backup agent upgrade available</summary>
        bool? IsAzureBackupAgentUpgradeAvailable { get; set; }
        /// <summary>To check if backup engine upgrade available</summary>
        bool? IsDpmUpgradeAvailable { get; set; }
        /// <summary>BackupEngineBaseResource properties</summary>
        Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20230201.IBackupEngineBase Property { get; set; }
        /// <summary>Registration status of the backup engine with the Recovery Services Vault.</summary>
        string RegistrationStatus { get; set; }

    }
}