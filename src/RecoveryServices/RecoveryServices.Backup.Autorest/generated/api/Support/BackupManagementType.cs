// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Support
{

    /// <summary>Backup management type to execute the current job.</summary>
    public partial struct BackupManagementType :
        System.IEquatable<BackupManagementType>
    {
        public static Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Support.BackupManagementType AzureBackupServer = @"AzureBackupServer";

        public static Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Support.BackupManagementType AzureIaasVM = @"AzureIaasVM";

        public static Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Support.BackupManagementType AzureSql = @"AzureSql";

        public static Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Support.BackupManagementType AzureStorage = @"AzureStorage";

        public static Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Support.BackupManagementType AzureWorkload = @"AzureWorkload";

        public static Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Support.BackupManagementType DefaultBackup = @"DefaultBackup";

        public static Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Support.BackupManagementType Dpm = @"DPM";

        public static Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Support.BackupManagementType Invalid = @"Invalid";

        public static Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Support.BackupManagementType Mab = @"MAB";

        /// <summary>the value for an instance of the <see cref="BackupManagementType" /> Enum.</summary>
        private string _value { get; set; }

        /// <summary>Creates an instance of the <see cref="BackupManagementType"/> Enum class.</summary>
        /// <param name="underlyingValue">the value to create an instance for.</param>
        private BackupManagementType(string underlyingValue)
        {
            this._value = underlyingValue;
        }

        /// <summary>Conversion from arbitrary object to BackupManagementType</summary>
        /// <param name="value">the value to convert to an instance of <see cref="BackupManagementType" />.</param>
        internal static object CreateFrom(object value)
        {
            return new BackupManagementType(global::System.Convert.ToString(value));
        }

        /// <summary>Compares values of enum type BackupManagementType</summary>
        /// <param name="e">the value to compare against this instance.</param>
        /// <returns><c>true</c> if the two instances are equal to the same value</returns>
        public bool Equals(Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Support.BackupManagementType e)
        {
            return _value.Equals(e._value);
        }

        /// <summary>Compares values of enum type BackupManagementType (override for Object)</summary>
        /// <param name="obj">the value to compare against this instance.</param>
        /// <returns><c>true</c> if the two instances are equal to the same value</returns>
        public override bool Equals(object obj)
        {
            return obj is BackupManagementType && Equals((BackupManagementType)obj);
        }

        /// <summary>Returns hashCode for enum BackupManagementType</summary>
        /// <returns>The hashCode of the value</returns>
        public override int GetHashCode()
        {
            return this._value.GetHashCode();
        }

        /// <summary>Returns string representation for BackupManagementType</summary>
        /// <returns>A string for this value.</returns>
        public override string ToString()
        {
            return this._value;
        }

        /// <summary>Implicit operator to convert string to BackupManagementType</summary>
        /// <param name="value">the value to convert to an instance of <see cref="BackupManagementType" />.</param>

        public static implicit operator BackupManagementType(string value)
        {
            return new BackupManagementType(value);
        }

        /// <summary>Implicit operator to convert BackupManagementType to string</summary>
        /// <param name="e">the value to convert to an instance of <see cref="BackupManagementType" />.</param>

        public static implicit operator string(Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Support.BackupManagementType e)
        {
            return e._value;
        }

        /// <summary>Overriding != operator for enum BackupManagementType</summary>
        /// <param name="e1">the value to compare against <paramref name="e2" /></param>
        /// <param name="e2">the value to compare against <paramref name="e1" /></param>
        /// <returns><c>true</c> if the two instances are not equal to the same value</returns>
        public static bool operator !=(Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Support.BackupManagementType e1, Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Support.BackupManagementType e2)
        {
            return !e2.Equals(e1);
        }

        /// <summary>Overriding == operator for enum BackupManagementType</summary>
        /// <param name="e1">the value to compare against <paramref name="e2" /></param>
        /// <param name="e2">the value to compare against <paramref name="e1" /></param>
        /// <returns><c>true</c> if the two instances are equal to the same value</returns>
        public static bool operator ==(Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Support.BackupManagementType e1, Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Support.BackupManagementType e2)
        {
            return e2.Equals(e1);
        }
    }
}