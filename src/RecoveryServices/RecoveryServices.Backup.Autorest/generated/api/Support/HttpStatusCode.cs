// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Support
{

    /// <summary>HTTP Status Code of the operation.</summary>
    public partial struct HttpStatusCode :
        System.IEquatable<HttpStatusCode>
    {
        public static Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Support.HttpStatusCode Accepted = @"Accepted";

        public static Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Support.HttpStatusCode Ambiguous = @"Ambiguous";

        public static Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Support.HttpStatusCode BadGateway = @"BadGateway";

        public static Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Support.HttpStatusCode BadRequest = @"BadRequest";

        public static Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Support.HttpStatusCode Conflict = @"Conflict";

        public static Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Support.HttpStatusCode Continue = @"Continue";

        public static Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Support.HttpStatusCode Created = @"Created";

        public static Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Support.HttpStatusCode ExpectationFailed = @"ExpectationFailed";

        public static Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Support.HttpStatusCode Forbidden = @"Forbidden";

        public static Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Support.HttpStatusCode Found = @"Found";

        public static Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Support.HttpStatusCode GatewayTimeout = @"GatewayTimeout";

        public static Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Support.HttpStatusCode Gone = @"Gone";

        public static Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Support.HttpStatusCode HttpVersionNotSupported = @"HttpVersionNotSupported";

        public static Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Support.HttpStatusCode InternalServerError = @"InternalServerError";

        public static Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Support.HttpStatusCode LengthRequired = @"LengthRequired";

        public static Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Support.HttpStatusCode MethodNotAllowed = @"MethodNotAllowed";

        public static Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Support.HttpStatusCode Moved = @"Moved";

        public static Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Support.HttpStatusCode MovedPermanently = @"MovedPermanently";

        public static Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Support.HttpStatusCode MultipleChoices = @"MultipleChoices";

        public static Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Support.HttpStatusCode NoContent = @"NoContent";

        public static Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Support.HttpStatusCode NonAuthoritativeInformation = @"NonAuthoritativeInformation";

        public static Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Support.HttpStatusCode NotAcceptable = @"NotAcceptable";

        public static Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Support.HttpStatusCode NotFound = @"NotFound";

        public static Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Support.HttpStatusCode NotImplemented = @"NotImplemented";

        public static Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Support.HttpStatusCode NotModified = @"NotModified";

        public static Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Support.HttpStatusCode Ok = @"OK";

        public static Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Support.HttpStatusCode PartialContent = @"PartialContent";

        public static Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Support.HttpStatusCode PaymentRequired = @"PaymentRequired";

        public static Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Support.HttpStatusCode PreconditionFailed = @"PreconditionFailed";

        public static Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Support.HttpStatusCode ProxyAuthenticationRequired = @"ProxyAuthenticationRequired";

        public static Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Support.HttpStatusCode Redirect = @"Redirect";

        public static Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Support.HttpStatusCode RedirectKeepVerb = @"RedirectKeepVerb";

        public static Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Support.HttpStatusCode RedirectMethod = @"RedirectMethod";

        public static Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Support.HttpStatusCode RequestEntityTooLarge = @"RequestEntityTooLarge";

        public static Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Support.HttpStatusCode RequestTimeout = @"RequestTimeout";

        public static Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Support.HttpStatusCode RequestUriTooLong = @"RequestUriTooLong";

        public static Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Support.HttpStatusCode RequestedRangeNotSatisfiable = @"RequestedRangeNotSatisfiable";

        public static Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Support.HttpStatusCode ResetContent = @"ResetContent";

        public static Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Support.HttpStatusCode SeeOther = @"SeeOther";

        public static Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Support.HttpStatusCode ServiceUnavailable = @"ServiceUnavailable";

        public static Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Support.HttpStatusCode SwitchingProtocols = @"SwitchingProtocols";

        public static Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Support.HttpStatusCode TemporaryRedirect = @"TemporaryRedirect";

        public static Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Support.HttpStatusCode Unauthorized = @"Unauthorized";

        public static Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Support.HttpStatusCode UnsupportedMediaType = @"UnsupportedMediaType";

        public static Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Support.HttpStatusCode Unused = @"Unused";

        public static Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Support.HttpStatusCode UpgradeRequired = @"UpgradeRequired";

        public static Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Support.HttpStatusCode UseProxy = @"UseProxy";

        /// <summary>the value for an instance of the <see cref="HttpStatusCode" /> Enum.</summary>
        private string _value { get; set; }

        /// <summary>Conversion from arbitrary object to HttpStatusCode</summary>
        /// <param name="value">the value to convert to an instance of <see cref="HttpStatusCode" />.</param>
        internal static object CreateFrom(object value)
        {
            return new HttpStatusCode(global::System.Convert.ToString(value));
        }

        /// <summary>Compares values of enum type HttpStatusCode</summary>
        /// <param name="e">the value to compare against this instance.</param>
        /// <returns><c>true</c> if the two instances are equal to the same value</returns>
        public bool Equals(Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Support.HttpStatusCode e)
        {
            return _value.Equals(e._value);
        }

        /// <summary>Compares values of enum type HttpStatusCode (override for Object)</summary>
        /// <param name="obj">the value to compare against this instance.</param>
        /// <returns><c>true</c> if the two instances are equal to the same value</returns>
        public override bool Equals(object obj)
        {
            return obj is HttpStatusCode && Equals((HttpStatusCode)obj);
        }

        /// <summary>Returns hashCode for enum HttpStatusCode</summary>
        /// <returns>The hashCode of the value</returns>
        public override int GetHashCode()
        {
            return this._value.GetHashCode();
        }

        /// <summary>Creates an instance of the <see cref="HttpStatusCode"/> Enum class.</summary>
        /// <param name="underlyingValue">the value to create an instance for.</param>
        private HttpStatusCode(string underlyingValue)
        {
            this._value = underlyingValue;
        }

        /// <summary>Returns string representation for HttpStatusCode</summary>
        /// <returns>A string for this value.</returns>
        public override string ToString()
        {
            return this._value;
        }

        /// <summary>Implicit operator to convert string to HttpStatusCode</summary>
        /// <param name="value">the value to convert to an instance of <see cref="HttpStatusCode" />.</param>

        public static implicit operator HttpStatusCode(string value)
        {
            return new HttpStatusCode(value);
        }

        /// <summary>Implicit operator to convert HttpStatusCode to string</summary>
        /// <param name="e">the value to convert to an instance of <see cref="HttpStatusCode" />.</param>

        public static implicit operator string(Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Support.HttpStatusCode e)
        {
            return e._value;
        }

        /// <summary>Overriding != operator for enum HttpStatusCode</summary>
        /// <param name="e1">the value to compare against <paramref name="e2" /></param>
        /// <param name="e2">the value to compare against <paramref name="e1" /></param>
        /// <returns><c>true</c> if the two instances are not equal to the same value</returns>
        public static bool operator !=(Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Support.HttpStatusCode e1, Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Support.HttpStatusCode e2)
        {
            return !e2.Equals(e1);
        }

        /// <summary>Overriding == operator for enum HttpStatusCode</summary>
        /// <param name="e1">the value to compare against <paramref name="e2" /></param>
        /// <param name="e2">the value to compare against <paramref name="e1" /></param>
        /// <returns><c>true</c> if the two instances are equal to the same value</returns>
        public static bool operator ==(Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Support.HttpStatusCode e1, Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Support.HttpStatusCode e2)
        {
            return e2.Equals(e1);
        }
    }
}