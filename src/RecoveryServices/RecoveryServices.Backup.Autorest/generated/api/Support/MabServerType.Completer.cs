// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Support
{

    /// <summary>Server type of MAB container.</summary>
    [System.ComponentModel.TypeConverter(typeof(Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Support.MabServerTypeTypeConverter))]
    public partial struct MabServerType :
        System.Management.Automation.IArgumentCompleter
    {

        /// <summary>
        /// Implementations of this function are called by PowerShell to complete arguments.
        /// </summary>
        /// <param name="commandName">The name of the command that needs argument completion.</param>
        /// <param name="parameterName">The name of the parameter that needs argument completion.</param>
        /// <param name="wordToComplete">The (possibly empty) word being completed.</param>
        /// <param name="commandAst">The command ast in case it is needed for completion.</param>
        /// <param name="fakeBoundParameters">This parameter is similar to $PSBoundParameters, except that sometimes PowerShell cannot
        /// or will not attempt to evaluate an argument, in which case you may need to use commandAst.</param>
        /// <returns>
        /// A collection of completion results, most like with ResultType set to ParameterValue.
        /// </returns>
        public global::System.Collections.Generic.IEnumerable<global::System.Management.Automation.CompletionResult> CompleteArgument(global::System.String commandName, global::System.String parameterName, global::System.String wordToComplete, global::System.Management.Automation.Language.CommandAst commandAst, global::System.Collections.IDictionary fakeBoundParameters)
        {
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "Invalid".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'Invalid'", "Invalid", global::System.Management.Automation.CompletionResultType.ParameterValue, "Invalid");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "Unknown".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'Unknown'", "Unknown", global::System.Management.Automation.CompletionResultType.ParameterValue, "Unknown");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "IaasVMContainer".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'IaasVMContainer'", "IaasVMContainer", global::System.Management.Automation.CompletionResultType.ParameterValue, "IaasVMContainer");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "IaasVMServiceContainer".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'IaasVMServiceContainer'", "IaasVMServiceContainer", global::System.Management.Automation.CompletionResultType.ParameterValue, "IaasVMServiceContainer");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "DPMContainer".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'DPMContainer'", "DPMContainer", global::System.Management.Automation.CompletionResultType.ParameterValue, "DPMContainer");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AzureBackupServerContainer".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AzureBackupServerContainer'", "AzureBackupServerContainer", global::System.Management.Automation.CompletionResultType.ParameterValue, "AzureBackupServerContainer");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "MABContainer".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'MABContainer'", "MABContainer", global::System.Management.Automation.CompletionResultType.ParameterValue, "MABContainer");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "Cluster".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'Cluster'", "Cluster", global::System.Management.Automation.CompletionResultType.ParameterValue, "Cluster");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AzureSqlContainer".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AzureSqlContainer'", "AzureSqlContainer", global::System.Management.Automation.CompletionResultType.ParameterValue, "AzureSqlContainer");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "Windows".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'Windows'", "Windows", global::System.Management.Automation.CompletionResultType.ParameterValue, "Windows");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "VCenter".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'VCenter'", "VCenter", global::System.Management.Automation.CompletionResultType.ParameterValue, "VCenter");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "VMAppContainer".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'VMAppContainer'", "VMAppContainer", global::System.Management.Automation.CompletionResultType.ParameterValue, "VMAppContainer");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "SQLAGWorkLoadContainer".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'SQLAGWorkLoadContainer'", "SQLAGWorkLoadContainer", global::System.Management.Automation.CompletionResultType.ParameterValue, "SQLAGWorkLoadContainer");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "StorageContainer".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'StorageContainer'", "StorageContainer", global::System.Management.Automation.CompletionResultType.ParameterValue, "StorageContainer");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "GenericContainer".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'GenericContainer'", "GenericContainer", global::System.Management.Automation.CompletionResultType.ParameterValue, "GenericContainer");
            }
        }
    }
}