// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Support
{

    /// <summary>HTTP Status Code of the operation.</summary>
    [System.ComponentModel.TypeConverter(typeof(Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Support.HttpStatusCodeTypeConverter))]
    public partial struct HttpStatusCode :
        System.Management.Automation.IArgumentCompleter
    {

        /// <summary>
        /// Implementations of this function are called by PowerShell to complete arguments.
        /// </summary>
        /// <param name="commandName">The name of the command that needs argument completion.</param>
        /// <param name="parameterName">The name of the parameter that needs argument completion.</param>
        /// <param name="wordToComplete">The (possibly empty) word being completed.</param>
        /// <param name="commandAst">The command ast in case it is needed for completion.</param>
        /// <param name="fakeBoundParameters">This parameter is similar to $PSBoundParameters, except that sometimes PowerShell cannot
        /// or will not attempt to evaluate an argument, in which case you may need to use commandAst.</param>
        /// <returns>
        /// A collection of completion results, most like with ResultType set to ParameterValue.
        /// </returns>
        public global::System.Collections.Generic.IEnumerable<global::System.Management.Automation.CompletionResult> CompleteArgument(global::System.String commandName, global::System.String parameterName, global::System.String wordToComplete, global::System.Management.Automation.Language.CommandAst commandAst, global::System.Collections.IDictionary fakeBoundParameters)
        {
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "Continue".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'Continue'", "Continue", global::System.Management.Automation.CompletionResultType.ParameterValue, "Continue");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "SwitchingProtocols".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'SwitchingProtocols'", "SwitchingProtocols", global::System.Management.Automation.CompletionResultType.ParameterValue, "SwitchingProtocols");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "OK".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'OK'", "OK", global::System.Management.Automation.CompletionResultType.ParameterValue, "OK");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "Created".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'Created'", "Created", global::System.Management.Automation.CompletionResultType.ParameterValue, "Created");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "Accepted".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'Accepted'", "Accepted", global::System.Management.Automation.CompletionResultType.ParameterValue, "Accepted");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "NonAuthoritativeInformation".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'NonAuthoritativeInformation'", "NonAuthoritativeInformation", global::System.Management.Automation.CompletionResultType.ParameterValue, "NonAuthoritativeInformation");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "NoContent".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'NoContent'", "NoContent", global::System.Management.Automation.CompletionResultType.ParameterValue, "NoContent");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "ResetContent".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'ResetContent'", "ResetContent", global::System.Management.Automation.CompletionResultType.ParameterValue, "ResetContent");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "PartialContent".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'PartialContent'", "PartialContent", global::System.Management.Automation.CompletionResultType.ParameterValue, "PartialContent");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "MultipleChoices".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'MultipleChoices'", "MultipleChoices", global::System.Management.Automation.CompletionResultType.ParameterValue, "MultipleChoices");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "Ambiguous".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'Ambiguous'", "Ambiguous", global::System.Management.Automation.CompletionResultType.ParameterValue, "Ambiguous");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "MovedPermanently".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'MovedPermanently'", "MovedPermanently", global::System.Management.Automation.CompletionResultType.ParameterValue, "MovedPermanently");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "Moved".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'Moved'", "Moved", global::System.Management.Automation.CompletionResultType.ParameterValue, "Moved");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "Found".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'Found'", "Found", global::System.Management.Automation.CompletionResultType.ParameterValue, "Found");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "Redirect".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'Redirect'", "Redirect", global::System.Management.Automation.CompletionResultType.ParameterValue, "Redirect");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "SeeOther".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'SeeOther'", "SeeOther", global::System.Management.Automation.CompletionResultType.ParameterValue, "SeeOther");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "RedirectMethod".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'RedirectMethod'", "RedirectMethod", global::System.Management.Automation.CompletionResultType.ParameterValue, "RedirectMethod");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "NotModified".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'NotModified'", "NotModified", global::System.Management.Automation.CompletionResultType.ParameterValue, "NotModified");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "UseProxy".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'UseProxy'", "UseProxy", global::System.Management.Automation.CompletionResultType.ParameterValue, "UseProxy");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "Unused".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'Unused'", "Unused", global::System.Management.Automation.CompletionResultType.ParameterValue, "Unused");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "TemporaryRedirect".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'TemporaryRedirect'", "TemporaryRedirect", global::System.Management.Automation.CompletionResultType.ParameterValue, "TemporaryRedirect");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "RedirectKeepVerb".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'RedirectKeepVerb'", "RedirectKeepVerb", global::System.Management.Automation.CompletionResultType.ParameterValue, "RedirectKeepVerb");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "BadRequest".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'BadRequest'", "BadRequest", global::System.Management.Automation.CompletionResultType.ParameterValue, "BadRequest");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "Unauthorized".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'Unauthorized'", "Unauthorized", global::System.Management.Automation.CompletionResultType.ParameterValue, "Unauthorized");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "PaymentRequired".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'PaymentRequired'", "PaymentRequired", global::System.Management.Automation.CompletionResultType.ParameterValue, "PaymentRequired");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "Forbidden".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'Forbidden'", "Forbidden", global::System.Management.Automation.CompletionResultType.ParameterValue, "Forbidden");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "NotFound".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'NotFound'", "NotFound", global::System.Management.Automation.CompletionResultType.ParameterValue, "NotFound");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "MethodNotAllowed".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'MethodNotAllowed'", "MethodNotAllowed", global::System.Management.Automation.CompletionResultType.ParameterValue, "MethodNotAllowed");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "NotAcceptable".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'NotAcceptable'", "NotAcceptable", global::System.Management.Automation.CompletionResultType.ParameterValue, "NotAcceptable");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "ProxyAuthenticationRequired".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'ProxyAuthenticationRequired'", "ProxyAuthenticationRequired", global::System.Management.Automation.CompletionResultType.ParameterValue, "ProxyAuthenticationRequired");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "RequestTimeout".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'RequestTimeout'", "RequestTimeout", global::System.Management.Automation.CompletionResultType.ParameterValue, "RequestTimeout");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "Conflict".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'Conflict'", "Conflict", global::System.Management.Automation.CompletionResultType.ParameterValue, "Conflict");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "Gone".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'Gone'", "Gone", global::System.Management.Automation.CompletionResultType.ParameterValue, "Gone");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "LengthRequired".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'LengthRequired'", "LengthRequired", global::System.Management.Automation.CompletionResultType.ParameterValue, "LengthRequired");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "PreconditionFailed".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'PreconditionFailed'", "PreconditionFailed", global::System.Management.Automation.CompletionResultType.ParameterValue, "PreconditionFailed");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "RequestEntityTooLarge".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'RequestEntityTooLarge'", "RequestEntityTooLarge", global::System.Management.Automation.CompletionResultType.ParameterValue, "RequestEntityTooLarge");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "RequestUriTooLong".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'RequestUriTooLong'", "RequestUriTooLong", global::System.Management.Automation.CompletionResultType.ParameterValue, "RequestUriTooLong");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "UnsupportedMediaType".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'UnsupportedMediaType'", "UnsupportedMediaType", global::System.Management.Automation.CompletionResultType.ParameterValue, "UnsupportedMediaType");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "RequestedRangeNotSatisfiable".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'RequestedRangeNotSatisfiable'", "RequestedRangeNotSatisfiable", global::System.Management.Automation.CompletionResultType.ParameterValue, "RequestedRangeNotSatisfiable");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "ExpectationFailed".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'ExpectationFailed'", "ExpectationFailed", global::System.Management.Automation.CompletionResultType.ParameterValue, "ExpectationFailed");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "UpgradeRequired".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'UpgradeRequired'", "UpgradeRequired", global::System.Management.Automation.CompletionResultType.ParameterValue, "UpgradeRequired");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "InternalServerError".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'InternalServerError'", "InternalServerError", global::System.Management.Automation.CompletionResultType.ParameterValue, "InternalServerError");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "NotImplemented".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'NotImplemented'", "NotImplemented", global::System.Management.Automation.CompletionResultType.ParameterValue, "NotImplemented");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "BadGateway".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'BadGateway'", "BadGateway", global::System.Management.Automation.CompletionResultType.ParameterValue, "BadGateway");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "ServiceUnavailable".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'ServiceUnavailable'", "ServiceUnavailable", global::System.Management.Automation.CompletionResultType.ParameterValue, "ServiceUnavailable");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "GatewayTimeout".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'GatewayTimeout'", "GatewayTimeout", global::System.Management.Automation.CompletionResultType.ParameterValue, "GatewayTimeout");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "HttpVersionNotSupported".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'HttpVersionNotSupported'", "HttpVersionNotSupported", global::System.Management.Automation.CompletionResultType.ParameterValue, "HttpVersionNotSupported");
            }
        }
    }
}