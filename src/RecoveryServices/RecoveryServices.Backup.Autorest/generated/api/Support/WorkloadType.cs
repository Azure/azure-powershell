// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Support
{

    /// <summary>Type of workload for the backup management</summary>
    public partial struct WorkloadType :
        System.IEquatable<WorkloadType>
    {
        public static Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Support.WorkloadType AzureFileShare = @"AzureFileShare";

        public static Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Support.WorkloadType AzureSqlDb = @"AzureSqlDb";

        public static Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Support.WorkloadType Client = @"Client";

        public static Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Support.WorkloadType Exchange = @"Exchange";

        public static Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Support.WorkloadType FileFolder = @"FileFolder";

        public static Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Support.WorkloadType GenericDataSource = @"GenericDataSource";

        public static Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Support.WorkloadType Invalid = @"Invalid";

        public static Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Support.WorkloadType SapAseDatabase = @"SAPAseDatabase";

        public static Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Support.WorkloadType SapHanaDatabase = @"SAPHanaDatabase";

        public static Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Support.WorkloadType SapHanaDbinstance = @"SAPHanaDBInstance";

        public static Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Support.WorkloadType Sharepoint = @"Sharepoint";

        public static Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Support.WorkloadType SqlDataBase = @"SQLDataBase";

        public static Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Support.WorkloadType Sqldb = @"SQLDB";

        public static Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Support.WorkloadType SystemState = @"SystemState";

        public static Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Support.WorkloadType VM = @"VM";

        public static Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Support.WorkloadType VMwareVM = @"VMwareVM";

        /// <summary>the value for an instance of the <see cref="WorkloadType" /> Enum.</summary>
        private string _value { get; set; }

        /// <summary>Conversion from arbitrary object to WorkloadType</summary>
        /// <param name="value">the value to convert to an instance of <see cref="WorkloadType" />.</param>
        internal static object CreateFrom(object value)
        {
            return new WorkloadType(global::System.Convert.ToString(value));
        }

        /// <summary>Compares values of enum type WorkloadType</summary>
        /// <param name="e">the value to compare against this instance.</param>
        /// <returns><c>true</c> if the two instances are equal to the same value</returns>
        public bool Equals(Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Support.WorkloadType e)
        {
            return _value.Equals(e._value);
        }

        /// <summary>Compares values of enum type WorkloadType (override for Object)</summary>
        /// <param name="obj">the value to compare against this instance.</param>
        /// <returns><c>true</c> if the two instances are equal to the same value</returns>
        public override bool Equals(object obj)
        {
            return obj is WorkloadType && Equals((WorkloadType)obj);
        }

        /// <summary>Returns hashCode for enum WorkloadType</summary>
        /// <returns>The hashCode of the value</returns>
        public override int GetHashCode()
        {
            return this._value.GetHashCode();
        }

        /// <summary>Returns string representation for WorkloadType</summary>
        /// <returns>A string for this value.</returns>
        public override string ToString()
        {
            return this._value;
        }

        /// <summary>Creates an instance of the <see cref="WorkloadType"/> Enum class.</summary>
        /// <param name="underlyingValue">the value to create an instance for.</param>
        private WorkloadType(string underlyingValue)
        {
            this._value = underlyingValue;
        }

        /// <summary>Implicit operator to convert string to WorkloadType</summary>
        /// <param name="value">the value to convert to an instance of <see cref="WorkloadType" />.</param>

        public static implicit operator WorkloadType(string value)
        {
            return new WorkloadType(value);
        }

        /// <summary>Implicit operator to convert WorkloadType to string</summary>
        /// <param name="e">the value to convert to an instance of <see cref="WorkloadType" />.</param>

        public static implicit operator string(Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Support.WorkloadType e)
        {
            return e._value;
        }

        /// <summary>Overriding != operator for enum WorkloadType</summary>
        /// <param name="e1">the value to compare against <paramref name="e2" /></param>
        /// <param name="e2">the value to compare against <paramref name="e1" /></param>
        /// <returns><c>true</c> if the two instances are not equal to the same value</returns>
        public static bool operator !=(Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Support.WorkloadType e1, Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Support.WorkloadType e2)
        {
            return !e2.Equals(e1);
        }

        /// <summary>Overriding == operator for enum WorkloadType</summary>
        /// <param name="e1">the value to compare against <paramref name="e2" /></param>
        /// <param name="e2">the value to compare against <paramref name="e1" /></param>
        /// <returns><c>true</c> if the two instances are equal to the same value</returns>
        public static bool operator ==(Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Support.WorkloadType e1, Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Support.WorkloadType e2)
        {
            return e2.Equals(e1);
        }
    }
}