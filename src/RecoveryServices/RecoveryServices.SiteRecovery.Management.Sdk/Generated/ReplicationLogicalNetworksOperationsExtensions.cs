// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.
namespace Microsoft.Azure.Management.RecoveryServices.SiteRecovery
{
    using Microsoft.Rest.Azure;
    using Models;

    /// <summary>
    /// Extension methods for ReplicationLogicalNetworksOperations
    /// </summary>
    public static partial class ReplicationLogicalNetworksOperationsExtensions
    {
        /// <summary>
        /// Lists all the logical networks of the Azure Site Recovery fabric.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='fabricName'>
        /// Server Id.
        /// </param>
        public static Microsoft.Rest.Azure.IPage<LogicalNetwork> ListByReplicationFabrics(this IReplicationLogicalNetworksOperations operations, string fabricName)
        {
                return ((IReplicationLogicalNetworksOperations)operations).ListByReplicationFabricsAsync(fabricName).GetAwaiter().GetResult();
        }

        /// <summary>
        /// Lists all the logical networks of the Azure Site Recovery fabric.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='fabricName'>
        /// Server Id.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        public static async System.Threading.Tasks.Task<Microsoft.Rest.Azure.IPage<LogicalNetwork>> ListByReplicationFabricsAsync(this IReplicationLogicalNetworksOperations operations, string fabricName, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            using (var _result = await operations.ListByReplicationFabricsWithHttpMessagesAsync(fabricName, null, cancellationToken).ConfigureAwait(false))
            {
                return _result.Body;
            }
        }
        /// <summary>
        /// Gets the details of a logical network.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='fabricName'>
        /// Server Id.
        /// </param>
        /// <param name='logicalNetworkName'>
        /// Logical network name.
        /// </param>
        public static LogicalNetwork Get(this IReplicationLogicalNetworksOperations operations, string fabricName, string logicalNetworkName)
        {
                return ((IReplicationLogicalNetworksOperations)operations).GetAsync(fabricName, logicalNetworkName).GetAwaiter().GetResult();
        }

        /// <summary>
        /// Gets the details of a logical network.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='fabricName'>
        /// Server Id.
        /// </param>
        /// <param name='logicalNetworkName'>
        /// Logical network name.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        public static async System.Threading.Tasks.Task<LogicalNetwork> GetAsync(this IReplicationLogicalNetworksOperations operations, string fabricName, string logicalNetworkName, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            using (var _result = await operations.GetWithHttpMessagesAsync(fabricName, logicalNetworkName, null, cancellationToken).ConfigureAwait(false))
            {
                return _result.Body;
            }
        }
        /// <summary>
        /// Lists all the logical networks of the Azure Site Recovery fabric.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='nextPageLink'>
        /// The NextLink from the previous successful call to List operation.
        /// </param>
        public static Microsoft.Rest.Azure.IPage<LogicalNetwork> ListByReplicationFabricsNext(this IReplicationLogicalNetworksOperations operations, string nextPageLink)
        {
                return ((IReplicationLogicalNetworksOperations)operations).ListByReplicationFabricsNextAsync(nextPageLink).GetAwaiter().GetResult();
        }

        /// <summary>
        /// Lists all the logical networks of the Azure Site Recovery fabric.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='nextPageLink'>
        /// The NextLink from the previous successful call to List operation.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        public static async System.Threading.Tasks.Task<Microsoft.Rest.Azure.IPage<LogicalNetwork>> ListByReplicationFabricsNextAsync(this IReplicationLogicalNetworksOperations operations, string nextPageLink, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            using (var _result = await operations.ListByReplicationFabricsNextWithHttpMessagesAsync(nextPageLink, null, cancellationToken).ConfigureAwait(false))
            {
                return _result.Body;
            }
        }
    }
}
