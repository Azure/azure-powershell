// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.RecoveryServices.SiteRecovery.Models
{
    using System.Linq;

    /// <summary>
    /// InMageRcm fabric provider specific settings.
    /// </summary>
    [Newtonsoft.Json.JsonObject("InMageRcm")]
    public partial class InMageRcmFabricCreationInput : FabricSpecificCreationInput
    {
        /// <summary>
        /// Initializes a new instance of the InMageRcmFabricCreationInput class.
        /// </summary>
        public InMageRcmFabricCreationInput()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the InMageRcmFabricCreationInput class.
        /// </summary>

        /// <param name="vmwareSiteId">The ARM Id of the VMware site.
        /// </param>

        /// <param name="physicalSiteId">The ARM Id of the physical site.
        /// </param>

        /// <param name="sourceAgentIdentity">The identity provider input for source agent authentication.
        /// </param>
        public InMageRcmFabricCreationInput(string vmwareSiteId, string physicalSiteId, IdentityProviderInput sourceAgentIdentity)

        {
            this.VmwareSiteId = vmwareSiteId;
            this.PhysicalSiteId = physicalSiteId;
            this.SourceAgentIdentity = sourceAgentIdentity;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets or sets the ARM Id of the VMware site.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "vmwareSiteId")]
        public string VmwareSiteId {get; set; }

        /// <summary>
        /// Gets or sets the ARM Id of the physical site.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "physicalSiteId")]
        public string PhysicalSiteId {get; set; }

        /// <summary>
        /// Gets or sets the identity provider input for source agent authentication.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "sourceAgentIdentity")]
        public IdentityProviderInput SourceAgentIdentity {get; set; }
        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (this.VmwareSiteId == null)
            {
                throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.CannotBeNull, "VmwareSiteId");
            }
            if (this.PhysicalSiteId == null)
            {
                throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.CannotBeNull, "PhysicalSiteId");
            }
            if (this.SourceAgentIdentity == null)
            {
                throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.CannotBeNull, "SourceAgentIdentity");
            }


            if (this.SourceAgentIdentity != null)
            {
                this.SourceAgentIdentity.Validate();
            }
        }
    }
}