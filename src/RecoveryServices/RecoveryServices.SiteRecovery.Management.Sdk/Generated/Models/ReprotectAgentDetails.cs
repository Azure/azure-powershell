// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.RecoveryServices.SiteRecovery.Models
{
    using System.Linq;

    /// <summary>
    /// Reprotect agent details.
    /// </summary>
    public partial class ReprotectAgentDetails
    {
        /// <summary>
        /// Initializes a new instance of the ReprotectAgentDetails class.
        /// </summary>
        public ReprotectAgentDetails()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the ReprotectAgentDetails class.
        /// </summary>

        /// <param name="id">The reprotect agent Id.
        /// </param>

        /// <param name="name">The reprotect agent name.
        /// </param>

        /// <param name="biosId">The reprotect agent Bios Id.
        /// </param>

        /// <param name="fabricObjectId">The fabric object Id.
        /// </param>

        /// <param name="fqdn">The reprotect agent Fqdn.
        /// </param>

        /// <param name="version">The version.
        /// </param>

        /// <param name="lastHeartbeatUtc">The last heartbeat received from the reprotect agent.
        /// </param>

        /// <param name="health">The health of the reprotect agent.
        /// Possible values include: 'None', 'Normal', 'Warning', 'Critical'</param>

        /// <param name="healthErrors">The health errors.
        /// </param>

        /// <param name="protectedItemCount">The protected item count.
        /// </param>

        /// <param name="accessibleDatastores">The list of accessible datastores fetched from discovery.
        /// </param>

        /// <param name="vcenterId">The Vcenter Id.
        /// </param>

        /// <param name="lastDiscoveryInUtc">The last time when SDS information discovered in SRS.
        /// </param>
        public ReprotectAgentDetails(string id = default(string), string name = default(string), string biosId = default(string), string fabricObjectId = default(string), string fqdn = default(string), string version = default(string), System.DateTime? lastHeartbeatUtc = default(System.DateTime?), string health = default(string), System.Collections.Generic.IList<HealthError> healthErrors = default(System.Collections.Generic.IList<HealthError>), int? protectedItemCount = default(int?), System.Collections.Generic.IList<string> accessibleDatastores = default(System.Collections.Generic.IList<string>), string vcenterId = default(string), System.DateTime? lastDiscoveryInUtc = default(System.DateTime?))

        {
            this.Id = id;
            this.Name = name;
            this.BiosId = biosId;
            this.FabricObjectId = fabricObjectId;
            this.Fqdn = fqdn;
            this.Version = version;
            this.LastHeartbeatUtc = lastHeartbeatUtc;
            this.Health = health;
            this.HealthErrors = healthErrors;
            this.ProtectedItemCount = protectedItemCount;
            this.AccessibleDatastores = accessibleDatastores;
            this.VcenterId = vcenterId;
            this.LastDiscoveryInUtc = lastDiscoveryInUtc;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets the reprotect agent Id.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "id")]
        public string Id {get; private set; }

        /// <summary>
        /// Gets the reprotect agent name.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "name")]
        public string Name {get; private set; }

        /// <summary>
        /// Gets the reprotect agent Bios Id.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "biosId")]
        public string BiosId {get; private set; }

        /// <summary>
        /// Gets the fabric object Id.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "fabricObjectId")]
        public string FabricObjectId {get; private set; }

        /// <summary>
        /// Gets the reprotect agent Fqdn.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "fqdn")]
        public string Fqdn {get; private set; }

        /// <summary>
        /// Gets the version.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "version")]
        public string Version {get; private set; }

        /// <summary>
        /// Gets the last heartbeat received from the reprotect agent.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "lastHeartbeatUtc")]
        public System.DateTime? LastHeartbeatUtc {get; private set; }

        /// <summary>
        /// Gets the health of the reprotect agent. Possible values include: &#39;None&#39;, &#39;Normal&#39;, &#39;Warning&#39;, &#39;Critical&#39;
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "health")]
        public string Health {get; private set; }

        /// <summary>
        /// Gets the health errors.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "healthErrors")]
        public System.Collections.Generic.IList<HealthError> HealthErrors {get; private set; }

        /// <summary>
        /// Gets the protected item count.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "protectedItemCount")]
        public int? ProtectedItemCount {get; private set; }

        /// <summary>
        /// Gets the list of accessible datastores fetched from discovery.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "accessibleDatastores")]
        public System.Collections.Generic.IList<string> AccessibleDatastores {get; private set; }

        /// <summary>
        /// Gets the Vcenter Id.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "vcenterId")]
        public string VcenterId {get; private set; }

        /// <summary>
        /// Gets the last time when SDS information discovered in SRS.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "lastDiscoveryInUtc")]
        public System.DateTime? LastDiscoveryInUtc {get; private set; }
    }
}