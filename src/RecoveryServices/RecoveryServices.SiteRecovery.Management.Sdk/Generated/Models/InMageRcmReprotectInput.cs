// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.RecoveryServices.SiteRecovery.Models
{
    using System.Linq;

    /// <summary>
    /// InMageRcm specific provider input.
    /// </summary>
    [Newtonsoft.Json.JsonObject("InMageRcm")]
    public partial class InMageRcmReprotectInput : ReverseReplicationProviderSpecificInput
    {
        /// <summary>
        /// Initializes a new instance of the InMageRcmReprotectInput class.
        /// </summary>
        public InMageRcmReprotectInput()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the InMageRcmReprotectInput class.
        /// </summary>

        /// <param name="reprotectAgentId">The reprotect agent Id.
        /// </param>

        /// <param name="datastoreName">The target datastore name.
        /// </param>

        /// <param name="logStorageAccountId">The log storage account ARM Id.
        /// </param>

        /// <param name="policyId">The Policy Id.
        /// </param>
        public InMageRcmReprotectInput(string reprotectAgentId, string datastoreName, string logStorageAccountId, string policyId = default(string))

        {
            this.ReprotectAgentId = reprotectAgentId;
            this.DatastoreName = datastoreName;
            this.LogStorageAccountId = logStorageAccountId;
            this.PolicyId = policyId;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets or sets the reprotect agent Id.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "reprotectAgentId")]
        public string ReprotectAgentId {get; set; }

        /// <summary>
        /// Gets or sets the target datastore name.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "datastoreName")]
        public string DatastoreName {get; set; }

        /// <summary>
        /// Gets or sets the log storage account ARM Id.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "logStorageAccountId")]
        public string LogStorageAccountId {get; set; }

        /// <summary>
        /// Gets or sets the Policy Id.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "policyId")]
        public string PolicyId {get; set; }
        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (this.ReprotectAgentId == null)
            {
                throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.CannotBeNull, "ReprotectAgentId");
            }
            if (this.DatastoreName == null)
            {
                throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.CannotBeNull, "DatastoreName");
            }
            if (this.LogStorageAccountId == null)
            {
                throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.CannotBeNull, "LogStorageAccountId");
            }




        }
    }
}