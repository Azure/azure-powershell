// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.RecoveryServices.SiteRecovery.Models
{
    using System.Linq;

    /// <summary>
    /// Base class for the policies of providers using InMage replication.
    /// </summary>
    [Newtonsoft.Json.JsonObject("InMageBasePolicyDetails")]
    public partial class InMageBasePolicyDetails : PolicyProviderSpecificDetails
    {
        /// <summary>
        /// Initializes a new instance of the InMageBasePolicyDetails class.
        /// </summary>
        public InMageBasePolicyDetails()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the InMageBasePolicyDetails class.
        /// </summary>

        /// <param name="recoveryPointThresholdInMinutes">The recovery point threshold in minutes.
        /// </param>

        /// <param name="recoveryPointHistory">The duration in minutes until which the recovery points need to be stored.
        /// </param>

        /// <param name="appConsistentFrequencyInMinutes">The app consistent snapshot frequency in minutes.
        /// </param>

        /// <param name="multiVMSyncStatus">A value indicating whether multi-VM sync has to be enabled.
        /// </param>
        public InMageBasePolicyDetails(int? recoveryPointThresholdInMinutes = default(int?), int? recoveryPointHistory = default(int?), int? appConsistentFrequencyInMinutes = default(int?), string multiVMSyncStatus = default(string))

        {
            this.RecoveryPointThresholdInMinutes = recoveryPointThresholdInMinutes;
            this.RecoveryPointHistory = recoveryPointHistory;
            this.AppConsistentFrequencyInMinutes = appConsistentFrequencyInMinutes;
            this.MultiVMSyncStatus = multiVMSyncStatus;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets or sets the recovery point threshold in minutes.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "recoveryPointThresholdInMinutes")]
        public int? RecoveryPointThresholdInMinutes {get; set; }

        /// <summary>
        /// Gets or sets the duration in minutes until which the recovery points need
        /// to be stored.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "recoveryPointHistory")]
        public int? RecoveryPointHistory {get; set; }

        /// <summary>
        /// Gets or sets the app consistent snapshot frequency in minutes.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "appConsistentFrequencyInMinutes")]
        public int? AppConsistentFrequencyInMinutes {get; set; }

        /// <summary>
        /// Gets or sets a value indicating whether multi-VM sync has to be enabled.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "multiVmSyncStatus")]
        public string MultiVMSyncStatus {get; set; }
    }
}