// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.RecoveryServices.SiteRecovery.Models
{
    using System.Linq;

    /// <summary>
    /// InMageRcm fabric specific details.
    /// </summary>
    [Newtonsoft.Json.JsonObject("InMageRcm")]
    public partial class InMageRcmFabricSpecificDetails : FabricSpecificDetails
    {
        /// <summary>
        /// Initializes a new instance of the InMageRcmFabricSpecificDetails class.
        /// </summary>
        public InMageRcmFabricSpecificDetails()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the InMageRcmFabricSpecificDetails class.
        /// </summary>

        /// <param name="vmwareSiteId">The ARM Id of the VMware site.
        /// </param>

        /// <param name="physicalSiteId">The ARM Id of the physical site.
        /// </param>

        /// <param name="serviceEndpoint">The service endpoint.
        /// </param>

        /// <param name="serviceResourceId">The service resource Id.
        /// </param>

        /// <param name="serviceContainerId">The service container Id.
        /// </param>

        /// <param name="dataPlaneUri">The data plane Uri.
        /// </param>

        /// <param name="controlPlaneUri">The control plane Uri.
        /// </param>

        /// <param name="sourceAgentIdentityDetails">The source agent identity details.
        /// </param>

        /// <param name="processServers">The list of process servers.
        /// </param>

        /// <param name="rcmProxies">The list of RCM proxies.
        /// </param>

        /// <param name="pushInstallers">The list of push installers.
        /// </param>

        /// <param name="replicationAgents">The list of replication agents.
        /// </param>

        /// <param name="reprotectAgents">The list of reprotect agents.
        /// </param>

        /// <param name="marsAgents">The list of Mars agents.
        /// </param>

        /// <param name="dras">The list of DRAs.
        /// </param>

        /// <param name="agentDetails">The list of agent details.
        /// </param>
        public InMageRcmFabricSpecificDetails(string vmwareSiteId = default(string), string physicalSiteId = default(string), string serviceEndpoint = default(string), string serviceResourceId = default(string), string serviceContainerId = default(string), string dataPlaneUri = default(string), string controlPlaneUri = default(string), IdentityProviderDetails sourceAgentIdentityDetails = default(IdentityProviderDetails), System.Collections.Generic.IList<ProcessServerDetails> processServers = default(System.Collections.Generic.IList<ProcessServerDetails>), System.Collections.Generic.IList<RcmProxyDetails> rcmProxies = default(System.Collections.Generic.IList<RcmProxyDetails>), System.Collections.Generic.IList<PushInstallerDetails> pushInstallers = default(System.Collections.Generic.IList<PushInstallerDetails>), System.Collections.Generic.IList<ReplicationAgentDetails> replicationAgents = default(System.Collections.Generic.IList<ReplicationAgentDetails>), System.Collections.Generic.IList<ReprotectAgentDetails> reprotectAgents = default(System.Collections.Generic.IList<ReprotectAgentDetails>), System.Collections.Generic.IList<MarsAgentDetails> marsAgents = default(System.Collections.Generic.IList<MarsAgentDetails>), System.Collections.Generic.IList<DraDetails> dras = default(System.Collections.Generic.IList<DraDetails>), System.Collections.Generic.IList<AgentDetails> agentDetails = default(System.Collections.Generic.IList<AgentDetails>))

        {
            this.VmwareSiteId = vmwareSiteId;
            this.PhysicalSiteId = physicalSiteId;
            this.ServiceEndpoint = serviceEndpoint;
            this.ServiceResourceId = serviceResourceId;
            this.ServiceContainerId = serviceContainerId;
            this.DataPlaneUri = dataPlaneUri;
            this.ControlPlaneUri = controlPlaneUri;
            this.SourceAgentIdentityDetails = sourceAgentIdentityDetails;
            this.ProcessServers = processServers;
            this.RcmProxies = rcmProxies;
            this.PushInstallers = pushInstallers;
            this.ReplicationAgents = replicationAgents;
            this.ReprotectAgents = reprotectAgents;
            this.MarsAgents = marsAgents;
            this.Dras = dras;
            this.AgentDetails = agentDetails;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets the ARM Id of the VMware site.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "vmwareSiteId")]
        public string VmwareSiteId {get; private set; }

        /// <summary>
        /// Gets the ARM Id of the physical site.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "physicalSiteId")]
        public string PhysicalSiteId {get; private set; }

        /// <summary>
        /// Gets the service endpoint.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "serviceEndpoint")]
        public string ServiceEndpoint {get; private set; }

        /// <summary>
        /// Gets the service resource Id.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "serviceResourceId")]
        public string ServiceResourceId {get; private set; }

        /// <summary>
        /// Gets the service container Id.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "serviceContainerId")]
        public string ServiceContainerId {get; private set; }

        /// <summary>
        /// Gets the data plane Uri.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "dataPlaneUri")]
        public string DataPlaneUri {get; private set; }

        /// <summary>
        /// Gets the control plane Uri.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "controlPlaneUri")]
        public string ControlPlaneUri {get; private set; }

        /// <summary>
        /// Gets or sets the source agent identity details.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "sourceAgentIdentityDetails")]
        public IdentityProviderDetails SourceAgentIdentityDetails {get; set; }

        /// <summary>
        /// Gets the list of process servers.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "processServers")]
        public System.Collections.Generic.IList<ProcessServerDetails> ProcessServers {get; private set; }

        /// <summary>
        /// Gets the list of RCM proxies.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "rcmProxies")]
        public System.Collections.Generic.IList<RcmProxyDetails> RcmProxies {get; private set; }

        /// <summary>
        /// Gets the list of push installers.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "pushInstallers")]
        public System.Collections.Generic.IList<PushInstallerDetails> PushInstallers {get; private set; }

        /// <summary>
        /// Gets the list of replication agents.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "replicationAgents")]
        public System.Collections.Generic.IList<ReplicationAgentDetails> ReplicationAgents {get; private set; }

        /// <summary>
        /// Gets the list of reprotect agents.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "reprotectAgents")]
        public System.Collections.Generic.IList<ReprotectAgentDetails> ReprotectAgents {get; private set; }

        /// <summary>
        /// Gets the list of Mars agents.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "marsAgents")]
        public System.Collections.Generic.IList<MarsAgentDetails> MarsAgents {get; private set; }

        /// <summary>
        /// Gets the list of DRAs.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "dras")]
        public System.Collections.Generic.IList<DraDetails> Dras {get; private set; }

        /// <summary>
        /// Gets the list of agent details.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "agentDetails")]
        public System.Collections.Generic.IList<AgentDetails> AgentDetails {get; private set; }
    }
}