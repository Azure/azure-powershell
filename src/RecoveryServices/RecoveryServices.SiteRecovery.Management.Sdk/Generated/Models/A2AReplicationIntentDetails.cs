// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.RecoveryServices.SiteRecovery.Models
{
    using System.Linq;

    /// <summary>
    /// A2A provider specific settings.
    /// </summary>
    [Newtonsoft.Json.JsonObject("A2A")]
    public partial class A2AReplicationIntentDetails : ReplicationProtectionIntentProviderSpecificSettings
    {
        /// <summary>
        /// Initializes a new instance of the A2AReplicationIntentDetails class.
        /// </summary>
        public A2AReplicationIntentDetails()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the A2AReplicationIntentDetails class.
        /// </summary>

        /// <param name="fabricObjectId">The fabric specific object Id of the virtual machine.
        /// </param>

        /// <param name="primaryLocation">The primary location for the virtual machine.
        /// </param>

        /// <param name="recoveryLocation">The recovery location for the virtual machine.
        /// </param>

        /// <param name="recoverySubscriptionId">The recovery subscription Id of the virtual machine.
        /// </param>

        /// <param name="vmDisks">The list of vm disk details.
        /// </param>

        /// <param name="vmManagedDisks">The list of vm managed disk details.
        /// </param>

        /// <param name="recoveryResourceGroupId">The recovery resource group id.
        /// </param>

        /// <param name="protectionProfile">The protection profile custom details.
        /// </param>

        /// <param name="primaryStagingStorageAccount">The primary staging storage account details.
        /// </param>

        /// <param name="recoveryAvailabilitySet">The recovery availability set details.
        /// </param>

        /// <param name="recoveryVirtualNetwork">The recovery virtual network details.
        /// </param>

        /// <param name="recoveryProximityPlacementGroup">The recovery proximity placement group custom details.
        /// </param>

        /// <param name="autoProtectionOfDataDisk">A value indicating whether the auto protection is enabled.
        /// Possible values include: 'Disabled', 'Enabled'</param>

        /// <param name="multiVMGroupName">The multi vm group name.
        /// </param>

        /// <param name="multiVMGroupId">The multi vm group id.
        /// </param>

        /// <param name="recoveryBootDiagStorageAccount">The boot diagnostic storage account.
        /// </param>

        /// <param name="diskEncryptionInfo">The recovery disk encryption information (for two pass flows).
        /// </param>

        /// <param name="recoveryAvailabilityZone">The recovery availability zone.
        /// </param>

        /// <param name="recoveryAvailabilityType">The recovery availability type of the virtual machine.
        /// </param>

        /// <param name="agentAutoUpdateStatus">A value indicating whether the auto update is enabled.
        /// Possible values include: 'Disabled', 'Enabled'</param>

        /// <param name="automationAccountArmId">The automation account arm id.
        /// </param>

        /// <param name="automationAccountAuthenticationType">A value indicating the type authentication to use for automation Account.
        /// Possible values include: 'RunAsAccount', 'SystemAssignedIdentity'</param>
        public A2AReplicationIntentDetails(string recoveryAvailabilityType, string fabricObjectId = default(string), string primaryLocation = default(string), string recoveryLocation = default(string), string recoverySubscriptionId = default(string), System.Collections.Generic.IList<A2AProtectionIntentDiskInputDetails> vmDisks = default(System.Collections.Generic.IList<A2AProtectionIntentDiskInputDetails>), System.Collections.Generic.IList<A2AProtectionIntentManagedDiskInputDetails> vmManagedDisks = default(System.Collections.Generic.IList<A2AProtectionIntentManagedDiskInputDetails>), string recoveryResourceGroupId = default(string), ProtectionProfileCustomDetails protectionProfile = default(ProtectionProfileCustomDetails), StorageAccountCustomDetails primaryStagingStorageAccount = default(StorageAccountCustomDetails), RecoveryAvailabilitySetCustomDetails recoveryAvailabilitySet = default(RecoveryAvailabilitySetCustomDetails), RecoveryVirtualNetworkCustomDetails recoveryVirtualNetwork = default(RecoveryVirtualNetworkCustomDetails), RecoveryProximityPlacementGroupCustomDetails recoveryProximityPlacementGroup = default(RecoveryProximityPlacementGroupCustomDetails), string autoProtectionOfDataDisk = default(string), string multiVMGroupName = default(string), string multiVMGroupId = default(string), StorageAccountCustomDetails recoveryBootDiagStorageAccount = default(StorageAccountCustomDetails), DiskEncryptionInfo diskEncryptionInfo = default(DiskEncryptionInfo), string recoveryAvailabilityZone = default(string), string agentAutoUpdateStatus = default(string), string automationAccountArmId = default(string), string automationAccountAuthenticationType = default(string))

        {
            this.FabricObjectId = fabricObjectId;
            this.PrimaryLocation = primaryLocation;
            this.RecoveryLocation = recoveryLocation;
            this.RecoverySubscriptionId = recoverySubscriptionId;
            this.VMDisks = vmDisks;
            this.VMManagedDisks = vmManagedDisks;
            this.RecoveryResourceGroupId = recoveryResourceGroupId;
            this.ProtectionProfile = protectionProfile;
            this.PrimaryStagingStorageAccount = primaryStagingStorageAccount;
            this.RecoveryAvailabilitySet = recoveryAvailabilitySet;
            this.RecoveryVirtualNetwork = recoveryVirtualNetwork;
            this.RecoveryProximityPlacementGroup = recoveryProximityPlacementGroup;
            this.AutoProtectionOfDataDisk = autoProtectionOfDataDisk;
            this.MultiVMGroupName = multiVMGroupName;
            this.MultiVMGroupId = multiVMGroupId;
            this.RecoveryBootDiagStorageAccount = recoveryBootDiagStorageAccount;
            this.DiskEncryptionInfo = diskEncryptionInfo;
            this.RecoveryAvailabilityZone = recoveryAvailabilityZone;
            this.RecoveryAvailabilityType = recoveryAvailabilityType;
            this.AgentAutoUpdateStatus = agentAutoUpdateStatus;
            this.AutomationAccountArmId = automationAccountArmId;
            this.AutomationAccountAuthenticationType = automationAccountAuthenticationType;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets or sets the fabric specific object Id of the virtual machine.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "fabricObjectId")]
        public string FabricObjectId {get; set; }

        /// <summary>
        /// Gets or sets the primary location for the virtual machine.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "primaryLocation")]
        public string PrimaryLocation {get; set; }

        /// <summary>
        /// Gets or sets the recovery location for the virtual machine.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "recoveryLocation")]
        public string RecoveryLocation {get; set; }

        /// <summary>
        /// Gets or sets the recovery subscription Id of the virtual machine.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "recoverySubscriptionId")]
        public string RecoverySubscriptionId {get; set; }

        /// <summary>
        /// Gets or sets the list of vm disk details.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "vmDisks")]
        public System.Collections.Generic.IList<A2AProtectionIntentDiskInputDetails> VMDisks {get; set; }

        /// <summary>
        /// Gets or sets the list of vm managed disk details.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "vmManagedDisks")]
        public System.Collections.Generic.IList<A2AProtectionIntentManagedDiskInputDetails> VMManagedDisks {get; set; }

        /// <summary>
        /// Gets or sets the recovery resource group id.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "recoveryResourceGroupId")]
        public string RecoveryResourceGroupId {get; set; }

        /// <summary>
        /// Gets or sets the protection profile custom details.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "protectionProfile")]
        public ProtectionProfileCustomDetails ProtectionProfile {get; set; }

        /// <summary>
        /// Gets or sets the primary staging storage account details.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "primaryStagingStorageAccount")]
        public StorageAccountCustomDetails PrimaryStagingStorageAccount {get; set; }

        /// <summary>
        /// Gets or sets the recovery availability set details.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "recoveryAvailabilitySet")]
        public RecoveryAvailabilitySetCustomDetails RecoveryAvailabilitySet {get; set; }

        /// <summary>
        /// Gets or sets the recovery virtual network details.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "recoveryVirtualNetwork")]
        public RecoveryVirtualNetworkCustomDetails RecoveryVirtualNetwork {get; set; }

        /// <summary>
        /// Gets or sets the recovery proximity placement group custom details.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "recoveryProximityPlacementGroup")]
        public RecoveryProximityPlacementGroupCustomDetails RecoveryProximityPlacementGroup {get; set; }

        /// <summary>
        /// Gets or sets a value indicating whether the auto protection is enabled. Possible values include: &#39;Disabled&#39;, &#39;Enabled&#39;
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "autoProtectionOfDataDisk")]
        public string AutoProtectionOfDataDisk {get; set; }

        /// <summary>
        /// Gets or sets the multi vm group name.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "multiVmGroupName")]
        public string MultiVMGroupName {get; set; }

        /// <summary>
        /// Gets or sets the multi vm group id.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "multiVmGroupId")]
        public string MultiVMGroupId {get; set; }

        /// <summary>
        /// Gets or sets the boot diagnostic storage account.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "recoveryBootDiagStorageAccount")]
        public StorageAccountCustomDetails RecoveryBootDiagStorageAccount {get; set; }

        /// <summary>
        /// Gets or sets the recovery disk encryption information (for two pass flows).
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "diskEncryptionInfo")]
        public DiskEncryptionInfo DiskEncryptionInfo {get; set; }

        /// <summary>
        /// Gets or sets the recovery availability zone.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "recoveryAvailabilityZone")]
        public string RecoveryAvailabilityZone {get; set; }

        /// <summary>
        /// Gets or sets the recovery availability type of the virtual machine.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "recoveryAvailabilityType")]
        public string RecoveryAvailabilityType {get; set; }

        /// <summary>
        /// Gets or sets a value indicating whether the auto update is enabled. Possible values include: &#39;Disabled&#39;, &#39;Enabled&#39;
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "agentAutoUpdateStatus")]
        public string AgentAutoUpdateStatus {get; set; }

        /// <summary>
        /// Gets or sets the automation account arm id.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "automationAccountArmId")]
        public string AutomationAccountArmId {get; set; }

        /// <summary>
        /// Gets or sets a value indicating the type authentication to use for
        /// automation Account. Possible values include: &#39;RunAsAccount&#39;, &#39;SystemAssignedIdentity&#39;
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "automationAccountAuthenticationType")]
        public string AutomationAccountAuthenticationType {get; set; }
        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (this.RecoveryAvailabilityType == null)
            {
                throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.CannotBeNull, "RecoveryAvailabilityType");
            }




            if (this.VMDisks != null)
            {
                foreach (var element in this.VMDisks)
                {
                    if (element != null)
                    {
                        element.Validate();
                    }
                }
            }
            if (this.VMManagedDisks != null)
            {
                foreach (var element in this.VMManagedDisks)
                {
                    if (element != null)
                    {
                        element.Validate();
                    }
                }
            }
















        }
    }
}