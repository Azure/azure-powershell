// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.RecoveryServices.SiteRecovery.Models
{
    using System.Linq;

    /// <summary>
    /// Security profile input.
    /// </summary>
    public partial class SecurityProfileProperties
    {
        /// <summary>
        /// Initializes a new instance of the SecurityProfileProperties class.
        /// </summary>
        public SecurityProfileProperties()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the SecurityProfileProperties class.
        /// </summary>

        /// <param name="targetVMSecurityType">The target VM security type.
        /// Possible values include: &#39;None&#39;, &#39;TrustedLaunch&#39;, &#39;ConfidentialVM&#39;</param>

        /// <param name="targetVMSecureBoot">A value indicating whether secure boot to be enabled.
        /// Possible values include: &#39;Disabled&#39;, &#39;Enabled&#39;</param>

        /// <param name="targetVMTpm">A value indicating whether trusted platform module to be enabled.
        /// Possible values include: &#39;Disabled&#39;, &#39;Enabled&#39;</param>

        /// <param name="targetVMMonitoring">A value indicating whether integrity monitoring to be enabled.
        /// Possible values include: &#39;Disabled&#39;, &#39;Enabled&#39;</param>

        /// <param name="targetVMConfidentialEncryption">A value indicating whether confidential compute encryption to be enabled.
        /// Possible values include: &#39;Disabled&#39;, &#39;Enabled&#39;</param>
        public SecurityProfileProperties(string targetVMSecurityType = default(string), string targetVMSecureBoot = default(string), string targetVMTpm = default(string), string targetVMMonitoring = default(string), string targetVMConfidentialEncryption = default(string))

        {
            this.TargetVMSecurityType = targetVMSecurityType;
            this.TargetVMSecureBoot = targetVMSecureBoot;
            this.TargetVMTpm = targetVMTpm;
            this.TargetVMMonitoring = targetVMMonitoring;
            this.TargetVMConfidentialEncryption = targetVMConfidentialEncryption;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets or sets the target VM security type. Possible values include: &#39;None&#39;, &#39;TrustedLaunch&#39;, &#39;ConfidentialVM&#39;
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "targetVmSecurityType")]
        public string TargetVMSecurityType {get; set; }

        /// <summary>
        /// Gets or sets a value indicating whether secure boot to be enabled. Possible values include: &#39;Disabled&#39;, &#39;Enabled&#39;
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "targetVmSecureBoot")]
        public string TargetVMSecureBoot {get; set; }

        /// <summary>
        /// Gets or sets a value indicating whether trusted platform module to be
        /// enabled. Possible values include: &#39;Disabled&#39;, &#39;Enabled&#39;
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "targetVmTpm")]
        public string TargetVMTpm {get; set; }

        /// <summary>
        /// Gets or sets a value indicating whether integrity monitoring to be enabled. Possible values include: &#39;Disabled&#39;, &#39;Enabled&#39;
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "targetVmMonitoring")]
        public string TargetVMMonitoring {get; set; }

        /// <summary>
        /// Gets or sets a value indicating whether confidential compute encryption to
        /// be enabled. Possible values include: &#39;Disabled&#39;, &#39;Enabled&#39;
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "targetVmConfidentialEncryption")]
        public string TargetVMConfidentialEncryption {get; set; }
    }
}