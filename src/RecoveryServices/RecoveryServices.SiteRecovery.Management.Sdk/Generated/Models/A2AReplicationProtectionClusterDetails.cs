// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.RecoveryServices.SiteRecovery.Models
{
    using System.Linq;

    /// <summary>
    /// A2A provider specific settings.
    /// </summary>
    [Newtonsoft.Json.JsonObject("A2A")]
    public partial class A2AReplicationProtectionClusterDetails : ReplicationClusterProviderSpecificSettings
    {
        /// <summary>
        /// Initializes a new instance of the A2AReplicationProtectionClusterDetails class.
        /// </summary>
        public A2AReplicationProtectionClusterDetails()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the A2AReplicationProtectionClusterDetails class.
        /// </summary>

        /// <param name="multiVMGroupId">The multi vm group Id.
        /// </param>

        /// <param name="multiVMGroupName">The multi vm group name.
        /// </param>

        /// <param name="multiVMGroupCreateOption">Whether Multi VM group is auto created or specified by user.
        /// Possible values include: &#39;AutoCreated&#39;, &#39;UserSpecified&#39;</param>

        /// <param name="primaryFabricLocation">Primary fabric location.
        /// </param>

        /// <param name="recoveryFabricLocation">The recovery fabric location.
        /// </param>

        /// <param name="failoverRecoveryPointId">The recovery point Id to which the cluster was failed over.
        /// </param>

        /// <param name="clusterManagementId">The cluster management Id.
        /// </param>

        /// <param name="rpoInSeconds">The last RPO value in seconds.
        /// </param>

        /// <param name="lastRpoCalculatedTime">The time (in UTC) when the last RPO value was calculated by Protection
        /// Service.
        /// </param>

        /// <param name="initialPrimaryZone">The initial primary availability zone.
        /// </param>

        /// <param name="initialPrimaryFabricLocation">The initial primary fabric location.
        /// </param>

        /// <param name="initialRecoveryZone">The initial recovery availability zone.
        /// </param>

        /// <param name="initialRecoveryFabricLocation">The initial recovery fabric location.
        /// </param>

        /// <param name="initialPrimaryExtendedLocation">The initial primary extended location.
        /// </param>

        /// <param name="initialRecoveryExtendedLocation">The initial recovery extended location.
        /// </param>

        /// <param name="primaryAvailabilityZone">The primary availability zone.
        /// </param>

        /// <param name="recoveryAvailabilityZone">The recovery availability zone.
        /// </param>

        /// <param name="primaryExtendedLocation">The primary Extended Location.
        /// </param>

        /// <param name="recoveryExtendedLocation">The recovery Extended Location.
        /// </param>

        /// <param name="lifecycleId">An id that survives actions like switch protection which change the backing
        /// PE/CPE objects internally.The lifecycle id gets carried forward to have a
        /// link/continuity in being able to have an Id that denotes the &#34;same&#34;
        /// protected cluster even though other internal Ids/ARM Id might be changing.
        /// </param>
        public A2AReplicationProtectionClusterDetails(string multiVMGroupId = default(string), string multiVMGroupName = default(string), string multiVMGroupCreateOption = default(string), string primaryFabricLocation = default(string), string recoveryFabricLocation = default(string), string failoverRecoveryPointId = default(string), string clusterManagementId = default(string), long? rpoInSeconds = default(long?), System.DateTime? lastRpoCalculatedTime = default(System.DateTime?), string initialPrimaryZone = default(string), string initialPrimaryFabricLocation = default(string), string initialRecoveryZone = default(string), string initialRecoveryFabricLocation = default(string), ExtendedLocation initialPrimaryExtendedLocation = default(ExtendedLocation), ExtendedLocation initialRecoveryExtendedLocation = default(ExtendedLocation), string primaryAvailabilityZone = default(string), string recoveryAvailabilityZone = default(string), ExtendedLocation primaryExtendedLocation = default(ExtendedLocation), ExtendedLocation recoveryExtendedLocation = default(ExtendedLocation), string lifecycleId = default(string))

        {
            this.MultiVMGroupId = multiVMGroupId;
            this.MultiVMGroupName = multiVMGroupName;
            this.MultiVMGroupCreateOption = multiVMGroupCreateOption;
            this.PrimaryFabricLocation = primaryFabricLocation;
            this.RecoveryFabricLocation = recoveryFabricLocation;
            this.FailoverRecoveryPointId = failoverRecoveryPointId;
            this.ClusterManagementId = clusterManagementId;
            this.RpoInSeconds = rpoInSeconds;
            this.LastRpoCalculatedTime = lastRpoCalculatedTime;
            this.InitialPrimaryZone = initialPrimaryZone;
            this.InitialPrimaryFabricLocation = initialPrimaryFabricLocation;
            this.InitialRecoveryZone = initialRecoveryZone;
            this.InitialRecoveryFabricLocation = initialRecoveryFabricLocation;
            this.InitialPrimaryExtendedLocation = initialPrimaryExtendedLocation;
            this.InitialRecoveryExtendedLocation = initialRecoveryExtendedLocation;
            this.PrimaryAvailabilityZone = primaryAvailabilityZone;
            this.RecoveryAvailabilityZone = recoveryAvailabilityZone;
            this.PrimaryExtendedLocation = primaryExtendedLocation;
            this.RecoveryExtendedLocation = recoveryExtendedLocation;
            this.LifecycleId = lifecycleId;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets or sets the multi vm group Id.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "multiVmGroupId")]
        public string MultiVMGroupId {get; set; }

        /// <summary>
        /// Gets or sets the multi vm group name.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "multiVmGroupName")]
        public string MultiVMGroupName {get; set; }

        /// <summary>
        /// Gets or sets whether Multi VM group is auto created or specified by user. Possible values include: &#39;AutoCreated&#39;, &#39;UserSpecified&#39;
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "multiVmGroupCreateOption")]
        public string MultiVMGroupCreateOption {get; set; }

        /// <summary>
        /// Gets or sets primary fabric location.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "primaryFabricLocation")]
        public string PrimaryFabricLocation {get; set; }

        /// <summary>
        /// Gets or sets the recovery fabric location.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "recoveryFabricLocation")]
        public string RecoveryFabricLocation {get; set; }

        /// <summary>
        /// Gets or sets the recovery point Id to which the cluster was failed over.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "failoverRecoveryPointId")]
        public string FailoverRecoveryPointId {get; set; }

        /// <summary>
        /// Gets or sets the cluster management Id.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "clusterManagementId")]
        public string ClusterManagementId {get; set; }

        /// <summary>
        /// Gets or sets the last RPO value in seconds.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "rpoInSeconds")]
        public long? RpoInSeconds {get; set; }

        /// <summary>
        /// Gets or sets the time (in UTC) when the last RPO value was calculated by
        /// Protection Service.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "lastRpoCalculatedTime")]
        public System.DateTime? LastRpoCalculatedTime {get; set; }

        /// <summary>
        /// Gets or sets the initial primary availability zone.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "initialPrimaryZone")]
        public string InitialPrimaryZone {get; set; }

        /// <summary>
        /// Gets or sets the initial primary fabric location.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "initialPrimaryFabricLocation")]
        public string InitialPrimaryFabricLocation {get; set; }

        /// <summary>
        /// Gets or sets the initial recovery availability zone.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "initialRecoveryZone")]
        public string InitialRecoveryZone {get; set; }

        /// <summary>
        /// Gets or sets the initial recovery fabric location.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "initialRecoveryFabricLocation")]
        public string InitialRecoveryFabricLocation {get; set; }

        /// <summary>
        /// Gets or sets the initial primary extended location.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "initialPrimaryExtendedLocation")]
        public ExtendedLocation InitialPrimaryExtendedLocation {get; set; }

        /// <summary>
        /// Gets or sets the initial recovery extended location.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "initialRecoveryExtendedLocation")]
        public ExtendedLocation InitialRecoveryExtendedLocation {get; set; }

        /// <summary>
        /// Gets or sets the primary availability zone.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "primaryAvailabilityZone")]
        public string PrimaryAvailabilityZone {get; set; }

        /// <summary>
        /// Gets or sets the recovery availability zone.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "recoveryAvailabilityZone")]
        public string RecoveryAvailabilityZone {get; set; }

        /// <summary>
        /// Gets or sets the primary Extended Location.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "primaryExtendedLocation")]
        public ExtendedLocation PrimaryExtendedLocation {get; set; }

        /// <summary>
        /// Gets or sets the recovery Extended Location.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "recoveryExtendedLocation")]
        public ExtendedLocation RecoveryExtendedLocation {get; set; }

        /// <summary>
        /// Gets or sets an id that survives actions like switch protection which
        /// change the backing PE/CPE objects internally.The lifecycle id gets carried
        /// forward to have a link/continuity in being able to have an Id that denotes
        /// the &#34;same&#34; protected cluster even though other internal Ids/ARM Id might be
        /// changing.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "lifecycleId")]
        public string LifecycleId {get; set; }
        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {











            if (this.InitialPrimaryExtendedLocation != null)
            {
                this.InitialPrimaryExtendedLocation.Validate();
            }
            if (this.InitialRecoveryExtendedLocation != null)
            {
                this.InitialRecoveryExtendedLocation.Validate();
            }


            if (this.PrimaryExtendedLocation != null)
            {
                this.PrimaryExtendedLocation.Validate();
            }
            if (this.RecoveryExtendedLocation != null)
            {
                this.RecoveryExtendedLocation.Validate();
            }

        }
    }
}