// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.RecoveryServices.SiteRecovery.Models
{
    using System.Linq;

    /// <summary>
    /// Shared Disk Replication item custom data details.
    /// </summary>
    public partial class SharedDiskReplicationItemProperties
    {
        /// <summary>
        /// Initializes a new instance of the SharedDiskReplicationItemProperties class.
        /// </summary>
        public SharedDiskReplicationItemProperties()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the SharedDiskReplicationItemProperties class.
        /// </summary>

        /// <param name="protectionState">The protection state of shared disk.
        /// </param>

        /// <param name="testFailoverState">The tfo state of shared disk.
        /// </param>

        /// <param name="activeLocation">The Current active location of the PE.
        /// </param>

        /// <param name="allowedOperations">The allowed operations on the Replication protected item.
        /// </param>

        /// <param name="replicationHealth">The consolidated protection health for the VM taking any issues with SRS as
        /// well as all the replication units associated with the VM&#39;s replication
        /// group into account. This is a string representation of the ProtectionHealth
        /// enumeration.
        /// </param>

        /// <param name="healthErrors">List of health errors.
        /// </param>

        /// <param name="currentScenario">The current scenario.
        /// </param>

        /// <param name="sharedDiskProviderSpecificDetails">The Replication provider custom settings.
        /// </param>
        public SharedDiskReplicationItemProperties(string protectionState = default(string), string testFailoverState = default(string), string activeLocation = default(string), System.Collections.Generic.IList<string> allowedOperations = default(System.Collections.Generic.IList<string>), string replicationHealth = default(string), System.Collections.Generic.IList<HealthError> healthErrors = default(System.Collections.Generic.IList<HealthError>), CurrentScenarioDetails currentScenario = default(CurrentScenarioDetails), SharedDiskReplicationProviderSpecificSettings sharedDiskProviderSpecificDetails = default(SharedDiskReplicationProviderSpecificSettings))

        {
            this.ProtectionState = protectionState;
            this.TestFailoverState = testFailoverState;
            this.ActiveLocation = activeLocation;
            this.AllowedOperations = allowedOperations;
            this.ReplicationHealth = replicationHealth;
            this.HealthErrors = healthErrors;
            this.CurrentScenario = currentScenario;
            this.SharedDiskProviderSpecificDetails = sharedDiskProviderSpecificDetails;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets or sets the protection state of shared disk.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "protectionState")]
        public string ProtectionState {get; set; }

        /// <summary>
        /// Gets or sets the tfo state of shared disk.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "testFailoverState")]
        public string TestFailoverState {get; set; }

        /// <summary>
        /// Gets or sets the Current active location of the PE.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "activeLocation")]
        public string ActiveLocation {get; set; }

        /// <summary>
        /// Gets or sets the allowed operations on the Replication protected item.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "allowedOperations")]
        public System.Collections.Generic.IList<string> AllowedOperations {get; set; }

        /// <summary>
        /// Gets or sets the consolidated protection health for the VM taking any
        /// issues with SRS as well as all the replication units associated with the
        /// VM&#39;s replication group into account. This is a string representation of the
        /// ProtectionHealth enumeration.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "replicationHealth")]
        public string ReplicationHealth {get; set; }

        /// <summary>
        /// Gets or sets list of health errors.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "healthErrors")]
        public System.Collections.Generic.IList<HealthError> HealthErrors {get; set; }

        /// <summary>
        /// Gets or sets the current scenario.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "currentScenario")]
        public CurrentScenarioDetails CurrentScenario {get; set; }

        /// <summary>
        /// Gets or sets the Replication provider custom settings.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "sharedDiskProviderSpecificDetails")]
        public SharedDiskReplicationProviderSpecificSettings SharedDiskProviderSpecificDetails {get; set; }
    }
}