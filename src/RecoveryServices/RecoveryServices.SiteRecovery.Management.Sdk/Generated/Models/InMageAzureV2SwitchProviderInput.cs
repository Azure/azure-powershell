// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.RecoveryServices.SiteRecovery.Models
{
    using System.Linq;

    /// <summary>
    /// Provider specific input for InMageAzureV2 switch provider.
    /// </summary>
    [Newtonsoft.Json.JsonObject("InMageAzureV2")]
    public partial class InMageAzureV2SwitchProviderInput : SwitchProviderSpecificInput
    {
        /// <summary>
        /// Initializes a new instance of the InMageAzureV2SwitchProviderInput class.
        /// </summary>
        public InMageAzureV2SwitchProviderInput()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the InMageAzureV2SwitchProviderInput class.
        /// </summary>

        /// <param name="targetVaultId">The target vault Id.
        /// </param>

        /// <param name="targetFabricId">The target fabric Id.
        /// </param>

        /// <param name="targetApplianceId">The target appliance Id.
        /// </param>
        public InMageAzureV2SwitchProviderInput(string targetVaultId, string targetFabricId, string targetApplianceId)

        {
            this.TargetVaultId = targetVaultId;
            this.TargetFabricId = targetFabricId;
            this.TargetApplianceId = targetApplianceId;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets or sets the target vault Id.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "targetVaultID")]
        public string TargetVaultId {get; set; }

        /// <summary>
        /// Gets or sets the target fabric Id.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "targetFabricID")]
        public string TargetFabricId {get; set; }

        /// <summary>
        /// Gets or sets the target appliance Id.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "targetApplianceID")]
        public string TargetApplianceId {get; set; }
        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (this.TargetVaultId == null)
            {
                throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.CannotBeNull, "TargetVaultId");
            }
            if (this.TargetFabricId == null)
            {
                throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.CannotBeNull, "TargetFabricId");
            }
            if (this.TargetApplianceId == null)
            {
                throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.CannotBeNull, "TargetApplianceId");
            }



        }
    }
}