// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.RecoveryServices.SiteRecovery.Models
{
    using System.Linq;

    /// <summary>
    /// InMageRcmFailback disk level sync details.
    /// </summary>
    public partial class InMageRcmFailbackSyncDetails
    {
        /// <summary>
        /// Initializes a new instance of the InMageRcmFailbackSyncDetails class.
        /// </summary>
        public InMageRcmFailbackSyncDetails()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the InMageRcmFailbackSyncDetails class.
        /// </summary>

        /// <param name="progressHealth">The progress health.
        /// Possible values include: 'None', 'InProgress', 'SlowProgress',
        /// 'NoProgress', 'Queued'</param>

        /// <param name="transferredBytes">The transferred bytes from source VM to azure for the disk.
        /// </param>

        /// <param name="last15MinutesTransferredBytes">The bytes transferred in last 15 minutes from source VM to target.
        /// </param>

        /// <param name="lastDataTransferTimeUtc">The time of the last data transfer from source VM to target.
        /// </param>

        /// <param name="processedBytes">The total processed bytes. This includes bytes that are transferred from
        /// source VM to target and matched bytes.
        /// </param>

        /// <param name="startTime">The start time.
        /// </param>

        /// <param name="lastRefreshTime">The last refresh time.
        /// </param>

        /// <param name="progressPercentage">Progress in percentage. Progress percentage is calculated based on
        /// processed bytes.
        /// </param>
        public InMageRcmFailbackSyncDetails(string progressHealth = default(string), long? transferredBytes = default(long?), long? last15MinutesTransferredBytes = default(long?), string lastDataTransferTimeUtc = default(string), long? processedBytes = default(long?), string startTime = default(string), string lastRefreshTime = default(string), int? progressPercentage = default(int?))

        {
            this.ProgressHealth = progressHealth;
            this.TransferredBytes = transferredBytes;
            this.Last15MinutesTransferredBytes = last15MinutesTransferredBytes;
            this.LastDataTransferTimeUtc = lastDataTransferTimeUtc;
            this.ProcessedBytes = processedBytes;
            this.StartTime = startTime;
            this.LastRefreshTime = lastRefreshTime;
            this.ProgressPercentage = progressPercentage;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets the progress health. Possible values include: &#39;None&#39;, &#39;InProgress&#39;, &#39;SlowProgress&#39;, &#39;NoProgress&#39;, &#39;Queued&#39;
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "progressHealth")]
        public string ProgressHealth {get; private set; }

        /// <summary>
        /// Gets the transferred bytes from source VM to azure for the disk.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "transferredBytes")]
        public long? TransferredBytes {get; private set; }

        /// <summary>
        /// Gets the bytes transferred in last 15 minutes from source VM to target.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "last15MinutesTransferredBytes")]
        public long? Last15MinutesTransferredBytes {get; private set; }

        /// <summary>
        /// Gets the time of the last data transfer from source VM to target.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "lastDataTransferTimeUtc")]
        public string LastDataTransferTimeUtc {get; private set; }

        /// <summary>
        /// Gets the total processed bytes. This includes bytes that are transferred
        /// from source VM to target and matched bytes.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "processedBytes")]
        public long? ProcessedBytes {get; private set; }

        /// <summary>
        /// Gets the start time.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "startTime")]
        public string StartTime {get; private set; }

        /// <summary>
        /// Gets the last refresh time.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "lastRefreshTime")]
        public string LastRefreshTime {get; private set; }

        /// <summary>
        /// Gets progress in percentage. Progress percentage is calculated based on
        /// processed bytes.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "progressPercentage")]
        public int? ProgressPercentage {get; private set; }
    }
}