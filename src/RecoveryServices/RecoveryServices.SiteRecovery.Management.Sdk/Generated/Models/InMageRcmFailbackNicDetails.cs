// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.RecoveryServices.SiteRecovery.Models
{
    using System.Linq;

    /// <summary>
    /// InMageRcmFailback NIC details.
    /// </summary>
    public partial class InMageRcmFailbackNicDetails
    {
        /// <summary>
        /// Initializes a new instance of the InMageRcmFailbackNicDetails class.
        /// </summary>
        public InMageRcmFailbackNicDetails()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the InMageRcmFailbackNicDetails class.
        /// </summary>

        /// <param name="macAddress">The mac address.
        /// </param>

        /// <param name="networkName">The network name.
        /// </param>

        /// <param name="adapterType">The adapter type.
        /// </param>

        /// <param name="sourceIPAddress">The IP address.
        /// </param>
        public InMageRcmFailbackNicDetails(string macAddress = default(string), string networkName = default(string), string adapterType = default(string), string sourceIPAddress = default(string))

        {
            this.MacAddress = macAddress;
            this.NetworkName = networkName;
            this.AdapterType = adapterType;
            this.SourceIPAddress = sourceIPAddress;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets the mac address.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "macAddress")]
        public string MacAddress {get; private set; }

        /// <summary>
        /// Gets the network name.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "networkName")]
        public string NetworkName {get; private set; }

        /// <summary>
        /// Gets the adapter type.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "adapterType")]
        public string AdapterType {get; private set; }

        /// <summary>
        /// Gets the IP address.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "sourceIpAddress")]
        public string SourceIPAddress {get; private set; }
    }
}