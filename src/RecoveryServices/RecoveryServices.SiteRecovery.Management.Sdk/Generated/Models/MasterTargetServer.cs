// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.RecoveryServices.SiteRecovery.Models
{
    using System.Linq;

    /// <summary>
    /// Details of a Master Target Server.
    /// </summary>
    public partial class MasterTargetServer
    {
        /// <summary>
        /// Initializes a new instance of the MasterTargetServer class.
        /// </summary>
        public MasterTargetServer()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the MasterTargetServer class.
        /// </summary>

        /// <param name="id">The server Id.
        /// </param>

        /// <param name="ipAddress">The IP address of the server.
        /// </param>

        /// <param name="name">The server name.
        /// </param>

        /// <param name="osType">The OS type of the server.
        /// </param>

        /// <param name="agentVersion">The version of the scout component on the server.
        /// </param>

        /// <param name="lastHeartbeat">The last heartbeat received from the server.
        /// </param>

        /// <param name="versionStatus">Version status.
        /// </param>

        /// <param name="retentionVolumes">The retention volumes of Master target Server.
        /// </param>

        /// <param name="dataStores">The list of data stores in the fabric.
        /// </param>

        /// <param name="validationErrors">Validation errors.
        /// </param>

        /// <param name="healthErrors">Health errors.
        /// </param>

        /// <param name="diskCount">Disk count of the master target.
        /// </param>

        /// <param name="osVersion">OS Version of the master target.
        /// </param>

        /// <param name="agentExpiryDate">Agent expiry date.
        /// </param>

        /// <param name="marsAgentVersion">MARS agent version.
        /// </param>

        /// <param name="marsAgentExpiryDate">MARS agent expiry date.
        /// </param>

        /// <param name="agentVersionDetails">Agent version details.
        /// </param>

        /// <param name="marsAgentVersionDetails">Mars agent version details.
        /// </param>
        public MasterTargetServer(string id = default(string), string ipAddress = default(string), string name = default(string), string osType = default(string), string agentVersion = default(string), System.DateTime? lastHeartbeat = default(System.DateTime?), string versionStatus = default(string), System.Collections.Generic.IList<RetentionVolume> retentionVolumes = default(System.Collections.Generic.IList<RetentionVolume>), System.Collections.Generic.IList<DataStore> dataStores = default(System.Collections.Generic.IList<DataStore>), System.Collections.Generic.IList<HealthError> validationErrors = default(System.Collections.Generic.IList<HealthError>), System.Collections.Generic.IList<HealthError> healthErrors = default(System.Collections.Generic.IList<HealthError>), int? diskCount = default(int?), string osVersion = default(string), System.DateTime? agentExpiryDate = default(System.DateTime?), string marsAgentVersion = default(string), System.DateTime? marsAgentExpiryDate = default(System.DateTime?), VersionDetails agentVersionDetails = default(VersionDetails), VersionDetails marsAgentVersionDetails = default(VersionDetails))

        {
            this.Id = id;
            this.IPAddress = ipAddress;
            this.Name = name;
            this.OSType = osType;
            this.AgentVersion = agentVersion;
            this.LastHeartbeat = lastHeartbeat;
            this.VersionStatus = versionStatus;
            this.RetentionVolumes = retentionVolumes;
            this.DataStores = dataStores;
            this.ValidationErrors = validationErrors;
            this.HealthErrors = healthErrors;
            this.DiskCount = diskCount;
            this.OSVersion = osVersion;
            this.AgentExpiryDate = agentExpiryDate;
            this.MarsAgentVersion = marsAgentVersion;
            this.MarsAgentExpiryDate = marsAgentExpiryDate;
            this.AgentVersionDetails = agentVersionDetails;
            this.MarsAgentVersionDetails = marsAgentVersionDetails;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets or sets the server Id.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "id")]
        public string Id {get; set; }

        /// <summary>
        /// Gets or sets the IP address of the server.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "ipAddress")]
        public string IPAddress {get; set; }

        /// <summary>
        /// Gets or sets the server name.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "name")]
        public string Name {get; set; }

        /// <summary>
        /// Gets or sets the OS type of the server.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "osType")]
        public string OSType {get; set; }

        /// <summary>
        /// Gets or sets the version of the scout component on the server.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "agentVersion")]
        public string AgentVersion {get; set; }

        /// <summary>
        /// Gets or sets the last heartbeat received from the server.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "lastHeartbeat")]
        public System.DateTime? LastHeartbeat {get; set; }

        /// <summary>
        /// Gets or sets version status.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "versionStatus")]
        public string VersionStatus {get; set; }

        /// <summary>
        /// Gets or sets the retention volumes of Master target Server.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "retentionVolumes")]
        public System.Collections.Generic.IList<RetentionVolume> RetentionVolumes {get; set; }

        /// <summary>
        /// Gets or sets the list of data stores in the fabric.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "dataStores")]
        public System.Collections.Generic.IList<DataStore> DataStores {get; set; }

        /// <summary>
        /// Gets or sets validation errors.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "validationErrors")]
        public System.Collections.Generic.IList<HealthError> ValidationErrors {get; set; }

        /// <summary>
        /// Gets or sets health errors.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "healthErrors")]
        public System.Collections.Generic.IList<HealthError> HealthErrors {get; set; }

        /// <summary>
        /// Gets or sets disk count of the master target.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "diskCount")]
        public int? DiskCount {get; set; }

        /// <summary>
        /// Gets or sets oS Version of the master target.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "osVersion")]
        public string OSVersion {get; set; }

        /// <summary>
        /// Gets or sets agent expiry date.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "agentExpiryDate")]
        public System.DateTime? AgentExpiryDate {get; set; }

        /// <summary>
        /// Gets or sets mARS agent version.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "marsAgentVersion")]
        public string MarsAgentVersion {get; set; }

        /// <summary>
        /// Gets or sets mARS agent expiry date.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "marsAgentExpiryDate")]
        public System.DateTime? MarsAgentExpiryDate {get; set; }

        /// <summary>
        /// Gets or sets agent version details.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "agentVersionDetails")]
        public VersionDetails AgentVersionDetails {get; set; }

        /// <summary>
        /// Gets or sets mars agent version details.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "marsAgentVersionDetails")]
        public VersionDetails MarsAgentVersionDetails {get; set; }
    }
}