// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.RecoveryServices.SiteRecovery.Models
{
    using System.Linq;

    /// <summary>
    /// InMageRcm un-protected disk details.
    /// </summary>
    public partial class InMageRcmUnProtectedDiskDetails
    {
        /// <summary>
        /// Initializes a new instance of the InMageRcmUnProtectedDiskDetails class.
        /// </summary>
        public InMageRcmUnProtectedDiskDetails()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the InMageRcmUnProtectedDiskDetails class.
        /// </summary>

        /// <param name="diskId">The disk Id.
        /// </param>

        /// <param name="diskName">The disk name.
        /// </param>

        /// <param name="capacityInBytes">The disk capacity in bytes.
        /// </param>
        public InMageRcmUnProtectedDiskDetails(string diskId = default(string), string diskName = default(string), long? capacityInBytes = default(long?))

        {
            this.DiskId = diskId;
            this.DiskName = diskName;
            this.CapacityInBytes = capacityInBytes;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets the disk Id.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "diskId")]
        public string DiskId {get; private set; }

        /// <summary>
        /// Gets the disk name.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "diskName")]
        public string DiskName {get; private set; }

        /// <summary>
        /// Gets the disk capacity in bytes.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "capacityInBytes")]
        public long? CapacityInBytes {get; private set; }
    }
}