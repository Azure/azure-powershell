// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.RecoveryServices.SiteRecovery.Models
{
    using System.Linq;

    /// <summary>
    /// VMwareCbt protected disk details.
    /// </summary>
    public partial class VMwareCbtProtectedDiskDetails
    {
        /// <summary>
        /// Initializes a new instance of the VMwareCbtProtectedDiskDetails class.
        /// </summary>
        public VMwareCbtProtectedDiskDetails()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the VMwareCbtProtectedDiskDetails class.
        /// </summary>

        /// <param name="diskId">The disk id.
        /// </param>

        /// <param name="diskName">The disk name.
        /// </param>

        /// <param name="diskType">The disk type.
        /// Possible values include: 'Standard_LRS', 'Premium_LRS', 'StandardSSD_LRS'</param>

        /// <param name="diskPath">The disk path.
        /// </param>

        /// <param name="isOSDisk">A value indicating whether the disk is the OS disk.
        /// </param>

        /// <param name="capacityInBytes">The disk capacity in bytes.
        /// </param>

        /// <param name="logStorageAccountId">The log storage account ARM Id.
        /// </param>

        /// <param name="logStorageAccountSasSecretName">The key vault secret name of the log storage account.
        /// </param>

        /// <param name="diskEncryptionSetId">The DiskEncryptionSet ARM Id.
        /// </param>

        /// <param name="seedManagedDiskId">The ARM Id of the seed managed disk.
        /// </param>

        /// <param name="seedBlobUri">The uri of the seed blob.
        /// </param>

        /// <param name="targetManagedDiskId">The ARM Id of the target managed disk.
        /// </param>

        /// <param name="targetBlobUri">The uri of the target blob.
        /// </param>

        /// <param name="targetDiskName">The name for the target managed disk.
        /// </param>
        public VMwareCbtProtectedDiskDetails(string diskId = default(string), string diskName = default(string), string diskType = default(string), string diskPath = default(string), string isOSDisk = default(string), long? capacityInBytes = default(long?), string logStorageAccountId = default(string), string logStorageAccountSasSecretName = default(string), string diskEncryptionSetId = default(string), string seedManagedDiskId = default(string), string seedBlobUri = default(string), string targetManagedDiskId = default(string), string targetBlobUri = default(string), string targetDiskName = default(string))

        {
            this.DiskId = diskId;
            this.DiskName = diskName;
            this.DiskType = diskType;
            this.DiskPath = diskPath;
            this.IsOSDisk = isOSDisk;
            this.CapacityInBytes = capacityInBytes;
            this.LogStorageAccountId = logStorageAccountId;
            this.LogStorageAccountSasSecretName = logStorageAccountSasSecretName;
            this.DiskEncryptionSetId = diskEncryptionSetId;
            this.SeedManagedDiskId = seedManagedDiskId;
            this.SeedBlobUri = seedBlobUri;
            this.TargetManagedDiskId = targetManagedDiskId;
            this.TargetBlobUri = targetBlobUri;
            this.TargetDiskName = targetDiskName;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets the disk id.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "diskId")]
        public string DiskId {get; private set; }

        /// <summary>
        /// Gets the disk name.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "diskName")]
        public string DiskName {get; private set; }

        /// <summary>
        /// Gets or sets the disk type. Possible values include: &#39;Standard_LRS&#39;, &#39;Premium_LRS&#39;, &#39;StandardSSD_LRS&#39;
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "diskType")]
        public string DiskType {get; set; }

        /// <summary>
        /// Gets the disk path.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "diskPath")]
        public string DiskPath {get; private set; }

        /// <summary>
        /// Gets a value indicating whether the disk is the OS disk.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "isOSDisk")]
        public string IsOSDisk {get; private set; }

        /// <summary>
        /// Gets the disk capacity in bytes.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "capacityInBytes")]
        public long? CapacityInBytes {get; private set; }

        /// <summary>
        /// Gets the log storage account ARM Id.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "logStorageAccountId")]
        public string LogStorageAccountId {get; private set; }

        /// <summary>
        /// Gets the key vault secret name of the log storage account.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "logStorageAccountSasSecretName")]
        public string LogStorageAccountSasSecretName {get; private set; }

        /// <summary>
        /// Gets the DiskEncryptionSet ARM Id.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "diskEncryptionSetId")]
        public string DiskEncryptionSetId {get; private set; }

        /// <summary>
        /// Gets the ARM Id of the seed managed disk.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "seedManagedDiskId")]
        public string SeedManagedDiskId {get; private set; }

        /// <summary>
        /// Gets the uri of the seed blob.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "seedBlobUri")]
        public string SeedBlobUri {get; private set; }

        /// <summary>
        /// Gets the ARM Id of the target managed disk.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "targetManagedDiskId")]
        public string TargetManagedDiskId {get; private set; }

        /// <summary>
        /// Gets the uri of the target blob.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "targetBlobUri")]
        public string TargetBlobUri {get; private set; }

        /// <summary>
        /// Gets or sets the name for the target managed disk.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "targetDiskName")]
        public string TargetDiskName {get; set; }
    }
}