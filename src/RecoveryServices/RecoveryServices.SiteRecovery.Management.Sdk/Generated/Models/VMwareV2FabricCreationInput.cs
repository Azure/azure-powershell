// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.RecoveryServices.SiteRecovery.Models
{
    using System.Linq;

    /// <summary>
    /// VMwareV2 fabric provider specific settings.
    /// </summary>
    [Newtonsoft.Json.JsonObject("VMwareV2")]
    public partial class VMwareV2FabricCreationInput : FabricSpecificCreationInput
    {
        /// <summary>
        /// Initializes a new instance of the VMwareV2FabricCreationInput class.
        /// </summary>
        public VMwareV2FabricCreationInput()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the VMwareV2FabricCreationInput class.
        /// </summary>

        /// <param name="vmwareSiteId">The ARM Id of the VMware site.
        /// </param>

        /// <param name="physicalSiteId">The ARM Id of the physical site.
        /// </param>

        /// <param name="migrationSolutionId">The ARM Id of the migration solution.
        /// </param>
        public VMwareV2FabricCreationInput(string migrationSolutionId, string vmwareSiteId = default(string), string physicalSiteId = default(string))

        {
            this.VmwareSiteId = vmwareSiteId;
            this.PhysicalSiteId = physicalSiteId;
            this.MigrationSolutionId = migrationSolutionId;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets or sets the ARM Id of the VMware site.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "vmwareSiteId")]
        public string VmwareSiteId {get; set; }

        /// <summary>
        /// Gets or sets the ARM Id of the physical site.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "physicalSiteId")]
        public string PhysicalSiteId {get; set; }

        /// <summary>
        /// Gets or sets the ARM Id of the migration solution.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "migrationSolutionId")]
        public string MigrationSolutionId {get; set; }
        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (this.MigrationSolutionId == null)
            {
                throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.CannotBeNull, "MigrationSolutionId");
            }



        }
    }
}