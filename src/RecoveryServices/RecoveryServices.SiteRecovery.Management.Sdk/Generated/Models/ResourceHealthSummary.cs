// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.RecoveryServices.SiteRecovery.Models
{
    using System.Linq;

    /// <summary>
    /// Base class to define the health summary of the resources contained under an
    /// Arm resource.
    /// </summary>
    public partial class ResourceHealthSummary
    {
        /// <summary>
        /// Initializes a new instance of the ResourceHealthSummary class.
        /// </summary>
        public ResourceHealthSummary()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the ResourceHealthSummary class.
        /// </summary>

        /// <param name="resourceCount">The count of total resources under the container.
        /// </param>

        /// <param name="issues">The list of summary of health errors across the resources under the
        /// container.
        /// </param>

        /// <param name="categorizedResourceCounts">The categorized resource counts.
        /// </param>
        public ResourceHealthSummary(int? resourceCount = default(int?), System.Collections.Generic.IList<HealthErrorSummary> issues = default(System.Collections.Generic.IList<HealthErrorSummary>), System.Collections.Generic.IDictionary<string, int?> categorizedResourceCounts = default(System.Collections.Generic.IDictionary<string, int?>))

        {
            this.ResourceCount = resourceCount;
            this.Issues = issues;
            this.CategorizedResourceCounts = categorizedResourceCounts;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets or sets the count of total resources under the container.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "resourceCount")]
        public int? ResourceCount {get; set; }

        /// <summary>
        /// Gets or sets the list of summary of health errors across the resources
        /// under the container.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "issues")]
        public System.Collections.Generic.IList<HealthErrorSummary> Issues {get; set; }

        /// <summary>
        /// Gets or sets the categorized resource counts.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "categorizedResourceCounts")]
        public System.Collections.Generic.IDictionary<string, int?> CategorizedResourceCounts {get; set; }
    }
}