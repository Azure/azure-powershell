// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.RecoveryServices.SiteRecovery.Models
{
    using System.Linq;

    /// <summary>
    /// InMageRcm discovered protected VM details.
    /// </summary>
    public partial class InMageRcmDiscoveredProtectedVmDetails
    {
        /// <summary>
        /// Initializes a new instance of the InMageRcmDiscoveredProtectedVmDetails class.
        /// </summary>
        public InMageRcmDiscoveredProtectedVmDetails()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the InMageRcmDiscoveredProtectedVmDetails class.
        /// </summary>

        /// <param name="vCenterId">The VCenter Id.
        /// </param>

        /// <param name="vCenterFqdn">The VCenter fqdn.
        /// </param>

        /// <param name="datastores">The list of datastores.
        /// </param>

        /// <param name="ipAddresses">The list of IP addresses.
        /// </param>

        /// <param name="vmwareToolsStatus">The VMware tools status.
        /// </param>

        /// <param name="powerStatus">The VM power status.
        /// </param>

        /// <param name="vmFqdn">The VM fqdn.
        /// </param>

        /// <param name="osName">The VM&#39;s OS name.
        /// </param>

        /// <param name="createdTimestamp">The SDS created timestamp.
        /// </param>

        /// <param name="updatedTimestamp">The SDS updated timestamp.
        /// </param>

        /// <param name="isDeleted">A value indicating whether the VM is deleted.
        /// </param>

        /// <param name="lastDiscoveryTimeInUtc">The last time when SDS information discovered in SRS.
        /// </param>
        public InMageRcmDiscoveredProtectedVmDetails(string vCenterId = default(string), string vCenterFqdn = default(string), System.Collections.Generic.IList<string> datastores = default(System.Collections.Generic.IList<string>), System.Collections.Generic.IList<string> ipAddresses = default(System.Collections.Generic.IList<string>), string vmwareToolsStatus = default(string), string powerStatus = default(string), string vmFqdn = default(string), string osName = default(string), System.DateTime? createdTimestamp = default(System.DateTime?), System.DateTime? updatedTimestamp = default(System.DateTime?), bool? isDeleted = default(bool?), System.DateTime? lastDiscoveryTimeInUtc = default(System.DateTime?))

        {
            this.VCenterId = vCenterId;
            this.VCenterFqdn = vCenterFqdn;
            this.Datastores = datastores;
            this.IPAddresses = ipAddresses;
            this.VmwareToolsStatus = vmwareToolsStatus;
            this.PowerStatus = powerStatus;
            this.VMFqdn = vmFqdn;
            this.OSName = osName;
            this.CreatedTimestamp = createdTimestamp;
            this.UpdatedTimestamp = updatedTimestamp;
            this.IsDeleted = isDeleted;
            this.LastDiscoveryTimeInUtc = lastDiscoveryTimeInUtc;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets the VCenter Id.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "vCenterId")]
        public string VCenterId {get; private set; }

        /// <summary>
        /// Gets the VCenter fqdn.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "vCenterFqdn")]
        public string VCenterFqdn {get; private set; }

        /// <summary>
        /// Gets the list of datastores.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "datastores")]
        public System.Collections.Generic.IList<string> Datastores {get; private set; }

        /// <summary>
        /// Gets the list of IP addresses.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "ipAddresses")]
        public System.Collections.Generic.IList<string> IPAddresses {get; private set; }

        /// <summary>
        /// Gets the VMware tools status.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "vmwareToolsStatus")]
        public string VmwareToolsStatus {get; private set; }

        /// <summary>
        /// Gets the VM power status.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "powerStatus")]
        public string PowerStatus {get; private set; }

        /// <summary>
        /// Gets the VM fqdn.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "vmFqdn")]
        public string VMFqdn {get; private set; }

        /// <summary>
        /// Gets the VM&#39;s OS name.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "osName")]
        public string OSName {get; private set; }

        /// <summary>
        /// Gets the SDS created timestamp.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "createdTimestamp")]
        public System.DateTime? CreatedTimestamp {get; private set; }

        /// <summary>
        /// Gets the SDS updated timestamp.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "updatedTimestamp")]
        public System.DateTime? UpdatedTimestamp {get; private set; }

        /// <summary>
        /// Gets a value indicating whether the VM is deleted.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "isDeleted")]
        public bool? IsDeleted {get; private set; }

        /// <summary>
        /// Gets the last time when SDS information discovered in SRS.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "lastDiscoveryTimeInUtc")]
        public System.DateTime? LastDiscoveryTimeInUtc {get; private set; }
    }
}