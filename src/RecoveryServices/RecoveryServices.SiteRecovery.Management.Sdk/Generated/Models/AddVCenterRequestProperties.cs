// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.RecoveryServices.SiteRecovery.Models
{
    using System.Linq;

    /// <summary>
    /// The properties of an add vCenter request.
    /// </summary>
    public partial class AddVCenterRequestProperties
    {
        /// <summary>
        /// Initializes a new instance of the AddVCenterRequestProperties class.
        /// </summary>
        public AddVCenterRequestProperties()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the AddVCenterRequestProperties class.
        /// </summary>

        /// <param name="friendlyName">The friendly name of the vCenter.
        /// </param>

        /// <param name="ipAddress">The IP address of the vCenter to be discovered.
        /// </param>

        /// <param name="processServerId">The process server Id from where the discovery is orchestrated.
        /// </param>

        /// <param name="port">The port number for discovery.
        /// </param>

        /// <param name="runAsAccountId">The account Id which has privileges to discover the vCenter.
        /// </param>
        public AddVCenterRequestProperties(string friendlyName = default(string), string ipAddress = default(string), string processServerId = default(string), string port = default(string), string runAsAccountId = default(string))

        {
            this.FriendlyName = friendlyName;
            this.IPAddress = ipAddress;
            this.ProcessServerId = processServerId;
            this.Port = port;
            this.RunAsAccountId = runAsAccountId;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets or sets the friendly name of the vCenter.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "friendlyName")]
        public string FriendlyName {get; set; }

        /// <summary>
        /// Gets or sets the IP address of the vCenter to be discovered.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "ipAddress")]
        public string IPAddress {get; set; }

        /// <summary>
        /// Gets or sets the process server Id from where the discovery is
        /// orchestrated.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "processServerId")]
        public string ProcessServerId {get; set; }

        /// <summary>
        /// Gets or sets the port number for discovery.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "port")]
        public string Port {get; set; }

        /// <summary>
        /// Gets or sets the account Id which has privileges to discover the vCenter.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "runAsAccountId")]
        public string RunAsAccountId {get; set; }
    }
}