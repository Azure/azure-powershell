// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.RecoveryServices.SiteRecovery.Models
{
    using System.Linq;

    /// <summary>
    /// InMageRcmFailback specific provider input.
    /// </summary>
    [Newtonsoft.Json.JsonObject("InMageRcmFailback")]
    public partial class InMageRcmFailbackReprotectInput : ReverseReplicationProviderSpecificInput
    {
        /// <summary>
        /// Initializes a new instance of the InMageRcmFailbackReprotectInput class.
        /// </summary>
        public InMageRcmFailbackReprotectInput()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the InMageRcmFailbackReprotectInput class.
        /// </summary>

        /// <param name="processServerId">The process server Id.
        /// </param>

        /// <param name="runAsAccountId">The run as account Id.
        /// </param>

        /// <param name="policyId">The Policy Id.
        /// </param>
        public InMageRcmFailbackReprotectInput(string processServerId, string policyId, string runAsAccountId = default(string))

        {
            this.ProcessServerId = processServerId;
            this.RunAsAccountId = runAsAccountId;
            this.PolicyId = policyId;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets or sets the process server Id.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "processServerId")]
        public string ProcessServerId {get; set; }

        /// <summary>
        /// Gets or sets the run as account Id.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "runAsAccountId")]
        public string RunAsAccountId {get; set; }

        /// <summary>
        /// Gets or sets the Policy Id.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "policyId")]
        public string PolicyId {get; set; }
        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (this.ProcessServerId == null)
            {
                throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.CannotBeNull, "ProcessServerId");
            }
            if (this.PolicyId == null)
            {
                throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.CannotBeNull, "PolicyId");
            }



        }
    }
}