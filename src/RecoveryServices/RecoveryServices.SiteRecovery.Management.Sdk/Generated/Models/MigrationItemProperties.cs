// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.RecoveryServices.SiteRecovery.Models
{
    using System.Linq;

    /// <summary>
    /// Migration item properties.
    /// </summary>
    public partial class MigrationItemProperties
    {
        /// <summary>
        /// Initializes a new instance of the MigrationItemProperties class.
        /// </summary>
        public MigrationItemProperties()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the MigrationItemProperties class.
        /// </summary>

        /// <param name="machineName">The on-premise virtual machine name.
        /// </param>

        /// <param name="policyId">The ARM Id of policy governing this item.
        /// </param>

        /// <param name="policyFriendlyName">The name of policy governing this item.
        /// </param>

        /// <param name="recoveryServicesProviderId">The recovery services provider ARM Id.
        /// </param>

        /// <param name="replicationStatus">The replication status.
        /// </param>

        /// <param name="migrationState">The migration status.
        /// Possible values include: 'None', 'EnableMigrationInProgress',
        /// 'EnableMigrationFailed', 'DisableMigrationInProgress',
        /// 'DisableMigrationFailed', 'InitialSeedingInProgress',
        /// 'InitialSeedingFailed', 'Replicating', 'MigrationInProgress',
        /// 'MigrationSucceeded', 'MigrationFailed', 'ResumeInProgress',
        /// 'ResumeInitiated', 'SuspendingProtection', 'ProtectionSuspended',
        /// 'MigrationCompletedWithInformation', 'MigrationPartiallySucceeded'</param>

        /// <param name="migrationStateDescription">The migration state description.
        /// </param>

        /// <param name="lastTestMigrationTime">The last test migration time.
        /// </param>

        /// <param name="lastTestMigrationStatus">The status of the last test migration.
        /// </param>

        /// <param name="lastMigrationTime">The last migration time.
        /// </param>

        /// <param name="lastMigrationStatus">The status of the last migration.
        /// </param>

        /// <param name="testMigrateState">The test migrate state.
        /// Possible values include: 'None', 'TestMigrationInProgress',
        /// 'TestMigrationSucceeded', 'TestMigrationFailed',
        /// 'TestMigrationCleanupInProgress', 'TestMigrationCompletedWithInformation',
        /// 'TestMigrationPartiallySucceeded'</param>

        /// <param name="testMigrateStateDescription">The test migrate state description.
        /// </param>

        /// <param name="health">The consolidated health.
        /// Possible values include: 'None', 'Normal', 'Warning', 'Critical'</param>

        /// <param name="healthErrors">The list of health errors.
        /// </param>

        /// <param name="allowedOperations">The allowed operations on the migration item based on the current migration
        /// state of the item.
        /// </param>

        /// <param name="currentJob">The current job details.
        /// </param>

        /// <param name="criticalJobHistory">The critical past job details.
        /// </param>

        /// <param name="eventCorrelationId">The correlation Id for events associated with this migration item.
        /// </param>

        /// <param name="providerSpecificDetails">The migration provider custom settings.
        /// </param>
        public MigrationItemProperties(string machineName = default(string), string policyId = default(string), string policyFriendlyName = default(string), string recoveryServicesProviderId = default(string), string replicationStatus = default(string), string migrationState = default(string), string migrationStateDescription = default(string), System.DateTime? lastTestMigrationTime = default(System.DateTime?), string lastTestMigrationStatus = default(string), System.DateTime? lastMigrationTime = default(System.DateTime?), string lastMigrationStatus = default(string), string testMigrateState = default(string), string testMigrateStateDescription = default(string), string health = default(string), System.Collections.Generic.IList<HealthError> healthErrors = default(System.Collections.Generic.IList<HealthError>), System.Collections.Generic.IList<string> allowedOperations = default(System.Collections.Generic.IList<string>), CurrentJobDetails currentJob = default(CurrentJobDetails), System.Collections.Generic.IList<CriticalJobHistoryDetails> criticalJobHistory = default(System.Collections.Generic.IList<CriticalJobHistoryDetails>), string eventCorrelationId = default(string), MigrationProviderSpecificSettings providerSpecificDetails = default(MigrationProviderSpecificSettings))

        {
            this.MachineName = machineName;
            this.PolicyId = policyId;
            this.PolicyFriendlyName = policyFriendlyName;
            this.RecoveryServicesProviderId = recoveryServicesProviderId;
            this.ReplicationStatus = replicationStatus;
            this.MigrationState = migrationState;
            this.MigrationStateDescription = migrationStateDescription;
            this.LastTestMigrationTime = lastTestMigrationTime;
            this.LastTestMigrationStatus = lastTestMigrationStatus;
            this.LastMigrationTime = lastMigrationTime;
            this.LastMigrationStatus = lastMigrationStatus;
            this.TestMigrateState = testMigrateState;
            this.TestMigrateStateDescription = testMigrateStateDescription;
            this.Health = health;
            this.HealthErrors = healthErrors;
            this.AllowedOperations = allowedOperations;
            this.CurrentJob = currentJob;
            this.CriticalJobHistory = criticalJobHistory;
            this.EventCorrelationId = eventCorrelationId;
            this.ProviderSpecificDetails = providerSpecificDetails;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets the on-premise virtual machine name.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "machineName")]
        public string MachineName {get; private set; }

        /// <summary>
        /// Gets the ARM Id of policy governing this item.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "policyId")]
        public string PolicyId {get; private set; }

        /// <summary>
        /// Gets the name of policy governing this item.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "policyFriendlyName")]
        public string PolicyFriendlyName {get; private set; }

        /// <summary>
        /// Gets the recovery services provider ARM Id.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "recoveryServicesProviderId")]
        public string RecoveryServicesProviderId {get; private set; }

        /// <summary>
        /// Gets the replication status.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "replicationStatus")]
        public string ReplicationStatus {get; private set; }

        /// <summary>
        /// Gets the migration status. Possible values include: &#39;None&#39;, &#39;EnableMigrationInProgress&#39;, &#39;EnableMigrationFailed&#39;, &#39;DisableMigrationInProgress&#39;, &#39;DisableMigrationFailed&#39;, &#39;InitialSeedingInProgress&#39;, &#39;InitialSeedingFailed&#39;, &#39;Replicating&#39;, &#39;MigrationInProgress&#39;, &#39;MigrationSucceeded&#39;, &#39;MigrationFailed&#39;, &#39;ResumeInProgress&#39;, &#39;ResumeInitiated&#39;, &#39;SuspendingProtection&#39;, &#39;ProtectionSuspended&#39;, &#39;MigrationCompletedWithInformation&#39;, &#39;MigrationPartiallySucceeded&#39;
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "migrationState")]
        public string MigrationState {get; private set; }

        /// <summary>
        /// Gets the migration state description.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "migrationStateDescription")]
        public string MigrationStateDescription {get; private set; }

        /// <summary>
        /// Gets the last test migration time.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "lastTestMigrationTime")]
        public System.DateTime? LastTestMigrationTime {get; private set; }

        /// <summary>
        /// Gets the status of the last test migration.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "lastTestMigrationStatus")]
        public string LastTestMigrationStatus {get; private set; }

        /// <summary>
        /// Gets the last migration time.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "lastMigrationTime")]
        public System.DateTime? LastMigrationTime {get; private set; }

        /// <summary>
        /// Gets the status of the last migration.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "lastMigrationStatus")]
        public string LastMigrationStatus {get; private set; }

        /// <summary>
        /// Gets the test migrate state. Possible values include: &#39;None&#39;, &#39;TestMigrationInProgress&#39;, &#39;TestMigrationSucceeded&#39;, &#39;TestMigrationFailed&#39;, &#39;TestMigrationCleanupInProgress&#39;, &#39;TestMigrationCompletedWithInformation&#39;, &#39;TestMigrationPartiallySucceeded&#39;
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "testMigrateState")]
        public string TestMigrateState {get; private set; }

        /// <summary>
        /// Gets the test migrate state description.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "testMigrateStateDescription")]
        public string TestMigrateStateDescription {get; private set; }

        /// <summary>
        /// Gets the consolidated health. Possible values include: &#39;None&#39;, &#39;Normal&#39;, &#39;Warning&#39;, &#39;Critical&#39;
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "health")]
        public string Health {get; private set; }

        /// <summary>
        /// Gets the list of health errors.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "healthErrors")]
        public System.Collections.Generic.IList<HealthError> HealthErrors {get; private set; }

        /// <summary>
        /// Gets the allowed operations on the migration item based on the current
        /// migration state of the item.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "allowedOperations")]
        public System.Collections.Generic.IList<string> AllowedOperations {get; private set; }

        /// <summary>
        /// Gets the current job details.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "currentJob")]
        public CurrentJobDetails CurrentJob {get; private set; }

        /// <summary>
        /// Gets the critical past job details.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "criticalJobHistory")]
        public System.Collections.Generic.IList<CriticalJobHistoryDetails> CriticalJobHistory {get; private set; }

        /// <summary>
        /// Gets the correlation Id for events associated with this migration item.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "eventCorrelationId")]
        public string EventCorrelationId {get; private set; }

        /// <summary>
        /// Gets or sets the migration provider custom settings.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "providerSpecificDetails")]
        public MigrationProviderSpecificSettings ProviderSpecificDetails {get; set; }
    }
}