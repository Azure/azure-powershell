// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.RecoveryServices.SiteRecovery.Models
{
    using System.Linq;

    /// <summary>
    /// Supported operating system details.
    /// </summary>
    public partial class SupportedOSDetails
    {
        /// <summary>
        /// Initializes a new instance of the SupportedOSDetails class.
        /// </summary>
        public SupportedOSDetails()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the SupportedOSDetails class.
        /// </summary>

        /// <param name="osName">The name.
        /// </param>

        /// <param name="osType">The type.
        /// </param>

        /// <param name="osVersions">The list of version for operating system.
        /// </param>
        public SupportedOSDetails(string osName = default(string), string osType = default(string), System.Collections.Generic.IList<OSVersionWrapper> osVersions = default(System.Collections.Generic.IList<OSVersionWrapper>))

        {
            this.OSName = osName;
            this.OSType = osType;
            this.OSVersions = osVersions;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets or sets the name.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "osName")]
        public string OSName {get; set; }

        /// <summary>
        /// Gets or sets the type.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "osType")]
        public string OSType {get; set; }

        /// <summary>
        /// Gets or sets the list of version for operating system.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "osVersions")]
        public System.Collections.Generic.IList<OSVersionWrapper> OSVersions {get; set; }
    }
}