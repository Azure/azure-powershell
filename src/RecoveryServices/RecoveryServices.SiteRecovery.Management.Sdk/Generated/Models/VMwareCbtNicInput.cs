// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.RecoveryServices.SiteRecovery.Models
{
    using System.Linq;

    /// <summary>
    /// VMwareCbt NIC input.
    /// </summary>
    public partial class VMwareCbtNicInput
    {
        /// <summary>
        /// Initializes a new instance of the VMwareCbtNicInput class.
        /// </summary>
        public VMwareCbtNicInput()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the VMwareCbtNicInput class.
        /// </summary>

        /// <param name="nicId">The NIC Id.
        /// </param>

        /// <param name="isPrimaryNic">A value indicating whether this is the primary NIC.
        /// </param>

        /// <param name="targetSubnetName">Target subnet name.
        /// </param>

        /// <param name="targetStaticIPAddress">The static IP address.
        /// </param>

        /// <param name="isSelectedForMigration">A value indicating whether this NIC is selected for migration.
        /// </param>

        /// <param name="targetNicName">Target NIC name.
        /// </param>

        /// <param name="testSubnetName">The test subnet name.
        /// </param>

        /// <param name="testStaticIPAddress">The test static IP address.
        /// </param>
        public VMwareCbtNicInput(string nicId, string isPrimaryNic, string targetSubnetName = default(string), string targetStaticIPAddress = default(string), string isSelectedForMigration = default(string), string targetNicName = default(string), string testSubnetName = default(string), string testStaticIPAddress = default(string))

        {
            this.NicId = nicId;
            this.IsPrimaryNic = isPrimaryNic;
            this.TargetSubnetName = targetSubnetName;
            this.TargetStaticIPAddress = targetStaticIPAddress;
            this.IsSelectedForMigration = isSelectedForMigration;
            this.TargetNicName = targetNicName;
            this.TestSubnetName = testSubnetName;
            this.TestStaticIPAddress = testStaticIPAddress;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets or sets the NIC Id.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "nicId")]
        public string NicId {get; set; }

        /// <summary>
        /// Gets or sets a value indicating whether this is the primary NIC.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "isPrimaryNic")]
        public string IsPrimaryNic {get; set; }

        /// <summary>
        /// Gets or sets target subnet name.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "targetSubnetName")]
        public string TargetSubnetName {get; set; }

        /// <summary>
        /// Gets or sets the static IP address.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "targetStaticIPAddress")]
        public string TargetStaticIPAddress {get; set; }

        /// <summary>
        /// Gets or sets a value indicating whether this NIC is selected for migration.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "isSelectedForMigration")]
        public string IsSelectedForMigration {get; set; }

        /// <summary>
        /// Gets or sets target NIC name.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "targetNicName")]
        public string TargetNicName {get; set; }

        /// <summary>
        /// Gets or sets the test subnet name.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "testSubnetName")]
        public string TestSubnetName {get; set; }

        /// <summary>
        /// Gets or sets the test static IP address.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "testStaticIPAddress")]
        public string TestStaticIPAddress {get; set; }
        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (this.NicId == null)
            {
                throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.CannotBeNull, "NicId");
            }
            if (this.IsPrimaryNic == null)
            {
                throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.CannotBeNull, "IsPrimaryNic");
            }








        }
    }
}