// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.
namespace Microsoft.Azure.Management.RecoveryServices.SiteRecovery
{
    using Microsoft.Rest.Azure;
    using Models;

    /// <summary>
    /// Extension methods for ReplicationNetworkMappingsOperations
    /// </summary>
    public static partial class ReplicationNetworkMappingsOperationsExtensions
    {
        /// <summary>
        /// Lists all ASR network mappings for the specified network.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='fabricName'>
        /// Primary fabric name.
        /// </param>
        /// <param name='networkName'>
        /// Primary network name.
        /// </param>
        public static Microsoft.Rest.Azure.IPage<NetworkMapping> ListByReplicationNetworks(this IReplicationNetworkMappingsOperations operations, string fabricName, string networkName)
        {
                return ((IReplicationNetworkMappingsOperations)operations).ListByReplicationNetworksAsync(fabricName, networkName).GetAwaiter().GetResult();
        }

        /// <summary>
        /// Lists all ASR network mappings for the specified network.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='fabricName'>
        /// Primary fabric name.
        /// </param>
        /// <param name='networkName'>
        /// Primary network name.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        public static async System.Threading.Tasks.Task<Microsoft.Rest.Azure.IPage<NetworkMapping>> ListByReplicationNetworksAsync(this IReplicationNetworkMappingsOperations operations, string fabricName, string networkName, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            using (var _result = await operations.ListByReplicationNetworksWithHttpMessagesAsync(fabricName, networkName, null, cancellationToken).ConfigureAwait(false))
            {
                return _result.Body;
            }
        }
        /// <summary>
        /// Gets the details of an ASR network mapping.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='fabricName'>
        /// Primary fabric name.
        /// </param>
        /// <param name='networkName'>
        /// Primary network name.
        /// </param>
        /// <param name='networkMappingName'>
        /// Network mapping name.
        /// </param>
        public static NetworkMapping Get(this IReplicationNetworkMappingsOperations operations, string fabricName, string networkName, string networkMappingName)
        {
                return ((IReplicationNetworkMappingsOperations)operations).GetAsync(fabricName, networkName, networkMappingName).GetAwaiter().GetResult();
        }

        /// <summary>
        /// Gets the details of an ASR network mapping.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='fabricName'>
        /// Primary fabric name.
        /// </param>
        /// <param name='networkName'>
        /// Primary network name.
        /// </param>
        /// <param name='networkMappingName'>
        /// Network mapping name.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        public static async System.Threading.Tasks.Task<NetworkMapping> GetAsync(this IReplicationNetworkMappingsOperations operations, string fabricName, string networkName, string networkMappingName, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            using (var _result = await operations.GetWithHttpMessagesAsync(fabricName, networkName, networkMappingName, null, cancellationToken).ConfigureAwait(false))
            {
                return _result.Body;
            }
        }
        /// <summary>
        /// The operation to create an ASR network mapping.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='fabricName'>
        /// Primary fabric name.
        /// </param>
        /// <param name='networkName'>
        /// Primary network name.
        /// </param>
        /// <param name='networkMappingName'>
        /// Network mapping name.
        /// </param>
        public static NetworkMapping Create(this IReplicationNetworkMappingsOperations operations, string fabricName, string networkName, string networkMappingName, CreateNetworkMappingInputProperties properties)
        {
                return ((IReplicationNetworkMappingsOperations)operations).CreateAsync(fabricName, networkName, networkMappingName, properties).GetAwaiter().GetResult();
        }

        /// <summary>
        /// The operation to create an ASR network mapping.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='fabricName'>
        /// Primary fabric name.
        /// </param>
        /// <param name='networkName'>
        /// Primary network name.
        /// </param>
        /// <param name='networkMappingName'>
        /// Network mapping name.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        public static async System.Threading.Tasks.Task<NetworkMapping> CreateAsync(this IReplicationNetworkMappingsOperations operations, string fabricName, string networkName, string networkMappingName, CreateNetworkMappingInputProperties properties, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            using (var _result = await operations.CreateWithHttpMessagesAsync(fabricName, networkName, networkMappingName, properties, null, cancellationToken).ConfigureAwait(false))
            {
                return _result.Body;
            }
        }
        /// <summary>
        /// The operation to delete a network mapping.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='fabricName'>
        /// Primary fabric name.
        /// </param>
        /// <param name='networkName'>
        /// Primary network name.
        /// </param>
        /// <param name='networkMappingName'>
        /// ARM Resource Name for network mapping.
        /// </param>
        public static void Delete(this IReplicationNetworkMappingsOperations operations, string fabricName, string networkName, string networkMappingName)
        {
                ((IReplicationNetworkMappingsOperations)operations).DeleteAsync(fabricName, networkName, networkMappingName).GetAwaiter().GetResult();
        }

        /// <summary>
        /// The operation to delete a network mapping.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='fabricName'>
        /// Primary fabric name.
        /// </param>
        /// <param name='networkName'>
        /// Primary network name.
        /// </param>
        /// <param name='networkMappingName'>
        /// ARM Resource Name for network mapping.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        public static async System.Threading.Tasks.Task DeleteAsync(this IReplicationNetworkMappingsOperations operations, string fabricName, string networkName, string networkMappingName, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            (await operations.DeleteWithHttpMessagesAsync(fabricName, networkName, networkMappingName, null, cancellationToken).ConfigureAwait(false)).Dispose();
        }
        /// <summary>
        /// The operation to update an ASR network mapping.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='fabricName'>
        /// Primary fabric name.
        /// </param>
        /// <param name='networkName'>
        /// Primary network name.
        /// </param>
        /// <param name='networkMappingName'>
        /// Network mapping name.
        /// </param>
        public static NetworkMapping Update(this IReplicationNetworkMappingsOperations operations, string fabricName, string networkName, string networkMappingName, UpdateNetworkMappingInputProperties properties = default(UpdateNetworkMappingInputProperties))
        {
                return ((IReplicationNetworkMappingsOperations)operations).UpdateAsync(fabricName, networkName, networkMappingName, properties).GetAwaiter().GetResult();
        }

        /// <summary>
        /// The operation to update an ASR network mapping.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='fabricName'>
        /// Primary fabric name.
        /// </param>
        /// <param name='networkName'>
        /// Primary network name.
        /// </param>
        /// <param name='networkMappingName'>
        /// Network mapping name.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        public static async System.Threading.Tasks.Task<NetworkMapping> UpdateAsync(this IReplicationNetworkMappingsOperations operations, string fabricName, string networkName, string networkMappingName, UpdateNetworkMappingInputProperties properties = default(UpdateNetworkMappingInputProperties), System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            using (var _result = await operations.UpdateWithHttpMessagesAsync(fabricName, networkName, networkMappingName, properties, null, cancellationToken).ConfigureAwait(false))
            {
                return _result.Body;
            }
        }
        /// <summary>
        /// Lists all ASR network mappings in the vault.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        public static Microsoft.Rest.Azure.IPage<NetworkMapping> List(this IReplicationNetworkMappingsOperations operations)
        {
                return ((IReplicationNetworkMappingsOperations)operations).ListAsync().GetAwaiter().GetResult();
        }

        /// <summary>
        /// Lists all ASR network mappings in the vault.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        public static async System.Threading.Tasks.Task<Microsoft.Rest.Azure.IPage<NetworkMapping>> ListAsync(this IReplicationNetworkMappingsOperations operations, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            using (var _result = await operations.ListWithHttpMessagesAsync(null, cancellationToken).ConfigureAwait(false))
            {
                return _result.Body;
            }
        }
        /// <summary>
        /// The operation to create an ASR network mapping.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='fabricName'>
        /// Primary fabric name.
        /// </param>
        /// <param name='networkName'>
        /// Primary network name.
        /// </param>
        /// <param name='networkMappingName'>
        /// Network mapping name.
        /// </param>
        public static NetworkMapping BeginCreate(this IReplicationNetworkMappingsOperations operations, string fabricName, string networkName, string networkMappingName, CreateNetworkMappingInputProperties properties)
        {
                return ((IReplicationNetworkMappingsOperations)operations).BeginCreateAsync(fabricName, networkName, networkMappingName, properties).GetAwaiter().GetResult();
        }

        /// <summary>
        /// The operation to create an ASR network mapping.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='fabricName'>
        /// Primary fabric name.
        /// </param>
        /// <param name='networkName'>
        /// Primary network name.
        /// </param>
        /// <param name='networkMappingName'>
        /// Network mapping name.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        public static async System.Threading.Tasks.Task<NetworkMapping> BeginCreateAsync(this IReplicationNetworkMappingsOperations operations, string fabricName, string networkName, string networkMappingName, CreateNetworkMappingInputProperties properties, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            using (var _result = await operations.BeginCreateWithHttpMessagesAsync(fabricName, networkName, networkMappingName, properties, null, cancellationToken).ConfigureAwait(false))
            {
                return _result.Body;
            }
        }
        /// <summary>
        /// The operation to delete a network mapping.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='fabricName'>
        /// Primary fabric name.
        /// </param>
        /// <param name='networkName'>
        /// Primary network name.
        /// </param>
        /// <param name='networkMappingName'>
        /// ARM Resource Name for network mapping.
        /// </param>
        public static void BeginDelete(this IReplicationNetworkMappingsOperations operations, string fabricName, string networkName, string networkMappingName)
        {
                ((IReplicationNetworkMappingsOperations)operations).BeginDeleteAsync(fabricName, networkName, networkMappingName).GetAwaiter().GetResult();
        }

        /// <summary>
        /// The operation to delete a network mapping.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='fabricName'>
        /// Primary fabric name.
        /// </param>
        /// <param name='networkName'>
        /// Primary network name.
        /// </param>
        /// <param name='networkMappingName'>
        /// ARM Resource Name for network mapping.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        public static async System.Threading.Tasks.Task BeginDeleteAsync(this IReplicationNetworkMappingsOperations operations, string fabricName, string networkName, string networkMappingName, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            (await operations.BeginDeleteWithHttpMessagesAsync(fabricName, networkName, networkMappingName, null, cancellationToken).ConfigureAwait(false)).Dispose();
        }
        /// <summary>
        /// The operation to update an ASR network mapping.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='fabricName'>
        /// Primary fabric name.
        /// </param>
        /// <param name='networkName'>
        /// Primary network name.
        /// </param>
        /// <param name='networkMappingName'>
        /// Network mapping name.
        /// </param>
        public static NetworkMapping BeginUpdate(this IReplicationNetworkMappingsOperations operations, string fabricName, string networkName, string networkMappingName, UpdateNetworkMappingInputProperties properties = default(UpdateNetworkMappingInputProperties))
        {
                return ((IReplicationNetworkMappingsOperations)operations).BeginUpdateAsync(fabricName, networkName, networkMappingName, properties).GetAwaiter().GetResult();
        }

        /// <summary>
        /// The operation to update an ASR network mapping.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='fabricName'>
        /// Primary fabric name.
        /// </param>
        /// <param name='networkName'>
        /// Primary network name.
        /// </param>
        /// <param name='networkMappingName'>
        /// Network mapping name.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        public static async System.Threading.Tasks.Task<NetworkMapping> BeginUpdateAsync(this IReplicationNetworkMappingsOperations operations, string fabricName, string networkName, string networkMappingName, UpdateNetworkMappingInputProperties properties = default(UpdateNetworkMappingInputProperties), System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            using (var _result = await operations.BeginUpdateWithHttpMessagesAsync(fabricName, networkName, networkMappingName, properties, null, cancellationToken).ConfigureAwait(false))
            {
                return _result.Body;
            }
        }
        /// <summary>
        /// Lists all ASR network mappings for the specified network.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='nextPageLink'>
        /// The NextLink from the previous successful call to List operation.
        /// </param>
        public static Microsoft.Rest.Azure.IPage<NetworkMapping> ListByReplicationNetworksNext(this IReplicationNetworkMappingsOperations operations, string nextPageLink)
        {
                return ((IReplicationNetworkMappingsOperations)operations).ListByReplicationNetworksNextAsync(nextPageLink).GetAwaiter().GetResult();
        }

        /// <summary>
        /// Lists all ASR network mappings for the specified network.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='nextPageLink'>
        /// The NextLink from the previous successful call to List operation.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        public static async System.Threading.Tasks.Task<Microsoft.Rest.Azure.IPage<NetworkMapping>> ListByReplicationNetworksNextAsync(this IReplicationNetworkMappingsOperations operations, string nextPageLink, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            using (var _result = await operations.ListByReplicationNetworksNextWithHttpMessagesAsync(nextPageLink, null, cancellationToken).ConfigureAwait(false))
            {
                return _result.Body;
            }
        }
        /// <summary>
        /// Lists all ASR network mappings in the vault.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='nextPageLink'>
        /// The NextLink from the previous successful call to List operation.
        /// </param>
        public static Microsoft.Rest.Azure.IPage<NetworkMapping> ListNext(this IReplicationNetworkMappingsOperations operations, string nextPageLink)
        {
                return ((IReplicationNetworkMappingsOperations)operations).ListNextAsync(nextPageLink).GetAwaiter().GetResult();
        }

        /// <summary>
        /// Lists all ASR network mappings in the vault.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='nextPageLink'>
        /// The NextLink from the previous successful call to List operation.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        public static async System.Threading.Tasks.Task<Microsoft.Rest.Azure.IPage<NetworkMapping>> ListNextAsync(this IReplicationNetworkMappingsOperations operations, string nextPageLink, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            using (var _result = await operations.ListNextWithHttpMessagesAsync(nextPageLink, null, cancellationToken).ConfigureAwait(false))
            {
                return _result.Body;
            }
        }
    }
}
