// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.
namespace Microsoft.Azure.Management.RecoveryServices.SiteRecovery
{
    using Microsoft.Rest.Azure;
    using Models;

    /// <summary>
    /// Extension methods for ReplicationProtectionIntentsOperations
    /// </summary>
    public static partial class ReplicationProtectionIntentsOperationsExtensions
    {
        /// <summary>
        /// Gets the list of ASR replication protection intent objects in the vault.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='skipToken'>
        /// The pagination token.
        /// </param>
        /// <param name='takeToken'>
        /// The page size.
        /// </param>
        public static Microsoft.Rest.Azure.IPage<ReplicationProtectionIntent> List(this IReplicationProtectionIntentsOperations operations, string skipToken = default(string), string takeToken = default(string))
        {
                return ((IReplicationProtectionIntentsOperations)operations).ListAsync(skipToken, takeToken).GetAwaiter().GetResult();
        }

        /// <summary>
        /// Gets the list of ASR replication protection intent objects in the vault.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='skipToken'>
        /// The pagination token.
        /// </param>
        /// <param name='takeToken'>
        /// The page size.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        public static async System.Threading.Tasks.Task<Microsoft.Rest.Azure.IPage<ReplicationProtectionIntent>> ListAsync(this IReplicationProtectionIntentsOperations operations, string skipToken = default(string), string takeToken = default(string), System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            using (var _result = await operations.ListWithHttpMessagesAsync(skipToken, takeToken, null, cancellationToken).ConfigureAwait(false))
            {
                return _result.Body;
            }
        }
        /// <summary>
        /// Gets the details of an ASR replication protection intent.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='intentObjectName'>
        /// Replication protection intent name.
        /// </param>
        public static ReplicationProtectionIntent Get(this IReplicationProtectionIntentsOperations operations, string intentObjectName)
        {
                return ((IReplicationProtectionIntentsOperations)operations).GetAsync(intentObjectName).GetAwaiter().GetResult();
        }

        /// <summary>
        /// Gets the details of an ASR replication protection intent.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='intentObjectName'>
        /// Replication protection intent name.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        public static async System.Threading.Tasks.Task<ReplicationProtectionIntent> GetAsync(this IReplicationProtectionIntentsOperations operations, string intentObjectName, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            using (var _result = await operations.GetWithHttpMessagesAsync(intentObjectName, null, cancellationToken).ConfigureAwait(false))
            {
                return _result.Body;
            }
        }
        /// <summary>
        /// The operation to create an ASR replication protection intent item.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='intentObjectName'>
        /// A name for the replication protection item.
        /// </param>
        public static ReplicationProtectionIntent Create(this IReplicationProtectionIntentsOperations operations, string intentObjectName, CreateProtectionIntentProperties properties = default(CreateProtectionIntentProperties))
        {
                return ((IReplicationProtectionIntentsOperations)operations).CreateAsync(intentObjectName, properties).GetAwaiter().GetResult();
        }

        /// <summary>
        /// The operation to create an ASR replication protection intent item.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='intentObjectName'>
        /// A name for the replication protection item.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        public static async System.Threading.Tasks.Task<ReplicationProtectionIntent> CreateAsync(this IReplicationProtectionIntentsOperations operations, string intentObjectName, CreateProtectionIntentProperties properties = default(CreateProtectionIntentProperties), System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            using (var _result = await operations.CreateWithHttpMessagesAsync(intentObjectName, properties, null, cancellationToken).ConfigureAwait(false))
            {
                return _result.Body;
            }
        }
        /// <summary>
        /// Gets the list of ASR replication protection intent objects in the vault.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='nextPageLink'>
        /// The NextLink from the previous successful call to List operation.
        /// </param>
        public static Microsoft.Rest.Azure.IPage<ReplicationProtectionIntent> ListNext(this IReplicationProtectionIntentsOperations operations, string nextPageLink)
        {
                return ((IReplicationProtectionIntentsOperations)operations).ListNextAsync(nextPageLink).GetAwaiter().GetResult();
        }

        /// <summary>
        /// Gets the list of ASR replication protection intent objects in the vault.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='nextPageLink'>
        /// The NextLink from the previous successful call to List operation.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        public static async System.Threading.Tasks.Task<Microsoft.Rest.Azure.IPage<ReplicationProtectionIntent>> ListNextAsync(this IReplicationProtectionIntentsOperations operations, string nextPageLink, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            using (var _result = await operations.ListNextWithHttpMessagesAsync(nextPageLink, null, cancellationToken).ConfigureAwait(false))
            {
                return _result.Body;
            }
        }
    }
}
