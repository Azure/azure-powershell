// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.
namespace Microsoft.Azure.Management.RecoveryServices.SiteRecovery
{
    using Microsoft.Rest.Azure;
    using Models;

    /// <summary>
    /// Extension methods for ReplicationProtectableItemsOperations
    /// </summary>
    public static partial class ReplicationProtectableItemsOperationsExtensions
    {
        /// <summary>
        /// Lists the protectable items in a protection container.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='odataQuery'>
        /// 
        /// </param>
        /// <param name='fabricName'>
        /// Fabric name.
        /// </param>
        /// <param name='protectionContainerName'>
        /// Protection container name.
        /// </param>
        /// <param name='take'>
        /// take OData query parameter.
        /// </param>
        /// <param name='skipToken'>
        /// skipToken OData query parameter.
        /// </param>
        public static Microsoft.Rest.Azure.IPage<ProtectableItem> ListByReplicationProtectionContainers(this IReplicationProtectableItemsOperations operations, string fabricName, string protectionContainerName, Microsoft.Rest.Azure.OData.ODataQuery<ProtectableItemQueryParameter> odataQuery = default(Microsoft.Rest.Azure.OData.ODataQuery<ProtectableItemQueryParameter>), string take = default(string), string skipToken = default(string))
        {
                return ((IReplicationProtectableItemsOperations)operations).ListByReplicationProtectionContainersAsync(fabricName, protectionContainerName, odataQuery, take, skipToken).GetAwaiter().GetResult();
        }

        /// <summary>
        /// Lists the protectable items in a protection container.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='odataQuery'>
        /// 
        /// </param>
        /// <param name='fabricName'>
        /// Fabric name.
        /// </param>
        /// <param name='protectionContainerName'>
        /// Protection container name.
        /// </param>
        /// <param name='take'>
        /// take OData query parameter.
        /// </param>
        /// <param name='skipToken'>
        /// skipToken OData query parameter.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        public static async System.Threading.Tasks.Task<Microsoft.Rest.Azure.IPage<ProtectableItem>> ListByReplicationProtectionContainersAsync(this IReplicationProtectableItemsOperations operations, string fabricName, string protectionContainerName, Microsoft.Rest.Azure.OData.ODataQuery<ProtectableItemQueryParameter> odataQuery = default(Microsoft.Rest.Azure.OData.ODataQuery<ProtectableItemQueryParameter>), string take = default(string), string skipToken = default(string), System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            using (var _result = await operations.ListByReplicationProtectionContainersWithHttpMessagesAsync(fabricName, protectionContainerName, odataQuery, take, skipToken, null, cancellationToken).ConfigureAwait(false))
            {
                return _result.Body;
            }
        }
        /// <summary>
        /// The operation to get the details of a protectable item.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='fabricName'>
        /// Fabric name.
        /// </param>
        /// <param name='protectionContainerName'>
        /// Protection container name.
        /// </param>
        /// <param name='protectableItemName'>
        /// Protectable item name.
        /// </param>
        public static ProtectableItem Get(this IReplicationProtectableItemsOperations operations, string fabricName, string protectionContainerName, string protectableItemName)
        {
                return ((IReplicationProtectableItemsOperations)operations).GetAsync(fabricName, protectionContainerName, protectableItemName).GetAwaiter().GetResult();
        }

        /// <summary>
        /// The operation to get the details of a protectable item.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='fabricName'>
        /// Fabric name.
        /// </param>
        /// <param name='protectionContainerName'>
        /// Protection container name.
        /// </param>
        /// <param name='protectableItemName'>
        /// Protectable item name.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        public static async System.Threading.Tasks.Task<ProtectableItem> GetAsync(this IReplicationProtectableItemsOperations operations, string fabricName, string protectionContainerName, string protectableItemName, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            using (var _result = await operations.GetWithHttpMessagesAsync(fabricName, protectionContainerName, protectableItemName, null, cancellationToken).ConfigureAwait(false))
            {
                return _result.Body;
            }
        }
        /// <summary>
        /// Lists the protectable items in a protection container.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='nextPageLink'>
        /// The NextLink from the previous successful call to List operation.
        /// </param>
        public static Microsoft.Rest.Azure.IPage<ProtectableItem> ListByReplicationProtectionContainersNext(this IReplicationProtectableItemsOperations operations, string nextPageLink)
        {
                return ((IReplicationProtectableItemsOperations)operations).ListByReplicationProtectionContainersNextAsync(nextPageLink).GetAwaiter().GetResult();
        }

        /// <summary>
        /// Lists the protectable items in a protection container.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='nextPageLink'>
        /// The NextLink from the previous successful call to List operation.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        public static async System.Threading.Tasks.Task<Microsoft.Rest.Azure.IPage<ProtectableItem>> ListByReplicationProtectionContainersNextAsync(this IReplicationProtectableItemsOperations operations, string nextPageLink, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            using (var _result = await operations.ListByReplicationProtectionContainersNextWithHttpMessagesAsync(nextPageLink, null, cancellationToken).ConfigureAwait(false))
            {
                return _result.Body;
            }
        }
    }
}
