// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.
namespace Microsoft.Azure.Management.RecoveryServices.SiteRecovery
{
    using Microsoft.Rest.Azure;
    using Models;

    /// <summary>
    /// Extension methods for ReplicationVaultSettingOperations
    /// </summary>
    public static partial class ReplicationVaultSettingOperationsExtensions
    {
        /// <summary>
        /// Gets the list of vault setting. This includes the Migration Hub connection
        /// settings.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='resourceGroupName'>
        /// The name of the resource group where the recovery services vault is
        /// present.
        /// </param>
        /// <param name='resourceName'>
        /// The name of the recovery services vault.
        /// </param>
        public static Microsoft.Rest.Azure.IPage<VaultSetting> List(this IReplicationVaultSettingOperations operations, string resourceGroupName, string resourceName)
        {
                return ((IReplicationVaultSettingOperations)operations).ListAsync(resourceGroupName, resourceName).GetAwaiter().GetResult();
        }

        /// <summary>
        /// Gets the list of vault setting. This includes the Migration Hub connection
        /// settings.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='resourceGroupName'>
        /// The name of the resource group where the recovery services vault is
        /// present.
        /// </param>
        /// <param name='resourceName'>
        /// The name of the recovery services vault.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        public static async System.Threading.Tasks.Task<Microsoft.Rest.Azure.IPage<VaultSetting>> ListAsync(this IReplicationVaultSettingOperations operations, string resourceGroupName, string resourceName, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            using (var _result = await operations.ListWithHttpMessagesAsync(resourceGroupName, resourceName, null, cancellationToken).ConfigureAwait(false))
            {
                return _result.Body;
            }
        }
        /// <summary>
        /// Gets the vault setting. This includes the Migration Hub connection
        /// settings.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='resourceGroupName'>
        /// The name of the resource group where the recovery services vault is
        /// present.
        /// </param>
        /// <param name='resourceName'>
        /// The name of the recovery services vault.
        /// </param>
        /// <param name='vaultSettingName'>
        /// Vault setting name.
        /// </param>
        public static VaultSetting Get(this IReplicationVaultSettingOperations operations, string resourceGroupName, string resourceName, string vaultSettingName)
        {
                return ((IReplicationVaultSettingOperations)operations).GetAsync(resourceGroupName, resourceName, vaultSettingName).GetAwaiter().GetResult();
        }

        /// <summary>
        /// Gets the vault setting. This includes the Migration Hub connection
        /// settings.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='resourceGroupName'>
        /// The name of the resource group where the recovery services vault is
        /// present.
        /// </param>
        /// <param name='resourceName'>
        /// The name of the recovery services vault.
        /// </param>
        /// <param name='vaultSettingName'>
        /// Vault setting name.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        public static async System.Threading.Tasks.Task<VaultSetting> GetAsync(this IReplicationVaultSettingOperations operations, string resourceGroupName, string resourceName, string vaultSettingName, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            using (var _result = await operations.GetWithHttpMessagesAsync(resourceGroupName, resourceName, vaultSettingName, null, cancellationToken).ConfigureAwait(false))
            {
                return _result.Body;
            }
        }
        /// <summary>
        /// The operation to configure vault setting.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='resourceGroupName'>
        /// The name of the resource group where the recovery services vault is
        /// present.
        /// </param>
        /// <param name='resourceName'>
        /// The name of the recovery services vault.
        /// </param>
        /// <param name='vaultSettingName'>
        /// Vault setting name.
        /// </param>
        public static VaultSetting Create(this IReplicationVaultSettingOperations operations, string resourceGroupName, string resourceName, string vaultSettingName, VaultSettingCreationInputProperties properties)
        {
                return ((IReplicationVaultSettingOperations)operations).CreateAsync(resourceGroupName, resourceName, vaultSettingName, properties).GetAwaiter().GetResult();
        }

        /// <summary>
        /// The operation to configure vault setting.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='resourceGroupName'>
        /// The name of the resource group where the recovery services vault is
        /// present.
        /// </param>
        /// <param name='resourceName'>
        /// The name of the recovery services vault.
        /// </param>
        /// <param name='vaultSettingName'>
        /// Vault setting name.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        public static async System.Threading.Tasks.Task<VaultSetting> CreateAsync(this IReplicationVaultSettingOperations operations, string resourceGroupName, string resourceName, string vaultSettingName, VaultSettingCreationInputProperties properties, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            using (var _result = await operations.CreateWithHttpMessagesAsync(resourceGroupName, resourceName, vaultSettingName, properties, null, cancellationToken).ConfigureAwait(false))
            {
                return _result.Body;
            }
        }
        /// <summary>
        /// The operation to configure vault setting.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='resourceGroupName'>
        /// The name of the resource group where the recovery services vault is
        /// present.
        /// </param>
        /// <param name='resourceName'>
        /// The name of the recovery services vault.
        /// </param>
        /// <param name='vaultSettingName'>
        /// Vault setting name.
        /// </param>
        public static VaultSetting BeginCreate(this IReplicationVaultSettingOperations operations, string resourceGroupName, string resourceName, string vaultSettingName, VaultSettingCreationInputProperties properties)
        {
                return ((IReplicationVaultSettingOperations)operations).BeginCreateAsync(resourceGroupName, resourceName, vaultSettingName, properties).GetAwaiter().GetResult();
        }

        /// <summary>
        /// The operation to configure vault setting.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='resourceGroupName'>
        /// The name of the resource group where the recovery services vault is
        /// present.
        /// </param>
        /// <param name='resourceName'>
        /// The name of the recovery services vault.
        /// </param>
        /// <param name='vaultSettingName'>
        /// Vault setting name.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        public static async System.Threading.Tasks.Task<VaultSetting> BeginCreateAsync(this IReplicationVaultSettingOperations operations, string resourceGroupName, string resourceName, string vaultSettingName, VaultSettingCreationInputProperties properties, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            using (var _result = await operations.BeginCreateWithHttpMessagesAsync(resourceGroupName, resourceName, vaultSettingName, properties, null, cancellationToken).ConfigureAwait(false))
            {
                return _result.Body;
            }
        }
        /// <summary>
        /// Gets the list of vault setting. This includes the Migration Hub connection
        /// settings.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='nextPageLink'>
        /// The NextLink from the previous successful call to List operation.
        /// </param>
        public static Microsoft.Rest.Azure.IPage<VaultSetting> ListNext(this IReplicationVaultSettingOperations operations, string nextPageLink)
        {
                return ((IReplicationVaultSettingOperations)operations).ListNextAsync(nextPageLink).GetAwaiter().GetResult();
        }

        /// <summary>
        /// Gets the list of vault setting. This includes the Migration Hub connection
        /// settings.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='nextPageLink'>
        /// The NextLink from the previous successful call to List operation.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        public static async System.Threading.Tasks.Task<Microsoft.Rest.Azure.IPage<VaultSetting>> ListNextAsync(this IReplicationVaultSettingOperations operations, string nextPageLink, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            using (var _result = await operations.ListNextWithHttpMessagesAsync(nextPageLink, null, cancellationToken).ConfigureAwait(false))
            {
                return _result.Body;
            }
        }
    }
}
