// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.RecoveryServices.Models
{
    using System.Linq;

    /// <summary>
    /// Vault extended information.
    /// </summary>
    public partial class VaultExtendedInfo
    {
        /// <summary>
        /// Initializes a new instance of the VaultExtendedInfo class.
        /// </summary>
        public VaultExtendedInfo()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the VaultExtendedInfo class.
        /// </summary>

        /// <param name="integrityKey">Integrity key.
        /// </param>

        /// <param name="encryptionKey">Encryption key.
        /// </param>

        /// <param name="encryptionKeyThumbprint">Encryption key thumbprint.
        /// </param>

        /// <param name="algorithm">Algorithm for Vault ExtendedInfo
        /// </param>
        public VaultExtendedInfo(string integrityKey = default(string), string encryptionKey = default(string), string encryptionKeyThumbprint = default(string), string algorithm = default(string))

        {
            this.IntegrityKey = integrityKey;
            this.EncryptionKey = encryptionKey;
            this.EncryptionKeyThumbprint = encryptionKeyThumbprint;
            this.Algorithm = algorithm;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets or sets integrity key.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "integrityKey")]
        public string IntegrityKey {get; set; }

        /// <summary>
        /// Gets or sets encryption key.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "encryptionKey")]
        public string EncryptionKey {get; set; }

        /// <summary>
        /// Gets or sets encryption key thumbprint.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "encryptionKeyThumbprint")]
        public string EncryptionKeyThumbprint {get; set; }

        /// <summary>
        /// Gets or sets algorithm for Vault ExtendedInfo
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "algorithm")]
        public string Algorithm {get; set; }
    }
}