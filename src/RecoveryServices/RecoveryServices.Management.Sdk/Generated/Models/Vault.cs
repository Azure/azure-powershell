// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.RecoveryServices.Models
{
    using System.Linq;

    /// <summary>
    /// Resource information, as returned by the resource provider.
    /// </summary>
    public partial class Vault : TrackedResource
    {
        /// <summary>
        /// Initializes a new instance of the Vault class.
        /// </summary>
        public Vault()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the Vault class.
        /// </summary>

        /// <param name="id">Resource Id represents the complete path to the resource.
        /// </param>

        /// <param name="name">Resource name associated with the resource.
        /// </param>

        /// <param name="type">Resource type represents the complete path of the form
        /// Namespace/ResourceType/ResourceType/...
        /// </param>

        /// <param name="etag">Optional ETag.
        /// </param>

        /// <param name="location">Resource location.
        /// </param>

        /// <param name="tags">Resource tags.
        /// </param>

        /// <param name="identity">Identity for the resource.
        /// </param>

        /// <param name="properties">Properties of the vault.
        /// </param>

        /// <param name="sku">Identifies the unique system identifier for each Azure resource.
        /// </param>

        /// <param name="systemData">Metadata pertaining to creation and last modification of the resource.
        /// </param>
        public Vault(string location, string id = default(string), string name = default(string), string type = default(string), string etag = default(string), System.Collections.Generic.IDictionary<string, string> tags = default(System.Collections.Generic.IDictionary<string, string>), IdentityData identity = default(IdentityData), VaultProperties properties = default(VaultProperties), Sku sku = default(Sku), SystemData systemData = default(SystemData))

        : base(location, id, name, type, etag, tags)
        {
            this.Identity = identity;
            this.Properties = properties;
            this.Sku = sku;
            this.SystemData = systemData;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets or sets identity for the resource.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "identity")]
        public IdentityData Identity {get; set; }

        /// <summary>
        /// Gets or sets properties of the vault.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties")]
        public VaultProperties Properties {get; set; }

        /// <summary>
        /// Gets or sets identifies the unique system identifier for each Azure
        /// resource.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "sku")]
        public Sku Sku {get; set; }

        /// <summary>
        /// Gets metadata pertaining to creation and last modification of the resource.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "systemData")]
        public SystemData SystemData {get; private set; }
        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public override void Validate()
        {
            base.Validate();
            if (this.Identity != null)
            {
                this.Identity.Validate();
            }

            if (this.Sku != null)
            {
                this.Sku.Validate();
            }

        }
    }
}