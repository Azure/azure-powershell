// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.RecoveryServices.Models
{
    using System.Linq;

    /// <summary>
    /// Properties of the vault.
    /// </summary>
    public partial class VaultProperties
    {
        /// <summary>
        /// Initializes a new instance of the VaultProperties class.
        /// </summary>
        public VaultProperties()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the VaultProperties class.
        /// </summary>

        /// <param name="provisioningState">Provisioning State.
        /// </param>

        /// <param name="upgradeDetails">Details for upgrading vault.
        /// </param>

        /// <param name="privateEndpointConnections">List of private endpoint connection.
        /// </param>

        /// <param name="privateEndpointStateForBackup">Private endpoint state for backup.
        /// Possible values include: &#39;None&#39;, &#39;Enabled&#39;</param>

        /// <param name="privateEndpointStateForSiteRecovery">Private endpoint state for site recovery.
        /// Possible values include: &#39;None&#39;, &#39;Enabled&#39;</param>

        /// <param name="encryption">Customer Managed Key details of the resource.
        /// </param>

        /// <param name="moveDetails">The details of the latest move operation performed on the Azure Resource
        /// </param>

        /// <param name="moveState">The State of the Resource after the move operation
        /// Possible values include: &#39;Unknown&#39;, &#39;InProgress&#39;, &#39;PrepareFailed&#39;,
        /// &#39;CommitFailed&#39;, &#39;PrepareTimedout&#39;, &#39;CommitTimedout&#39;, &#39;MoveSucceeded&#39;,
        /// &#39;Failure&#39;, &#39;CriticalFailure&#39;, &#39;PartialSuccess&#39;</param>

        /// <param name="backupStorageVersion">Backup storage version
        /// Possible values include: &#39;V1&#39;, &#39;V2&#39;, &#39;Unassigned&#39;</param>

        /// <param name="publicNetworkAccess">property to enable or disable resource provider inbound network traffic
        /// from public clients
        /// Possible values include: &#39;Enabled&#39;, &#39;Disabled&#39;</param>

        /// <param name="monitoringSettings">Monitoring Settings of the vault
        /// </param>

        /// <param name="restoreSettings">Restore Settings of the vault
        /// </param>

        /// <param name="redundancySettings">The redundancy Settings of a Vault
        /// </param>

        /// <param name="securitySettings">Security Settings of the vault
        /// </param>

        /// <param name="secureScore">Secure Score of Recovery Services Vault
        /// Possible values include: &#39;None&#39;, &#39;Minimum&#39;, &#39;Adequate&#39;, &#39;Maximum&#39;</param>

        /// <param name="bcdrSecurityLevel">Security levels of Recovery Services Vault for business continuity and
        /// disaster recovery
        /// Possible values include: &#39;Poor&#39;, &#39;Fair&#39;, &#39;Good&#39;, &#39;Excellent&#39;</param>

        /// <param name="resourceGuardOperationRequests">ResourceGuardOperationRequests on which LAC check will be performed
        /// </param>
        public VaultProperties(string provisioningState = default(string), UpgradeDetails upgradeDetails = default(UpgradeDetails), System.Collections.Generic.IList<PrivateEndpointConnectionVaultProperties> privateEndpointConnections = default(System.Collections.Generic.IList<PrivateEndpointConnectionVaultProperties>), string privateEndpointStateForBackup = default(string), string privateEndpointStateForSiteRecovery = default(string), VaultPropertiesEncryption encryption = default(VaultPropertiesEncryption), VaultPropertiesMoveDetails moveDetails = default(VaultPropertiesMoveDetails), string moveState = default(string), string backupStorageVersion = default(string), string publicNetworkAccess = default(string), MonitoringSettings monitoringSettings = default(MonitoringSettings), RestoreSettings restoreSettings = default(RestoreSettings), VaultPropertiesRedundancySettings redundancySettings = default(VaultPropertiesRedundancySettings), SecuritySettings securitySettings = default(SecuritySettings), string secureScore = default(string), string bcdrSecurityLevel = default(string), System.Collections.Generic.IList<string> resourceGuardOperationRequests = default(System.Collections.Generic.IList<string>))

        {
            this.ProvisioningState = provisioningState;
            this.UpgradeDetails = upgradeDetails;
            this.PrivateEndpointConnections = privateEndpointConnections;
            this.PrivateEndpointStateForBackup = privateEndpointStateForBackup;
            this.PrivateEndpointStateForSiteRecovery = privateEndpointStateForSiteRecovery;
            this.Encryption = encryption;
            this.MoveDetails = moveDetails;
            this.MoveState = moveState;
            this.BackupStorageVersion = backupStorageVersion;
            this.PublicNetworkAccess = publicNetworkAccess;
            this.MonitoringSettings = monitoringSettings;
            this.RestoreSettings = restoreSettings;
            this.RedundancySettings = redundancySettings;
            this.SecuritySettings = securitySettings;
            this.SecureScore = secureScore;
            this.BcdrSecurityLevel = bcdrSecurityLevel;
            this.ResourceGuardOperationRequests = resourceGuardOperationRequests;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets provisioning State.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "provisioningState")]
        public string ProvisioningState {get; private set; }

        /// <summary>
        /// Gets or sets details for upgrading vault.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "upgradeDetails")]
        public UpgradeDetails UpgradeDetails {get; set; }

        /// <summary>
        /// Gets list of private endpoint connection.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "privateEndpointConnections")]
        public System.Collections.Generic.IList<PrivateEndpointConnectionVaultProperties> PrivateEndpointConnections {get; private set; }

        /// <summary>
        /// Gets private endpoint state for backup. Possible values include: &#39;None&#39;, &#39;Enabled&#39;
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "privateEndpointStateForBackup")]
        public string PrivateEndpointStateForBackup {get; private set; }

        /// <summary>
        /// Gets private endpoint state for site recovery. Possible values include: &#39;None&#39;, &#39;Enabled&#39;
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "privateEndpointStateForSiteRecovery")]
        public string PrivateEndpointStateForSiteRecovery {get; private set; }

        /// <summary>
        /// Gets or sets customer Managed Key details of the resource.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "encryption")]
        public VaultPropertiesEncryption Encryption {get; set; }

        /// <summary>
        /// Gets or sets the details of the latest move operation performed on the
        /// Azure Resource
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "moveDetails")]
        public VaultPropertiesMoveDetails MoveDetails {get; set; }

        /// <summary>
        /// Gets the State of the Resource after the move operation Possible values include: &#39;Unknown&#39;, &#39;InProgress&#39;, &#39;PrepareFailed&#39;, &#39;CommitFailed&#39;, &#39;PrepareTimedout&#39;, &#39;CommitTimedout&#39;, &#39;MoveSucceeded&#39;, &#39;Failure&#39;, &#39;CriticalFailure&#39;, &#39;PartialSuccess&#39;
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "moveState")]
        public string MoveState {get; private set; }

        /// <summary>
        /// Gets backup storage version Possible values include: &#39;V1&#39;, &#39;V2&#39;, &#39;Unassigned&#39;
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "backupStorageVersion")]
        public string BackupStorageVersion {get; private set; }

        /// <summary>
        /// Gets or sets property to enable or disable resource provider inbound
        /// network traffic from public clients Possible values include: &#39;Enabled&#39;, &#39;Disabled&#39;
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "publicNetworkAccess")]
        public string PublicNetworkAccess {get; set; }

        /// <summary>
        /// Gets or sets monitoring Settings of the vault
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "monitoringSettings")]
        public MonitoringSettings MonitoringSettings {get; set; }

        /// <summary>
        /// Gets or sets restore Settings of the vault
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "restoreSettings")]
        public RestoreSettings RestoreSettings {get; set; }

        /// <summary>
        /// Gets or sets the redundancy Settings of a Vault
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "redundancySettings")]
        public VaultPropertiesRedundancySettings RedundancySettings {get; set; }

        /// <summary>
        /// Gets or sets security Settings of the vault
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "securitySettings")]
        public SecuritySettings SecuritySettings {get; set; }

        /// <summary>
        /// Gets secure Score of Recovery Services Vault Possible values include: &#39;None&#39;, &#39;Minimum&#39;, &#39;Adequate&#39;, &#39;Maximum&#39;
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "secureScore")]
        public string SecureScore {get; private set; }

        /// <summary>
        /// Gets security levels of Recovery Services Vault for business continuity and
        /// disaster recovery Possible values include: &#39;Poor&#39;, &#39;Fair&#39;, &#39;Good&#39;, &#39;Excellent&#39;
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "bcdrSecurityLevel")]
        public string BcdrSecurityLevel {get; private set; }

        /// <summary>
        /// Gets or sets resourceGuardOperationRequests on which LAC check will be
        /// performed
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "resourceGuardOperationRequests")]
        public System.Collections.Generic.IList<string> ResourceGuardOperationRequests {get; set; }
    }
}