// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.RecoveryServices.Models
{
    using System.Linq;

    /// <summary>
    /// Raw certificate data.
    /// </summary>
    public partial class RawCertificateData
    {
        /// <summary>
        /// Initializes a new instance of the RawCertificateData class.
        /// </summary>
        public RawCertificateData()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the RawCertificateData class.
        /// </summary>

        /// <param name="authType">Specifies the authentication type.
        /// Possible values include: &#39;Invalid&#39;, &#39;ACS&#39;, &#39;AAD&#39;, &#39;AccessControlService&#39;,
        /// &#39;AzureActiveDirectory&#39;</param>

        /// <param name="certificate">The base64 encoded certificate raw data string
        /// </param>
        public RawCertificateData(string authType = default(string), byte[] certificate = default(byte[]))

        {
            this.AuthType = authType;
            this.Certificate = certificate;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets or sets specifies the authentication type. Possible values include: &#39;Invalid&#39;, &#39;ACS&#39;, &#39;AAD&#39;, &#39;AccessControlService&#39;, &#39;AzureActiveDirectory&#39;
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "authType")]
        public string AuthType {get; set; }

        /// <summary>
        /// Gets or sets the base64 encoded certificate raw data string
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "certificate")]
        public byte[] Certificate {get; set; }
    }
}