// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.RecoveryServices.Backup.CrossRegionRestore.Models
{
    using System.Linq;

    /// <summary>
    /// Additional information of DPM Protected item.
    /// </summary>
    public partial class DPMProtectedItemExtendedInfo
    {
        /// <summary>
        /// Initializes a new instance of the DPMProtectedItemExtendedInfo class.
        /// </summary>
        public DPMProtectedItemExtendedInfo()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the DPMProtectedItemExtendedInfo class.
        /// </summary>

        /// <param name="protectableObjectLoadPath">Attribute to provide information on various DBs.
        /// </param>

        /// <param name="protectedProperty">To check if backup item is disk protected.
        /// </param>

        /// <param name="isPresentOnCloud">To check if backup item is cloud protected.
        /// </param>

        /// <param name="lastBackupStatus">Last backup status information on backup item.
        /// </param>

        /// <param name="lastRefreshedAt">Last refresh time on backup item.
        /// </param>

        /// <param name="oldestRecoveryPoint">Oldest cloud recovery point time.
        /// </param>

        /// <param name="recoveryPointCount">cloud recovery point count.
        /// </param>

        /// <param name="onPremiseOldestRecoveryPoint">Oldest disk recovery point time.
        /// </param>

        /// <param name="onPremiseLatestRecoveryPoint">latest disk recovery point time.
        /// </param>

        /// <param name="onPremiseRecoveryPointCount">disk recovery point count.
        /// </param>

        /// <param name="isCollocated">To check if backup item is collocated.
        /// </param>

        /// <param name="protectionGroupName">Protection group name of the backup item.
        /// </param>

        /// <param name="diskStorageUsedInBytes">Used Disk storage in bytes.
        /// </param>

        /// <param name="totalDiskStorageSizeInBytes">total Disk storage in bytes.
        /// </param>
        public DPMProtectedItemExtendedInfo(System.Collections.Generic.IDictionary<string, string> protectableObjectLoadPath = default(System.Collections.Generic.IDictionary<string, string>), bool? protectedProperty = default(bool?), bool? isPresentOnCloud = default(bool?), string lastBackupStatus = default(string), System.DateTime? lastRefreshedAt = default(System.DateTime?), System.DateTime? oldestRecoveryPoint = default(System.DateTime?), int? recoveryPointCount = default(int?), System.DateTime? onPremiseOldestRecoveryPoint = default(System.DateTime?), System.DateTime? onPremiseLatestRecoveryPoint = default(System.DateTime?), int? onPremiseRecoveryPointCount = default(int?), bool? isCollocated = default(bool?), string protectionGroupName = default(string), string diskStorageUsedInBytes = default(string), string totalDiskStorageSizeInBytes = default(string))

        {
            this.ProtectableObjectLoadPath = protectableObjectLoadPath;
            this.ProtectedProperty = protectedProperty;
            this.IsPresentOnCloud = isPresentOnCloud;
            this.LastBackupStatus = lastBackupStatus;
            this.LastRefreshedAt = lastRefreshedAt;
            this.OldestRecoveryPoint = oldestRecoveryPoint;
            this.RecoveryPointCount = recoveryPointCount;
            this.OnPremiseOldestRecoveryPoint = onPremiseOldestRecoveryPoint;
            this.OnPremiseLatestRecoveryPoint = onPremiseLatestRecoveryPoint;
            this.OnPremiseRecoveryPointCount = onPremiseRecoveryPointCount;
            this.IsCollocated = isCollocated;
            this.ProtectionGroupName = protectionGroupName;
            this.DiskStorageUsedInBytes = diskStorageUsedInBytes;
            this.TotalDiskStorageSizeInBytes = totalDiskStorageSizeInBytes;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets or sets attribute to provide information on various DBs.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "protectableObjectLoadPath")]
        public System.Collections.Generic.IDictionary<string, string> ProtectableObjectLoadPath {get; set; }

        /// <summary>
        /// Gets or sets to check if backup item is disk protected.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "protected")]
        public bool? ProtectedProperty {get; set; }

        /// <summary>
        /// Gets or sets to check if backup item is cloud protected.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "isPresentOnCloud")]
        public bool? IsPresentOnCloud {get; set; }

        /// <summary>
        /// Gets or sets last backup status information on backup item.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "lastBackupStatus")]
        public string LastBackupStatus {get; set; }

        /// <summary>
        /// Gets or sets last refresh time on backup item.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "lastRefreshedAt")]
        public System.DateTime? LastRefreshedAt {get; set; }

        /// <summary>
        /// Gets or sets oldest cloud recovery point time.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "oldestRecoveryPoint")]
        public System.DateTime? OldestRecoveryPoint {get; set; }

        /// <summary>
        /// Gets or sets cloud recovery point count.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "recoveryPointCount")]
        public int? RecoveryPointCount {get; set; }

        /// <summary>
        /// Gets or sets oldest disk recovery point time.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "onPremiseOldestRecoveryPoint")]
        public System.DateTime? OnPremiseOldestRecoveryPoint {get; set; }

        /// <summary>
        /// Gets or sets latest disk recovery point time.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "onPremiseLatestRecoveryPoint")]
        public System.DateTime? OnPremiseLatestRecoveryPoint {get; set; }

        /// <summary>
        /// Gets or sets disk recovery point count.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "onPremiseRecoveryPointCount")]
        public int? OnPremiseRecoveryPointCount {get; set; }

        /// <summary>
        /// Gets or sets to check if backup item is collocated.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "isCollocated")]
        public bool? IsCollocated {get; set; }

        /// <summary>
        /// Gets or sets protection group name of the backup item.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "protectionGroupName")]
        public string ProtectionGroupName {get; set; }

        /// <summary>
        /// Gets or sets used Disk storage in bytes.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "diskStorageUsedInBytes")]
        public string DiskStorageUsedInBytes {get; set; }

        /// <summary>
        /// Gets or sets total Disk storage in bytes.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "totalDiskStorageSizeInBytes")]
        public string TotalDiskStorageSizeInBytes {get; set; }
    }
}