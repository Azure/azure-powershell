// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.RecoveryServices.Backup.CrossRegionRestore.Models
{
    using System.Linq;

    /// <summary>
    /// MAB workload-specific job.
    /// </summary>
    [Newtonsoft.Json.JsonObject("MabJob")]
    public partial class MabJob : Job
    {
        /// <summary>
        /// Initializes a new instance of the MabJob class.
        /// </summary>
        public MabJob()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the MabJob class.
        /// </summary>

        /// <param name="entityFriendlyName">Friendly name of the entity on which the current job is executing.
        /// </param>

        /// <param name="backupManagementType">Backup management type to execute the current job.
        /// Possible values include: 'Invalid', 'AzureIaasVM', 'MAB', 'DPM',
        /// 'AzureBackupServer', 'AzureSql', 'AzureStorage', 'AzureWorkload',
        /// 'DefaultBackup'</param>

        /// <param name="operation">The operation name.
        /// </param>

        /// <param name="status">Job status.
        /// </param>

        /// <param name="startTime">The start time.
        /// </param>

        /// <param name="endTime">The end time.
        /// </param>

        /// <param name="activityId">ActivityId of job.
        /// </param>

        /// <param name="duration">Time taken by job to run.
        /// </param>

        /// <param name="actionsInfo">The state/actions applicable on jobs like cancel/retry.
        /// </param>

        /// <param name="mabServerName">Name of server protecting the DS.
        /// </param>

        /// <param name="mabServerType">Server type of MAB container.
        /// Possible values include: 'Invalid', 'Unknown', 'IaasVMContainer',
        /// 'IaasVMServiceContainer', 'DPMContainer', 'AzureBackupServerContainer',
        /// 'MABContainer', 'Cluster', 'AzureSqlContainer', 'Windows', 'VCenter',
        /// 'VMAppContainer', 'SQLAGWorkLoadContainer', 'StorageContainer',
        /// 'GenericContainer'</param>

        /// <param name="workloadType">Workload type of backup item.
        /// Possible values include: 'Invalid', 'VM', 'FileFolder', 'AzureSqlDb',
        /// 'SQLDB', 'Exchange', 'Sharepoint', 'VMwareVM', 'SystemState', 'Client',
        /// 'GenericDataSource', 'SQLDataBase', 'AzureFileShare', 'SAPHanaDatabase',
        /// 'SAPAseDatabase'</param>

        /// <param name="errorDetails">The errors.
        /// </param>

        /// <param name="extendedInfo">Additional information on the job.
        /// </param>
        public MabJob(string entityFriendlyName = default(string), string backupManagementType = default(string), string operation = default(string), string status = default(string), System.DateTime? startTime = default(System.DateTime?), System.DateTime? endTime = default(System.DateTime?), string activityId = default(string), System.TimeSpan? duration = default(System.TimeSpan?), System.Collections.Generic.IList<JobSupportedAction?> actionsInfo = default(System.Collections.Generic.IList<JobSupportedAction?>), string mabServerName = default(string), string mabServerType = default(string), string workloadType = default(string), System.Collections.Generic.IList<MabErrorInfo> errorDetails = default(System.Collections.Generic.IList<MabErrorInfo>), MabJobExtendedInfo extendedInfo = default(MabJobExtendedInfo))

        : base(entityFriendlyName, backupManagementType, operation, status, startTime, endTime, activityId)
        {
            this.Duration = duration;
            this.ActionsInfo = actionsInfo;
            this.MabServerName = mabServerName;
            this.MabServerType = mabServerType;
            this.WorkloadType = workloadType;
            this.ErrorDetails = errorDetails;
            this.ExtendedInfo = extendedInfo;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets or sets time taken by job to run.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "duration")]
        public System.TimeSpan? Duration {get; set; }

        /// <summary>
        /// Gets or sets the state/actions applicable on jobs like cancel/retry.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "actionsInfo")]
        public System.Collections.Generic.IList<JobSupportedAction?> ActionsInfo {get; set; }

        /// <summary>
        /// Gets or sets name of server protecting the DS.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "mabServerName")]
        public string MabServerName {get; set; }

        /// <summary>
        /// Gets or sets server type of MAB container. Possible values include: &#39;Invalid&#39;, &#39;Unknown&#39;, &#39;IaasVMContainer&#39;, &#39;IaasVMServiceContainer&#39;, &#39;DPMContainer&#39;, &#39;AzureBackupServerContainer&#39;, &#39;MABContainer&#39;, &#39;Cluster&#39;, &#39;AzureSqlContainer&#39;, &#39;Windows&#39;, &#39;VCenter&#39;, &#39;VMAppContainer&#39;, &#39;SQLAGWorkLoadContainer&#39;, &#39;StorageContainer&#39;, &#39;GenericContainer&#39;
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "mabServerType")]
        public string MabServerType {get; set; }

        /// <summary>
        /// Gets or sets workload type of backup item. Possible values include: &#39;Invalid&#39;, &#39;VM&#39;, &#39;FileFolder&#39;, &#39;AzureSqlDb&#39;, &#39;SQLDB&#39;, &#39;Exchange&#39;, &#39;Sharepoint&#39;, &#39;VMwareVM&#39;, &#39;SystemState&#39;, &#39;Client&#39;, &#39;GenericDataSource&#39;, &#39;SQLDataBase&#39;, &#39;AzureFileShare&#39;, &#39;SAPHanaDatabase&#39;, &#39;SAPAseDatabase&#39;
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "workloadType")]
        public string WorkloadType {get; set; }

        /// <summary>
        /// Gets or sets the errors.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "errorDetails")]
        public System.Collections.Generic.IList<MabErrorInfo> ErrorDetails {get; set; }

        /// <summary>
        /// Gets or sets additional information on the job.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "extendedInfo")]
        public MabJobExtendedInfo ExtendedInfo {get; set; }
    }
}