// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.RecoveryServices.Backup.CrossRegionRestore.Models
{
    using System.Linq;

    /// <summary>
    /// Defines workload agnostic properties for a job.
    /// </summary>
    [Newtonsoft.Json.JsonObject("Job")]
    public partial class Job
    {
        /// <summary>
        /// Initializes a new instance of the Job class.
        /// </summary>
        public Job()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the Job class.
        /// </summary>

        /// <param name="entityFriendlyName">Friendly name of the entity on which the current job is executing.
        /// </param>

        /// <param name="backupManagementType">Backup management type to execute the current job.
        /// Possible values include: 'Invalid', 'AzureIaasVM', 'MAB', 'DPM',
        /// 'AzureBackupServer', 'AzureSql', 'AzureStorage', 'AzureWorkload',
        /// 'DefaultBackup'</param>

        /// <param name="operation">The operation name.
        /// </param>

        /// <param name="status">Job status.
        /// </param>

        /// <param name="startTime">The start time.
        /// </param>

        /// <param name="endTime">The end time.
        /// </param>

        /// <param name="activityId">ActivityId of job.
        /// </param>
        public Job(string entityFriendlyName = default(string), string backupManagementType = default(string), string operation = default(string), string status = default(string), System.DateTime? startTime = default(System.DateTime?), System.DateTime? endTime = default(System.DateTime?), string activityId = default(string))

        {
            this.EntityFriendlyName = entityFriendlyName;
            this.BackupManagementType = backupManagementType;
            this.Operation = operation;
            this.Status = status;
            this.StartTime = startTime;
            this.EndTime = endTime;
            this.ActivityId = activityId;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets or sets friendly name of the entity on which the current job is
        /// executing.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "entityFriendlyName")]
        public string EntityFriendlyName {get; set; }

        /// <summary>
        /// Gets or sets backup management type to execute the current job. Possible values include: &#39;Invalid&#39;, &#39;AzureIaasVM&#39;, &#39;MAB&#39;, &#39;DPM&#39;, &#39;AzureBackupServer&#39;, &#39;AzureSql&#39;, &#39;AzureStorage&#39;, &#39;AzureWorkload&#39;, &#39;DefaultBackup&#39;
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "backupManagementType")]
        public string BackupManagementType {get; set; }

        /// <summary>
        /// Gets or sets the operation name.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "operation")]
        public string Operation {get; set; }

        /// <summary>
        /// Gets or sets job status.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "status")]
        public string Status {get; set; }

        /// <summary>
        /// Gets or sets the start time.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "startTime")]
        public System.DateTime? StartTime {get; set; }

        /// <summary>
        /// Gets or sets the end time.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "endTime")]
        public System.DateTime? EndTime {get; set; }

        /// <summary>
        /// Gets or sets activityId of job.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "activityId")]
        public string ActivityId {get; set; }
    }
}