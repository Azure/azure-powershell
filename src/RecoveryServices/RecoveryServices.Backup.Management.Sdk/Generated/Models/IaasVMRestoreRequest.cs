// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.RecoveryServices.Backup.Models
{
    using System.Linq;

    /// <summary>
    /// IaaS VM workload-specific restore.
    /// </summary>
    [Newtonsoft.Json.JsonObject("IaasVMRestoreRequest")]
    public partial class IaasVMRestoreRequest : RestoreRequest
    {
        /// <summary>
        /// Initializes a new instance of the IaasVMRestoreRequest class.
        /// </summary>
        public IaasVMRestoreRequest()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the IaasVMRestoreRequest class.
        /// </summary>

        /// <param name="recoveryPointId">ID of the backup copy to be recovered.
        /// </param>

        /// <param name="recoveryType">Type of this recovery.
        /// Possible values include: 'Invalid', 'OriginalLocation',
        /// 'AlternateLocation', 'RestoreDisks', 'Offline'</param>

        /// <param name="sourceResourceId">Fully qualified ARM ID of the VM which is being recovered.
        /// </param>

        /// <param name="targetVirtualMachineId">This is the complete ARM Id of the VM that will be created.
        /// For e.g.
        /// /subscriptions/{subId}/resourcegroups/{rg}/provider/Microsoft.Compute/virtualmachines/{vm}
        /// </param>

        /// <param name="targetResourceGroupId">This is the ARM Id of the resource group that you want to create for this
        /// Virtual machine and other artifacts.
        /// For e.g. /subscriptions/{subId}/resourcegroups/{rg}
        /// </param>

        /// <param name="storageAccountId">Fully qualified ARM ID of the storage account to which the VM has to be
        /// restored.
        /// </param>

        /// <param name="virtualNetworkId">This is the virtual network Id of the vnet that will be attached to the
        /// virtual machine.
        /// User will be validated for join action permissions in the linked access.
        /// </param>

        /// <param name="subnetId">Subnet ID, is the subnet ID associated with the to be restored VM. For
        /// Classic VMs it would be
        /// {VnetID}/Subnet/{SubnetName} and, for the Azure Resource Manager VMs it
        /// would be ARM resource ID used to represent
        /// the subnet.
        /// </param>

        /// <param name="targetDomainNameId">Fully qualified ARM ID of the domain name to be associated to the VM being
        /// restored. This applies only to Classic
        /// Virtual Machines.
        /// </param>

        /// <param name="region">Region in which the virtual machine is restored.
        /// </param>

        /// <param name="affinityGroup">Affinity group associated to VM to be restored. Used only for Classic
        /// Compute Virtual Machines.
        /// </param>

        /// <param name="createNewCloudService">Should a new cloud service be created while restoring the VM. If this is
        /// false, VM will be restored to the same
        /// cloud service as it was at the time of backup.
        /// </param>

        /// <param name="originalStorageAccountOption">Original Storage Account Option
        /// </param>

        /// <param name="encryptionDetails">Details needed if the VM was encrypted at the time of backup.
        /// </param>

        /// <param name="restoreDiskLunList">List of Disk LUNs for partial restore
        /// </param>

        /// <param name="restoreWithManagedDisks">Flag to denote of an Unmanaged disk VM should be restored with Managed
        /// disks.
        /// </param>

        /// <param name="diskEncryptionSetId">DiskEncryptionSet&#39;s ID - needed if the VM needs to be encrypted at rest
        /// during restore with customer managed key.
        /// </param>

        /// <param name="zones">Target zone where the VM and its disks should be restored.
        /// </param>

        /// <param name="identityInfo">Managed Identity information required to access customer storage account.
        /// </param>

        /// <param name="identityBasedRestoreDetails">IaaS VM workload specific restore details for restores using managed
        /// identity.
        /// </param>
        public IaasVMRestoreRequest(string recoveryPointId = default(string), string recoveryType = default(string), string sourceResourceId = default(string), string targetVirtualMachineId = default(string), string targetResourceGroupId = default(string), string storageAccountId = default(string), string virtualNetworkId = default(string), string subnetId = default(string), string targetDomainNameId = default(string), string region = default(string), string affinityGroup = default(string), bool? createNewCloudService = default(bool?), bool? originalStorageAccountOption = default(bool?), EncryptionDetails encryptionDetails = default(EncryptionDetails), System.Collections.Generic.IList<int?> restoreDiskLunList = default(System.Collections.Generic.IList<int?>), bool? restoreWithManagedDisks = default(bool?), string diskEncryptionSetId = default(string), System.Collections.Generic.IList<string> zones = default(System.Collections.Generic.IList<string>), IdentityInfo identityInfo = default(IdentityInfo), IdentityBasedRestoreDetails identityBasedRestoreDetails = default(IdentityBasedRestoreDetails))

        {
            this.RecoveryPointId = recoveryPointId;
            this.RecoveryType = recoveryType;
            this.SourceResourceId = sourceResourceId;
            this.TargetVirtualMachineId = targetVirtualMachineId;
            this.TargetResourceGroupId = targetResourceGroupId;
            this.StorageAccountId = storageAccountId;
            this.VirtualNetworkId = virtualNetworkId;
            this.SubnetId = subnetId;
            this.TargetDomainNameId = targetDomainNameId;
            this.Region = region;
            this.AffinityGroup = affinityGroup;
            this.CreateNewCloudService = createNewCloudService;
            this.OriginalStorageAccountOption = originalStorageAccountOption;
            this.EncryptionDetails = encryptionDetails;
            this.RestoreDiskLunList = restoreDiskLunList;
            this.RestoreWithManagedDisks = restoreWithManagedDisks;
            this.DiskEncryptionSetId = diskEncryptionSetId;
            this.Zones = zones;
            this.IdentityInfo = identityInfo;
            this.IdentityBasedRestoreDetails = identityBasedRestoreDetails;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets or sets iD of the backup copy to be recovered.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "recoveryPointId")]
        public string RecoveryPointId {get; set; }

        /// <summary>
        /// Gets or sets type of this recovery. Possible values include: &#39;Invalid&#39;, &#39;OriginalLocation&#39;, &#39;AlternateLocation&#39;, &#39;RestoreDisks&#39;, &#39;Offline&#39;
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "recoveryType")]
        public string RecoveryType {get; set; }

        /// <summary>
        /// Gets or sets fully qualified ARM ID of the VM which is being recovered.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "sourceResourceId")]
        public string SourceResourceId {get; set; }

        /// <summary>
        /// Gets or sets this is the complete ARM Id of the VM that will be created.
        /// For e.g.
        /// /subscriptions/{subId}/resourcegroups/{rg}/provider/Microsoft.Compute/virtualmachines/{vm}
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "targetVirtualMachineId")]
        public string TargetVirtualMachineId {get; set; }

        /// <summary>
        /// Gets or sets this is the ARM Id of the resource group that you want to
        /// create for this Virtual machine and other artifacts.
        /// For e.g. /subscriptions/{subId}/resourcegroups/{rg}
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "targetResourceGroupId")]
        public string TargetResourceGroupId {get; set; }

        /// <summary>
        /// Gets or sets fully qualified ARM ID of the storage account to which the VM
        /// has to be restored.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "storageAccountId")]
        public string StorageAccountId {get; set; }

        /// <summary>
        /// Gets or sets this is the virtual network Id of the vnet that will be
        /// attached to the virtual machine.
        /// User will be validated for join action permissions in the linked access.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "virtualNetworkId")]
        public string VirtualNetworkId {get; set; }

        /// <summary>
        /// Gets or sets subnet ID, is the subnet ID associated with the to be restored
        /// VM. For Classic VMs it would be
        /// {VnetID}/Subnet/{SubnetName} and, for the Azure Resource Manager VMs it
        /// would be ARM resource ID used to represent
        /// the subnet.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "subnetId")]
        public string SubnetId {get; set; }

        /// <summary>
        /// Gets or sets fully qualified ARM ID of the domain name to be associated to
        /// the VM being restored. This applies only to Classic
        /// Virtual Machines.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "targetDomainNameId")]
        public string TargetDomainNameId {get; set; }

        /// <summary>
        /// Gets or sets region in which the virtual machine is restored.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "region")]
        public string Region {get; set; }

        /// <summary>
        /// Gets or sets affinity group associated to VM to be restored. Used only for
        /// Classic Compute Virtual Machines.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "affinityGroup")]
        public string AffinityGroup {get; set; }

        /// <summary>
        /// Gets or sets should a new cloud service be created while restoring the VM.
        /// If this is false, VM will be restored to the same
        /// cloud service as it was at the time of backup.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "createNewCloudService")]
        public bool? CreateNewCloudService {get; set; }

        /// <summary>
        /// Gets or sets original Storage Account Option
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "originalStorageAccountOption")]
        public bool? OriginalStorageAccountOption {get; set; }

        /// <summary>
        /// Gets or sets details needed if the VM was encrypted at the time of backup.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "encryptionDetails")]
        public EncryptionDetails EncryptionDetails {get; set; }

        /// <summary>
        /// Gets or sets list of Disk LUNs for partial restore
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "restoreDiskLunList")]
        public System.Collections.Generic.IList<int?> RestoreDiskLunList {get; set; }

        /// <summary>
        /// Gets or sets flag to denote of an Unmanaged disk VM should be restored with
        /// Managed disks.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "restoreWithManagedDisks")]
        public bool? RestoreWithManagedDisks {get; set; }

        /// <summary>
        /// Gets or sets diskEncryptionSet&#39;s ID - needed if the VM needs to be
        /// encrypted at rest during restore with customer managed key.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "diskEncryptionSetId")]
        public string DiskEncryptionSetId {get; set; }

        /// <summary>
        /// Gets or sets target zone where the VM and its disks should be restored.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "zones")]
        public System.Collections.Generic.IList<string> Zones {get; set; }

        /// <summary>
        /// Gets or sets managed Identity information required to access customer
        /// storage account.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "identityInfo")]
        public IdentityInfo IdentityInfo {get; set; }

        /// <summary>
        /// Gets or sets iaaS VM workload specific restore details for restores using
        /// managed identity.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "identityBasedRestoreDetails")]
        public IdentityBasedRestoreDetails IdentityBasedRestoreDetails {get; set; }
    }
}