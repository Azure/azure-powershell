// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.RecoveryServices.Backup.Models
{
    using System.Linq;

    /// <summary>
    /// Base class for validate operation request.
    /// </summary>
    public partial class ValidateOperationRequestResource
    {
        /// <summary>
        /// Initializes a new instance of the ValidateOperationRequestResource class.
        /// </summary>
        public ValidateOperationRequestResource()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the ValidateOperationRequestResource class.
        /// </summary>

        /// <param name="id">Recovery point ID.
        /// </param>

        /// <param name="properties">ValidateOperationRequestResource properties
        /// </param>
        public ValidateOperationRequestResource(string id, ValidateOperationRequest properties)

        {
            this.Id = id;
            this.Properties = properties;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets or sets recovery point ID.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "id")]
        public string Id {get; set; }

        /// <summary>
        /// Gets or sets validateOperationRequestResource properties
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties")]
        public ValidateOperationRequest Properties {get; set; }
        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (this.Id == null)
            {
                throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.CannotBeNull, "Id");
            }
            if (this.Properties == null)
            {
                throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.CannotBeNull, "Properties");
            }


        }
    }
}