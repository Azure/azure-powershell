// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.RecoveryServices.Backup.Models
{
    using System.Linq;

    /// <summary>
    /// Azure Recovery Services Vault specific protection intent item.
    /// </summary>
    [Newtonsoft.Json.JsonObject("RecoveryServiceVaultItem")]
    public partial class AzureRecoveryServiceVaultProtectionIntent : ProtectionIntent
    {
        /// <summary>
        /// Initializes a new instance of the AzureRecoveryServiceVaultProtectionIntent class.
        /// </summary>
        public AzureRecoveryServiceVaultProtectionIntent()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the AzureRecoveryServiceVaultProtectionIntent class.
        /// </summary>

        /// <param name="backupManagementType">Type of backup management for the backed up item.
        /// Possible values include: &#39;Invalid&#39;, &#39;AzureIaasVM&#39;, &#39;MAB&#39;, &#39;DPM&#39;,
        /// &#39;AzureBackupServer&#39;, &#39;AzureSql&#39;, &#39;AzureStorage&#39;, &#39;AzureWorkload&#39;,
        /// &#39;DefaultBackup&#39;</param>

        /// <param name="sourceResourceId">ARM ID of the resource to be backed up.
        /// </param>

        /// <param name="itemId">ID of the item which is getting protected, In case of Azure Vm , it is
        /// ProtectedItemId
        /// </param>

        /// <param name="policyId">ID of the backup policy with which this item is backed up.
        /// </param>

        /// <param name="protectionState">Backup state of this backup item.
        /// Possible values include: &#39;Invalid&#39;, &#39;NotProtected&#39;, &#39;Protecting&#39;,
        /// &#39;Protected&#39;, &#39;ProtectionFailed&#39;</param>
        public AzureRecoveryServiceVaultProtectionIntent(string backupManagementType = default(string), string sourceResourceId = default(string), string itemId = default(string), string policyId = default(string), string protectionState = default(string))

        : base(backupManagementType, sourceResourceId, itemId, policyId, protectionState)
        {
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

    }
}