// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.RecoveryServices.Backup.Models
{
    using System.Linq;

    /// <summary>
    /// Base class for backup ProtectionIntent.
    /// </summary>
    [Newtonsoft.Json.JsonObject("ProtectionIntent")]
    public partial class ProtectionIntent
    {
        /// <summary>
        /// Initializes a new instance of the ProtectionIntent class.
        /// </summary>
        public ProtectionIntent()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the ProtectionIntent class.
        /// </summary>

        /// <param name="backupManagementType">Type of backup management for the backed up item.
        /// Possible values include: 'Invalid', 'AzureIaasVM', 'MAB', 'DPM',
        /// 'AzureBackupServer', 'AzureSql', 'AzureStorage', 'AzureWorkload',
        /// 'DefaultBackup'</param>

        /// <param name="sourceResourceId">ARM ID of the resource to be backed up.
        /// </param>

        /// <param name="itemId">ID of the item which is getting protected, In case of Azure Vm , it is
        /// ProtectedItemId
        /// </param>

        /// <param name="policyId">ID of the backup policy with which this item is backed up.
        /// </param>

        /// <param name="protectionState">Backup state of this backup item.
        /// Possible values include: 'Invalid', 'NotProtected', 'Protecting',
        /// 'Protected', 'ProtectionFailed'</param>
        public ProtectionIntent(string backupManagementType = default(string), string sourceResourceId = default(string), string itemId = default(string), string policyId = default(string), string protectionState = default(string))

        {
            this.BackupManagementType = backupManagementType;
            this.SourceResourceId = sourceResourceId;
            this.ItemId = itemId;
            this.PolicyId = policyId;
            this.ProtectionState = protectionState;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets or sets type of backup management for the backed up item. Possible values include: &#39;Invalid&#39;, &#39;AzureIaasVM&#39;, &#39;MAB&#39;, &#39;DPM&#39;, &#39;AzureBackupServer&#39;, &#39;AzureSql&#39;, &#39;AzureStorage&#39;, &#39;AzureWorkload&#39;, &#39;DefaultBackup&#39;
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "backupManagementType")]
        public string BackupManagementType {get; set; }

        /// <summary>
        /// Gets or sets aRM ID of the resource to be backed up.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "sourceResourceId")]
        public string SourceResourceId {get; set; }

        /// <summary>
        /// Gets or sets iD of the item which is getting protected, In case of Azure Vm
        /// , it is ProtectedItemId
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "itemId")]
        public string ItemId {get; set; }

        /// <summary>
        /// Gets or sets iD of the backup policy with which this item is backed up.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "policyId")]
        public string PolicyId {get; set; }

        /// <summary>
        /// Gets or sets backup state of this backup item. Possible values include: &#39;Invalid&#39;, &#39;NotProtected&#39;, &#39;Protecting&#39;, &#39;Protected&#39;, &#39;ProtectionFailed&#39;
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "protectionState")]
        public string ProtectionState {get; set; }
    }
}