// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.RecoveryServices.Backup.Models
{
    using System.Linq;

    /// <summary>
    /// Yearly retention schedule.
    /// </summary>
    public partial class YearlyRetentionSchedule
    {
        /// <summary>
        /// Initializes a new instance of the YearlyRetentionSchedule class.
        /// </summary>
        public YearlyRetentionSchedule()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the YearlyRetentionSchedule class.
        /// </summary>

        /// <param name="retentionScheduleFormatType">Retention schedule format for yearly retention policy.
        /// Possible values include: &#39;Invalid&#39;, &#39;Daily&#39;, &#39;Weekly&#39;</param>

        /// <param name="monthsOfYear">List of months of year of yearly retention policy.
        /// </param>

        /// <param name="retentionScheduleDaily">Daily retention format for yearly retention policy.
        /// </param>

        /// <param name="retentionScheduleWeekly">Weekly retention format for yearly retention policy.
        /// </param>

        /// <param name="retentionTimes">Retention times of retention policy.
        /// </param>

        /// <param name="retentionDuration">Retention duration of retention Policy.
        /// </param>
        public YearlyRetentionSchedule(string retentionScheduleFormatType = default(string), System.Collections.Generic.IList<MonthOfYear?> monthsOfYear = default(System.Collections.Generic.IList<MonthOfYear?>), DailyRetentionFormat retentionScheduleDaily = default(DailyRetentionFormat), WeeklyRetentionFormat retentionScheduleWeekly = default(WeeklyRetentionFormat), System.Collections.Generic.IList<System.DateTime?> retentionTimes = default(System.Collections.Generic.IList<System.DateTime?>), RetentionDuration retentionDuration = default(RetentionDuration))

        {
            this.RetentionScheduleFormatType = retentionScheduleFormatType;
            this.MonthsOfYear = monthsOfYear;
            this.RetentionScheduleDaily = retentionScheduleDaily;
            this.RetentionScheduleWeekly = retentionScheduleWeekly;
            this.RetentionTimes = retentionTimes;
            this.RetentionDuration = retentionDuration;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets or sets retention schedule format for yearly retention policy. Possible values include: &#39;Invalid&#39;, &#39;Daily&#39;, &#39;Weekly&#39;
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "retentionScheduleFormatType")]
        public string RetentionScheduleFormatType {get; set; }

        /// <summary>
        /// Gets or sets list of months of year of yearly retention policy.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "monthsOfYear")]
        public System.Collections.Generic.IList<MonthOfYear?> MonthsOfYear {get; set; }

        /// <summary>
        /// Gets or sets daily retention format for yearly retention policy.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "retentionScheduleDaily")]
        public DailyRetentionFormat RetentionScheduleDaily {get; set; }

        /// <summary>
        /// Gets or sets weekly retention format for yearly retention policy.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "retentionScheduleWeekly")]
        public WeeklyRetentionFormat RetentionScheduleWeekly {get; set; }

        /// <summary>
        /// Gets or sets retention times of retention policy.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "retentionTimes")]
        public System.Collections.Generic.IList<System.DateTime?> RetentionTimes {get; set; }

        /// <summary>
        /// Gets or sets retention duration of retention Policy.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "retentionDuration")]
        public RetentionDuration RetentionDuration {get; set; }
    }
}