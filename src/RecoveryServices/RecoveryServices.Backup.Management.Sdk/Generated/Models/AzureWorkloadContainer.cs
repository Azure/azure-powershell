// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.RecoveryServices.Backup.Models
{
    using System.Linq;

    /// <summary>
    /// Container for the workloads running inside Azure Compute or Classic
    /// Compute.
    /// </summary>
    [Newtonsoft.Json.JsonObject("AzureWorkloadContainer")]
    public partial class AzureWorkloadContainer : ProtectionContainer
    {
        /// <summary>
        /// Initializes a new instance of the AzureWorkloadContainer class.
        /// </summary>
        public AzureWorkloadContainer()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the AzureWorkloadContainer class.
        /// </summary>

        /// <param name="friendlyName">Friendly name of the container.
        /// </param>

        /// <param name="backupManagementType">Type of backup management for the container.
        /// Possible values include: 'Invalid', 'AzureIaasVM', 'MAB', 'DPM',
        /// 'AzureBackupServer', 'AzureSql', 'AzureStorage', 'AzureWorkload',
        /// 'DefaultBackup'</param>

        /// <param name="registrationStatus">Status of registration of the container with the Recovery Services Vault.
        /// </param>

        /// <param name="healthStatus">Status of health of the container.
        /// </param>

        /// <param name="protectableObjectType">Type of the protectable object associated with this container
        /// </param>

        /// <param name="sourceResourceId">ARM ID of the virtual machine represented by this Azure Workload Container
        /// </param>

        /// <param name="lastUpdatedTime">Time stamp when this container was updated.
        /// </param>

        /// <param name="extendedInfo">Additional details of a workload container.
        /// </param>

        /// <param name="workloadType">Workload type for which registration was sent.
        /// Possible values include: 'Invalid', 'VM', 'FileFolder', 'AzureSqlDb',
        /// 'SQLDB', 'Exchange', 'Sharepoint', 'VMwareVM', 'SystemState', 'Client',
        /// 'GenericDataSource', 'SQLDataBase', 'AzureFileShare', 'SAPHanaDatabase',
        /// 'SAPAseDatabase', 'SAPHanaDBInstance'</param>

        /// <param name="operationType">Re-Do Operation
        /// Possible values include: 'Invalid', 'Register', 'Reregister'</param>
        public AzureWorkloadContainer(string friendlyName = default(string), string backupManagementType = default(string), string registrationStatus = default(string), string healthStatus = default(string), string protectableObjectType = default(string), string sourceResourceId = default(string), System.DateTime? lastUpdatedTime = default(System.DateTime?), AzureWorkloadContainerExtendedInfo extendedInfo = default(AzureWorkloadContainerExtendedInfo), string workloadType = default(string), string operationType = default(string))

        : base(friendlyName, backupManagementType, registrationStatus, healthStatus, protectableObjectType)
        {
            this.SourceResourceId = sourceResourceId;
            this.LastUpdatedTime = lastUpdatedTime;
            this.ExtendedInfo = extendedInfo;
            this.WorkloadType = workloadType;
            this.OperationType = operationType;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets or sets aRM ID of the virtual machine represented by this Azure
        /// Workload Container
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "sourceResourceId")]
        public string SourceResourceId {get; set; }

        /// <summary>
        /// Gets or sets time stamp when this container was updated.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "lastUpdatedTime")]
        public System.DateTime? LastUpdatedTime {get; set; }

        /// <summary>
        /// Gets or sets additional details of a workload container.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "extendedInfo")]
        public AzureWorkloadContainerExtendedInfo ExtendedInfo {get; set; }

        /// <summary>
        /// Gets or sets workload type for which registration was sent. Possible values include: &#39;Invalid&#39;, &#39;VM&#39;, &#39;FileFolder&#39;, &#39;AzureSqlDb&#39;, &#39;SQLDB&#39;, &#39;Exchange&#39;, &#39;Sharepoint&#39;, &#39;VMwareVM&#39;, &#39;SystemState&#39;, &#39;Client&#39;, &#39;GenericDataSource&#39;, &#39;SQLDataBase&#39;, &#39;AzureFileShare&#39;, &#39;SAPHanaDatabase&#39;, &#39;SAPAseDatabase&#39;, &#39;SAPHanaDBInstance&#39;
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "workloadType")]
        public string WorkloadType {get; set; }

        /// <summary>
        /// Gets or sets re-Do Operation Possible values include: &#39;Invalid&#39;, &#39;Register&#39;, &#39;Reregister&#39;
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "operationType")]
        public string OperationType {get; set; }
    }
}