// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.RecoveryServices.Backup.Models
{
    using System.Linq;

    /// <summary>
    /// The base backup engine class. All workload specific backup engines derive
    /// from this class.
    /// </summary>
    [Newtonsoft.Json.JsonObject("BackupEngineBase")]
    public partial class BackupEngineBase
    {
        /// <summary>
        /// Initializes a new instance of the BackupEngineBase class.
        /// </summary>
        public BackupEngineBase()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the BackupEngineBase class.
        /// </summary>

        /// <param name="friendlyName">Friendly name of the backup engine.
        /// </param>

        /// <param name="backupManagementType">Type of backup management for the backup engine.
        /// Possible values include: 'Invalid', 'AzureIaasVM', 'MAB', 'DPM',
        /// 'AzureBackupServer', 'AzureSql', 'AzureStorage', 'AzureWorkload',
        /// 'DefaultBackup'</param>

        /// <param name="registrationStatus">Registration status of the backup engine with the Recovery Services Vault.
        /// </param>

        /// <param name="backupEngineState">Status of the backup engine with the Recovery Services Vault. =
        /// {Active/Deleting/DeleteFailed}
        /// </param>

        /// <param name="healthStatus">Backup status of the backup engine.
        /// </param>

        /// <param name="canReRegister">Flag indicating if the backup engine be registered, once already
        /// registered.
        /// </param>

        /// <param name="backupEngineId">ID of the backup engine.
        /// </param>

        /// <param name="dpmVersion">Backup engine version
        /// </param>

        /// <param name="azureBackupAgentVersion">Backup agent version
        /// </param>

        /// <param name="isAzureBackupAgentUpgradeAvailable">To check if backup agent upgrade available
        /// </param>

        /// <param name="isDpmUpgradeAvailable">To check if backup engine upgrade available
        /// </param>

        /// <param name="extendedInfo">Extended info of the backupengine
        /// </param>
        public BackupEngineBase(string friendlyName = default(string), string backupManagementType = default(string), string registrationStatus = default(string), string backupEngineState = default(string), string healthStatus = default(string), bool? canReRegister = default(bool?), string backupEngineId = default(string), string dpmVersion = default(string), string azureBackupAgentVersion = default(string), bool? isAzureBackupAgentUpgradeAvailable = default(bool?), bool? isDpmUpgradeAvailable = default(bool?), BackupEngineExtendedInfo extendedInfo = default(BackupEngineExtendedInfo))

        {
            this.FriendlyName = friendlyName;
            this.BackupManagementType = backupManagementType;
            this.RegistrationStatus = registrationStatus;
            this.BackupEngineState = backupEngineState;
            this.HealthStatus = healthStatus;
            this.CanReRegister = canReRegister;
            this.BackupEngineId = backupEngineId;
            this.DpmVersion = dpmVersion;
            this.AzureBackupAgentVersion = azureBackupAgentVersion;
            this.IsAzureBackupAgentUpgradeAvailable = isAzureBackupAgentUpgradeAvailable;
            this.IsDpmUpgradeAvailable = isDpmUpgradeAvailable;
            this.ExtendedInfo = extendedInfo;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets or sets friendly name of the backup engine.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "friendlyName")]
        public string FriendlyName {get; set; }

        /// <summary>
        /// Gets or sets type of backup management for the backup engine. Possible values include: &#39;Invalid&#39;, &#39;AzureIaasVM&#39;, &#39;MAB&#39;, &#39;DPM&#39;, &#39;AzureBackupServer&#39;, &#39;AzureSql&#39;, &#39;AzureStorage&#39;, &#39;AzureWorkload&#39;, &#39;DefaultBackup&#39;
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "backupManagementType")]
        public string BackupManagementType {get; set; }

        /// <summary>
        /// Gets or sets registration status of the backup engine with the Recovery
        /// Services Vault.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "registrationStatus")]
        public string RegistrationStatus {get; set; }

        /// <summary>
        /// Gets or sets status of the backup engine with the Recovery Services Vault.
        /// = {Active/Deleting/DeleteFailed}
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "backupEngineState")]
        public string BackupEngineState {get; set; }

        /// <summary>
        /// Gets or sets backup status of the backup engine.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "healthStatus")]
        public string HealthStatus {get; set; }

        /// <summary>
        /// Gets or sets flag indicating if the backup engine be registered, once
        /// already registered.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "canReRegister")]
        public bool? CanReRegister {get; set; }

        /// <summary>
        /// Gets or sets iD of the backup engine.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "backupEngineId")]
        public string BackupEngineId {get; set; }

        /// <summary>
        /// Gets or sets backup engine version
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "dpmVersion")]
        public string DpmVersion {get; set; }

        /// <summary>
        /// Gets or sets backup agent version
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "azureBackupAgentVersion")]
        public string AzureBackupAgentVersion {get; set; }

        /// <summary>
        /// Gets or sets to check if backup agent upgrade available
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "isAzureBackupAgentUpgradeAvailable")]
        public bool? IsAzureBackupAgentUpgradeAvailable {get; set; }

        /// <summary>
        /// Gets or sets to check if backup engine upgrade available
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "isDpmUpgradeAvailable")]
        public bool? IsDpmUpgradeAvailable {get; set; }

        /// <summary>
        /// Gets or sets extended info of the backupengine
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "extendedInfo")]
        public BackupEngineExtendedInfo ExtendedInfo {get; set; }
    }
}