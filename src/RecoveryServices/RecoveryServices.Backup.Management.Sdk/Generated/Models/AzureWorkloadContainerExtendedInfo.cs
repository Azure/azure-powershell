// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.RecoveryServices.Backup.Models
{
    using System.Linq;

    /// <summary>
    /// Extended information of the container.
    /// </summary>
    public partial class AzureWorkloadContainerExtendedInfo
    {
        /// <summary>
        /// Initializes a new instance of the AzureWorkloadContainerExtendedInfo class.
        /// </summary>
        public AzureWorkloadContainerExtendedInfo()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the AzureWorkloadContainerExtendedInfo class.
        /// </summary>

        /// <param name="hostServerName">Host Os Name in case of Stand Alone and Cluster Name in case of distributed
        /// container.
        /// </param>

        /// <param name="inquiryInfo">Inquiry Status for the container.
        /// </param>

        /// <param name="nodesList">List of the nodes in case of distributed container.
        /// </param>
        public AzureWorkloadContainerExtendedInfo(string hostServerName = default(string), InquiryInfo inquiryInfo = default(InquiryInfo), System.Collections.Generic.IList<DistributedNodesInfo> nodesList = default(System.Collections.Generic.IList<DistributedNodesInfo>))

        {
            this.HostServerName = hostServerName;
            this.InquiryInfo = inquiryInfo;
            this.NodesList = nodesList;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets or sets host Os Name in case of Stand Alone and Cluster Name in case
        /// of distributed container.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "hostServerName")]
        public string HostServerName {get; set; }

        /// <summary>
        /// Gets or sets inquiry Status for the container.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "inquiryInfo")]
        public InquiryInfo InquiryInfo {get; set; }

        /// <summary>
        /// Gets or sets list of the nodes in case of distributed container.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "nodesList")]
        public System.Collections.Generic.IList<DistributedNodesInfo> NodesList {get; set; }
    }
}