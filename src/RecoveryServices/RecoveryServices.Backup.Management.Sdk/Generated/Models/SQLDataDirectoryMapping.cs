// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.RecoveryServices.Backup.Models
{
    using System.Linq;

    /// <summary>
    /// Encapsulates information regarding data directory
    /// </summary>
    public partial class SQLDataDirectoryMapping
    {
        /// <summary>
        /// Initializes a new instance of the SQLDataDirectoryMapping class.
        /// </summary>
        public SQLDataDirectoryMapping()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the SQLDataDirectoryMapping class.
        /// </summary>

        /// <param name="mappingType">Type of data directory mapping
        /// Possible values include: &#39;Invalid&#39;, &#39;Data&#39;, &#39;Log&#39;</param>

        /// <param name="sourceLogicalName">Restore source logical name path
        /// </param>

        /// <param name="sourcePath">Restore source path
        /// </param>

        /// <param name="targetPath">Target path
        /// </param>
        public SQLDataDirectoryMapping(string mappingType = default(string), string sourceLogicalName = default(string), string sourcePath = default(string), string targetPath = default(string))

        {
            this.MappingType = mappingType;
            this.SourceLogicalName = sourceLogicalName;
            this.SourcePath = sourcePath;
            this.TargetPath = targetPath;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets or sets type of data directory mapping Possible values include: &#39;Invalid&#39;, &#39;Data&#39;, &#39;Log&#39;
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "mappingType")]
        public string MappingType {get; set; }

        /// <summary>
        /// Gets or sets restore source logical name path
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "sourceLogicalName")]
        public string SourceLogicalName {get; set; }

        /// <summary>
        /// Gets or sets restore source path
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "sourcePath")]
        public string SourcePath {get; set; }

        /// <summary>
        /// Gets or sets target path
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "targetPath")]
        public string TargetPath {get; set; }
    }
}