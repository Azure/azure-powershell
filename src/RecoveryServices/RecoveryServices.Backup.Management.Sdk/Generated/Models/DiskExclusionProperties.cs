// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.RecoveryServices.Backup.Models
{
    using System.Linq;

    public partial class DiskExclusionProperties
    {
        /// <summary>
        /// Initializes a new instance of the DiskExclusionProperties class.
        /// </summary>
        public DiskExclusionProperties()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the DiskExclusionProperties class.
        /// </summary>

        /// <param name="diskLunList">List of Disks&#39; Logical Unit Numbers (LUN) to be used for VM Protection.
        /// </param>

        /// <param name="isInclusionList">Flag to indicate whether DiskLunList is to be included/ excluded from
        /// backup.
        /// </param>
        public DiskExclusionProperties(System.Collections.Generic.IList<int?> diskLunList = default(System.Collections.Generic.IList<int?>), bool? isInclusionList = default(bool?))

        {
            this.DiskLunList = diskLunList;
            this.IsInclusionList = isInclusionList;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets or sets list of Disks&#39; Logical Unit Numbers (LUN) to be used for VM
        /// Protection.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "diskLunList")]
        public System.Collections.Generic.IList<int?> DiskLunList {get; set; }

        /// <summary>
        /// Gets or sets flag to indicate whether DiskLunList is to be included/
        /// excluded from backup.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "isInclusionList")]
        public bool? IsInclusionList {get; set; }
    }
}