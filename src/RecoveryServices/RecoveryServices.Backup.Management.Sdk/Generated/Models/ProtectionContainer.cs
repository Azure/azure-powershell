// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.RecoveryServices.Backup.Models
{
    using System.Linq;

    /// <summary>
    /// Base class for container with backup items. Containers with specific
    /// workloads are derived from this class.
    /// </summary>
    [Newtonsoft.Json.JsonObject("ProtectionContainer")]
    public partial class ProtectionContainer
    {
        /// <summary>
        /// Initializes a new instance of the ProtectionContainer class.
        /// </summary>
        public ProtectionContainer()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the ProtectionContainer class.
        /// </summary>

        /// <param name="friendlyName">Friendly name of the container.
        /// </param>

        /// <param name="backupManagementType">Type of backup management for the container.
        /// Possible values include: &#39;Invalid&#39;, &#39;AzureIaasVM&#39;, &#39;MAB&#39;, &#39;DPM&#39;,
        /// &#39;AzureBackupServer&#39;, &#39;AzureSql&#39;, &#39;AzureStorage&#39;, &#39;AzureWorkload&#39;,
        /// &#39;DefaultBackup&#39;</param>

        /// <param name="registrationStatus">Status of registration of the container with the Recovery Services Vault.
        /// </param>

        /// <param name="healthStatus">Status of health of the container.
        /// </param>

        /// <param name="protectableObjectType">Type of the protectable object associated with this container
        /// </param>
        public ProtectionContainer(string friendlyName = default(string), string backupManagementType = default(string), string registrationStatus = default(string), string healthStatus = default(string), string protectableObjectType = default(string))

        {
            this.FriendlyName = friendlyName;
            this.BackupManagementType = backupManagementType;
            this.RegistrationStatus = registrationStatus;
            this.HealthStatus = healthStatus;
            this.ProtectableObjectType = protectableObjectType;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets or sets friendly name of the container.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "friendlyName")]
        public string FriendlyName {get; set; }

        /// <summary>
        /// Gets or sets type of backup management for the container. Possible values include: &#39;Invalid&#39;, &#39;AzureIaasVM&#39;, &#39;MAB&#39;, &#39;DPM&#39;, &#39;AzureBackupServer&#39;, &#39;AzureSql&#39;, &#39;AzureStorage&#39;, &#39;AzureWorkload&#39;, &#39;DefaultBackup&#39;
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "backupManagementType")]
        public string BackupManagementType {get; set; }

        /// <summary>
        /// Gets or sets status of registration of the container with the Recovery
        /// Services Vault.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "registrationStatus")]
        public string RegistrationStatus {get; set; }

        /// <summary>
        /// Gets or sets status of health of the container.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "healthStatus")]
        public string HealthStatus {get; set; }

        /// <summary>
        /// Gets or sets type of the protectable object associated with this container
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "protectableObjectType")]
        public string ProtectableObjectType {get; set; }
    }
}