// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.RecoveryServices.Backup.Models
{
    using System.Linq;

    /// <summary>
    /// AzureWorkload workload-specific backup request.
    /// </summary>
    [Newtonsoft.Json.JsonObject("AzureWorkloadBackupRequest")]
    public partial class AzureWorkloadBackupRequest : BackupRequest
    {
        /// <summary>
        /// Initializes a new instance of the AzureWorkloadBackupRequest class.
        /// </summary>
        public AzureWorkloadBackupRequest()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the AzureWorkloadBackupRequest class.
        /// </summary>

        /// <param name="backupType">Type of backup, viz. Full, Differential, Log or CopyOnlyFull
        /// Possible values include: &#39;Invalid&#39;, &#39;Full&#39;, &#39;Differential&#39;, &#39;Log&#39;,
        /// &#39;CopyOnlyFull&#39;, &#39;Incremental&#39;, &#39;SnapshotFull&#39;, &#39;SnapshotCopyOnlyFull&#39;</param>

        /// <param name="enableCompression">Bool for Compression setting
        /// </param>

        /// <param name="recoveryPointExpiryTimeInUtc">Backup copy will expire after the time specified (UTC).
        /// </param>
        public AzureWorkloadBackupRequest(string backupType = default(string), bool? enableCompression = default(bool?), System.DateTime? recoveryPointExpiryTimeInUtc = default(System.DateTime?))

        {
            this.BackupType = backupType;
            this.EnableCompression = enableCompression;
            this.RecoveryPointExpiryTimeInUtc = recoveryPointExpiryTimeInUtc;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets or sets type of backup, viz. Full, Differential, Log or CopyOnlyFull Possible values include: &#39;Invalid&#39;, &#39;Full&#39;, &#39;Differential&#39;, &#39;Log&#39;, &#39;CopyOnlyFull&#39;, &#39;Incremental&#39;, &#39;SnapshotFull&#39;, &#39;SnapshotCopyOnlyFull&#39;
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "backupType")]
        public string BackupType {get; set; }

        /// <summary>
        /// Gets or sets bool for Compression setting
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "enableCompression")]
        public bool? EnableCompression {get; set; }

        /// <summary>
        /// Gets or sets backup copy will expire after the time specified (UTC).
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "recoveryPointExpiryTimeInUTC")]
        public System.DateTime? RecoveryPointExpiryTimeInUtc {get; set; }
    }
}