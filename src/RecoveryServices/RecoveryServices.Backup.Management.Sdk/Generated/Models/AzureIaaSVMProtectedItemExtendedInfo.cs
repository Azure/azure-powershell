// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.RecoveryServices.Backup.Models
{
    using System.Linq;

    /// <summary>
    /// Additional information on Azure IaaS VM specific backup item.
    /// </summary>
    public partial class AzureIaaSVMProtectedItemExtendedInfo
    {
        /// <summary>
        /// Initializes a new instance of the AzureIaaSVMProtectedItemExtendedInfo class.
        /// </summary>
        public AzureIaaSVMProtectedItemExtendedInfo()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the AzureIaaSVMProtectedItemExtendedInfo class.
        /// </summary>

        /// <param name="oldestRecoveryPoint">The oldest backup copy available for this backup item across all tiers.
        /// </param>

        /// <param name="oldestRecoveryPointInVault">The oldest backup copy available for this backup item in vault tier
        /// </param>

        /// <param name="oldestRecoveryPointInArchive">The oldest backup copy available for this backup item in archive tier
        /// </param>

        /// <param name="newestRecoveryPointInArchive">The latest backup copy available for this backup item in archive tier
        /// </param>

        /// <param name="recoveryPointCount">Number of backup copies available for this backup item.
        /// </param>

        /// <param name="policyInconsistent">Specifies if backup policy associated with the backup item is inconsistent.
        /// </param>
        public AzureIaaSVMProtectedItemExtendedInfo(System.DateTime? oldestRecoveryPoint = default(System.DateTime?), System.DateTime? oldestRecoveryPointInVault = default(System.DateTime?), System.DateTime? oldestRecoveryPointInArchive = default(System.DateTime?), System.DateTime? newestRecoveryPointInArchive = default(System.DateTime?), int? recoveryPointCount = default(int?), bool? policyInconsistent = default(bool?))

        {
            this.OldestRecoveryPoint = oldestRecoveryPoint;
            this.OldestRecoveryPointInVault = oldestRecoveryPointInVault;
            this.OldestRecoveryPointInArchive = oldestRecoveryPointInArchive;
            this.NewestRecoveryPointInArchive = newestRecoveryPointInArchive;
            this.RecoveryPointCount = recoveryPointCount;
            this.PolicyInconsistent = policyInconsistent;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets or sets the oldest backup copy available for this backup item across
        /// all tiers.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "oldestRecoveryPoint")]
        public System.DateTime? OldestRecoveryPoint {get; set; }

        /// <summary>
        /// Gets or sets the oldest backup copy available for this backup item in vault
        /// tier
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "oldestRecoveryPointInVault")]
        public System.DateTime? OldestRecoveryPointInVault {get; set; }

        /// <summary>
        /// Gets or sets the oldest backup copy available for this backup item in
        /// archive tier
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "oldestRecoveryPointInArchive")]
        public System.DateTime? OldestRecoveryPointInArchive {get; set; }

        /// <summary>
        /// Gets or sets the latest backup copy available for this backup item in
        /// archive tier
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "newestRecoveryPointInArchive")]
        public System.DateTime? NewestRecoveryPointInArchive {get; set; }

        /// <summary>
        /// Gets or sets number of backup copies available for this backup item.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "recoveryPointCount")]
        public int? RecoveryPointCount {get; set; }

        /// <summary>
        /// Gets or sets specifies if backup policy associated with the backup item is
        /// inconsistent.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "policyInconsistent")]
        public bool? PolicyInconsistent {get; set; }
    }
}