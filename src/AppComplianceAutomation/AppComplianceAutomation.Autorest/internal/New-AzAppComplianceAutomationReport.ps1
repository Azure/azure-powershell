
# ----------------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# http://www.apache.org/licenses/LICENSE-2.0
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# Code generated by Microsoft (R) AutoRest Code Generator.Changes may cause incorrect behavior and will be lost if the code
# is regenerated.
# ----------------------------------------------------------------------------------

<#
.Synopsis
Create a new AppComplianceAutomation report or update an exiting AppComplianceAutomation report.
.Description
Create a new AppComplianceAutomation report or update an exiting AppComplianceAutomation report.
.Example
{{ Add code here }}
.Example
{{ Add code here }}

.Inputs
Microsoft.Azure.PowerShell.Cmdlets.AppComplianceAutomation.Models.IReportResource
.Outputs
Microsoft.Azure.PowerShell.Cmdlets.AppComplianceAutomation.Models.IReportResource
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

PROPERTY <IReportResource>: A class represent an AppComplianceAutomation report resource.
  Resource <List<IResourceMetadata>>: List of resource data.
    ResourceId <String>: Resource Id - e.g. "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/rg1/providers/Microsoft.Compute/virtualMachines/vm1".
    [AccountId <String>]: Account Id. For example - the AWS account id.
    [ResourceKind <String>]: Resource kind.
    [ResourceOrigin <String>]: Resource Origin.
    [ResourceType <String>]: Resource type. e.g. "Microsoft.Compute/virtualMachines"
  TimeZone <String>: Report collection trigger time's time zone, the available list can be obtained by executing "Get-TimeZone -ListAvailable" in PowerShell.         An example of valid timezone id is "Pacific Standard Time".
  TriggerTime <DateTime>: Report collection trigger time.
  [OfferGuid <String>]: A list of comma-separated offerGuids indicates a series of offerGuids that map to the report. For example, "00000000-0000-0000-0000-000000000001,00000000-0000-0000-0000-000000000002" and "00000000-0000-0000-0000-000000000003".
  [StorageInfoAccountName <String>]: 'bring your own storage' account name
  [StorageInfoLocation <String>]: The region of 'bring your own storage' account
  [StorageInfoResourceGroup <String>]: The resourceGroup which 'bring your own storage' account belongs to
  [StorageInfoSubscriptionId <String>]: The subscription id which 'bring your own storage' account belongs to

RESOURCE <IResourceMetadata[]>: List of resource data.
  ResourceId <String>: Resource Id - e.g. "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/rg1/providers/Microsoft.Compute/virtualMachines/vm1".
  [AccountId <String>]: Account Id. For example - the AWS account id.
  [ResourceKind <String>]: Resource kind.
  [ResourceOrigin <String>]: Resource Origin.
  [ResourceType <String>]: Resource type. e.g. "Microsoft.Compute/virtualMachines"
.Link
https://learn.microsoft.com/powershell/module/az.appcomplianceautomation/new-azappcomplianceautomationreport
#>
function New-AzAppComplianceAutomationReport {
[OutputType([Microsoft.Azure.PowerShell.Cmdlets.AppComplianceAutomation.Models.IReportResource])]
[CmdletBinding(DefaultParameterSetName='Create', PositionalBinding=$false, SupportsShouldProcess, ConfirmImpact='Medium')]
param(
    [Parameter(Mandatory)]
    [Alias('ReportName')]
    [Microsoft.Azure.PowerShell.Cmdlets.AppComplianceAutomation.Category('Path')]
    [System.String]
    # Report Name.
    ${Name},

    [Parameter()]
    [Microsoft.Azure.PowerShell.Cmdlets.AppComplianceAutomation.Category('Header')]
    [System.String]
    # .
    ${XmsAadUserToken},

    [Parameter(ParameterSetName='Create', Mandatory, ValueFromPipeline)]
    [Microsoft.Azure.PowerShell.Cmdlets.AppComplianceAutomation.Category('Body')]
    [Microsoft.Azure.PowerShell.Cmdlets.AppComplianceAutomation.Models.IReportResource]
    # A class represent an AppComplianceAutomation report resource.
    ${Property},

    [Parameter(ParameterSetName='CreateExpanded', Mandatory)]
    [AllowEmptyCollection()]
    [Microsoft.Azure.PowerShell.Cmdlets.AppComplianceAutomation.Category('Body')]
    [Microsoft.Azure.PowerShell.Cmdlets.AppComplianceAutomation.Models.IResourceMetadata[]]
    # List of resource data.
    ${Resource},

    [Parameter(ParameterSetName='CreateExpanded', Mandatory)]
    [Microsoft.Azure.PowerShell.Cmdlets.AppComplianceAutomation.Category('Body')]
    [System.String]
    # Report collection trigger time's time zone, the available list can be obtained by executing "Get-TimeZone -ListAvailable" in PowerShell.An example of valid timezone id is "Pacific Standard Time".
    ${TimeZone},

    [Parameter(ParameterSetName='CreateExpanded', Mandatory)]
    [Microsoft.Azure.PowerShell.Cmdlets.AppComplianceAutomation.Category('Body')]
    [System.DateTime]
    # Report collection trigger time.
    ${TriggerTime},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Microsoft.Azure.PowerShell.Cmdlets.AppComplianceAutomation.Category('Body')]
    [System.String]
    # A list of comma-separated offerGuids indicates a series of offerGuids that map to the report.
    # For example, "00000000-0000-0000-0000-000000000001,00000000-0000-0000-0000-000000000002" and "00000000-0000-0000-0000-000000000003".
    ${OfferGuid},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Microsoft.Azure.PowerShell.Cmdlets.AppComplianceAutomation.Category('Body')]
    [System.String]
    # 'bring your own storage' account name
    ${StorageInfoAccountName},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Microsoft.Azure.PowerShell.Cmdlets.AppComplianceAutomation.Category('Body')]
    [System.String]
    # The region of 'bring your own storage' account
    ${StorageInfoLocation},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Microsoft.Azure.PowerShell.Cmdlets.AppComplianceAutomation.Category('Body')]
    [System.String]
    # The resourceGroup which 'bring your own storage' account belongs to
    ${StorageInfoResourceGroup},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Microsoft.Azure.PowerShell.Cmdlets.AppComplianceAutomation.Category('Body')]
    [System.String]
    # The subscription id which 'bring your own storage' account belongs to
    ${StorageInfoSubscriptionId},

    [Parameter(ParameterSetName='CreateViaJsonFilePath', Mandatory)]
    [Microsoft.Azure.PowerShell.Cmdlets.AppComplianceAutomation.Category('Body')]
    [System.String]
    # Path of Json file supplied to the Create operation
    ${JsonFilePath},

    [Parameter(ParameterSetName='CreateViaJsonString', Mandatory)]
    [Microsoft.Azure.PowerShell.Cmdlets.AppComplianceAutomation.Category('Body')]
    [System.String]
    # Json string supplied to the Create operation
    ${JsonString},

    [Parameter()]
    [Alias('AzureRMContext', 'AzureCredential')]
    [ValidateNotNull()]
    [Microsoft.Azure.PowerShell.Cmdlets.AppComplianceAutomation.Category('Azure')]
    [System.Management.Automation.PSObject]
    # The DefaultProfile parameter is not functional.
    # Use the SubscriptionId parameter when available if executing the cmdlet against a different subscription.
    ${DefaultProfile},

    [Parameter()]
    [Microsoft.Azure.PowerShell.Cmdlets.AppComplianceAutomation.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Run the command as a job
    ${AsJob},

    [Parameter(DontShow)]
    [Microsoft.Azure.PowerShell.Cmdlets.AppComplianceAutomation.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Azure.PowerShell.Cmdlets.AppComplianceAutomation.Category('Runtime')]
    [Microsoft.Azure.PowerShell.Cmdlets.AppComplianceAutomation.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Azure.PowerShell.Cmdlets.AppComplianceAutomation.Category('Runtime')]
    [Microsoft.Azure.PowerShell.Cmdlets.AppComplianceAutomation.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter()]
    [Microsoft.Azure.PowerShell.Cmdlets.AppComplianceAutomation.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Run the command asynchronously
    ${NoWait},

    [Parameter(DontShow)]
    [Microsoft.Azure.PowerShell.Cmdlets.AppComplianceAutomation.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Azure.PowerShell.Cmdlets.AppComplianceAutomation.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Azure.PowerShell.Cmdlets.AppComplianceAutomation.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName

        $mapping = @{
            Create = 'Az.AppComplianceAutomation.private\New-AzAppComplianceAutomationReport_Create';
            CreateExpanded = 'Az.AppComplianceAutomation.private\New-AzAppComplianceAutomationReport_CreateExpanded';
            CreateViaJsonFilePath = 'Az.AppComplianceAutomation.private\New-AzAppComplianceAutomationReport_CreateViaJsonFilePath';
            CreateViaJsonString = 'Az.AppComplianceAutomation.private\New-AzAppComplianceAutomationReport_CreateViaJsonString';
        }

        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {

        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {

        throw
    }

}
end {
    try {
        $steppablePipeline.End()

    } catch {

        throw
    }
} 
}
