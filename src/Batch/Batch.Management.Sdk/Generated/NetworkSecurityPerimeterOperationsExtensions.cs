// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.
namespace Microsoft.Azure.Management.Batch
{
    using Microsoft.Rest.Azure;
    using Models;

    /// <summary>
    /// Extension methods for NetworkSecurityPerimeterOperations
    /// </summary>
    public static partial class NetworkSecurityPerimeterOperationsExtensions
    {
        /// <summary>
        /// Lists all of the NSP configurations in the specified account.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='resourceGroupName'>
        /// The name of the resource group that contains the Batch account.
        /// </param>
        /// <param name='accountName'>
        /// The name of the Batch account.
        /// </param>
        public static Microsoft.Rest.Azure.IPage<NetworkSecurityPerimeterConfiguration> ListConfigurations(this INetworkSecurityPerimeterOperations operations, string resourceGroupName, string accountName)
        {
                return ((INetworkSecurityPerimeterOperations)operations).ListConfigurationsAsync(resourceGroupName, accountName).GetAwaiter().GetResult();
        }

        /// <summary>
        /// Lists all of the NSP configurations in the specified account.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='resourceGroupName'>
        /// The name of the resource group that contains the Batch account.
        /// </param>
        /// <param name='accountName'>
        /// The name of the Batch account.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        public static async System.Threading.Tasks.Task<Microsoft.Rest.Azure.IPage<NetworkSecurityPerimeterConfiguration>> ListConfigurationsAsync(this INetworkSecurityPerimeterOperations operations, string resourceGroupName, string accountName, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            using (var _result = await operations.ListConfigurationsWithHttpMessagesAsync(resourceGroupName, accountName, null, cancellationToken).ConfigureAwait(false))
            {
                return _result.Body;
            }
        }
        /// <summary>
        /// Gets information about the specified NSP configuration.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='resourceGroupName'>
        /// The name of the resource group that contains the Batch account.
        /// </param>
        /// <param name='accountName'>
        /// The name of the Batch account.
        /// </param>
        /// <param name='networkSecurityPerimeterConfigurationName'>
        /// The name for Network Security Perimeter configuration
        /// </param>
        public static NetworkSecurityPerimeterConfiguration GetConfiguration(this INetworkSecurityPerimeterOperations operations, string resourceGroupName, string accountName, string networkSecurityPerimeterConfigurationName)
        {
                return ((INetworkSecurityPerimeterOperations)operations).GetConfigurationAsync(resourceGroupName, accountName, networkSecurityPerimeterConfigurationName).GetAwaiter().GetResult();
        }

        /// <summary>
        /// Gets information about the specified NSP configuration.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='resourceGroupName'>
        /// The name of the resource group that contains the Batch account.
        /// </param>
        /// <param name='accountName'>
        /// The name of the Batch account.
        /// </param>
        /// <param name='networkSecurityPerimeterConfigurationName'>
        /// The name for Network Security Perimeter configuration
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        public static async System.Threading.Tasks.Task<NetworkSecurityPerimeterConfiguration> GetConfigurationAsync(this INetworkSecurityPerimeterOperations operations, string resourceGroupName, string accountName, string networkSecurityPerimeterConfigurationName, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            using (var _result = await operations.GetConfigurationWithHttpMessagesAsync(resourceGroupName, accountName, networkSecurityPerimeterConfigurationName, null, cancellationToken).ConfigureAwait(false))
            {
                return _result.Body;
            }
        }
        /// <summary>
        /// Reconciles the specified NSP configuration.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='resourceGroupName'>
        /// The name of the resource group that contains the Batch account.
        /// </param>
        /// <param name='accountName'>
        /// The name of the Batch account.
        /// </param>
        /// <param name='networkSecurityPerimeterConfigurationName'>
        /// The name for Network Security Perimeter configuration
        /// </param>
        public static NetworkSecurityPerimeterReconcileConfigurationHeaders ReconcileConfiguration(this INetworkSecurityPerimeterOperations operations, string resourceGroupName, string accountName, string networkSecurityPerimeterConfigurationName)
        {
                return ((INetworkSecurityPerimeterOperations)operations).ReconcileConfigurationAsync(resourceGroupName, accountName, networkSecurityPerimeterConfigurationName).GetAwaiter().GetResult();
        }

        /// <summary>
        /// Reconciles the specified NSP configuration.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='resourceGroupName'>
        /// The name of the resource group that contains the Batch account.
        /// </param>
        /// <param name='accountName'>
        /// The name of the Batch account.
        /// </param>
        /// <param name='networkSecurityPerimeterConfigurationName'>
        /// The name for Network Security Perimeter configuration
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        public static async System.Threading.Tasks.Task<NetworkSecurityPerimeterReconcileConfigurationHeaders> ReconcileConfigurationAsync(this INetworkSecurityPerimeterOperations operations, string resourceGroupName, string accountName, string networkSecurityPerimeterConfigurationName, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            using (var _result = await operations.ReconcileConfigurationWithHttpMessagesAsync(resourceGroupName, accountName, networkSecurityPerimeterConfigurationName, null, cancellationToken).ConfigureAwait(false))
            {
                return _result.Headers;
            }
        }
        /// <summary>
        /// Reconciles the specified NSP configuration.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='resourceGroupName'>
        /// The name of the resource group that contains the Batch account.
        /// </param>
        /// <param name='accountName'>
        /// The name of the Batch account.
        /// </param>
        /// <param name='networkSecurityPerimeterConfigurationName'>
        /// The name for Network Security Perimeter configuration
        /// </param>
        public static NetworkSecurityPerimeterReconcileConfigurationHeaders BeginReconcileConfiguration(this INetworkSecurityPerimeterOperations operations, string resourceGroupName, string accountName, string networkSecurityPerimeterConfigurationName)
        {
                return ((INetworkSecurityPerimeterOperations)operations).BeginReconcileConfigurationAsync(resourceGroupName, accountName, networkSecurityPerimeterConfigurationName).GetAwaiter().GetResult();
        }

        /// <summary>
        /// Reconciles the specified NSP configuration.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='resourceGroupName'>
        /// The name of the resource group that contains the Batch account.
        /// </param>
        /// <param name='accountName'>
        /// The name of the Batch account.
        /// </param>
        /// <param name='networkSecurityPerimeterConfigurationName'>
        /// The name for Network Security Perimeter configuration
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        public static async System.Threading.Tasks.Task<NetworkSecurityPerimeterReconcileConfigurationHeaders> BeginReconcileConfigurationAsync(this INetworkSecurityPerimeterOperations operations, string resourceGroupName, string accountName, string networkSecurityPerimeterConfigurationName, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            using (var _result = await operations.BeginReconcileConfigurationWithHttpMessagesAsync(resourceGroupName, accountName, networkSecurityPerimeterConfigurationName, null, cancellationToken).ConfigureAwait(false))
            {
                return _result.Headers;
            }
        }
        /// <summary>
        /// Lists all of the NSP configurations in the specified account.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='nextPageLink'>
        /// The NextLink from the previous successful call to List operation.
        /// </param>
        public static Microsoft.Rest.Azure.IPage<NetworkSecurityPerimeterConfiguration> ListConfigurationsNext(this INetworkSecurityPerimeterOperations operations, string nextPageLink)
        {
                return ((INetworkSecurityPerimeterOperations)operations).ListConfigurationsNextAsync(nextPageLink).GetAwaiter().GetResult();
        }

        /// <summary>
        /// Lists all of the NSP configurations in the specified account.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='nextPageLink'>
        /// The NextLink from the previous successful call to List operation.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        public static async System.Threading.Tasks.Task<Microsoft.Rest.Azure.IPage<NetworkSecurityPerimeterConfiguration>> ListConfigurationsNextAsync(this INetworkSecurityPerimeterOperations operations, string nextPageLink, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            using (var _result = await operations.ListConfigurationsNextWithHttpMessagesAsync(nextPageLink, null, cancellationToken).ConfigureAwait(false))
            {
                return _result.Body;
            }
        }
    }
}
