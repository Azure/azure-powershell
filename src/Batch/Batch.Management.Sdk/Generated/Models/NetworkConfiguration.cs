// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.Batch.Models
{
    using System.Linq;

    /// <summary>
    /// The network configuration for a pool.
    /// </summary>
    public partial class NetworkConfiguration
    {
        /// <summary>
        /// Initializes a new instance of the NetworkConfiguration class.
        /// </summary>
        public NetworkConfiguration()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the NetworkConfiguration class.
        /// </summary>

        /// <param name="subnetId">The virtual network must be in the same region and subscription as the
        /// Azure Batch account. The specified subnet should have enough free IP
        /// addresses to accommodate the number of nodes in the pool. If the subnet
        /// doesn&#39;t have enough free IP addresses, the pool will partially allocate
        /// compute nodes and a resize error will occur. The &#39;MicrosoftAzureBatch&#39;
        /// service principal must have the &#39;Classic Virtual Machine Contributor&#39;
        /// Role-Based Access Control (RBAC) role for the specified VNet. The specified
        /// subnet must allow communication from the Azure Batch service to be able to
        /// schedule tasks on the compute nodes. This can be verified by checking if
        /// the specified VNet has any associated Network Security Groups (NSG). If
        /// communication to the compute nodes in the specified subnet is denied by an
        /// NSG, then the Batch service will set the state of the compute nodes to
        /// unusable. If the specified VNet has any associated Network Security Groups
        /// (NSG), then a few reserved system ports must be enabled for inbound
        /// communication. For pools created with a virtual machine configuration,
        /// enable ports 29876 and 29877, as well as port 22 for Linux and port 3389
        /// for Windows. For pools created with a cloud service configuration, enable
        /// ports 10100, 20100, and 30100. Also enable outbound connections to Azure
        /// Storage on port 443. For cloudServiceConfiguration pools, only &#39;classic&#39;
        /// VNETs are supported. For more details see:
        /// https://docs.microsoft.com/en-us/azure/batch/batch-api-basics#virtual-network-vnet-and-firewall-configuration
        /// </param>

        /// <param name="dynamicVnetAssignmentScope">The scope of dynamic vnet assignment.
        /// Possible values include: &#39;none&#39;, &#39;job&#39;</param>

        /// <param name="endpointConfiguration">Pool endpoint configuration is only supported on pools with the
        /// virtualMachineConfiguration property.
        /// </param>

        /// <param name="publicIPAddressConfiguration">This property is only supported on Pools with the
        /// virtualMachineConfiguration property.
        /// </param>
        public NetworkConfiguration(string subnetId = default(string), DynamicVNetAssignmentScope? dynamicVnetAssignmentScope = default(DynamicVNetAssignmentScope?), PoolEndpointConfiguration endpointConfiguration = default(PoolEndpointConfiguration), PublicIPAddressConfiguration publicIPAddressConfiguration = default(PublicIPAddressConfiguration))

        {
            this.SubnetId = subnetId;
            this.DynamicVnetAssignmentScope = dynamicVnetAssignmentScope;
            this.EndpointConfiguration = endpointConfiguration;
            this.PublicIPAddressConfiguration = publicIPAddressConfiguration;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets or sets the virtual network must be in the same region and
        /// subscription as the Azure Batch account. The specified subnet should have
        /// enough free IP addresses to accommodate the number of nodes in the pool. If
        /// the subnet doesn&#39;t have enough free IP addresses, the pool will partially
        /// allocate compute nodes and a resize error will occur. The
        /// &#39;MicrosoftAzureBatch&#39; service principal must have the &#39;Classic Virtual
        /// Machine Contributor&#39; Role-Based Access Control (RBAC) role for the
        /// specified VNet. The specified subnet must allow communication from the
        /// Azure Batch service to be able to schedule tasks on the compute nodes. This
        /// can be verified by checking if the specified VNet has any associated
        /// Network Security Groups (NSG). If communication to the compute nodes in the
        /// specified subnet is denied by an NSG, then the Batch service will set the
        /// state of the compute nodes to unusable. If the specified VNet has any
        /// associated Network Security Groups (NSG), then a few reserved system ports
        /// must be enabled for inbound communication. For pools created with a virtual
        /// machine configuration, enable ports 29876 and 29877, as well as port 22 for
        /// Linux and port 3389 for Windows. For pools created with a cloud service
        /// configuration, enable ports 10100, 20100, and 30100. Also enable outbound
        /// connections to Azure Storage on port 443. For cloudServiceConfiguration
        /// pools, only &#39;classic&#39; VNETs are supported. For more details see:
        /// https://docs.microsoft.com/en-us/azure/batch/batch-api-basics#virtual-network-vnet-and-firewall-configuration
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "subnetId")]
        public string SubnetId {get; set; }

        /// <summary>
        /// Gets or sets the scope of dynamic vnet assignment. Possible values include: &#39;none&#39;, &#39;job&#39;
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "dynamicVnetAssignmentScope")]
        public DynamicVNetAssignmentScope? DynamicVnetAssignmentScope {get; set; }

        /// <summary>
        /// Gets or sets pool endpoint configuration is only supported on pools with
        /// the virtualMachineConfiguration property.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "endpointConfiguration")]
        public PoolEndpointConfiguration EndpointConfiguration {get; set; }

        /// <summary>
        /// Gets or sets this property is only supported on Pools with the
        /// virtualMachineConfiguration property.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "publicIPAddressConfiguration")]
        public PublicIPAddressConfiguration PublicIPAddressConfiguration {get; set; }
        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {


            if (this.EndpointConfiguration != null)
            {
                this.EndpointConfiguration.Validate();
            }

        }
    }
}