// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.Batch.Models
{
    using System.Linq;

    /// <summary>
    /// The properties related to the auto-storage account.
    /// </summary>
    public partial class AutoStorageBaseProperties
    {
        /// <summary>
        /// Initializes a new instance of the AutoStorageBaseProperties class.
        /// </summary>
        public AutoStorageBaseProperties()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the AutoStorageBaseProperties class.
        /// </summary>

        /// <param name="storageAccountId">The resource ID of the storage account to be used for auto-storage account.
        /// </param>

        /// <param name="authenticationMode">The authentication mode which the Batch service will use to manage the
        /// auto-storage account.
        /// Possible values include: &#39;StorageKeys&#39;, &#39;BatchAccountManagedIdentity&#39;</param>

        /// <param name="nodeIdentityReference">The identity referenced here must be assigned to pools which have compute
        /// nodes that need access to auto-storage.
        /// </param>
        public AutoStorageBaseProperties(string storageAccountId, AutoStorageAuthenticationMode? authenticationMode = default(AutoStorageAuthenticationMode?), ComputeNodeIdentityReference nodeIdentityReference = default(ComputeNodeIdentityReference))

        {
            this.StorageAccountId = storageAccountId;
            this.AuthenticationMode = authenticationMode;
            this.NodeIdentityReference = nodeIdentityReference;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets or sets the resource ID of the storage account to be used for
        /// auto-storage account.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "storageAccountId")]
        public string StorageAccountId {get; set; }

        /// <summary>
        /// Gets or sets the authentication mode which the Batch service will use to
        /// manage the auto-storage account. Possible values include: &#39;StorageKeys&#39;, &#39;BatchAccountManagedIdentity&#39;
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "authenticationMode")]
        public AutoStorageAuthenticationMode? AuthenticationMode {get; set; }

        /// <summary>
        /// Gets or sets the identity referenced here must be assigned to pools which
        /// have compute nodes that need access to auto-storage.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "nodeIdentityReference")]
        public ComputeNodeIdentityReference NodeIdentityReference {get; set; }
        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (this.StorageAccountId == null)
            {
                throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.CannotBeNull, "StorageAccountId");
            }



        }
    }
}