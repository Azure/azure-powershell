// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.Batch.Models
{

    /// <summary>
    /// Defines values for NodeCommunicationMode.
    /// </summary>


    [Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
    public enum NodeCommunicationMode
    {
        /// <summary>
        /// The node communication mode is automatically set by the Batch service.
        /// </summary>
        [System.Runtime.Serialization.EnumMember(Value = "Default")]
        Default,
        /// <summary>
        /// Nodes using the Classic communication mode require inbound TCP
        /// communication on ports 29876 and 29877 from the
        /// &#34;BatchNodeManagement.{region}&#34; service tag and outbound TCP communication
        /// on port 443 to the &#34;Storage.region&#34; and &#34;BatchNodeManagement.{region}&#34;
        /// service tags.
        /// </summary>
        [System.Runtime.Serialization.EnumMember(Value = "Classic")]
        Classic,
        /// <summary>
        /// Nodes using the Simplified communication mode require outbound TCP
        /// communication on port 443 to the &#34;BatchNodeManagement.{region}&#34; service
        /// tag. No open inbound ports are required.
        /// </summary>
        [System.Runtime.Serialization.EnumMember(Value = "Simplified")]
        Simplified
    }
    internal static class NodeCommunicationModeEnumExtension
    {
        internal static string ToSerializedValue(this NodeCommunicationMode? value)
        {
            return value == null ? null : ((NodeCommunicationMode)value).ToSerializedValue();
        }
        internal static string ToSerializedValue(this NodeCommunicationMode value)
        {
            switch( value )
            {
                case NodeCommunicationMode.Default:
                    return "Default";
                case NodeCommunicationMode.Classic:
                    return "Classic";
                case NodeCommunicationMode.Simplified:
                    return "Simplified";
            }
            return null;
        }
        internal static NodeCommunicationMode? ParseNodeCommunicationMode(this string value)
        {
            switch( value )
            {
                case "Default":
                    return NodeCommunicationMode.Default;
                case "Classic":
                    return NodeCommunicationMode.Classic;
                case "Simplified":
                    return NodeCommunicationMode.Simplified;
            }
            return null;
        }
    }
}