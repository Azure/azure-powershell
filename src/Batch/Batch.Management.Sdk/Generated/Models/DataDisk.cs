// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.Batch.Models
{
    using System.Linq;

    /// <summary>
    /// Settings which will be used by the data disks associated to Compute Nodes
    /// in the Pool. When using attached data disks, you need to mount and format
    /// the disks from within a VM to use them.
    /// </summary>
    public partial class DataDisk
    {
        /// <summary>
        /// Initializes a new instance of the DataDisk class.
        /// </summary>
        public DataDisk()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the DataDisk class.
        /// </summary>

        /// <param name="lun">The lun is used to uniquely identify each data disk. If attaching multiple
        /// disks, each should have a distinct lun. The value must be between 0 and 63,
        /// inclusive.
        /// </param>

        /// <param name="caching">Values are:
        /// none - The caching mode for the disk is not enabled.
        /// readOnly - The caching mode for the disk is read only.
        /// readWrite - The caching mode for the disk is read and write.
        /// The default value for caching is none. For information about the caching
        /// options see:
        /// https://blogs.msdn.microsoft.com/windowsazurestorage/2012/06/27/exploring-windows-azure-drives-disks-and-images/.
        /// Possible values include: &#39;None&#39;, &#39;ReadOnly&#39;, &#39;ReadWrite&#39;</param>

        /// <param name="diskSizeGb">The initial disk size in GB when creating new data disk.
        /// </param>

        /// <param name="storageAccountType">If omitted, the default is &#34;Standard_LRS&#34;. Values are:
        /// Standard_LRS - The data disk should use standard locally redundant storage.
        /// Premium_LRS - The data disk should use premium locally redundant storage.
        /// Possible values include: &#39;Standard_LRS&#39;, &#39;Premium_LRS&#39;</param>
        public DataDisk(int lun, int diskSizeGb, CachingType? caching = default(CachingType?), StorageAccountType? storageAccountType = default(StorageAccountType?))

        {
            this.Lun = lun;
            this.Caching = caching;
            this.DiskSizeGb = diskSizeGb;
            this.StorageAccountType = storageAccountType;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets or sets the lun is used to uniquely identify each data disk. If
        /// attaching multiple disks, each should have a distinct lun. The value must
        /// be between 0 and 63, inclusive.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "lun")]
        public int Lun {get; set; }

        /// <summary>
        /// Gets or sets values are:
        /// none - The caching mode for the disk is not enabled.
        /// readOnly - The caching mode for the disk is read only.
        /// readWrite - The caching mode for the disk is read and write.
        /// The default value for caching is none. For information about the caching
        /// options see:
        /// https://blogs.msdn.microsoft.com/windowsazurestorage/2012/06/27/exploring-windows-azure-drives-disks-and-images/. Possible values include: &#39;None&#39;, &#39;ReadOnly&#39;, &#39;ReadWrite&#39;
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "caching")]
        public CachingType? Caching {get; set; }

        /// <summary>
        /// Gets or sets the initial disk size in GB when creating new data disk.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "diskSizeGB")]
        public int DiskSizeGb {get; set; }

        /// <summary>
        /// Gets or sets if omitted, the default is &#34;Standard_LRS&#34;. Values are:
        /// Standard_LRS - The data disk should use standard locally redundant storage.
        /// Premium_LRS - The data disk should use premium locally redundant storage. Possible values include: &#39;Standard_LRS&#39;, &#39;Premium_LRS&#39;
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "storageAccountType")]
        public StorageAccountType? StorageAccountType {get; set; }
        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {


        }
    }
}