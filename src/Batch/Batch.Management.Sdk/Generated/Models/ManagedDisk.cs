// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.Batch.Models
{
    using System.Linq;

    public partial class ManagedDisk
    {
        /// <summary>
        /// Initializes a new instance of the ManagedDisk class.
        /// </summary>
        public ManagedDisk()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the ManagedDisk class.
        /// </summary>

        /// <param name="storageAccountType">The storage account type for use in creating data disks or OS disk.
        /// Possible values include: &#39;Standard_LRS&#39;, &#39;Premium_LRS&#39;, &#39;StandardSSD_LRS&#39;</param>

        /// <param name="securityProfile">Specifies the security profile settings for the managed disk. **Note**: It
        /// can only be set for Confidential VMs and is required when using
        /// Confidential VMs.
        /// </param>
        public ManagedDisk(StorageAccountType? storageAccountType = default(StorageAccountType?), VMDiskSecurityProfile securityProfile = default(VMDiskSecurityProfile))

        {
            this.StorageAccountType = storageAccountType;
            this.SecurityProfile = securityProfile;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets or sets the storage account type for use in creating data disks or OS
        /// disk. Possible values include: &#39;Standard_LRS&#39;, &#39;Premium_LRS&#39;, &#39;StandardSSD_LRS&#39;
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "storageAccountType")]
        public StorageAccountType? StorageAccountType {get; set; }

        /// <summary>
        /// Gets or sets specifies the security profile settings for the managed disk.
        /// **Note**: It can only be set for Confidential VMs and is required when
        /// using Confidential VMs.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "securityProfile")]
        public VMDiskSecurityProfile SecurityProfile {get; set; }
    }
}