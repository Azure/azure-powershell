// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.Batch.Models
{
    using System.Linq;

    /// <summary>
    /// The properties of a Batch account.
    /// </summary>
    public partial class BatchAccountCreateProperties
    {
        /// <summary>
        /// Initializes a new instance of the BatchAccountCreateProperties class.
        /// </summary>
        public BatchAccountCreateProperties()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the BatchAccountCreateProperties class.
        /// </summary>

        /// <param name="autoStorage">The properties related to the auto-storage account.
        /// </param>

        /// <param name="poolAllocationMode">The pool allocation mode also affects how clients may authenticate to the
        /// Batch Service API. If the mode is BatchService, clients may authenticate
        /// using access keys or Azure Active Directory. If the mode is
        /// UserSubscription, clients must use Azure Active Directory. The default is
        /// BatchService.
        /// Possible values include: &#39;BatchService&#39;, &#39;UserSubscription&#39;</param>

        /// <param name="keyVaultReference">A reference to the Azure key vault associated with the Batch account.
        /// </param>

        /// <param name="publicNetworkAccess">If not specified, the default value is &#39;enabled&#39;.
        /// Possible values include: &#39;Enabled&#39;, &#39;Disabled&#39;</param>

        /// <param name="networkProfile">The network profile only takes effect when publicNetworkAccess is enabled.
        /// </param>

        /// <param name="encryption">Configures how customer data is encrypted inside the Batch account. By
        /// default, accounts are encrypted using a Microsoft managed key. For
        /// additional control, a customer-managed key can be used instead.
        /// </param>

        /// <param name="allowedAuthenticationModes">List of allowed authentication modes for the Batch account that can be used
        /// to authenticate with the data plane. This does not affect authentication
        /// with the control plane.
        /// </param>
        public BatchAccountCreateProperties(AutoStorageBaseProperties autoStorage = default(AutoStorageBaseProperties), PoolAllocationMode? poolAllocationMode = default(PoolAllocationMode?), KeyVaultReference keyVaultReference = default(KeyVaultReference), PublicNetworkAccessType? publicNetworkAccess = default(PublicNetworkAccessType?), NetworkProfile networkProfile = default(NetworkProfile), EncryptionProperties encryption = default(EncryptionProperties), System.Collections.Generic.IList<AuthenticationMode?> allowedAuthenticationModes = default(System.Collections.Generic.IList<AuthenticationMode?>))

        {
            this.AutoStorage = autoStorage;
            this.PoolAllocationMode = poolAllocationMode;
            this.KeyVaultReference = keyVaultReference;
            this.PublicNetworkAccess = publicNetworkAccess;
            this.NetworkProfile = networkProfile;
            this.Encryption = encryption;
            this.AllowedAuthenticationModes = allowedAuthenticationModes;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets or sets the properties related to the auto-storage account.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "autoStorage")]
        public AutoStorageBaseProperties AutoStorage {get; set; }

        /// <summary>
        /// Gets or sets the pool allocation mode also affects how clients may
        /// authenticate to the Batch Service API. If the mode is BatchService, clients
        /// may authenticate using access keys or Azure Active Directory. If the mode
        /// is UserSubscription, clients must use Azure Active Directory. The default
        /// is BatchService. Possible values include: &#39;BatchService&#39;, &#39;UserSubscription&#39;
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "poolAllocationMode")]
        public PoolAllocationMode? PoolAllocationMode {get; set; }

        /// <summary>
        /// Gets or sets a reference to the Azure key vault associated with the Batch
        /// account.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "keyVaultReference")]
        public KeyVaultReference KeyVaultReference {get; set; }

        /// <summary>
        /// Gets or sets if not specified, the default value is &#39;enabled&#39;. Possible values include: &#39;Enabled&#39;, &#39;Disabled&#39;
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "publicNetworkAccess")]
        public PublicNetworkAccessType? PublicNetworkAccess {get; set; }

        /// <summary>
        /// Gets or sets the network profile only takes effect when publicNetworkAccess
        /// is enabled.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "networkProfile")]
        public NetworkProfile NetworkProfile {get; set; }

        /// <summary>
        /// Gets or sets configures how customer data is encrypted inside the Batch
        /// account. By default, accounts are encrypted using a Microsoft managed key.
        /// For additional control, a customer-managed key can be used instead.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "encryption")]
        public EncryptionProperties Encryption {get; set; }

        /// <summary>
        /// Gets or sets list of allowed authentication modes for the Batch account
        /// that can be used to authenticate with the data plane. This does not affect
        /// authentication with the control plane.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "allowedAuthenticationModes")]
        public System.Collections.Generic.IList<AuthenticationMode?> AllowedAuthenticationModes {get; set; }
        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (this.AutoStorage != null)
            {
                this.AutoStorage.Validate();
            }

            if (this.KeyVaultReference != null)
            {
                this.KeyVaultReference.Validate();
            }

            if (this.NetworkProfile != null)
            {
                this.NetworkProfile.Validate();
            }


        }
    }
}