// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.Batch.Models
{
    using System.Linq;

    /// <summary>
    /// Information used to connect to an Azure Storage Container using Blobfuse.
    /// </summary>
    /// <remarks>
    /// Information used to connect to an Azure Storage Container using Blobfuse.
    /// </remarks>
    public partial class AzureBlobFileSystemConfiguration
    {
        /// <summary>
        /// Initializes a new instance of the AzureBlobFileSystemConfiguration class.
        /// </summary>
        public AzureBlobFileSystemConfiguration()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the AzureBlobFileSystemConfiguration class.
        /// </summary>

        /// <param name="accountName">The Azure Storage Account name.
        /// </param>

        /// <param name="containerName">The Azure Blob Storage Container name.
        /// </param>

        /// <param name="accountKey">This property is mutually exclusive with both sasKey and identity; exactly
        /// one must be specified.
        /// </param>

        /// <param name="sasKey">This property is mutually exclusive with both accountKey and identity;
        /// exactly one must be specified.
        /// </param>

        /// <param name="blobfuseOptions">These are &#39;net use&#39; options in Windows and &#39;mount&#39; options in Linux.
        /// </param>

        /// <param name="relativeMountPath">All file systems are mounted relative to the Batch mounts directory,
        /// accessible via the AZ_BATCH_NODE_MOUNTS_DIR environment variable.
        /// </param>

        /// <param name="identityReference">This property is mutually exclusive with both accountKey and sasKey;
        /// exactly one must be specified.
        /// </param>
        public AzureBlobFileSystemConfiguration(string accountName, string containerName, string relativeMountPath, string accountKey = default(string), string sasKey = default(string), string blobfuseOptions = default(string), ComputeNodeIdentityReference identityReference = default(ComputeNodeIdentityReference))

        {
            this.AccountName = accountName;
            this.ContainerName = containerName;
            this.AccountKey = accountKey;
            this.SasKey = sasKey;
            this.BlobfuseOptions = blobfuseOptions;
            this.RelativeMountPath = relativeMountPath;
            this.IdentityReference = identityReference;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets or sets the Azure Storage Account name.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "accountName")]
        public string AccountName {get; set; }

        /// <summary>
        /// Gets or sets the Azure Blob Storage Container name.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "containerName")]
        public string ContainerName {get; set; }

        /// <summary>
        /// Gets or sets this property is mutually exclusive with both sasKey and
        /// identity; exactly one must be specified.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "accountKey")]
        public string AccountKey {get; set; }

        /// <summary>
        /// Gets or sets this property is mutually exclusive with both accountKey and
        /// identity; exactly one must be specified.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "sasKey")]
        public string SasKey {get; set; }

        /// <summary>
        /// Gets or sets these are &#39;net use&#39; options in Windows and &#39;mount&#39; options in
        /// Linux.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "blobfuseOptions")]
        public string BlobfuseOptions {get; set; }

        /// <summary>
        /// Gets or sets all file systems are mounted relative to the Batch mounts
        /// directory, accessible via the AZ_BATCH_NODE_MOUNTS_DIR environment
        /// variable.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "relativeMountPath")]
        public string RelativeMountPath {get; set; }

        /// <summary>
        /// Gets or sets this property is mutually exclusive with both accountKey and
        /// sasKey; exactly one must be specified.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "identityReference")]
        public ComputeNodeIdentityReference IdentityReference {get; set; }
        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (this.AccountName == null)
            {
                throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.CannotBeNull, "AccountName");
            }
            if (this.ContainerName == null)
            {
                throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.CannotBeNull, "ContainerName");
            }
            if (this.RelativeMountPath == null)
            {
                throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.CannotBeNull, "RelativeMountPath");
            }







        }
    }
}