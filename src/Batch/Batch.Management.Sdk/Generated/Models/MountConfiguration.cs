// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.Batch.Models
{
    using System.Linq;

    /// <summary>
    /// The file system to mount on each node.
    /// </summary>
    /// <remarks>
    /// The file system to mount on each node.
    /// </remarks>
    public partial class MountConfiguration
    {
        /// <summary>
        /// Initializes a new instance of the MountConfiguration class.
        /// </summary>
        public MountConfiguration()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the MountConfiguration class.
        /// </summary>

        /// <param name="azureBlobFileSystemConfiguration">This property is mutually exclusive with all other properties.
        /// </param>

        /// <param name="nfsMountConfiguration">This property is mutually exclusive with all other properties.
        /// </param>

        /// <param name="cifsMountConfiguration">This property is mutually exclusive with all other properties.
        /// </param>

        /// <param name="azureFileShareConfiguration">This property is mutually exclusive with all other properties.
        /// </param>
        public MountConfiguration(AzureBlobFileSystemConfiguration azureBlobFileSystemConfiguration = default(AzureBlobFileSystemConfiguration), NFSMountConfiguration nfsMountConfiguration = default(NFSMountConfiguration), CifsMountConfiguration cifsMountConfiguration = default(CifsMountConfiguration), AzureFileShareConfiguration azureFileShareConfiguration = default(AzureFileShareConfiguration))

        {
            this.AzureBlobFileSystemConfiguration = azureBlobFileSystemConfiguration;
            this.NfsMountConfiguration = nfsMountConfiguration;
            this.CifsMountConfiguration = cifsMountConfiguration;
            this.AzureFileShareConfiguration = azureFileShareConfiguration;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets or sets this property is mutually exclusive with all other properties.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "azureBlobFileSystemConfiguration")]
        public AzureBlobFileSystemConfiguration AzureBlobFileSystemConfiguration {get; set; }

        /// <summary>
        /// Gets or sets this property is mutually exclusive with all other properties.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "nfsMountConfiguration")]
        public NFSMountConfiguration NfsMountConfiguration {get; set; }

        /// <summary>
        /// Gets or sets this property is mutually exclusive with all other properties.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "cifsMountConfiguration")]
        public CifsMountConfiguration CifsMountConfiguration {get; set; }

        /// <summary>
        /// Gets or sets this property is mutually exclusive with all other properties.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "azureFileShareConfiguration")]
        public AzureFileShareConfiguration AzureFileShareConfiguration {get; set; }
        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (this.AzureBlobFileSystemConfiguration != null)
            {
                this.AzureBlobFileSystemConfiguration.Validate();
            }
            if (this.NfsMountConfiguration != null)
            {
                this.NfsMountConfiguration.Validate();
            }
            if (this.CifsMountConfiguration != null)
            {
                this.CifsMountConfiguration.Validate();
            }
            if (this.AzureFileShareConfiguration != null)
            {
                this.AzureFileShareConfiguration.Validate();
            }
        }
    }
}