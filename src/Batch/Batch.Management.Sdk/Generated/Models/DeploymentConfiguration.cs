// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.Batch.Models
{
    using System.Linq;

    /// <summary>
    /// Deployment configuration properties.
    /// </summary>
    /// <remarks>
    /// Deployment configuration properties.
    /// </remarks>
    public partial class DeploymentConfiguration
    {
        /// <summary>
        /// Initializes a new instance of the DeploymentConfiguration class.
        /// </summary>
        public DeploymentConfiguration()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the DeploymentConfiguration class.
        /// </summary>

        /// <param name="virtualMachineConfiguration">The configuration for compute nodes in a pool based on the Azure Virtual
        /// Machines infrastructure.
        /// </param>
        public DeploymentConfiguration(VirtualMachineConfiguration virtualMachineConfiguration = default(VirtualMachineConfiguration))

        {
            this.VirtualMachineConfiguration = virtualMachineConfiguration;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets or sets the configuration for compute nodes in a pool based on the
        /// Azure Virtual Machines infrastructure.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "virtualMachineConfiguration")]
        public VirtualMachineConfiguration VirtualMachineConfiguration {get; set; }
        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (this.VirtualMachineConfiguration != null)
            {
                this.VirtualMachineConfiguration.Validate();
            }
        }
    }
}