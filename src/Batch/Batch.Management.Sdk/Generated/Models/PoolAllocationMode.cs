// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.Batch.Models
{

    /// <summary>
    /// Defines values for PoolAllocationMode.
    /// </summary>


    [Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
    public enum PoolAllocationMode
    {
        /// <summary>
        /// Pools will be allocated in subscriptions owned by the Batch service.
        /// </summary>
        [System.Runtime.Serialization.EnumMember(Value = "BatchService")]
        BatchService,
        /// <summary>
        /// Pools will be allocated in a subscription owned by the user.
        /// </summary>
        [System.Runtime.Serialization.EnumMember(Value = "UserSubscription")]
        UserSubscription
    }
    internal static class PoolAllocationModeEnumExtension
    {
        internal static string ToSerializedValue(this PoolAllocationMode? value)
        {
            return value == null ? null : ((PoolAllocationMode)value).ToSerializedValue();
        }
        internal static string ToSerializedValue(this PoolAllocationMode value)
        {
            switch( value )
            {
                case PoolAllocationMode.BatchService:
                    return "BatchService";
                case PoolAllocationMode.UserSubscription:
                    return "UserSubscription";
            }
            return null;
        }
        internal static PoolAllocationMode? ParsePoolAllocationMode(this string value)
        {
            switch( value )
            {
                case "BatchService":
                    return PoolAllocationMode.BatchService;
                case "UserSubscription":
                    return PoolAllocationMode.UserSubscription;
            }
            return null;
        }
    }
}