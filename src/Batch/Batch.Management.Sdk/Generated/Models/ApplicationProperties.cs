// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.Batch.Models
{
    using System.Linq;

    /// <summary>
    /// The properties associated with the Application.
    /// </summary>
    public partial class ApplicationProperties
    {
        /// <summary>
        /// Initializes a new instance of the ApplicationProperties class.
        /// </summary>
        public ApplicationProperties()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the ApplicationProperties class.
        /// </summary>

        /// <param name="displayName">The display name for the application.
        /// </param>

        /// <param name="allowUpdates">A value indicating whether packages within the application may be
        /// overwritten using the same version string.
        /// </param>

        /// <param name="defaultVersion">The package to use if a client requests the application but does not
        /// specify a version. This property can only be set to the name of an existing
        /// package.
        /// </param>
        public ApplicationProperties(string displayName = default(string), bool? allowUpdates = default(bool?), string defaultVersion = default(string))

        {
            this.DisplayName = displayName;
            this.AllowUpdates = allowUpdates;
            this.DefaultVersion = defaultVersion;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets or sets the display name for the application.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "displayName")]
        public string DisplayName {get; set; }

        /// <summary>
        /// Gets or sets a value indicating whether packages within the application may
        /// be overwritten using the same version string.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "allowUpdates")]
        public bool? AllowUpdates {get; set; }

        /// <summary>
        /// Gets or sets the package to use if a client requests the application but
        /// does not specify a version. This property can only be set to the name of an
        /// existing package.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "defaultVersion")]
        public string DefaultVersion {get; set; }
    }
}