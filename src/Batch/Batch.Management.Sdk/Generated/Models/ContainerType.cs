// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.Batch.Models
{

    /// <summary>
    /// Defines values for ContainerType.
    /// </summary>


    [Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
    public enum ContainerType
    {
        /// <summary>
        /// A Docker compatible container technology will be used to launch the
        /// containers.
        /// </summary>
        [System.Runtime.Serialization.EnumMember(Value = "DockerCompatible")]
        DockerCompatible
    }
    internal static class ContainerTypeEnumExtension
    {
        internal static string ToSerializedValue(this ContainerType? value)
        {
            return value == null ? null : ((ContainerType)value).ToSerializedValue();
        }
        internal static string ToSerializedValue(this ContainerType value)
        {
            switch( value )
            {
                case ContainerType.DockerCompatible:
                    return "DockerCompatible";
            }
            return null;
        }
        internal static ContainerType? ParseContainerType(this string value)
        {
            switch( value )
            {
                case "DockerCompatible":
                    return ContainerType.DockerCompatible;
            }
            return null;
        }
    }
}