// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.Batch.Models
{
    using System.Linq;

    /// <summary>
    /// The endpoint configuration for a pool.
    /// </summary>
    /// <remarks>
    /// The endpoint configuration for a pool.
    /// </remarks>
    public partial class PoolEndpointConfiguration
    {
        /// <summary>
        /// Initializes a new instance of the PoolEndpointConfiguration class.
        /// </summary>
        public PoolEndpointConfiguration()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the PoolEndpointConfiguration class.
        /// </summary>

        /// <param name="inboundNatPools">The maximum number of inbound NAT pools per Batch pool is 5. If the maximum
        /// number of inbound NAT pools is exceeded the request fails with HTTP status
        /// code 400. This cannot be specified if the IPAddressProvisioningType is
        /// NoPublicIPAddresses.
        /// </param>
        public PoolEndpointConfiguration(System.Collections.Generic.IList<InboundNatPool> inboundNatPools)

        {
            this.InboundNatPools = inboundNatPools;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets or sets the maximum number of inbound NAT pools per Batch pool is 5.
        /// If the maximum number of inbound NAT pools is exceeded the request fails
        /// with HTTP status code 400. This cannot be specified if the
        /// IPAddressProvisioningType is NoPublicIPAddresses.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "inboundNatPools")]
        public System.Collections.Generic.IList<InboundNatPool> InboundNatPools {get; set; }
        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (this.InboundNatPools == null)
            {
                throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.CannotBeNull, "InboundNatPools");
            }
            if (this.InboundNatPools != null)
            {
                foreach (var element in this.InboundNatPools)
                {
                    if (element != null)
                    {
                        element.Validate();
                    }
                }
            }
        }
    }
}