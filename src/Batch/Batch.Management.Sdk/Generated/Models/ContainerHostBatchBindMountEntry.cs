// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.Batch.Models
{
    using System.Linq;

    /// <summary>
    /// The entry of path and mount mode you want to mount into task container.
    /// </summary>
    /// <remarks>
    /// The entry of path and mount mode you want to mount into task container.
    /// </remarks>
    public partial class ContainerHostBatchBindMountEntry
    {
        /// <summary>
        /// Initializes a new instance of the ContainerHostBatchBindMountEntry class.
        /// </summary>
        public ContainerHostBatchBindMountEntry()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the ContainerHostBatchBindMountEntry class.
        /// </summary>

        /// <param name="source">The paths which will be mounted to container task&#39;s container.
        /// Possible values include: &#39;Shared&#39;, &#39;Startup&#39;, &#39;VfsMounts&#39;, &#39;Task&#39;,
        /// &#39;JobPrep&#39;, &#39;Applications&#39;</param>

        /// <param name="isReadOnly">For Linux, if you mount this path as a read/write mode, this does not mean
        /// that all users in container have the read/write access for the path, it
        /// depends on the access in host VM. If this path is mounted read-only, all
        /// users within the container will not be able to modify the path.
        /// </param>
        public ContainerHostBatchBindMountEntry(string source = default(string), bool? isReadOnly = default(bool?))

        {
            this.Source = source;
            this.IsReadOnly = isReadOnly;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets or sets the paths which will be mounted to container task&#39;s container. Possible values include: &#39;Shared&#39;, &#39;Startup&#39;, &#39;VfsMounts&#39;, &#39;Task&#39;, &#39;JobPrep&#39;, &#39;Applications&#39;
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "source")]
        public string Source {get; set; }

        /// <summary>
        /// Gets or sets for Linux, if you mount this path as a read/write mode, this
        /// does not mean that all users in container have the read/write access for
        /// the path, it depends on the access in host VM. If this path is mounted
        /// read-only, all users within the container will not be able to modify the
        /// path.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "isReadOnly")]
        public bool? IsReadOnly {get; set; }
    }
}