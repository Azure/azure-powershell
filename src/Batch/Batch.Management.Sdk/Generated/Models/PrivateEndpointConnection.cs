// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.Batch.Models
{
    using System.Linq;

    /// <summary>
    /// Contains information about a private link resource.
    /// </summary>
    [Microsoft.Rest.Serialization.JsonTransformation]
    public partial class PrivateEndpointConnection : ProxyResource
    {
        /// <summary>
        /// Initializes a new instance of the PrivateEndpointConnection class.
        /// </summary>
        public PrivateEndpointConnection()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the PrivateEndpointConnection class.
        /// </summary>

        /// <param name="id">The ID of the resource.
        /// </param>

        /// <param name="name">The name of the resource.
        /// </param>

        /// <param name="type">The type of the resource.
        /// </param>

        /// <param name="etag">The ETag of the resource, used for concurrency statements.
        /// </param>

        /// <param name="privateEndpoint">The private endpoint of the private endpoint connection.
        /// </param>

        /// <param name="provisioningState">The provisioning state of the private endpoint connection.
        /// Possible values include: &#39;Creating&#39;, &#39;Updating&#39;, &#39;Deleting&#39;, &#39;Succeeded&#39;,
        /// &#39;Failed&#39;, &#39;Cancelled&#39;</param>

        /// <param name="groupIds">The value has one and only one group id.
        /// </param>

        /// <param name="privateLinkServiceConnectionState">The private link service connection state of the private endpoint
        /// connection
        /// </param>
        public PrivateEndpointConnection(string id = default(string), string name = default(string), string type = default(string), string etag = default(string), PrivateEndpoint privateEndpoint = default(PrivateEndpoint), PrivateEndpointConnectionProvisioningState provisioningState = default(PrivateEndpointConnectionProvisioningState), System.Collections.Generic.IList<string> groupIds = default(System.Collections.Generic.IList<string>), PrivateLinkServiceConnectionState privateLinkServiceConnectionState = default(PrivateLinkServiceConnectionState))

        : base(id, name, type, etag)
        {
            this.PrivateEndpoint = privateEndpoint;
            this.ProvisioningState = provisioningState;
            this.GroupIds = groupIds;
            this.PrivateLinkServiceConnectionState = privateLinkServiceConnectionState;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets the private endpoint of the private endpoint connection.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.privateEndpoint")]
        public PrivateEndpoint PrivateEndpoint {get; private set; }

        /// <summary>
        /// Gets the provisioning state of the private endpoint connection. Possible values include: &#39;Creating&#39;, &#39;Updating&#39;, &#39;Deleting&#39;, &#39;Succeeded&#39;, &#39;Failed&#39;, &#39;Cancelled&#39;
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.provisioningState")]
        public PrivateEndpointConnectionProvisioningState ProvisioningState {get; private set; }

        /// <summary>
        /// Gets the value has one and only one group id.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.groupIds")]
        public System.Collections.Generic.IList<string> GroupIds {get; private set; }

        /// <summary>
        /// Gets or sets the private link service connection state of the private
        /// endpoint connection
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.privateLinkServiceConnectionState")]
        public PrivateLinkServiceConnectionState PrivateLinkServiceConnectionState {get; set; }
        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {



            if (this.PrivateLinkServiceConnectionState != null)
            {
                this.PrivateLinkServiceConnectionState.Validate();
            }
        }
    }
}