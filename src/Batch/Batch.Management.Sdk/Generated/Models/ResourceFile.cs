// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.Batch.Models
{
    using System.Linq;

    /// <summary>
    /// A single file or multiple files to be downloaded to a compute node.
    /// </summary>
    /// <remarks>
    /// A single file or multiple files to be downloaded to a compute node.
    /// </remarks>
    public partial class ResourceFile
    {
        /// <summary>
        /// Initializes a new instance of the ResourceFile class.
        /// </summary>
        public ResourceFile()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the ResourceFile class.
        /// </summary>

        /// <param name="autoStorageContainerName">The autoStorageContainerName, storageContainerUrl and httpUrl properties
        /// are mutually exclusive and one of them must be specified.
        /// </param>

        /// <param name="storageContainerUrl">The autoStorageContainerName, storageContainerUrl and httpUrl properties
        /// are mutually exclusive and one of them must be specified. This URL must be
        /// readable and listable from compute nodes. There are three ways to get such
        /// a URL for a container in Azure storage: include a Shared Access Signature
        /// (SAS) granting read and list permissions on the container, use a managed
        /// identity with read and list permissions, or set the ACL for the container
        /// to allow public access.
        /// </param>

        /// <param name="httpUrl">The autoStorageContainerName, storageContainerUrl and httpUrl properties
        /// are mutually exclusive and one of them must be specified. If the URL points
        /// to Azure Blob Storage, it must be readable from compute nodes. There are
        /// three ways to get such a URL for a blob in Azure storage: include a Shared
        /// Access Signature (SAS) granting read permissions on the blob, use a managed
        /// identity with read permission, or set the ACL for the blob or its container
        /// to allow public access.
        /// </param>

        /// <param name="blobPrefix">The property is valid only when autoStorageContainerName or
        /// storageContainerUrl is used. This prefix can be a partial filename or a
        /// subdirectory. If a prefix is not specified, all the files in the container
        /// will be downloaded.
        /// </param>

        /// <param name="filePath">If the httpUrl property is specified, the filePath is required and
        /// describes the path which the file will be downloaded to, including the
        /// filename. Otherwise, if the autoStorageContainerName or storageContainerUrl
        /// property is specified, filePath is optional and is the directory to
        /// download the files to. In the case where filePath is used as a directory,
        /// any directory structure already associated with the input data will be
        /// retained in full and appended to the specified filePath directory. The
        /// specified relative path cannot break out of the task&#39;s working directory
        /// (for example by using &#39;..&#39;).
        /// </param>

        /// <param name="fileMode">This property applies only to files being downloaded to Linux compute
        /// nodes. It will be ignored if it is specified for a resourceFile which will
        /// be downloaded to a Windows node. If this property is not specified for a
        /// Linux node, then a default value of 0770 is applied to the file.
        /// </param>

        /// <param name="identityReference">The reference to a user assigned identity associated with the Batch pool
        /// which a compute node will use.
        /// </param>
        public ResourceFile(string autoStorageContainerName = default(string), string storageContainerUrl = default(string), string httpUrl = default(string), string blobPrefix = default(string), string filePath = default(string), string fileMode = default(string), ComputeNodeIdentityReference identityReference = default(ComputeNodeIdentityReference))

        {
            this.AutoStorageContainerName = autoStorageContainerName;
            this.StorageContainerUrl = storageContainerUrl;
            this.HttpUrl = httpUrl;
            this.BlobPrefix = blobPrefix;
            this.FilePath = filePath;
            this.FileMode = fileMode;
            this.IdentityReference = identityReference;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets or sets the autoStorageContainerName, storageContainerUrl and httpUrl
        /// properties are mutually exclusive and one of them must be specified.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "autoStorageContainerName")]
        public string AutoStorageContainerName {get; set; }

        /// <summary>
        /// Gets or sets the autoStorageContainerName, storageContainerUrl and httpUrl
        /// properties are mutually exclusive and one of them must be specified. This
        /// URL must be readable and listable from compute nodes. There are three ways
        /// to get such a URL for a container in Azure storage: include a Shared Access
        /// Signature (SAS) granting read and list permissions on the container, use a
        /// managed identity with read and list permissions, or set the ACL for the
        /// container to allow public access.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "storageContainerUrl")]
        public string StorageContainerUrl {get; set; }

        /// <summary>
        /// Gets or sets the autoStorageContainerName, storageContainerUrl and httpUrl
        /// properties are mutually exclusive and one of them must be specified. If the
        /// URL points to Azure Blob Storage, it must be readable from compute nodes.
        /// There are three ways to get such a URL for a blob in Azure storage: include
        /// a Shared Access Signature (SAS) granting read permissions on the blob, use
        /// a managed identity with read permission, or set the ACL for the blob or its
        /// container to allow public access.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "httpUrl")]
        public string HttpUrl {get; set; }

        /// <summary>
        /// Gets or sets the property is valid only when autoStorageContainerName or
        /// storageContainerUrl is used. This prefix can be a partial filename or a
        /// subdirectory. If a prefix is not specified, all the files in the container
        /// will be downloaded.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "blobPrefix")]
        public string BlobPrefix {get; set; }

        /// <summary>
        /// Gets or sets if the httpUrl property is specified, the filePath is required
        /// and describes the path which the file will be downloaded to, including the
        /// filename. Otherwise, if the autoStorageContainerName or storageContainerUrl
        /// property is specified, filePath is optional and is the directory to
        /// download the files to. In the case where filePath is used as a directory,
        /// any directory structure already associated with the input data will be
        /// retained in full and appended to the specified filePath directory. The
        /// specified relative path cannot break out of the task&#39;s working directory
        /// (for example by using &#39;..&#39;).
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "filePath")]
        public string FilePath {get; set; }

        /// <summary>
        /// Gets or sets this property applies only to files being downloaded to Linux
        /// compute nodes. It will be ignored if it is specified for a resourceFile
        /// which will be downloaded to a Windows node. If this property is not
        /// specified for a Linux node, then a default value of 0770 is applied to the
        /// file.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "fileMode")]
        public string FileMode {get; set; }

        /// <summary>
        /// Gets or sets the reference to a user assigned identity associated with the
        /// Batch pool which a compute node will use.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "identityReference")]
        public ComputeNodeIdentityReference IdentityReference {get; set; }
    }
}