
# ----------------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# http://www.apache.org/licenses/LICENSE-2.0
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# Code generated by Microsoft (R) AutoRest Code Generator.Changes may cause incorrect behavior and will be lost if the code
# is regenerated.
# ----------------------------------------------------------------------------------

<#
.Synopsis
Create an in-memory object for Port.
.Description
Create an in-memory object for Port.

.Outputs
Microsoft.Azure.PowerShell.Cmdlets.ContainerInstance.Models.Port
.Link
https://learn.microsoft.com/powershell/module/Az.ContainerInstance/new-azcontainergroupportobject
#>
function New-AzContainerGroupPortObject {
    [Microsoft.Azure.PowerShell.Cmdlets.ContainerInstance.ModelCmdletAttribute()]
    [OutputType('Microsoft.Azure.PowerShell.Cmdlets.ContainerInstance.Models.Port')]
    [CmdletBinding(PositionalBinding=$false)]
    Param(

        [Parameter(Mandatory, HelpMessage="The port number.")]
        [int]
        $Port1,
        [Parameter(HelpMessage="The protocol associated with the port.")]
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerInstance.PSArgumentCompleterAttribute("TCP", "UDP")]
        [string]
        $Protocol
    )

    process {
        $Object = [Microsoft.Azure.PowerShell.Cmdlets.ContainerInstance.Models.Port]::New()

        if ($PSBoundParameters.ContainsKey('Port1')) {
            $Object.Port1 = $Port1
        }
        if ($PSBoundParameters.ContainsKey('Protocol')) {
            $Object.Protocol = $Protocol
        }
        return $Object
    }
}

