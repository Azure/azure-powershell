// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Cdn.Support
{

    /// <summary>Name of the pricing tier.</summary>
    [System.ComponentModel.TypeConverter(typeof(Microsoft.Azure.PowerShell.Cmdlets.Cdn.Support.SkuNameTypeConverter))]
    public partial struct SkuName :
        System.Management.Automation.IArgumentCompleter
    {

        /// <summary>
        /// Implementations of this function are called by PowerShell to complete arguments.
        /// </summary>
        /// <param name="commandName">The name of the command that needs argument completion.</param>
        /// <param name="parameterName">The name of the parameter that needs argument completion.</param>
        /// <param name="wordToComplete">The (possibly empty) word being completed.</param>
        /// <param name="commandAst">The command ast in case it is needed for completion.</param>
        /// <param name="fakeBoundParameters">This parameter is similar to $PSBoundParameters, except that sometimes PowerShell cannot
        /// or will not attempt to evaluate an argument, in which case you may need to use commandAst.</param>
        /// <returns>
        /// A collection of completion results, most like with ResultType set to ParameterValue.
        /// </returns>
        public global::System.Collections.Generic.IEnumerable<global::System.Management.Automation.CompletionResult> CompleteArgument(global::System.String commandName, global::System.String parameterName, global::System.String wordToComplete, global::System.Management.Automation.Language.CommandAst commandAst, global::System.Collections.IDictionary fakeBoundParameters)
        {
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "Standard_Verizon".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'Standard_Verizon'", "Standard_Verizon", global::System.Management.Automation.CompletionResultType.ParameterValue, "Standard_Verizon");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "Premium_Verizon".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'Premium_Verizon'", "Premium_Verizon", global::System.Management.Automation.CompletionResultType.ParameterValue, "Premium_Verizon");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "Custom_Verizon".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'Custom_Verizon'", "Custom_Verizon", global::System.Management.Automation.CompletionResultType.ParameterValue, "Custom_Verizon");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "Standard_Akamai".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'Standard_Akamai'", "Standard_Akamai", global::System.Management.Automation.CompletionResultType.ParameterValue, "Standard_Akamai");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "Standard_ChinaCdn".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'Standard_ChinaCdn'", "Standard_ChinaCdn", global::System.Management.Automation.CompletionResultType.ParameterValue, "Standard_ChinaCdn");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "Standard_Microsoft".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'Standard_Microsoft'", "Standard_Microsoft", global::System.Management.Automation.CompletionResultType.ParameterValue, "Standard_Microsoft");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "Standard_AzureFrontDoor".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'Standard_AzureFrontDoor'", "Standard_AzureFrontDoor", global::System.Management.Automation.CompletionResultType.ParameterValue, "Standard_AzureFrontDoor");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "Premium_AzureFrontDoor".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'Premium_AzureFrontDoor'", "Premium_AzureFrontDoor", global::System.Management.Automation.CompletionResultType.ParameterValue, "Premium_AzureFrontDoor");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "Standard_955BandWidth_ChinaCdn".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'Standard_955BandWidth_ChinaCdn'", "Standard_955BandWidth_ChinaCdn", global::System.Management.Automation.CompletionResultType.ParameterValue, "Standard_955BandWidth_ChinaCdn");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "Standard_AvgBandWidth_ChinaCdn".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'Standard_AvgBandWidth_ChinaCdn'", "Standard_AvgBandWidth_ChinaCdn", global::System.Management.Automation.CompletionResultType.ParameterValue, "Standard_AvgBandWidth_ChinaCdn");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "StandardPlus_ChinaCdn".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'StandardPlus_ChinaCdn'", "StandardPlus_ChinaCdn", global::System.Management.Automation.CompletionResultType.ParameterValue, "StandardPlus_ChinaCdn");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "StandardPlus_955BandWidth_ChinaCdn".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'StandardPlus_955BandWidth_ChinaCdn'", "StandardPlus_955BandWidth_ChinaCdn", global::System.Management.Automation.CompletionResultType.ParameterValue, "StandardPlus_955BandWidth_ChinaCdn");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "StandardPlus_AvgBandWidth_ChinaCdn".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'StandardPlus_AvgBandWidth_ChinaCdn'", "StandardPlus_AvgBandWidth_ChinaCdn", global::System.Management.Automation.CompletionResultType.ParameterValue, "StandardPlus_AvgBandWidth_ChinaCdn");
            }
        }
    }
}