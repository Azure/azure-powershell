// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20210601
{
    using static Microsoft.Azure.PowerShell.Cmdlets.Cdn.Runtime.Extensions;

    /// <summary>
    /// Defines the route configuration override action for the delivery rule. Only applicable to Frontdoor Standard/Premium Profiles.
    /// </summary>
    public partial class DeliveryRuleRouteConfigurationOverrideAction :
        Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20210601.IDeliveryRuleRouteConfigurationOverrideAction,
        Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20210601.IDeliveryRuleRouteConfigurationOverrideActionInternal,
        Microsoft.Azure.PowerShell.Cmdlets.Cdn.Runtime.IValidates
    {
        /// <summary>
        /// Backing field for Inherited model <see cref= "Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20210601.IDeliveryRuleAction1"
        /// />
        /// </summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20210601.IDeliveryRuleAction1 __deliveryRuleAction1 = new Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20210601.DeliveryRuleAction1();

        /// <summary>Caching behavior for the requests</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cdn.Origin(Microsoft.Azure.PowerShell.Cmdlets.Cdn.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Cdn.Support.RuleCacheBehavior? CacheConfigurationCacheBehavior { get => ((Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20210601.IRouteConfigurationOverrideActionParametersInternal)Parameter).CacheConfigurationCacheBehavior; set => ((Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20210601.IRouteConfigurationOverrideActionParametersInternal)Parameter).CacheConfigurationCacheBehavior = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.Cdn.Support.RuleCacheBehavior)""); }

        /// <summary>
        /// The duration for which the content needs to be cached. Allowed format is [d.]hh:mm:ss
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cdn.Origin(Microsoft.Azure.PowerShell.Cmdlets.Cdn.PropertyOrigin.Inlined)]
        public string CacheConfigurationCacheDuration { get => ((Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20210601.IRouteConfigurationOverrideActionParametersInternal)Parameter).CacheConfigurationCacheDuration; set => ((Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20210601.IRouteConfigurationOverrideActionParametersInternal)Parameter).CacheConfigurationCacheDuration = value ?? null; }

        /// <summary>
        /// Indicates whether content compression is enabled. If compression is enabled, content will be served as compressed if user
        /// requests for a compressed version. Content won't be compressed on AzureFrontDoor when requested content is smaller than
        /// 1 byte or larger than 1 MB.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cdn.Origin(Microsoft.Azure.PowerShell.Cmdlets.Cdn.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Cdn.Support.RuleIsCompressionEnabled? CacheConfigurationIsCompressionEnabled { get => ((Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20210601.IRouteConfigurationOverrideActionParametersInternal)Parameter).CacheConfigurationIsCompressionEnabled; set => ((Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20210601.IRouteConfigurationOverrideActionParametersInternal)Parameter).CacheConfigurationIsCompressionEnabled = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.Cdn.Support.RuleIsCompressionEnabled)""); }

        /// <summary>query parameters to include or exclude (comma separated).</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cdn.Origin(Microsoft.Azure.PowerShell.Cmdlets.Cdn.PropertyOrigin.Inlined)]
        public string CacheConfigurationQueryParameter { get => ((Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20210601.IRouteConfigurationOverrideActionParametersInternal)Parameter).CacheConfigurationQueryParameter; set => ((Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20210601.IRouteConfigurationOverrideActionParametersInternal)Parameter).CacheConfigurationQueryParameter = value ?? null; }

        /// <summary>
        /// Defines how Frontdoor caches requests that include query strings. You can ignore any query strings when caching, ignore
        /// specific query strings, cache every request with a unique URL, or cache specific query strings.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cdn.Origin(Microsoft.Azure.PowerShell.Cmdlets.Cdn.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Cdn.Support.RuleQueryStringCachingBehavior? CacheConfigurationQueryStringCachingBehavior { get => ((Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20210601.IRouteConfigurationOverrideActionParametersInternal)Parameter).CacheConfigurationQueryStringCachingBehavior; set => ((Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20210601.IRouteConfigurationOverrideActionParametersInternal)Parameter).CacheConfigurationQueryStringCachingBehavior = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.Cdn.Support.RuleQueryStringCachingBehavior)""); }

        /// <summary>Internal Acessors for OriginGroupOverrideOriginGroup</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20210601.IResourceReference Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20210601.IDeliveryRuleRouteConfigurationOverrideActionInternal.OriginGroupOverrideOriginGroup { get => ((Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20210601.IRouteConfigurationOverrideActionParametersInternal)Parameter).OriginGroupOverrideOriginGroup; set => ((Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20210601.IRouteConfigurationOverrideActionParametersInternal)Parameter).OriginGroupOverrideOriginGroup = value; }

        /// <summary>Internal Acessors for Parameter</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20210601.IRouteConfigurationOverrideActionParameters Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20210601.IDeliveryRuleRouteConfigurationOverrideActionInternal.Parameter { get => (this._parameter = this._parameter ?? new Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20210601.RouteConfigurationOverrideActionParameters()); set { {_parameter = value;} } }

        /// <summary>Internal Acessors for ParameterCacheConfiguration</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20210601.ICacheConfiguration Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20210601.IDeliveryRuleRouteConfigurationOverrideActionInternal.ParameterCacheConfiguration { get => ((Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20210601.IRouteConfigurationOverrideActionParametersInternal)Parameter).CacheConfiguration; set => ((Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20210601.IRouteConfigurationOverrideActionParametersInternal)Parameter).CacheConfiguration = value; }

        /// <summary>Internal Acessors for ParameterOriginGroupOverride</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20210601.IOriginGroupOverride Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20210601.IDeliveryRuleRouteConfigurationOverrideActionInternal.ParameterOriginGroupOverride { get => ((Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20210601.IRouteConfigurationOverrideActionParametersInternal)Parameter).OriginGroupOverride; set => ((Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20210601.IRouteConfigurationOverrideActionParametersInternal)Parameter).OriginGroupOverride = value; }

        /// <summary>Internal Acessors for ParameterTypeName</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20210601.IDeliveryRuleRouteConfigurationOverrideActionInternal.ParameterTypeName { get => ((Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20210601.IRouteConfigurationOverrideActionParametersInternal)Parameter).TypeName; set => ((Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20210601.IRouteConfigurationOverrideActionParametersInternal)Parameter).TypeName = value; }

        /// <summary>The name of the action for the delivery rule.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cdn.Origin(Microsoft.Azure.PowerShell.Cmdlets.Cdn.PropertyOrigin.Inherited)]
        public Microsoft.Azure.PowerShell.Cmdlets.Cdn.Support.DeliveryRuleAction Name { get => ((Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20210601.IDeliveryRuleAction1Internal)__deliveryRuleAction1).Name; set => ((Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20210601.IDeliveryRuleAction1Internal)__deliveryRuleAction1).Name = value ; }

        /// <summary>Resource ID.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cdn.Origin(Microsoft.Azure.PowerShell.Cmdlets.Cdn.PropertyOrigin.Inlined)]
        public string OriginGroupId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20210601.IRouteConfigurationOverrideActionParametersInternal)Parameter).OriginGroupId; set => ((Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20210601.IRouteConfigurationOverrideActionParametersInternal)Parameter).OriginGroupId = value ?? null; }

        /// <summary>Protocol this rule will use when forwarding traffic to backends.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cdn.Origin(Microsoft.Azure.PowerShell.Cmdlets.Cdn.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Cdn.Support.ForwardingProtocol? OriginGroupOverrideForwardingProtocol { get => ((Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20210601.IRouteConfigurationOverrideActionParametersInternal)Parameter).OriginGroupOverrideForwardingProtocol; set => ((Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20210601.IRouteConfigurationOverrideActionParametersInternal)Parameter).OriginGroupOverrideForwardingProtocol = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.Cdn.Support.ForwardingProtocol)""); }

        /// <summary>Backing field for <see cref="Parameter" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20210601.IRouteConfigurationOverrideActionParameters _parameter;

        /// <summary>Defines the parameters for the action.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cdn.Origin(Microsoft.Azure.PowerShell.Cmdlets.Cdn.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20210601.IRouteConfigurationOverrideActionParameters Parameter { get => (this._parameter = this._parameter ?? new Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20210601.RouteConfigurationOverrideActionParameters()); set => this._parameter = value; }

        [Microsoft.Azure.PowerShell.Cmdlets.Cdn.Origin(Microsoft.Azure.PowerShell.Cmdlets.Cdn.PropertyOrigin.Inlined)]
        public string ParameterTypeName { get => ((Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20210601.IRouteConfigurationOverrideActionParametersInternal)Parameter).TypeName; }

        /// <summary>
        /// Creates an new <see cref="DeliveryRuleRouteConfigurationOverrideAction" /> instance.
        /// </summary>
        public DeliveryRuleRouteConfigurationOverrideAction()
        {

        }

        /// <summary>Validates that this object meets the validation criteria.</summary>
        /// <param name="eventListener">an <see cref="Microsoft.Azure.PowerShell.Cmdlets.Cdn.Runtime.IEventListener" /> instance that will receive validation
        /// events.</param>
        /// <returns>
        /// A <see cref = "global::System.Threading.Tasks.Task" /> that will be complete when validation is completed.
        /// </returns>
        public async global::System.Threading.Tasks.Task Validate(Microsoft.Azure.PowerShell.Cmdlets.Cdn.Runtime.IEventListener eventListener)
        {
            await eventListener.AssertNotNull(nameof(__deliveryRuleAction1), __deliveryRuleAction1);
            await eventListener.AssertObjectIsValid(nameof(__deliveryRuleAction1), __deliveryRuleAction1);
        }
    }
    /// Defines the route configuration override action for the delivery rule. Only applicable to Frontdoor Standard/Premium Profiles.
    public partial interface IDeliveryRuleRouteConfigurationOverrideAction :
        Microsoft.Azure.PowerShell.Cmdlets.Cdn.Runtime.IJsonSerializable,
        Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20210601.IDeliveryRuleAction1
    {
        /// <summary>Caching behavior for the requests</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cdn.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Caching behavior for the requests",
        SerializedName = @"cacheBehavior",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Cdn.Support.RuleCacheBehavior) })]
        Microsoft.Azure.PowerShell.Cmdlets.Cdn.Support.RuleCacheBehavior? CacheConfigurationCacheBehavior { get; set; }
        /// <summary>
        /// The duration for which the content needs to be cached. Allowed format is [d.]hh:mm:ss
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cdn.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The duration for which the content needs to be cached. Allowed format is [d.]hh:mm:ss",
        SerializedName = @"cacheDuration",
        PossibleTypes = new [] { typeof(string) })]
        string CacheConfigurationCacheDuration { get; set; }
        /// <summary>
        /// Indicates whether content compression is enabled. If compression is enabled, content will be served as compressed if user
        /// requests for a compressed version. Content won't be compressed on AzureFrontDoor when requested content is smaller than
        /// 1 byte or larger than 1 MB.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cdn.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Indicates whether content compression is enabled. If compression is enabled, content will be served as compressed if user requests for a compressed version. Content won't be compressed on AzureFrontDoor when requested content is smaller than 1 byte or larger than 1 MB.",
        SerializedName = @"isCompressionEnabled",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Cdn.Support.RuleIsCompressionEnabled) })]
        Microsoft.Azure.PowerShell.Cmdlets.Cdn.Support.RuleIsCompressionEnabled? CacheConfigurationIsCompressionEnabled { get; set; }
        /// <summary>query parameters to include or exclude (comma separated).</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cdn.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"query parameters to include or exclude (comma separated).",
        SerializedName = @"queryParameters",
        PossibleTypes = new [] { typeof(string) })]
        string CacheConfigurationQueryParameter { get; set; }
        /// <summary>
        /// Defines how Frontdoor caches requests that include query strings. You can ignore any query strings when caching, ignore
        /// specific query strings, cache every request with a unique URL, or cache specific query strings.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cdn.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Defines how Frontdoor caches requests that include query strings. You can ignore any query strings when caching, ignore specific query strings, cache every request with a unique URL, or cache specific query strings.",
        SerializedName = @"queryStringCachingBehavior",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Cdn.Support.RuleQueryStringCachingBehavior) })]
        Microsoft.Azure.PowerShell.Cmdlets.Cdn.Support.RuleQueryStringCachingBehavior? CacheConfigurationQueryStringCachingBehavior { get; set; }
        /// <summary>Resource ID.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cdn.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Resource ID.",
        SerializedName = @"id",
        PossibleTypes = new [] { typeof(string) })]
        string OriginGroupId { get; set; }
        /// <summary>Protocol this rule will use when forwarding traffic to backends.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cdn.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Protocol this rule will use when forwarding traffic to backends.",
        SerializedName = @"forwardingProtocol",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Cdn.Support.ForwardingProtocol) })]
        Microsoft.Azure.PowerShell.Cmdlets.Cdn.Support.ForwardingProtocol? OriginGroupOverrideForwardingProtocol { get; set; }

        [Microsoft.Azure.PowerShell.Cmdlets.Cdn.Runtime.Info(
        Required = true,
        ReadOnly = true,
        Description = @"",
        SerializedName = @"typeName",
        PossibleTypes = new [] { typeof(string) })]
        string ParameterTypeName { get;  }

    }
    /// Defines the route configuration override action for the delivery rule. Only applicable to Frontdoor Standard/Premium Profiles.
    internal partial interface IDeliveryRuleRouteConfigurationOverrideActionInternal :
        Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20210601.IDeliveryRuleAction1Internal
    {
        /// <summary>Caching behavior for the requests</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Cdn.Support.RuleCacheBehavior? CacheConfigurationCacheBehavior { get; set; }
        /// <summary>
        /// The duration for which the content needs to be cached. Allowed format is [d.]hh:mm:ss
        /// </summary>
        string CacheConfigurationCacheDuration { get; set; }
        /// <summary>
        /// Indicates whether content compression is enabled. If compression is enabled, content will be served as compressed if user
        /// requests for a compressed version. Content won't be compressed on AzureFrontDoor when requested content is smaller than
        /// 1 byte or larger than 1 MB.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Cdn.Support.RuleIsCompressionEnabled? CacheConfigurationIsCompressionEnabled { get; set; }
        /// <summary>query parameters to include or exclude (comma separated).</summary>
        string CacheConfigurationQueryParameter { get; set; }
        /// <summary>
        /// Defines how Frontdoor caches requests that include query strings. You can ignore any query strings when caching, ignore
        /// specific query strings, cache every request with a unique URL, or cache specific query strings.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Cdn.Support.RuleQueryStringCachingBehavior? CacheConfigurationQueryStringCachingBehavior { get; set; }
        /// <summary>Resource ID.</summary>
        string OriginGroupId { get; set; }
        /// <summary>Protocol this rule will use when forwarding traffic to backends.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Cdn.Support.ForwardingProtocol? OriginGroupOverrideForwardingProtocol { get; set; }
        /// <summary>defines the OriginGroup that would override the DefaultOriginGroup on route.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20210601.IResourceReference OriginGroupOverrideOriginGroup { get; set; }
        /// <summary>Defines the parameters for the action.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20210601.IRouteConfigurationOverrideActionParameters Parameter { get; set; }
        /// <summary>
        /// The caching configuration associated with this rule. To disable caching, do not provide a cacheConfiguration object.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20210601.ICacheConfiguration ParameterCacheConfiguration { get; set; }
        /// <summary>
        /// A reference to the origin group override configuration. Leave empty to use the default origin group on route.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20210601.IOriginGroupOverride ParameterOriginGroupOverride { get; set; }

        string ParameterTypeName { get; set; }

    }
}