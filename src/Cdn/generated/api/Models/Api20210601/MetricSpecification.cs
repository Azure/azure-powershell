// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20210601
{
    using static Microsoft.Azure.PowerShell.Cmdlets.Cdn.Runtime.Extensions;

    /// <summary>Metric specification of operation.</summary>
    public partial class MetricSpecification :
        Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20210601.IMetricSpecification,
        Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20210601.IMetricSpecificationInternal
    {

        /// <summary>Backing field for <see cref="AggregationType" /> property.</summary>
        private string _aggregationType;

        /// <summary>
        /// The metric aggregation type. Possible values include: 'Average', 'Count', 'Total'.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cdn.Origin(Microsoft.Azure.PowerShell.Cmdlets.Cdn.PropertyOrigin.Owned)]
        public string AggregationType { get => this._aggregationType; set => this._aggregationType = value; }

        /// <summary>Backing field for <see cref="Availability" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20210601.IMetricAvailability[] _availability;

        /// <summary>Retention policies of a resource metric.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cdn.Origin(Microsoft.Azure.PowerShell.Cmdlets.Cdn.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20210601.IMetricAvailability[] Availability { get => this._availability; set => this._availability = value; }

        /// <summary>Backing field for <see cref="Dimension" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20210601.IDimensionProperties[] _dimension;

        /// <summary>The dimensions of metric</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cdn.Origin(Microsoft.Azure.PowerShell.Cmdlets.Cdn.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20210601.IDimensionProperties[] Dimension { get => this._dimension; set => this._dimension = value; }

        /// <summary>Backing field for <see cref="DisplayDescription" /> property.</summary>
        private string _displayDescription;

        /// <summary>Display description of metric specification.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cdn.Origin(Microsoft.Azure.PowerShell.Cmdlets.Cdn.PropertyOrigin.Owned)]
        public string DisplayDescription { get => this._displayDescription; set => this._displayDescription = value; }

        /// <summary>Backing field for <see cref="DisplayName" /> property.</summary>
        private string _displayName;

        /// <summary>Display name of metric specification.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cdn.Origin(Microsoft.Azure.PowerShell.Cmdlets.Cdn.PropertyOrigin.Owned)]
        public string DisplayName { get => this._displayName; set => this._displayName = value; }

        /// <summary>Backing field for <see cref="FillGapWithZero" /> property.</summary>
        private bool? _fillGapWithZero;

        /// <summary>Property to specify whether to fill gap with zero.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cdn.Origin(Microsoft.Azure.PowerShell.Cmdlets.Cdn.PropertyOrigin.Owned)]
        public bool? FillGapWithZero { get => this._fillGapWithZero; set => this._fillGapWithZero = value; }

        /// <summary>Backing field for <see cref="IsInternal" /> property.</summary>
        private bool? _isInternal;

        /// <summary>Property to specify metric is internal or not.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cdn.Origin(Microsoft.Azure.PowerShell.Cmdlets.Cdn.PropertyOrigin.Owned)]
        public bool? IsInternal { get => this._isInternal; set => this._isInternal = value; }

        /// <summary>Backing field for <see cref="MetricFilterPattern" /> property.</summary>
        private string _metricFilterPattern;

        /// <summary>Pattern to filter based on name</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cdn.Origin(Microsoft.Azure.PowerShell.Cmdlets.Cdn.PropertyOrigin.Owned)]
        public string MetricFilterPattern { get => this._metricFilterPattern; set => this._metricFilterPattern = value; }

        /// <summary>Backing field for <see cref="Name" /> property.</summary>
        private string _name;

        /// <summary>Name of metric specification.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cdn.Origin(Microsoft.Azure.PowerShell.Cmdlets.Cdn.PropertyOrigin.Owned)]
        public string Name { get => this._name; set => this._name = value; }

        /// <summary>Backing field for <see cref="SupportedTimeGrainType" /> property.</summary>
        private string[] _supportedTimeGrainType;

        /// <summary>The supported time grain types for the metrics.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cdn.Origin(Microsoft.Azure.PowerShell.Cmdlets.Cdn.PropertyOrigin.Owned)]
        public string[] SupportedTimeGrainType { get => this._supportedTimeGrainType; set => this._supportedTimeGrainType = value; }

        /// <summary>Backing field for <see cref="Unit" /> property.</summary>
        private string _unit;

        /// <summary>The metric unit. Possible values include: 'Bytes', 'Count', 'Milliseconds'.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cdn.Origin(Microsoft.Azure.PowerShell.Cmdlets.Cdn.PropertyOrigin.Owned)]
        public string Unit { get => this._unit; set => this._unit = value; }

        /// <summary>Creates an new <see cref="MetricSpecification" /> instance.</summary>
        public MetricSpecification()
        {

        }
    }
    /// Metric specification of operation.
    public partial interface IMetricSpecification :
        Microsoft.Azure.PowerShell.Cmdlets.Cdn.Runtime.IJsonSerializable
    {
        /// <summary>
        /// The metric aggregation type. Possible values include: 'Average', 'Count', 'Total'.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cdn.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The metric aggregation type. Possible values include: 'Average', 'Count', 'Total'.",
        SerializedName = @"aggregationType",
        PossibleTypes = new [] { typeof(string) })]
        string AggregationType { get; set; }
        /// <summary>Retention policies of a resource metric.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cdn.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Retention policies of a resource metric.",
        SerializedName = @"availabilities",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20210601.IMetricAvailability) })]
        Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20210601.IMetricAvailability[] Availability { get; set; }
        /// <summary>The dimensions of metric</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cdn.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The dimensions of metric",
        SerializedName = @"dimensions",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20210601.IDimensionProperties) })]
        Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20210601.IDimensionProperties[] Dimension { get; set; }
        /// <summary>Display description of metric specification.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cdn.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Display description of metric specification.",
        SerializedName = @"displayDescription",
        PossibleTypes = new [] { typeof(string) })]
        string DisplayDescription { get; set; }
        /// <summary>Display name of metric specification.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cdn.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Display name of metric specification.",
        SerializedName = @"displayName",
        PossibleTypes = new [] { typeof(string) })]
        string DisplayName { get; set; }
        /// <summary>Property to specify whether to fill gap with zero.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cdn.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Property to specify whether to fill gap with zero.",
        SerializedName = @"fillGapWithZero",
        PossibleTypes = new [] { typeof(bool) })]
        bool? FillGapWithZero { get; set; }
        /// <summary>Property to specify metric is internal or not.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cdn.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Property to specify metric is internal or not.",
        SerializedName = @"isInternal",
        PossibleTypes = new [] { typeof(bool) })]
        bool? IsInternal { get; set; }
        /// <summary>Pattern to filter based on name</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cdn.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Pattern to filter based on name",
        SerializedName = @"metricFilterPattern",
        PossibleTypes = new [] { typeof(string) })]
        string MetricFilterPattern { get; set; }
        /// <summary>Name of metric specification.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cdn.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Name of metric specification.",
        SerializedName = @"name",
        PossibleTypes = new [] { typeof(string) })]
        string Name { get; set; }
        /// <summary>The supported time grain types for the metrics.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cdn.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The supported time grain types for the metrics.",
        SerializedName = @"supportedTimeGrainTypes",
        PossibleTypes = new [] { typeof(string) })]
        string[] SupportedTimeGrainType { get; set; }
        /// <summary>The metric unit. Possible values include: 'Bytes', 'Count', 'Milliseconds'.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cdn.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The metric unit. Possible values include: 'Bytes', 'Count', 'Milliseconds'.",
        SerializedName = @"unit",
        PossibleTypes = new [] { typeof(string) })]
        string Unit { get; set; }

    }
    /// Metric specification of operation.
    internal partial interface IMetricSpecificationInternal

    {
        /// <summary>
        /// The metric aggregation type. Possible values include: 'Average', 'Count', 'Total'.
        /// </summary>
        string AggregationType { get; set; }
        /// <summary>Retention policies of a resource metric.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20210601.IMetricAvailability[] Availability { get; set; }
        /// <summary>The dimensions of metric</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20210601.IDimensionProperties[] Dimension { get; set; }
        /// <summary>Display description of metric specification.</summary>
        string DisplayDescription { get; set; }
        /// <summary>Display name of metric specification.</summary>
        string DisplayName { get; set; }
        /// <summary>Property to specify whether to fill gap with zero.</summary>
        bool? FillGapWithZero { get; set; }
        /// <summary>Property to specify metric is internal or not.</summary>
        bool? IsInternal { get; set; }
        /// <summary>Pattern to filter based on name</summary>
        string MetricFilterPattern { get; set; }
        /// <summary>Name of metric specification.</summary>
        string Name { get; set; }
        /// <summary>The supported time grain types for the metrics.</summary>
        string[] SupportedTimeGrainType { get; set; }
        /// <summary>The metric unit. Possible values include: 'Bytes', 'Count', 'Milliseconds'.</summary>
        string Unit { get; set; }

    }
}