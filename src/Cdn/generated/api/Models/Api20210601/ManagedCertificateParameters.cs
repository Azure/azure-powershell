// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20210601
{
    using static Microsoft.Azure.PowerShell.Cmdlets.Cdn.Runtime.Extensions;

    /// <summary>Managed Certificate used for https</summary>
    public partial class ManagedCertificateParameters :
        Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20210601.IManagedCertificateParameters,
        Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20210601.IManagedCertificateParametersInternal,
        Microsoft.Azure.PowerShell.Cmdlets.Cdn.Runtime.IValidates
    {
        /// <summary>
        /// Backing field for Inherited model <see cref= "Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20210601.ISecretParameters"
        /// />
        /// </summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20210601.ISecretParameters __secretParameters = new Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20210601.SecretParameters();

        /// <summary>Backing field for <see cref="ExpirationDate" /> property.</summary>
        private string _expirationDate;

        /// <summary>Certificate expiration date.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cdn.Origin(Microsoft.Azure.PowerShell.Cmdlets.Cdn.PropertyOrigin.Owned)]
        public string ExpirationDate { get => this._expirationDate; }

        /// <summary>Internal Acessors for ExpirationDate</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20210601.IManagedCertificateParametersInternal.ExpirationDate { get => this._expirationDate; set { {_expirationDate = value;} } }

        /// <summary>Internal Acessors for Subject</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20210601.IManagedCertificateParametersInternal.Subject { get => this._subject; set { {_subject = value;} } }

        /// <summary>Backing field for <see cref="Subject" /> property.</summary>
        private string _subject;

        /// <summary>Subject name in the certificate.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cdn.Origin(Microsoft.Azure.PowerShell.Cmdlets.Cdn.PropertyOrigin.Owned)]
        public string Subject { get => this._subject; }

        /// <summary>The type of the secret resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cdn.Origin(Microsoft.Azure.PowerShell.Cmdlets.Cdn.PropertyOrigin.Inherited)]
        public Microsoft.Azure.PowerShell.Cmdlets.Cdn.Support.SecretType Type { get => ((Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20210601.ISecretParametersInternal)__secretParameters).Type; set => ((Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20210601.ISecretParametersInternal)__secretParameters).Type = value ; }

        /// <summary>Creates an new <see cref="ManagedCertificateParameters" /> instance.</summary>
        public ManagedCertificateParameters()
        {

        }

        /// <summary>Validates that this object meets the validation criteria.</summary>
        /// <param name="eventListener">an <see cref="Microsoft.Azure.PowerShell.Cmdlets.Cdn.Runtime.IEventListener" /> instance that will receive validation
        /// events.</param>
        /// <returns>
        /// A <see cref = "global::System.Threading.Tasks.Task" /> that will be complete when validation is completed.
        /// </returns>
        public async global::System.Threading.Tasks.Task Validate(Microsoft.Azure.PowerShell.Cmdlets.Cdn.Runtime.IEventListener eventListener)
        {
            await eventListener.AssertNotNull(nameof(__secretParameters), __secretParameters);
            await eventListener.AssertObjectIsValid(nameof(__secretParameters), __secretParameters);
        }
    }
    /// Managed Certificate used for https
    public partial interface IManagedCertificateParameters :
        Microsoft.Azure.PowerShell.Cmdlets.Cdn.Runtime.IJsonSerializable,
        Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20210601.ISecretParameters
    {
        /// <summary>Certificate expiration date.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cdn.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Certificate expiration date.",
        SerializedName = @"expirationDate",
        PossibleTypes = new [] { typeof(string) })]
        string ExpirationDate { get;  }
        /// <summary>Subject name in the certificate.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cdn.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Subject name in the certificate.",
        SerializedName = @"subject",
        PossibleTypes = new [] { typeof(string) })]
        string Subject { get;  }

    }
    /// Managed Certificate used for https
    internal partial interface IManagedCertificateParametersInternal :
        Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20210601.ISecretParametersInternal
    {
        /// <summary>Certificate expiration date.</summary>
        string ExpirationDate { get; set; }
        /// <summary>Subject name in the certificate.</summary>
        string Subject { get; set; }

    }
}