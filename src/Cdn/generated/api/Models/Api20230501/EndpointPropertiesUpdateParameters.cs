// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20230501
{
    using static Microsoft.Azure.PowerShell.Cmdlets.Cdn.Runtime.Extensions;

    /// <summary>The JSON object containing endpoint update parameters.</summary>
    public partial class EndpointPropertiesUpdateParameters :
        Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20230501.IEndpointPropertiesUpdateParameters,
        Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20230501.IEndpointPropertiesUpdateParametersInternal
    {

        /// <summary>Backing field for <see cref="ContentTypesToCompress" /> property.</summary>
        private string[] _contentTypesToCompress;

        /// <summary>
        /// List of content types on which compression applies. The value should be a valid MIME type.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cdn.Origin(Microsoft.Azure.PowerShell.Cmdlets.Cdn.PropertyOrigin.Owned)]
        public string[] ContentTypesToCompress { get => this._contentTypesToCompress; set => this._contentTypesToCompress = value; }

        /// <summary>Backing field for <see cref="DefaultOriginGroup" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20230501.IResourceReference _defaultOriginGroup;

        /// <summary>A reference to the origin group.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cdn.Origin(Microsoft.Azure.PowerShell.Cmdlets.Cdn.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20230501.IResourceReference DefaultOriginGroup { get => (this._defaultOriginGroup = this._defaultOriginGroup ?? new Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20230501.ResourceReference()); set => this._defaultOriginGroup = value; }

        /// <summary>Resource ID.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cdn.Origin(Microsoft.Azure.PowerShell.Cmdlets.Cdn.PropertyOrigin.Inlined)]
        public string DefaultOriginGroupId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20230501.IResourceReferenceInternal)DefaultOriginGroup).Id; set => ((Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20230501.IResourceReferenceInternal)DefaultOriginGroup).Id = value ?? null; }

        /// <summary>Backing field for <see cref="DeliveryPolicy" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20230501.IEndpointPropertiesUpdateParametersDeliveryPolicy _deliveryPolicy;

        /// <summary>A policy that specifies the delivery rules to be used for an endpoint.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cdn.Origin(Microsoft.Azure.PowerShell.Cmdlets.Cdn.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20230501.IEndpointPropertiesUpdateParametersDeliveryPolicy DeliveryPolicy { get => (this._deliveryPolicy = this._deliveryPolicy ?? new Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20230501.EndpointPropertiesUpdateParametersDeliveryPolicy()); set => this._deliveryPolicy = value; }

        /// <summary>User-friendly description of the policy.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cdn.Origin(Microsoft.Azure.PowerShell.Cmdlets.Cdn.PropertyOrigin.Inlined)]
        public string DeliveryPolicyDescription { get => ((Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20230501.IEndpointPropertiesUpdateParametersDeliveryPolicyInternal)DeliveryPolicy).Description; set => ((Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20230501.IEndpointPropertiesUpdateParametersDeliveryPolicyInternal)DeliveryPolicy).Description = value ?? null; }

        /// <summary>A list of the delivery rules.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cdn.Origin(Microsoft.Azure.PowerShell.Cmdlets.Cdn.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20230501.IDeliveryRule[] DeliveryPolicyRule { get => ((Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20230501.IEndpointPropertiesUpdateParametersDeliveryPolicyInternal)DeliveryPolicy).Rule; set => ((Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20230501.IEndpointPropertiesUpdateParametersDeliveryPolicyInternal)DeliveryPolicy).Rule = value ?? null /* arrayOf */; }

        /// <summary>Backing field for <see cref="GeoFilter" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20230501.IGeoFilter[] _geoFilter;

        /// <summary>
        /// List of rules defining the user's geo access within a CDN endpoint. Each geo filter defines an access rule to a specified
        /// path or content, e.g. block APAC for path /pictures/
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cdn.Origin(Microsoft.Azure.PowerShell.Cmdlets.Cdn.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20230501.IGeoFilter[] GeoFilter { get => this._geoFilter; set => this._geoFilter = value; }

        /// <summary>Backing field for <see cref="IsCompressionEnabled" /> property.</summary>
        private bool? _isCompressionEnabled;

        /// <summary>
        /// Indicates whether content compression is enabled on CDN. Default value is false. If compression is enabled, content will
        /// be served as compressed if user requests for a compressed version. Content won't be compressed on CDN when requested content
        /// is smaller than 1 byte or larger than 1 MB.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cdn.Origin(Microsoft.Azure.PowerShell.Cmdlets.Cdn.PropertyOrigin.Owned)]
        public bool? IsCompressionEnabled { get => this._isCompressionEnabled; set => this._isCompressionEnabled = value; }

        /// <summary>Backing field for <see cref="IsHttpAllowed" /> property.</summary>
        private bool? _isHttpAllowed;

        /// <summary>
        /// Indicates whether HTTP traffic is allowed on the endpoint. Default value is true. At least one protocol (HTTP or HTTPS)
        /// must be allowed.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cdn.Origin(Microsoft.Azure.PowerShell.Cmdlets.Cdn.PropertyOrigin.Owned)]
        public bool? IsHttpAllowed { get => this._isHttpAllowed; set => this._isHttpAllowed = value; }

        /// <summary>Backing field for <see cref="IsHttpsAllowed" /> property.</summary>
        private bool? _isHttpsAllowed;

        /// <summary>
        /// Indicates whether HTTPS traffic is allowed on the endpoint. Default value is true. At least one protocol (HTTP or HTTPS)
        /// must be allowed.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cdn.Origin(Microsoft.Azure.PowerShell.Cmdlets.Cdn.PropertyOrigin.Owned)]
        public bool? IsHttpsAllowed { get => this._isHttpsAllowed; set => this._isHttpsAllowed = value; }

        /// <summary>Internal Acessors for DefaultOriginGroup</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20230501.IResourceReference Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20230501.IEndpointPropertiesUpdateParametersInternal.DefaultOriginGroup { get => (this._defaultOriginGroup = this._defaultOriginGroup ?? new Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20230501.ResourceReference()); set { {_defaultOriginGroup = value;} } }

        /// <summary>Internal Acessors for DeliveryPolicy</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20230501.IEndpointPropertiesUpdateParametersDeliveryPolicy Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20230501.IEndpointPropertiesUpdateParametersInternal.DeliveryPolicy { get => (this._deliveryPolicy = this._deliveryPolicy ?? new Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20230501.EndpointPropertiesUpdateParametersDeliveryPolicy()); set { {_deliveryPolicy = value;} } }

        /// <summary>Internal Acessors for WebApplicationFirewallPolicyLink</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20230501.IEndpointPropertiesUpdateParametersWebApplicationFirewallPolicyLink Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20230501.IEndpointPropertiesUpdateParametersInternal.WebApplicationFirewallPolicyLink { get => (this._webApplicationFirewallPolicyLink = this._webApplicationFirewallPolicyLink ?? new Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20230501.EndpointPropertiesUpdateParametersWebApplicationFirewallPolicyLink()); set { {_webApplicationFirewallPolicyLink = value;} } }

        /// <summary>Backing field for <see cref="OptimizationType" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Cdn.Support.OptimizationType? _optimizationType;

        /// <summary>
        /// Specifies what scenario the customer wants this CDN endpoint to optimize for, e.g. Download, Media services. With this
        /// information, CDN can apply scenario driven optimization.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cdn.Origin(Microsoft.Azure.PowerShell.Cmdlets.Cdn.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.Cdn.Support.OptimizationType? OptimizationType { get => this._optimizationType; set => this._optimizationType = value; }

        /// <summary>Backing field for <see cref="OriginHostHeader" /> property.</summary>
        private string _originHostHeader;

        /// <summary>
        /// The host header value sent to the origin with each request. This property at Endpoint is only allowed when endpoint uses
        /// single origin and can be overridden by the same property specified at origin.If you leave this blank, the request hostname
        /// determines this value. Azure CDN origins, such as Web Apps, Blob Storage, and Cloud Services require this host header
        /// value to match the origin hostname by default.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cdn.Origin(Microsoft.Azure.PowerShell.Cmdlets.Cdn.PropertyOrigin.Owned)]
        public string OriginHostHeader { get => this._originHostHeader; set => this._originHostHeader = value; }

        /// <summary>Backing field for <see cref="OriginPath" /> property.</summary>
        private string _originPath;

        /// <summary>
        /// A directory path on the origin that CDN can use to retrieve content from, e.g. contoso.cloudapp.net/originpath.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cdn.Origin(Microsoft.Azure.PowerShell.Cmdlets.Cdn.PropertyOrigin.Owned)]
        public string OriginPath { get => this._originPath; set => this._originPath = value; }

        /// <summary>Backing field for <see cref="ProbePath" /> property.</summary>
        private string _probePath;

        /// <summary>
        /// Path to a file hosted on the origin which helps accelerate delivery of the dynamic content and calculate the most optimal
        /// routes for the CDN. This is relative to the origin path. This property is only relevant when using a single origin.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cdn.Origin(Microsoft.Azure.PowerShell.Cmdlets.Cdn.PropertyOrigin.Owned)]
        public string ProbePath { get => this._probePath; set => this._probePath = value; }

        /// <summary>Backing field for <see cref="QueryStringCachingBehavior" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Cdn.Support.QueryStringCachingBehavior? _queryStringCachingBehavior;

        /// <summary>
        /// Defines how CDN caches requests that include query strings. You can ignore any query strings when caching, bypass caching
        /// to prevent requests that contain query strings from being cached, or cache every request with a unique URL.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cdn.Origin(Microsoft.Azure.PowerShell.Cmdlets.Cdn.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.Cdn.Support.QueryStringCachingBehavior? QueryStringCachingBehavior { get => this._queryStringCachingBehavior; set => this._queryStringCachingBehavior = value; }

        /// <summary>Backing field for <see cref="UrlSigningKey" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20230501.IUrlSigningKey[] _urlSigningKey;

        /// <summary>List of keys used to validate the signed URL hashes.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cdn.Origin(Microsoft.Azure.PowerShell.Cmdlets.Cdn.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20230501.IUrlSigningKey[] UrlSigningKey { get => this._urlSigningKey; set => this._urlSigningKey = value; }

        /// <summary>Backing field for <see cref="WebApplicationFirewallPolicyLink" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20230501.IEndpointPropertiesUpdateParametersWebApplicationFirewallPolicyLink _webApplicationFirewallPolicyLink;

        /// <summary>Defines the Web Application Firewall policy for the endpoint (if applicable)</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cdn.Origin(Microsoft.Azure.PowerShell.Cmdlets.Cdn.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20230501.IEndpointPropertiesUpdateParametersWebApplicationFirewallPolicyLink WebApplicationFirewallPolicyLink { get => (this._webApplicationFirewallPolicyLink = this._webApplicationFirewallPolicyLink ?? new Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20230501.EndpointPropertiesUpdateParametersWebApplicationFirewallPolicyLink()); set => this._webApplicationFirewallPolicyLink = value; }

        /// <summary>Resource ID.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cdn.Origin(Microsoft.Azure.PowerShell.Cmdlets.Cdn.PropertyOrigin.Inlined)]
        public string WebApplicationFirewallPolicyLinkId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20230501.IEndpointPropertiesUpdateParametersWebApplicationFirewallPolicyLinkInternal)WebApplicationFirewallPolicyLink).Id; set => ((Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20230501.IEndpointPropertiesUpdateParametersWebApplicationFirewallPolicyLinkInternal)WebApplicationFirewallPolicyLink).Id = value ?? null; }

        /// <summary>Creates an new <see cref="EndpointPropertiesUpdateParameters" /> instance.</summary>
        public EndpointPropertiesUpdateParameters()
        {

        }
    }
    /// The JSON object containing endpoint update parameters.
    public partial interface IEndpointPropertiesUpdateParameters :
        Microsoft.Azure.PowerShell.Cmdlets.Cdn.Runtime.IJsonSerializable
    {
        /// <summary>
        /// List of content types on which compression applies. The value should be a valid MIME type.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cdn.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"List of content types on which compression applies. The value should be a valid MIME type.",
        SerializedName = @"contentTypesToCompress",
        PossibleTypes = new [] { typeof(string) })]
        string[] ContentTypesToCompress { get; set; }
        /// <summary>Resource ID.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cdn.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Resource ID.",
        SerializedName = @"id",
        PossibleTypes = new [] { typeof(string) })]
        string DefaultOriginGroupId { get; set; }
        /// <summary>User-friendly description of the policy.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cdn.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"User-friendly description of the policy.",
        SerializedName = @"description",
        PossibleTypes = new [] { typeof(string) })]
        string DeliveryPolicyDescription { get; set; }
        /// <summary>A list of the delivery rules.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cdn.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"A list of the delivery rules.",
        SerializedName = @"rules",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20230501.IDeliveryRule) })]
        Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20230501.IDeliveryRule[] DeliveryPolicyRule { get; set; }
        /// <summary>
        /// List of rules defining the user's geo access within a CDN endpoint. Each geo filter defines an access rule to a specified
        /// path or content, e.g. block APAC for path /pictures/
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cdn.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"List of rules defining the user's geo access within a CDN endpoint. Each geo filter defines an access rule to a specified path or content, e.g. block APAC for path /pictures/",
        SerializedName = @"geoFilters",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20230501.IGeoFilter) })]
        Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20230501.IGeoFilter[] GeoFilter { get; set; }
        /// <summary>
        /// Indicates whether content compression is enabled on CDN. Default value is false. If compression is enabled, content will
        /// be served as compressed if user requests for a compressed version. Content won't be compressed on CDN when requested content
        /// is smaller than 1 byte or larger than 1 MB.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cdn.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Indicates whether content compression is enabled on CDN. Default value is false. If compression is enabled, content will be served as compressed if user requests for a compressed version. Content won't be compressed on CDN when requested content is smaller than 1 byte or larger than 1 MB.",
        SerializedName = @"isCompressionEnabled",
        PossibleTypes = new [] { typeof(bool) })]
        bool? IsCompressionEnabled { get; set; }
        /// <summary>
        /// Indicates whether HTTP traffic is allowed on the endpoint. Default value is true. At least one protocol (HTTP or HTTPS)
        /// must be allowed.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cdn.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Indicates whether HTTP traffic is allowed on the endpoint. Default value is true. At least one protocol (HTTP or HTTPS) must be allowed.",
        SerializedName = @"isHttpAllowed",
        PossibleTypes = new [] { typeof(bool) })]
        bool? IsHttpAllowed { get; set; }
        /// <summary>
        /// Indicates whether HTTPS traffic is allowed on the endpoint. Default value is true. At least one protocol (HTTP or HTTPS)
        /// must be allowed.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cdn.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Indicates whether HTTPS traffic is allowed on the endpoint. Default value is true. At least one protocol (HTTP or HTTPS) must be allowed.",
        SerializedName = @"isHttpsAllowed",
        PossibleTypes = new [] { typeof(bool) })]
        bool? IsHttpsAllowed { get; set; }
        /// <summary>
        /// Specifies what scenario the customer wants this CDN endpoint to optimize for, e.g. Download, Media services. With this
        /// information, CDN can apply scenario driven optimization.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cdn.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Specifies what scenario the customer wants this CDN endpoint to optimize for, e.g. Download, Media services. With this information, CDN can apply scenario driven optimization.",
        SerializedName = @"optimizationType",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Cdn.Support.OptimizationType) })]
        Microsoft.Azure.PowerShell.Cmdlets.Cdn.Support.OptimizationType? OptimizationType { get; set; }
        /// <summary>
        /// The host header value sent to the origin with each request. This property at Endpoint is only allowed when endpoint uses
        /// single origin and can be overridden by the same property specified at origin.If you leave this blank, the request hostname
        /// determines this value. Azure CDN origins, such as Web Apps, Blob Storage, and Cloud Services require this host header
        /// value to match the origin hostname by default.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cdn.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The host header value sent to the origin with each request. This property at Endpoint is only allowed when endpoint uses single origin and can be overridden by the same property specified at origin.If you leave this blank, the request hostname determines this value. Azure CDN origins, such as Web Apps, Blob Storage, and Cloud Services require this host header value to match the origin hostname by default.",
        SerializedName = @"originHostHeader",
        PossibleTypes = new [] { typeof(string) })]
        string OriginHostHeader { get; set; }
        /// <summary>
        /// A directory path on the origin that CDN can use to retrieve content from, e.g. contoso.cloudapp.net/originpath.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cdn.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"A directory path on the origin that CDN can use to retrieve content from, e.g. contoso.cloudapp.net/originpath.",
        SerializedName = @"originPath",
        PossibleTypes = new [] { typeof(string) })]
        string OriginPath { get; set; }
        /// <summary>
        /// Path to a file hosted on the origin which helps accelerate delivery of the dynamic content and calculate the most optimal
        /// routes for the CDN. This is relative to the origin path. This property is only relevant when using a single origin.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cdn.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Path to a file hosted on the origin which helps accelerate delivery of the dynamic content and calculate the most optimal routes for the CDN. This is relative to the origin path. This property is only relevant when using a single origin.",
        SerializedName = @"probePath",
        PossibleTypes = new [] { typeof(string) })]
        string ProbePath { get; set; }
        /// <summary>
        /// Defines how CDN caches requests that include query strings. You can ignore any query strings when caching, bypass caching
        /// to prevent requests that contain query strings from being cached, or cache every request with a unique URL.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cdn.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Defines how CDN caches requests that include query strings. You can ignore any query strings when caching, bypass caching to prevent requests that contain query strings from being cached, or cache every request with a unique URL.",
        SerializedName = @"queryStringCachingBehavior",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Cdn.Support.QueryStringCachingBehavior) })]
        Microsoft.Azure.PowerShell.Cmdlets.Cdn.Support.QueryStringCachingBehavior? QueryStringCachingBehavior { get; set; }
        /// <summary>List of keys used to validate the signed URL hashes.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cdn.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"List of keys used to validate the signed URL hashes.",
        SerializedName = @"urlSigningKeys",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20230501.IUrlSigningKey) })]
        Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20230501.IUrlSigningKey[] UrlSigningKey { get; set; }
        /// <summary>Resource ID.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cdn.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Resource ID.",
        SerializedName = @"id",
        PossibleTypes = new [] { typeof(string) })]
        string WebApplicationFirewallPolicyLinkId { get; set; }

    }
    /// The JSON object containing endpoint update parameters.
    internal partial interface IEndpointPropertiesUpdateParametersInternal

    {
        /// <summary>
        /// List of content types on which compression applies. The value should be a valid MIME type.
        /// </summary>
        string[] ContentTypesToCompress { get; set; }
        /// <summary>A reference to the origin group.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20230501.IResourceReference DefaultOriginGroup { get; set; }
        /// <summary>Resource ID.</summary>
        string DefaultOriginGroupId { get; set; }
        /// <summary>A policy that specifies the delivery rules to be used for an endpoint.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20230501.IEndpointPropertiesUpdateParametersDeliveryPolicy DeliveryPolicy { get; set; }
        /// <summary>User-friendly description of the policy.</summary>
        string DeliveryPolicyDescription { get; set; }
        /// <summary>A list of the delivery rules.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20230501.IDeliveryRule[] DeliveryPolicyRule { get; set; }
        /// <summary>
        /// List of rules defining the user's geo access within a CDN endpoint. Each geo filter defines an access rule to a specified
        /// path or content, e.g. block APAC for path /pictures/
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20230501.IGeoFilter[] GeoFilter { get; set; }
        /// <summary>
        /// Indicates whether content compression is enabled on CDN. Default value is false. If compression is enabled, content will
        /// be served as compressed if user requests for a compressed version. Content won't be compressed on CDN when requested content
        /// is smaller than 1 byte or larger than 1 MB.
        /// </summary>
        bool? IsCompressionEnabled { get; set; }
        /// <summary>
        /// Indicates whether HTTP traffic is allowed on the endpoint. Default value is true. At least one protocol (HTTP or HTTPS)
        /// must be allowed.
        /// </summary>
        bool? IsHttpAllowed { get; set; }
        /// <summary>
        /// Indicates whether HTTPS traffic is allowed on the endpoint. Default value is true. At least one protocol (HTTP or HTTPS)
        /// must be allowed.
        /// </summary>
        bool? IsHttpsAllowed { get; set; }
        /// <summary>
        /// Specifies what scenario the customer wants this CDN endpoint to optimize for, e.g. Download, Media services. With this
        /// information, CDN can apply scenario driven optimization.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Cdn.Support.OptimizationType? OptimizationType { get; set; }
        /// <summary>
        /// The host header value sent to the origin with each request. This property at Endpoint is only allowed when endpoint uses
        /// single origin and can be overridden by the same property specified at origin.If you leave this blank, the request hostname
        /// determines this value. Azure CDN origins, such as Web Apps, Blob Storage, and Cloud Services require this host header
        /// value to match the origin hostname by default.
        /// </summary>
        string OriginHostHeader { get; set; }
        /// <summary>
        /// A directory path on the origin that CDN can use to retrieve content from, e.g. contoso.cloudapp.net/originpath.
        /// </summary>
        string OriginPath { get; set; }
        /// <summary>
        /// Path to a file hosted on the origin which helps accelerate delivery of the dynamic content and calculate the most optimal
        /// routes for the CDN. This is relative to the origin path. This property is only relevant when using a single origin.
        /// </summary>
        string ProbePath { get; set; }
        /// <summary>
        /// Defines how CDN caches requests that include query strings. You can ignore any query strings when caching, bypass caching
        /// to prevent requests that contain query strings from being cached, or cache every request with a unique URL.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Cdn.Support.QueryStringCachingBehavior? QueryStringCachingBehavior { get; set; }
        /// <summary>List of keys used to validate the signed URL hashes.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20230501.IUrlSigningKey[] UrlSigningKey { get; set; }
        /// <summary>Defines the Web Application Firewall policy for the endpoint (if applicable)</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20230501.IEndpointPropertiesUpdateParametersWebApplicationFirewallPolicyLink WebApplicationFirewallPolicyLink { get; set; }
        /// <summary>Resource ID.</summary>
        string WebApplicationFirewallPolicyLinkId { get; set; }

    }
}