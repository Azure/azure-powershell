// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20230501
{
    using static Microsoft.Azure.PowerShell.Cmdlets.Cdn.Runtime.Extensions;

    /// <summary>The JSON object that contains the properties to secure a custom domain.</summary>
    public partial class CustomDomainHttpsParameters :
        Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20230501.ICustomDomainHttpsParameters,
        Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20230501.ICustomDomainHttpsParametersInternal
    {

        /// <summary>Backing field for <see cref="CertificateSource" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Cdn.Support.CertificateSource _certificateSource;

        /// <summary>Defines the source of the SSL certificate.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cdn.Origin(Microsoft.Azure.PowerShell.Cmdlets.Cdn.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.Cdn.Support.CertificateSource CertificateSource { get => this._certificateSource; set => this._certificateSource = value; }

        /// <summary>Backing field for <see cref="MinimumTlsVersion" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Cdn.Support.MinimumTlsVersion? _minimumTlsVersion;

        /// <summary>TLS protocol version that will be used for Https</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cdn.Origin(Microsoft.Azure.PowerShell.Cmdlets.Cdn.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.Cdn.Support.MinimumTlsVersion? MinimumTlsVersion { get => this._minimumTlsVersion; set => this._minimumTlsVersion = value; }

        /// <summary>Backing field for <see cref="ProtocolType" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Cdn.Support.ProtocolType _protocolType;

        /// <summary>Defines the TLS extension protocol that is used for secure delivery.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cdn.Origin(Microsoft.Azure.PowerShell.Cmdlets.Cdn.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.Cdn.Support.ProtocolType ProtocolType { get => this._protocolType; set => this._protocolType = value; }

        /// <summary>Creates an new <see cref="CustomDomainHttpsParameters" /> instance.</summary>
        public CustomDomainHttpsParameters()
        {

        }
    }
    /// The JSON object that contains the properties to secure a custom domain.
    public partial interface ICustomDomainHttpsParameters :
        Microsoft.Azure.PowerShell.Cmdlets.Cdn.Runtime.IJsonSerializable
    {
        /// <summary>Defines the source of the SSL certificate.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cdn.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"Defines the source of the SSL certificate.",
        SerializedName = @"certificateSource",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Cdn.Support.CertificateSource) })]
        Microsoft.Azure.PowerShell.Cmdlets.Cdn.Support.CertificateSource CertificateSource { get; set; }
        /// <summary>TLS protocol version that will be used for Https</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cdn.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"TLS protocol version that will be used for Https",
        SerializedName = @"minimumTlsVersion",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Cdn.Support.MinimumTlsVersion) })]
        Microsoft.Azure.PowerShell.Cmdlets.Cdn.Support.MinimumTlsVersion? MinimumTlsVersion { get; set; }
        /// <summary>Defines the TLS extension protocol that is used for secure delivery.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cdn.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"Defines the TLS extension protocol that is used for secure delivery.",
        SerializedName = @"protocolType",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Cdn.Support.ProtocolType) })]
        Microsoft.Azure.PowerShell.Cmdlets.Cdn.Support.ProtocolType ProtocolType { get; set; }

    }
    /// The JSON object that contains the properties to secure a custom domain.
    internal partial interface ICustomDomainHttpsParametersInternal

    {
        /// <summary>Defines the source of the SSL certificate.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Cdn.Support.CertificateSource CertificateSource { get; set; }
        /// <summary>TLS protocol version that will be used for Https</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Cdn.Support.MinimumTlsVersion? MinimumTlsVersion { get; set; }
        /// <summary>Defines the TLS extension protocol that is used for secure delivery.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Cdn.Support.ProtocolType ProtocolType { get; set; }

    }
}