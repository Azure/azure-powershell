// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20230501
{
    using static Microsoft.Azure.PowerShell.Cmdlets.Cdn.Runtime.Extensions;

    /// <summary>AFDOrigin properties needed for origin update.</summary>
    public partial class AfdOriginUpdateParameters :
        Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20230501.IAfdOriginUpdateParameters,
        Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20230501.IAfdOriginUpdateParametersInternal
    {

        /// <summary>Resource ID.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cdn.Origin(Microsoft.Azure.PowerShell.Cmdlets.Cdn.PropertyOrigin.Inlined)]
        public string AzureOriginId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20230501.IAfdOriginUpdatePropertiesParametersInternal)Property).AzureOriginId; set => ((Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20230501.IAfdOriginUpdatePropertiesParametersInternal)Property).AzureOriginId = value ?? null; }

        /// <summary>
        /// Whether to enable health probes to be made against backends defined under backendPools. Health probes can only be disabled
        /// if there is a single enabled backend in single enabled backend pool.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cdn.Origin(Microsoft.Azure.PowerShell.Cmdlets.Cdn.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Cdn.Support.EnabledState? EnabledState { get => ((Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20230501.IAfdOriginUpdatePropertiesParametersInternal)Property).EnabledState; set => ((Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20230501.IAfdOriginUpdatePropertiesParametersInternal)Property).EnabledState = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.Cdn.Support.EnabledState)""); }

        /// <summary>Whether to enable certificate name check at origin level</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cdn.Origin(Microsoft.Azure.PowerShell.Cmdlets.Cdn.PropertyOrigin.Inlined)]
        public bool? EnforceCertificateNameCheck { get => ((Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20230501.IAfdOriginUpdatePropertiesParametersInternal)Property).EnforceCertificateNameCheck; set => ((Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20230501.IAfdOriginUpdatePropertiesParametersInternal)Property).EnforceCertificateNameCheck = value ?? default(bool); }

        /// <summary>
        /// The address of the origin. Domain names, IPv4 addresses, and IPv6 addresses are supported.This should be unique across
        /// all origins in an endpoint.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cdn.Origin(Microsoft.Azure.PowerShell.Cmdlets.Cdn.PropertyOrigin.Inlined)]
        public string HostName { get => ((Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20230501.IAfdOriginUpdatePropertiesParametersInternal)Property).HostName; set => ((Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20230501.IAfdOriginUpdatePropertiesParametersInternal)Property).HostName = value ?? null; }

        /// <summary>The value of the HTTP port. Must be between 1 and 65535.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cdn.Origin(Microsoft.Azure.PowerShell.Cmdlets.Cdn.PropertyOrigin.Inlined)]
        public int? HttpPort { get => ((Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20230501.IAfdOriginUpdatePropertiesParametersInternal)Property).HttpPort; set => ((Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20230501.IAfdOriginUpdatePropertiesParametersInternal)Property).HttpPort = value ?? default(int); }

        /// <summary>The value of the HTTPS port. Must be between 1 and 65535.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cdn.Origin(Microsoft.Azure.PowerShell.Cmdlets.Cdn.PropertyOrigin.Inlined)]
        public int? HttpsPort { get => ((Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20230501.IAfdOriginUpdatePropertiesParametersInternal)Property).HttpsPort; set => ((Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20230501.IAfdOriginUpdatePropertiesParametersInternal)Property).HttpsPort = value ?? default(int); }

        /// <summary>Internal Acessors for AzureOrigin</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20230501.IResourceReference Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20230501.IAfdOriginUpdateParametersInternal.AzureOrigin { get => ((Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20230501.IAfdOriginUpdatePropertiesParametersInternal)Property).AzureOrigin; set => ((Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20230501.IAfdOriginUpdatePropertiesParametersInternal)Property).AzureOrigin = value; }

        /// <summary>Internal Acessors for OriginGroupName</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20230501.IAfdOriginUpdateParametersInternal.OriginGroupName { get => ((Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20230501.IAfdOriginUpdatePropertiesParametersInternal)Property).OriginGroupName; set => ((Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20230501.IAfdOriginUpdatePropertiesParametersInternal)Property).OriginGroupName = value; }

        /// <summary>Internal Acessors for Property</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20230501.IAfdOriginUpdatePropertiesParameters Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20230501.IAfdOriginUpdateParametersInternal.Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20230501.AfdOriginUpdatePropertiesParameters()); set { {_property = value;} } }

        /// <summary>Internal Acessors for SharedPrivateLinkResource</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20230501.ISharedPrivateLinkResourceProperties Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20230501.IAfdOriginUpdateParametersInternal.SharedPrivateLinkResource { get => ((Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20230501.IAfdOriginUpdatePropertiesParametersInternal)Property).SharedPrivateLinkResource; set => ((Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20230501.IAfdOriginUpdatePropertiesParametersInternal)Property).SharedPrivateLinkResource = value; }

        /// <summary>Internal Acessors for SharedPrivateLinkResourcePrivateLink</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20230501.IResourceReference Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20230501.IAfdOriginUpdateParametersInternal.SharedPrivateLinkResourcePrivateLink { get => ((Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20230501.IAfdOriginUpdatePropertiesParametersInternal)Property).SharedPrivateLinkResourcePrivateLink; set => ((Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20230501.IAfdOriginUpdatePropertiesParametersInternal)Property).SharedPrivateLinkResourcePrivateLink = value; }

        /// <summary>The name of the origin group which contains this origin.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cdn.Origin(Microsoft.Azure.PowerShell.Cmdlets.Cdn.PropertyOrigin.Inlined)]
        public string OriginGroupName { get => ((Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20230501.IAfdOriginUpdatePropertiesParametersInternal)Property).OriginGroupName; }

        /// <summary>
        /// The host header value sent to the origin with each request. If you leave this blank, the request hostname determines this
        /// value. Azure Front Door origins, such as Web Apps, Blob Storage, and Cloud Services require this host header value to
        /// match the origin hostname by default. This overrides the host header defined at Endpoint
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cdn.Origin(Microsoft.Azure.PowerShell.Cmdlets.Cdn.PropertyOrigin.Inlined)]
        public string OriginHostHeader { get => ((Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20230501.IAfdOriginUpdatePropertiesParametersInternal)Property).OriginHostHeader; set => ((Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20230501.IAfdOriginUpdatePropertiesParametersInternal)Property).OriginHostHeader = value ?? null; }

        /// <summary>
        /// Priority of origin in given origin group for load balancing. Higher priorities will not be used for load balancing if
        /// any lower priority origin is healthy.Must be between 1 and 5
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cdn.Origin(Microsoft.Azure.PowerShell.Cmdlets.Cdn.PropertyOrigin.Inlined)]
        public int? Priority { get => ((Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20230501.IAfdOriginUpdatePropertiesParametersInternal)Property).Priority; set => ((Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20230501.IAfdOriginUpdatePropertiesParametersInternal)Property).Priority = value ?? default(int); }

        /// <summary>Resource ID.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cdn.Origin(Microsoft.Azure.PowerShell.Cmdlets.Cdn.PropertyOrigin.Inlined)]
        public string PrivateLinkId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20230501.IAfdOriginUpdatePropertiesParametersInternal)Property).PrivateLinkId; set => ((Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20230501.IAfdOriginUpdatePropertiesParametersInternal)Property).PrivateLinkId = value ?? null; }

        /// <summary>Backing field for <see cref="Property" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20230501.IAfdOriginUpdatePropertiesParameters _property;

        /// <summary>The JSON object that contains the properties of the origin.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cdn.Origin(Microsoft.Azure.PowerShell.Cmdlets.Cdn.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20230501.IAfdOriginUpdatePropertiesParameters Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20230501.AfdOriginUpdatePropertiesParameters()); set => this._property = value; }

        /// <summary>
        /// The group id from the provider of resource the shared private link resource is for.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cdn.Origin(Microsoft.Azure.PowerShell.Cmdlets.Cdn.PropertyOrigin.Inlined)]
        public string SharedPrivateLinkResourceGroupId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20230501.IAfdOriginUpdatePropertiesParametersInternal)Property).SharedPrivateLinkResourceGroupId; set => ((Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20230501.IAfdOriginUpdatePropertiesParametersInternal)Property).SharedPrivateLinkResourceGroupId = value ?? null; }

        /// <summary>The location of the shared private link resource</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cdn.Origin(Microsoft.Azure.PowerShell.Cmdlets.Cdn.PropertyOrigin.Inlined)]
        public string SharedPrivateLinkResourcePrivateLinkLocation { get => ((Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20230501.IAfdOriginUpdatePropertiesParametersInternal)Property).SharedPrivateLinkResourcePrivateLinkLocation; set => ((Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20230501.IAfdOriginUpdatePropertiesParametersInternal)Property).SharedPrivateLinkResourcePrivateLinkLocation = value ?? null; }

        /// <summary>
        /// The request message for requesting approval of the shared private link resource.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cdn.Origin(Microsoft.Azure.PowerShell.Cmdlets.Cdn.PropertyOrigin.Inlined)]
        public string SharedPrivateLinkResourceRequestMessage { get => ((Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20230501.IAfdOriginUpdatePropertiesParametersInternal)Property).SharedPrivateLinkResourceRequestMessage; set => ((Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20230501.IAfdOriginUpdatePropertiesParametersInternal)Property).SharedPrivateLinkResourceRequestMessage = value ?? null; }

        /// <summary>
        /// Status of the shared private link resource. Can be Pending, Approved, Rejected, Disconnected, or Timeout.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cdn.Origin(Microsoft.Azure.PowerShell.Cmdlets.Cdn.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Cdn.Support.SharedPrivateLinkResourceStatus? SharedPrivateLinkResourceStatus { get => ((Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20230501.IAfdOriginUpdatePropertiesParametersInternal)Property).SharedPrivateLinkResourceStatus; set => ((Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20230501.IAfdOriginUpdatePropertiesParametersInternal)Property).SharedPrivateLinkResourceStatus = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.Cdn.Support.SharedPrivateLinkResourceStatus)""); }

        /// <summary>
        /// Weight of the origin in given origin group for load balancing. Must be between 1 and 1000
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cdn.Origin(Microsoft.Azure.PowerShell.Cmdlets.Cdn.PropertyOrigin.Inlined)]
        public int? Weight { get => ((Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20230501.IAfdOriginUpdatePropertiesParametersInternal)Property).Weight; set => ((Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20230501.IAfdOriginUpdatePropertiesParametersInternal)Property).Weight = value ?? default(int); }

        /// <summary>Creates an new <see cref="AfdOriginUpdateParameters" /> instance.</summary>
        public AfdOriginUpdateParameters()
        {

        }
    }
    /// AFDOrigin properties needed for origin update.
    public partial interface IAfdOriginUpdateParameters :
        Microsoft.Azure.PowerShell.Cmdlets.Cdn.Runtime.IJsonSerializable
    {
        /// <summary>Resource ID.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cdn.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Resource ID.",
        SerializedName = @"id",
        PossibleTypes = new [] { typeof(string) })]
        string AzureOriginId { get; set; }
        /// <summary>
        /// Whether to enable health probes to be made against backends defined under backendPools. Health probes can only be disabled
        /// if there is a single enabled backend in single enabled backend pool.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cdn.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Whether to enable health probes to be made against backends defined under backendPools. Health probes can only be disabled if there is a single enabled backend in single enabled backend pool.",
        SerializedName = @"enabledState",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Cdn.Support.EnabledState) })]
        Microsoft.Azure.PowerShell.Cmdlets.Cdn.Support.EnabledState? EnabledState { get; set; }
        /// <summary>Whether to enable certificate name check at origin level</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cdn.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Whether to enable certificate name check at origin level",
        SerializedName = @"enforceCertificateNameCheck",
        PossibleTypes = new [] { typeof(bool) })]
        bool? EnforceCertificateNameCheck { get; set; }
        /// <summary>
        /// The address of the origin. Domain names, IPv4 addresses, and IPv6 addresses are supported.This should be unique across
        /// all origins in an endpoint.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cdn.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The address of the origin. Domain names, IPv4 addresses, and IPv6 addresses are supported.This should be unique across all origins in an endpoint.",
        SerializedName = @"hostName",
        PossibleTypes = new [] { typeof(string) })]
        string HostName { get; set; }
        /// <summary>The value of the HTTP port. Must be between 1 and 65535.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cdn.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The value of the HTTP port. Must be between 1 and 65535.",
        SerializedName = @"httpPort",
        PossibleTypes = new [] { typeof(int) })]
        int? HttpPort { get; set; }
        /// <summary>The value of the HTTPS port. Must be between 1 and 65535.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cdn.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The value of the HTTPS port. Must be between 1 and 65535.",
        SerializedName = @"httpsPort",
        PossibleTypes = new [] { typeof(int) })]
        int? HttpsPort { get; set; }
        /// <summary>The name of the origin group which contains this origin.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cdn.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The name of the origin group which contains this origin.",
        SerializedName = @"originGroupName",
        PossibleTypes = new [] { typeof(string) })]
        string OriginGroupName { get;  }
        /// <summary>
        /// The host header value sent to the origin with each request. If you leave this blank, the request hostname determines this
        /// value. Azure Front Door origins, such as Web Apps, Blob Storage, and Cloud Services require this host header value to
        /// match the origin hostname by default. This overrides the host header defined at Endpoint
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cdn.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The host header value sent to the origin with each request. If you leave this blank, the request hostname determines this value. Azure Front Door origins, such as Web Apps, Blob Storage, and Cloud Services require this host header value to match the origin hostname by default. This overrides the host header defined at Endpoint",
        SerializedName = @"originHostHeader",
        PossibleTypes = new [] { typeof(string) })]
        string OriginHostHeader { get; set; }
        /// <summary>
        /// Priority of origin in given origin group for load balancing. Higher priorities will not be used for load balancing if
        /// any lower priority origin is healthy.Must be between 1 and 5
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cdn.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Priority of origin in given origin group for load balancing. Higher priorities will not be used for load balancing if any lower priority origin is healthy.Must be between 1 and 5",
        SerializedName = @"priority",
        PossibleTypes = new [] { typeof(int) })]
        int? Priority { get; set; }
        /// <summary>Resource ID.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cdn.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Resource ID.",
        SerializedName = @"id",
        PossibleTypes = new [] { typeof(string) })]
        string PrivateLinkId { get; set; }
        /// <summary>
        /// The group id from the provider of resource the shared private link resource is for.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cdn.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The group id from the provider of resource the shared private link resource is for.",
        SerializedName = @"groupId",
        PossibleTypes = new [] { typeof(string) })]
        string SharedPrivateLinkResourceGroupId { get; set; }
        /// <summary>The location of the shared private link resource</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cdn.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The location of the shared private link resource",
        SerializedName = @"privateLinkLocation",
        PossibleTypes = new [] { typeof(string) })]
        string SharedPrivateLinkResourcePrivateLinkLocation { get; set; }
        /// <summary>
        /// The request message for requesting approval of the shared private link resource.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cdn.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The request message for requesting approval of the shared private link resource.",
        SerializedName = @"requestMessage",
        PossibleTypes = new [] { typeof(string) })]
        string SharedPrivateLinkResourceRequestMessage { get; set; }
        /// <summary>
        /// Status of the shared private link resource. Can be Pending, Approved, Rejected, Disconnected, or Timeout.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cdn.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Status of the shared private link resource. Can be Pending, Approved, Rejected, Disconnected, or Timeout.",
        SerializedName = @"status",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Cdn.Support.SharedPrivateLinkResourceStatus) })]
        Microsoft.Azure.PowerShell.Cmdlets.Cdn.Support.SharedPrivateLinkResourceStatus? SharedPrivateLinkResourceStatus { get; set; }
        /// <summary>
        /// Weight of the origin in given origin group for load balancing. Must be between 1 and 1000
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cdn.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Weight of the origin in given origin group for load balancing. Must be between 1 and 1000",
        SerializedName = @"weight",
        PossibleTypes = new [] { typeof(int) })]
        int? Weight { get; set; }

    }
    /// AFDOrigin properties needed for origin update.
    internal partial interface IAfdOriginUpdateParametersInternal

    {
        /// <summary>Resource reference to the Azure origin resource.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20230501.IResourceReference AzureOrigin { get; set; }
        /// <summary>Resource ID.</summary>
        string AzureOriginId { get; set; }
        /// <summary>
        /// Whether to enable health probes to be made against backends defined under backendPools. Health probes can only be disabled
        /// if there is a single enabled backend in single enabled backend pool.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Cdn.Support.EnabledState? EnabledState { get; set; }
        /// <summary>Whether to enable certificate name check at origin level</summary>
        bool? EnforceCertificateNameCheck { get; set; }
        /// <summary>
        /// The address of the origin. Domain names, IPv4 addresses, and IPv6 addresses are supported.This should be unique across
        /// all origins in an endpoint.
        /// </summary>
        string HostName { get; set; }
        /// <summary>The value of the HTTP port. Must be between 1 and 65535.</summary>
        int? HttpPort { get; set; }
        /// <summary>The value of the HTTPS port. Must be between 1 and 65535.</summary>
        int? HttpsPort { get; set; }
        /// <summary>The name of the origin group which contains this origin.</summary>
        string OriginGroupName { get; set; }
        /// <summary>
        /// The host header value sent to the origin with each request. If you leave this blank, the request hostname determines this
        /// value. Azure Front Door origins, such as Web Apps, Blob Storage, and Cloud Services require this host header value to
        /// match the origin hostname by default. This overrides the host header defined at Endpoint
        /// </summary>
        string OriginHostHeader { get; set; }
        /// <summary>
        /// Priority of origin in given origin group for load balancing. Higher priorities will not be used for load balancing if
        /// any lower priority origin is healthy.Must be between 1 and 5
        /// </summary>
        int? Priority { get; set; }
        /// <summary>Resource ID.</summary>
        string PrivateLinkId { get; set; }
        /// <summary>The JSON object that contains the properties of the origin.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20230501.IAfdOriginUpdatePropertiesParameters Property { get; set; }
        /// <summary>The properties of the private link resource for private origin.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20230501.ISharedPrivateLinkResourceProperties SharedPrivateLinkResource { get; set; }
        /// <summary>
        /// The group id from the provider of resource the shared private link resource is for.
        /// </summary>
        string SharedPrivateLinkResourceGroupId { get; set; }
        /// <summary>The resource id of the resource the shared private link resource is for.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20230501.IResourceReference SharedPrivateLinkResourcePrivateLink { get; set; }
        /// <summary>The location of the shared private link resource</summary>
        string SharedPrivateLinkResourcePrivateLinkLocation { get; set; }
        /// <summary>
        /// The request message for requesting approval of the shared private link resource.
        /// </summary>
        string SharedPrivateLinkResourceRequestMessage { get; set; }
        /// <summary>
        /// Status of the shared private link resource. Can be Pending, Approved, Rejected, Disconnected, or Timeout.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Cdn.Support.SharedPrivateLinkResourceStatus? SharedPrivateLinkResourceStatus { get; set; }
        /// <summary>
        /// Weight of the origin in given origin group for load balancing. Must be between 1 and 1000
        /// </summary>
        int? Weight { get; set; }

    }
}