// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20240501Preview
{
    using static Microsoft.Azure.PowerShell.Cmdlets.Cdn.Runtime.Extensions;

    /// <summary>The JSON object that contains the properties of the domain to create.</summary>
    public partial class AfdDomainUpdatePropertiesParameters :
        Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20240501Preview.IAfdDomainUpdatePropertiesParameters,
        Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20240501Preview.IAfdDomainUpdatePropertiesParametersInternal
    {

        /// <summary>
        /// Backing field for <see cref="AfdDomainUpdatePropertiesParametersPreValidatedCustomDomainResourceId" /> property.
        /// </summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20240501Preview.IResourceReference _afdDomainUpdatePropertiesParametersPreValidatedCustomDomainResourceId;

        /// <summary>
        /// Resource reference to the Azure resource where custom domain ownership was prevalidated
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cdn.Origin(Microsoft.Azure.PowerShell.Cmdlets.Cdn.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20240501Preview.IResourceReference AfdDomainUpdatePropertiesParametersPreValidatedCustomDomainResourceId { get => (this._afdDomainUpdatePropertiesParametersPreValidatedCustomDomainResourceId = this._afdDomainUpdatePropertiesParametersPreValidatedCustomDomainResourceId ?? new Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20240501Preview.ResourceReference()); set => this._afdDomainUpdatePropertiesParametersPreValidatedCustomDomainResourceId = value; }

        /// <summary>Backing field for <see cref="AzureDnsZone" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20240501Preview.IResourceReference _azureDnsZone;

        /// <summary>Resource reference to the Azure DNS zone</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cdn.Origin(Microsoft.Azure.PowerShell.Cmdlets.Cdn.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20240501Preview.IResourceReference AzureDnsZone { get => (this._azureDnsZone = this._azureDnsZone ?? new Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20240501Preview.ResourceReference()); set => this._azureDnsZone = value; }

        /// <summary>Resource ID.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cdn.Origin(Microsoft.Azure.PowerShell.Cmdlets.Cdn.PropertyOrigin.Inlined)]
        public string AzureDnsZoneId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20240501Preview.IResourceReferenceInternal)AzureDnsZone).Id; set => ((Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20240501Preview.IResourceReferenceInternal)AzureDnsZone).Id = value ?? null; }

        /// <summary>
        /// Internal Acessors for AfdDomainUpdatePropertiesParametersPreValidatedCustomDomainResourceId
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20240501Preview.IResourceReference Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20240501Preview.IAfdDomainUpdatePropertiesParametersInternal.AfdDomainUpdatePropertiesParametersPreValidatedCustomDomainResourceId { get => (this._afdDomainUpdatePropertiesParametersPreValidatedCustomDomainResourceId = this._afdDomainUpdatePropertiesParametersPreValidatedCustomDomainResourceId ?? new Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20240501Preview.ResourceReference()); set { {_afdDomainUpdatePropertiesParametersPreValidatedCustomDomainResourceId = value;} } }

        /// <summary>Internal Acessors for AzureDnsZone</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20240501Preview.IResourceReference Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20240501Preview.IAfdDomainUpdatePropertiesParametersInternal.AzureDnsZone { get => (this._azureDnsZone = this._azureDnsZone ?? new Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20240501Preview.ResourceReference()); set { {_azureDnsZone = value;} } }

        /// <summary>Internal Acessors for MtlsSetting</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20240501Preview.IAfdDomainMtlsParameters Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20240501Preview.IAfdDomainUpdatePropertiesParametersInternal.MtlsSetting { get => (this._mtlsSetting = this._mtlsSetting ?? new Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20240501Preview.AfdDomainMtlsParameters()); set { {_mtlsSetting = value;} } }

        /// <summary>Internal Acessors for ProfileName</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20240501Preview.IAfdDomainUpdatePropertiesParametersInternal.ProfileName { get => this._profileName; set { {_profileName = value;} } }

        /// <summary>
        /// Set to Disabled by default. If set to Enabled, then selected client certificate chain(s) are sent directly to origin using
        /// reserved header.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cdn.Origin(Microsoft.Azure.PowerShell.Cmdlets.Cdn.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Cdn.Support.EnabledState? MtlSettingCertificatePassthrough { get => ((Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20240501Preview.IAfdDomainMtlsParametersInternal)MtlsSetting).CertificatePassthrough; set => ((Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20240501Preview.IAfdDomainMtlsParametersInternal)MtlsSetting).CertificatePassthrough = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.Cdn.Support.EnabledState)""); }

        /// <summary>
        /// Set to Enabled by default. If set to Disabled, validation of client certificate chain for mutual TLS handshake will be
        /// skipped.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cdn.Origin(Microsoft.Azure.PowerShell.Cmdlets.Cdn.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Cdn.Support.EnabledState? MtlSettingCertificateValidation { get => ((Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20240501Preview.IAfdDomainMtlsParametersInternal)MtlsSetting).CertificateValidation; set => ((Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20240501Preview.IAfdDomainMtlsParametersInternal)MtlsSetting).CertificateValidation = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.Cdn.Support.EnabledState)""); }

        /// <summary>
        /// Set to Enabled by default. If set to Disabled, revocation status of client certificate chain will be checked before establishing
        /// mutual TLS connection.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cdn.Origin(Microsoft.Azure.PowerShell.Cmdlets.Cdn.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Cdn.Support.EnabledState? MtlSettingOcsp { get => ((Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20240501Preview.IAfdDomainMtlsParametersInternal)MtlsSetting).Ocsp; set => ((Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20240501Preview.IAfdDomainMtlsParametersInternal)MtlsSetting).Ocsp = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.Cdn.Support.EnabledState)""); }

        /// <summary>
        /// List of FQDN that will be accepted for mutual TLS validation in addition to custom domain's hostname.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cdn.Origin(Microsoft.Azure.PowerShell.Cmdlets.Cdn.PropertyOrigin.Inlined)]
        public string[] MtlSettingOtherAllowedFqdn { get => ((Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20240501Preview.IAfdDomainMtlsParametersInternal)MtlsSetting).OtherAllowedFqdn; set => ((Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20240501Preview.IAfdDomainMtlsParametersInternal)MtlsSetting).OtherAllowedFqdn = value ?? null /* arrayOf */; }

        /// <summary>
        /// List of one or two of Resource References (ie. subs/rg/profile/secret) to Secrets of type MtlsCertificateChain to use
        /// in mutual TLS handshake.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cdn.Origin(Microsoft.Azure.PowerShell.Cmdlets.Cdn.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20240501Preview.IResourceReference[] MtlSettingSecret { get => ((Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20240501Preview.IAfdDomainMtlsParametersInternal)MtlsSetting).Secret; set => ((Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20240501Preview.IAfdDomainMtlsParametersInternal)MtlsSetting).Secret = value ?? null /* arrayOf */; }

        /// <summary>Backing field for <see cref="MtlsSetting" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20240501Preview.IAfdDomainMtlsParameters _mtlsSetting;

        /// <summary>
        /// The configuration specifying how to enable mutual TLS for the domain, including specifying allowed FQDN and which server
        /// certificate(s) to use.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cdn.Origin(Microsoft.Azure.PowerShell.Cmdlets.Cdn.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20240501Preview.IAfdDomainMtlsParameters MtlsSetting { get => (this._mtlsSetting = this._mtlsSetting ?? new Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20240501Preview.AfdDomainMtlsParameters()); set => this._mtlsSetting = value; }

        /// <summary>Resource ID.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cdn.Origin(Microsoft.Azure.PowerShell.Cmdlets.Cdn.PropertyOrigin.Inlined)]
        public string PreValidatedCustomDomainResourceId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20240501Preview.IResourceReferenceInternal)AfdDomainUpdatePropertiesParametersPreValidatedCustomDomainResourceId).Id; set => ((Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20240501Preview.IResourceReferenceInternal)AfdDomainUpdatePropertiesParametersPreValidatedCustomDomainResourceId).Id = value ?? null; }

        /// <summary>Backing field for <see cref="ProfileName" /> property.</summary>
        private string _profileName;

        /// <summary>The name of the profile which holds the domain.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cdn.Origin(Microsoft.Azure.PowerShell.Cmdlets.Cdn.PropertyOrigin.Owned)]
        public string ProfileName { get => this._profileName; }

        /// <summary>Backing field for <see cref="TlsSetting" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20240501Preview.IAfdDomainHttpsParameters _tlsSetting;

        /// <summary>
        /// The configuration specifying how to enable HTTPS for the domain - using AzureFrontDoor managed certificate or user's own
        /// certificate. If not specified, enabling ssl uses AzureFrontDoor managed certificate by default.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cdn.Origin(Microsoft.Azure.PowerShell.Cmdlets.Cdn.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20240501Preview.IAfdDomainHttpsParameters TlsSetting { get => (this._tlsSetting = this._tlsSetting ?? new Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20240501Preview.AfdDomainHttpsParameters()); set => this._tlsSetting = value; }

        /// <summary>Creates an new <see cref="AfdDomainUpdatePropertiesParameters" /> instance.</summary>
        public AfdDomainUpdatePropertiesParameters()
        {

        }
    }
    /// The JSON object that contains the properties of the domain to create.
    public partial interface IAfdDomainUpdatePropertiesParameters :
        Microsoft.Azure.PowerShell.Cmdlets.Cdn.Runtime.IJsonSerializable
    {
        /// <summary>Resource ID.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cdn.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Resource ID.",
        SerializedName = @"id",
        PossibleTypes = new [] { typeof(string) })]
        string AzureDnsZoneId { get; set; }
        /// <summary>
        /// Set to Disabled by default. If set to Enabled, then selected client certificate chain(s) are sent directly to origin using
        /// reserved header.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cdn.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Set to Disabled by default. If set to Enabled, then selected client certificate chain(s) are sent directly to origin using reserved header.",
        SerializedName = @"certificatePassthrough",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Cdn.Support.EnabledState) })]
        Microsoft.Azure.PowerShell.Cmdlets.Cdn.Support.EnabledState? MtlSettingCertificatePassthrough { get; set; }
        /// <summary>
        /// Set to Enabled by default. If set to Disabled, validation of client certificate chain for mutual TLS handshake will be
        /// skipped.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cdn.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Set to Enabled by default. If set to Disabled, validation of client certificate chain for mutual TLS handshake will be skipped.",
        SerializedName = @"certificateValidation",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Cdn.Support.EnabledState) })]
        Microsoft.Azure.PowerShell.Cmdlets.Cdn.Support.EnabledState? MtlSettingCertificateValidation { get; set; }
        /// <summary>
        /// Set to Enabled by default. If set to Disabled, revocation status of client certificate chain will be checked before establishing
        /// mutual TLS connection.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cdn.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Set to Enabled by default. If set to Disabled, revocation status of client certificate chain will be checked before establishing mutual TLS connection.",
        SerializedName = @"ocsp",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Cdn.Support.EnabledState) })]
        Microsoft.Azure.PowerShell.Cmdlets.Cdn.Support.EnabledState? MtlSettingOcsp { get; set; }
        /// <summary>
        /// List of FQDN that will be accepted for mutual TLS validation in addition to custom domain's hostname.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cdn.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"List of FQDN that will be accepted for mutual TLS validation in addition to custom domain's hostname.",
        SerializedName = @"otherAllowedFqdn",
        PossibleTypes = new [] { typeof(string) })]
        string[] MtlSettingOtherAllowedFqdn { get; set; }
        /// <summary>
        /// List of one or two of Resource References (ie. subs/rg/profile/secret) to Secrets of type MtlsCertificateChain to use
        /// in mutual TLS handshake.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cdn.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"List of one or two of Resource References (ie. subs/rg/profile/secret) to Secrets of type MtlsCertificateChain to use in mutual TLS handshake.",
        SerializedName = @"secrets",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20240501Preview.IResourceReference) })]
        Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20240501Preview.IResourceReference[] MtlSettingSecret { get; set; }
        /// <summary>Resource ID.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cdn.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Resource ID.",
        SerializedName = @"id",
        PossibleTypes = new [] { typeof(string) })]
        string PreValidatedCustomDomainResourceId { get; set; }
        /// <summary>The name of the profile which holds the domain.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cdn.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The name of the profile which holds the domain.",
        SerializedName = @"profileName",
        PossibleTypes = new [] { typeof(string) })]
        string ProfileName { get;  }
        /// <summary>
        /// The configuration specifying how to enable HTTPS for the domain - using AzureFrontDoor managed certificate or user's own
        /// certificate. If not specified, enabling ssl uses AzureFrontDoor managed certificate by default.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cdn.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The configuration specifying how to enable HTTPS for the domain - using AzureFrontDoor managed certificate or user's own certificate. If not specified, enabling ssl uses AzureFrontDoor managed certificate by default.",
        SerializedName = @"tlsSettings",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20240501Preview.IAfdDomainHttpsParameters) })]
        Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20240501Preview.IAfdDomainHttpsParameters TlsSetting { get; set; }

    }
    /// The JSON object that contains the properties of the domain to create.
    internal partial interface IAfdDomainUpdatePropertiesParametersInternal

    {
        /// <summary>
        /// Resource reference to the Azure resource where custom domain ownership was prevalidated
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20240501Preview.IResourceReference AfdDomainUpdatePropertiesParametersPreValidatedCustomDomainResourceId { get; set; }
        /// <summary>Resource reference to the Azure DNS zone</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20240501Preview.IResourceReference AzureDnsZone { get; set; }
        /// <summary>Resource ID.</summary>
        string AzureDnsZoneId { get; set; }
        /// <summary>
        /// Set to Disabled by default. If set to Enabled, then selected client certificate chain(s) are sent directly to origin using
        /// reserved header.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Cdn.Support.EnabledState? MtlSettingCertificatePassthrough { get; set; }
        /// <summary>
        /// Set to Enabled by default. If set to Disabled, validation of client certificate chain for mutual TLS handshake will be
        /// skipped.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Cdn.Support.EnabledState? MtlSettingCertificateValidation { get; set; }
        /// <summary>
        /// Set to Enabled by default. If set to Disabled, revocation status of client certificate chain will be checked before establishing
        /// mutual TLS connection.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Cdn.Support.EnabledState? MtlSettingOcsp { get; set; }
        /// <summary>
        /// List of FQDN that will be accepted for mutual TLS validation in addition to custom domain's hostname.
        /// </summary>
        string[] MtlSettingOtherAllowedFqdn { get; set; }
        /// <summary>
        /// List of one or two of Resource References (ie. subs/rg/profile/secret) to Secrets of type MtlsCertificateChain to use
        /// in mutual TLS handshake.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20240501Preview.IResourceReference[] MtlSettingSecret { get; set; }
        /// <summary>
        /// The configuration specifying how to enable mutual TLS for the domain, including specifying allowed FQDN and which server
        /// certificate(s) to use.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20240501Preview.IAfdDomainMtlsParameters MtlsSetting { get; set; }
        /// <summary>Resource ID.</summary>
        string PreValidatedCustomDomainResourceId { get; set; }
        /// <summary>The name of the profile which holds the domain.</summary>
        string ProfileName { get; set; }
        /// <summary>
        /// The configuration specifying how to enable HTTPS for the domain - using AzureFrontDoor managed certificate or user's own
        /// certificate. If not specified, enabling ssl uses AzureFrontDoor managed certificate by default.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20240501Preview.IAfdDomainHttpsParameters TlsSetting { get; set; }

    }
}