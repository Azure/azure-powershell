// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20230501
{
    using static Microsoft.Azure.PowerShell.Cmdlets.Cdn.Runtime.Extensions;

    /// <summary>
    /// CDN endpoint is the entity within a CDN profile containing configuration information such as origin, protocol, content
    /// caching and delivery behavior. The CDN endpoint uses the URL format <endpointname>.azureedge.net.
    /// </summary>
    public partial class Endpoint :
        Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20230501.IEndpoint,
        Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20230501.IEndpointInternal,
        Microsoft.Azure.PowerShell.Cmdlets.Cdn.Runtime.IValidates,
        Microsoft.Azure.PowerShell.Cmdlets.Cdn.Runtime.IHeaderSerializable
    {
        /// <summary>
        /// Backing field for Inherited model <see cref= "Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20230501.ITrackedResource"
        /// />
        /// </summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20230501.ITrackedResource __trackedResource = new Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20230501.TrackedResource();

        /// <summary>
        /// List of content types on which compression applies. The value should be a valid MIME type.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cdn.Origin(Microsoft.Azure.PowerShell.Cmdlets.Cdn.PropertyOrigin.Inlined)]
        public string[] ContentTypesToCompress { get => ((Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20230501.IEndpointPropertiesUpdateParametersInternal)Property).ContentTypesToCompress; set => ((Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20230501.IEndpointPropertiesUpdateParametersInternal)Property).ContentTypesToCompress = value ?? null /* arrayOf */; }

        /// <summary>The custom domains under the endpoint.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cdn.Origin(Microsoft.Azure.PowerShell.Cmdlets.Cdn.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20230501.IDeepCreatedCustomDomain[] CustomDomain { get => ((Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20230501.IEndpointPropertiesInternal)Property).CustomDomain; }

        /// <summary>Resource ID.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cdn.Origin(Microsoft.Azure.PowerShell.Cmdlets.Cdn.PropertyOrigin.Inlined)]
        public string DefaultOriginGroupId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20230501.IEndpointPropertiesUpdateParametersInternal)Property).DefaultOriginGroupId; set => ((Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20230501.IEndpointPropertiesUpdateParametersInternal)Property).DefaultOriginGroupId = value ?? null; }

        /// <summary>User-friendly description of the policy.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cdn.Origin(Microsoft.Azure.PowerShell.Cmdlets.Cdn.PropertyOrigin.Inlined)]
        public string DeliveryPolicyDescription { get => ((Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20230501.IEndpointPropertiesUpdateParametersInternal)Property).DeliveryPolicyDescription; set => ((Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20230501.IEndpointPropertiesUpdateParametersInternal)Property).DeliveryPolicyDescription = value ?? null; }

        /// <summary>A list of the delivery rules.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cdn.Origin(Microsoft.Azure.PowerShell.Cmdlets.Cdn.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20230501.IDeliveryRule[] DeliveryPolicyRule { get => ((Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20230501.IEndpointPropertiesUpdateParametersInternal)Property).DeliveryPolicyRule; set => ((Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20230501.IEndpointPropertiesUpdateParametersInternal)Property).DeliveryPolicyRule = value ?? null /* arrayOf */; }

        /// <summary>
        /// List of rules defining the user's geo access within a CDN endpoint. Each geo filter defines an access rule to a specified
        /// path or content, e.g. block APAC for path /pictures/
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cdn.Origin(Microsoft.Azure.PowerShell.Cmdlets.Cdn.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20230501.IGeoFilter[] GeoFilter { get => ((Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20230501.IEndpointPropertiesUpdateParametersInternal)Property).GeoFilter; set => ((Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20230501.IEndpointPropertiesUpdateParametersInternal)Property).GeoFilter = value ?? null /* arrayOf */; }

        /// <summary>
        /// The host name of the endpoint structured as {endpointName}.{DNSZone}, e.g. contoso.azureedge.net
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cdn.Origin(Microsoft.Azure.PowerShell.Cmdlets.Cdn.PropertyOrigin.Inlined)]
        public string HostName { get => ((Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20230501.IEndpointPropertiesInternal)Property).HostName; }

        /// <summary>Resource ID.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cdn.Origin(Microsoft.Azure.PowerShell.Cmdlets.Cdn.PropertyOrigin.Inherited)]
        public string Id { get => ((Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20230501.IResourceInternal)__trackedResource).Id; }

        /// <summary>
        /// Indicates whether content compression is enabled on CDN. Default value is false. If compression is enabled, content will
        /// be served as compressed if user requests for a compressed version. Content won't be compressed on CDN when requested content
        /// is smaller than 1 byte or larger than 1 MB.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cdn.Origin(Microsoft.Azure.PowerShell.Cmdlets.Cdn.PropertyOrigin.Inlined)]
        public bool? IsCompressionEnabled { get => ((Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20230501.IEndpointPropertiesUpdateParametersInternal)Property).IsCompressionEnabled; set => ((Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20230501.IEndpointPropertiesUpdateParametersInternal)Property).IsCompressionEnabled = value ?? default(bool); }

        /// <summary>
        /// Indicates whether HTTP traffic is allowed on the endpoint. Default value is true. At least one protocol (HTTP or HTTPS)
        /// must be allowed.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cdn.Origin(Microsoft.Azure.PowerShell.Cmdlets.Cdn.PropertyOrigin.Inlined)]
        public bool? IsHttpAllowed { get => ((Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20230501.IEndpointPropertiesUpdateParametersInternal)Property).IsHttpAllowed; set => ((Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20230501.IEndpointPropertiesUpdateParametersInternal)Property).IsHttpAllowed = value ?? default(bool); }

        /// <summary>
        /// Indicates whether HTTPS traffic is allowed on the endpoint. Default value is true. At least one protocol (HTTP or HTTPS)
        /// must be allowed.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cdn.Origin(Microsoft.Azure.PowerShell.Cmdlets.Cdn.PropertyOrigin.Inlined)]
        public bool? IsHttpsAllowed { get => ((Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20230501.IEndpointPropertiesUpdateParametersInternal)Property).IsHttpsAllowed; set => ((Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20230501.IEndpointPropertiesUpdateParametersInternal)Property).IsHttpsAllowed = value ?? default(bool); }

        /// <summary>Resource location.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cdn.Origin(Microsoft.Azure.PowerShell.Cmdlets.Cdn.PropertyOrigin.Inherited)]
        public string Location { get => ((Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20230501.ITrackedResourceInternal)__trackedResource).Location; set => ((Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20230501.ITrackedResourceInternal)__trackedResource).Location = value ; }

        /// <summary>Internal Acessors for CustomDomain</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20230501.IDeepCreatedCustomDomain[] Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20230501.IEndpointInternal.CustomDomain { get => ((Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20230501.IEndpointPropertiesInternal)Property).CustomDomain; set => ((Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20230501.IEndpointPropertiesInternal)Property).CustomDomain = value; }

        /// <summary>Internal Acessors for DefaultOriginGroup</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20230501.IResourceReference Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20230501.IEndpointInternal.DefaultOriginGroup { get => ((Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20230501.IEndpointPropertiesUpdateParametersInternal)Property).DefaultOriginGroup; set => ((Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20230501.IEndpointPropertiesUpdateParametersInternal)Property).DefaultOriginGroup = value; }

        /// <summary>Internal Acessors for DeliveryPolicy</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20230501.IEndpointPropertiesUpdateParametersDeliveryPolicy Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20230501.IEndpointInternal.DeliveryPolicy { get => ((Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20230501.IEndpointPropertiesUpdateParametersInternal)Property).DeliveryPolicy; set => ((Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20230501.IEndpointPropertiesUpdateParametersInternal)Property).DeliveryPolicy = value; }

        /// <summary>Internal Acessors for HostName</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20230501.IEndpointInternal.HostName { get => ((Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20230501.IEndpointPropertiesInternal)Property).HostName; set => ((Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20230501.IEndpointPropertiesInternal)Property).HostName = value; }

        /// <summary>Internal Acessors for Property</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20230501.IEndpointProperties Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20230501.IEndpointInternal.Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20230501.EndpointProperties()); set { {_property = value;} } }

        /// <summary>Internal Acessors for ProvisioningState</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Cdn.Support.EndpointProvisioningState? Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20230501.IEndpointInternal.ProvisioningState { get => ((Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20230501.IEndpointPropertiesInternal)Property).ProvisioningState; set => ((Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20230501.IEndpointPropertiesInternal)Property).ProvisioningState = value; }

        /// <summary>Internal Acessors for ResourceState</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Cdn.Support.EndpointResourceState? Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20230501.IEndpointInternal.ResourceState { get => ((Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20230501.IEndpointPropertiesInternal)Property).ResourceState; set => ((Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20230501.IEndpointPropertiesInternal)Property).ResourceState = value; }

        /// <summary>Internal Acessors for WebApplicationFirewallPolicyLink</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20230501.IEndpointPropertiesUpdateParametersWebApplicationFirewallPolicyLink Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20230501.IEndpointInternal.WebApplicationFirewallPolicyLink { get => ((Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20230501.IEndpointPropertiesUpdateParametersInternal)Property).WebApplicationFirewallPolicyLink; set => ((Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20230501.IEndpointPropertiesUpdateParametersInternal)Property).WebApplicationFirewallPolicyLink = value; }

        /// <summary>Internal Acessors for Id</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20230501.IResourceInternal.Id { get => ((Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20230501.IResourceInternal)__trackedResource).Id; set => ((Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20230501.IResourceInternal)__trackedResource).Id = value; }

        /// <summary>Internal Acessors for Name</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20230501.IResourceInternal.Name { get => ((Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20230501.IResourceInternal)__trackedResource).Name; set => ((Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20230501.IResourceInternal)__trackedResource).Name = value; }

        /// <summary>Internal Acessors for SystemData</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20230501.ISystemData Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20230501.IResourceInternal.SystemData { get => ((Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20230501.IResourceInternal)__trackedResource).SystemData; set => ((Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20230501.IResourceInternal)__trackedResource).SystemData = value; }

        /// <summary>Internal Acessors for Type</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20230501.IResourceInternal.Type { get => ((Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20230501.IResourceInternal)__trackedResource).Type; set => ((Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20230501.IResourceInternal)__trackedResource).Type = value; }

        /// <summary>Resource name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cdn.Origin(Microsoft.Azure.PowerShell.Cmdlets.Cdn.PropertyOrigin.Inherited)]
        public string Name { get => ((Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20230501.IResourceInternal)__trackedResource).Name; }

        /// <summary>
        /// Specifies what scenario the customer wants this CDN endpoint to optimize for, e.g. Download, Media services. With this
        /// information, CDN can apply scenario driven optimization.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cdn.Origin(Microsoft.Azure.PowerShell.Cmdlets.Cdn.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Cdn.Support.OptimizationType? OptimizationType { get => ((Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20230501.IEndpointPropertiesUpdateParametersInternal)Property).OptimizationType; set => ((Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20230501.IEndpointPropertiesUpdateParametersInternal)Property).OptimizationType = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.Cdn.Support.OptimizationType)""); }

        /// <summary>The source of the content being delivered via CDN.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cdn.Origin(Microsoft.Azure.PowerShell.Cmdlets.Cdn.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20230501.IDeepCreatedOrigin[] Origin { get => ((Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20230501.IEndpointPropertiesInternal)Property).Origin; set => ((Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20230501.IEndpointPropertiesInternal)Property).Origin = value ?? null /* arrayOf */; }

        /// <summary>
        /// The origin groups comprising of origins that are used for load balancing the traffic based on availability.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cdn.Origin(Microsoft.Azure.PowerShell.Cmdlets.Cdn.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20230501.IDeepCreatedOriginGroup[] OriginGroup { get => ((Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20230501.IEndpointPropertiesInternal)Property).OriginGroup; set => ((Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20230501.IEndpointPropertiesInternal)Property).OriginGroup = value ?? null /* arrayOf */; }

        /// <summary>
        /// The host header value sent to the origin with each request. This property at Endpoint is only allowed when endpoint uses
        /// single origin and can be overridden by the same property specified at origin.If you leave this blank, the request hostname
        /// determines this value. Azure CDN origins, such as Web Apps, Blob Storage, and Cloud Services require this host header
        /// value to match the origin hostname by default.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cdn.Origin(Microsoft.Azure.PowerShell.Cmdlets.Cdn.PropertyOrigin.Inlined)]
        public string OriginHostHeader { get => ((Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20230501.IEndpointPropertiesUpdateParametersInternal)Property).OriginHostHeader; set => ((Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20230501.IEndpointPropertiesUpdateParametersInternal)Property).OriginHostHeader = value ?? null; }

        /// <summary>
        /// A directory path on the origin that CDN can use to retrieve content from, e.g. contoso.cloudapp.net/originpath.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cdn.Origin(Microsoft.Azure.PowerShell.Cmdlets.Cdn.PropertyOrigin.Inlined)]
        public string OriginPath { get => ((Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20230501.IEndpointPropertiesUpdateParametersInternal)Property).OriginPath; set => ((Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20230501.IEndpointPropertiesUpdateParametersInternal)Property).OriginPath = value ?? null; }

        /// <summary>
        /// Path to a file hosted on the origin which helps accelerate delivery of the dynamic content and calculate the most optimal
        /// routes for the CDN. This is relative to the origin path. This property is only relevant when using a single origin.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cdn.Origin(Microsoft.Azure.PowerShell.Cmdlets.Cdn.PropertyOrigin.Inlined)]
        public string ProbePath { get => ((Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20230501.IEndpointPropertiesUpdateParametersInternal)Property).ProbePath; set => ((Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20230501.IEndpointPropertiesUpdateParametersInternal)Property).ProbePath = value ?? null; }

        /// <summary>Backing field for <see cref="Property" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20230501.IEndpointProperties _property;

        /// <summary>The JSON object that contains the properties required to create an endpoint.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cdn.Origin(Microsoft.Azure.PowerShell.Cmdlets.Cdn.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20230501.IEndpointProperties Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20230501.EndpointProperties()); set => this._property = value; }

        /// <summary>Provisioning status of the endpoint.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cdn.Origin(Microsoft.Azure.PowerShell.Cmdlets.Cdn.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Cdn.Support.EndpointProvisioningState? ProvisioningState { get => ((Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20230501.IEndpointPropertiesInternal)Property).ProvisioningState; }

        /// <summary>
        /// Defines how CDN caches requests that include query strings. You can ignore any query strings when caching, bypass caching
        /// to prevent requests that contain query strings from being cached, or cache every request with a unique URL.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cdn.Origin(Microsoft.Azure.PowerShell.Cmdlets.Cdn.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Cdn.Support.QueryStringCachingBehavior? QueryStringCachingBehavior { get => ((Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20230501.IEndpointPropertiesUpdateParametersInternal)Property).QueryStringCachingBehavior; set => ((Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20230501.IEndpointPropertiesUpdateParametersInternal)Property).QueryStringCachingBehavior = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.Cdn.Support.QueryStringCachingBehavior)""); }

        /// <summary>Gets the resource group name</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cdn.Origin(Microsoft.Azure.PowerShell.Cmdlets.Cdn.PropertyOrigin.Owned)]
        [Microsoft.Azure.PowerShell.Cmdlets.Cdn.FormatTable]
        public string ResourceGroupName { get => (new global::System.Text.RegularExpressions.Regex("^/subscriptions/(?<subscriptionId>[^/]+)/resourceGroups/(?<resourceGroupName>[^/]+)/providers/", global::System.Text.RegularExpressions.RegexOptions.IgnoreCase).Match(this.Id).Success ? new global::System.Text.RegularExpressions.Regex("^/subscriptions/(?<subscriptionId>[^/]+)/resourceGroups/(?<resourceGroupName>[^/]+)/providers/", global::System.Text.RegularExpressions.RegexOptions.IgnoreCase).Match(this.Id).Groups["resourceGroupName"].Value : null); }

        /// <summary>Resource status of the endpoint.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cdn.Origin(Microsoft.Azure.PowerShell.Cmdlets.Cdn.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Cdn.Support.EndpointResourceState? ResourceState { get => ((Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20230501.IEndpointPropertiesInternal)Property).ResourceState; }

        /// <summary>Read only system data</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cdn.Origin(Microsoft.Azure.PowerShell.Cmdlets.Cdn.PropertyOrigin.Inherited)]
        [Microsoft.Azure.PowerShell.Cmdlets.Cdn.DoNotFormat]
        public Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20230501.ISystemData SystemData { get => ((Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20230501.IResourceInternal)__trackedResource).SystemData; }

        /// <summary>The timestamp of resource creation (UTC)</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cdn.Origin(Microsoft.Azure.PowerShell.Cmdlets.Cdn.PropertyOrigin.Inherited)]
        [Microsoft.Azure.PowerShell.Cmdlets.Cdn.DoNotFormat]
        public global::System.DateTime? SystemDataCreatedAt { get => ((Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20230501.IResourceInternal)__trackedResource).SystemDataCreatedAt; set => ((Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20230501.IResourceInternal)__trackedResource).SystemDataCreatedAt = value ?? default(global::System.DateTime); }

        /// <summary>An identifier for the identity that created the resource</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cdn.Origin(Microsoft.Azure.PowerShell.Cmdlets.Cdn.PropertyOrigin.Inherited)]
        [Microsoft.Azure.PowerShell.Cmdlets.Cdn.DoNotFormat]
        public string SystemDataCreatedBy { get => ((Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20230501.IResourceInternal)__trackedResource).SystemDataCreatedBy; set => ((Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20230501.IResourceInternal)__trackedResource).SystemDataCreatedBy = value ?? null; }

        /// <summary>The type of identity that created the resource</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cdn.Origin(Microsoft.Azure.PowerShell.Cmdlets.Cdn.PropertyOrigin.Inherited)]
        [Microsoft.Azure.PowerShell.Cmdlets.Cdn.DoNotFormat]
        public Microsoft.Azure.PowerShell.Cmdlets.Cdn.Support.IdentityType? SystemDataCreatedByType { get => ((Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20230501.IResourceInternal)__trackedResource).SystemDataCreatedByType; set => ((Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20230501.IResourceInternal)__trackedResource).SystemDataCreatedByType = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.Cdn.Support.IdentityType)""); }

        /// <summary>The timestamp of resource last modification (UTC)</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cdn.Origin(Microsoft.Azure.PowerShell.Cmdlets.Cdn.PropertyOrigin.Inherited)]
        [Microsoft.Azure.PowerShell.Cmdlets.Cdn.DoNotFormat]
        public global::System.DateTime? SystemDataLastModifiedAt { get => ((Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20230501.IResourceInternal)__trackedResource).SystemDataLastModifiedAt; set => ((Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20230501.IResourceInternal)__trackedResource).SystemDataLastModifiedAt = value ?? default(global::System.DateTime); }

        /// <summary>An identifier for the identity that last modified the resource</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cdn.Origin(Microsoft.Azure.PowerShell.Cmdlets.Cdn.PropertyOrigin.Inherited)]
        [Microsoft.Azure.PowerShell.Cmdlets.Cdn.DoNotFormat]
        public string SystemDataLastModifiedBy { get => ((Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20230501.IResourceInternal)__trackedResource).SystemDataLastModifiedBy; set => ((Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20230501.IResourceInternal)__trackedResource).SystemDataLastModifiedBy = value ?? null; }

        /// <summary>The type of identity that last modified the resource</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cdn.Origin(Microsoft.Azure.PowerShell.Cmdlets.Cdn.PropertyOrigin.Inherited)]
        [Microsoft.Azure.PowerShell.Cmdlets.Cdn.DoNotFormat]
        public Microsoft.Azure.PowerShell.Cmdlets.Cdn.Support.IdentityType? SystemDataLastModifiedByType { get => ((Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20230501.IResourceInternal)__trackedResource).SystemDataLastModifiedByType; set => ((Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20230501.IResourceInternal)__trackedResource).SystemDataLastModifiedByType = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.Cdn.Support.IdentityType)""); }

        /// <summary>Resource tags.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cdn.Origin(Microsoft.Azure.PowerShell.Cmdlets.Cdn.PropertyOrigin.Inherited)]
        public Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20230501.ITrackedResourceTags Tag { get => ((Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20230501.ITrackedResourceInternal)__trackedResource).Tag; set => ((Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20230501.ITrackedResourceInternal)__trackedResource).Tag = value ?? null /* model class */; }

        /// <summary>Resource type.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cdn.Origin(Microsoft.Azure.PowerShell.Cmdlets.Cdn.PropertyOrigin.Inherited)]
        public string Type { get => ((Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20230501.IResourceInternal)__trackedResource).Type; }

        /// <summary>List of keys used to validate the signed URL hashes.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cdn.Origin(Microsoft.Azure.PowerShell.Cmdlets.Cdn.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20230501.IUrlSigningKey[] UrlSigningKey { get => ((Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20230501.IEndpointPropertiesUpdateParametersInternal)Property).UrlSigningKey; set => ((Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20230501.IEndpointPropertiesUpdateParametersInternal)Property).UrlSigningKey = value ?? null /* arrayOf */; }

        /// <summary>Resource ID.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cdn.Origin(Microsoft.Azure.PowerShell.Cmdlets.Cdn.PropertyOrigin.Inlined)]
        public string WebApplicationFirewallPolicyLinkId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20230501.IEndpointPropertiesUpdateParametersInternal)Property).WebApplicationFirewallPolicyLinkId; set => ((Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20230501.IEndpointPropertiesUpdateParametersInternal)Property).WebApplicationFirewallPolicyLinkId = value ?? null; }

        /// <summary>Creates an new <see cref="Endpoint" /> instance.</summary>
        public Endpoint()
        {

        }

        /// <param name="headers"></param>
        void Microsoft.Azure.PowerShell.Cmdlets.Cdn.Runtime.IHeaderSerializable.ReadHeaders(global::System.Net.Http.Headers.HttpResponseHeaders headers)
        {
            if (headers.TryGetValues("location", out var __locationHeader0))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20230501.ITrackedResourceInternal)this).Location = System.Linq.Enumerable.FirstOrDefault(__locationHeader0) is string __headerLocationHeader0 ? __headerLocationHeader0 : (string)null;
            }
        }

        /// <summary>Validates that this object meets the validation criteria.</summary>
        /// <param name="eventListener">an <see cref="Microsoft.Azure.PowerShell.Cmdlets.Cdn.Runtime.IEventListener" /> instance that will receive validation
        /// events.</param>
        /// <returns>
        /// A <see cref = "global::System.Threading.Tasks.Task" /> that will be complete when validation is completed.
        /// </returns>
        public async global::System.Threading.Tasks.Task Validate(Microsoft.Azure.PowerShell.Cmdlets.Cdn.Runtime.IEventListener eventListener)
        {
            await eventListener.AssertNotNull(nameof(__trackedResource), __trackedResource);
            await eventListener.AssertObjectIsValid(nameof(__trackedResource), __trackedResource);
        }
    }
    /// CDN endpoint is the entity within a CDN profile containing configuration information such as origin, protocol, content
    /// caching and delivery behavior. The CDN endpoint uses the URL format <endpointname>.azureedge.net.
    public partial interface IEndpoint :
        Microsoft.Azure.PowerShell.Cmdlets.Cdn.Runtime.IJsonSerializable,
        Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20230501.ITrackedResource
    {
        /// <summary>
        /// List of content types on which compression applies. The value should be a valid MIME type.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cdn.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"List of content types on which compression applies. The value should be a valid MIME type.",
        SerializedName = @"contentTypesToCompress",
        PossibleTypes = new [] { typeof(string) })]
        string[] ContentTypesToCompress { get; set; }
        /// <summary>The custom domains under the endpoint.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cdn.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The custom domains under the endpoint.",
        SerializedName = @"customDomains",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20230501.IDeepCreatedCustomDomain) })]
        Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20230501.IDeepCreatedCustomDomain[] CustomDomain { get;  }
        /// <summary>Resource ID.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cdn.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Resource ID.",
        SerializedName = @"id",
        PossibleTypes = new [] { typeof(string) })]
        string DefaultOriginGroupId { get; set; }
        /// <summary>User-friendly description of the policy.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cdn.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"User-friendly description of the policy.",
        SerializedName = @"description",
        PossibleTypes = new [] { typeof(string) })]
        string DeliveryPolicyDescription { get; set; }
        /// <summary>A list of the delivery rules.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cdn.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"A list of the delivery rules.",
        SerializedName = @"rules",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20230501.IDeliveryRule) })]
        Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20230501.IDeliveryRule[] DeliveryPolicyRule { get; set; }
        /// <summary>
        /// List of rules defining the user's geo access within a CDN endpoint. Each geo filter defines an access rule to a specified
        /// path or content, e.g. block APAC for path /pictures/
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cdn.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"List of rules defining the user's geo access within a CDN endpoint. Each geo filter defines an access rule to a specified path or content, e.g. block APAC for path /pictures/",
        SerializedName = @"geoFilters",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20230501.IGeoFilter) })]
        Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20230501.IGeoFilter[] GeoFilter { get; set; }
        /// <summary>
        /// The host name of the endpoint structured as {endpointName}.{DNSZone}, e.g. contoso.azureedge.net
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cdn.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The host name of the endpoint structured as {endpointName}.{DNSZone}, e.g. contoso.azureedge.net",
        SerializedName = @"hostName",
        PossibleTypes = new [] { typeof(string) })]
        string HostName { get;  }
        /// <summary>
        /// Indicates whether content compression is enabled on CDN. Default value is false. If compression is enabled, content will
        /// be served as compressed if user requests for a compressed version. Content won't be compressed on CDN when requested content
        /// is smaller than 1 byte or larger than 1 MB.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cdn.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Indicates whether content compression is enabled on CDN. Default value is false. If compression is enabled, content will be served as compressed if user requests for a compressed version. Content won't be compressed on CDN when requested content is smaller than 1 byte or larger than 1 MB.",
        SerializedName = @"isCompressionEnabled",
        PossibleTypes = new [] { typeof(bool) })]
        bool? IsCompressionEnabled { get; set; }
        /// <summary>
        /// Indicates whether HTTP traffic is allowed on the endpoint. Default value is true. At least one protocol (HTTP or HTTPS)
        /// must be allowed.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cdn.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Indicates whether HTTP traffic is allowed on the endpoint. Default value is true. At least one protocol (HTTP or HTTPS) must be allowed.",
        SerializedName = @"isHttpAllowed",
        PossibleTypes = new [] { typeof(bool) })]
        bool? IsHttpAllowed { get; set; }
        /// <summary>
        /// Indicates whether HTTPS traffic is allowed on the endpoint. Default value is true. At least one protocol (HTTP or HTTPS)
        /// must be allowed.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cdn.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Indicates whether HTTPS traffic is allowed on the endpoint. Default value is true. At least one protocol (HTTP or HTTPS) must be allowed.",
        SerializedName = @"isHttpsAllowed",
        PossibleTypes = new [] { typeof(bool) })]
        bool? IsHttpsAllowed { get; set; }
        /// <summary>
        /// Specifies what scenario the customer wants this CDN endpoint to optimize for, e.g. Download, Media services. With this
        /// information, CDN can apply scenario driven optimization.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cdn.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Specifies what scenario the customer wants this CDN endpoint to optimize for, e.g. Download, Media services. With this information, CDN can apply scenario driven optimization.",
        SerializedName = @"optimizationType",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Cdn.Support.OptimizationType) })]
        Microsoft.Azure.PowerShell.Cmdlets.Cdn.Support.OptimizationType? OptimizationType { get; set; }
        /// <summary>The source of the content being delivered via CDN.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cdn.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The source of the content being delivered via CDN.",
        SerializedName = @"origins",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20230501.IDeepCreatedOrigin) })]
        Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20230501.IDeepCreatedOrigin[] Origin { get; set; }
        /// <summary>
        /// The origin groups comprising of origins that are used for load balancing the traffic based on availability.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cdn.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The origin groups comprising of origins that are used for load balancing the traffic based on availability.",
        SerializedName = @"originGroups",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20230501.IDeepCreatedOriginGroup) })]
        Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20230501.IDeepCreatedOriginGroup[] OriginGroup { get; set; }
        /// <summary>
        /// The host header value sent to the origin with each request. This property at Endpoint is only allowed when endpoint uses
        /// single origin and can be overridden by the same property specified at origin.If you leave this blank, the request hostname
        /// determines this value. Azure CDN origins, such as Web Apps, Blob Storage, and Cloud Services require this host header
        /// value to match the origin hostname by default.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cdn.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The host header value sent to the origin with each request. This property at Endpoint is only allowed when endpoint uses single origin and can be overridden by the same property specified at origin.If you leave this blank, the request hostname determines this value. Azure CDN origins, such as Web Apps, Blob Storage, and Cloud Services require this host header value to match the origin hostname by default.",
        SerializedName = @"originHostHeader",
        PossibleTypes = new [] { typeof(string) })]
        string OriginHostHeader { get; set; }
        /// <summary>
        /// A directory path on the origin that CDN can use to retrieve content from, e.g. contoso.cloudapp.net/originpath.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cdn.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"A directory path on the origin that CDN can use to retrieve content from, e.g. contoso.cloudapp.net/originpath.",
        SerializedName = @"originPath",
        PossibleTypes = new [] { typeof(string) })]
        string OriginPath { get; set; }
        /// <summary>
        /// Path to a file hosted on the origin which helps accelerate delivery of the dynamic content and calculate the most optimal
        /// routes for the CDN. This is relative to the origin path. This property is only relevant when using a single origin.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cdn.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Path to a file hosted on the origin which helps accelerate delivery of the dynamic content and calculate the most optimal routes for the CDN. This is relative to the origin path. This property is only relevant when using a single origin.",
        SerializedName = @"probePath",
        PossibleTypes = new [] { typeof(string) })]
        string ProbePath { get; set; }
        /// <summary>Provisioning status of the endpoint.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cdn.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Provisioning status of the endpoint.",
        SerializedName = @"provisioningState",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Cdn.Support.EndpointProvisioningState) })]
        Microsoft.Azure.PowerShell.Cmdlets.Cdn.Support.EndpointProvisioningState? ProvisioningState { get;  }
        /// <summary>
        /// Defines how CDN caches requests that include query strings. You can ignore any query strings when caching, bypass caching
        /// to prevent requests that contain query strings from being cached, or cache every request with a unique URL.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cdn.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Defines how CDN caches requests that include query strings. You can ignore any query strings when caching, bypass caching to prevent requests that contain query strings from being cached, or cache every request with a unique URL.",
        SerializedName = @"queryStringCachingBehavior",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Cdn.Support.QueryStringCachingBehavior) })]
        Microsoft.Azure.PowerShell.Cmdlets.Cdn.Support.QueryStringCachingBehavior? QueryStringCachingBehavior { get; set; }
        /// <summary>Resource status of the endpoint.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cdn.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Resource status of the endpoint.",
        SerializedName = @"resourceState",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Cdn.Support.EndpointResourceState) })]
        Microsoft.Azure.PowerShell.Cmdlets.Cdn.Support.EndpointResourceState? ResourceState { get;  }
        /// <summary>List of keys used to validate the signed URL hashes.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cdn.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"List of keys used to validate the signed URL hashes.",
        SerializedName = @"urlSigningKeys",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20230501.IUrlSigningKey) })]
        Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20230501.IUrlSigningKey[] UrlSigningKey { get; set; }
        /// <summary>Resource ID.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cdn.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Resource ID.",
        SerializedName = @"id",
        PossibleTypes = new [] { typeof(string) })]
        string WebApplicationFirewallPolicyLinkId { get; set; }

    }
    /// CDN endpoint is the entity within a CDN profile containing configuration information such as origin, protocol, content
    /// caching and delivery behavior. The CDN endpoint uses the URL format <endpointname>.azureedge.net.
    internal partial interface IEndpointInternal :
        Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20230501.ITrackedResourceInternal
    {
        /// <summary>
        /// List of content types on which compression applies. The value should be a valid MIME type.
        /// </summary>
        string[] ContentTypesToCompress { get; set; }
        /// <summary>The custom domains under the endpoint.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20230501.IDeepCreatedCustomDomain[] CustomDomain { get; set; }
        /// <summary>A reference to the origin group.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20230501.IResourceReference DefaultOriginGroup { get; set; }
        /// <summary>Resource ID.</summary>
        string DefaultOriginGroupId { get; set; }
        /// <summary>A policy that specifies the delivery rules to be used for an endpoint.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20230501.IEndpointPropertiesUpdateParametersDeliveryPolicy DeliveryPolicy { get; set; }
        /// <summary>User-friendly description of the policy.</summary>
        string DeliveryPolicyDescription { get; set; }
        /// <summary>A list of the delivery rules.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20230501.IDeliveryRule[] DeliveryPolicyRule { get; set; }
        /// <summary>
        /// List of rules defining the user's geo access within a CDN endpoint. Each geo filter defines an access rule to a specified
        /// path or content, e.g. block APAC for path /pictures/
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20230501.IGeoFilter[] GeoFilter { get; set; }
        /// <summary>
        /// The host name of the endpoint structured as {endpointName}.{DNSZone}, e.g. contoso.azureedge.net
        /// </summary>
        string HostName { get; set; }
        /// <summary>
        /// Indicates whether content compression is enabled on CDN. Default value is false. If compression is enabled, content will
        /// be served as compressed if user requests for a compressed version. Content won't be compressed on CDN when requested content
        /// is smaller than 1 byte or larger than 1 MB.
        /// </summary>
        bool? IsCompressionEnabled { get; set; }
        /// <summary>
        /// Indicates whether HTTP traffic is allowed on the endpoint. Default value is true. At least one protocol (HTTP or HTTPS)
        /// must be allowed.
        /// </summary>
        bool? IsHttpAllowed { get; set; }
        /// <summary>
        /// Indicates whether HTTPS traffic is allowed on the endpoint. Default value is true. At least one protocol (HTTP or HTTPS)
        /// must be allowed.
        /// </summary>
        bool? IsHttpsAllowed { get; set; }
        /// <summary>
        /// Specifies what scenario the customer wants this CDN endpoint to optimize for, e.g. Download, Media services. With this
        /// information, CDN can apply scenario driven optimization.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Cdn.Support.OptimizationType? OptimizationType { get; set; }
        /// <summary>The source of the content being delivered via CDN.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20230501.IDeepCreatedOrigin[] Origin { get; set; }
        /// <summary>
        /// The origin groups comprising of origins that are used for load balancing the traffic based on availability.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20230501.IDeepCreatedOriginGroup[] OriginGroup { get; set; }
        /// <summary>
        /// The host header value sent to the origin with each request. This property at Endpoint is only allowed when endpoint uses
        /// single origin and can be overridden by the same property specified at origin.If you leave this blank, the request hostname
        /// determines this value. Azure CDN origins, such as Web Apps, Blob Storage, and Cloud Services require this host header
        /// value to match the origin hostname by default.
        /// </summary>
        string OriginHostHeader { get; set; }
        /// <summary>
        /// A directory path on the origin that CDN can use to retrieve content from, e.g. contoso.cloudapp.net/originpath.
        /// </summary>
        string OriginPath { get; set; }
        /// <summary>
        /// Path to a file hosted on the origin which helps accelerate delivery of the dynamic content and calculate the most optimal
        /// routes for the CDN. This is relative to the origin path. This property is only relevant when using a single origin.
        /// </summary>
        string ProbePath { get; set; }
        /// <summary>The JSON object that contains the properties required to create an endpoint.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20230501.IEndpointProperties Property { get; set; }
        /// <summary>Provisioning status of the endpoint.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Cdn.Support.EndpointProvisioningState? ProvisioningState { get; set; }
        /// <summary>
        /// Defines how CDN caches requests that include query strings. You can ignore any query strings when caching, bypass caching
        /// to prevent requests that contain query strings from being cached, or cache every request with a unique URL.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Cdn.Support.QueryStringCachingBehavior? QueryStringCachingBehavior { get; set; }
        /// <summary>Resource status of the endpoint.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Cdn.Support.EndpointResourceState? ResourceState { get; set; }
        /// <summary>List of keys used to validate the signed URL hashes.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20230501.IUrlSigningKey[] UrlSigningKey { get; set; }
        /// <summary>Defines the Web Application Firewall policy for the endpoint (if applicable)</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20230501.IEndpointPropertiesUpdateParametersWebApplicationFirewallPolicyLink WebApplicationFirewallPolicyLink { get; set; }
        /// <summary>Resource ID.</summary>
        string WebApplicationFirewallPolicyLinkId { get; set; }

    }
}