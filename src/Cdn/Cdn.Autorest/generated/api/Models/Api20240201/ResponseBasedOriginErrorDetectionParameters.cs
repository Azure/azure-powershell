// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20240201
{
    using static Microsoft.Azure.PowerShell.Cmdlets.Cdn.Runtime.Extensions;

    /// <summary>
    /// The JSON object that contains the properties to determine origin health using real requests/responses.
    /// </summary>
    public partial class ResponseBasedOriginErrorDetectionParameters :
        Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20240201.IResponseBasedOriginErrorDetectionParameters,
        Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20240201.IResponseBasedOriginErrorDetectionParametersInternal
    {

        /// <summary>Backing field for <see cref="HttpErrorRange" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20240201.IHttpErrorRangeParameters[] _httpErrorRange;

        /// <summary>
        /// The list of Http status code ranges that are considered as server errors for origin and it is marked as unhealthy.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cdn.Origin(Microsoft.Azure.PowerShell.Cmdlets.Cdn.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20240201.IHttpErrorRangeParameters[] HttpErrorRange { get => this._httpErrorRange; set => this._httpErrorRange = value; }

        /// <summary>Backing field for <see cref="ResponseBasedDetectedErrorType" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Cdn.Support.ResponseBasedDetectedErrorTypes? _responseBasedDetectedErrorType;

        /// <summary>
        /// Type of response errors for real user requests for which origin will be deemed unhealthy
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cdn.Origin(Microsoft.Azure.PowerShell.Cmdlets.Cdn.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.Cdn.Support.ResponseBasedDetectedErrorTypes? ResponseBasedDetectedErrorType { get => this._responseBasedDetectedErrorType; set => this._responseBasedDetectedErrorType = value; }

        /// <summary>
        /// Backing field for <see cref="ResponseBasedFailoverThresholdPercentage" /> property.
        /// </summary>
        private int? _responseBasedFailoverThresholdPercentage;

        /// <summary>The percentage of failed requests in the sample where failover should trigger.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cdn.Origin(Microsoft.Azure.PowerShell.Cmdlets.Cdn.PropertyOrigin.Owned)]
        public int? ResponseBasedFailoverThresholdPercentage { get => this._responseBasedFailoverThresholdPercentage; set => this._responseBasedFailoverThresholdPercentage = value; }

        /// <summary>
        /// Creates an new <see cref="ResponseBasedOriginErrorDetectionParameters" /> instance.
        /// </summary>
        public ResponseBasedOriginErrorDetectionParameters()
        {

        }
    }
    /// The JSON object that contains the properties to determine origin health using real requests/responses.
    public partial interface IResponseBasedOriginErrorDetectionParameters :
        Microsoft.Azure.PowerShell.Cmdlets.Cdn.Runtime.IJsonSerializable
    {
        /// <summary>
        /// The list of Http status code ranges that are considered as server errors for origin and it is marked as unhealthy.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cdn.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The list of Http status code ranges that are considered as server errors for origin and it is marked as unhealthy.",
        SerializedName = @"httpErrorRanges",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20240201.IHttpErrorRangeParameters) })]
        Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20240201.IHttpErrorRangeParameters[] HttpErrorRange { get; set; }
        /// <summary>
        /// Type of response errors for real user requests for which origin will be deemed unhealthy
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cdn.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Type of response errors for real user requests for which origin will be deemed unhealthy",
        SerializedName = @"responseBasedDetectedErrorTypes",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Cdn.Support.ResponseBasedDetectedErrorTypes) })]
        Microsoft.Azure.PowerShell.Cmdlets.Cdn.Support.ResponseBasedDetectedErrorTypes? ResponseBasedDetectedErrorType { get; set; }
        /// <summary>The percentage of failed requests in the sample where failover should trigger.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cdn.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The percentage of failed requests in the sample where failover should trigger.",
        SerializedName = @"responseBasedFailoverThresholdPercentage",
        PossibleTypes = new [] { typeof(int) })]
        int? ResponseBasedFailoverThresholdPercentage { get; set; }

    }
    /// The JSON object that contains the properties to determine origin health using real requests/responses.
    internal partial interface IResponseBasedOriginErrorDetectionParametersInternal

    {
        /// <summary>
        /// The list of Http status code ranges that are considered as server errors for origin and it is marked as unhealthy.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20240201.IHttpErrorRangeParameters[] HttpErrorRange { get; set; }
        /// <summary>
        /// Type of response errors for real user requests for which origin will be deemed unhealthy
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Cdn.Support.ResponseBasedDetectedErrorTypes? ResponseBasedDetectedErrorType { get; set; }
        /// <summary>The percentage of failed requests in the sample where failover should trigger.</summary>
        int? ResponseBasedFailoverThresholdPercentage { get; set; }

    }
}