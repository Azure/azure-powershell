// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Cdn.Support
{

    /// <summary>The name of the condition for the delivery rule.</summary>
    [System.ComponentModel.TypeConverter(typeof(Microsoft.Azure.PowerShell.Cmdlets.Cdn.Support.MatchVariableTypeConverter))]
    public partial struct MatchVariable :
        System.Management.Automation.IArgumentCompleter
    {

        /// <summary>
        /// Implementations of this function are called by PowerShell to complete arguments.
        /// </summary>
        /// <param name="commandName">The name of the command that needs argument completion.</param>
        /// <param name="parameterName">The name of the parameter that needs argument completion.</param>
        /// <param name="wordToComplete">The (possibly empty) word being completed.</param>
        /// <param name="commandAst">The command ast in case it is needed for completion.</param>
        /// <param name="fakeBoundParameters">This parameter is similar to $PSBoundParameters, except that sometimes PowerShell cannot
        /// or will not attempt to evaluate an argument, in which case you may need to use commandAst.</param>
        /// <returns>
        /// A collection of completion results, most like with ResultType set to ParameterValue.
        /// </returns>
        public global::System.Collections.Generic.IEnumerable<global::System.Management.Automation.CompletionResult> CompleteArgument(global::System.String commandName, global::System.String parameterName, global::System.String wordToComplete, global::System.Management.Automation.Language.CommandAst commandAst, global::System.Collections.IDictionary fakeBoundParameters)
        {
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "RemoteAddress".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'RemoteAddress'", "RemoteAddress", global::System.Management.Automation.CompletionResultType.ParameterValue, "RemoteAddress");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "RequestMethod".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'RequestMethod'", "RequestMethod", global::System.Management.Automation.CompletionResultType.ParameterValue, "RequestMethod");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "QueryString".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'QueryString'", "QueryString", global::System.Management.Automation.CompletionResultType.ParameterValue, "QueryString");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "PostArgs".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'PostArgs'", "PostArgs", global::System.Management.Automation.CompletionResultType.ParameterValue, "PostArgs");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "RequestUri".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'RequestUri'", "RequestUri", global::System.Management.Automation.CompletionResultType.ParameterValue, "RequestUri");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "RequestHeader".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'RequestHeader'", "RequestHeader", global::System.Management.Automation.CompletionResultType.ParameterValue, "RequestHeader");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "RequestBody".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'RequestBody'", "RequestBody", global::System.Management.Automation.CompletionResultType.ParameterValue, "RequestBody");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "RequestScheme".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'RequestScheme'", "RequestScheme", global::System.Management.Automation.CompletionResultType.ParameterValue, "RequestScheme");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "UrlPath".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'UrlPath'", "UrlPath", global::System.Management.Automation.CompletionResultType.ParameterValue, "UrlPath");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "UrlFileExtension".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'UrlFileExtension'", "UrlFileExtension", global::System.Management.Automation.CompletionResultType.ParameterValue, "UrlFileExtension");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "UrlFileName".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'UrlFileName'", "UrlFileName", global::System.Management.Automation.CompletionResultType.ParameterValue, "UrlFileName");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "HttpVersion".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'HttpVersion'", "HttpVersion", global::System.Management.Automation.CompletionResultType.ParameterValue, "HttpVersion");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "Cookies".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'Cookies'", "Cookies", global::System.Management.Automation.CompletionResultType.ParameterValue, "Cookies");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "IsDevice".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'IsDevice'", "IsDevice", global::System.Management.Automation.CompletionResultType.ParameterValue, "IsDevice");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "SocketAddr".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'SocketAddr'", "SocketAddr", global::System.Management.Automation.CompletionResultType.ParameterValue, "SocketAddr");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "ClientPort".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'ClientPort'", "ClientPort", global::System.Management.Automation.CompletionResultType.ParameterValue, "ClientPort");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "ServerPort".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'ServerPort'", "ServerPort", global::System.Management.Automation.CompletionResultType.ParameterValue, "ServerPort");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "HostName".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'HostName'", "HostName", global::System.Management.Automation.CompletionResultType.ParameterValue, "HostName");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "SslProtocol".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'SslProtocol'", "SslProtocol", global::System.Management.Automation.CompletionResultType.ParameterValue, "SslProtocol");
            }
        }
    }
}