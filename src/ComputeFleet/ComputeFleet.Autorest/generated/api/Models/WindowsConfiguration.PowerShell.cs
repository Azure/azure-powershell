// Code generated by Microsoft (R) AutoRest Code Generator (autorest: 3.10.3, generator: @autorest/powershell@3.0.512)
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models
{
    using Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Runtime.PowerShell;

    /// <summary>Specifies Windows operating system settings on the virtual machine.</summary>
    [System.ComponentModel.TypeConverter(typeof(WindowsConfigurationTypeConverter))]
    public partial class WindowsConfiguration
    {

        /// <summary>
        /// <c>AfterDeserializeDictionary</c> will be called after the deserialization has finished, allowing customization of the
        /// object before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>

        partial void AfterDeserializeDictionary(global::System.Collections.IDictionary content);

        /// <summary>
        /// <c>AfterDeserializePSObject</c> will be called after the deserialization has finished, allowing customization of the object
        /// before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>

        partial void AfterDeserializePSObject(global::System.Management.Automation.PSObject content);

        /// <summary>
        /// <c>BeforeDeserializeDictionary</c> will be called before the deserialization has commenced, allowing complete customization
        /// of the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <paramref name="returnNow" /> output
        /// parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeDeserializeDictionary(global::System.Collections.IDictionary content, ref bool returnNow);

        /// <summary>
        /// <c>BeforeDeserializePSObject</c> will be called before the deserialization has commenced, allowing complete customization
        /// of the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <paramref name="returnNow" /> output
        /// parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeDeserializePSObject(global::System.Management.Automation.PSObject content, ref bool returnNow);

        /// <summary>
        /// Deserializes a <see cref="global::System.Collections.IDictionary" /> into an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.WindowsConfiguration"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        /// <returns>an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.IWindowsConfiguration" />.</returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.IWindowsConfiguration DeserializeFromDictionary(global::System.Collections.IDictionary content)
        {
            return new WindowsConfiguration(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Management.Automation.PSObject" /> into an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.WindowsConfiguration"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        /// <returns>an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.IWindowsConfiguration" />.</returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.IWindowsConfiguration DeserializeFromPSObject(global::System.Management.Automation.PSObject content)
        {
            return new WindowsConfiguration(content);
        }

        /// <summary>
        /// Creates a new instance of <see cref="WindowsConfiguration" />, deserializing the content from a json string.
        /// </summary>
        /// <param name="jsonText">a string containing a JSON serialized instance of this model.</param>
        /// <returns>an instance of the <see cref="WindowsConfiguration" /> model class.</returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.IWindowsConfiguration FromJsonString(string jsonText) => FromJson(Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Runtime.Json.JsonNode.Parse(jsonText));

        /// <summary>Serializes this instance to a json string.</summary>

        /// <returns>a <see cref="System.String" /> containing this model serialized to JSON text.</returns>
        public string ToJsonString() => ToJson(null, Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Runtime.SerializationMode.IncludeAll)?.ToString();

        /// <summary>
        /// Deserializes a <see cref="global::System.Collections.IDictionary" /> into a new instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.WindowsConfiguration"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        internal WindowsConfiguration(global::System.Collections.IDictionary content)
        {
            bool returnNow = false;
            BeforeDeserializeDictionary(content, ref returnNow);
            if (returnNow)
            {
                return;
            }
            // actually deserialize
            if (content.Contains("PatchSettings"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.IWindowsConfigurationInternal)this).PatchSettings = (Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.IPatchSettings) content.GetValueForProperty("PatchSettings",((Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.IWindowsConfigurationInternal)this).PatchSettings, Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.PatchSettingsTypeConverter.ConvertFrom);
            }
            if (content.Contains("WinRm"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.IWindowsConfigurationInternal)this).WinRm = (Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.IWinRmConfiguration) content.GetValueForProperty("WinRm",((Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.IWindowsConfigurationInternal)this).WinRm, Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.WinRmConfigurationTypeConverter.ConvertFrom);
            }
            if (content.Contains("ProvisionVMAgent"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.IWindowsConfigurationInternal)this).ProvisionVMAgent = (bool?) content.GetValueForProperty("ProvisionVMAgent",((Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.IWindowsConfigurationInternal)this).ProvisionVMAgent, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("EnableAutomaticUpdates"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.IWindowsConfigurationInternal)this).EnableAutomaticUpdates = (bool?) content.GetValueForProperty("EnableAutomaticUpdates",((Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.IWindowsConfigurationInternal)this).EnableAutomaticUpdates, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("TimeZone"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.IWindowsConfigurationInternal)this).TimeZone = (string) content.GetValueForProperty("TimeZone",((Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.IWindowsConfigurationInternal)this).TimeZone, global::System.Convert.ToString);
            }
            if (content.Contains("AdditionalUnattendContent"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.IWindowsConfigurationInternal)this).AdditionalUnattendContent = (Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.IAdditionalUnattendContent[]) content.GetValueForProperty("AdditionalUnattendContent",((Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.IWindowsConfigurationInternal)this).AdditionalUnattendContent, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.IAdditionalUnattendContent>(__y, Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.AdditionalUnattendContentTypeConverter.ConvertFrom));
            }
            if (content.Contains("EnableVMAgentPlatformUpdates"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.IWindowsConfigurationInternal)this).EnableVMAgentPlatformUpdates = (bool?) content.GetValueForProperty("EnableVMAgentPlatformUpdates",((Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.IWindowsConfigurationInternal)this).EnableVMAgentPlatformUpdates, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("PatchSettingAutomaticByPlatformSettings"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.IWindowsConfigurationInternal)this).PatchSettingAutomaticByPlatformSettings = (Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.IWindowsVMGuestPatchAutomaticByPlatformSettings) content.GetValueForProperty("PatchSettingAutomaticByPlatformSettings",((Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.IWindowsConfigurationInternal)this).PatchSettingAutomaticByPlatformSettings, Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.WindowsVMGuestPatchAutomaticByPlatformSettingsTypeConverter.ConvertFrom);
            }
            if (content.Contains("PatchSettingPatchMode"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.IWindowsConfigurationInternal)this).PatchSettingPatchMode = (Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Support.WindowsVMGuestPatchMode?) content.GetValueForProperty("PatchSettingPatchMode",((Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.IWindowsConfigurationInternal)this).PatchSettingPatchMode, Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Support.WindowsVMGuestPatchMode.CreateFrom);
            }
            if (content.Contains("PatchSettingEnableHotpatching"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.IWindowsConfigurationInternal)this).PatchSettingEnableHotpatching = (bool?) content.GetValueForProperty("PatchSettingEnableHotpatching",((Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.IWindowsConfigurationInternal)this).PatchSettingEnableHotpatching, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("PatchSettingAssessmentMode"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.IWindowsConfigurationInternal)this).PatchSettingAssessmentMode = (Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Support.WindowsPatchAssessmentMode?) content.GetValueForProperty("PatchSettingAssessmentMode",((Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.IWindowsConfigurationInternal)this).PatchSettingAssessmentMode, Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Support.WindowsPatchAssessmentMode.CreateFrom);
            }
            if (content.Contains("WinRmListeners"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.IWindowsConfigurationInternal)this).WinRmListeners = (Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.IWinRmListener[]) content.GetValueForProperty("WinRmListeners",((Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.IWindowsConfigurationInternal)this).WinRmListeners, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.IWinRmListener>(__y, Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.WinRmListenerTypeConverter.ConvertFrom));
            }
            if (content.Contains("AutomaticByPlatformSettingRebootSetting"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.IWindowsConfigurationInternal)this).AutomaticByPlatformSettingRebootSetting = (Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Support.WindowsVMGuestPatchAutomaticByPlatformRebootSetting?) content.GetValueForProperty("AutomaticByPlatformSettingRebootSetting",((Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.IWindowsConfigurationInternal)this).AutomaticByPlatformSettingRebootSetting, Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Support.WindowsVMGuestPatchAutomaticByPlatformRebootSetting.CreateFrom);
            }
            if (content.Contains("AutomaticByPlatformSettingBypassPlatformSafetyChecksOnUserSchedule"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.IWindowsConfigurationInternal)this).AutomaticByPlatformSettingBypassPlatformSafetyChecksOnUserSchedule = (bool?) content.GetValueForProperty("AutomaticByPlatformSettingBypassPlatformSafetyChecksOnUserSchedule",((Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.IWindowsConfigurationInternal)this).AutomaticByPlatformSettingBypassPlatformSafetyChecksOnUserSchedule, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            AfterDeserializeDictionary(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Management.Automation.PSObject" /> into a new instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.WindowsConfiguration"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        internal WindowsConfiguration(global::System.Management.Automation.PSObject content)
        {
            bool returnNow = false;
            BeforeDeserializePSObject(content, ref returnNow);
            if (returnNow)
            {
                return;
            }
            // actually deserialize
            if (content.Contains("PatchSettings"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.IWindowsConfigurationInternal)this).PatchSettings = (Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.IPatchSettings) content.GetValueForProperty("PatchSettings",((Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.IWindowsConfigurationInternal)this).PatchSettings, Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.PatchSettingsTypeConverter.ConvertFrom);
            }
            if (content.Contains("WinRm"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.IWindowsConfigurationInternal)this).WinRm = (Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.IWinRmConfiguration) content.GetValueForProperty("WinRm",((Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.IWindowsConfigurationInternal)this).WinRm, Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.WinRmConfigurationTypeConverter.ConvertFrom);
            }
            if (content.Contains("ProvisionVMAgent"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.IWindowsConfigurationInternal)this).ProvisionVMAgent = (bool?) content.GetValueForProperty("ProvisionVMAgent",((Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.IWindowsConfigurationInternal)this).ProvisionVMAgent, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("EnableAutomaticUpdates"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.IWindowsConfigurationInternal)this).EnableAutomaticUpdates = (bool?) content.GetValueForProperty("EnableAutomaticUpdates",((Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.IWindowsConfigurationInternal)this).EnableAutomaticUpdates, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("TimeZone"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.IWindowsConfigurationInternal)this).TimeZone = (string) content.GetValueForProperty("TimeZone",((Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.IWindowsConfigurationInternal)this).TimeZone, global::System.Convert.ToString);
            }
            if (content.Contains("AdditionalUnattendContent"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.IWindowsConfigurationInternal)this).AdditionalUnattendContent = (Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.IAdditionalUnattendContent[]) content.GetValueForProperty("AdditionalUnattendContent",((Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.IWindowsConfigurationInternal)this).AdditionalUnattendContent, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.IAdditionalUnattendContent>(__y, Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.AdditionalUnattendContentTypeConverter.ConvertFrom));
            }
            if (content.Contains("EnableVMAgentPlatformUpdates"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.IWindowsConfigurationInternal)this).EnableVMAgentPlatformUpdates = (bool?) content.GetValueForProperty("EnableVMAgentPlatformUpdates",((Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.IWindowsConfigurationInternal)this).EnableVMAgentPlatformUpdates, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("PatchSettingAutomaticByPlatformSettings"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.IWindowsConfigurationInternal)this).PatchSettingAutomaticByPlatformSettings = (Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.IWindowsVMGuestPatchAutomaticByPlatformSettings) content.GetValueForProperty("PatchSettingAutomaticByPlatformSettings",((Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.IWindowsConfigurationInternal)this).PatchSettingAutomaticByPlatformSettings, Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.WindowsVMGuestPatchAutomaticByPlatformSettingsTypeConverter.ConvertFrom);
            }
            if (content.Contains("PatchSettingPatchMode"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.IWindowsConfigurationInternal)this).PatchSettingPatchMode = (Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Support.WindowsVMGuestPatchMode?) content.GetValueForProperty("PatchSettingPatchMode",((Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.IWindowsConfigurationInternal)this).PatchSettingPatchMode, Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Support.WindowsVMGuestPatchMode.CreateFrom);
            }
            if (content.Contains("PatchSettingEnableHotpatching"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.IWindowsConfigurationInternal)this).PatchSettingEnableHotpatching = (bool?) content.GetValueForProperty("PatchSettingEnableHotpatching",((Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.IWindowsConfigurationInternal)this).PatchSettingEnableHotpatching, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("PatchSettingAssessmentMode"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.IWindowsConfigurationInternal)this).PatchSettingAssessmentMode = (Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Support.WindowsPatchAssessmentMode?) content.GetValueForProperty("PatchSettingAssessmentMode",((Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.IWindowsConfigurationInternal)this).PatchSettingAssessmentMode, Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Support.WindowsPatchAssessmentMode.CreateFrom);
            }
            if (content.Contains("WinRmListeners"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.IWindowsConfigurationInternal)this).WinRmListeners = (Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.IWinRmListener[]) content.GetValueForProperty("WinRmListeners",((Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.IWindowsConfigurationInternal)this).WinRmListeners, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.IWinRmListener>(__y, Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.WinRmListenerTypeConverter.ConvertFrom));
            }
            if (content.Contains("AutomaticByPlatformSettingRebootSetting"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.IWindowsConfigurationInternal)this).AutomaticByPlatformSettingRebootSetting = (Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Support.WindowsVMGuestPatchAutomaticByPlatformRebootSetting?) content.GetValueForProperty("AutomaticByPlatformSettingRebootSetting",((Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.IWindowsConfigurationInternal)this).AutomaticByPlatformSettingRebootSetting, Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Support.WindowsVMGuestPatchAutomaticByPlatformRebootSetting.CreateFrom);
            }
            if (content.Contains("AutomaticByPlatformSettingBypassPlatformSafetyChecksOnUserSchedule"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.IWindowsConfigurationInternal)this).AutomaticByPlatformSettingBypassPlatformSafetyChecksOnUserSchedule = (bool?) content.GetValueForProperty("AutomaticByPlatformSettingBypassPlatformSafetyChecksOnUserSchedule",((Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.IWindowsConfigurationInternal)this).AutomaticByPlatformSettingBypassPlatformSafetyChecksOnUserSchedule, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            AfterDeserializePSObject(content);
        }
    }
    /// Specifies Windows operating system settings on the virtual machine.
    [System.ComponentModel.TypeConverter(typeof(WindowsConfigurationTypeConverter))]
    public partial interface IWindowsConfiguration

    {

    }
}