// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models
{
    using Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Runtime.PowerShell;

    /// <summary>Details of the Compute Fleet.</summary>
    [System.ComponentModel.TypeConverter(typeof(FleetPropertiesTypeConverter))]
    public partial class FleetProperties
    {

        /// <summary>
        /// <c>AfterDeserializeDictionary</c> will be called after the deserialization has finished, allowing customization of the
        /// object before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>

        partial void AfterDeserializeDictionary(global::System.Collections.IDictionary content);

        /// <summary>
        /// <c>AfterDeserializePSObject</c> will be called after the deserialization has finished, allowing customization of the object
        /// before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>

        partial void AfterDeserializePSObject(global::System.Management.Automation.PSObject content);

        /// <summary>
        /// <c>BeforeDeserializeDictionary</c> will be called before the deserialization has commenced, allowing complete customization
        /// of the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <paramref name="returnNow" /> output
        /// parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeDeserializeDictionary(global::System.Collections.IDictionary content, ref bool returnNow);

        /// <summary>
        /// <c>BeforeDeserializePSObject</c> will be called before the deserialization has commenced, allowing complete customization
        /// of the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <paramref name="returnNow" /> output
        /// parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeDeserializePSObject(global::System.Management.Automation.PSObject content, ref bool returnNow);

        /// <summary>
        /// <c>OverrideToString</c> will be called if it is implemented. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="stringResult">/// instance serialized to a string, normally it is a Json</param>
        /// <param name="returnNow">/// set returnNow to true if you provide a customized OverrideToString function</param>

        partial void OverrideToString(ref string stringResult, ref bool returnNow);

        /// <summary>
        /// Deserializes a <see cref="global::System.Collections.IDictionary" /> into an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.FleetProperties"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        /// <returns>
        /// an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.IFleetProperties" />.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.IFleetProperties DeserializeFromDictionary(global::System.Collections.IDictionary content)
        {
            return new FleetProperties(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Management.Automation.PSObject" /> into an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.FleetProperties"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        /// <returns>
        /// an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.IFleetProperties" />.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.IFleetProperties DeserializeFromPSObject(global::System.Management.Automation.PSObject content)
        {
            return new FleetProperties(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Collections.IDictionary" /> into a new instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.FleetProperties"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        internal FleetProperties(global::System.Collections.IDictionary content)
        {
            bool returnNow = false;
            BeforeDeserializeDictionary(content, ref returnNow);
            if (returnNow)
            {
                return;
            }
            // actually deserialize
            if (content.Contains("SpotPriorityProfile"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.IFleetPropertiesInternal)this).SpotPriorityProfile = (Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.ISpotPriorityProfile) content.GetValueForProperty("SpotPriorityProfile",((Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.IFleetPropertiesInternal)this).SpotPriorityProfile, Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.SpotPriorityProfileTypeConverter.ConvertFrom);
            }
            if (content.Contains("RegularPriorityProfile"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.IFleetPropertiesInternal)this).RegularPriorityProfile = (Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.IRegularPriorityProfile) content.GetValueForProperty("RegularPriorityProfile",((Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.IFleetPropertiesInternal)this).RegularPriorityProfile, Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.RegularPriorityProfileTypeConverter.ConvertFrom);
            }
            if (content.Contains("VMAttribute"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.IFleetPropertiesInternal)this).VMAttribute = (Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.IVMAttributes) content.GetValueForProperty("VMAttribute",((Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.IFleetPropertiesInternal)this).VMAttribute, Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.VMAttributesTypeConverter.ConvertFrom);
            }
            if (content.Contains("AdditionalLocationsProfile"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.IFleetPropertiesInternal)this).AdditionalLocationsProfile = (Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.IAdditionalLocationsProfile) content.GetValueForProperty("AdditionalLocationsProfile",((Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.IFleetPropertiesInternal)this).AdditionalLocationsProfile, Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.AdditionalLocationsProfileTypeConverter.ConvertFrom);
            }
            if (content.Contains("ComputeProfile"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.IFleetPropertiesInternal)this).ComputeProfile = (Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.IComputeProfile) content.GetValueForProperty("ComputeProfile",((Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.IFleetPropertiesInternal)this).ComputeProfile, Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.ComputeProfileTypeConverter.ConvertFrom);
            }
            if (content.Contains("ProvisioningState"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.IFleetPropertiesInternal)this).ProvisioningState = (string) content.GetValueForProperty("ProvisioningState",((Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.IFleetPropertiesInternal)this).ProvisioningState, global::System.Convert.ToString);
            }
            if (content.Contains("VMSizesProfile"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.IFleetPropertiesInternal)this).VMSizesProfile = (System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.IVMSizeProfile>) content.GetValueForProperty("VMSizesProfile",((Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.IFleetPropertiesInternal)this).VMSizesProfile, __y => TypeConverterExtensions.SelectToList<Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.IVMSizeProfile>(__y, Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.VMSizeProfileTypeConverter.ConvertFrom));
            }
            if (content.Contains("TimeCreated"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.IFleetPropertiesInternal)this).TimeCreated = (global::System.DateTime?) content.GetValueForProperty("TimeCreated",((Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.IFleetPropertiesInternal)this).TimeCreated, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            if (content.Contains("UniqueId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.IFleetPropertiesInternal)this).UniqueId = (string) content.GetValueForProperty("UniqueId",((Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.IFleetPropertiesInternal)this).UniqueId, global::System.Convert.ToString);
            }
            if (content.Contains("SpotPriorityProfileCapacity"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.IFleetPropertiesInternal)this).SpotPriorityProfileCapacity = (int?) content.GetValueForProperty("SpotPriorityProfileCapacity",((Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.IFleetPropertiesInternal)this).SpotPriorityProfileCapacity, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("SpotPriorityProfileMinCapacity"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.IFleetPropertiesInternal)this).SpotPriorityProfileMinCapacity = (int?) content.GetValueForProperty("SpotPriorityProfileMinCapacity",((Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.IFleetPropertiesInternal)this).SpotPriorityProfileMinCapacity, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("SpotPriorityProfileEvictionPolicy"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.IFleetPropertiesInternal)this).SpotPriorityProfileEvictionPolicy = (string) content.GetValueForProperty("SpotPriorityProfileEvictionPolicy",((Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.IFleetPropertiesInternal)this).SpotPriorityProfileEvictionPolicy, global::System.Convert.ToString);
            }
            if (content.Contains("RegularPriorityProfileCapacity"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.IFleetPropertiesInternal)this).RegularPriorityProfileCapacity = (int?) content.GetValueForProperty("RegularPriorityProfileCapacity",((Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.IFleetPropertiesInternal)this).RegularPriorityProfileCapacity, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("RegularPriorityProfileMinCapacity"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.IFleetPropertiesInternal)this).RegularPriorityProfileMinCapacity = (int?) content.GetValueForProperty("RegularPriorityProfileMinCapacity",((Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.IFleetPropertiesInternal)this).RegularPriorityProfileMinCapacity, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("AdditionalLocationProfile"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.IFleetPropertiesInternal)this).AdditionalLocationProfile = (System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.ILocationProfile>) content.GetValueForProperty("AdditionalLocationProfile",((Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.IFleetPropertiesInternal)this).AdditionalLocationProfile, __y => TypeConverterExtensions.SelectToList<Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.ILocationProfile>(__y, Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.LocationProfileTypeConverter.ConvertFrom));
            }
            if (content.Contains("SpotPriorityProfileMaxPricePerVM"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.IFleetPropertiesInternal)this).SpotPriorityProfileMaxPricePerVM = (float?) content.GetValueForProperty("SpotPriorityProfileMaxPricePerVM",((Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.IFleetPropertiesInternal)this).SpotPriorityProfileMaxPricePerVM, (__y)=> (float) global::System.Convert.ChangeType(__y, typeof(float)));
            }
            if (content.Contains("SpotPriorityProfileAllocationStrategy"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.IFleetPropertiesInternal)this).SpotPriorityProfileAllocationStrategy = (string) content.GetValueForProperty("SpotPriorityProfileAllocationStrategy",((Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.IFleetPropertiesInternal)this).SpotPriorityProfileAllocationStrategy, global::System.Convert.ToString);
            }
            if (content.Contains("SpotPriorityProfileMaintain"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.IFleetPropertiesInternal)this).SpotPriorityProfileMaintain = (bool?) content.GetValueForProperty("SpotPriorityProfileMaintain",((Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.IFleetPropertiesInternal)this).SpotPriorityProfileMaintain, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("RegularPriorityProfileAllocationStrategy"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.IFleetPropertiesInternal)this).RegularPriorityProfileAllocationStrategy = (string) content.GetValueForProperty("RegularPriorityProfileAllocationStrategy",((Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.IFleetPropertiesInternal)this).RegularPriorityProfileAllocationStrategy, global::System.Convert.ToString);
            }
            if (content.Contains("VMAttributeVcpuCount"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.IFleetPropertiesInternal)this).VMAttributeVcpuCount = (Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.IVMAttributeMinMaxInteger) content.GetValueForProperty("VMAttributeVcpuCount",((Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.IFleetPropertiesInternal)this).VMAttributeVcpuCount, Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.VMAttributeMinMaxIntegerTypeConverter.ConvertFrom);
            }
            if (content.Contains("VMAttributeMemoryInGiB"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.IFleetPropertiesInternal)this).VMAttributeMemoryInGiB = (Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.IVMAttributeMinMaxDouble) content.GetValueForProperty("VMAttributeMemoryInGiB",((Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.IFleetPropertiesInternal)this).VMAttributeMemoryInGiB, Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.VMAttributeMinMaxDoubleTypeConverter.ConvertFrom);
            }
            if (content.Contains("VMAttributeMemoryInGiBperVcpu"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.IFleetPropertiesInternal)this).VMAttributeMemoryInGiBperVcpu = (Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.IVMAttributeMinMaxDouble) content.GetValueForProperty("VMAttributeMemoryInGiBperVcpu",((Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.IFleetPropertiesInternal)this).VMAttributeMemoryInGiBperVcpu, Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.VMAttributeMinMaxDoubleTypeConverter.ConvertFrom);
            }
            if (content.Contains("VMAttributeLocalStorageInGiB"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.IFleetPropertiesInternal)this).VMAttributeLocalStorageInGiB = (Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.IVMAttributeMinMaxDouble) content.GetValueForProperty("VMAttributeLocalStorageInGiB",((Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.IFleetPropertiesInternal)this).VMAttributeLocalStorageInGiB, Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.VMAttributeMinMaxDoubleTypeConverter.ConvertFrom);
            }
            if (content.Contains("VMAttributeDataDiskCount"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.IFleetPropertiesInternal)this).VMAttributeDataDiskCount = (Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.IVMAttributeMinMaxInteger) content.GetValueForProperty("VMAttributeDataDiskCount",((Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.IFleetPropertiesInternal)this).VMAttributeDataDiskCount, Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.VMAttributeMinMaxIntegerTypeConverter.ConvertFrom);
            }
            if (content.Contains("VMAttributeNetworkInterfaceCount"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.IFleetPropertiesInternal)this).VMAttributeNetworkInterfaceCount = (Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.IVMAttributeMinMaxInteger) content.GetValueForProperty("VMAttributeNetworkInterfaceCount",((Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.IFleetPropertiesInternal)this).VMAttributeNetworkInterfaceCount, Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.VMAttributeMinMaxIntegerTypeConverter.ConvertFrom);
            }
            if (content.Contains("VMAttributeNetworkBandwidthInMbps"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.IFleetPropertiesInternal)this).VMAttributeNetworkBandwidthInMbps = (Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.IVMAttributeMinMaxDouble) content.GetValueForProperty("VMAttributeNetworkBandwidthInMbps",((Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.IFleetPropertiesInternal)this).VMAttributeNetworkBandwidthInMbps, Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.VMAttributeMinMaxDoubleTypeConverter.ConvertFrom);
            }
            if (content.Contains("VMAttributeRdmaNetworkInterfaceCount"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.IFleetPropertiesInternal)this).VMAttributeRdmaNetworkInterfaceCount = (Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.IVMAttributeMinMaxInteger) content.GetValueForProperty("VMAttributeRdmaNetworkInterfaceCount",((Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.IFleetPropertiesInternal)this).VMAttributeRdmaNetworkInterfaceCount, Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.VMAttributeMinMaxIntegerTypeConverter.ConvertFrom);
            }
            if (content.Contains("VMAttributeAcceleratorCount"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.IFleetPropertiesInternal)this).VMAttributeAcceleratorCount = (Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.IVMAttributeMinMaxInteger) content.GetValueForProperty("VMAttributeAcceleratorCount",((Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.IFleetPropertiesInternal)this).VMAttributeAcceleratorCount, Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.VMAttributeMinMaxIntegerTypeConverter.ConvertFrom);
            }
            if (content.Contains("VMAttributeLocalStorageSupport"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.IFleetPropertiesInternal)this).VMAttributeLocalStorageSupport = (string) content.GetValueForProperty("VMAttributeLocalStorageSupport",((Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.IFleetPropertiesInternal)this).VMAttributeLocalStorageSupport, global::System.Convert.ToString);
            }
            if (content.Contains("VMAttributeLocalStorageDiskType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.IFleetPropertiesInternal)this).VMAttributeLocalStorageDiskType = (System.Collections.Generic.List<string>) content.GetValueForProperty("VMAttributeLocalStorageDiskType",((Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.IFleetPropertiesInternal)this).VMAttributeLocalStorageDiskType, __y => TypeConverterExtensions.SelectToList<string>(__y, global::System.Convert.ToString));
            }
            if (content.Contains("VMAttributeRdmaSupport"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.IFleetPropertiesInternal)this).VMAttributeRdmaSupport = (string) content.GetValueForProperty("VMAttributeRdmaSupport",((Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.IFleetPropertiesInternal)this).VMAttributeRdmaSupport, global::System.Convert.ToString);
            }
            if (content.Contains("VMAttributeAcceleratorSupport"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.IFleetPropertiesInternal)this).VMAttributeAcceleratorSupport = (string) content.GetValueForProperty("VMAttributeAcceleratorSupport",((Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.IFleetPropertiesInternal)this).VMAttributeAcceleratorSupport, global::System.Convert.ToString);
            }
            if (content.Contains("VMAttributeAcceleratorManufacturer"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.IFleetPropertiesInternal)this).VMAttributeAcceleratorManufacturer = (System.Collections.Generic.List<string>) content.GetValueForProperty("VMAttributeAcceleratorManufacturer",((Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.IFleetPropertiesInternal)this).VMAttributeAcceleratorManufacturer, __y => TypeConverterExtensions.SelectToList<string>(__y, global::System.Convert.ToString));
            }
            if (content.Contains("VMAttributeAcceleratorType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.IFleetPropertiesInternal)this).VMAttributeAcceleratorType = (System.Collections.Generic.List<string>) content.GetValueForProperty("VMAttributeAcceleratorType",((Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.IFleetPropertiesInternal)this).VMAttributeAcceleratorType, __y => TypeConverterExtensions.SelectToList<string>(__y, global::System.Convert.ToString));
            }
            if (content.Contains("VMAttributeVmcategory"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.IFleetPropertiesInternal)this).VMAttributeVmcategory = (System.Collections.Generic.List<string>) content.GetValueForProperty("VMAttributeVmcategory",((Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.IFleetPropertiesInternal)this).VMAttributeVmcategory, __y => TypeConverterExtensions.SelectToList<string>(__y, global::System.Convert.ToString));
            }
            if (content.Contains("VMAttributeArchitectureType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.IFleetPropertiesInternal)this).VMAttributeArchitectureType = (System.Collections.Generic.List<string>) content.GetValueForProperty("VMAttributeArchitectureType",((Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.IFleetPropertiesInternal)this).VMAttributeArchitectureType, __y => TypeConverterExtensions.SelectToList<string>(__y, global::System.Convert.ToString));
            }
            if (content.Contains("VMAttributeCpuManufacturer"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.IFleetPropertiesInternal)this).VMAttributeCpuManufacturer = (System.Collections.Generic.List<string>) content.GetValueForProperty("VMAttributeCpuManufacturer",((Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.IFleetPropertiesInternal)this).VMAttributeCpuManufacturer, __y => TypeConverterExtensions.SelectToList<string>(__y, global::System.Convert.ToString));
            }
            if (content.Contains("VMAttributeBurstableSupport"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.IFleetPropertiesInternal)this).VMAttributeBurstableSupport = (string) content.GetValueForProperty("VMAttributeBurstableSupport",((Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.IFleetPropertiesInternal)this).VMAttributeBurstableSupport, global::System.Convert.ToString);
            }
            if (content.Contains("VMAttributeExcludedVmsize"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.IFleetPropertiesInternal)this).VMAttributeExcludedVmsize = (System.Collections.Generic.List<string>) content.GetValueForProperty("VMAttributeExcludedVmsize",((Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.IFleetPropertiesInternal)this).VMAttributeExcludedVmsize, __y => TypeConverterExtensions.SelectToList<string>(__y, global::System.Convert.ToString));
            }
            if (content.Contains("ComputeProfileAdditionalVirtualMachineCapability"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.IFleetPropertiesInternal)this).ComputeProfileAdditionalVirtualMachineCapability = (Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.IAdditionalCapabilities) content.GetValueForProperty("ComputeProfileAdditionalVirtualMachineCapability",((Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.IFleetPropertiesInternal)this).ComputeProfileAdditionalVirtualMachineCapability, Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.AdditionalCapabilitiesTypeConverter.ConvertFrom);
            }
            if (content.Contains("ComputeProfileComputeApiVersion"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.IFleetPropertiesInternal)this).ComputeProfileComputeApiVersion = (string) content.GetValueForProperty("ComputeProfileComputeApiVersion",((Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.IFleetPropertiesInternal)this).ComputeProfileComputeApiVersion, global::System.Convert.ToString);
            }
            if (content.Contains("ComputeProfilePlatformFaultDomainCount"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.IFleetPropertiesInternal)this).ComputeProfilePlatformFaultDomainCount = (int?) content.GetValueForProperty("ComputeProfilePlatformFaultDomainCount",((Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.IFleetPropertiesInternal)this).ComputeProfilePlatformFaultDomainCount, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("ComputeProfileBaseVirtualMachineProfile"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.IFleetPropertiesInternal)this).ComputeProfileBaseVirtualMachineProfile = (Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.IBaseVirtualMachineProfile) content.GetValueForProperty("ComputeProfileBaseVirtualMachineProfile",((Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.IFleetPropertiesInternal)this).ComputeProfileBaseVirtualMachineProfile, Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.BaseVirtualMachineProfileTypeConverter.ConvertFrom);
            }
            if (content.Contains("VCpuCountMin"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.IFleetPropertiesInternal)this).VCpuCountMin = (int?) content.GetValueForProperty("VCpuCountMin",((Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.IFleetPropertiesInternal)this).VCpuCountMin, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("VCpuCountMax"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.IFleetPropertiesInternal)this).VCpuCountMax = (int?) content.GetValueForProperty("VCpuCountMax",((Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.IFleetPropertiesInternal)this).VCpuCountMax, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("MemoryInGiBMin"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.IFleetPropertiesInternal)this).MemoryInGiBMin = (double?) content.GetValueForProperty("MemoryInGiBMin",((Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.IFleetPropertiesInternal)this).MemoryInGiBMin, (__y)=> (double) global::System.Convert.ChangeType(__y, typeof(double)));
            }
            if (content.Contains("MemoryInGiBMax"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.IFleetPropertiesInternal)this).MemoryInGiBMax = (double?) content.GetValueForProperty("MemoryInGiBMax",((Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.IFleetPropertiesInternal)this).MemoryInGiBMax, (__y)=> (double) global::System.Convert.ChangeType(__y, typeof(double)));
            }
            if (content.Contains("MemoryInGiBPerVcpuMin"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.IFleetPropertiesInternal)this).MemoryInGiBPerVcpuMin = (double?) content.GetValueForProperty("MemoryInGiBPerVcpuMin",((Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.IFleetPropertiesInternal)this).MemoryInGiBPerVcpuMin, (__y)=> (double) global::System.Convert.ChangeType(__y, typeof(double)));
            }
            if (content.Contains("MemoryInGiBPerVcpuMax"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.IFleetPropertiesInternal)this).MemoryInGiBPerVcpuMax = (double?) content.GetValueForProperty("MemoryInGiBPerVcpuMax",((Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.IFleetPropertiesInternal)this).MemoryInGiBPerVcpuMax, (__y)=> (double) global::System.Convert.ChangeType(__y, typeof(double)));
            }
            if (content.Contains("LocalStorageInGiBMin"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.IFleetPropertiesInternal)this).LocalStorageInGiBMin = (double?) content.GetValueForProperty("LocalStorageInGiBMin",((Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.IFleetPropertiesInternal)this).LocalStorageInGiBMin, (__y)=> (double) global::System.Convert.ChangeType(__y, typeof(double)));
            }
            if (content.Contains("LocalStorageInGiBMax"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.IFleetPropertiesInternal)this).LocalStorageInGiBMax = (double?) content.GetValueForProperty("LocalStorageInGiBMax",((Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.IFleetPropertiesInternal)this).LocalStorageInGiBMax, (__y)=> (double) global::System.Convert.ChangeType(__y, typeof(double)));
            }
            if (content.Contains("DataDiskCountMin"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.IFleetPropertiesInternal)this).DataDiskCountMin = (int?) content.GetValueForProperty("DataDiskCountMin",((Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.IFleetPropertiesInternal)this).DataDiskCountMin, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("DataDiskCountMax"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.IFleetPropertiesInternal)this).DataDiskCountMax = (int?) content.GetValueForProperty("DataDiskCountMax",((Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.IFleetPropertiesInternal)this).DataDiskCountMax, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("NetworkInterfaceCountMin"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.IFleetPropertiesInternal)this).NetworkInterfaceCountMin = (int?) content.GetValueForProperty("NetworkInterfaceCountMin",((Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.IFleetPropertiesInternal)this).NetworkInterfaceCountMin, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("NetworkInterfaceCountMax"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.IFleetPropertiesInternal)this).NetworkInterfaceCountMax = (int?) content.GetValueForProperty("NetworkInterfaceCountMax",((Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.IFleetPropertiesInternal)this).NetworkInterfaceCountMax, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("NetworkBandwidthInMbpsMin"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.IFleetPropertiesInternal)this).NetworkBandwidthInMbpsMin = (double?) content.GetValueForProperty("NetworkBandwidthInMbpsMin",((Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.IFleetPropertiesInternal)this).NetworkBandwidthInMbpsMin, (__y)=> (double) global::System.Convert.ChangeType(__y, typeof(double)));
            }
            if (content.Contains("NetworkBandwidthInMbpsMax"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.IFleetPropertiesInternal)this).NetworkBandwidthInMbpsMax = (double?) content.GetValueForProperty("NetworkBandwidthInMbpsMax",((Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.IFleetPropertiesInternal)this).NetworkBandwidthInMbpsMax, (__y)=> (double) global::System.Convert.ChangeType(__y, typeof(double)));
            }
            if (content.Contains("RdmaNetworkInterfaceCountMin"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.IFleetPropertiesInternal)this).RdmaNetworkInterfaceCountMin = (int?) content.GetValueForProperty("RdmaNetworkInterfaceCountMin",((Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.IFleetPropertiesInternal)this).RdmaNetworkInterfaceCountMin, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("RdmaNetworkInterfaceCountMax"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.IFleetPropertiesInternal)this).RdmaNetworkInterfaceCountMax = (int?) content.GetValueForProperty("RdmaNetworkInterfaceCountMax",((Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.IFleetPropertiesInternal)this).RdmaNetworkInterfaceCountMax, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("AcceleratorCountMin"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.IFleetPropertiesInternal)this).AcceleratorCountMin = (int?) content.GetValueForProperty("AcceleratorCountMin",((Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.IFleetPropertiesInternal)this).AcceleratorCountMin, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("AcceleratorCountMax"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.IFleetPropertiesInternal)this).AcceleratorCountMax = (int?) content.GetValueForProperty("AcceleratorCountMax",((Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.IFleetPropertiesInternal)this).AcceleratorCountMax, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("AdditionalVirtualMachineCapabilityUltraSsdEnabled"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.IFleetPropertiesInternal)this).AdditionalVirtualMachineCapabilityUltraSsdEnabled = (bool?) content.GetValueForProperty("AdditionalVirtualMachineCapabilityUltraSsdEnabled",((Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.IFleetPropertiesInternal)this).AdditionalVirtualMachineCapabilityUltraSsdEnabled, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("AdditionalVirtualMachineCapabilityHibernationEnabled"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.IFleetPropertiesInternal)this).AdditionalVirtualMachineCapabilityHibernationEnabled = (bool?) content.GetValueForProperty("AdditionalVirtualMachineCapabilityHibernationEnabled",((Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.IFleetPropertiesInternal)this).AdditionalVirtualMachineCapabilityHibernationEnabled, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            AfterDeserializeDictionary(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Management.Automation.PSObject" /> into a new instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.FleetProperties"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        internal FleetProperties(global::System.Management.Automation.PSObject content)
        {
            bool returnNow = false;
            BeforeDeserializePSObject(content, ref returnNow);
            if (returnNow)
            {
                return;
            }
            // actually deserialize
            if (content.Contains("SpotPriorityProfile"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.IFleetPropertiesInternal)this).SpotPriorityProfile = (Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.ISpotPriorityProfile) content.GetValueForProperty("SpotPriorityProfile",((Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.IFleetPropertiesInternal)this).SpotPriorityProfile, Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.SpotPriorityProfileTypeConverter.ConvertFrom);
            }
            if (content.Contains("RegularPriorityProfile"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.IFleetPropertiesInternal)this).RegularPriorityProfile = (Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.IRegularPriorityProfile) content.GetValueForProperty("RegularPriorityProfile",((Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.IFleetPropertiesInternal)this).RegularPriorityProfile, Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.RegularPriorityProfileTypeConverter.ConvertFrom);
            }
            if (content.Contains("VMAttribute"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.IFleetPropertiesInternal)this).VMAttribute = (Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.IVMAttributes) content.GetValueForProperty("VMAttribute",((Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.IFleetPropertiesInternal)this).VMAttribute, Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.VMAttributesTypeConverter.ConvertFrom);
            }
            if (content.Contains("AdditionalLocationsProfile"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.IFleetPropertiesInternal)this).AdditionalLocationsProfile = (Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.IAdditionalLocationsProfile) content.GetValueForProperty("AdditionalLocationsProfile",((Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.IFleetPropertiesInternal)this).AdditionalLocationsProfile, Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.AdditionalLocationsProfileTypeConverter.ConvertFrom);
            }
            if (content.Contains("ComputeProfile"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.IFleetPropertiesInternal)this).ComputeProfile = (Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.IComputeProfile) content.GetValueForProperty("ComputeProfile",((Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.IFleetPropertiesInternal)this).ComputeProfile, Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.ComputeProfileTypeConverter.ConvertFrom);
            }
            if (content.Contains("ProvisioningState"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.IFleetPropertiesInternal)this).ProvisioningState = (string) content.GetValueForProperty("ProvisioningState",((Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.IFleetPropertiesInternal)this).ProvisioningState, global::System.Convert.ToString);
            }
            if (content.Contains("VMSizesProfile"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.IFleetPropertiesInternal)this).VMSizesProfile = (System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.IVMSizeProfile>) content.GetValueForProperty("VMSizesProfile",((Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.IFleetPropertiesInternal)this).VMSizesProfile, __y => TypeConverterExtensions.SelectToList<Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.IVMSizeProfile>(__y, Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.VMSizeProfileTypeConverter.ConvertFrom));
            }
            if (content.Contains("TimeCreated"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.IFleetPropertiesInternal)this).TimeCreated = (global::System.DateTime?) content.GetValueForProperty("TimeCreated",((Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.IFleetPropertiesInternal)this).TimeCreated, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            if (content.Contains("UniqueId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.IFleetPropertiesInternal)this).UniqueId = (string) content.GetValueForProperty("UniqueId",((Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.IFleetPropertiesInternal)this).UniqueId, global::System.Convert.ToString);
            }
            if (content.Contains("SpotPriorityProfileCapacity"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.IFleetPropertiesInternal)this).SpotPriorityProfileCapacity = (int?) content.GetValueForProperty("SpotPriorityProfileCapacity",((Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.IFleetPropertiesInternal)this).SpotPriorityProfileCapacity, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("SpotPriorityProfileMinCapacity"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.IFleetPropertiesInternal)this).SpotPriorityProfileMinCapacity = (int?) content.GetValueForProperty("SpotPriorityProfileMinCapacity",((Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.IFleetPropertiesInternal)this).SpotPriorityProfileMinCapacity, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("SpotPriorityProfileEvictionPolicy"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.IFleetPropertiesInternal)this).SpotPriorityProfileEvictionPolicy = (string) content.GetValueForProperty("SpotPriorityProfileEvictionPolicy",((Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.IFleetPropertiesInternal)this).SpotPriorityProfileEvictionPolicy, global::System.Convert.ToString);
            }
            if (content.Contains("RegularPriorityProfileCapacity"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.IFleetPropertiesInternal)this).RegularPriorityProfileCapacity = (int?) content.GetValueForProperty("RegularPriorityProfileCapacity",((Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.IFleetPropertiesInternal)this).RegularPriorityProfileCapacity, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("RegularPriorityProfileMinCapacity"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.IFleetPropertiesInternal)this).RegularPriorityProfileMinCapacity = (int?) content.GetValueForProperty("RegularPriorityProfileMinCapacity",((Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.IFleetPropertiesInternal)this).RegularPriorityProfileMinCapacity, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("AdditionalLocationProfile"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.IFleetPropertiesInternal)this).AdditionalLocationProfile = (System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.ILocationProfile>) content.GetValueForProperty("AdditionalLocationProfile",((Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.IFleetPropertiesInternal)this).AdditionalLocationProfile, __y => TypeConverterExtensions.SelectToList<Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.ILocationProfile>(__y, Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.LocationProfileTypeConverter.ConvertFrom));
            }
            if (content.Contains("SpotPriorityProfileMaxPricePerVM"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.IFleetPropertiesInternal)this).SpotPriorityProfileMaxPricePerVM = (float?) content.GetValueForProperty("SpotPriorityProfileMaxPricePerVM",((Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.IFleetPropertiesInternal)this).SpotPriorityProfileMaxPricePerVM, (__y)=> (float) global::System.Convert.ChangeType(__y, typeof(float)));
            }
            if (content.Contains("SpotPriorityProfileAllocationStrategy"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.IFleetPropertiesInternal)this).SpotPriorityProfileAllocationStrategy = (string) content.GetValueForProperty("SpotPriorityProfileAllocationStrategy",((Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.IFleetPropertiesInternal)this).SpotPriorityProfileAllocationStrategy, global::System.Convert.ToString);
            }
            if (content.Contains("SpotPriorityProfileMaintain"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.IFleetPropertiesInternal)this).SpotPriorityProfileMaintain = (bool?) content.GetValueForProperty("SpotPriorityProfileMaintain",((Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.IFleetPropertiesInternal)this).SpotPriorityProfileMaintain, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("RegularPriorityProfileAllocationStrategy"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.IFleetPropertiesInternal)this).RegularPriorityProfileAllocationStrategy = (string) content.GetValueForProperty("RegularPriorityProfileAllocationStrategy",((Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.IFleetPropertiesInternal)this).RegularPriorityProfileAllocationStrategy, global::System.Convert.ToString);
            }
            if (content.Contains("VMAttributeVcpuCount"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.IFleetPropertiesInternal)this).VMAttributeVcpuCount = (Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.IVMAttributeMinMaxInteger) content.GetValueForProperty("VMAttributeVcpuCount",((Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.IFleetPropertiesInternal)this).VMAttributeVcpuCount, Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.VMAttributeMinMaxIntegerTypeConverter.ConvertFrom);
            }
            if (content.Contains("VMAttributeMemoryInGiB"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.IFleetPropertiesInternal)this).VMAttributeMemoryInGiB = (Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.IVMAttributeMinMaxDouble) content.GetValueForProperty("VMAttributeMemoryInGiB",((Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.IFleetPropertiesInternal)this).VMAttributeMemoryInGiB, Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.VMAttributeMinMaxDoubleTypeConverter.ConvertFrom);
            }
            if (content.Contains("VMAttributeMemoryInGiBperVcpu"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.IFleetPropertiesInternal)this).VMAttributeMemoryInGiBperVcpu = (Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.IVMAttributeMinMaxDouble) content.GetValueForProperty("VMAttributeMemoryInGiBperVcpu",((Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.IFleetPropertiesInternal)this).VMAttributeMemoryInGiBperVcpu, Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.VMAttributeMinMaxDoubleTypeConverter.ConvertFrom);
            }
            if (content.Contains("VMAttributeLocalStorageInGiB"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.IFleetPropertiesInternal)this).VMAttributeLocalStorageInGiB = (Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.IVMAttributeMinMaxDouble) content.GetValueForProperty("VMAttributeLocalStorageInGiB",((Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.IFleetPropertiesInternal)this).VMAttributeLocalStorageInGiB, Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.VMAttributeMinMaxDoubleTypeConverter.ConvertFrom);
            }
            if (content.Contains("VMAttributeDataDiskCount"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.IFleetPropertiesInternal)this).VMAttributeDataDiskCount = (Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.IVMAttributeMinMaxInteger) content.GetValueForProperty("VMAttributeDataDiskCount",((Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.IFleetPropertiesInternal)this).VMAttributeDataDiskCount, Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.VMAttributeMinMaxIntegerTypeConverter.ConvertFrom);
            }
            if (content.Contains("VMAttributeNetworkInterfaceCount"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.IFleetPropertiesInternal)this).VMAttributeNetworkInterfaceCount = (Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.IVMAttributeMinMaxInteger) content.GetValueForProperty("VMAttributeNetworkInterfaceCount",((Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.IFleetPropertiesInternal)this).VMAttributeNetworkInterfaceCount, Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.VMAttributeMinMaxIntegerTypeConverter.ConvertFrom);
            }
            if (content.Contains("VMAttributeNetworkBandwidthInMbps"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.IFleetPropertiesInternal)this).VMAttributeNetworkBandwidthInMbps = (Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.IVMAttributeMinMaxDouble) content.GetValueForProperty("VMAttributeNetworkBandwidthInMbps",((Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.IFleetPropertiesInternal)this).VMAttributeNetworkBandwidthInMbps, Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.VMAttributeMinMaxDoubleTypeConverter.ConvertFrom);
            }
            if (content.Contains("VMAttributeRdmaNetworkInterfaceCount"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.IFleetPropertiesInternal)this).VMAttributeRdmaNetworkInterfaceCount = (Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.IVMAttributeMinMaxInteger) content.GetValueForProperty("VMAttributeRdmaNetworkInterfaceCount",((Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.IFleetPropertiesInternal)this).VMAttributeRdmaNetworkInterfaceCount, Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.VMAttributeMinMaxIntegerTypeConverter.ConvertFrom);
            }
            if (content.Contains("VMAttributeAcceleratorCount"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.IFleetPropertiesInternal)this).VMAttributeAcceleratorCount = (Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.IVMAttributeMinMaxInteger) content.GetValueForProperty("VMAttributeAcceleratorCount",((Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.IFleetPropertiesInternal)this).VMAttributeAcceleratorCount, Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.VMAttributeMinMaxIntegerTypeConverter.ConvertFrom);
            }
            if (content.Contains("VMAttributeLocalStorageSupport"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.IFleetPropertiesInternal)this).VMAttributeLocalStorageSupport = (string) content.GetValueForProperty("VMAttributeLocalStorageSupport",((Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.IFleetPropertiesInternal)this).VMAttributeLocalStorageSupport, global::System.Convert.ToString);
            }
            if (content.Contains("VMAttributeLocalStorageDiskType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.IFleetPropertiesInternal)this).VMAttributeLocalStorageDiskType = (System.Collections.Generic.List<string>) content.GetValueForProperty("VMAttributeLocalStorageDiskType",((Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.IFleetPropertiesInternal)this).VMAttributeLocalStorageDiskType, __y => TypeConverterExtensions.SelectToList<string>(__y, global::System.Convert.ToString));
            }
            if (content.Contains("VMAttributeRdmaSupport"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.IFleetPropertiesInternal)this).VMAttributeRdmaSupport = (string) content.GetValueForProperty("VMAttributeRdmaSupport",((Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.IFleetPropertiesInternal)this).VMAttributeRdmaSupport, global::System.Convert.ToString);
            }
            if (content.Contains("VMAttributeAcceleratorSupport"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.IFleetPropertiesInternal)this).VMAttributeAcceleratorSupport = (string) content.GetValueForProperty("VMAttributeAcceleratorSupport",((Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.IFleetPropertiesInternal)this).VMAttributeAcceleratorSupport, global::System.Convert.ToString);
            }
            if (content.Contains("VMAttributeAcceleratorManufacturer"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.IFleetPropertiesInternal)this).VMAttributeAcceleratorManufacturer = (System.Collections.Generic.List<string>) content.GetValueForProperty("VMAttributeAcceleratorManufacturer",((Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.IFleetPropertiesInternal)this).VMAttributeAcceleratorManufacturer, __y => TypeConverterExtensions.SelectToList<string>(__y, global::System.Convert.ToString));
            }
            if (content.Contains("VMAttributeAcceleratorType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.IFleetPropertiesInternal)this).VMAttributeAcceleratorType = (System.Collections.Generic.List<string>) content.GetValueForProperty("VMAttributeAcceleratorType",((Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.IFleetPropertiesInternal)this).VMAttributeAcceleratorType, __y => TypeConverterExtensions.SelectToList<string>(__y, global::System.Convert.ToString));
            }
            if (content.Contains("VMAttributeVmcategory"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.IFleetPropertiesInternal)this).VMAttributeVmcategory = (System.Collections.Generic.List<string>) content.GetValueForProperty("VMAttributeVmcategory",((Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.IFleetPropertiesInternal)this).VMAttributeVmcategory, __y => TypeConverterExtensions.SelectToList<string>(__y, global::System.Convert.ToString));
            }
            if (content.Contains("VMAttributeArchitectureType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.IFleetPropertiesInternal)this).VMAttributeArchitectureType = (System.Collections.Generic.List<string>) content.GetValueForProperty("VMAttributeArchitectureType",((Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.IFleetPropertiesInternal)this).VMAttributeArchitectureType, __y => TypeConverterExtensions.SelectToList<string>(__y, global::System.Convert.ToString));
            }
            if (content.Contains("VMAttributeCpuManufacturer"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.IFleetPropertiesInternal)this).VMAttributeCpuManufacturer = (System.Collections.Generic.List<string>) content.GetValueForProperty("VMAttributeCpuManufacturer",((Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.IFleetPropertiesInternal)this).VMAttributeCpuManufacturer, __y => TypeConverterExtensions.SelectToList<string>(__y, global::System.Convert.ToString));
            }
            if (content.Contains("VMAttributeBurstableSupport"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.IFleetPropertiesInternal)this).VMAttributeBurstableSupport = (string) content.GetValueForProperty("VMAttributeBurstableSupport",((Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.IFleetPropertiesInternal)this).VMAttributeBurstableSupport, global::System.Convert.ToString);
            }
            if (content.Contains("VMAttributeExcludedVmsize"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.IFleetPropertiesInternal)this).VMAttributeExcludedVmsize = (System.Collections.Generic.List<string>) content.GetValueForProperty("VMAttributeExcludedVmsize",((Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.IFleetPropertiesInternal)this).VMAttributeExcludedVmsize, __y => TypeConverterExtensions.SelectToList<string>(__y, global::System.Convert.ToString));
            }
            if (content.Contains("ComputeProfileAdditionalVirtualMachineCapability"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.IFleetPropertiesInternal)this).ComputeProfileAdditionalVirtualMachineCapability = (Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.IAdditionalCapabilities) content.GetValueForProperty("ComputeProfileAdditionalVirtualMachineCapability",((Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.IFleetPropertiesInternal)this).ComputeProfileAdditionalVirtualMachineCapability, Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.AdditionalCapabilitiesTypeConverter.ConvertFrom);
            }
            if (content.Contains("ComputeProfileComputeApiVersion"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.IFleetPropertiesInternal)this).ComputeProfileComputeApiVersion = (string) content.GetValueForProperty("ComputeProfileComputeApiVersion",((Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.IFleetPropertiesInternal)this).ComputeProfileComputeApiVersion, global::System.Convert.ToString);
            }
            if (content.Contains("ComputeProfilePlatformFaultDomainCount"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.IFleetPropertiesInternal)this).ComputeProfilePlatformFaultDomainCount = (int?) content.GetValueForProperty("ComputeProfilePlatformFaultDomainCount",((Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.IFleetPropertiesInternal)this).ComputeProfilePlatformFaultDomainCount, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("ComputeProfileBaseVirtualMachineProfile"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.IFleetPropertiesInternal)this).ComputeProfileBaseVirtualMachineProfile = (Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.IBaseVirtualMachineProfile) content.GetValueForProperty("ComputeProfileBaseVirtualMachineProfile",((Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.IFleetPropertiesInternal)this).ComputeProfileBaseVirtualMachineProfile, Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.BaseVirtualMachineProfileTypeConverter.ConvertFrom);
            }
            if (content.Contains("VCpuCountMin"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.IFleetPropertiesInternal)this).VCpuCountMin = (int?) content.GetValueForProperty("VCpuCountMin",((Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.IFleetPropertiesInternal)this).VCpuCountMin, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("VCpuCountMax"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.IFleetPropertiesInternal)this).VCpuCountMax = (int?) content.GetValueForProperty("VCpuCountMax",((Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.IFleetPropertiesInternal)this).VCpuCountMax, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("MemoryInGiBMin"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.IFleetPropertiesInternal)this).MemoryInGiBMin = (double?) content.GetValueForProperty("MemoryInGiBMin",((Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.IFleetPropertiesInternal)this).MemoryInGiBMin, (__y)=> (double) global::System.Convert.ChangeType(__y, typeof(double)));
            }
            if (content.Contains("MemoryInGiBMax"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.IFleetPropertiesInternal)this).MemoryInGiBMax = (double?) content.GetValueForProperty("MemoryInGiBMax",((Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.IFleetPropertiesInternal)this).MemoryInGiBMax, (__y)=> (double) global::System.Convert.ChangeType(__y, typeof(double)));
            }
            if (content.Contains("MemoryInGiBPerVcpuMin"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.IFleetPropertiesInternal)this).MemoryInGiBPerVcpuMin = (double?) content.GetValueForProperty("MemoryInGiBPerVcpuMin",((Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.IFleetPropertiesInternal)this).MemoryInGiBPerVcpuMin, (__y)=> (double) global::System.Convert.ChangeType(__y, typeof(double)));
            }
            if (content.Contains("MemoryInGiBPerVcpuMax"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.IFleetPropertiesInternal)this).MemoryInGiBPerVcpuMax = (double?) content.GetValueForProperty("MemoryInGiBPerVcpuMax",((Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.IFleetPropertiesInternal)this).MemoryInGiBPerVcpuMax, (__y)=> (double) global::System.Convert.ChangeType(__y, typeof(double)));
            }
            if (content.Contains("LocalStorageInGiBMin"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.IFleetPropertiesInternal)this).LocalStorageInGiBMin = (double?) content.GetValueForProperty("LocalStorageInGiBMin",((Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.IFleetPropertiesInternal)this).LocalStorageInGiBMin, (__y)=> (double) global::System.Convert.ChangeType(__y, typeof(double)));
            }
            if (content.Contains("LocalStorageInGiBMax"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.IFleetPropertiesInternal)this).LocalStorageInGiBMax = (double?) content.GetValueForProperty("LocalStorageInGiBMax",((Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.IFleetPropertiesInternal)this).LocalStorageInGiBMax, (__y)=> (double) global::System.Convert.ChangeType(__y, typeof(double)));
            }
            if (content.Contains("DataDiskCountMin"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.IFleetPropertiesInternal)this).DataDiskCountMin = (int?) content.GetValueForProperty("DataDiskCountMin",((Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.IFleetPropertiesInternal)this).DataDiskCountMin, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("DataDiskCountMax"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.IFleetPropertiesInternal)this).DataDiskCountMax = (int?) content.GetValueForProperty("DataDiskCountMax",((Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.IFleetPropertiesInternal)this).DataDiskCountMax, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("NetworkInterfaceCountMin"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.IFleetPropertiesInternal)this).NetworkInterfaceCountMin = (int?) content.GetValueForProperty("NetworkInterfaceCountMin",((Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.IFleetPropertiesInternal)this).NetworkInterfaceCountMin, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("NetworkInterfaceCountMax"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.IFleetPropertiesInternal)this).NetworkInterfaceCountMax = (int?) content.GetValueForProperty("NetworkInterfaceCountMax",((Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.IFleetPropertiesInternal)this).NetworkInterfaceCountMax, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("NetworkBandwidthInMbpsMin"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.IFleetPropertiesInternal)this).NetworkBandwidthInMbpsMin = (double?) content.GetValueForProperty("NetworkBandwidthInMbpsMin",((Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.IFleetPropertiesInternal)this).NetworkBandwidthInMbpsMin, (__y)=> (double) global::System.Convert.ChangeType(__y, typeof(double)));
            }
            if (content.Contains("NetworkBandwidthInMbpsMax"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.IFleetPropertiesInternal)this).NetworkBandwidthInMbpsMax = (double?) content.GetValueForProperty("NetworkBandwidthInMbpsMax",((Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.IFleetPropertiesInternal)this).NetworkBandwidthInMbpsMax, (__y)=> (double) global::System.Convert.ChangeType(__y, typeof(double)));
            }
            if (content.Contains("RdmaNetworkInterfaceCountMin"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.IFleetPropertiesInternal)this).RdmaNetworkInterfaceCountMin = (int?) content.GetValueForProperty("RdmaNetworkInterfaceCountMin",((Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.IFleetPropertiesInternal)this).RdmaNetworkInterfaceCountMin, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("RdmaNetworkInterfaceCountMax"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.IFleetPropertiesInternal)this).RdmaNetworkInterfaceCountMax = (int?) content.GetValueForProperty("RdmaNetworkInterfaceCountMax",((Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.IFleetPropertiesInternal)this).RdmaNetworkInterfaceCountMax, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("AcceleratorCountMin"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.IFleetPropertiesInternal)this).AcceleratorCountMin = (int?) content.GetValueForProperty("AcceleratorCountMin",((Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.IFleetPropertiesInternal)this).AcceleratorCountMin, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("AcceleratorCountMax"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.IFleetPropertiesInternal)this).AcceleratorCountMax = (int?) content.GetValueForProperty("AcceleratorCountMax",((Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.IFleetPropertiesInternal)this).AcceleratorCountMax, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("AdditionalVirtualMachineCapabilityUltraSsdEnabled"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.IFleetPropertiesInternal)this).AdditionalVirtualMachineCapabilityUltraSsdEnabled = (bool?) content.GetValueForProperty("AdditionalVirtualMachineCapabilityUltraSsdEnabled",((Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.IFleetPropertiesInternal)this).AdditionalVirtualMachineCapabilityUltraSsdEnabled, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("AdditionalVirtualMachineCapabilityHibernationEnabled"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.IFleetPropertiesInternal)this).AdditionalVirtualMachineCapabilityHibernationEnabled = (bool?) content.GetValueForProperty("AdditionalVirtualMachineCapabilityHibernationEnabled",((Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.IFleetPropertiesInternal)this).AdditionalVirtualMachineCapabilityHibernationEnabled, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            AfterDeserializePSObject(content);
        }

        /// <summary>
        /// Creates a new instance of <see cref="FleetProperties" />, deserializing the content from a json string.
        /// </summary>
        /// <param name="jsonText">a string containing a JSON serialized instance of this model.</param>
        /// <returns>an instance of the <see cref="FleetProperties" /> model class.</returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Models.IFleetProperties FromJsonString(string jsonText) => FromJson(Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Runtime.Json.JsonNode.Parse(jsonText));

        /// <summary>Serializes this instance to a json string.</summary>

        /// <returns>a <see cref="System.String" /> containing this model serialized to JSON text.</returns>
        public string ToJsonString() => ToJson(null, Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Runtime.SerializationMode.IncludeAll)?.ToString();

        public override string ToString()
        {
            var returnNow = false;
            var result = global::System.String.Empty;
            OverrideToString(ref result, ref returnNow);
            if (returnNow)
            {
                return result;
            }
            return ToJsonString();
        }
    }
    /// Details of the Compute Fleet.
    [System.ComponentModel.TypeConverter(typeof(FleetPropertiesTypeConverter))]
    public partial interface IFleetProperties

    {

    }
}