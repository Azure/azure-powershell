// Code generated by Microsoft (R) AutoRest Code Generator (autorest: 3.10.3, generator: @autorest/powershell@3.0.512)
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Support
{

    /// <summary>
    /// Specifies the disk controller type configured for the VM and
    /// VirtualMachineScaleSet. This property is only supported for virtual machines
    /// whose operating system disk and VM sku supports Generation 2
    /// (https://docs.microsoft.com/en-us/azure/virtual-machines/generation-2), please
    /// check the HyperVGenerations capability returned as part of VM sku capabilities
    /// in the response of Microsoft.Compute SKUs api for the region contains V2
    /// (https://docs.microsoft.com/rest/api/compute/resourceskus/list). For more
    /// information about Disk Controller Types supported please refer to
    /// https://aka.ms/azure-diskcontrollertypes.
    /// </summary>
    public partial struct DiskControllerTypes :
        System.IEquatable<DiskControllerTypes>
    {
        /// <summary>NVMe disk type</summary>
        public static Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Support.DiskControllerTypes NvMe = @"NVMe";

        /// <summary>SCSI disk type</summary>
        public static Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Support.DiskControllerTypes Scsi = @"SCSI";

        /// <summary>the value for an instance of the <see cref="DiskControllerTypes" /> Enum.</summary>
        private string _value { get; set; }

        /// <summary>Conversion from arbitrary object to DiskControllerTypes</summary>
        /// <param name="value">the value to convert to an instance of <see cref="DiskControllerTypes" />.</param>
        internal static object CreateFrom(object value)
        {
            return new DiskControllerTypes(global::System.Convert.ToString(value));
        }

        /// <summary>Creates an instance of the <see cref="DiskControllerTypes"/> Enum class.</summary>
        /// <param name="underlyingValue">the value to create an instance for.</param>
        private DiskControllerTypes(string underlyingValue)
        {
            this._value = underlyingValue;
        }

        /// <summary>Compares values of enum type DiskControllerTypes</summary>
        /// <param name="e">the value to compare against this instance.</param>
        /// <returns><c>true</c> if the two instances are equal to the same value</returns>
        public bool Equals(Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Support.DiskControllerTypes e)
        {
            return _value.Equals(e._value);
        }

        /// <summary>Compares values of enum type DiskControllerTypes (override for Object)</summary>
        /// <param name="obj">the value to compare against this instance.</param>
        /// <returns><c>true</c> if the two instances are equal to the same value</returns>
        public override bool Equals(object obj)
        {
            return obj is DiskControllerTypes && Equals((DiskControllerTypes)obj);
        }

        /// <summary>Returns hashCode for enum DiskControllerTypes</summary>
        /// <returns>The hashCode of the value</returns>
        public override int GetHashCode()
        {
            return this._value.GetHashCode();
        }

        /// <summary>Returns string representation for DiskControllerTypes</summary>
        /// <returns>A string for this value.</returns>
        public override string ToString()
        {
            return this._value;
        }

        /// <summary>Implicit operator to convert string to DiskControllerTypes</summary>
        /// <param name="value">the value to convert to an instance of <see cref="DiskControllerTypes" />.</param>

        public static implicit operator DiskControllerTypes(string value)
        {
            return new DiskControllerTypes(value);
        }

        /// <summary>Implicit operator to convert DiskControllerTypes to string</summary>
        /// <param name="e">the value to convert to an instance of <see cref="DiskControllerTypes" />.</param>

        public static implicit operator string(Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Support.DiskControllerTypes e)
        {
            return e._value;
        }

        /// <summary>Overriding != operator for enum DiskControllerTypes</summary>
        /// <param name="e1">the value to compare against <paramref name="e2" /></param>
        /// <param name="e2">the value to compare against <paramref name="e1" /></param>
        /// <returns><c>true</c> if the two instances are not equal to the same value</returns>
        public static bool operator !=(Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Support.DiskControllerTypes e1, Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Support.DiskControllerTypes e2)
        {
            return !e2.Equals(e1);
        }

        /// <summary>Overriding == operator for enum DiskControllerTypes</summary>
        /// <param name="e1">the value to compare against <paramref name="e2" /></param>
        /// <param name="e2">the value to compare against <paramref name="e1" /></param>
        /// <returns><c>true</c> if the two instances are equal to the same value</returns>
        public static bool operator ==(Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Support.DiskControllerTypes e1, Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Support.DiskControllerTypes e2)
        {
            return e2.Equals(e1);
        }
    }
}