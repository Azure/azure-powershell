// Code generated by Microsoft (R) AutoRest Code Generator (autorest: 3.10.3, generator: @autorest/powershell@3.0.512)
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Support
{

    /// <summary>
    /// Specifies the mode of VM Guest Patch Assessment for the IaaS virtual
    /// machine.<br /><br /> Possible values are:<br /><br /> **ImageDefault** - You
    /// control the timing of patch assessments on a virtual machine. <br /><br />
    /// **AutomaticByPlatform** - The platform will trigger periodic patch assessments.
    /// The property provisionVMAgent must be true.
    /// </summary>
    public partial struct LinuxPatchAssessmentMode :
        System.IEquatable<LinuxPatchAssessmentMode>
    {
        /// <summary>
        /// The platform will trigger periodic patch assessments.The property provisionVMAgent must be true.
        /// </summary>
        public static Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Support.LinuxPatchAssessmentMode AutomaticByPlatform = @"AutomaticByPlatform";

        /// <summary>You control the timing of patch assessments on a virtual machine.</summary>
        public static Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Support.LinuxPatchAssessmentMode ImageDefault = @"ImageDefault";

        /// <summary>the value for an instance of the <see cref="LinuxPatchAssessmentMode" /> Enum.</summary>
        private string _value { get; set; }

        /// <summary>Conversion from arbitrary object to LinuxPatchAssessmentMode</summary>
        /// <param name="value">the value to convert to an instance of <see cref="LinuxPatchAssessmentMode" />.</param>
        internal static object CreateFrom(object value)
        {
            return new LinuxPatchAssessmentMode(global::System.Convert.ToString(value));
        }

        /// <summary>Compares values of enum type LinuxPatchAssessmentMode</summary>
        /// <param name="e">the value to compare against this instance.</param>
        /// <returns><c>true</c> if the two instances are equal to the same value</returns>
        public bool Equals(Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Support.LinuxPatchAssessmentMode e)
        {
            return _value.Equals(e._value);
        }

        /// <summary>Compares values of enum type LinuxPatchAssessmentMode (override for Object)</summary>
        /// <param name="obj">the value to compare against this instance.</param>
        /// <returns><c>true</c> if the two instances are equal to the same value</returns>
        public override bool Equals(object obj)
        {
            return obj is LinuxPatchAssessmentMode && Equals((LinuxPatchAssessmentMode)obj);
        }

        /// <summary>Returns hashCode for enum LinuxPatchAssessmentMode</summary>
        /// <returns>The hashCode of the value</returns>
        public override int GetHashCode()
        {
            return this._value.GetHashCode();
        }

        /// <summary>Creates an instance of the <see cref="LinuxPatchAssessmentMode"/> Enum class.</summary>
        /// <param name="underlyingValue">the value to create an instance for.</param>
        private LinuxPatchAssessmentMode(string underlyingValue)
        {
            this._value = underlyingValue;
        }

        /// <summary>Returns string representation for LinuxPatchAssessmentMode</summary>
        /// <returns>A string for this value.</returns>
        public override string ToString()
        {
            return this._value;
        }

        /// <summary>Implicit operator to convert string to LinuxPatchAssessmentMode</summary>
        /// <param name="value">the value to convert to an instance of <see cref="LinuxPatchAssessmentMode" />.</param>

        public static implicit operator LinuxPatchAssessmentMode(string value)
        {
            return new LinuxPatchAssessmentMode(value);
        }

        /// <summary>Implicit operator to convert LinuxPatchAssessmentMode to string</summary>
        /// <param name="e">the value to convert to an instance of <see cref="LinuxPatchAssessmentMode" />.</param>

        public static implicit operator string(Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Support.LinuxPatchAssessmentMode e)
        {
            return e._value;
        }

        /// <summary>Overriding != operator for enum LinuxPatchAssessmentMode</summary>
        /// <param name="e1">the value to compare against <paramref name="e2" /></param>
        /// <param name="e2">the value to compare against <paramref name="e1" /></param>
        /// <returns><c>true</c> if the two instances are not equal to the same value</returns>
        public static bool operator !=(Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Support.LinuxPatchAssessmentMode e1, Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Support.LinuxPatchAssessmentMode e2)
        {
            return !e2.Equals(e1);
        }

        /// <summary>Overriding == operator for enum LinuxPatchAssessmentMode</summary>
        /// <param name="e1">the value to compare against <paramref name="e2" /></param>
        /// <param name="e2">the value to compare against <paramref name="e1" /></param>
        /// <returns><c>true</c> if the two instances are equal to the same value</returns>
        public static bool operator ==(Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Support.LinuxPatchAssessmentMode e1, Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Support.LinuxPatchAssessmentMode e2)
        {
            return e2.Equals(e1);
        }
    }
}