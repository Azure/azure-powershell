// Code generated by Microsoft (R) AutoRest Code Generator (autorest: 3.10.3, generator: @autorest/powershell@3.0.512)
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Support
{

    /// <summary>
    /// Specifies the storage account type for the managed disk. Managed OS disk
    /// storage account type can only be set when you create the scale set. NOTE:
    /// UltraSSD_LRS can only be used with data disks. It cannot be used with OS Disk.
    /// Standard_LRS uses Standard HDD. StandardSSD_LRS uses Standard SSD. Premium_LRS
    /// uses Premium SSD. UltraSSD_LRS uses Ultra disk. Premium_ZRS uses Premium SSD
    /// zone redundant storage. StandardSSD_ZRS uses Standard SSD zone redundant
    /// storage. For more information regarding disks supported for Windows Virtual
    /// Machines, refer to
    /// https://docs.microsoft.com/azure/virtual-machines/windows/disks-types and, for
    /// Linux Virtual Machines, refer to
    /// https://docs.microsoft.com/azure/virtual-machines/linux/disks-types
    /// </summary>
    public partial struct StorageAccountTypes :
        System.IEquatable<StorageAccountTypes>
    {
        /// <summary>Premium_LRS option.</summary>
        public static Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Support.StorageAccountTypes PremiumLrs = @"Premium_LRS";

        /// <summary>PremiumV2_LRS option.</summary>
        public static Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Support.StorageAccountTypes PremiumV2Lrs = @"PremiumV2_LRS";

        /// <summary>Premium_ZRS option.</summary>
        public static Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Support.StorageAccountTypes PremiumZrs = @"Premium_ZRS";

        /// <summary>Standard_LRS option.</summary>
        public static Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Support.StorageAccountTypes StandardLrs = @"Standard_LRS";

        /// <summary>StandardSSD_LRS option.</summary>
        public static Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Support.StorageAccountTypes StandardSsdLrs = @"StandardSSD_LRS";

        /// <summary>StandardSSD_ZRS option.</summary>
        public static Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Support.StorageAccountTypes StandardSsdZrs = @"StandardSSD_ZRS";

        /// <summary>UltraSSD_LRS option.</summary>
        public static Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Support.StorageAccountTypes UltraSsdLrs = @"UltraSSD_LRS";

        /// <summary>the value for an instance of the <see cref="StorageAccountTypes" /> Enum.</summary>
        private string _value { get; set; }

        /// <summary>Conversion from arbitrary object to StorageAccountTypes</summary>
        /// <param name="value">the value to convert to an instance of <see cref="StorageAccountTypes" />.</param>
        internal static object CreateFrom(object value)
        {
            return new StorageAccountTypes(global::System.Convert.ToString(value));
        }

        /// <summary>Compares values of enum type StorageAccountTypes</summary>
        /// <param name="e">the value to compare against this instance.</param>
        /// <returns><c>true</c> if the two instances are equal to the same value</returns>
        public bool Equals(Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Support.StorageAccountTypes e)
        {
            return _value.Equals(e._value);
        }

        /// <summary>Compares values of enum type StorageAccountTypes (override for Object)</summary>
        /// <param name="obj">the value to compare against this instance.</param>
        /// <returns><c>true</c> if the two instances are equal to the same value</returns>
        public override bool Equals(object obj)
        {
            return obj is StorageAccountTypes && Equals((StorageAccountTypes)obj);
        }

        /// <summary>Returns hashCode for enum StorageAccountTypes</summary>
        /// <returns>The hashCode of the value</returns>
        public override int GetHashCode()
        {
            return this._value.GetHashCode();
        }

        /// <summary>Creates an instance of the <see cref="StorageAccountTypes"/> Enum class.</summary>
        /// <param name="underlyingValue">the value to create an instance for.</param>
        private StorageAccountTypes(string underlyingValue)
        {
            this._value = underlyingValue;
        }

        /// <summary>Returns string representation for StorageAccountTypes</summary>
        /// <returns>A string for this value.</returns>
        public override string ToString()
        {
            return this._value;
        }

        /// <summary>Implicit operator to convert string to StorageAccountTypes</summary>
        /// <param name="value">the value to convert to an instance of <see cref="StorageAccountTypes" />.</param>

        public static implicit operator StorageAccountTypes(string value)
        {
            return new StorageAccountTypes(value);
        }

        /// <summary>Implicit operator to convert StorageAccountTypes to string</summary>
        /// <param name="e">the value to convert to an instance of <see cref="StorageAccountTypes" />.</param>

        public static implicit operator string(Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Support.StorageAccountTypes e)
        {
            return e._value;
        }

        /// <summary>Overriding != operator for enum StorageAccountTypes</summary>
        /// <param name="e1">the value to compare against <paramref name="e2" /></param>
        /// <param name="e2">the value to compare against <paramref name="e1" /></param>
        /// <returns><c>true</c> if the two instances are not equal to the same value</returns>
        public static bool operator !=(Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Support.StorageAccountTypes e1, Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Support.StorageAccountTypes e2)
        {
            return !e2.Equals(e1);
        }

        /// <summary>Overriding == operator for enum StorageAccountTypes</summary>
        /// <param name="e1">the value to compare against <paramref name="e2" /></param>
        /// <param name="e2">the value to compare against <paramref name="e1" /></param>
        /// <returns><c>true</c> if the two instances are equal to the same value</returns>
        public static bool operator ==(Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Support.StorageAccountTypes e1, Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Support.StorageAccountTypes e2)
        {
            return e2.Equals(e1);
        }
    }
}