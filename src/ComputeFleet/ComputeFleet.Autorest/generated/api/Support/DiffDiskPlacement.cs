// Code generated by Microsoft (R) AutoRest Code Generator (autorest: 3.10.3, generator: @autorest/powershell@3.0.512)
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Support
{

    /// <summary>
    /// Specifies the ephemeral disk placement for operating system disk. This property
    /// can be used by user in the request to choose the location i.e, cache disk or
    /// resource disk space for Ephemeral OS disk provisioning. For more information on
    /// Ephemeral OS disk size requirements, please refer Ephemeral OS disk size
    /// requirements for Windows VM at
    /// https://docs.microsoft.com/azure/virtual-machines/windows/ephemeral-os-disks#size-requirements
    /// and Linux VM at
    /// https://docs.microsoft.com/azure/virtual-machines/linux/ephemeral-os-disks#size-requirements
    /// Minimum api-version for NvmeDisk: 2024-03-01.
    /// </summary>
    public partial struct DiffDiskPlacement :
        System.IEquatable<DiffDiskPlacement>
    {
        /// <summary>CacheDisk option.</summary>
        public static Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Support.DiffDiskPlacement CacheDisk = @"CacheDisk";

        /// <summary>NvmeDisk option.</summary>
        public static Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Support.DiffDiskPlacement NvmeDisk = @"NvmeDisk";

        /// <summary>Resource Disk option.</summary>
        public static Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Support.DiffDiskPlacement ResourceDisk = @"ResourceDisk";

        /// <summary>the value for an instance of the <see cref="DiffDiskPlacement" /> Enum.</summary>
        private string _value { get; set; }

        /// <summary>Conversion from arbitrary object to DiffDiskPlacement</summary>
        /// <param name="value">the value to convert to an instance of <see cref="DiffDiskPlacement" />.</param>
        internal static object CreateFrom(object value)
        {
            return new DiffDiskPlacement(global::System.Convert.ToString(value));
        }

        /// <summary>Creates an instance of the <see cref="DiffDiskPlacement"/> Enum class.</summary>
        /// <param name="underlyingValue">the value to create an instance for.</param>
        private DiffDiskPlacement(string underlyingValue)
        {
            this._value = underlyingValue;
        }

        /// <summary>Compares values of enum type DiffDiskPlacement</summary>
        /// <param name="e">the value to compare against this instance.</param>
        /// <returns><c>true</c> if the two instances are equal to the same value</returns>
        public bool Equals(Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Support.DiffDiskPlacement e)
        {
            return _value.Equals(e._value);
        }

        /// <summary>Compares values of enum type DiffDiskPlacement (override for Object)</summary>
        /// <param name="obj">the value to compare against this instance.</param>
        /// <returns><c>true</c> if the two instances are equal to the same value</returns>
        public override bool Equals(object obj)
        {
            return obj is DiffDiskPlacement && Equals((DiffDiskPlacement)obj);
        }

        /// <summary>Returns hashCode for enum DiffDiskPlacement</summary>
        /// <returns>The hashCode of the value</returns>
        public override int GetHashCode()
        {
            return this._value.GetHashCode();
        }

        /// <summary>Returns string representation for DiffDiskPlacement</summary>
        /// <returns>A string for this value.</returns>
        public override string ToString()
        {
            return this._value;
        }

        /// <summary>Implicit operator to convert string to DiffDiskPlacement</summary>
        /// <param name="value">the value to convert to an instance of <see cref="DiffDiskPlacement" />.</param>

        public static implicit operator DiffDiskPlacement(string value)
        {
            return new DiffDiskPlacement(value);
        }

        /// <summary>Implicit operator to convert DiffDiskPlacement to string</summary>
        /// <param name="e">the value to convert to an instance of <see cref="DiffDiskPlacement" />.</param>

        public static implicit operator string(Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Support.DiffDiskPlacement e)
        {
            return e._value;
        }

        /// <summary>Overriding != operator for enum DiffDiskPlacement</summary>
        /// <param name="e1">the value to compare against <paramref name="e2" /></param>
        /// <param name="e2">the value to compare against <paramref name="e1" /></param>
        /// <returns><c>true</c> if the two instances are not equal to the same value</returns>
        public static bool operator !=(Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Support.DiffDiskPlacement e1, Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Support.DiffDiskPlacement e2)
        {
            return !e2.Equals(e1);
        }

        /// <summary>Overriding == operator for enum DiffDiskPlacement</summary>
        /// <param name="e1">the value to compare against <paramref name="e2" /></param>
        /// <param name="e2">the value to compare against <paramref name="e1" /></param>
        /// <returns><c>true</c> if the two instances are equal to the same value</returns>
        public static bool operator ==(Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Support.DiffDiskPlacement e1, Microsoft.Azure.PowerShell.Cmdlets.ComputeFleet.Support.DiffDiskPlacement e2)
        {
            return e2.Equals(e1);
        }
    }
}