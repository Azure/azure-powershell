// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.NetApp.Models
{
    using System.Linq;

    /// <summary>
    /// Volume group properties
    /// </summary>
    public partial class VolumeGroupProperties
    {
        /// <summary>
        /// Initializes a new instance of the VolumeGroupProperties class.
        /// </summary>
        public VolumeGroupProperties()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the VolumeGroupProperties class.
        /// </summary>

        /// <param name="provisioningState">Azure lifecycle management
        /// </param>

        /// <param name="groupMetaData">Volume group details
        /// </param>

        /// <param name="volumes">List of volumes from group
        /// </param>
        public VolumeGroupProperties(string provisioningState = default(string), VolumeGroupMetaData groupMetaData = default(VolumeGroupMetaData), System.Collections.Generic.IList<VolumeGroupVolumeProperties> volumes = default(System.Collections.Generic.IList<VolumeGroupVolumeProperties>))

        {
            this.ProvisioningState = provisioningState;
            this.GroupMetaData = groupMetaData;
            this.Volumes = volumes;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets azure lifecycle management
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "provisioningState")]
        public string ProvisioningState {get; private set; }

        /// <summary>
        /// Gets or sets volume group details
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "groupMetaData")]
        public VolumeGroupMetaData GroupMetaData {get; set; }

        /// <summary>
        /// Gets or sets list of volumes from group
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "volumes")]
        public System.Collections.Generic.IList<VolumeGroupVolumeProperties> Volumes {get; set; }
    }
}