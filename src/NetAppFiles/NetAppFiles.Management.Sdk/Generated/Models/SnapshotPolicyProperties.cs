// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.NetApp.Models
{
    using System.Linq;

    /// <summary>
    /// Snapshot policy properties
    /// </summary>
    public partial class SnapshotPolicyProperties
    {
        /// <summary>
        /// Initializes a new instance of the SnapshotPolicyProperties class.
        /// </summary>
        public SnapshotPolicyProperties()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the SnapshotPolicyProperties class.
        /// </summary>

        /// <param name="hourlySchedule">Schedule for hourly snapshots
        /// </param>

        /// <param name="dailySchedule">Schedule for daily snapshots
        /// </param>

        /// <param name="weeklySchedule">Schedule for weekly snapshots
        /// </param>

        /// <param name="monthlySchedule">Schedule for monthly snapshots
        /// </param>

        /// <param name="enabled">The property to decide policy is enabled or not
        /// </param>

        /// <param name="provisioningState">Azure lifecycle management
        /// </param>
        public SnapshotPolicyProperties(HourlySchedule hourlySchedule = default(HourlySchedule), DailySchedule dailySchedule = default(DailySchedule), WeeklySchedule weeklySchedule = default(WeeklySchedule), MonthlySchedule monthlySchedule = default(MonthlySchedule), bool? enabled = default(bool?), string provisioningState = default(string))

        {
            this.HourlySchedule = hourlySchedule;
            this.DailySchedule = dailySchedule;
            this.WeeklySchedule = weeklySchedule;
            this.MonthlySchedule = monthlySchedule;
            this.Enabled = enabled;
            this.ProvisioningState = provisioningState;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets or sets schedule for hourly snapshots
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "hourlySchedule")]
        public HourlySchedule HourlySchedule {get; set; }

        /// <summary>
        /// Gets or sets schedule for daily snapshots
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "dailySchedule")]
        public DailySchedule DailySchedule {get; set; }

        /// <summary>
        /// Gets or sets schedule for weekly snapshots
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "weeklySchedule")]
        public WeeklySchedule WeeklySchedule {get; set; }

        /// <summary>
        /// Gets or sets schedule for monthly snapshots
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "monthlySchedule")]
        public MonthlySchedule MonthlySchedule {get; set; }

        /// <summary>
        /// Gets or sets the property to decide policy is enabled or not
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "enabled")]
        public bool? Enabled {get; set; }

        /// <summary>
        /// Gets azure lifecycle management
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "provisioningState")]
        public string ProvisioningState {get; private set; }
    }
}