// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.NetApp.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Break file locks request
    /// </summary>
    public partial class BreakFileLocksRequest
    {
        /// <summary>
        /// Initializes a new instance of the BreakFileLocksRequest class.
        /// </summary>
        public BreakFileLocksRequest()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the BreakFileLocksRequest class.
        /// </summary>
        /// <param name="clientIp">To clear file locks on a volume for a
        /// particular client</param>
        /// <param name="confirmRunningDisruptiveOperation">Break File locks
        /// could be a disruptive operation for application as locks on the
        /// volume will be broken, if want to process, set to true.</param>
        public BreakFileLocksRequest(string clientIp = default(string), bool? confirmRunningDisruptiveOperation = default(bool?))
        {
            ClientIp = clientIp;
            ConfirmRunningDisruptiveOperation = confirmRunningDisruptiveOperation;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets to clear file locks on a volume for a particular
        /// client
        /// </summary>
        [JsonProperty(PropertyName = "clientIp")]
        public string ClientIp { get; set; }

        /// <summary>
        /// Gets or sets break File locks could be a disruptive operation for
        /// application as locks on the volume will be broken, if want to
        /// process, set to true.
        /// </summary>
        [JsonProperty(PropertyName = "confirmRunningDisruptiveOperation")]
        public bool? ConfirmRunningDisruptiveOperation { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (ClientIp != null)
            {
                if (!System.Text.RegularExpressions.Regex.IsMatch(ClientIp, "^(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$"))
                {
                    throw new ValidationException(ValidationRules.Pattern, "ClientIp", "^(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$");
                }
            }
        }
    }
}
