// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.NetApp.Models
{
    using System.Linq;

    /// <summary>
    /// Patchable pool properties
    /// </summary>
    public partial class PoolPatchProperties
    {
        /// <summary>
        /// Initializes a new instance of the PoolPatchProperties class.
        /// </summary>
        public PoolPatchProperties()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the PoolPatchProperties class.
        /// </summary>

        /// <param name="size">Provisioned size of the pool (in bytes). Allowed values are in 1TiB chunks
        /// (value must be multiply of 1099511627776).
        /// </param>

        /// <param name="qosType">The qos type of the pool
        /// Possible values include: &#39;Auto&#39;, &#39;Manual&#39;</param>

        /// <param name="coolAccess">If enabled (true) the pool can contain cool Access enabled volumes.
        /// </param>
        public PoolPatchProperties(long? size = default(long?), string qosType = default(string), bool? coolAccess = default(bool?))

        {
            this.Size = size;
            this.QosType = qosType;
            this.CoolAccess = coolAccess;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets or sets provisioned size of the pool (in bytes). Allowed values are in
        /// 1TiB chunks (value must be multiply of 1099511627776).
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "size")]
        public long? Size {get; set; }

        /// <summary>
        /// Gets or sets the qos type of the pool Possible values include: &#39;Auto&#39;, &#39;Manual&#39;
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "qosType")]
        public string QosType {get; set; }

        /// <summary>
        /// Gets or sets if enabled (true) the pool can contain cool Access enabled
        /// volumes.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "coolAccess")]
        public bool? CoolAccess {get; set; }
    }
}