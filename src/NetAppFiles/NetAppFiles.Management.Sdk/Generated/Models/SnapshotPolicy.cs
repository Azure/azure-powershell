// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.NetApp.Models
{
    using System.Linq;

    /// <summary>
    /// Snapshot policy information
    /// </summary>
    [Microsoft.Rest.Serialization.JsonTransformation]
    public partial class SnapshotPolicy : TrackedResource
    {
        /// <summary>
        /// Initializes a new instance of the SnapshotPolicy class.
        /// </summary>
        public SnapshotPolicy()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the SnapshotPolicy class.
        /// </summary>

        /// <param name="id">Fully qualified resource ID for the resource. E.g.
        /// &#34;/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}&#34;
        /// </param>

        /// <param name="name">The name of the resource
        /// </param>

        /// <param name="type">The type of the resource. E.g. &#34;Microsoft.Compute/virtualMachines&#34; or
        /// &#34;Microsoft.Storage/storageAccounts&#34;
        /// </param>

        /// <param name="systemData">Azure Resource Manager metadata containing createdBy and modifiedBy
        /// information.
        /// </param>

        /// <param name="tags">Resource tags.
        /// </param>

        /// <param name="location">The geo-location where the resource lives
        /// </param>

        /// <param name="etag">A unique read-only string that changes whenever the resource is updated.
        /// </param>

        /// <param name="hourlySchedule">Schedule for hourly snapshots
        /// </param>

        /// <param name="dailySchedule">Schedule for daily snapshots
        /// </param>

        /// <param name="weeklySchedule">Schedule for weekly snapshots
        /// </param>

        /// <param name="monthlySchedule">Schedule for monthly snapshots
        /// </param>

        /// <param name="enabled">The property to decide policy is enabled or not
        /// </param>

        /// <param name="provisioningState">Azure lifecycle management
        /// </param>
        public SnapshotPolicy(string location, string id = default(string), string name = default(string), string type = default(string), SystemData systemData = default(SystemData), System.Collections.Generic.IDictionary<string, string> tags = default(System.Collections.Generic.IDictionary<string, string>), string etag = default(string), HourlySchedule hourlySchedule = default(HourlySchedule), DailySchedule dailySchedule = default(DailySchedule), WeeklySchedule weeklySchedule = default(WeeklySchedule), MonthlySchedule monthlySchedule = default(MonthlySchedule), bool? enabled = default(bool?), string provisioningState = default(string))

        : base(location, id, name, type, systemData, tags)
        {
            this.Etag = etag;
            this.HourlySchedule = hourlySchedule;
            this.DailySchedule = dailySchedule;
            this.WeeklySchedule = weeklySchedule;
            this.MonthlySchedule = monthlySchedule;
            this.Enabled = enabled;
            this.ProvisioningState = provisioningState;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets a unique read-only string that changes whenever the resource is
        /// updated.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "etag")]
        public string Etag {get; private set; }

        /// <summary>
        /// Gets or sets schedule for hourly snapshots
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.hourlySchedule")]
        public HourlySchedule HourlySchedule {get; set; }

        /// <summary>
        /// Gets or sets schedule for daily snapshots
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.dailySchedule")]
        public DailySchedule DailySchedule {get; set; }

        /// <summary>
        /// Gets or sets schedule for weekly snapshots
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.weeklySchedule")]
        public WeeklySchedule WeeklySchedule {get; set; }

        /// <summary>
        /// Gets or sets schedule for monthly snapshots
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.monthlySchedule")]
        public MonthlySchedule MonthlySchedule {get; set; }

        /// <summary>
        /// Gets or sets the property to decide policy is enabled or not
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.enabled")]
        public bool? Enabled {get; set; }

        /// <summary>
        /// Gets azure lifecycle management
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.provisioningState")]
        public string ProvisioningState {get; private set; }
        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public override void Validate()
        {
            base.Validate();






        }
    }
}