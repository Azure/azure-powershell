// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.NetApp.Models
{
    using System.Linq;

    /// <summary>
    /// Properties which represents actual subvolume model which is stored as a
    /// file in the system.
    /// </summary>
    public partial class SubvolumeModelProperties
    {
        /// <summary>
        /// Initializes a new instance of the SubvolumeModelProperties class.
        /// </summary>
        public SubvolumeModelProperties()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the SubvolumeModelProperties class.
        /// </summary>

        /// <param name="path">Path to the subvolume
        /// </param>

        /// <param name="parentPath">Path to the parent subvolume
        /// </param>

        /// <param name="size">Size of subvolume
        /// </param>

        /// <param name="bytesUsed">Bytes used
        /// </param>

        /// <param name="permissions">Permissions of the subvolume
        /// </param>

        /// <param name="creationTimeStamp">Creation time and date
        /// </param>

        /// <param name="accessedTimeStamp">Most recent access time and date
        /// </param>

        /// <param name="modifiedTimeStamp">Most recent modification time and date
        /// </param>

        /// <param name="changedTimeStamp">Most recent change time and date
        /// </param>

        /// <param name="provisioningState">Azure lifecycle management
        /// </param>
        public SubvolumeModelProperties(string path = default(string), string parentPath = default(string), long? size = default(long?), long? bytesUsed = default(long?), string permissions = default(string), System.DateTime? creationTimeStamp = default(System.DateTime?), System.DateTime? accessedTimeStamp = default(System.DateTime?), System.DateTime? modifiedTimeStamp = default(System.DateTime?), System.DateTime? changedTimeStamp = default(System.DateTime?), string provisioningState = default(string))

        {
            this.Path = path;
            this.ParentPath = parentPath;
            this.Size = size;
            this.BytesUsed = bytesUsed;
            this.Permissions = permissions;
            this.CreationTimeStamp = creationTimeStamp;
            this.AccessedTimeStamp = accessedTimeStamp;
            this.ModifiedTimeStamp = modifiedTimeStamp;
            this.ChangedTimeStamp = changedTimeStamp;
            this.ProvisioningState = provisioningState;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets or sets path to the subvolume
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "path")]
        public string Path {get; set; }

        /// <summary>
        /// Gets or sets path to the parent subvolume
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "parentPath")]
        public string ParentPath {get; set; }

        /// <summary>
        /// Gets or sets size of subvolume
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "size")]
        public long? Size {get; set; }

        /// <summary>
        /// Gets or sets bytes used
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "bytesUsed")]
        public long? BytesUsed {get; set; }

        /// <summary>
        /// Gets or sets permissions of the subvolume
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "permissions")]
        public string Permissions {get; set; }

        /// <summary>
        /// Gets or sets creation time and date
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "creationTimeStamp")]
        public System.DateTime? CreationTimeStamp {get; set; }

        /// <summary>
        /// Gets or sets most recent access time and date
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "accessedTimeStamp")]
        public System.DateTime? AccessedTimeStamp {get; set; }

        /// <summary>
        /// Gets or sets most recent modification time and date
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "modifiedTimeStamp")]
        public System.DateTime? ModifiedTimeStamp {get; set; }

        /// <summary>
        /// Gets or sets most recent change time and date
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "changedTimeStamp")]
        public System.DateTime? ChangedTimeStamp {get; set; }

        /// <summary>
        /// Gets or sets azure lifecycle management
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "provisioningState")]
        public string ProvisioningState {get; set; }
    }
}