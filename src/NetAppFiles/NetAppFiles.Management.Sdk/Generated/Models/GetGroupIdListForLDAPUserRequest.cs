// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.NetApp.Models
{
    using System.Linq;

    /// <summary>
    /// Get group Id list for LDAP User request
    /// </summary>
    public partial class GetGroupIdListForLdapUserRequest
    {
        /// <summary>
        /// Initializes a new instance of the GetGroupIdListForLdapUserRequest class.
        /// </summary>
        public GetGroupIdListForLdapUserRequest()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the GetGroupIdListForLdapUserRequest class.
        /// </summary>

        /// <param name="username">username is required to fetch the group to which user is part of
        /// </param>
        public GetGroupIdListForLdapUserRequest(string username)

        {
            this.Username = username;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets or sets username is required to fetch the group to which user is part
        /// of
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "username")]
        public string Username {get; set; }
        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (this.Username == null)
            {
                throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.CannotBeNull, "Username");
            }
            if (this.Username != null)
            {
                if (this.Username.Length > 255)
                {
                    throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.MaxLength, "Username", 255);
                }
                if (this.Username.Length < 1)
                {
                    throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.MinLength, "Username", 1);
                }
            }
        }
    }
}