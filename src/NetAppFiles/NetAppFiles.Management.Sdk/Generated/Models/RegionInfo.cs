// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.NetApp.Models
{
    using System.Linq;

    /// <summary>
    /// Provides region specific information.
    /// </summary>
    public partial class RegionInfo
    {
        /// <summary>
        /// Initializes a new instance of the RegionInfo class.
        /// </summary>
        public RegionInfo()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the RegionInfo class.
        /// </summary>

        /// <param name="storageToNetworkProximity">Provides storage to network proximity information in the region.
        /// Possible values include: 'Default', 'T1', 'T2', 'AcrossT2', 'T1AndT2',
        /// 'T1AndAcrossT2', 'T2AndAcrossT2', 'T1AndT2AndAcrossT2'</param>

        /// <param name="availabilityZoneMappings">Provides logical availability zone mappings for the subscription for a
        /// region.
        /// </param>
        public RegionInfo(string storageToNetworkProximity = default(string), System.Collections.Generic.IList<RegionInfoAvailabilityZoneMappingsItem> availabilityZoneMappings = default(System.Collections.Generic.IList<RegionInfoAvailabilityZoneMappingsItem>))

        {
            this.StorageToNetworkProximity = storageToNetworkProximity;
            this.AvailabilityZoneMappings = availabilityZoneMappings;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets or sets provides storage to network proximity information in the
        /// region. Possible values include: &#39;Default&#39;, &#39;T1&#39;, &#39;T2&#39;, &#39;AcrossT2&#39;, &#39;T1AndT2&#39;, &#39;T1AndAcrossT2&#39;, &#39;T2AndAcrossT2&#39;, &#39;T1AndT2AndAcrossT2&#39;
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "storageToNetworkProximity")]
        public string StorageToNetworkProximity {get; set; }

        /// <summary>
        /// Gets or sets provides logical availability zone mappings for the
        /// subscription for a region.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "availabilityZoneMappings")]
        public System.Collections.Generic.IList<RegionInfoAvailabilityZoneMappingsItem> AvailabilityZoneMappings {get; set; }
    }
}