// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.NetApp.Models
{
    using System.Linq;

    /// <summary>
    /// Information regarding regionInfo Item.
    /// </summary>
    [Microsoft.Rest.Serialization.JsonTransformation]
    public partial class RegionInfoResource : ProxyResource
    {
        /// <summary>
        /// Initializes a new instance of the RegionInfoResource class.
        /// </summary>
        public RegionInfoResource()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the RegionInfoResource class.
        /// </summary>

        /// <param name="id">Fully qualified resource ID for the resource. E.g.
        /// &#34;/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}&#34;
        /// </param>

        /// <param name="name">The name of the resource
        /// </param>

        /// <param name="type">The type of the resource. E.g. &#34;Microsoft.Compute/virtualMachines&#34; or
        /// &#34;Microsoft.Storage/storageAccounts&#34;
        /// </param>

        /// <param name="systemData">Azure Resource Manager metadata containing createdBy and modifiedBy
        /// information.
        /// </param>

        /// <param name="storageToNetworkProximity">Provides storage to network proximity information in the region.
        /// Possible values include: &#39;Default&#39;, &#39;T1&#39;, &#39;T2&#39;, &#39;AcrossT2&#39;, &#39;T1AndT2&#39;,
        /// &#39;T1AndAcrossT2&#39;, &#39;T2AndAcrossT2&#39;, &#39;T1AndT2AndAcrossT2&#39;</param>

        /// <param name="availabilityZoneMappings">Provides logical availability zone mappings for the subscription for a
        /// region.
        /// </param>
        public RegionInfoResource(string id = default(string), string name = default(string), string type = default(string), SystemData systemData = default(SystemData), string storageToNetworkProximity = default(string), System.Collections.Generic.IList<RegionInfoAvailabilityZoneMappingsItem> availabilityZoneMappings = default(System.Collections.Generic.IList<RegionInfoAvailabilityZoneMappingsItem>))

        : base(id, name, type, systemData)
        {
            this.StorageToNetworkProximity = storageToNetworkProximity;
            this.AvailabilityZoneMappings = availabilityZoneMappings;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets or sets provides storage to network proximity information in the
        /// region. Possible values include: &#39;Default&#39;, &#39;T1&#39;, &#39;T2&#39;, &#39;AcrossT2&#39;, &#39;T1AndT2&#39;, &#39;T1AndAcrossT2&#39;, &#39;T2AndAcrossT2&#39;, &#39;T1AndT2AndAcrossT2&#39;
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.storageToNetworkProximity")]
        public string StorageToNetworkProximity {get; set; }

        /// <summary>
        /// Gets or sets provides logical availability zone mappings for the
        /// subscription for a region.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.availabilityZoneMappings")]
        public System.Collections.Generic.IList<RegionInfoAvailabilityZoneMappingsItem> AvailabilityZoneMappings {get; set; }
    }
}