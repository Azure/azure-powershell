// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.Storage.Models
{
    using System.Linq;

    /// <summary>
    /// The properties of a storage account’s Blob service.
    /// </summary>
    public partial class BlobServicePropertiesProperties
    {
        /// <summary>
        /// Initializes a new instance of the BlobServicePropertiesProperties class.
        /// </summary>
        public BlobServicePropertiesProperties()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the BlobServicePropertiesProperties class.
        /// </summary>

        /// <param name="cors">Specifies CORS rules for the Blob service. You can include up to five
        /// CorsRule elements in the request. If no CorsRule elements are included in
        /// the request body, all CORS rules will be deleted, and CORS will be disabled
        /// for the Blob service.
        /// </param>

        /// <param name="defaultServiceVersion">DefaultServiceVersion indicates the default version to use for requests to
        /// the Blob service if an incoming request’s version is not specified.
        /// Possible values include version 2008-10-27 and all more recent versions.
        /// </param>

        /// <param name="deleteRetentionPolicy">The blob service properties for blob soft delete.
        /// </param>

        /// <param name="isVersioningEnabled">Versioning is enabled if set to true.
        /// </param>

        /// <param name="automaticSnapshotPolicyEnabled">Deprecated in favor of isVersioningEnabled property.
        /// </param>

        /// <param name="changeFeed">The blob service properties for change feed events.
        /// </param>

        /// <param name="restorePolicy">The blob service properties for blob restore policy.
        /// </param>

        /// <param name="containerDeleteRetentionPolicy">The blob service properties for container soft delete.
        /// </param>

        /// <param name="lastAccessTimeTrackingPolicy">The blob service property to configure last access time based tracking
        /// policy.
        /// </param>
        public BlobServicePropertiesProperties(CorsRules cors = default(CorsRules), string defaultServiceVersion = default(string), DeleteRetentionPolicy deleteRetentionPolicy = default(DeleteRetentionPolicy), bool? isVersioningEnabled = default(bool?), bool? automaticSnapshotPolicyEnabled = default(bool?), ChangeFeed changeFeed = default(ChangeFeed), RestorePolicyProperties restorePolicy = default(RestorePolicyProperties), DeleteRetentionPolicy containerDeleteRetentionPolicy = default(DeleteRetentionPolicy), LastAccessTimeTrackingPolicy lastAccessTimeTrackingPolicy = default(LastAccessTimeTrackingPolicy))

        {
            this.Cors = cors;
            this.DefaultServiceVersion = defaultServiceVersion;
            this.DeleteRetentionPolicy = deleteRetentionPolicy;
            this.IsVersioningEnabled = isVersioningEnabled;
            this.AutomaticSnapshotPolicyEnabled = automaticSnapshotPolicyEnabled;
            this.ChangeFeed = changeFeed;
            this.RestorePolicy = restorePolicy;
            this.ContainerDeleteRetentionPolicy = containerDeleteRetentionPolicy;
            this.LastAccessTimeTrackingPolicy = lastAccessTimeTrackingPolicy;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets or sets specifies CORS rules for the Blob service. You can include up
        /// to five CorsRule elements in the request. If no CorsRule elements are
        /// included in the request body, all CORS rules will be deleted, and CORS will
        /// be disabled for the Blob service.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "cors")]
        public CorsRules Cors {get; set; }

        /// <summary>
        /// Gets or sets defaultServiceVersion indicates the default version to use for
        /// requests to the Blob service if an incoming request’s version is not
        /// specified. Possible values include version 2008-10-27 and all more recent
        /// versions.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "defaultServiceVersion")]
        public string DefaultServiceVersion {get; set; }

        /// <summary>
        /// Gets or sets the blob service properties for blob soft delete.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "deleteRetentionPolicy")]
        public DeleteRetentionPolicy DeleteRetentionPolicy {get; set; }

        /// <summary>
        /// Gets or sets versioning is enabled if set to true.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "isVersioningEnabled")]
        public bool? IsVersioningEnabled {get; set; }

        /// <summary>
        /// Gets or sets deprecated in favor of isVersioningEnabled property.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "automaticSnapshotPolicyEnabled")]
        public bool? AutomaticSnapshotPolicyEnabled {get; set; }

        /// <summary>
        /// Gets or sets the blob service properties for change feed events.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "changeFeed")]
        public ChangeFeed ChangeFeed {get; set; }

        /// <summary>
        /// Gets or sets the blob service properties for blob restore policy.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "restorePolicy")]
        public RestorePolicyProperties RestorePolicy {get; set; }

        /// <summary>
        /// Gets or sets the blob service properties for container soft delete.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "containerDeleteRetentionPolicy")]
        public DeleteRetentionPolicy ContainerDeleteRetentionPolicy {get; set; }

        /// <summary>
        /// Gets or sets the blob service property to configure last access time based
        /// tracking policy.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "lastAccessTimeTrackingPolicy")]
        public LastAccessTimeTrackingPolicy LastAccessTimeTrackingPolicy {get; set; }
        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {


            if (this.DeleteRetentionPolicy != null)
            {
                this.DeleteRetentionPolicy.Validate();
            }
            if (this.ChangeFeed != null)
            {
                this.ChangeFeed.Validate();
            }
            if (this.RestorePolicy != null)
            {
                this.RestorePolicy.Validate();
            }
            if (this.ContainerDeleteRetentionPolicy != null)
            {
                this.ContainerDeleteRetentionPolicy.Validate();
            }
            if (this.LastAccessTimeTrackingPolicy != null)
            {
                this.LastAccessTimeTrackingPolicy.Validate();
            }
        }
    }
}