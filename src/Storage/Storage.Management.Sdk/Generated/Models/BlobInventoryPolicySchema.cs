// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.Storage.Models
{
    using System.Linq;

    /// <summary>
    /// The storage account blob inventory policy rules.
    /// </summary>
    public partial class BlobInventoryPolicySchema
    {
        /// <summary>
        /// Initializes a new instance of the BlobInventoryPolicySchema class.
        /// </summary>
        public BlobInventoryPolicySchema()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the BlobInventoryPolicySchema class.
        /// </summary>

        /// <param name="enabled">Policy is enabled if set to true.
        /// </param>

        /// <param name="destination">Deprecated Property from API version 2021-04-01 onwards, the required
        /// destination container name must be specified at the rule level
        /// &#39;policy.rule.destination&#39;
        /// </param>

        /// <param name="rules">The storage account blob inventory policy rules. The rule is applied when
        /// it is enabled.
        /// </param>
        public BlobInventoryPolicySchema(bool enabled, System.Collections.Generic.IList<BlobInventoryPolicyRule> rules, string destination = default(string))

        {
            this.Enabled = enabled;
            this.Destination = destination;
            this.Rules = rules;
            CustomInit();
        }
        /// <summary>
        /// Static constructor for BlobInventoryPolicySchema class.
        /// </summary>
        static BlobInventoryPolicySchema()
        {
            Type = "Inventory";
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets or sets policy is enabled if set to true.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "enabled")]
        public bool Enabled {get; set; }

        /// <summary>
        /// Gets deprecated Property from API version 2021-04-01 onwards, the required
        /// destination container name must be specified at the rule level
        /// &#39;policy.rule.destination&#39;
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "destination")]
        public string Destination {get; private set; }

        /// <summary>
        /// Gets or sets the storage account blob inventory policy rules. The rule is
        /// applied when it is enabled.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "rules")]
        public System.Collections.Generic.IList<BlobInventoryPolicyRule> Rules {get; set; }
        /// <summary>
        /// Gets or sets the valid value is Inventory
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "type")]
        public static string Type {get; private set; }
        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (this.Rules == null)
            {
                throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.CannotBeNull, "Rules");
            }


            if (this.Rules != null)
            {
                foreach (var element in this.Rules)
                {
                    if (element != null)
                    {
                        element.Validate();
                    }
                }
            }
        }
    }
}