// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.Storage.Models
{
    using System.Linq;

    /// <summary>
    /// The parameters to list SAS credentials of a storage account.
    /// </summary>
    public partial class AccountSasParameters
    {
        /// <summary>
        /// Initializes a new instance of the AccountSasParameters class.
        /// </summary>
        public AccountSasParameters()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the AccountSasParameters class.
        /// </summary>

        /// <param name="services">The signed services accessible with the account SAS. Possible values
        /// include: Blob (b), Queue (q), Table (t), File (f).
        /// Possible values include: &#39;b&#39;, &#39;q&#39;, &#39;t&#39;, &#39;f&#39;</param>

        /// <param name="resourceTypes">The signed resource types that are accessible with the account SAS. Service
        /// (s): Access to service-level APIs; Container (c): Access to container-level
        /// APIs; Object (o): Access to object-level APIs for blobs, queue messages,
        /// table entities, and files.
        /// Possible values include: &#39;s&#39;, &#39;c&#39;, &#39;o&#39;</param>

        /// <param name="permissions">The signed permissions for the account SAS. Possible values include: Read
        /// (r), Write (w), Delete (d), List (l), Add (a), Create (c), Update (u) and
        /// Process (p).
        /// Possible values include: &#39;r&#39;, &#39;d&#39;, &#39;w&#39;, &#39;l&#39;, &#39;a&#39;, &#39;c&#39;, &#39;u&#39;, &#39;p&#39;</param>

        /// <param name="ipAddressOrRange">An IP address or a range of IP addresses from which to accept requests.
        /// </param>

        /// <param name="protocols">The protocol permitted for a request made with the account SAS.
        /// Possible values include: &#39;https,http&#39;, &#39;https&#39;</param>

        /// <param name="sharedAccessStartTime">The time at which the SAS becomes valid.
        /// </param>

        /// <param name="sharedAccessExpiryTime">The time at which the shared access signature becomes invalid.
        /// </param>

        /// <param name="keyToSign">The key to sign the account SAS token with.
        /// </param>
        public AccountSasParameters(string services, string resourceTypes, string permissions, System.DateTime sharedAccessExpiryTime, string ipAddressOrRange = default(string), HttpProtocol? protocols = default(HttpProtocol?), System.DateTime? sharedAccessStartTime = default(System.DateTime?), string keyToSign = default(string))

        {
            this.Services = services;
            this.ResourceTypes = resourceTypes;
            this.Permissions = permissions;
            this.IPAddressOrRange = ipAddressOrRange;
            this.Protocols = protocols;
            this.SharedAccessStartTime = sharedAccessStartTime;
            this.SharedAccessExpiryTime = sharedAccessExpiryTime;
            this.KeyToSign = keyToSign;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets or sets the signed services accessible with the account SAS. Possible
        /// values include: Blob (b), Queue (q), Table (t), File (f). Possible values include: &#39;b&#39;, &#39;q&#39;, &#39;t&#39;, &#39;f&#39;
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "signedServices")]
        public string Services {get; set; }

        /// <summary>
        /// Gets or sets the signed resource types that are accessible with the account
        /// SAS. Service (s): Access to service-level APIs; Container (c): Access to
        /// container-level APIs; Object (o): Access to object-level APIs for blobs,
        /// queue messages, table entities, and files. Possible values include: &#39;s&#39;, &#39;c&#39;, &#39;o&#39;
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "signedResourceTypes")]
        public string ResourceTypes {get; set; }

        /// <summary>
        /// Gets or sets the signed permissions for the account SAS. Possible values
        /// include: Read (r), Write (w), Delete (d), List (l), Add (a), Create (c),
        /// Update (u) and Process (p). Possible values include: &#39;r&#39;, &#39;d&#39;, &#39;w&#39;, &#39;l&#39;, &#39;a&#39;, &#39;c&#39;, &#39;u&#39;, &#39;p&#39;
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "signedPermission")]
        public string Permissions {get; set; }

        /// <summary>
        /// Gets or sets an IP address or a range of IP addresses from which to accept
        /// requests.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "signedIp")]
        public string IPAddressOrRange {get; set; }

        /// <summary>
        /// Gets or sets the protocol permitted for a request made with the account
        /// SAS. Possible values include: &#39;https,http&#39;, &#39;https&#39;
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "signedProtocol")]
        public HttpProtocol? Protocols {get; set; }

        /// <summary>
        /// Gets or sets the time at which the SAS becomes valid.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "signedStart")]
        public System.DateTime? SharedAccessStartTime {get; set; }

        /// <summary>
        /// Gets or sets the time at which the shared access signature becomes invalid.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "signedExpiry")]
        public System.DateTime SharedAccessExpiryTime {get; set; }

        /// <summary>
        /// Gets or sets the key to sign the account SAS token with.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "keyToSign")]
        public string KeyToSign {get; set; }
        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (this.Services == null)
            {
                throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.CannotBeNull, "Services");
            }
            if (this.ResourceTypes == null)
            {
                throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.CannotBeNull, "ResourceTypes");
            }
            if (this.Permissions == null)
            {
                throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.CannotBeNull, "Permissions");
            }






        }
    }
}