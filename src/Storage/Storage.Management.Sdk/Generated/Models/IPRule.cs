// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.Storage.Models
{
    using System.Linq;

    /// <summary>
    /// IP rule with specific IP or IP range in CIDR format.
    /// </summary>
    public partial class IPRule
    {
        /// <summary>
        /// Initializes a new instance of the IPRule class.
        /// </summary>
        public IPRule()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the IPRule class.
        /// </summary>

        /// <param name="ipAddressOrRange">Specifies the IP or IP range in CIDR format. Only IPV4 address is allowed.
        /// </param>

        /// <param name="action">The action of IP ACL rule.
        /// Possible values include: &#39;Allow&#39;</param>
        public IPRule(string ipAddressOrRange, Action? action = default(Action?))

        {
            this.IPAddressOrRange = ipAddressOrRange;
            this.Action = action;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets or sets specifies the IP or IP range in CIDR format. Only IPV4 address
        /// is allowed.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "value")]
        public string IPAddressOrRange {get; set; }

        /// <summary>
        /// Gets or sets the action of IP ACL rule. Possible values include: &#39;Allow&#39;
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "action")]
        public Action? Action {get; set; }
        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (this.IPAddressOrRange == null)
            {
                throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.CannotBeNull, "IPAddressOrRange");
            }


        }
    }
}