// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.Storage.Models
{
    using System.Linq;

    /// <summary>
    /// Minimum and maximum provisioned storage, IOPS and bandwidth limits for a
    /// file share in the storage account.
    /// </summary>
    public partial class FileShareLimits
    {
        /// <summary>
        /// Initializes a new instance of the FileShareLimits class.
        /// </summary>
        public FileShareLimits()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the FileShareLimits class.
        /// </summary>

        /// <param name="minProvisionedStorageGiB">The minimum provisioned storage quota limit in gibibytes for a file share
        /// in the storage account.
        /// </param>

        /// <param name="maxProvisionedStorageGiB">The maximum provisioned storage quota limit in gibibytes for a file share
        /// in the storage account.
        /// </param>

        /// <param name="minProvisionedIops">The minimum provisioned IOPS limit for a file share in the storage account.
        /// </param>

        /// <param name="maxProvisionedIops">The maximum provisioned IOPS limit for a file share in the storage account.
        /// </param>

        /// <param name="minProvisionedBandwidthMiBPerSec">The minimum provisioned bandwidth limit in mebibytes per second for a file
        /// share in the storage account.
        /// </param>

        /// <param name="maxProvisionedBandwidthMiBPerSec">The maximum provisioned bandwidth limit in mebibytes per second for a file
        /// share in the storage account.
        /// </param>
        public FileShareLimits(int? minProvisionedStorageGiB = default(int?), int? maxProvisionedStorageGiB = default(int?), int? minProvisionedIops = default(int?), int? maxProvisionedIops = default(int?), int? minProvisionedBandwidthMiBPerSec = default(int?), int? maxProvisionedBandwidthMiBPerSec = default(int?))

        {
            this.MinProvisionedStorageGiB = minProvisionedStorageGiB;
            this.MaxProvisionedStorageGiB = maxProvisionedStorageGiB;
            this.MinProvisionedIops = minProvisionedIops;
            this.MaxProvisionedIops = maxProvisionedIops;
            this.MinProvisionedBandwidthMiBPerSec = minProvisionedBandwidthMiBPerSec;
            this.MaxProvisionedBandwidthMiBPerSec = maxProvisionedBandwidthMiBPerSec;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets the minimum provisioned storage quota limit in gibibytes for a file
        /// share in the storage account.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "minProvisionedStorageGiB")]
        public int? MinProvisionedStorageGiB {get; private set; }

        /// <summary>
        /// Gets the maximum provisioned storage quota limit in gibibytes for a file
        /// share in the storage account.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "maxProvisionedStorageGiB")]
        public int? MaxProvisionedStorageGiB {get; private set; }

        /// <summary>
        /// Gets the minimum provisioned IOPS limit for a file share in the storage
        /// account.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "minProvisionedIOPS")]
        public int? MinProvisionedIops {get; private set; }

        /// <summary>
        /// Gets the maximum provisioned IOPS limit for a file share in the storage
        /// account.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "maxProvisionedIOPS")]
        public int? MaxProvisionedIops {get; private set; }

        /// <summary>
        /// Gets the minimum provisioned bandwidth limit in mebibytes per second for a
        /// file share in the storage account.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "minProvisionedBandwidthMiBPerSec")]
        public int? MinProvisionedBandwidthMiBPerSec {get; private set; }

        /// <summary>
        /// Gets the maximum provisioned bandwidth limit in mebibytes per second for a
        /// file share in the storage account.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "maxProvisionedBandwidthMiBPerSec")]
        public int? MaxProvisionedBandwidthMiBPerSec {get; private set; }
    }
}