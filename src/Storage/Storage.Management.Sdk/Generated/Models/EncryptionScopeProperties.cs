// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.Storage.Models
{
    using System.Linq;

    /// <summary>
    /// Properties of the encryption scope.
    /// </summary>
    public partial class EncryptionScopeProperties
    {
        /// <summary>
        /// Initializes a new instance of the EncryptionScopeProperties class.
        /// </summary>
        public EncryptionScopeProperties()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the EncryptionScopeProperties class.
        /// </summary>

        /// <param name="source">The provider for the encryption scope. Possible values (case-insensitive): 
        /// Microsoft.Storage, Microsoft.KeyVault.
        /// Possible values include: &#39;Microsoft.Storage&#39;, &#39;Microsoft.KeyVault&#39;</param>

        /// <param name="state">The state of the encryption scope. Possible values (case-insensitive): 
        /// Enabled, Disabled.
        /// Possible values include: &#39;Enabled&#39;, &#39;Disabled&#39;</param>

        /// <param name="creationTime">Gets the creation date and time of the encryption scope in UTC.
        /// </param>

        /// <param name="lastModifiedTime">Gets the last modification date and time of the encryption scope in UTC.
        /// </param>

        /// <param name="keyVaultProperties">The key vault properties for the encryption scope. This is a required field
        /// if encryption scope &#39;source&#39; attribute is set to &#39;Microsoft.KeyVault&#39;.
        /// </param>

        /// <param name="requireInfrastructureEncryption">A boolean indicating whether or not the service applies a secondary layer
        /// of encryption with platform managed keys for data at rest.
        /// </param>
        public EncryptionScopeProperties(string source = default(string), string state = default(string), System.DateTime? creationTime = default(System.DateTime?), System.DateTime? lastModifiedTime = default(System.DateTime?), EncryptionScopeKeyVaultProperties keyVaultProperties = default(EncryptionScopeKeyVaultProperties), bool? requireInfrastructureEncryption = default(bool?))

        {
            this.Source = source;
            this.State = state;
            this.CreationTime = creationTime;
            this.LastModifiedTime = lastModifiedTime;
            this.KeyVaultProperties = keyVaultProperties;
            this.RequireInfrastructureEncryption = requireInfrastructureEncryption;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets or sets the provider for the encryption scope. Possible values
        /// (case-insensitive):  Microsoft.Storage, Microsoft.KeyVault. Possible values include: &#39;Microsoft.Storage&#39;, &#39;Microsoft.KeyVault&#39;
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "source")]
        public string Source {get; set; }

        /// <summary>
        /// Gets or sets the state of the encryption scope. Possible values
        /// (case-insensitive):  Enabled, Disabled. Possible values include: &#39;Enabled&#39;, &#39;Disabled&#39;
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "state")]
        public string State {get; set; }

        /// <summary>
        /// Gets gets the creation date and time of the encryption scope in UTC.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "creationTime")]
        public System.DateTime? CreationTime {get; private set; }

        /// <summary>
        /// Gets gets the last modification date and time of the encryption scope in
        /// UTC.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "lastModifiedTime")]
        public System.DateTime? LastModifiedTime {get; private set; }

        /// <summary>
        /// Gets or sets the key vault properties for the encryption scope. This is a
        /// required field if encryption scope &#39;source&#39; attribute is set to
        /// &#39;Microsoft.KeyVault&#39;.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "keyVaultProperties")]
        public EncryptionScopeKeyVaultProperties KeyVaultProperties {get; set; }

        /// <summary>
        /// Gets or sets a boolean indicating whether or not the service applies a
        /// secondary layer of encryption with platform managed keys for data at rest.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "requireInfrastructureEncryption")]
        public bool? RequireInfrastructureEncryption {get; set; }
    }
}