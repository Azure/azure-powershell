// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.Storage.Models
{
    using System.Linq;

    /// <summary>
    /// Virtual Network rule.
    /// </summary>
    public partial class VirtualNetworkRule
    {
        /// <summary>
        /// Initializes a new instance of the VirtualNetworkRule class.
        /// </summary>
        public VirtualNetworkRule()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the VirtualNetworkRule class.
        /// </summary>

        /// <param name="virtualNetworkResourceId">Resource ID of a subnet, for example:
        /// /subscriptions/{subscriptionId}/resourceGroups/{groupName}/providers/Microsoft.Network/virtualNetworks/{vnetName}/subnets/{subnetName}.
        /// </param>

        /// <param name="action">The action of virtual network rule.
        /// Possible values include: &#39;Allow&#39;</param>

        /// <param name="state">Gets the state of virtual network rule.
        /// Possible values include: &#39;Provisioning&#39;, &#39;Deprovisioning&#39;, &#39;Succeeded&#39;,
        /// &#39;Failed&#39;, &#39;NetworkSourceDeleted&#39;</param>
        public VirtualNetworkRule(string virtualNetworkResourceId, Action? action = default(Action?), string state = default(string))

        {
            this.VirtualNetworkResourceId = virtualNetworkResourceId;
            this.Action = action;
            this.State = state;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets or sets resource ID of a subnet, for example:
        /// /subscriptions/{subscriptionId}/resourceGroups/{groupName}/providers/Microsoft.Network/virtualNetworks/{vnetName}/subnets/{subnetName}.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "id")]
        public string VirtualNetworkResourceId {get; set; }

        /// <summary>
        /// Gets or sets the action of virtual network rule. Possible values include: &#39;Allow&#39;
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "action")]
        public Action? Action {get; set; }

        /// <summary>
        /// Gets or sets gets the state of virtual network rule. Possible values include: &#39;Provisioning&#39;, &#39;Deprovisioning&#39;, &#39;Succeeded&#39;, &#39;Failed&#39;, &#39;NetworkSourceDeleted&#39;
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "state")]
        public string State {get; set; }
        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (this.VirtualNetworkResourceId == null)
            {
                throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.CannotBeNull, "VirtualNetworkResourceId");
            }



        }
    }
}