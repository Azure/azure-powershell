// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.Storage.Models
{
    using System.Linq;

    /// <summary>
    /// The custom domain assigned to this storage account. This can be set via
    /// Update.
    /// </summary>
    public partial class CustomDomain
    {
        /// <summary>
        /// Initializes a new instance of the CustomDomain class.
        /// </summary>
        public CustomDomain()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the CustomDomain class.
        /// </summary>

        /// <param name="name">Gets or sets the custom domain name assigned to the storage account. Name
        /// is the CNAME source.
        /// </param>

        /// <param name="useSubDomainName">Indicates whether indirect CName validation is enabled. Default value is
        /// false. This should only be set on updates.
        /// </param>
        public CustomDomain(string name, bool? useSubDomainName = default(bool?))

        {
            this.Name = name;
            this.UseSubDomainName = useSubDomainName;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets or sets gets or sets the custom domain name assigned to the storage
        /// account. Name is the CNAME source.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "name")]
        public string Name {get; set; }

        /// <summary>
        /// Gets or sets indicates whether indirect CName validation is enabled.
        /// Default value is false. This should only be set on updates.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "useSubDomainName")]
        public bool? UseSubDomainName {get; set; }
        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (this.Name == null)
            {
                throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.CannotBeNull, "Name");
            }

        }
    }
}