// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.Storage.Models
{
    using System.Linq;

    public partial class PermissionScope
    {
        /// <summary>
        /// Initializes a new instance of the PermissionScope class.
        /// </summary>
        public PermissionScope()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the PermissionScope class.
        /// </summary>

        /// <param name="permissions">The permissions for the local user. Possible values include: Read (r),
        /// Write (w), Delete (d), List (l), and Create (c).
        /// </param>

        /// <param name="service">The service used by the local user, e.g. blob, file.
        /// </param>

        /// <param name="resourceName">The name of resource, normally the container name or the file share name,
        /// used by the local user.
        /// </param>
        public PermissionScope(string permissions, string service, string resourceName)

        {
            this.Permissions = permissions;
            this.Service = service;
            this.ResourceName = resourceName;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets or sets the permissions for the local user. Possible values include:
        /// Read (r), Write (w), Delete (d), List (l), and Create (c).
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "permissions")]
        public string Permissions {get; set; }

        /// <summary>
        /// Gets or sets the service used by the local user, e.g. blob, file.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "service")]
        public string Service {get; set; }

        /// <summary>
        /// Gets or sets the name of resource, normally the container name or the file
        /// share name, used by the local user.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "resourceName")]
        public string ResourceName {get; set; }
        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (this.Permissions == null)
            {
                throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.CannotBeNull, "Permissions");
            }
            if (this.Service == null)
            {
                throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.CannotBeNull, "Service");
            }
            if (this.ResourceName == null)
            {
                throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.CannotBeNull, "ResourceName");
            }



        }
    }
}