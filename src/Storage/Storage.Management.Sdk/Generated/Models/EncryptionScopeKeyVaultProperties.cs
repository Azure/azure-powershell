// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.Storage.Models
{
    using System.Linq;

    /// <summary>
    /// The key vault properties for the encryption scope. This is a required field
    /// if encryption scope &#39;source&#39; attribute is set to &#39;Microsoft.KeyVault&#39;.
    /// </summary>
    public partial class EncryptionScopeKeyVaultProperties
    {
        /// <summary>
        /// Initializes a new instance of the EncryptionScopeKeyVaultProperties class.
        /// </summary>
        public EncryptionScopeKeyVaultProperties()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the EncryptionScopeKeyVaultProperties class.
        /// </summary>

        /// <param name="keyUri">The object identifier for a key vault key object. When applied, the
        /// encryption scope will use the key referenced by the identifier to enable
        /// customer-managed key support on this encryption scope.
        /// </param>

        /// <param name="currentVersionedKeyIdentifier">The object identifier of the current versioned Key Vault Key in use.
        /// </param>

        /// <param name="lastKeyRotationTimestamp">Timestamp of last rotation of the Key Vault Key.
        /// </param>
        public EncryptionScopeKeyVaultProperties(string keyUri = default(string), string currentVersionedKeyIdentifier = default(string), System.DateTime? lastKeyRotationTimestamp = default(System.DateTime?))

        {
            this.KeyUri = keyUri;
            this.CurrentVersionedKeyIdentifier = currentVersionedKeyIdentifier;
            this.LastKeyRotationTimestamp = lastKeyRotationTimestamp;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets or sets the object identifier for a key vault key object. When
        /// applied, the encryption scope will use the key referenced by the identifier
        /// to enable customer-managed key support on this encryption scope.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "keyUri")]
        public string KeyUri {get; set; }

        /// <summary>
        /// Gets the object identifier of the current versioned Key Vault Key in use.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "currentVersionedKeyIdentifier")]
        public string CurrentVersionedKeyIdentifier {get; private set; }

        /// <summary>
        /// Gets timestamp of last rotation of the Key Vault Key.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "lastKeyRotationTimestamp")]
        public System.DateTime? LastKeyRotationTimestamp {get; private set; }
    }
}