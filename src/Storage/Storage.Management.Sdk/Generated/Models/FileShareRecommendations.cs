// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.Storage.Models
{
    using System.Linq;

    /// <summary>
    /// Constants used for calculating recommended provisioned IOPS and bandwidth
    /// for a file share in the storage account.
    /// </summary>
    public partial class FileShareRecommendations
    {
        /// <summary>
        /// Initializes a new instance of the FileShareRecommendations class.
        /// </summary>
        public FileShareRecommendations()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the FileShareRecommendations class.
        /// </summary>

        /// <param name="baseIops">The base IOPS in the file share provisioned IOPS recommendation formula.
        /// </param>

        /// <param name="ioScalar">The scalar for IO in the file share provisioned IOPS recommendation
        /// formula.
        /// </param>

        /// <param name="baseBandwidthMiBPerSec">The base bandwidth in the file share provisioned bandwidth recommendation
        /// formula.
        /// </param>

        /// <param name="bandwidthScalar">The scalar for bandwidth in the file share provisioned bandwidth
        /// recommendation formula.
        /// </param>
        public FileShareRecommendations(int? baseIops = default(int?), double? ioScalar = default(double?), int? baseBandwidthMiBPerSec = default(int?), double? bandwidthScalar = default(double?))

        {
            this.BaseIops = baseIops;
            this.IoScalar = ioScalar;
            this.BaseBandwidthMiBPerSec = baseBandwidthMiBPerSec;
            this.BandwidthScalar = bandwidthScalar;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets the base IOPS in the file share provisioned IOPS recommendation
        /// formula.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "baseIOPS")]
        public int? BaseIops {get; private set; }

        /// <summary>
        /// Gets the scalar for IO in the file share provisioned IOPS recommendation
        /// formula.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "ioScalar")]
        public double? IoScalar {get; private set; }

        /// <summary>
        /// Gets the base bandwidth in the file share provisioned bandwidth
        /// recommendation formula.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "baseBandwidthMiBPerSec")]
        public int? BaseBandwidthMiBPerSec {get; private set; }

        /// <summary>
        /// Gets the scalar for bandwidth in the file share provisioned bandwidth
        /// recommendation formula.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "bandwidthScalar")]
        public double? BandwidthScalar {get; private set; }
    }
}