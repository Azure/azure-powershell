// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.Storage.Models
{
    using System.Linq;

    /// <summary>
    /// Describes Storage Resource Usage.
    /// </summary>
    public partial class Usage
    {
        /// <summary>
        /// Initializes a new instance of the Usage class.
        /// </summary>
        public Usage()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the Usage class.
        /// </summary>

        /// <param name="unit">Gets the unit of measurement.
        /// Possible values include: &#39;Count&#39;, &#39;Bytes&#39;, &#39;Seconds&#39;, &#39;Percent&#39;,
        /// &#39;CountsPerSecond&#39;, &#39;BytesPerSecond&#39;</param>

        /// <param name="currentValue">Gets the current count of the allocated resources in the subscription.
        /// </param>

        /// <param name="limit">Gets the maximum count of the resources that can be allocated in the
        /// subscription.
        /// </param>

        /// <param name="name">Gets the name of the type of usage.
        /// </param>
        public Usage(UsageUnit? unit = default(UsageUnit?), int? currentValue = default(int?), int? limit = default(int?), UsageName name = default(UsageName))

        {
            this.Unit = unit;
            this.CurrentValue = currentValue;
            this.Limit = limit;
            this.Name = name;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets gets the unit of measurement. Possible values include: &#39;Count&#39;, &#39;Bytes&#39;, &#39;Seconds&#39;, &#39;Percent&#39;, &#39;CountsPerSecond&#39;, &#39;BytesPerSecond&#39;
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "unit")]
        public UsageUnit? Unit {get; private set; }

        /// <summary>
        /// Gets gets the current count of the allocated resources in the subscription.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "currentValue")]
        public int? CurrentValue {get; private set; }

        /// <summary>
        /// Gets gets the maximum count of the resources that can be allocated in the
        /// subscription.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "limit")]
        public int? Limit {get; private set; }

        /// <summary>
        /// Gets gets the name of the type of usage.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "name")]
        public UsageName Name {get; private set; }
    }
}