// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.Storage.Models
{
    using System.Linq;

    /// <summary>
    /// The trigger parameters update for the storage task assignment execution
    /// </summary>
    public partial class TriggerParameters
    {
        /// <summary>
        /// Initializes a new instance of the TriggerParameters class.
        /// </summary>
        public TriggerParameters()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the TriggerParameters class.
        /// </summary>

        /// <param name="startFrom">When to start task execution. This is a required field when
        /// ExecutionTrigger.properties.type is &#39;OnSchedule&#39;; this property should not
        /// be present when ExecutionTrigger.properties.type is &#39;RunOnce&#39;
        /// </param>

        /// <param name="interval">Run interval of task execution. This is a required field when
        /// ExecutionTrigger.properties.type is &#39;OnSchedule&#39;; this property should not
        /// be present when ExecutionTrigger.properties.type is &#39;RunOnce&#39;
        /// </param>

        /// <param name="intervalUnit">Run interval unit of task execution. This is a required field when
        /// ExecutionTrigger.properties.type is &#39;OnSchedule&#39;; this property should not
        /// be present when ExecutionTrigger.properties.type is &#39;RunOnce&#39;
        /// Possible values include: &#39;Days&#39;</param>

        /// <param name="endBy">When to end task execution. This is a required field when
        /// ExecutionTrigger.properties.type is &#39;OnSchedule&#39;; this property should not
        /// be present when ExecutionTrigger.properties.type is &#39;RunOnce&#39;
        /// </param>

        /// <param name="startOn">When to start task execution. This is an optional field when
        /// ExecutionTrigger.properties.type is &#39;RunOnce&#39;; this property should not be
        /// present when ExecutionTrigger.properties.type is &#39;OnSchedule&#39;
        /// </param>
        public TriggerParameters(System.DateTime? startFrom = default(System.DateTime?), int? interval = default(int?), string intervalUnit = default(string), System.DateTime? endBy = default(System.DateTime?), System.DateTime? startOn = default(System.DateTime?))

        {
            this.StartFrom = startFrom;
            this.Interval = interval;
            this.IntervalUnit = intervalUnit;
            this.EndBy = endBy;
            this.StartOn = startOn;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets or sets when to start task execution. This is a required field when
        /// ExecutionTrigger.properties.type is &#39;OnSchedule&#39;; this property should not
        /// be present when ExecutionTrigger.properties.type is &#39;RunOnce&#39;
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "startFrom")]
        public System.DateTime? StartFrom {get; set; }

        /// <summary>
        /// Gets or sets run interval of task execution. This is a required field when
        /// ExecutionTrigger.properties.type is &#39;OnSchedule&#39;; this property should not
        /// be present when ExecutionTrigger.properties.type is &#39;RunOnce&#39;
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "interval")]
        public int? Interval {get; set; }

        /// <summary>
        /// Gets or sets run interval unit of task execution. This is a required field
        /// when ExecutionTrigger.properties.type is &#39;OnSchedule&#39;; this property should
        /// not be present when ExecutionTrigger.properties.type is &#39;RunOnce&#39; Possible values include: &#39;Days&#39;
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "intervalUnit")]
        public string IntervalUnit {get; set; }

        /// <summary>
        /// Gets or sets when to end task execution. This is a required field when
        /// ExecutionTrigger.properties.type is &#39;OnSchedule&#39;; this property should not
        /// be present when ExecutionTrigger.properties.type is &#39;RunOnce&#39;
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "endBy")]
        public System.DateTime? EndBy {get; set; }

        /// <summary>
        /// Gets or sets when to start task execution. This is an optional field when
        /// ExecutionTrigger.properties.type is &#39;RunOnce&#39;; this property should not be
        /// present when ExecutionTrigger.properties.type is &#39;OnSchedule&#39;
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "startOn")]
        public System.DateTime? StartOn {get; set; }
        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (this.Interval != null)
            {
                if (this.Interval < 1)
                {
                    throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.InclusiveMinimum, "Interval", 1);
                }
            }

        }
    }
}