// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.Storage.Models
{
    using System.Linq;

    /// <summary>
    /// The Storage Account Local User keys.
    /// </summary>
    public partial class LocalUserKeys
    {
        /// <summary>
        /// Initializes a new instance of the LocalUserKeys class.
        /// </summary>
        public LocalUserKeys()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the LocalUserKeys class.
        /// </summary>

        /// <param name="sshAuthorizedKeys">Optional, local user ssh authorized keys for SFTP.
        /// </param>

        /// <param name="sharedKey">Auto generated by the server for SMB authentication.
        /// </param>
        public LocalUserKeys(System.Collections.Generic.IList<SshPublicKey> sshAuthorizedKeys = default(System.Collections.Generic.IList<SshPublicKey>), string sharedKey = default(string))

        {
            this.SshAuthorizedKeys = sshAuthorizedKeys;
            this.SharedKey = sharedKey;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets or sets optional, local user ssh authorized keys for SFTP.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "sshAuthorizedKeys")]
        public System.Collections.Generic.IList<SshPublicKey> SshAuthorizedKeys {get; set; }

        /// <summary>
        /// Gets auto generated by the server for SMB authentication.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "sharedKey")]
        public string SharedKey {get; private set; }
    }
}