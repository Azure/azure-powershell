// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.Storage.Models
{
    using System.Linq;

    /// <summary>
    /// The blob service properties for blob restore policy
    /// </summary>
    public partial class RestorePolicyProperties
    {
        /// <summary>
        /// Initializes a new instance of the RestorePolicyProperties class.
        /// </summary>
        public RestorePolicyProperties()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the RestorePolicyProperties class.
        /// </summary>

        /// <param name="enabled">Blob restore is enabled if set to true.
        /// </param>

        /// <param name="days">how long this blob can be restored. It should be great than zero and less
        /// than DeleteRetentionPolicy.days.
        /// </param>

        /// <param name="lastEnabledTime">Deprecated in favor of minRestoreTime property.
        /// </param>

        /// <param name="minRestoreTime">Returns the minimum date and time that the restore can be started.
        /// </param>
        public RestorePolicyProperties(bool enabled, int? days = default(int?), System.DateTime? lastEnabledTime = default(System.DateTime?), System.DateTime? minRestoreTime = default(System.DateTime?))

        {
            this.Enabled = enabled;
            this.Days = days;
            this.LastEnabledTime = lastEnabledTime;
            this.MinRestoreTime = minRestoreTime;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets or sets blob restore is enabled if set to true.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "enabled")]
        public bool Enabled {get; set; }

        /// <summary>
        /// Gets or sets how long this blob can be restored. It should be great than
        /// zero and less than DeleteRetentionPolicy.days.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "days")]
        public int? Days {get; set; }

        /// <summary>
        /// Gets deprecated in favor of minRestoreTime property.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "lastEnabledTime")]
        public System.DateTime? LastEnabledTime {get; private set; }

        /// <summary>
        /// Gets returns the minimum date and time that the restore can be started.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "minRestoreTime")]
        public System.DateTime? MinRestoreTime {get; private set; }
        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (this.Days != null)
            {
                if (this.Days > 365)
                {
                    throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.InclusiveMaximum, "Days", 365);
                }
                if (this.Days < 1)
                {
                    throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.InclusiveMinimum, "Days", 1);
                }
            }
        }
    }
}