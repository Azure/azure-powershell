// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Storage.Models
{
    using static Microsoft.Azure.PowerShell.Cmdlets.Storage.Runtime.Extensions;

    /// <summary>
    /// An object that wraps the blob inventory rule. Each rule is uniquely defined by name.
    /// </summary>
    public partial class BlobInventoryPolicyRule :
        Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IBlobInventoryPolicyRule,
        Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IBlobInventoryPolicyRuleInternal
    {

        /// <summary>
        /// When set the policy filters the objects that are created in the last N days. Where N is an integer value between 1 to
        /// 36500.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Origin(Microsoft.Azure.PowerShell.Cmdlets.Storage.PropertyOrigin.Inlined)]
        public int? CreationTimeLastNDay { get => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IBlobInventoryPolicyDefinitionInternal)Definition).CreationTimeLastNDay; set => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IBlobInventoryPolicyDefinitionInternal)Definition).CreationTimeLastNDay = value ?? default(int); }

        /// <summary>Backing field for <see cref="Definition" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IBlobInventoryPolicyDefinition _definition;

        /// <summary>An object that defines the blob inventory policy rule.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Origin(Microsoft.Azure.PowerShell.Cmdlets.Storage.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IBlobInventoryPolicyDefinition Definition { get => (this._definition = this._definition ?? new Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.BlobInventoryPolicyDefinition()); set => this._definition = value; }

        /// <summary>This is a required field, it specifies the format for the inventory files.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Origin(Microsoft.Azure.PowerShell.Cmdlets.Storage.PropertyOrigin.Inlined)]
        public string DefinitionFormat { get => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IBlobInventoryPolicyDefinitionInternal)Definition).Format; set => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IBlobInventoryPolicyDefinitionInternal)Definition).Format = value ; }

        /// <summary>
        /// This is a required field. This field specifies the scope of the inventory created either at the blob or container level.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Origin(Microsoft.Azure.PowerShell.Cmdlets.Storage.PropertyOrigin.Inlined)]
        public string DefinitionObjectType { get => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IBlobInventoryPolicyDefinitionInternal)Definition).ObjectType; set => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IBlobInventoryPolicyDefinitionInternal)Definition).ObjectType = value ; }

        /// <summary>
        /// This is a required field. This field is used to schedule an inventory formation.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Origin(Microsoft.Azure.PowerShell.Cmdlets.Storage.PropertyOrigin.Inlined)]
        public string DefinitionSchedule { get => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IBlobInventoryPolicyDefinitionInternal)Definition).Schedule; set => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IBlobInventoryPolicyDefinitionInternal)Definition).Schedule = value ; }

        /// <summary>
        /// This is a required field. This field specifies the fields and properties of the object to be included in the inventory.
        /// The Schema field value 'Name' is always required. The valid values for this field for the 'Blob' definition.objectType
        /// include 'Name, Creation-Time, Last-Modified, Content-Length, Content-MD5, BlobType, AccessTier, AccessTierChangeTime,
        /// AccessTierInferred, Tags, Expiry-Time, hdi_isfolder, Owner, Group, Permissions, Acl, Snapshot, VersionId, IsCurrentVersion,
        /// Metadata, LastAccessTime, Tags, Etag, ContentType, ContentEncoding, ContentLanguage, ContentCRC64, CacheControl, ContentDisposition,
        /// LeaseStatus, LeaseState, LeaseDuration, ServerEncrypted, Deleted, DeletionId, DeletedTime, RemainingRetentionDays, ImmutabilityPolicyUntilDate,
        /// ImmutabilityPolicyMode, LegalHold, CopyId, CopyStatus, CopySource, CopyProgress, CopyCompletionTime, CopyStatusDescription,
        /// CustomerProvidedKeySha256, RehydratePriority, ArchiveStatus, XmsBlobSequenceNumber, EncryptionScope, IncrementalCopy,
        /// TagCount'. For Blob object type schema field value 'DeletedTime' is applicable only for Hns enabled accounts. The valid
        /// values for 'Container' definition.objectType include 'Name, Last-Modified, Metadata, LeaseStatus, LeaseState, LeaseDuration,
        /// PublicAccess, HasImmutabilityPolicy, HasLegalHold, Etag, DefaultEncryptionScope, DenyEncryptionScopeOverride, ImmutableStorageWithVersioningEnabled,
        /// Deleted, Version, DeletedTime, RemainingRetentionDays'. Schema field values 'Expiry-Time, hdi_isfolder, Owner, Group,
        /// Permissions, Acl, DeletionId' are valid only for Hns enabled accounts.Schema field values 'Tags, TagCount' are only valid
        /// for Non-Hns accounts.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Origin(Microsoft.Azure.PowerShell.Cmdlets.Storage.PropertyOrigin.Inlined)]
        public System.Collections.Generic.List<string> DefinitionSchemaField { get => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IBlobInventoryPolicyDefinitionInternal)Definition).SchemaField; set => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IBlobInventoryPolicyDefinitionInternal)Definition).SchemaField = value ; }

        /// <summary>Backing field for <see cref="Destination" /> property.</summary>
        private string _destination;

        /// <summary>Container name where blob inventory files are stored. Must be pre-created.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Origin(Microsoft.Azure.PowerShell.Cmdlets.Storage.PropertyOrigin.Owned)]
        public string Destination { get => this._destination; set => this._destination = value; }

        /// <summary>Backing field for <see cref="Enabled" /> property.</summary>
        private bool _enabled;

        /// <summary>Rule is enabled when set to true.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Origin(Microsoft.Azure.PowerShell.Cmdlets.Storage.PropertyOrigin.Owned)]
        public bool Enabled { get => this._enabled; set => this._enabled = value; }

        /// <summary>
        /// An array of predefined enum values. Valid values include blockBlob, appendBlob, pageBlob. Hns accounts does not support
        /// pageBlobs. This field is required when definition.objectType property is set to 'Blob'.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Origin(Microsoft.Azure.PowerShell.Cmdlets.Storage.PropertyOrigin.Inlined)]
        public System.Collections.Generic.List<string> FilterBlobType { get => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IBlobInventoryPolicyDefinitionInternal)Definition).FilterBlobType; set => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IBlobInventoryPolicyDefinitionInternal)Definition).FilterBlobType = value ?? null /* arrayOf */; }

        /// <summary>
        /// An array of strings with maximum 10 blob prefixes to be excluded from the inventory.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Origin(Microsoft.Azure.PowerShell.Cmdlets.Storage.PropertyOrigin.Inlined)]
        public System.Collections.Generic.List<string> FilterExcludePrefix { get => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IBlobInventoryPolicyDefinitionInternal)Definition).FilterExcludePrefix; set => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IBlobInventoryPolicyDefinitionInternal)Definition).FilterExcludePrefix = value ?? null /* arrayOf */; }

        /// <summary>
        /// Includes blob versions in blob inventory when value is set to true. The definition.schemaFields values 'VersionId and
        /// IsCurrentVersion' are required if this property is set to true, else they must be excluded.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Origin(Microsoft.Azure.PowerShell.Cmdlets.Storage.PropertyOrigin.Inlined)]
        public bool? FilterIncludeBlobVersion { get => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IBlobInventoryPolicyDefinitionInternal)Definition).FilterIncludeBlobVersion; set => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IBlobInventoryPolicyDefinitionInternal)Definition).FilterIncludeBlobVersion = value ?? default(bool); }

        /// <summary>
        /// For 'Container' definition.objectType the definition.schemaFields must include 'Deleted, Version, DeletedTime and RemainingRetentionDays'.
        /// For 'Blob' definition.objectType and HNS enabled storage accounts the definition.schemaFields must include 'DeletionId,
        /// Deleted, DeletedTime and RemainingRetentionDays' and for Hns disabled accounts the definition.schemaFields must include
        /// 'Deleted and RemainingRetentionDays', else it must be excluded.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Origin(Microsoft.Azure.PowerShell.Cmdlets.Storage.PropertyOrigin.Inlined)]
        public bool? FilterIncludeDeleted { get => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IBlobInventoryPolicyDefinitionInternal)Definition).FilterIncludeDeleted; set => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IBlobInventoryPolicyDefinitionInternal)Definition).FilterIncludeDeleted = value ?? default(bool); }

        /// <summary>
        /// Includes blob snapshots in blob inventory when value is set to true. The definition.schemaFields value 'Snapshot' is required
        /// if this property is set to true, else it must be excluded.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Origin(Microsoft.Azure.PowerShell.Cmdlets.Storage.PropertyOrigin.Inlined)]
        public bool? FilterIncludeSnapshot { get => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IBlobInventoryPolicyDefinitionInternal)Definition).FilterIncludeSnapshot; set => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IBlobInventoryPolicyDefinitionInternal)Definition).FilterIncludeSnapshot = value ?? default(bool); }

        /// <summary>
        /// An array of strings with maximum 10 blob prefixes to be included in the inventory.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Origin(Microsoft.Azure.PowerShell.Cmdlets.Storage.PropertyOrigin.Inlined)]
        public System.Collections.Generic.List<string> FilterPrefixMatch { get => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IBlobInventoryPolicyDefinitionInternal)Definition).FilterPrefixMatch; set => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IBlobInventoryPolicyDefinitionInternal)Definition).FilterPrefixMatch = value ?? null /* arrayOf */; }

        /// <summary>Internal Acessors for Definition</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IBlobInventoryPolicyDefinition Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IBlobInventoryPolicyRuleInternal.Definition { get => (this._definition = this._definition ?? new Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.BlobInventoryPolicyDefinition()); set { {_definition = value;} } }

        /// <summary>Internal Acessors for DefinitionFilter</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IBlobInventoryPolicyFilter Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IBlobInventoryPolicyRuleInternal.DefinitionFilter { get => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IBlobInventoryPolicyDefinitionInternal)Definition).Filter; set => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IBlobInventoryPolicyDefinitionInternal)Definition).Filter = value; }

        /// <summary>Internal Acessors for FilterCreationTime</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IBlobInventoryCreationTime Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IBlobInventoryPolicyRuleInternal.FilterCreationTime { get => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IBlobInventoryPolicyDefinitionInternal)Definition).FilterCreationTime; set => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IBlobInventoryPolicyDefinitionInternal)Definition).FilterCreationTime = value; }

        /// <summary>Backing field for <see cref="Name" /> property.</summary>
        private string _name;

        /// <summary>
        /// A rule name can contain any combination of alpha numeric characters. Rule name is case-sensitive. It must be unique within
        /// a policy.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Origin(Microsoft.Azure.PowerShell.Cmdlets.Storage.PropertyOrigin.Owned)]
        public string Name { get => this._name; set => this._name = value; }

        /// <summary>Creates an new <see cref="BlobInventoryPolicyRule" /> instance.</summary>
        public BlobInventoryPolicyRule()
        {

        }
    }
    /// An object that wraps the blob inventory rule. Each rule is uniquely defined by name.
    public partial interface IBlobInventoryPolicyRule :
        Microsoft.Azure.PowerShell.Cmdlets.Storage.Runtime.IJsonSerializable
    {
        /// <summary>
        /// When set the policy filters the objects that are created in the last N days. Where N is an integer value between 1 to
        /// 36500.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"When set the policy filters the objects that are created in the last N days. Where N is an integer value between 1 to 36500.",
        SerializedName = @"lastNDays",
        PossibleTypes = new [] { typeof(int) })]
        int? CreationTimeLastNDay { get; set; }
        /// <summary>This is a required field, it specifies the format for the inventory files.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"This is a required field, it specifies the format for the inventory files.",
        SerializedName = @"format",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.Storage.PSArgumentCompleterAttribute("Csv", "Parquet")]
        string DefinitionFormat { get; set; }
        /// <summary>
        /// This is a required field. This field specifies the scope of the inventory created either at the blob or container level.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"This is a required field. This field specifies the scope of the inventory created either at the blob or container level.",
        SerializedName = @"objectType",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.Storage.PSArgumentCompleterAttribute("Blob", "Container")]
        string DefinitionObjectType { get; set; }
        /// <summary>
        /// This is a required field. This field is used to schedule an inventory formation.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"This is a required field. This field is used to schedule an inventory formation.",
        SerializedName = @"schedule",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.Storage.PSArgumentCompleterAttribute("Daily", "Weekly")]
        string DefinitionSchedule { get; set; }
        /// <summary>
        /// This is a required field. This field specifies the fields and properties of the object to be included in the inventory.
        /// The Schema field value 'Name' is always required. The valid values for this field for the 'Blob' definition.objectType
        /// include 'Name, Creation-Time, Last-Modified, Content-Length, Content-MD5, BlobType, AccessTier, AccessTierChangeTime,
        /// AccessTierInferred, Tags, Expiry-Time, hdi_isfolder, Owner, Group, Permissions, Acl, Snapshot, VersionId, IsCurrentVersion,
        /// Metadata, LastAccessTime, Tags, Etag, ContentType, ContentEncoding, ContentLanguage, ContentCRC64, CacheControl, ContentDisposition,
        /// LeaseStatus, LeaseState, LeaseDuration, ServerEncrypted, Deleted, DeletionId, DeletedTime, RemainingRetentionDays, ImmutabilityPolicyUntilDate,
        /// ImmutabilityPolicyMode, LegalHold, CopyId, CopyStatus, CopySource, CopyProgress, CopyCompletionTime, CopyStatusDescription,
        /// CustomerProvidedKeySha256, RehydratePriority, ArchiveStatus, XmsBlobSequenceNumber, EncryptionScope, IncrementalCopy,
        /// TagCount'. For Blob object type schema field value 'DeletedTime' is applicable only for Hns enabled accounts. The valid
        /// values for 'Container' definition.objectType include 'Name, Last-Modified, Metadata, LeaseStatus, LeaseState, LeaseDuration,
        /// PublicAccess, HasImmutabilityPolicy, HasLegalHold, Etag, DefaultEncryptionScope, DenyEncryptionScopeOverride, ImmutableStorageWithVersioningEnabled,
        /// Deleted, Version, DeletedTime, RemainingRetentionDays'. Schema field values 'Expiry-Time, hdi_isfolder, Owner, Group,
        /// Permissions, Acl, DeletionId' are valid only for Hns enabled accounts.Schema field values 'Tags, TagCount' are only valid
        /// for Non-Hns accounts.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"This is a required field. This field specifies the fields and properties of the object to be included in the inventory. The Schema field value 'Name' is always required. The valid values for this field for the 'Blob' definition.objectType include 'Name, Creation-Time, Last-Modified, Content-Length, Content-MD5, BlobType, AccessTier, AccessTierChangeTime, AccessTierInferred, Tags, Expiry-Time, hdi_isfolder, Owner, Group, Permissions, Acl, Snapshot, VersionId, IsCurrentVersion, Metadata, LastAccessTime, Tags, Etag, ContentType, ContentEncoding, ContentLanguage, ContentCRC64, CacheControl, ContentDisposition, LeaseStatus, LeaseState, LeaseDuration, ServerEncrypted, Deleted, DeletionId, DeletedTime, RemainingRetentionDays, ImmutabilityPolicyUntilDate, ImmutabilityPolicyMode, LegalHold, CopyId, CopyStatus, CopySource, CopyProgress, CopyCompletionTime, CopyStatusDescription, CustomerProvidedKeySha256, RehydratePriority, ArchiveStatus, XmsBlobSequenceNumber, EncryptionScope, IncrementalCopy, TagCount'. For Blob object type schema field value 'DeletedTime' is applicable only for Hns enabled accounts. The valid values for 'Container' definition.objectType include 'Name, Last-Modified, Metadata, LeaseStatus, LeaseState, LeaseDuration, PublicAccess, HasImmutabilityPolicy, HasLegalHold, Etag, DefaultEncryptionScope, DenyEncryptionScopeOverride, ImmutableStorageWithVersioningEnabled, Deleted, Version, DeletedTime, RemainingRetentionDays'. Schema field values 'Expiry-Time, hdi_isfolder, Owner, Group, Permissions, Acl, DeletionId' are valid only for Hns enabled accounts.Schema field values 'Tags, TagCount' are only valid for Non-Hns accounts.",
        SerializedName = @"schemaFields",
        PossibleTypes = new [] { typeof(string) })]
        System.Collections.Generic.List<string> DefinitionSchemaField { get; set; }
        /// <summary>Container name where blob inventory files are stored. Must be pre-created.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Container name where blob inventory files are stored. Must be pre-created.",
        SerializedName = @"destination",
        PossibleTypes = new [] { typeof(string) })]
        string Destination { get; set; }
        /// <summary>Rule is enabled when set to true.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Rule is enabled when set to true.",
        SerializedName = @"enabled",
        PossibleTypes = new [] { typeof(bool) })]
        bool Enabled { get; set; }
        /// <summary>
        /// An array of predefined enum values. Valid values include blockBlob, appendBlob, pageBlob. Hns accounts does not support
        /// pageBlobs. This field is required when definition.objectType property is set to 'Blob'.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"An array of predefined enum values. Valid values include blockBlob, appendBlob, pageBlob. Hns accounts does not support pageBlobs. This field is required when definition.objectType property is set to 'Blob'.",
        SerializedName = @"blobTypes",
        PossibleTypes = new [] { typeof(string) })]
        System.Collections.Generic.List<string> FilterBlobType { get; set; }
        /// <summary>
        /// An array of strings with maximum 10 blob prefixes to be excluded from the inventory.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"An array of strings with maximum 10 blob prefixes to be excluded from the inventory.",
        SerializedName = @"excludePrefix",
        PossibleTypes = new [] { typeof(string) })]
        System.Collections.Generic.List<string> FilterExcludePrefix { get; set; }
        /// <summary>
        /// Includes blob versions in blob inventory when value is set to true. The definition.schemaFields values 'VersionId and
        /// IsCurrentVersion' are required if this property is set to true, else they must be excluded.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Includes blob versions in blob inventory when value is set to true. The definition.schemaFields values 'VersionId and IsCurrentVersion' are required if this property is set to true, else they must be excluded.",
        SerializedName = @"includeBlobVersions",
        PossibleTypes = new [] { typeof(bool) })]
        bool? FilterIncludeBlobVersion { get; set; }
        /// <summary>
        /// For 'Container' definition.objectType the definition.schemaFields must include 'Deleted, Version, DeletedTime and RemainingRetentionDays'.
        /// For 'Blob' definition.objectType and HNS enabled storage accounts the definition.schemaFields must include 'DeletionId,
        /// Deleted, DeletedTime and RemainingRetentionDays' and for Hns disabled accounts the definition.schemaFields must include
        /// 'Deleted and RemainingRetentionDays', else it must be excluded.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"For 'Container' definition.objectType the definition.schemaFields must include 'Deleted, Version, DeletedTime and RemainingRetentionDays'. For 'Blob' definition.objectType and HNS enabled storage accounts the definition.schemaFields must include 'DeletionId, Deleted, DeletedTime and RemainingRetentionDays' and for Hns disabled accounts the definition.schemaFields must include 'Deleted and RemainingRetentionDays', else it must be excluded.",
        SerializedName = @"includeDeleted",
        PossibleTypes = new [] { typeof(bool) })]
        bool? FilterIncludeDeleted { get; set; }
        /// <summary>
        /// Includes blob snapshots in blob inventory when value is set to true. The definition.schemaFields value 'Snapshot' is required
        /// if this property is set to true, else it must be excluded.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Includes blob snapshots in blob inventory when value is set to true. The definition.schemaFields value 'Snapshot' is required if this property is set to true, else it must be excluded.",
        SerializedName = @"includeSnapshots",
        PossibleTypes = new [] { typeof(bool) })]
        bool? FilterIncludeSnapshot { get; set; }
        /// <summary>
        /// An array of strings with maximum 10 blob prefixes to be included in the inventory.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"An array of strings with maximum 10 blob prefixes to be included in the inventory.",
        SerializedName = @"prefixMatch",
        PossibleTypes = new [] { typeof(string) })]
        System.Collections.Generic.List<string> FilterPrefixMatch { get; set; }
        /// <summary>
        /// A rule name can contain any combination of alpha numeric characters. Rule name is case-sensitive. It must be unique within
        /// a policy.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"A rule name can contain any combination of alpha numeric characters. Rule name is case-sensitive. It must be unique within a policy.",
        SerializedName = @"name",
        PossibleTypes = new [] { typeof(string) })]
        string Name { get; set; }

    }
    /// An object that wraps the blob inventory rule. Each rule is uniquely defined by name.
    internal partial interface IBlobInventoryPolicyRuleInternal

    {
        /// <summary>
        /// When set the policy filters the objects that are created in the last N days. Where N is an integer value between 1 to
        /// 36500.
        /// </summary>
        int? CreationTimeLastNDay { get; set; }
        /// <summary>An object that defines the blob inventory policy rule.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IBlobInventoryPolicyDefinition Definition { get; set; }
        /// <summary>An object that defines the filter set.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IBlobInventoryPolicyFilter DefinitionFilter { get; set; }
        /// <summary>This is a required field, it specifies the format for the inventory files.</summary>
        [global::Microsoft.Azure.PowerShell.Cmdlets.Storage.PSArgumentCompleterAttribute("Csv", "Parquet")]
        string DefinitionFormat { get; set; }
        /// <summary>
        /// This is a required field. This field specifies the scope of the inventory created either at the blob or container level.
        /// </summary>
        [global::Microsoft.Azure.PowerShell.Cmdlets.Storage.PSArgumentCompleterAttribute("Blob", "Container")]
        string DefinitionObjectType { get; set; }
        /// <summary>
        /// This is a required field. This field is used to schedule an inventory formation.
        /// </summary>
        [global::Microsoft.Azure.PowerShell.Cmdlets.Storage.PSArgumentCompleterAttribute("Daily", "Weekly")]
        string DefinitionSchedule { get; set; }
        /// <summary>
        /// This is a required field. This field specifies the fields and properties of the object to be included in the inventory.
        /// The Schema field value 'Name' is always required. The valid values for this field for the 'Blob' definition.objectType
        /// include 'Name, Creation-Time, Last-Modified, Content-Length, Content-MD5, BlobType, AccessTier, AccessTierChangeTime,
        /// AccessTierInferred, Tags, Expiry-Time, hdi_isfolder, Owner, Group, Permissions, Acl, Snapshot, VersionId, IsCurrentVersion,
        /// Metadata, LastAccessTime, Tags, Etag, ContentType, ContentEncoding, ContentLanguage, ContentCRC64, CacheControl, ContentDisposition,
        /// LeaseStatus, LeaseState, LeaseDuration, ServerEncrypted, Deleted, DeletionId, DeletedTime, RemainingRetentionDays, ImmutabilityPolicyUntilDate,
        /// ImmutabilityPolicyMode, LegalHold, CopyId, CopyStatus, CopySource, CopyProgress, CopyCompletionTime, CopyStatusDescription,
        /// CustomerProvidedKeySha256, RehydratePriority, ArchiveStatus, XmsBlobSequenceNumber, EncryptionScope, IncrementalCopy,
        /// TagCount'. For Blob object type schema field value 'DeletedTime' is applicable only for Hns enabled accounts. The valid
        /// values for 'Container' definition.objectType include 'Name, Last-Modified, Metadata, LeaseStatus, LeaseState, LeaseDuration,
        /// PublicAccess, HasImmutabilityPolicy, HasLegalHold, Etag, DefaultEncryptionScope, DenyEncryptionScopeOverride, ImmutableStorageWithVersioningEnabled,
        /// Deleted, Version, DeletedTime, RemainingRetentionDays'. Schema field values 'Expiry-Time, hdi_isfolder, Owner, Group,
        /// Permissions, Acl, DeletionId' are valid only for Hns enabled accounts.Schema field values 'Tags, TagCount' are only valid
        /// for Non-Hns accounts.
        /// </summary>
        System.Collections.Generic.List<string> DefinitionSchemaField { get; set; }
        /// <summary>Container name where blob inventory files are stored. Must be pre-created.</summary>
        string Destination { get; set; }
        /// <summary>Rule is enabled when set to true.</summary>
        bool Enabled { get; set; }
        /// <summary>
        /// An array of predefined enum values. Valid values include blockBlob, appendBlob, pageBlob. Hns accounts does not support
        /// pageBlobs. This field is required when definition.objectType property is set to 'Blob'.
        /// </summary>
        System.Collections.Generic.List<string> FilterBlobType { get; set; }
        /// <summary>This property is used to filter objects based on the object creation time</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IBlobInventoryCreationTime FilterCreationTime { get; set; }
        /// <summary>
        /// An array of strings with maximum 10 blob prefixes to be excluded from the inventory.
        /// </summary>
        System.Collections.Generic.List<string> FilterExcludePrefix { get; set; }
        /// <summary>
        /// Includes blob versions in blob inventory when value is set to true. The definition.schemaFields values 'VersionId and
        /// IsCurrentVersion' are required if this property is set to true, else they must be excluded.
        /// </summary>
        bool? FilterIncludeBlobVersion { get; set; }
        /// <summary>
        /// For 'Container' definition.objectType the definition.schemaFields must include 'Deleted, Version, DeletedTime and RemainingRetentionDays'.
        /// For 'Blob' definition.objectType and HNS enabled storage accounts the definition.schemaFields must include 'DeletionId,
        /// Deleted, DeletedTime and RemainingRetentionDays' and for Hns disabled accounts the definition.schemaFields must include
        /// 'Deleted and RemainingRetentionDays', else it must be excluded.
        /// </summary>
        bool? FilterIncludeDeleted { get; set; }
        /// <summary>
        /// Includes blob snapshots in blob inventory when value is set to true. The definition.schemaFields value 'Snapshot' is required
        /// if this property is set to true, else it must be excluded.
        /// </summary>
        bool? FilterIncludeSnapshot { get; set; }
        /// <summary>
        /// An array of strings with maximum 10 blob prefixes to be included in the inventory.
        /// </summary>
        System.Collections.Generic.List<string> FilterPrefixMatch { get; set; }
        /// <summary>
        /// A rule name can contain any combination of alpha numeric characters. Rule name is case-sensitive. It must be unique within
        /// a policy.
        /// </summary>
        string Name { get; set; }

    }
}