// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Storage.Models
{
    using static Microsoft.Azure.PowerShell.Cmdlets.Storage.Runtime.Extensions;

    /// <summary>
    /// The key vault properties for the encryption scope. This is a required field if encryption scope 'source' attribute is
    /// set to 'Microsoft.KeyVault'.
    /// </summary>
    public partial class EncryptionScopeKeyVaultProperties :
        Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IEncryptionScopeKeyVaultProperties,
        Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IEncryptionScopeKeyVaultPropertiesInternal
    {

        /// <summary>Backing field for <see cref="CurrentVersionedKeyIdentifier" /> property.</summary>
        private string _currentVersionedKeyIdentifier;

        /// <summary>The object identifier of the current versioned Key Vault Key in use.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Origin(Microsoft.Azure.PowerShell.Cmdlets.Storage.PropertyOrigin.Owned)]
        public string CurrentVersionedKeyIdentifier { get => this._currentVersionedKeyIdentifier; }

        /// <summary>Backing field for <see cref="KeyUri" /> property.</summary>
        private string _keyUri;

        /// <summary>
        /// The object identifier for a key vault key object. When applied, the encryption scope will use the key referenced by the
        /// identifier to enable customer-managed key support on this encryption scope.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Origin(Microsoft.Azure.PowerShell.Cmdlets.Storage.PropertyOrigin.Owned)]
        public string KeyUri { get => this._keyUri; set => this._keyUri = value; }

        /// <summary>Backing field for <see cref="LastKeyRotationTimestamp" /> property.</summary>
        private global::System.DateTime? _lastKeyRotationTimestamp;

        /// <summary>Timestamp of last rotation of the Key Vault Key.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Origin(Microsoft.Azure.PowerShell.Cmdlets.Storage.PropertyOrigin.Owned)]
        public global::System.DateTime? LastKeyRotationTimestamp { get => this._lastKeyRotationTimestamp; }

        /// <summary>Internal Acessors for CurrentVersionedKeyIdentifier</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IEncryptionScopeKeyVaultPropertiesInternal.CurrentVersionedKeyIdentifier { get => this._currentVersionedKeyIdentifier; set { {_currentVersionedKeyIdentifier = value;} } }

        /// <summary>Internal Acessors for LastKeyRotationTimestamp</summary>
        global::System.DateTime? Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IEncryptionScopeKeyVaultPropertiesInternal.LastKeyRotationTimestamp { get => this._lastKeyRotationTimestamp; set { {_lastKeyRotationTimestamp = value;} } }

        /// <summary>Creates an new <see cref="EncryptionScopeKeyVaultProperties" /> instance.</summary>
        public EncryptionScopeKeyVaultProperties()
        {

        }
    }
    /// The key vault properties for the encryption scope. This is a required field if encryption scope 'source' attribute is
    /// set to 'Microsoft.KeyVault'.
    public partial interface IEncryptionScopeKeyVaultProperties :
        Microsoft.Azure.PowerShell.Cmdlets.Storage.Runtime.IJsonSerializable
    {
        /// <summary>The object identifier of the current versioned Key Vault Key in use.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The object identifier of the current versioned Key Vault Key in use.",
        SerializedName = @"currentVersionedKeyIdentifier",
        PossibleTypes = new [] { typeof(string) })]
        string CurrentVersionedKeyIdentifier { get;  }
        /// <summary>
        /// The object identifier for a key vault key object. When applied, the encryption scope will use the key referenced by the
        /// identifier to enable customer-managed key support on this encryption scope.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The object identifier for a key vault key object. When applied, the encryption scope will use the key referenced by the identifier to enable customer-managed key support on this encryption scope.",
        SerializedName = @"keyUri",
        PossibleTypes = new [] { typeof(string) })]
        string KeyUri { get; set; }
        /// <summary>Timestamp of last rotation of the Key Vault Key.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"Timestamp of last rotation of the Key Vault Key.",
        SerializedName = @"lastKeyRotationTimestamp",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? LastKeyRotationTimestamp { get;  }

    }
    /// The key vault properties for the encryption scope. This is a required field if encryption scope 'source' attribute is
    /// set to 'Microsoft.KeyVault'.
    internal partial interface IEncryptionScopeKeyVaultPropertiesInternal

    {
        /// <summary>The object identifier of the current versioned Key Vault Key in use.</summary>
        string CurrentVersionedKeyIdentifier { get; set; }
        /// <summary>
        /// The object identifier for a key vault key object. When applied, the encryption scope will use the key referenced by the
        /// identifier to enable customer-managed key support on this encryption scope.
        /// </summary>
        string KeyUri { get; set; }
        /// <summary>Timestamp of last rotation of the Key Vault Key.</summary>
        global::System.DateTime? LastKeyRotationTimestamp { get; set; }

    }
}