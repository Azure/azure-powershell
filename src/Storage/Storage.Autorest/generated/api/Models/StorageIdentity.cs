// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Storage.Models
{
    using static Microsoft.Azure.PowerShell.Cmdlets.Storage.Runtime.Extensions;

    public partial class StorageIdentity :
        Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IStorageIdentity,
        Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IStorageIdentityInternal
    {

        /// <summary>Backing field for <see cref="AccountName" /> property.</summary>
        private string _accountName;

        /// <summary>
        /// The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters
        /// in length and use numbers and lower-case letters only.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Origin(Microsoft.Azure.PowerShell.Cmdlets.Storage.PropertyOrigin.Owned)]
        public string AccountName { get => this._accountName; set => this._accountName = value; }

        /// <summary>Backing field for <see cref="BlobInventoryPolicyName" /> property.</summary>
        private string _blobInventoryPolicyName;

        /// <summary>
        /// The name of the storage account blob inventory policy. It should always be 'default'
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Origin(Microsoft.Azure.PowerShell.Cmdlets.Storage.PropertyOrigin.Owned)]
        public string BlobInventoryPolicyName { get => this._blobInventoryPolicyName; set => this._blobInventoryPolicyName = value; }

        /// <summary>Backing field for <see cref="DeletedAccountName" /> property.</summary>
        private string _deletedAccountName;

        /// <summary>Name of the deleted storage account.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Origin(Microsoft.Azure.PowerShell.Cmdlets.Storage.PropertyOrigin.Owned)]
        public string DeletedAccountName { get => this._deletedAccountName; set => this._deletedAccountName = value; }

        /// <summary>Backing field for <see cref="EncryptionScopeName" /> property.</summary>
        private string _encryptionScopeName;

        /// <summary>
        /// The name of the encryption scope within the specified storage account. Encryption scope names must be between 3 and 63
        /// characters in length and use numbers, lower-case letters and dash (-) only. Every dash (-) character must be immediately
        /// preceded and followed by a letter or number.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Origin(Microsoft.Azure.PowerShell.Cmdlets.Storage.PropertyOrigin.Owned)]
        public string EncryptionScopeName { get => this._encryptionScopeName; set => this._encryptionScopeName = value; }

        /// <summary>Backing field for <see cref="Id" /> property.</summary>
        private string _id;

        /// <summary>Resource identity path</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Origin(Microsoft.Azure.PowerShell.Cmdlets.Storage.PropertyOrigin.Owned)]
        public string Id { get => this._id; set => this._id = value; }

        /// <summary>Backing field for <see cref="Location" /> property.</summary>
        private string _location;

        /// <summary>The location of the deleted storage account.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Origin(Microsoft.Azure.PowerShell.Cmdlets.Storage.PropertyOrigin.Owned)]
        public string Location { get => this._location; set => this._location = value; }

        /// <summary>Backing field for <see cref="ManagementPolicyName" /> property.</summary>
        private string _managementPolicyName;

        /// <summary>
        /// The name of the Storage Account Management Policy. It should always be 'default'
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Origin(Microsoft.Azure.PowerShell.Cmdlets.Storage.PropertyOrigin.Owned)]
        public string ManagementPolicyName { get => this._managementPolicyName; set => this._managementPolicyName = value; }

        /// <summary>Backing field for <see cref="MigrationName" /> property.</summary>
        private string _migrationName;

        /// <summary>The name of the Storage Account Migration. It should always be 'default'</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Origin(Microsoft.Azure.PowerShell.Cmdlets.Storage.PropertyOrigin.Owned)]
        public string MigrationName { get => this._migrationName; set => this._migrationName = value; }

        /// <summary>Backing field for <see cref="ObjectReplicationPolicyId" /> property.</summary>
        private string _objectReplicationPolicyId;

        /// <summary>
        /// For the destination account, provide the value 'default'. Configure the policy on the destination account first. For the
        /// source account, provide the value of the policy ID that is returned when you download the policy that was defined on the
        /// destination account. The policy is downloaded as a JSON file.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Origin(Microsoft.Azure.PowerShell.Cmdlets.Storage.PropertyOrigin.Owned)]
        public string ObjectReplicationPolicyId { get => this._objectReplicationPolicyId; set => this._objectReplicationPolicyId = value; }

        /// <summary>Backing field for <see cref="PrivateEndpointConnectionName" /> property.</summary>
        private string _privateEndpointConnectionName;

        /// <summary>The name of the private endpoint connection associated with the Azure resource</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Origin(Microsoft.Azure.PowerShell.Cmdlets.Storage.PropertyOrigin.Owned)]
        public string PrivateEndpointConnectionName { get => this._privateEndpointConnectionName; set => this._privateEndpointConnectionName = value; }

        /// <summary>Backing field for <see cref="ResourceGroupName" /> property.</summary>
        private string _resourceGroupName;

        /// <summary>
        /// The name of the resource group within the user's subscription. The name is case insensitive.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Origin(Microsoft.Azure.PowerShell.Cmdlets.Storage.PropertyOrigin.Owned)]
        public string ResourceGroupName { get => this._resourceGroupName; set => this._resourceGroupName = value; }

        /// <summary>Backing field for <see cref="SubscriptionId" /> property.</summary>
        private string _subscriptionId;

        /// <summary>The ID of the target subscription.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Origin(Microsoft.Azure.PowerShell.Cmdlets.Storage.PropertyOrigin.Owned)]
        public string SubscriptionId { get => this._subscriptionId; set => this._subscriptionId = value; }

        /// <summary>Backing field for <see cref="Username" /> property.</summary>
        private string _username;

        /// <summary>
        /// The name of local user. The username must contain lowercase letters and numbers only. It must be unique only within the
        /// storage account.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Origin(Microsoft.Azure.PowerShell.Cmdlets.Storage.PropertyOrigin.Owned)]
        public string Username { get => this._username; set => this._username = value; }

        /// <summary>Creates an new <see cref="StorageIdentity" /> instance.</summary>
        public StorageIdentity()
        {

        }
    }
    public partial interface IStorageIdentity :
        Microsoft.Azure.PowerShell.Cmdlets.Storage.Runtime.IJsonSerializable
    {
        /// <summary>
        /// The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters
        /// in length and use numbers and lower-case letters only.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only.",
        SerializedName = @"accountName",
        PossibleTypes = new [] { typeof(string) })]
        string AccountName { get; set; }
        /// <summary>
        /// The name of the storage account blob inventory policy. It should always be 'default'
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The name of the storage account blob inventory policy. It should always be 'default'",
        SerializedName = @"blobInventoryPolicyName",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.Storage.PSArgumentCompleterAttribute("default")]
        string BlobInventoryPolicyName { get; set; }
        /// <summary>Name of the deleted storage account.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Name of the deleted storage account.",
        SerializedName = @"deletedAccountName",
        PossibleTypes = new [] { typeof(string) })]
        string DeletedAccountName { get; set; }
        /// <summary>
        /// The name of the encryption scope within the specified storage account. Encryption scope names must be between 3 and 63
        /// characters in length and use numbers, lower-case letters and dash (-) only. Every dash (-) character must be immediately
        /// preceded and followed by a letter or number.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The name of the encryption scope within the specified storage account. Encryption scope names must be between 3 and 63 characters in length and use numbers, lower-case letters and dash (-) only. Every dash (-) character must be immediately preceded and followed by a letter or number.",
        SerializedName = @"encryptionScopeName",
        PossibleTypes = new [] { typeof(string) })]
        string EncryptionScopeName { get; set; }
        /// <summary>Resource identity path</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Resource identity path",
        SerializedName = @"id",
        PossibleTypes = new [] { typeof(string) })]
        string Id { get; set; }
        /// <summary>The location of the deleted storage account.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The location of the deleted storage account.",
        SerializedName = @"location",
        PossibleTypes = new [] { typeof(string) })]
        string Location { get; set; }
        /// <summary>
        /// The name of the Storage Account Management Policy. It should always be 'default'
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The name of the Storage Account Management Policy. It should always be 'default'",
        SerializedName = @"managementPolicyName",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.Storage.PSArgumentCompleterAttribute("default")]
        string ManagementPolicyName { get; set; }
        /// <summary>The name of the Storage Account Migration. It should always be 'default'</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The name of the Storage Account Migration. It should always be 'default'",
        SerializedName = @"migrationName",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.Storage.PSArgumentCompleterAttribute("default")]
        string MigrationName { get; set; }
        /// <summary>
        /// For the destination account, provide the value 'default'. Configure the policy on the destination account first. For the
        /// source account, provide the value of the policy ID that is returned when you download the policy that was defined on the
        /// destination account. The policy is downloaded as a JSON file.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"For the destination account, provide the value 'default'. Configure the policy on the destination account first. For the source account, provide the value of the policy ID that is returned when you download the policy that was defined on the destination account. The policy is downloaded as a JSON file.",
        SerializedName = @"objectReplicationPolicyId",
        PossibleTypes = new [] { typeof(string) })]
        string ObjectReplicationPolicyId { get; set; }
        /// <summary>The name of the private endpoint connection associated with the Azure resource</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The name of the private endpoint connection associated with the Azure resource",
        SerializedName = @"privateEndpointConnectionName",
        PossibleTypes = new [] { typeof(string) })]
        string PrivateEndpointConnectionName { get; set; }
        /// <summary>
        /// The name of the resource group within the user's subscription. The name is case insensitive.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The name of the resource group within the user's subscription. The name is case insensitive.",
        SerializedName = @"resourceGroupName",
        PossibleTypes = new [] { typeof(string) })]
        string ResourceGroupName { get; set; }
        /// <summary>The ID of the target subscription.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The ID of the target subscription.",
        SerializedName = @"subscriptionId",
        PossibleTypes = new [] { typeof(string) })]
        string SubscriptionId { get; set; }
        /// <summary>
        /// The name of local user. The username must contain lowercase letters and numbers only. It must be unique only within the
        /// storage account.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The name of local user. The username must contain lowercase letters and numbers only. It must be unique only within the storage account.",
        SerializedName = @"username",
        PossibleTypes = new [] { typeof(string) })]
        string Username { get; set; }

    }
    internal partial interface IStorageIdentityInternal

    {
        /// <summary>
        /// The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters
        /// in length and use numbers and lower-case letters only.
        /// </summary>
        string AccountName { get; set; }
        /// <summary>
        /// The name of the storage account blob inventory policy. It should always be 'default'
        /// </summary>
        [global::Microsoft.Azure.PowerShell.Cmdlets.Storage.PSArgumentCompleterAttribute("default")]
        string BlobInventoryPolicyName { get; set; }
        /// <summary>Name of the deleted storage account.</summary>
        string DeletedAccountName { get; set; }
        /// <summary>
        /// The name of the encryption scope within the specified storage account. Encryption scope names must be between 3 and 63
        /// characters in length and use numbers, lower-case letters and dash (-) only. Every dash (-) character must be immediately
        /// preceded and followed by a letter or number.
        /// </summary>
        string EncryptionScopeName { get; set; }
        /// <summary>Resource identity path</summary>
        string Id { get; set; }
        /// <summary>The location of the deleted storage account.</summary>
        string Location { get; set; }
        /// <summary>
        /// The name of the Storage Account Management Policy. It should always be 'default'
        /// </summary>
        [global::Microsoft.Azure.PowerShell.Cmdlets.Storage.PSArgumentCompleterAttribute("default")]
        string ManagementPolicyName { get; set; }
        /// <summary>The name of the Storage Account Migration. It should always be 'default'</summary>
        [global::Microsoft.Azure.PowerShell.Cmdlets.Storage.PSArgumentCompleterAttribute("default")]
        string MigrationName { get; set; }
        /// <summary>
        /// For the destination account, provide the value 'default'. Configure the policy on the destination account first. For the
        /// source account, provide the value of the policy ID that is returned when you download the policy that was defined on the
        /// destination account. The policy is downloaded as a JSON file.
        /// </summary>
        string ObjectReplicationPolicyId { get; set; }
        /// <summary>The name of the private endpoint connection associated with the Azure resource</summary>
        string PrivateEndpointConnectionName { get; set; }
        /// <summary>
        /// The name of the resource group within the user's subscription. The name is case insensitive.
        /// </summary>
        string ResourceGroupName { get; set; }
        /// <summary>The ID of the target subscription.</summary>
        string SubscriptionId { get; set; }
        /// <summary>
        /// The name of local user. The username must contain lowercase letters and numbers only. It must be unique only within the
        /// storage account.
        /// </summary>
        string Username { get; set; }

    }
}