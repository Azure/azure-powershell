// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Storage.Models
{
    using static Microsoft.Azure.PowerShell.Cmdlets.Storage.Runtime.Extensions;

    /// <summary>Blob index tag based filtering for blob objects</summary>
    public partial class TagFilter :
        Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.ITagFilter,
        Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.ITagFilterInternal
    {

        /// <summary>Backing field for <see cref="Name" /> property.</summary>
        private string _name;

        /// <summary>This is the filter tag name, it can have 1 - 128 characters</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Origin(Microsoft.Azure.PowerShell.Cmdlets.Storage.PropertyOrigin.Owned)]
        public string Name { get => this._name; set => this._name = value; }

        /// <summary>Backing field for <see cref="Op" /> property.</summary>
        private string _op;

        /// <summary>
        /// This is the comparison operator which is used for object comparison and filtering. Only == (equality operator) is currently
        /// supported
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Origin(Microsoft.Azure.PowerShell.Cmdlets.Storage.PropertyOrigin.Owned)]
        public string Op { get => this._op; set => this._op = value; }

        /// <summary>Backing field for <see cref="Value" /> property.</summary>
        private string _value;

        /// <summary>
        /// This is the filter tag value field used for tag based filtering, it can have 0 - 256 characters
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Origin(Microsoft.Azure.PowerShell.Cmdlets.Storage.PropertyOrigin.Owned)]
        public string Value { get => this._value; set => this._value = value; }

        /// <summary>Creates an new <see cref="TagFilter" /> instance.</summary>
        public TagFilter()
        {

        }
    }
    /// Blob index tag based filtering for blob objects
    public partial interface ITagFilter :
        Microsoft.Azure.PowerShell.Cmdlets.Storage.Runtime.IJsonSerializable
    {
        /// <summary>This is the filter tag name, it can have 1 - 128 characters</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"This is the filter tag name, it can have 1 - 128 characters",
        SerializedName = @"name",
        PossibleTypes = new [] { typeof(string) })]
        string Name { get; set; }
        /// <summary>
        /// This is the comparison operator which is used for object comparison and filtering. Only == (equality operator) is currently
        /// supported
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"This is the comparison operator which is used for object comparison and filtering. Only == (equality operator) is currently supported",
        SerializedName = @"op",
        PossibleTypes = new [] { typeof(string) })]
        string Op { get; set; }
        /// <summary>
        /// This is the filter tag value field used for tag based filtering, it can have 0 - 256 characters
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"This is the filter tag value field used for tag based filtering, it can have 0 - 256 characters",
        SerializedName = @"value",
        PossibleTypes = new [] { typeof(string) })]
        string Value { get; set; }

    }
    /// Blob index tag based filtering for blob objects
    internal partial interface ITagFilterInternal

    {
        /// <summary>This is the filter tag name, it can have 1 - 128 characters</summary>
        string Name { get; set; }
        /// <summary>
        /// This is the comparison operator which is used for object comparison and filtering. Only == (equality operator) is currently
        /// supported
        /// </summary>
        string Op { get; set; }
        /// <summary>
        /// This is the filter tag value field used for tag based filtering, it can have 0 - 256 characters
        /// </summary>
        string Value { get; set; }

    }
}