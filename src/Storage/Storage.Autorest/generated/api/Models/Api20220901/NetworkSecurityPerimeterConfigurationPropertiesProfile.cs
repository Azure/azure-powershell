// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api20220901
{
    using static Microsoft.Azure.PowerShell.Cmdlets.Storage.Runtime.Extensions;

    /// <summary>Network Security Perimeter profile</summary>
    public partial class NetworkSecurityPerimeterConfigurationPropertiesProfile :
        Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api20220901.INetworkSecurityPerimeterConfigurationPropertiesProfile,
        Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api20220901.INetworkSecurityPerimeterConfigurationPropertiesProfileInternal
    {

        /// <summary>Backing field for <see cref="AccessRule" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api20220901.INspAccessRule[] _accessRule;

        /// <summary>List of Access Rules</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Origin(Microsoft.Azure.PowerShell.Cmdlets.Storage.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api20220901.INspAccessRule[] AccessRule { get => this._accessRule; set => this._accessRule = value; }

        /// <summary>Backing field for <see cref="AccessRulesVersion" /> property.</summary>
        private float? _accessRulesVersion;

        /// <summary>Current access rules version</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Origin(Microsoft.Azure.PowerShell.Cmdlets.Storage.PropertyOrigin.Owned)]
        public float? AccessRulesVersion { get => this._accessRulesVersion; set => this._accessRulesVersion = value; }

        /// <summary>Backing field for <see cref="DiagnosticSettingsVersion" /> property.</summary>
        private float? _diagnosticSettingsVersion;

        /// <summary>Diagnostic settings version</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Origin(Microsoft.Azure.PowerShell.Cmdlets.Storage.PropertyOrigin.Owned)]
        public float? DiagnosticSettingsVersion { get => this._diagnosticSettingsVersion; set => this._diagnosticSettingsVersion = value; }

        /// <summary>Backing field for <see cref="EnabledLogCategory" /> property.</summary>
        private string[] _enabledLogCategory;

        /// <summary>Enabled logging categories</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Origin(Microsoft.Azure.PowerShell.Cmdlets.Storage.PropertyOrigin.Owned)]
        public string[] EnabledLogCategory { get => this._enabledLogCategory; set => this._enabledLogCategory = value; }

        /// <summary>Backing field for <see cref="Name" /> property.</summary>
        private string _name;

        /// <summary>Name of the resource</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Origin(Microsoft.Azure.PowerShell.Cmdlets.Storage.PropertyOrigin.Owned)]
        public string Name { get => this._name; set => this._name = value; }

        /// <summary>
        /// Creates an new <see cref="NetworkSecurityPerimeterConfigurationPropertiesProfile" /> instance.
        /// </summary>
        public NetworkSecurityPerimeterConfigurationPropertiesProfile()
        {

        }
    }
    /// Network Security Perimeter profile
    public partial interface INetworkSecurityPerimeterConfigurationPropertiesProfile :
        Microsoft.Azure.PowerShell.Cmdlets.Storage.Runtime.IJsonSerializable
    {
        /// <summary>List of Access Rules</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"List of Access Rules",
        SerializedName = @"accessRules",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api20220901.INspAccessRule) })]
        Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api20220901.INspAccessRule[] AccessRule { get; set; }
        /// <summary>Current access rules version</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Current access rules version",
        SerializedName = @"accessRulesVersion",
        PossibleTypes = new [] { typeof(float) })]
        float? AccessRulesVersion { get; set; }
        /// <summary>Diagnostic settings version</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Diagnostic settings version",
        SerializedName = @"diagnosticSettingsVersion",
        PossibleTypes = new [] { typeof(float) })]
        float? DiagnosticSettingsVersion { get; set; }
        /// <summary>Enabled logging categories</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Enabled logging categories",
        SerializedName = @"enabledLogCategories",
        PossibleTypes = new [] { typeof(string) })]
        string[] EnabledLogCategory { get; set; }
        /// <summary>Name of the resource</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Name of the resource",
        SerializedName = @"name",
        PossibleTypes = new [] { typeof(string) })]
        string Name { get; set; }

    }
    /// Network Security Perimeter profile
    internal partial interface INetworkSecurityPerimeterConfigurationPropertiesProfileInternal

    {
        /// <summary>List of Access Rules</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api20220901.INspAccessRule[] AccessRule { get; set; }
        /// <summary>Current access rules version</summary>
        float? AccessRulesVersion { get; set; }
        /// <summary>Diagnostic settings version</summary>
        float? DiagnosticSettingsVersion { get; set; }
        /// <summary>Enabled logging categories</summary>
        string[] EnabledLogCategory { get; set; }
        /// <summary>Name of the resource</summary>
        string Name { get; set; }

    }
}