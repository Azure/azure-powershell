// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Storage.Models
{
    using static Microsoft.Azure.PowerShell.Cmdlets.Storage.Runtime.Extensions;

    /// <summary>Properties of the storage task assignment.</summary>
    public partial class StorageTaskAssignmentProperties :
        Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IStorageTaskAssignmentProperties,
        Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IStorageTaskAssignmentPropertiesInternal
    {

        /// <summary>Backing field for <see cref="Description" /> property.</summary>
        private string _description;

        /// <summary>Text that describes the purpose of the storage task assignment</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Origin(Microsoft.Azure.PowerShell.Cmdlets.Storage.PropertyOrigin.Owned)]
        public string Description { get => this._description; set => this._description = value; }

        /// <summary>Backing field for <see cref="Enabled" /> property.</summary>
        private bool _enabled;

        /// <summary>Whether the storage task assignment is enabled or not</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Origin(Microsoft.Azure.PowerShell.Cmdlets.Storage.PropertyOrigin.Owned)]
        public bool Enabled { get => this._enabled; set => this._enabled = value; }

        /// <summary>
        /// When to end task execution. This is a required field when ExecutionTrigger.properties.type is 'OnSchedule'; this property
        /// should not be present when ExecutionTrigger.properties.type is 'RunOnce'
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Origin(Microsoft.Azure.PowerShell.Cmdlets.Storage.PropertyOrigin.Inlined)]
        public global::System.DateTime? EndBy { get => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IStorageTaskAssignmentExecutionContextInternal)ExecutionContext).EndBy; set => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IStorageTaskAssignmentExecutionContextInternal)ExecutionContext).EndBy = value ?? default(global::System.DateTime); }

        /// <summary>Backing field for <see cref="ExecutionContext" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IStorageTaskAssignmentExecutionContext _executionContext;

        /// <summary>The storage task assignment execution context</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Origin(Microsoft.Azure.PowerShell.Cmdlets.Storage.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IStorageTaskAssignmentExecutionContext ExecutionContext { get => (this._executionContext = this._executionContext ?? new Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.StorageTaskAssignmentExecutionContext()); set => this._executionContext = value; }

        /// <summary>
        /// Run interval of task execution. This is a required field when ExecutionTrigger.properties.type is 'OnSchedule'; this property
        /// should not be present when ExecutionTrigger.properties.type is 'RunOnce'
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Origin(Microsoft.Azure.PowerShell.Cmdlets.Storage.PropertyOrigin.Inlined)]
        public int? Interval { get => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IStorageTaskAssignmentExecutionContextInternal)ExecutionContext).Interval; set => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IStorageTaskAssignmentExecutionContextInternal)ExecutionContext).Interval = value ?? default(int); }

        /// <summary>
        /// Run interval unit of task execution. This is a required field when ExecutionTrigger.properties.type is 'OnSchedule'; this
        /// property should not be present when ExecutionTrigger.properties.type is 'RunOnce'
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Origin(Microsoft.Azure.PowerShell.Cmdlets.Storage.PropertyOrigin.Inlined)]
        public string IntervalUnit { get => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IStorageTaskAssignmentExecutionContextInternal)ExecutionContext).IntervalUnit; set => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IStorageTaskAssignmentExecutionContextInternal)ExecutionContext).IntervalUnit = value ?? null; }

        /// <summary>Internal Acessors for ExecutionContext</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IStorageTaskAssignmentExecutionContext Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IStorageTaskAssignmentPropertiesInternal.ExecutionContext { get => (this._executionContext = this._executionContext ?? new Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.StorageTaskAssignmentExecutionContext()); set { {_executionContext = value;} } }

        /// <summary>Internal Acessors for ExecutionContextTarget</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IExecutionTarget Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IStorageTaskAssignmentPropertiesInternal.ExecutionContextTarget { get => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IStorageTaskAssignmentExecutionContextInternal)ExecutionContext).Target; set => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IStorageTaskAssignmentExecutionContextInternal)ExecutionContext).Target = value; }

        /// <summary>Internal Acessors for ExecutionContextTrigger</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IExecutionTrigger Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IStorageTaskAssignmentPropertiesInternal.ExecutionContextTrigger { get => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IStorageTaskAssignmentExecutionContextInternal)ExecutionContext).Trigger; set => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IStorageTaskAssignmentExecutionContextInternal)ExecutionContext).Trigger = value; }

        /// <summary>Internal Acessors for ProvisioningState</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IStorageTaskAssignmentPropertiesInternal.ProvisioningState { get => this._provisioningState; set { {_provisioningState = value;} } }

        /// <summary>Internal Acessors for Report</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IStorageTaskAssignmentReport Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IStorageTaskAssignmentPropertiesInternal.Report { get => (this._report = this._report ?? new Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.StorageTaskAssignmentReport()); set { {_report = value;} } }

        /// <summary>Internal Acessors for RunStatus</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IStorageTaskReportProperties Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IStorageTaskAssignmentPropertiesInternal.RunStatus { get => (this._runStatus = this._runStatus ?? new Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.StorageTaskReportProperties()); set { {_runStatus = value;} } }

        /// <summary>Internal Acessors for RunStatusEnum</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IStorageTaskAssignmentPropertiesInternal.RunStatusEnum { get => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IStorageTaskReportPropertiesInternal)RunStatus).RunStatusEnum; set => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IStorageTaskReportPropertiesInternal)RunStatus).RunStatusEnum = value; }

        /// <summary>Internal Acessors for RunStatusError</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IStorageTaskAssignmentPropertiesInternal.RunStatusError { get => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IStorageTaskReportPropertiesInternal)RunStatus).RunStatusError; set => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IStorageTaskReportPropertiesInternal)RunStatus).RunStatusError = value; }

        /// <summary>Internal Acessors for RunStatusFinishTime</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IStorageTaskAssignmentPropertiesInternal.RunStatusFinishTime { get => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IStorageTaskReportPropertiesInternal)RunStatus).FinishTime; set => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IStorageTaskReportPropertiesInternal)RunStatus).FinishTime = value; }

        /// <summary>Internal Acessors for RunStatusObjectFailedCount</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IStorageTaskAssignmentPropertiesInternal.RunStatusObjectFailedCount { get => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IStorageTaskReportPropertiesInternal)RunStatus).ObjectFailedCount; set => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IStorageTaskReportPropertiesInternal)RunStatus).ObjectFailedCount = value; }

        /// <summary>Internal Acessors for RunStatusObjectsOperatedOnCount</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IStorageTaskAssignmentPropertiesInternal.RunStatusObjectsOperatedOnCount { get => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IStorageTaskReportPropertiesInternal)RunStatus).ObjectsOperatedOnCount; set => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IStorageTaskReportPropertiesInternal)RunStatus).ObjectsOperatedOnCount = value; }

        /// <summary>Internal Acessors for RunStatusObjectsSucceededCount</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IStorageTaskAssignmentPropertiesInternal.RunStatusObjectsSucceededCount { get => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IStorageTaskReportPropertiesInternal)RunStatus).ObjectsSucceededCount; set => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IStorageTaskReportPropertiesInternal)RunStatus).ObjectsSucceededCount = value; }

        /// <summary>Internal Acessors for RunStatusObjectsTargetedCount</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IStorageTaskAssignmentPropertiesInternal.RunStatusObjectsTargetedCount { get => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IStorageTaskReportPropertiesInternal)RunStatus).ObjectsTargetedCount; set => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IStorageTaskReportPropertiesInternal)RunStatus).ObjectsTargetedCount = value; }

        /// <summary>Internal Acessors for RunStatusRunResult</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IStorageTaskAssignmentPropertiesInternal.RunStatusRunResult { get => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IStorageTaskReportPropertiesInternal)RunStatus).RunResult; set => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IStorageTaskReportPropertiesInternal)RunStatus).RunResult = value; }

        /// <summary>Internal Acessors for RunStatusStartTime</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IStorageTaskAssignmentPropertiesInternal.RunStatusStartTime { get => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IStorageTaskReportPropertiesInternal)RunStatus).StartTime; set => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IStorageTaskReportPropertiesInternal)RunStatus).StartTime = value; }

        /// <summary>Internal Acessors for RunStatusStorageAccountId</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IStorageTaskAssignmentPropertiesInternal.RunStatusStorageAccountId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IStorageTaskReportPropertiesInternal)RunStatus).StorageAccountId; set => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IStorageTaskReportPropertiesInternal)RunStatus).StorageAccountId = value; }

        /// <summary>Internal Acessors for RunStatusSummaryReportPath</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IStorageTaskAssignmentPropertiesInternal.RunStatusSummaryReportPath { get => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IStorageTaskReportPropertiesInternal)RunStatus).SummaryReportPath; set => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IStorageTaskReportPropertiesInternal)RunStatus).SummaryReportPath = value; }

        /// <summary>Internal Acessors for RunStatusTaskAssignmentId</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IStorageTaskAssignmentPropertiesInternal.RunStatusTaskAssignmentId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IStorageTaskReportPropertiesInternal)RunStatus).TaskAssignmentId; set => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IStorageTaskReportPropertiesInternal)RunStatus).TaskAssignmentId = value; }

        /// <summary>Internal Acessors for RunStatusTaskId</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IStorageTaskAssignmentPropertiesInternal.RunStatusTaskId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IStorageTaskReportPropertiesInternal)RunStatus).TaskId; set => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IStorageTaskReportPropertiesInternal)RunStatus).TaskId = value; }

        /// <summary>Internal Acessors for RunStatusTaskVersion</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IStorageTaskAssignmentPropertiesInternal.RunStatusTaskVersion { get => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IStorageTaskReportPropertiesInternal)RunStatus).TaskVersion; set => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IStorageTaskReportPropertiesInternal)RunStatus).TaskVersion = value; }

        /// <summary>Internal Acessors for TriggerParameter</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.ITriggerParameters Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IStorageTaskAssignmentPropertiesInternal.TriggerParameter { get => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IStorageTaskAssignmentExecutionContextInternal)ExecutionContext).TriggerParameter; set => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IStorageTaskAssignmentExecutionContextInternal)ExecutionContext).TriggerParameter = value; }

        /// <summary>Backing field for <see cref="ProvisioningState" /> property.</summary>
        private string _provisioningState;

        /// <summary>Represents the provisioning state of the storage task assignment.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Origin(Microsoft.Azure.PowerShell.Cmdlets.Storage.PropertyOrigin.Owned)]
        public string ProvisioningState { get => this._provisioningState; }

        /// <summary>Backing field for <see cref="Report" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IStorageTaskAssignmentReport _report;

        /// <summary>The storage task assignment report</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Origin(Microsoft.Azure.PowerShell.Cmdlets.Storage.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IStorageTaskAssignmentReport Report { get => (this._report = this._report ?? new Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.StorageTaskAssignmentReport()); set => this._report = value; }

        /// <summary>The container prefix for the location of storage task assignment report</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Origin(Microsoft.Azure.PowerShell.Cmdlets.Storage.PropertyOrigin.Inlined)]
        public string ReportPrefix { get => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IStorageTaskAssignmentReportInternal)Report).Prefix; set => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IStorageTaskAssignmentReportInternal)Report).Prefix = value ; }

        /// <summary>Backing field for <see cref="RunStatus" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IStorageTaskReportProperties _runStatus;

        /// <summary>Run status of storage task assignment</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Origin(Microsoft.Azure.PowerShell.Cmdlets.Storage.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IStorageTaskReportProperties RunStatus { get => (this._runStatus = this._runStatus ?? new Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.StorageTaskReportProperties()); set => this._runStatus = value; }

        /// <summary>Represents the status of the execution.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Origin(Microsoft.Azure.PowerShell.Cmdlets.Storage.PropertyOrigin.Inlined)]
        public string RunStatusEnum { get => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IStorageTaskReportPropertiesInternal)RunStatus).RunStatusEnum; }

        /// <summary>
        /// Well known Azure Storage error code that represents the error encountered during execution of the run instance.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Origin(Microsoft.Azure.PowerShell.Cmdlets.Storage.PropertyOrigin.Inlined)]
        public string RunStatusError { get => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IStorageTaskReportPropertiesInternal)RunStatus).RunStatusError; }

        /// <summary>
        /// End time of the run instance. Filter options such as startTime gt '2023-06-26T20:51:24.4494016Z' and other comparison
        /// operators can be used as described for DateTime properties in https://learn.microsoft.com/en-us/rest/api/storageservices/querying-tables-and-entities#supported-comparison-operators
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Origin(Microsoft.Azure.PowerShell.Cmdlets.Storage.PropertyOrigin.Inlined)]
        public string RunStatusFinishTime { get => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IStorageTaskReportPropertiesInternal)RunStatus).FinishTime; }

        /// <summary>
        /// Total number of objects where task operation failed when was attempted. Filter options such as objectFailedCount eq 0
        /// and other comparison operators can be used as described for Numerical properties in https://learn.microsoft.com/en-us/rest/api/storageservices/querying-tables-and-entities#supported-comparison-operators
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Origin(Microsoft.Azure.PowerShell.Cmdlets.Storage.PropertyOrigin.Inlined)]
        public string RunStatusObjectFailedCount { get => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IStorageTaskReportPropertiesInternal)RunStatus).ObjectFailedCount; }

        /// <summary>
        /// Total number of objects that meet the storage tasks condition and were operated upon. Filter options such as objectsOperatedOnCount
        /// ge 100 and other comparison operators can be used as described for Numerical properties in https://learn.microsoft.com/en-us/rest/api/storageservices/querying-tables-and-entities#supported-comparison-operators
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Origin(Microsoft.Azure.PowerShell.Cmdlets.Storage.PropertyOrigin.Inlined)]
        public string RunStatusObjectsOperatedOnCount { get => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IStorageTaskReportPropertiesInternal)RunStatus).ObjectsOperatedOnCount; }

        /// <summary>
        /// Total number of objects where task operation succeeded when was attempted.Filter options such as objectsSucceededCount
        /// gt 150 and other comparison operators can be used as described for Numerical properties in https://learn.microsoft.com/en-us/rest/api/storageservices/querying-tables-and-entities#supported-comparison-operators
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Origin(Microsoft.Azure.PowerShell.Cmdlets.Storage.PropertyOrigin.Inlined)]
        public string RunStatusObjectsSucceededCount { get => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IStorageTaskReportPropertiesInternal)RunStatus).ObjectsSucceededCount; }

        /// <summary>
        /// Total number of objects that meet the condition as defined in the storage task assignment execution context. Filter options
        /// such as objectsTargetedCount gt 50 and other comparison operators can be used as described for Numerical properties in
        /// https://learn.microsoft.com/en-us/rest/api/storageservices/querying-tables-and-entities#supported-comparison-operators
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Origin(Microsoft.Azure.PowerShell.Cmdlets.Storage.PropertyOrigin.Inlined)]
        public string RunStatusObjectsTargetedCount { get => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IStorageTaskReportPropertiesInternal)RunStatus).ObjectsTargetedCount; }

        /// <summary>Represents the overall result of the execution for the run instance</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Origin(Microsoft.Azure.PowerShell.Cmdlets.Storage.PropertyOrigin.Inlined)]
        public string RunStatusRunResult { get => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IStorageTaskReportPropertiesInternal)RunStatus).RunResult; }

        /// <summary>
        /// Start time of the run instance. Filter options such as startTime gt '2023-06-26T20:51:24.4494016Z' and other comparison
        /// operators can be used as described for DateTime properties in https://learn.microsoft.com/en-us/rest/api/storageservices/querying-tables-and-entities#supported-comparison-operators
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Origin(Microsoft.Azure.PowerShell.Cmdlets.Storage.PropertyOrigin.Inlined)]
        public string RunStatusStartTime { get => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IStorageTaskReportPropertiesInternal)RunStatus).StartTime; }

        /// <summary>
        /// Represents the Storage Account Id where the storage task definition was applied and executed.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Origin(Microsoft.Azure.PowerShell.Cmdlets.Storage.PropertyOrigin.Inlined)]
        public string RunStatusStorageAccountId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IStorageTaskReportPropertiesInternal)RunStatus).StorageAccountId; }

        /// <summary>
        /// Full path to the verbose report stored in the reporting container as specified in the assignment execution context for
        /// the storage account.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Origin(Microsoft.Azure.PowerShell.Cmdlets.Storage.PropertyOrigin.Inlined)]
        public string RunStatusSummaryReportPath { get => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IStorageTaskReportPropertiesInternal)RunStatus).SummaryReportPath; }

        /// <summary>
        /// Represents the Storage Task Assignment Id associated with the storage task that provided an execution context.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Origin(Microsoft.Azure.PowerShell.Cmdlets.Storage.PropertyOrigin.Inlined)]
        public string RunStatusTaskAssignmentId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IStorageTaskReportPropertiesInternal)RunStatus).TaskAssignmentId; }

        /// <summary>Storage Task Arm Id.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Origin(Microsoft.Azure.PowerShell.Cmdlets.Storage.PropertyOrigin.Inlined)]
        public string RunStatusTaskId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IStorageTaskReportPropertiesInternal)RunStatus).TaskId; }

        /// <summary>Storage Task Version</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Origin(Microsoft.Azure.PowerShell.Cmdlets.Storage.PropertyOrigin.Inlined)]
        public string RunStatusTaskVersion { get => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IStorageTaskReportPropertiesInternal)RunStatus).TaskVersion; }

        /// <summary>
        /// When to start task execution. This is a required field when ExecutionTrigger.properties.type is 'OnSchedule'; this property
        /// should not be present when ExecutionTrigger.properties.type is 'RunOnce'
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Origin(Microsoft.Azure.PowerShell.Cmdlets.Storage.PropertyOrigin.Inlined)]
        public global::System.DateTime? StartFrom { get => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IStorageTaskAssignmentExecutionContextInternal)ExecutionContext).StartFrom; set => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IStorageTaskAssignmentExecutionContextInternal)ExecutionContext).StartFrom = value ?? default(global::System.DateTime); }

        /// <summary>
        /// When to start task execution. This is an optional field when ExecutionTrigger.properties.type is 'RunOnce'; this property
        /// should not be present when ExecutionTrigger.properties.type is 'OnSchedule'
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Origin(Microsoft.Azure.PowerShell.Cmdlets.Storage.PropertyOrigin.Inlined)]
        public global::System.DateTime? StartOn { get => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IStorageTaskAssignmentExecutionContextInternal)ExecutionContext).StartOn; set => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IStorageTaskAssignmentExecutionContextInternal)ExecutionContext).StartOn = value ?? default(global::System.DateTime); }

        /// <summary>
        /// List of object prefixes to be excluded from task execution. If there is a conflict between include and exclude prefixes,
        /// the exclude prefix will be the determining factor
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Origin(Microsoft.Azure.PowerShell.Cmdlets.Storage.PropertyOrigin.Inlined)]
        public System.Collections.Generic.List<string> TargetExcludePrefix { get => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IStorageTaskAssignmentExecutionContextInternal)ExecutionContext).TargetExcludePrefix; set => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IStorageTaskAssignmentExecutionContextInternal)ExecutionContext).TargetExcludePrefix = value ?? null /* arrayOf */; }

        /// <summary>Required list of object prefixes to be included for task execution</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Origin(Microsoft.Azure.PowerShell.Cmdlets.Storage.PropertyOrigin.Inlined)]
        public System.Collections.Generic.List<string> TargetPrefix { get => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IStorageTaskAssignmentExecutionContextInternal)ExecutionContext).TargetPrefix; set => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IStorageTaskAssignmentExecutionContextInternal)ExecutionContext).TargetPrefix = value ?? null /* arrayOf */; }

        /// <summary>Backing field for <see cref="TaskId" /> property.</summary>
        private string _taskId;

        /// <summary>Id of the corresponding storage task</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Origin(Microsoft.Azure.PowerShell.Cmdlets.Storage.PropertyOrigin.Owned)]
        public string TaskId { get => this._taskId; set => this._taskId = value; }

        /// <summary>The trigger type of the storage task assignment execution</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Origin(Microsoft.Azure.PowerShell.Cmdlets.Storage.PropertyOrigin.Inlined)]
        public string TriggerType { get => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IStorageTaskAssignmentExecutionContextInternal)ExecutionContext).TriggerType; set => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IStorageTaskAssignmentExecutionContextInternal)ExecutionContext).TriggerType = value ; }

        /// <summary>Creates an new <see cref="StorageTaskAssignmentProperties" /> instance.</summary>
        public StorageTaskAssignmentProperties()
        {

        }
    }
    /// Properties of the storage task assignment.
    public partial interface IStorageTaskAssignmentProperties :
        Microsoft.Azure.PowerShell.Cmdlets.Storage.Runtime.IJsonSerializable
    {
        /// <summary>Text that describes the purpose of the storage task assignment</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Text that describes the purpose of the storage task assignment",
        SerializedName = @"description",
        PossibleTypes = new [] { typeof(string) })]
        string Description { get; set; }
        /// <summary>Whether the storage task assignment is enabled or not</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Whether the storage task assignment is enabled or not",
        SerializedName = @"enabled",
        PossibleTypes = new [] { typeof(bool) })]
        bool Enabled { get; set; }
        /// <summary>
        /// When to end task execution. This is a required field when ExecutionTrigger.properties.type is 'OnSchedule'; this property
        /// should not be present when ExecutionTrigger.properties.type is 'RunOnce'
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"When to end task execution. This is a required field when ExecutionTrigger.properties.type is 'OnSchedule'; this property should not be present when ExecutionTrigger.properties.type is 'RunOnce'",
        SerializedName = @"endBy",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? EndBy { get; set; }
        /// <summary>
        /// Run interval of task execution. This is a required field when ExecutionTrigger.properties.type is 'OnSchedule'; this property
        /// should not be present when ExecutionTrigger.properties.type is 'RunOnce'
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Run interval of task execution. This is a required field when ExecutionTrigger.properties.type is 'OnSchedule'; this property should not be present when ExecutionTrigger.properties.type is 'RunOnce'",
        SerializedName = @"interval",
        PossibleTypes = new [] { typeof(int) })]
        int? Interval { get; set; }
        /// <summary>
        /// Run interval unit of task execution. This is a required field when ExecutionTrigger.properties.type is 'OnSchedule'; this
        /// property should not be present when ExecutionTrigger.properties.type is 'RunOnce'
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Run interval unit of task execution. This is a required field when ExecutionTrigger.properties.type is 'OnSchedule'; this property should not be present when ExecutionTrigger.properties.type is 'RunOnce'",
        SerializedName = @"intervalUnit",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.Storage.PSArgumentCompleterAttribute("Days")]
        string IntervalUnit { get; set; }
        /// <summary>Represents the provisioning state of the storage task assignment.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"Represents the provisioning state of the storage task assignment.",
        SerializedName = @"provisioningState",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.Storage.PSArgumentCompleterAttribute("Creating", "ResolvingDNS", "Succeeded", "ValidateSubscriptionQuotaBegin", "ValidateSubscriptionQuotaEnd", "Deleting", "Canceled", "Failed")]
        string ProvisioningState { get;  }
        /// <summary>The container prefix for the location of storage task assignment report</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The container prefix for the location of storage task assignment report",
        SerializedName = @"prefix",
        PossibleTypes = new [] { typeof(string) })]
        string ReportPrefix { get; set; }
        /// <summary>Represents the status of the execution.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"Represents the status of the execution.",
        SerializedName = @"runStatusEnum",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.Storage.PSArgumentCompleterAttribute("InProgress", "Finished")]
        string RunStatusEnum { get;  }
        /// <summary>
        /// Well known Azure Storage error code that represents the error encountered during execution of the run instance.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"Well known Azure Storage error code that represents the error encountered during execution of the run instance.",
        SerializedName = @"runStatusError",
        PossibleTypes = new [] { typeof(string) })]
        string RunStatusError { get;  }
        /// <summary>
        /// End time of the run instance. Filter options such as startTime gt '2023-06-26T20:51:24.4494016Z' and other comparison
        /// operators can be used as described for DateTime properties in https://learn.microsoft.com/en-us/rest/api/storageservices/querying-tables-and-entities#supported-comparison-operators
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"End time of the run instance. Filter options such as startTime gt '2023-06-26T20:51:24.4494016Z' and other comparison operators can be used as described for DateTime properties in https://learn.microsoft.com/en-us/rest/api/storageservices/querying-tables-and-entities#supported-comparison-operators",
        SerializedName = @"finishTime",
        PossibleTypes = new [] { typeof(string) })]
        string RunStatusFinishTime { get;  }
        /// <summary>
        /// Total number of objects where task operation failed when was attempted. Filter options such as objectFailedCount eq 0
        /// and other comparison operators can be used as described for Numerical properties in https://learn.microsoft.com/en-us/rest/api/storageservices/querying-tables-and-entities#supported-comparison-operators
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"Total number of objects where task operation failed when was attempted. Filter options such as objectFailedCount eq 0 and other comparison operators can be used as described for Numerical properties in https://learn.microsoft.com/en-us/rest/api/storageservices/querying-tables-and-entities#supported-comparison-operators",
        SerializedName = @"objectFailedCount",
        PossibleTypes = new [] { typeof(string) })]
        string RunStatusObjectFailedCount { get;  }
        /// <summary>
        /// Total number of objects that meet the storage tasks condition and were operated upon. Filter options such as objectsOperatedOnCount
        /// ge 100 and other comparison operators can be used as described for Numerical properties in https://learn.microsoft.com/en-us/rest/api/storageservices/querying-tables-and-entities#supported-comparison-operators
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"Total number of objects that meet the storage tasks condition and were operated upon. Filter options such as objectsOperatedOnCount ge 100 and other comparison operators can be used as described for Numerical properties in https://learn.microsoft.com/en-us/rest/api/storageservices/querying-tables-and-entities#supported-comparison-operators",
        SerializedName = @"objectsOperatedOnCount",
        PossibleTypes = new [] { typeof(string) })]
        string RunStatusObjectsOperatedOnCount { get;  }
        /// <summary>
        /// Total number of objects where task operation succeeded when was attempted.Filter options such as objectsSucceededCount
        /// gt 150 and other comparison operators can be used as described for Numerical properties in https://learn.microsoft.com/en-us/rest/api/storageservices/querying-tables-and-entities#supported-comparison-operators
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"Total number of objects where task operation succeeded when was attempted.Filter options such as objectsSucceededCount gt 150 and other comparison operators can be used as described for Numerical properties in https://learn.microsoft.com/en-us/rest/api/storageservices/querying-tables-and-entities#supported-comparison-operators",
        SerializedName = @"objectsSucceededCount",
        PossibleTypes = new [] { typeof(string) })]
        string RunStatusObjectsSucceededCount { get;  }
        /// <summary>
        /// Total number of objects that meet the condition as defined in the storage task assignment execution context. Filter options
        /// such as objectsTargetedCount gt 50 and other comparison operators can be used as described for Numerical properties in
        /// https://learn.microsoft.com/en-us/rest/api/storageservices/querying-tables-and-entities#supported-comparison-operators
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"Total number of objects that meet the condition as defined in the storage task assignment execution context. Filter options such as objectsTargetedCount gt 50 and other comparison operators can be used as described for Numerical properties in https://learn.microsoft.com/en-us/rest/api/storageservices/querying-tables-and-entities#supported-comparison-operators",
        SerializedName = @"objectsTargetedCount",
        PossibleTypes = new [] { typeof(string) })]
        string RunStatusObjectsTargetedCount { get;  }
        /// <summary>Represents the overall result of the execution for the run instance</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"Represents the overall result of the execution for the run instance",
        SerializedName = @"runResult",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.Storage.PSArgumentCompleterAttribute("Succeeded", "Failed")]
        string RunStatusRunResult { get;  }
        /// <summary>
        /// Start time of the run instance. Filter options such as startTime gt '2023-06-26T20:51:24.4494016Z' and other comparison
        /// operators can be used as described for DateTime properties in https://learn.microsoft.com/en-us/rest/api/storageservices/querying-tables-and-entities#supported-comparison-operators
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"Start time of the run instance. Filter options such as startTime gt '2023-06-26T20:51:24.4494016Z' and other comparison operators can be used as described for DateTime properties in https://learn.microsoft.com/en-us/rest/api/storageservices/querying-tables-and-entities#supported-comparison-operators",
        SerializedName = @"startTime",
        PossibleTypes = new [] { typeof(string) })]
        string RunStatusStartTime { get;  }
        /// <summary>
        /// Represents the Storage Account Id where the storage task definition was applied and executed.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"Represents the Storage Account Id where the storage task definition was applied and executed.",
        SerializedName = @"storageAccountId",
        PossibleTypes = new [] { typeof(string) })]
        string RunStatusStorageAccountId { get;  }
        /// <summary>
        /// Full path to the verbose report stored in the reporting container as specified in the assignment execution context for
        /// the storage account.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"Full path to the verbose report stored in the reporting container as specified in the assignment execution context for the storage account. ",
        SerializedName = @"summaryReportPath",
        PossibleTypes = new [] { typeof(string) })]
        string RunStatusSummaryReportPath { get;  }
        /// <summary>
        /// Represents the Storage Task Assignment Id associated with the storage task that provided an execution context.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"Represents the Storage Task Assignment Id associated with the storage task that provided an execution context.",
        SerializedName = @"taskAssignmentId",
        PossibleTypes = new [] { typeof(string) })]
        string RunStatusTaskAssignmentId { get;  }
        /// <summary>Storage Task Arm Id.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"Storage Task Arm Id.",
        SerializedName = @"taskId",
        PossibleTypes = new [] { typeof(string) })]
        string RunStatusTaskId { get;  }
        /// <summary>Storage Task Version</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"Storage Task Version",
        SerializedName = @"taskVersion",
        PossibleTypes = new [] { typeof(string) })]
        string RunStatusTaskVersion { get;  }
        /// <summary>
        /// When to start task execution. This is a required field when ExecutionTrigger.properties.type is 'OnSchedule'; this property
        /// should not be present when ExecutionTrigger.properties.type is 'RunOnce'
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"When to start task execution. This is a required field when ExecutionTrigger.properties.type is 'OnSchedule'; this property should not be present when ExecutionTrigger.properties.type is 'RunOnce'",
        SerializedName = @"startFrom",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? StartFrom { get; set; }
        /// <summary>
        /// When to start task execution. This is an optional field when ExecutionTrigger.properties.type is 'RunOnce'; this property
        /// should not be present when ExecutionTrigger.properties.type is 'OnSchedule'
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"When to start task execution. This is an optional field when ExecutionTrigger.properties.type is 'RunOnce'; this property should not be present when ExecutionTrigger.properties.type is 'OnSchedule'",
        SerializedName = @"startOn",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? StartOn { get; set; }
        /// <summary>
        /// List of object prefixes to be excluded from task execution. If there is a conflict between include and exclude prefixes,
        /// the exclude prefix will be the determining factor
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"List of object prefixes to be excluded from task execution. If there is a conflict between include and exclude prefixes, the exclude prefix will be the determining factor",
        SerializedName = @"excludePrefix",
        PossibleTypes = new [] { typeof(string) })]
        System.Collections.Generic.List<string> TargetExcludePrefix { get; set; }
        /// <summary>Required list of object prefixes to be included for task execution</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Required list of object prefixes to be included for task execution",
        SerializedName = @"prefix",
        PossibleTypes = new [] { typeof(string) })]
        System.Collections.Generic.List<string> TargetPrefix { get; set; }
        /// <summary>Id of the corresponding storage task</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Id of the corresponding storage task",
        SerializedName = @"taskId",
        PossibleTypes = new [] { typeof(string) })]
        string TaskId { get; set; }
        /// <summary>The trigger type of the storage task assignment execution</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The trigger type of the storage task assignment execution",
        SerializedName = @"type",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.Storage.PSArgumentCompleterAttribute("RunOnce", "OnSchedule")]
        string TriggerType { get; set; }

    }
    /// Properties of the storage task assignment.
    internal partial interface IStorageTaskAssignmentPropertiesInternal

    {
        /// <summary>Text that describes the purpose of the storage task assignment</summary>
        string Description { get; set; }
        /// <summary>Whether the storage task assignment is enabled or not</summary>
        bool Enabled { get; set; }
        /// <summary>
        /// When to end task execution. This is a required field when ExecutionTrigger.properties.type is 'OnSchedule'; this property
        /// should not be present when ExecutionTrigger.properties.type is 'RunOnce'
        /// </summary>
        global::System.DateTime? EndBy { get; set; }
        /// <summary>The storage task assignment execution context</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IStorageTaskAssignmentExecutionContext ExecutionContext { get; set; }
        /// <summary>Execution target of the storage task assignment</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IExecutionTarget ExecutionContextTarget { get; set; }
        /// <summary>Execution trigger of the storage task assignment</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IExecutionTrigger ExecutionContextTrigger { get; set; }
        /// <summary>
        /// Run interval of task execution. This is a required field when ExecutionTrigger.properties.type is 'OnSchedule'; this property
        /// should not be present when ExecutionTrigger.properties.type is 'RunOnce'
        /// </summary>
        int? Interval { get; set; }
        /// <summary>
        /// Run interval unit of task execution. This is a required field when ExecutionTrigger.properties.type is 'OnSchedule'; this
        /// property should not be present when ExecutionTrigger.properties.type is 'RunOnce'
        /// </summary>
        [global::Microsoft.Azure.PowerShell.Cmdlets.Storage.PSArgumentCompleterAttribute("Days")]
        string IntervalUnit { get; set; }
        /// <summary>Represents the provisioning state of the storage task assignment.</summary>
        [global::Microsoft.Azure.PowerShell.Cmdlets.Storage.PSArgumentCompleterAttribute("Creating", "ResolvingDNS", "Succeeded", "ValidateSubscriptionQuotaBegin", "ValidateSubscriptionQuotaEnd", "Deleting", "Canceled", "Failed")]
        string ProvisioningState { get; set; }
        /// <summary>The storage task assignment report</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IStorageTaskAssignmentReport Report { get; set; }
        /// <summary>The container prefix for the location of storage task assignment report</summary>
        string ReportPrefix { get; set; }
        /// <summary>Run status of storage task assignment</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IStorageTaskReportProperties RunStatus { get; set; }
        /// <summary>Represents the status of the execution.</summary>
        [global::Microsoft.Azure.PowerShell.Cmdlets.Storage.PSArgumentCompleterAttribute("InProgress", "Finished")]
        string RunStatusEnum { get; set; }
        /// <summary>
        /// Well known Azure Storage error code that represents the error encountered during execution of the run instance.
        /// </summary>
        string RunStatusError { get; set; }
        /// <summary>
        /// End time of the run instance. Filter options such as startTime gt '2023-06-26T20:51:24.4494016Z' and other comparison
        /// operators can be used as described for DateTime properties in https://learn.microsoft.com/en-us/rest/api/storageservices/querying-tables-and-entities#supported-comparison-operators
        /// </summary>
        string RunStatusFinishTime { get; set; }
        /// <summary>
        /// Total number of objects where task operation failed when was attempted. Filter options such as objectFailedCount eq 0
        /// and other comparison operators can be used as described for Numerical properties in https://learn.microsoft.com/en-us/rest/api/storageservices/querying-tables-and-entities#supported-comparison-operators
        /// </summary>
        string RunStatusObjectFailedCount { get; set; }
        /// <summary>
        /// Total number of objects that meet the storage tasks condition and were operated upon. Filter options such as objectsOperatedOnCount
        /// ge 100 and other comparison operators can be used as described for Numerical properties in https://learn.microsoft.com/en-us/rest/api/storageservices/querying-tables-and-entities#supported-comparison-operators
        /// </summary>
        string RunStatusObjectsOperatedOnCount { get; set; }
        /// <summary>
        /// Total number of objects where task operation succeeded when was attempted.Filter options such as objectsSucceededCount
        /// gt 150 and other comparison operators can be used as described for Numerical properties in https://learn.microsoft.com/en-us/rest/api/storageservices/querying-tables-and-entities#supported-comparison-operators
        /// </summary>
        string RunStatusObjectsSucceededCount { get; set; }
        /// <summary>
        /// Total number of objects that meet the condition as defined in the storage task assignment execution context. Filter options
        /// such as objectsTargetedCount gt 50 and other comparison operators can be used as described for Numerical properties in
        /// https://learn.microsoft.com/en-us/rest/api/storageservices/querying-tables-and-entities#supported-comparison-operators
        /// </summary>
        string RunStatusObjectsTargetedCount { get; set; }
        /// <summary>Represents the overall result of the execution for the run instance</summary>
        [global::Microsoft.Azure.PowerShell.Cmdlets.Storage.PSArgumentCompleterAttribute("Succeeded", "Failed")]
        string RunStatusRunResult { get; set; }
        /// <summary>
        /// Start time of the run instance. Filter options such as startTime gt '2023-06-26T20:51:24.4494016Z' and other comparison
        /// operators can be used as described for DateTime properties in https://learn.microsoft.com/en-us/rest/api/storageservices/querying-tables-and-entities#supported-comparison-operators
        /// </summary>
        string RunStatusStartTime { get; set; }
        /// <summary>
        /// Represents the Storage Account Id where the storage task definition was applied and executed.
        /// </summary>
        string RunStatusStorageAccountId { get; set; }
        /// <summary>
        /// Full path to the verbose report stored in the reporting container as specified in the assignment execution context for
        /// the storage account.
        /// </summary>
        string RunStatusSummaryReportPath { get; set; }
        /// <summary>
        /// Represents the Storage Task Assignment Id associated with the storage task that provided an execution context.
        /// </summary>
        string RunStatusTaskAssignmentId { get; set; }
        /// <summary>Storage Task Arm Id.</summary>
        string RunStatusTaskId { get; set; }
        /// <summary>Storage Task Version</summary>
        string RunStatusTaskVersion { get; set; }
        /// <summary>
        /// When to start task execution. This is a required field when ExecutionTrigger.properties.type is 'OnSchedule'; this property
        /// should not be present when ExecutionTrigger.properties.type is 'RunOnce'
        /// </summary>
        global::System.DateTime? StartFrom { get; set; }
        /// <summary>
        /// When to start task execution. This is an optional field when ExecutionTrigger.properties.type is 'RunOnce'; this property
        /// should not be present when ExecutionTrigger.properties.type is 'OnSchedule'
        /// </summary>
        global::System.DateTime? StartOn { get; set; }
        /// <summary>
        /// List of object prefixes to be excluded from task execution. If there is a conflict between include and exclude prefixes,
        /// the exclude prefix will be the determining factor
        /// </summary>
        System.Collections.Generic.List<string> TargetExcludePrefix { get; set; }
        /// <summary>Required list of object prefixes to be included for task execution</summary>
        System.Collections.Generic.List<string> TargetPrefix { get; set; }
        /// <summary>Id of the corresponding storage task</summary>
        string TaskId { get; set; }
        /// <summary>The trigger parameters of the storage task assignment execution</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.ITriggerParameters TriggerParameter { get; set; }
        /// <summary>The trigger type of the storage task assignment execution</summary>
        [global::Microsoft.Azure.PowerShell.Cmdlets.Storage.PSArgumentCompleterAttribute("RunOnce", "OnSchedule")]
        string TriggerType { get; set; }

    }
}