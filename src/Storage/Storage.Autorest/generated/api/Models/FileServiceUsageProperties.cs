// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Storage.Models
{
    using static Microsoft.Azure.PowerShell.Cmdlets.Storage.Runtime.Extensions;

    /// <summary>
    /// File service usage in storage account including account limits, file share limits and constants used in recommendations
    /// and bursting formula.
    /// </summary>
    public partial class FileServiceUsageProperties :
        Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileServiceUsageProperties,
        Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileServiceUsagePropertiesInternal
    {

        /// <summary>Backing field for <see cref="BurstingConstant" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IBurstingConstants _burstingConstant;

        /// <summary>
        /// Constants used for calculating included burst IOPS and maximum burst credits for IOPS for a file share in the storage
        /// account.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Origin(Microsoft.Azure.PowerShell.Cmdlets.Storage.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IBurstingConstants BurstingConstant { get => (this._burstingConstant = this._burstingConstant ?? new Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.BurstingConstants()); }

        /// <summary>The guaranteed floor of burst IOPS for small file shares.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Origin(Microsoft.Azure.PowerShell.Cmdlets.Storage.PropertyOrigin.Inlined)]
        public int? BurstingConstantBurstFloorIop { get => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IBurstingConstantsInternal)BurstingConstant).BurstFloorIop; }

        /// <summary>
        /// The scalar against provisioned IOPS in the file share included burst IOPS formula.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Origin(Microsoft.Azure.PowerShell.Cmdlets.Storage.PropertyOrigin.Inlined)]
        public double? BurstingConstantBurstIoScalar { get => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IBurstingConstantsInternal)BurstingConstant).BurstIoScalar; }

        /// <summary>
        /// The time frame for bursting in seconds in the file share maximum burst credits for IOPS formula.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Origin(Microsoft.Azure.PowerShell.Cmdlets.Storage.PropertyOrigin.Inlined)]
        public int? BurstingConstantBurstTimeframeSecond { get => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IBurstingConstantsInternal)BurstingConstant).BurstTimeframeSecond; }

        /// <summary>Backing field for <see cref="FileShareLimit" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileShareLimits _fileShareLimit;

        /// <summary>
        /// Minimum and maximum provisioned storage, IOPS and bandwidth limits for a file share in the storage account.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Origin(Microsoft.Azure.PowerShell.Cmdlets.Storage.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileShareLimits FileShareLimit { get => (this._fileShareLimit = this._fileShareLimit ?? new Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.FileShareLimits()); }

        /// <summary>
        /// The maximum provisioned bandwidth limit in mebibytes per second for a file share in the storage account.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Origin(Microsoft.Azure.PowerShell.Cmdlets.Storage.PropertyOrigin.Inlined)]
        public int? FileShareLimitMaxProvisionedBandwidthMiBPerSec { get => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileShareLimitsInternal)FileShareLimit).MaxProvisionedBandwidthMiBPerSec; }

        /// <summary>The maximum provisioned IOPS limit for a file share in the storage account.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Origin(Microsoft.Azure.PowerShell.Cmdlets.Storage.PropertyOrigin.Inlined)]
        public int? FileShareLimitMaxProvisionedIop { get => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileShareLimitsInternal)FileShareLimit).MaxProvisionedIop; }

        /// <summary>
        /// The maximum provisioned storage quota limit in gibibytes for a file share in the storage account.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Origin(Microsoft.Azure.PowerShell.Cmdlets.Storage.PropertyOrigin.Inlined)]
        public int? FileShareLimitMaxProvisionedStorageGiB { get => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileShareLimitsInternal)FileShareLimit).MaxProvisionedStorageGiB; }

        /// <summary>
        /// The minimum provisioned bandwidth limit in mebibytes per second for a file share in the storage account.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Origin(Microsoft.Azure.PowerShell.Cmdlets.Storage.PropertyOrigin.Inlined)]
        public int? FileShareLimitMinProvisionedBandwidthMiBPerSec { get => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileShareLimitsInternal)FileShareLimit).MinProvisionedBandwidthMiBPerSec; }

        /// <summary>The minimum provisioned IOPS limit for a file share in the storage account.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Origin(Microsoft.Azure.PowerShell.Cmdlets.Storage.PropertyOrigin.Inlined)]
        public int? FileShareLimitMinProvisionedIop { get => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileShareLimitsInternal)FileShareLimit).MinProvisionedIop; }

        /// <summary>
        /// The minimum provisioned storage quota limit in gibibytes for a file share in the storage account.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Origin(Microsoft.Azure.PowerShell.Cmdlets.Storage.PropertyOrigin.Inlined)]
        public int? FileShareLimitMinProvisionedStorageGiB { get => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileShareLimitsInternal)FileShareLimit).MinProvisionedStorageGiB; }

        /// <summary>Backing field for <see cref="FileShareRecommendation" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileShareRecommendations _fileShareRecommendation;

        /// <summary>
        /// Constants used for calculating recommended provisioned IOPS and bandwidth for a file share in the storage account.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Origin(Microsoft.Azure.PowerShell.Cmdlets.Storage.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileShareRecommendations FileShareRecommendation { get => (this._fileShareRecommendation = this._fileShareRecommendation ?? new Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.FileShareRecommendations()); }

        /// <summary>
        /// The scalar for bandwidth in the file share provisioned bandwidth recommendation formula.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Origin(Microsoft.Azure.PowerShell.Cmdlets.Storage.PropertyOrigin.Inlined)]
        public double? FileShareRecommendationBandwidthScalar { get => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileShareRecommendationsInternal)FileShareRecommendation).BandwidthScalar; }

        /// <summary>
        /// The base bandwidth in the file share provisioned bandwidth recommendation formula.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Origin(Microsoft.Azure.PowerShell.Cmdlets.Storage.PropertyOrigin.Inlined)]
        public int? FileShareRecommendationBaseBandwidthMiBPerSec { get => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileShareRecommendationsInternal)FileShareRecommendation).BaseBandwidthMiBPerSec; }

        /// <summary>The base IOPS in the file share provisioned IOPS recommendation formula.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Origin(Microsoft.Azure.PowerShell.Cmdlets.Storage.PropertyOrigin.Inlined)]
        public int? FileShareRecommendationBaseIop { get => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileShareRecommendationsInternal)FileShareRecommendation).BaseIop; }

        /// <summary>The scalar for IO in the file share provisioned IOPS recommendation formula.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Origin(Microsoft.Azure.PowerShell.Cmdlets.Storage.PropertyOrigin.Inlined)]
        public double? FileShareRecommendationIoScalar { get => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileShareRecommendationsInternal)FileShareRecommendation).IoScalar; }

        /// <summary>The total number of file shares.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Origin(Microsoft.Azure.PowerShell.Cmdlets.Storage.PropertyOrigin.Inlined)]
        public int? LiveShareFileShareCount { get => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IAccountUsageInternal)StorageAccountUsage).LiveShareFileShareCount; }

        /// <summary>The total provisioned bandwidth in mebibytes per second.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Origin(Microsoft.Azure.PowerShell.Cmdlets.Storage.PropertyOrigin.Inlined)]
        public int? LiveShareProvisionedBandwidthMiBPerSec { get => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IAccountUsageInternal)StorageAccountUsage).LiveShareProvisionedBandwidthMiBPerSec; }

        /// <summary>The total provisioned IOPS.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Origin(Microsoft.Azure.PowerShell.Cmdlets.Storage.PropertyOrigin.Inlined)]
        public int? LiveShareProvisionedIop { get => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IAccountUsageInternal)StorageAccountUsage).LiveShareProvisionedIop; }

        /// <summary>The total provisioned storage quota in gibibytes.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Origin(Microsoft.Azure.PowerShell.Cmdlets.Storage.PropertyOrigin.Inlined)]
        public int? LiveShareProvisionedStorageGiB { get => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IAccountUsageInternal)StorageAccountUsage).LiveShareProvisionedStorageGiB; }

        /// <summary>Internal Acessors for BurstingConstant</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IBurstingConstants Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileServiceUsagePropertiesInternal.BurstingConstant { get => (this._burstingConstant = this._burstingConstant ?? new Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.BurstingConstants()); set { {_burstingConstant = value;} } }

        /// <summary>Internal Acessors for BurstingConstantBurstFloorIop</summary>
        int? Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileServiceUsagePropertiesInternal.BurstingConstantBurstFloorIop { get => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IBurstingConstantsInternal)BurstingConstant).BurstFloorIop; set => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IBurstingConstantsInternal)BurstingConstant).BurstFloorIop = value; }

        /// <summary>Internal Acessors for BurstingConstantBurstIoScalar</summary>
        double? Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileServiceUsagePropertiesInternal.BurstingConstantBurstIoScalar { get => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IBurstingConstantsInternal)BurstingConstant).BurstIoScalar; set => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IBurstingConstantsInternal)BurstingConstant).BurstIoScalar = value; }

        /// <summary>Internal Acessors for BurstingConstantBurstTimeframeSecond</summary>
        int? Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileServiceUsagePropertiesInternal.BurstingConstantBurstTimeframeSecond { get => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IBurstingConstantsInternal)BurstingConstant).BurstTimeframeSecond; set => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IBurstingConstantsInternal)BurstingConstant).BurstTimeframeSecond = value; }

        /// <summary>Internal Acessors for FileShareLimit</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileShareLimits Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileServiceUsagePropertiesInternal.FileShareLimit { get => (this._fileShareLimit = this._fileShareLimit ?? new Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.FileShareLimits()); set { {_fileShareLimit = value;} } }

        /// <summary>Internal Acessors for FileShareLimitMaxProvisionedBandwidthMiBPerSec</summary>
        int? Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileServiceUsagePropertiesInternal.FileShareLimitMaxProvisionedBandwidthMiBPerSec { get => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileShareLimitsInternal)FileShareLimit).MaxProvisionedBandwidthMiBPerSec; set => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileShareLimitsInternal)FileShareLimit).MaxProvisionedBandwidthMiBPerSec = value; }

        /// <summary>Internal Acessors for FileShareLimitMaxProvisionedIop</summary>
        int? Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileServiceUsagePropertiesInternal.FileShareLimitMaxProvisionedIop { get => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileShareLimitsInternal)FileShareLimit).MaxProvisionedIop; set => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileShareLimitsInternal)FileShareLimit).MaxProvisionedIop = value; }

        /// <summary>Internal Acessors for FileShareLimitMaxProvisionedStorageGiB</summary>
        int? Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileServiceUsagePropertiesInternal.FileShareLimitMaxProvisionedStorageGiB { get => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileShareLimitsInternal)FileShareLimit).MaxProvisionedStorageGiB; set => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileShareLimitsInternal)FileShareLimit).MaxProvisionedStorageGiB = value; }

        /// <summary>Internal Acessors for FileShareLimitMinProvisionedBandwidthMiBPerSec</summary>
        int? Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileServiceUsagePropertiesInternal.FileShareLimitMinProvisionedBandwidthMiBPerSec { get => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileShareLimitsInternal)FileShareLimit).MinProvisionedBandwidthMiBPerSec; set => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileShareLimitsInternal)FileShareLimit).MinProvisionedBandwidthMiBPerSec = value; }

        /// <summary>Internal Acessors for FileShareLimitMinProvisionedIop</summary>
        int? Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileServiceUsagePropertiesInternal.FileShareLimitMinProvisionedIop { get => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileShareLimitsInternal)FileShareLimit).MinProvisionedIop; set => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileShareLimitsInternal)FileShareLimit).MinProvisionedIop = value; }

        /// <summary>Internal Acessors for FileShareLimitMinProvisionedStorageGiB</summary>
        int? Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileServiceUsagePropertiesInternal.FileShareLimitMinProvisionedStorageGiB { get => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileShareLimitsInternal)FileShareLimit).MinProvisionedStorageGiB; set => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileShareLimitsInternal)FileShareLimit).MinProvisionedStorageGiB = value; }

        /// <summary>Internal Acessors for FileShareRecommendation</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileShareRecommendations Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileServiceUsagePropertiesInternal.FileShareRecommendation { get => (this._fileShareRecommendation = this._fileShareRecommendation ?? new Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.FileShareRecommendations()); set { {_fileShareRecommendation = value;} } }

        /// <summary>Internal Acessors for FileShareRecommendationBandwidthScalar</summary>
        double? Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileServiceUsagePropertiesInternal.FileShareRecommendationBandwidthScalar { get => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileShareRecommendationsInternal)FileShareRecommendation).BandwidthScalar; set => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileShareRecommendationsInternal)FileShareRecommendation).BandwidthScalar = value; }

        /// <summary>Internal Acessors for FileShareRecommendationBaseBandwidthMiBPerSec</summary>
        int? Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileServiceUsagePropertiesInternal.FileShareRecommendationBaseBandwidthMiBPerSec { get => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileShareRecommendationsInternal)FileShareRecommendation).BaseBandwidthMiBPerSec; set => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileShareRecommendationsInternal)FileShareRecommendation).BaseBandwidthMiBPerSec = value; }

        /// <summary>Internal Acessors for FileShareRecommendationBaseIop</summary>
        int? Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileServiceUsagePropertiesInternal.FileShareRecommendationBaseIop { get => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileShareRecommendationsInternal)FileShareRecommendation).BaseIop; set => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileShareRecommendationsInternal)FileShareRecommendation).BaseIop = value; }

        /// <summary>Internal Acessors for FileShareRecommendationIoScalar</summary>
        double? Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileServiceUsagePropertiesInternal.FileShareRecommendationIoScalar { get => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileShareRecommendationsInternal)FileShareRecommendation).IoScalar; set => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileShareRecommendationsInternal)FileShareRecommendation).IoScalar = value; }

        /// <summary>Internal Acessors for LiveShareFileShareCount</summary>
        int? Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileServiceUsagePropertiesInternal.LiveShareFileShareCount { get => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IAccountUsageInternal)StorageAccountUsage).LiveShareFileShareCount; set => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IAccountUsageInternal)StorageAccountUsage).LiveShareFileShareCount = value; }

        /// <summary>Internal Acessors for LiveShareProvisionedBandwidthMiBPerSec</summary>
        int? Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileServiceUsagePropertiesInternal.LiveShareProvisionedBandwidthMiBPerSec { get => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IAccountUsageInternal)StorageAccountUsage).LiveShareProvisionedBandwidthMiBPerSec; set => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IAccountUsageInternal)StorageAccountUsage).LiveShareProvisionedBandwidthMiBPerSec = value; }

        /// <summary>Internal Acessors for LiveShareProvisionedIop</summary>
        int? Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileServiceUsagePropertiesInternal.LiveShareProvisionedIop { get => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IAccountUsageInternal)StorageAccountUsage).LiveShareProvisionedIop; set => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IAccountUsageInternal)StorageAccountUsage).LiveShareProvisionedIop = value; }

        /// <summary>Internal Acessors for LiveShareProvisionedStorageGiB</summary>
        int? Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileServiceUsagePropertiesInternal.LiveShareProvisionedStorageGiB { get => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IAccountUsageInternal)StorageAccountUsage).LiveShareProvisionedStorageGiB; set => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IAccountUsageInternal)StorageAccountUsage).LiveShareProvisionedStorageGiB = value; }

        /// <summary>Internal Acessors for SoftDeletedShareFileShareCount</summary>
        int? Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileServiceUsagePropertiesInternal.SoftDeletedShareFileShareCount { get => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IAccountUsageInternal)StorageAccountUsage).SoftDeletedShareFileShareCount; set => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IAccountUsageInternal)StorageAccountUsage).SoftDeletedShareFileShareCount = value; }

        /// <summary>Internal Acessors for SoftDeletedShareProvisionedBandwidthMiBPerSec</summary>
        int? Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileServiceUsagePropertiesInternal.SoftDeletedShareProvisionedBandwidthMiBPerSec { get => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IAccountUsageInternal)StorageAccountUsage).SoftDeletedShareProvisionedBandwidthMiBPerSec; set => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IAccountUsageInternal)StorageAccountUsage).SoftDeletedShareProvisionedBandwidthMiBPerSec = value; }

        /// <summary>Internal Acessors for SoftDeletedShareProvisionedIop</summary>
        int? Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileServiceUsagePropertiesInternal.SoftDeletedShareProvisionedIop { get => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IAccountUsageInternal)StorageAccountUsage).SoftDeletedShareProvisionedIop; set => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IAccountUsageInternal)StorageAccountUsage).SoftDeletedShareProvisionedIop = value; }

        /// <summary>Internal Acessors for SoftDeletedShareProvisionedStorageGiB</summary>
        int? Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileServiceUsagePropertiesInternal.SoftDeletedShareProvisionedStorageGiB { get => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IAccountUsageInternal)StorageAccountUsage).SoftDeletedShareProvisionedStorageGiB; set => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IAccountUsageInternal)StorageAccountUsage).SoftDeletedShareProvisionedStorageGiB = value; }

        /// <summary>Internal Acessors for StorageAccountLimit</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IAccountLimits Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileServiceUsagePropertiesInternal.StorageAccountLimit { get => (this._storageAccountLimit = this._storageAccountLimit ?? new Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.AccountLimits()); set { {_storageAccountLimit = value;} } }

        /// <summary>Internal Acessors for StorageAccountLimitMaxFileShare</summary>
        int? Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileServiceUsagePropertiesInternal.StorageAccountLimitMaxFileShare { get => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IAccountLimitsInternal)StorageAccountLimit).MaxFileShare; set => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IAccountLimitsInternal)StorageAccountLimit).MaxFileShare = value; }

        /// <summary>Internal Acessors for StorageAccountLimitMaxProvisionedBandwidthMiBPerSec</summary>
        int? Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileServiceUsagePropertiesInternal.StorageAccountLimitMaxProvisionedBandwidthMiBPerSec { get => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IAccountLimitsInternal)StorageAccountLimit).MaxProvisionedBandwidthMiBPerSec; set => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IAccountLimitsInternal)StorageAccountLimit).MaxProvisionedBandwidthMiBPerSec = value; }

        /// <summary>Internal Acessors for StorageAccountLimitMaxProvisionedIop</summary>
        int? Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileServiceUsagePropertiesInternal.StorageAccountLimitMaxProvisionedIop { get => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IAccountLimitsInternal)StorageAccountLimit).MaxProvisionedIop; set => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IAccountLimitsInternal)StorageAccountLimit).MaxProvisionedIop = value; }

        /// <summary>Internal Acessors for StorageAccountLimitMaxProvisionedStorageGiB</summary>
        int? Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileServiceUsagePropertiesInternal.StorageAccountLimitMaxProvisionedStorageGiB { get => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IAccountLimitsInternal)StorageAccountLimit).MaxProvisionedStorageGiB; set => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IAccountLimitsInternal)StorageAccountLimit).MaxProvisionedStorageGiB = value; }

        /// <summary>Internal Acessors for StorageAccountUsage</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IAccountUsage Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileServiceUsagePropertiesInternal.StorageAccountUsage { get => (this._storageAccountUsage = this._storageAccountUsage ?? new Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.AccountUsage()); set { {_storageAccountUsage = value;} } }

        /// <summary>Internal Acessors for StorageAccountUsageLiveShare</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IAccountUsageElements Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileServiceUsagePropertiesInternal.StorageAccountUsageLiveShare { get => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IAccountUsageInternal)StorageAccountUsage).LiveShare; set => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IAccountUsageInternal)StorageAccountUsage).LiveShare = value; }

        /// <summary>Internal Acessors for StorageAccountUsageSoftDeletedShare</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IAccountUsageElements Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileServiceUsagePropertiesInternal.StorageAccountUsageSoftDeletedShare { get => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IAccountUsageInternal)StorageAccountUsage).SoftDeletedShare; set => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IAccountUsageInternal)StorageAccountUsage).SoftDeletedShare = value; }

        /// <summary>The total number of file shares.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Origin(Microsoft.Azure.PowerShell.Cmdlets.Storage.PropertyOrigin.Inlined)]
        public int? SoftDeletedShareFileShareCount { get => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IAccountUsageInternal)StorageAccountUsage).SoftDeletedShareFileShareCount; }

        /// <summary>The total provisioned bandwidth in mebibytes per second.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Origin(Microsoft.Azure.PowerShell.Cmdlets.Storage.PropertyOrigin.Inlined)]
        public int? SoftDeletedShareProvisionedBandwidthMiBPerSec { get => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IAccountUsageInternal)StorageAccountUsage).SoftDeletedShareProvisionedBandwidthMiBPerSec; }

        /// <summary>The total provisioned IOPS.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Origin(Microsoft.Azure.PowerShell.Cmdlets.Storage.PropertyOrigin.Inlined)]
        public int? SoftDeletedShareProvisionedIop { get => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IAccountUsageInternal)StorageAccountUsage).SoftDeletedShareProvisionedIop; }

        /// <summary>The total provisioned storage quota in gibibytes.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Origin(Microsoft.Azure.PowerShell.Cmdlets.Storage.PropertyOrigin.Inlined)]
        public int? SoftDeletedShareProvisionedStorageGiB { get => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IAccountUsageInternal)StorageAccountUsage).SoftDeletedShareProvisionedStorageGiB; }

        /// <summary>Backing field for <see cref="StorageAccountLimit" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IAccountLimits _storageAccountLimit;

        /// <summary>
        /// Maximum provisioned storage, IOPS, bandwidth and number of file shares limits for the storage account.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Origin(Microsoft.Azure.PowerShell.Cmdlets.Storage.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IAccountLimits StorageAccountLimit { get => (this._storageAccountLimit = this._storageAccountLimit ?? new Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.AccountLimits()); }

        /// <summary>The maximum number of file shares limit for the storage account.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Origin(Microsoft.Azure.PowerShell.Cmdlets.Storage.PropertyOrigin.Inlined)]
        public int? StorageAccountLimitMaxFileShare { get => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IAccountLimitsInternal)StorageAccountLimit).MaxFileShare; }

        /// <summary>
        /// The maximum provisioned bandwidth limit in mebibytes per second for the storage account.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Origin(Microsoft.Azure.PowerShell.Cmdlets.Storage.PropertyOrigin.Inlined)]
        public int? StorageAccountLimitMaxProvisionedBandwidthMiBPerSec { get => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IAccountLimitsInternal)StorageAccountLimit).MaxProvisionedBandwidthMiBPerSec; }

        /// <summary>The maximum provisioned IOPS limit for the storage account.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Origin(Microsoft.Azure.PowerShell.Cmdlets.Storage.PropertyOrigin.Inlined)]
        public int? StorageAccountLimitMaxProvisionedIop { get => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IAccountLimitsInternal)StorageAccountLimit).MaxProvisionedIop; }

        /// <summary>
        /// The maximum provisioned storage quota limit in gibibytes for the storage account.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Origin(Microsoft.Azure.PowerShell.Cmdlets.Storage.PropertyOrigin.Inlined)]
        public int? StorageAccountLimitMaxProvisionedStorageGiB { get => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IAccountLimitsInternal)StorageAccountLimit).MaxProvisionedStorageGiB; }

        /// <summary>Backing field for <see cref="StorageAccountUsage" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IAccountUsage _storageAccountUsage;

        /// <summary>
        /// Usage of provisioned storage, IOPS, bandwidth and number of file shares across all live shares and soft-deleted shares
        /// in the account.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Origin(Microsoft.Azure.PowerShell.Cmdlets.Storage.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IAccountUsage StorageAccountUsage { get => (this._storageAccountUsage = this._storageAccountUsage ?? new Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.AccountUsage()); }

        /// <summary>Creates an new <see cref="FileServiceUsageProperties" /> instance.</summary>
        public FileServiceUsageProperties()
        {

        }
    }
    /// File service usage in storage account including account limits, file share limits and constants used in recommendations
    /// and bursting formula.
    public partial interface IFileServiceUsageProperties :
        Microsoft.Azure.PowerShell.Cmdlets.Storage.Runtime.IJsonSerializable
    {
        /// <summary>The guaranteed floor of burst IOPS for small file shares.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The guaranteed floor of burst IOPS for small file shares.",
        SerializedName = @"burstFloorIOPS",
        PossibleTypes = new [] { typeof(int) })]
        int? BurstingConstantBurstFloorIop { get;  }
        /// <summary>
        /// The scalar against provisioned IOPS in the file share included burst IOPS formula.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The scalar against provisioned IOPS in the file share included burst IOPS formula.",
        SerializedName = @"burstIOScalar",
        PossibleTypes = new [] { typeof(double) })]
        double? BurstingConstantBurstIoScalar { get;  }
        /// <summary>
        /// The time frame for bursting in seconds in the file share maximum burst credits for IOPS formula.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The time frame for bursting in seconds in the file share maximum burst credits for IOPS formula.",
        SerializedName = @"burstTimeframeSeconds",
        PossibleTypes = new [] { typeof(int) })]
        int? BurstingConstantBurstTimeframeSecond { get;  }
        /// <summary>
        /// The maximum provisioned bandwidth limit in mebibytes per second for a file share in the storage account.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The maximum provisioned bandwidth limit in mebibytes per second for a file share in the storage account.",
        SerializedName = @"maxProvisionedBandwidthMiBPerSec",
        PossibleTypes = new [] { typeof(int) })]
        int? FileShareLimitMaxProvisionedBandwidthMiBPerSec { get;  }
        /// <summary>The maximum provisioned IOPS limit for a file share in the storage account.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The maximum provisioned IOPS limit for a file share in the storage account.",
        SerializedName = @"maxProvisionedIOPS",
        PossibleTypes = new [] { typeof(int) })]
        int? FileShareLimitMaxProvisionedIop { get;  }
        /// <summary>
        /// The maximum provisioned storage quota limit in gibibytes for a file share in the storage account.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The maximum provisioned storage quota limit in gibibytes for a file share in the storage account.",
        SerializedName = @"maxProvisionedStorageGiB",
        PossibleTypes = new [] { typeof(int) })]
        int? FileShareLimitMaxProvisionedStorageGiB { get;  }
        /// <summary>
        /// The minimum provisioned bandwidth limit in mebibytes per second for a file share in the storage account.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The minimum provisioned bandwidth limit in mebibytes per second for a file share in the storage account.",
        SerializedName = @"minProvisionedBandwidthMiBPerSec",
        PossibleTypes = new [] { typeof(int) })]
        int? FileShareLimitMinProvisionedBandwidthMiBPerSec { get;  }
        /// <summary>The minimum provisioned IOPS limit for a file share in the storage account.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The minimum provisioned IOPS limit for a file share in the storage account.",
        SerializedName = @"minProvisionedIOPS",
        PossibleTypes = new [] { typeof(int) })]
        int? FileShareLimitMinProvisionedIop { get;  }
        /// <summary>
        /// The minimum provisioned storage quota limit in gibibytes for a file share in the storage account.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The minimum provisioned storage quota limit in gibibytes for a file share in the storage account.",
        SerializedName = @"minProvisionedStorageGiB",
        PossibleTypes = new [] { typeof(int) })]
        int? FileShareLimitMinProvisionedStorageGiB { get;  }
        /// <summary>
        /// The scalar for bandwidth in the file share provisioned bandwidth recommendation formula.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The scalar for bandwidth in the file share provisioned bandwidth recommendation formula.",
        SerializedName = @"bandwidthScalar",
        PossibleTypes = new [] { typeof(double) })]
        double? FileShareRecommendationBandwidthScalar { get;  }
        /// <summary>
        /// The base bandwidth in the file share provisioned bandwidth recommendation formula.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The base bandwidth in the file share provisioned bandwidth recommendation formula.",
        SerializedName = @"baseBandwidthMiBPerSec",
        PossibleTypes = new [] { typeof(int) })]
        int? FileShareRecommendationBaseBandwidthMiBPerSec { get;  }
        /// <summary>The base IOPS in the file share provisioned IOPS recommendation formula.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The base IOPS in the file share provisioned IOPS recommendation formula.",
        SerializedName = @"baseIOPS",
        PossibleTypes = new [] { typeof(int) })]
        int? FileShareRecommendationBaseIop { get;  }
        /// <summary>The scalar for IO in the file share provisioned IOPS recommendation formula.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The scalar for IO in the file share provisioned IOPS recommendation formula.",
        SerializedName = @"ioScalar",
        PossibleTypes = new [] { typeof(double) })]
        double? FileShareRecommendationIoScalar { get;  }
        /// <summary>The total number of file shares.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The total number of file shares.",
        SerializedName = @"fileShareCount",
        PossibleTypes = new [] { typeof(int) })]
        int? LiveShareFileShareCount { get;  }
        /// <summary>The total provisioned bandwidth in mebibytes per second.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The total provisioned bandwidth in mebibytes per second.",
        SerializedName = @"provisionedBandwidthMiBPerSec",
        PossibleTypes = new [] { typeof(int) })]
        int? LiveShareProvisionedBandwidthMiBPerSec { get;  }
        /// <summary>The total provisioned IOPS.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The total provisioned IOPS.",
        SerializedName = @"provisionedIOPS",
        PossibleTypes = new [] { typeof(int) })]
        int? LiveShareProvisionedIop { get;  }
        /// <summary>The total provisioned storage quota in gibibytes.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The total provisioned storage quota in gibibytes.",
        SerializedName = @"provisionedStorageGiB",
        PossibleTypes = new [] { typeof(int) })]
        int? LiveShareProvisionedStorageGiB { get;  }
        /// <summary>The total number of file shares.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The total number of file shares.",
        SerializedName = @"fileShareCount",
        PossibleTypes = new [] { typeof(int) })]
        int? SoftDeletedShareFileShareCount { get;  }
        /// <summary>The total provisioned bandwidth in mebibytes per second.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The total provisioned bandwidth in mebibytes per second.",
        SerializedName = @"provisionedBandwidthMiBPerSec",
        PossibleTypes = new [] { typeof(int) })]
        int? SoftDeletedShareProvisionedBandwidthMiBPerSec { get;  }
        /// <summary>The total provisioned IOPS.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The total provisioned IOPS.",
        SerializedName = @"provisionedIOPS",
        PossibleTypes = new [] { typeof(int) })]
        int? SoftDeletedShareProvisionedIop { get;  }
        /// <summary>The total provisioned storage quota in gibibytes.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The total provisioned storage quota in gibibytes.",
        SerializedName = @"provisionedStorageGiB",
        PossibleTypes = new [] { typeof(int) })]
        int? SoftDeletedShareProvisionedStorageGiB { get;  }
        /// <summary>The maximum number of file shares limit for the storage account.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The maximum number of file shares limit for the storage account.",
        SerializedName = @"maxFileShares",
        PossibleTypes = new [] { typeof(int) })]
        int? StorageAccountLimitMaxFileShare { get;  }
        /// <summary>
        /// The maximum provisioned bandwidth limit in mebibytes per second for the storage account.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The maximum provisioned bandwidth limit in mebibytes per second for the storage account.",
        SerializedName = @"maxProvisionedBandwidthMiBPerSec",
        PossibleTypes = new [] { typeof(int) })]
        int? StorageAccountLimitMaxProvisionedBandwidthMiBPerSec { get;  }
        /// <summary>The maximum provisioned IOPS limit for the storage account.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The maximum provisioned IOPS limit for the storage account.",
        SerializedName = @"maxProvisionedIOPS",
        PossibleTypes = new [] { typeof(int) })]
        int? StorageAccountLimitMaxProvisionedIop { get;  }
        /// <summary>
        /// The maximum provisioned storage quota limit in gibibytes for the storage account.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The maximum provisioned storage quota limit in gibibytes for the storage account.",
        SerializedName = @"maxProvisionedStorageGiB",
        PossibleTypes = new [] { typeof(int) })]
        int? StorageAccountLimitMaxProvisionedStorageGiB { get;  }

    }
    /// File service usage in storage account including account limits, file share limits and constants used in recommendations
    /// and bursting formula.
    internal partial interface IFileServiceUsagePropertiesInternal

    {
        /// <summary>
        /// Constants used for calculating included burst IOPS and maximum burst credits for IOPS for a file share in the storage
        /// account.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IBurstingConstants BurstingConstant { get; set; }
        /// <summary>The guaranteed floor of burst IOPS for small file shares.</summary>
        int? BurstingConstantBurstFloorIop { get; set; }
        /// <summary>
        /// The scalar against provisioned IOPS in the file share included burst IOPS formula.
        /// </summary>
        double? BurstingConstantBurstIoScalar { get; set; }
        /// <summary>
        /// The time frame for bursting in seconds in the file share maximum burst credits for IOPS formula.
        /// </summary>
        int? BurstingConstantBurstTimeframeSecond { get; set; }
        /// <summary>
        /// Minimum and maximum provisioned storage, IOPS and bandwidth limits for a file share in the storage account.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileShareLimits FileShareLimit { get; set; }
        /// <summary>
        /// The maximum provisioned bandwidth limit in mebibytes per second for a file share in the storage account.
        /// </summary>
        int? FileShareLimitMaxProvisionedBandwidthMiBPerSec { get; set; }
        /// <summary>The maximum provisioned IOPS limit for a file share in the storage account.</summary>
        int? FileShareLimitMaxProvisionedIop { get; set; }
        /// <summary>
        /// The maximum provisioned storage quota limit in gibibytes for a file share in the storage account.
        /// </summary>
        int? FileShareLimitMaxProvisionedStorageGiB { get; set; }
        /// <summary>
        /// The minimum provisioned bandwidth limit in mebibytes per second for a file share in the storage account.
        /// </summary>
        int? FileShareLimitMinProvisionedBandwidthMiBPerSec { get; set; }
        /// <summary>The minimum provisioned IOPS limit for a file share in the storage account.</summary>
        int? FileShareLimitMinProvisionedIop { get; set; }
        /// <summary>
        /// The minimum provisioned storage quota limit in gibibytes for a file share in the storage account.
        /// </summary>
        int? FileShareLimitMinProvisionedStorageGiB { get; set; }
        /// <summary>
        /// Constants used for calculating recommended provisioned IOPS and bandwidth for a file share in the storage account.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileShareRecommendations FileShareRecommendation { get; set; }
        /// <summary>
        /// The scalar for bandwidth in the file share provisioned bandwidth recommendation formula.
        /// </summary>
        double? FileShareRecommendationBandwidthScalar { get; set; }
        /// <summary>
        /// The base bandwidth in the file share provisioned bandwidth recommendation formula.
        /// </summary>
        int? FileShareRecommendationBaseBandwidthMiBPerSec { get; set; }
        /// <summary>The base IOPS in the file share provisioned IOPS recommendation formula.</summary>
        int? FileShareRecommendationBaseIop { get; set; }
        /// <summary>The scalar for IO in the file share provisioned IOPS recommendation formula.</summary>
        double? FileShareRecommendationIoScalar { get; set; }
        /// <summary>The total number of file shares.</summary>
        int? LiveShareFileShareCount { get; set; }
        /// <summary>The total provisioned bandwidth in mebibytes per second.</summary>
        int? LiveShareProvisionedBandwidthMiBPerSec { get; set; }
        /// <summary>The total provisioned IOPS.</summary>
        int? LiveShareProvisionedIop { get; set; }
        /// <summary>The total provisioned storage quota in gibibytes.</summary>
        int? LiveShareProvisionedStorageGiB { get; set; }
        /// <summary>The total number of file shares.</summary>
        int? SoftDeletedShareFileShareCount { get; set; }
        /// <summary>The total provisioned bandwidth in mebibytes per second.</summary>
        int? SoftDeletedShareProvisionedBandwidthMiBPerSec { get; set; }
        /// <summary>The total provisioned IOPS.</summary>
        int? SoftDeletedShareProvisionedIop { get; set; }
        /// <summary>The total provisioned storage quota in gibibytes.</summary>
        int? SoftDeletedShareProvisionedStorageGiB { get; set; }
        /// <summary>
        /// Maximum provisioned storage, IOPS, bandwidth and number of file shares limits for the storage account.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IAccountLimits StorageAccountLimit { get; set; }
        /// <summary>The maximum number of file shares limit for the storage account.</summary>
        int? StorageAccountLimitMaxFileShare { get; set; }
        /// <summary>
        /// The maximum provisioned bandwidth limit in mebibytes per second for the storage account.
        /// </summary>
        int? StorageAccountLimitMaxProvisionedBandwidthMiBPerSec { get; set; }
        /// <summary>The maximum provisioned IOPS limit for the storage account.</summary>
        int? StorageAccountLimitMaxProvisionedIop { get; set; }
        /// <summary>
        /// The maximum provisioned storage quota limit in gibibytes for the storage account.
        /// </summary>
        int? StorageAccountLimitMaxProvisionedStorageGiB { get; set; }
        /// <summary>
        /// Usage of provisioned storage, IOPS, bandwidth and number of file shares across all live shares and soft-deleted shares
        /// in the account.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IAccountUsage StorageAccountUsage { get; set; }
        /// <summary>
        /// Usage of provisioned storage, IOPS, bandwidth and number of file shares across all live shares or soft-deleted shares
        /// in the account.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IAccountUsageElements StorageAccountUsageLiveShare { get; set; }
        /// <summary>
        /// Usage of provisioned storage, IOPS, bandwidth and number of file shares across all live shares or soft-deleted shares
        /// in the account.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IAccountUsageElements StorageAccountUsageSoftDeletedShare { get; set; }

    }
}