// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models
{
    using Microsoft.Azure.PowerShell.Cmdlets.Oracle.Runtime.PowerShell;

    /// <summary>CloudVmCluster resource definition</summary>
    [System.ComponentModel.TypeConverter(typeof(CloudVMClusterTypeConverter))]
    public partial class CloudVMCluster
    {

        /// <summary>
        /// <c>AfterDeserializeDictionary</c> will be called after the deserialization has finished, allowing customization of the
        /// object before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>

        partial void AfterDeserializeDictionary(global::System.Collections.IDictionary content);

        /// <summary>
        /// <c>AfterDeserializePSObject</c> will be called after the deserialization has finished, allowing customization of the object
        /// before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>

        partial void AfterDeserializePSObject(global::System.Management.Automation.PSObject content);

        /// <summary>
        /// <c>BeforeDeserializeDictionary</c> will be called before the deserialization has commenced, allowing complete customization
        /// of the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <paramref name="returnNow" /> output
        /// parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeDeserializeDictionary(global::System.Collections.IDictionary content, ref bool returnNow);

        /// <summary>
        /// <c>BeforeDeserializePSObject</c> will be called before the deserialization has commenced, allowing complete customization
        /// of the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <paramref name="returnNow" /> output
        /// parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeDeserializePSObject(global::System.Management.Automation.PSObject content, ref bool returnNow);

        /// <summary>
        /// <c>OverrideToString</c> will be called if it is implemented. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="stringResult">/// instance serialized to a string, normally it is a Json</param>
        /// <param name="returnNow">/// set returnNow to true if you provide a customized OverrideToString function</param>

        partial void OverrideToString(ref string stringResult, ref bool returnNow);

        /// <summary>
        /// Deserializes a <see cref="global::System.Collections.IDictionary" /> into a new instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.CloudVMCluster"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        internal CloudVMCluster(global::System.Collections.IDictionary content)
        {
            bool returnNow = false;
            BeforeDeserializeDictionary(content, ref returnNow);
            if (returnNow)
            {
                return;
            }
            // actually deserialize
            if (content.Contains("Property"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.ICloudVMClusterInternal)this).Property = (Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.ICloudVMClusterProperties) content.GetValueForProperty("Property",((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.ICloudVMClusterInternal)this).Property, Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.CloudVMClusterPropertiesTypeConverter.ConvertFrom);
            }
            if (content.Contains("SystemDataCreatedBy"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IResourceInternal)this).SystemDataCreatedBy = (string) content.GetValueForProperty("SystemDataCreatedBy",((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IResourceInternal)this).SystemDataCreatedBy, global::System.Convert.ToString);
            }
            if (content.Contains("SystemDataCreatedAt"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IResourceInternal)this).SystemDataCreatedAt = (global::System.DateTime?) content.GetValueForProperty("SystemDataCreatedAt",((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IResourceInternal)this).SystemDataCreatedAt, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            if (content.Contains("SystemDataCreatedByType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IResourceInternal)this).SystemDataCreatedByType = (string) content.GetValueForProperty("SystemDataCreatedByType",((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IResourceInternal)this).SystemDataCreatedByType, global::System.Convert.ToString);
            }
            if (content.Contains("SystemDataLastModifiedBy"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IResourceInternal)this).SystemDataLastModifiedBy = (string) content.GetValueForProperty("SystemDataLastModifiedBy",((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IResourceInternal)this).SystemDataLastModifiedBy, global::System.Convert.ToString);
            }
            if (content.Contains("SystemDataLastModifiedByType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IResourceInternal)this).SystemDataLastModifiedByType = (string) content.GetValueForProperty("SystemDataLastModifiedByType",((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IResourceInternal)this).SystemDataLastModifiedByType, global::System.Convert.ToString);
            }
            if (content.Contains("SystemDataLastModifiedAt"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IResourceInternal)this).SystemDataLastModifiedAt = (global::System.DateTime?) content.GetValueForProperty("SystemDataLastModifiedAt",((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IResourceInternal)this).SystemDataLastModifiedAt, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            if (content.Contains("SystemData"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IResourceInternal)this).SystemData = (Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.ISystemData) content.GetValueForProperty("SystemData",((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IResourceInternal)this).SystemData, Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.SystemDataTypeConverter.ConvertFrom);
            }
            if (content.Contains("Id"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IResourceInternal)this).Id = (string) content.GetValueForProperty("Id",((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IResourceInternal)this).Id, global::System.Convert.ToString);
            }
            if (content.Contains("Name"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IResourceInternal)this).Name = (string) content.GetValueForProperty("Name",((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IResourceInternal)this).Name, global::System.Convert.ToString);
            }
            if (content.Contains("Type"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IResourceInternal)this).Type = (string) content.GetValueForProperty("Type",((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IResourceInternal)this).Type, global::System.Convert.ToString);
            }
            if (content.Contains("Tag"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.ITrackedResourceInternal)this).Tag = (Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.ITrackedResourceTags) content.GetValueForProperty("Tag",((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.ITrackedResourceInternal)this).Tag, Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.TrackedResourceTagsTypeConverter.ConvertFrom);
            }
            if (content.Contains("Location"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.ITrackedResourceInternal)this).Location = (string) content.GetValueForProperty("Location",((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.ITrackedResourceInternal)this).Location, global::System.Convert.ToString);
            }
            if (content.Contains("Ocid"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.ICloudVMClusterInternal)this).Ocid = (string) content.GetValueForProperty("Ocid",((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.ICloudVMClusterInternal)this).Ocid, global::System.Convert.ToString);
            }
            if (content.Contains("LicenseModel"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.ICloudVMClusterInternal)this).LicenseModel = (string) content.GetValueForProperty("LicenseModel",((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.ICloudVMClusterInternal)this).LicenseModel, global::System.Convert.ToString);
            }
            if (content.Contains("DiskRedundancy"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.ICloudVMClusterInternal)this).DiskRedundancy = (string) content.GetValueForProperty("DiskRedundancy",((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.ICloudVMClusterInternal)this).DiskRedundancy, global::System.Convert.ToString);
            }
            if (content.Contains("VnetId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.ICloudVMClusterInternal)this).VnetId = (string) content.GetValueForProperty("VnetId",((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.ICloudVMClusterInternal)this).VnetId, global::System.Convert.ToString);
            }
            if (content.Contains("SubnetId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.ICloudVMClusterInternal)this).SubnetId = (string) content.GetValueForProperty("SubnetId",((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.ICloudVMClusterInternal)this).SubnetId, global::System.Convert.ToString);
            }
            if (content.Contains("DataCollectionOption"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.ICloudVMClusterInternal)this).DataCollectionOption = (Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IDataCollectionOptions) content.GetValueForProperty("DataCollectionOption",((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.ICloudVMClusterInternal)this).DataCollectionOption, Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.DataCollectionOptionsTypeConverter.ConvertFrom);
            }
            if (content.Contains("IormConfigCache"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.ICloudVMClusterInternal)this).IormConfigCache = (Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IExadataIormConfig) content.GetValueForProperty("IormConfigCache",((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.ICloudVMClusterInternal)this).IormConfigCache, Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.ExadataIormConfigTypeConverter.ConvertFrom);
            }
            if (content.Contains("ListenerPort"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.ICloudVMClusterInternal)this).ListenerPort = (long?) content.GetValueForProperty("ListenerPort",((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.ICloudVMClusterInternal)this).ListenerPort, (__y)=> (long) global::System.Convert.ChangeType(__y, typeof(long)));
            }
            if (content.Contains("NodeCount"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.ICloudVMClusterInternal)this).NodeCount = (int?) content.GetValueForProperty("NodeCount",((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.ICloudVMClusterInternal)this).NodeCount, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("StorageSizeInGb"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.ICloudVMClusterInternal)this).StorageSizeInGb = (int?) content.GetValueForProperty("StorageSizeInGb",((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.ICloudVMClusterInternal)this).StorageSizeInGb, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("DataStorageSizeInTb"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.ICloudVMClusterInternal)this).DataStorageSizeInTb = (double?) content.GetValueForProperty("DataStorageSizeInTb",((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.ICloudVMClusterInternal)this).DataStorageSizeInTb, (__y)=> (double) global::System.Convert.ChangeType(__y, typeof(double)));
            }
            if (content.Contains("DbNodeStorageSizeInGb"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.ICloudVMClusterInternal)this).DbNodeStorageSizeInGb = (int?) content.GetValueForProperty("DbNodeStorageSizeInGb",((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.ICloudVMClusterInternal)this).DbNodeStorageSizeInGb, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("MemorySizeInGb"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.ICloudVMClusterInternal)this).MemorySizeInGb = (int?) content.GetValueForProperty("MemorySizeInGb",((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.ICloudVMClusterInternal)this).MemorySizeInGb, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("TimeCreated"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.ICloudVMClusterInternal)this).TimeCreated = (global::System.DateTime?) content.GetValueForProperty("TimeCreated",((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.ICloudVMClusterInternal)this).TimeCreated, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            if (content.Contains("LifecycleDetail"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.ICloudVMClusterInternal)this).LifecycleDetail = (string) content.GetValueForProperty("LifecycleDetail",((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.ICloudVMClusterInternal)this).LifecycleDetail, global::System.Convert.ToString);
            }
            if (content.Contains("TimeZone"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.ICloudVMClusterInternal)this).TimeZone = (string) content.GetValueForProperty("TimeZone",((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.ICloudVMClusterInternal)this).TimeZone, global::System.Convert.ToString);
            }
            if (content.Contains("ZoneId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.ICloudVMClusterInternal)this).ZoneId = (string) content.GetValueForProperty("ZoneId",((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.ICloudVMClusterInternal)this).ZoneId, global::System.Convert.ToString);
            }
            if (content.Contains("Hostname"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.ICloudVMClusterInternal)this).Hostname = (string) content.GetValueForProperty("Hostname",((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.ICloudVMClusterInternal)this).Hostname, global::System.Convert.ToString);
            }
            if (content.Contains("Domain"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.ICloudVMClusterInternal)this).Domain = (string) content.GetValueForProperty("Domain",((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.ICloudVMClusterInternal)this).Domain, global::System.Convert.ToString);
            }
            if (content.Contains("CpuCoreCount"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.ICloudVMClusterInternal)this).CpuCoreCount = (int) content.GetValueForProperty("CpuCoreCount",((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.ICloudVMClusterInternal)this).CpuCoreCount, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("OcpuCount"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.ICloudVMClusterInternal)this).OcpuCount = (float?) content.GetValueForProperty("OcpuCount",((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.ICloudVMClusterInternal)this).OcpuCount, (__y)=> (float) global::System.Convert.ChangeType(__y, typeof(float)));
            }
            if (content.Contains("ClusterName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.ICloudVMClusterInternal)this).ClusterName = (string) content.GetValueForProperty("ClusterName",((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.ICloudVMClusterInternal)this).ClusterName, global::System.Convert.ToString);
            }
            if (content.Contains("DataStoragePercentage"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.ICloudVMClusterInternal)this).DataStoragePercentage = (int?) content.GetValueForProperty("DataStoragePercentage",((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.ICloudVMClusterInternal)this).DataStoragePercentage, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("IsLocalBackupEnabled"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.ICloudVMClusterInternal)this).IsLocalBackupEnabled = (bool?) content.GetValueForProperty("IsLocalBackupEnabled",((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.ICloudVMClusterInternal)this).IsLocalBackupEnabled, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("CloudExadataInfrastructureId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.ICloudVMClusterInternal)this).CloudExadataInfrastructureId = (string) content.GetValueForProperty("CloudExadataInfrastructureId",((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.ICloudVMClusterInternal)this).CloudExadataInfrastructureId, global::System.Convert.ToString);
            }
            if (content.Contains("IsSparseDiskgroupEnabled"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.ICloudVMClusterInternal)this).IsSparseDiskgroupEnabled = (bool?) content.GetValueForProperty("IsSparseDiskgroupEnabled",((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.ICloudVMClusterInternal)this).IsSparseDiskgroupEnabled, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("SystemVersion"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.ICloudVMClusterInternal)this).SystemVersion = (string) content.GetValueForProperty("SystemVersion",((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.ICloudVMClusterInternal)this).SystemVersion, global::System.Convert.ToString);
            }
            if (content.Contains("SshPublicKey"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.ICloudVMClusterInternal)this).SshPublicKey = (System.Collections.Generic.List<string>) content.GetValueForProperty("SshPublicKey",((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.ICloudVMClusterInternal)this).SshPublicKey, __y => TypeConverterExtensions.SelectToList<string>(__y, global::System.Convert.ToString));
            }
            if (content.Contains("ScanIPId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.ICloudVMClusterInternal)this).ScanIPId = (System.Collections.Generic.List<string>) content.GetValueForProperty("ScanIPId",((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.ICloudVMClusterInternal)this).ScanIPId, __y => TypeConverterExtensions.SelectToList<string>(__y, global::System.Convert.ToString));
            }
            if (content.Contains("VipId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.ICloudVMClusterInternal)this).VipId = (System.Collections.Generic.List<string>) content.GetValueForProperty("VipId",((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.ICloudVMClusterInternal)this).VipId, __y => TypeConverterExtensions.SelectToList<string>(__y, global::System.Convert.ToString));
            }
            if (content.Contains("ScanDnsName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.ICloudVMClusterInternal)this).ScanDnsName = (string) content.GetValueForProperty("ScanDnsName",((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.ICloudVMClusterInternal)this).ScanDnsName, global::System.Convert.ToString);
            }
            if (content.Contains("ScanListenerPortTcp"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.ICloudVMClusterInternal)this).ScanListenerPortTcp = (int?) content.GetValueForProperty("ScanListenerPortTcp",((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.ICloudVMClusterInternal)this).ScanListenerPortTcp, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("ScanListenerPortTcpSsl"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.ICloudVMClusterInternal)this).ScanListenerPortTcpSsl = (int?) content.GetValueForProperty("ScanListenerPortTcpSsl",((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.ICloudVMClusterInternal)this).ScanListenerPortTcpSsl, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("ScanDnsRecordId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.ICloudVMClusterInternal)this).ScanDnsRecordId = (string) content.GetValueForProperty("ScanDnsRecordId",((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.ICloudVMClusterInternal)this).ScanDnsRecordId, global::System.Convert.ToString);
            }
            if (content.Contains("Shape"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.ICloudVMClusterInternal)this).Shape = (string) content.GetValueForProperty("Shape",((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.ICloudVMClusterInternal)this).Shape, global::System.Convert.ToString);
            }
            if (content.Contains("ProvisioningState"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.ICloudVMClusterInternal)this).ProvisioningState = (string) content.GetValueForProperty("ProvisioningState",((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.ICloudVMClusterInternal)this).ProvisioningState, global::System.Convert.ToString);
            }
            if (content.Contains("LifecycleState"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.ICloudVMClusterInternal)this).LifecycleState = (string) content.GetValueForProperty("LifecycleState",((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.ICloudVMClusterInternal)this).LifecycleState, global::System.Convert.ToString);
            }
            if (content.Contains("GiVersion"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.ICloudVMClusterInternal)this).GiVersion = (string) content.GetValueForProperty("GiVersion",((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.ICloudVMClusterInternal)this).GiVersion, global::System.Convert.ToString);
            }
            if (content.Contains("OciUrl"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.ICloudVMClusterInternal)this).OciUrl = (string) content.GetValueForProperty("OciUrl",((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.ICloudVMClusterInternal)this).OciUrl, global::System.Convert.ToString);
            }
            if (content.Contains("NsgUrl"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.ICloudVMClusterInternal)this).NsgUrl = (string) content.GetValueForProperty("NsgUrl",((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.ICloudVMClusterInternal)this).NsgUrl, global::System.Convert.ToString);
            }
            if (content.Contains("BackupSubnetCidr"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.ICloudVMClusterInternal)this).BackupSubnetCidr = (string) content.GetValueForProperty("BackupSubnetCidr",((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.ICloudVMClusterInternal)this).BackupSubnetCidr, global::System.Convert.ToString);
            }
            if (content.Contains("NsgCidr"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.ICloudVMClusterInternal)this).NsgCidr = (System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.INsgCidr>) content.GetValueForProperty("NsgCidr",((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.ICloudVMClusterInternal)this).NsgCidr, __y => TypeConverterExtensions.SelectToList<Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.INsgCidr>(__y, Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.NsgCidrTypeConverter.ConvertFrom));
            }
            if (content.Contains("DisplayName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.ICloudVMClusterInternal)this).DisplayName = (string) content.GetValueForProperty("DisplayName",((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.ICloudVMClusterInternal)this).DisplayName, global::System.Convert.ToString);
            }
            if (content.Contains("ComputeNode"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.ICloudVMClusterInternal)this).ComputeNode = (System.Collections.Generic.List<string>) content.GetValueForProperty("ComputeNode",((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.ICloudVMClusterInternal)this).ComputeNode, __y => TypeConverterExtensions.SelectToList<string>(__y, global::System.Convert.ToString));
            }
            if (content.Contains("LastUpdateHistoryEntryId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.ICloudVMClusterInternal)this).LastUpdateHistoryEntryId = (string) content.GetValueForProperty("LastUpdateHistoryEntryId",((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.ICloudVMClusterInternal)this).LastUpdateHistoryEntryId, global::System.Convert.ToString);
            }
            if (content.Contains("DbServer"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.ICloudVMClusterInternal)this).DbServer = (System.Collections.Generic.List<string>) content.GetValueForProperty("DbServer",((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.ICloudVMClusterInternal)this).DbServer, __y => TypeConverterExtensions.SelectToList<string>(__y, global::System.Convert.ToString));
            }
            if (content.Contains("CompartmentId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.ICloudVMClusterInternal)this).CompartmentId = (string) content.GetValueForProperty("CompartmentId",((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.ICloudVMClusterInternal)this).CompartmentId, global::System.Convert.ToString);
            }
            if (content.Contains("SubnetOcid"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.ICloudVMClusterInternal)this).SubnetOcid = (string) content.GetValueForProperty("SubnetOcid",((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.ICloudVMClusterInternal)this).SubnetOcid, global::System.Convert.ToString);
            }
            if (content.Contains("IormConfigCacheObjective"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.ICloudVMClusterInternal)this).IormConfigCacheObjective = (string) content.GetValueForProperty("IormConfigCacheObjective",((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.ICloudVMClusterInternal)this).IormConfigCacheObjective, global::System.Convert.ToString);
            }
            if (content.Contains("DataCollectionOptionIsDiagnosticsEventsEnabled"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.ICloudVMClusterInternal)this).DataCollectionOptionIsDiagnosticsEventsEnabled = (bool?) content.GetValueForProperty("DataCollectionOptionIsDiagnosticsEventsEnabled",((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.ICloudVMClusterInternal)this).DataCollectionOptionIsDiagnosticsEventsEnabled, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("DataCollectionOptionIsHealthMonitoringEnabled"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.ICloudVMClusterInternal)this).DataCollectionOptionIsHealthMonitoringEnabled = (bool?) content.GetValueForProperty("DataCollectionOptionIsHealthMonitoringEnabled",((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.ICloudVMClusterInternal)this).DataCollectionOptionIsHealthMonitoringEnabled, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("DataCollectionOptionIsIncidentLogsEnabled"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.ICloudVMClusterInternal)this).DataCollectionOptionIsIncidentLogsEnabled = (bool?) content.GetValueForProperty("DataCollectionOptionIsIncidentLogsEnabled",((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.ICloudVMClusterInternal)this).DataCollectionOptionIsIncidentLogsEnabled, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("IormConfigCacheDbPlan"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.ICloudVMClusterInternal)this).IormConfigCacheDbPlan = (System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IDbIormConfig>) content.GetValueForProperty("IormConfigCacheDbPlan",((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.ICloudVMClusterInternal)this).IormConfigCacheDbPlan, __y => TypeConverterExtensions.SelectToList<Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IDbIormConfig>(__y, Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.DbIormConfigTypeConverter.ConvertFrom));
            }
            if (content.Contains("IormConfigCacheLifecycleDetail"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.ICloudVMClusterInternal)this).IormConfigCacheLifecycleDetail = (string) content.GetValueForProperty("IormConfigCacheLifecycleDetail",((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.ICloudVMClusterInternal)this).IormConfigCacheLifecycleDetail, global::System.Convert.ToString);
            }
            if (content.Contains("IormConfigCacheLifecycleState"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.ICloudVMClusterInternal)this).IormConfigCacheLifecycleState = (string) content.GetValueForProperty("IormConfigCacheLifecycleState",((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.ICloudVMClusterInternal)this).IormConfigCacheLifecycleState, global::System.Convert.ToString);
            }
            AfterDeserializeDictionary(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Management.Automation.PSObject" /> into a new instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.CloudVMCluster"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        internal CloudVMCluster(global::System.Management.Automation.PSObject content)
        {
            bool returnNow = false;
            BeforeDeserializePSObject(content, ref returnNow);
            if (returnNow)
            {
                return;
            }
            // actually deserialize
            if (content.Contains("Property"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.ICloudVMClusterInternal)this).Property = (Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.ICloudVMClusterProperties) content.GetValueForProperty("Property",((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.ICloudVMClusterInternal)this).Property, Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.CloudVMClusterPropertiesTypeConverter.ConvertFrom);
            }
            if (content.Contains("SystemDataCreatedBy"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IResourceInternal)this).SystemDataCreatedBy = (string) content.GetValueForProperty("SystemDataCreatedBy",((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IResourceInternal)this).SystemDataCreatedBy, global::System.Convert.ToString);
            }
            if (content.Contains("SystemDataCreatedAt"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IResourceInternal)this).SystemDataCreatedAt = (global::System.DateTime?) content.GetValueForProperty("SystemDataCreatedAt",((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IResourceInternal)this).SystemDataCreatedAt, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            if (content.Contains("SystemDataCreatedByType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IResourceInternal)this).SystemDataCreatedByType = (string) content.GetValueForProperty("SystemDataCreatedByType",((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IResourceInternal)this).SystemDataCreatedByType, global::System.Convert.ToString);
            }
            if (content.Contains("SystemDataLastModifiedBy"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IResourceInternal)this).SystemDataLastModifiedBy = (string) content.GetValueForProperty("SystemDataLastModifiedBy",((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IResourceInternal)this).SystemDataLastModifiedBy, global::System.Convert.ToString);
            }
            if (content.Contains("SystemDataLastModifiedByType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IResourceInternal)this).SystemDataLastModifiedByType = (string) content.GetValueForProperty("SystemDataLastModifiedByType",((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IResourceInternal)this).SystemDataLastModifiedByType, global::System.Convert.ToString);
            }
            if (content.Contains("SystemDataLastModifiedAt"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IResourceInternal)this).SystemDataLastModifiedAt = (global::System.DateTime?) content.GetValueForProperty("SystemDataLastModifiedAt",((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IResourceInternal)this).SystemDataLastModifiedAt, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            if (content.Contains("SystemData"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IResourceInternal)this).SystemData = (Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.ISystemData) content.GetValueForProperty("SystemData",((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IResourceInternal)this).SystemData, Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.SystemDataTypeConverter.ConvertFrom);
            }
            if (content.Contains("Id"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IResourceInternal)this).Id = (string) content.GetValueForProperty("Id",((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IResourceInternal)this).Id, global::System.Convert.ToString);
            }
            if (content.Contains("Name"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IResourceInternal)this).Name = (string) content.GetValueForProperty("Name",((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IResourceInternal)this).Name, global::System.Convert.ToString);
            }
            if (content.Contains("Type"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IResourceInternal)this).Type = (string) content.GetValueForProperty("Type",((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IResourceInternal)this).Type, global::System.Convert.ToString);
            }
            if (content.Contains("Tag"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.ITrackedResourceInternal)this).Tag = (Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.ITrackedResourceTags) content.GetValueForProperty("Tag",((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.ITrackedResourceInternal)this).Tag, Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.TrackedResourceTagsTypeConverter.ConvertFrom);
            }
            if (content.Contains("Location"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.ITrackedResourceInternal)this).Location = (string) content.GetValueForProperty("Location",((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.ITrackedResourceInternal)this).Location, global::System.Convert.ToString);
            }
            if (content.Contains("Ocid"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.ICloudVMClusterInternal)this).Ocid = (string) content.GetValueForProperty("Ocid",((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.ICloudVMClusterInternal)this).Ocid, global::System.Convert.ToString);
            }
            if (content.Contains("LicenseModel"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.ICloudVMClusterInternal)this).LicenseModel = (string) content.GetValueForProperty("LicenseModel",((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.ICloudVMClusterInternal)this).LicenseModel, global::System.Convert.ToString);
            }
            if (content.Contains("DiskRedundancy"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.ICloudVMClusterInternal)this).DiskRedundancy = (string) content.GetValueForProperty("DiskRedundancy",((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.ICloudVMClusterInternal)this).DiskRedundancy, global::System.Convert.ToString);
            }
            if (content.Contains("VnetId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.ICloudVMClusterInternal)this).VnetId = (string) content.GetValueForProperty("VnetId",((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.ICloudVMClusterInternal)this).VnetId, global::System.Convert.ToString);
            }
            if (content.Contains("SubnetId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.ICloudVMClusterInternal)this).SubnetId = (string) content.GetValueForProperty("SubnetId",((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.ICloudVMClusterInternal)this).SubnetId, global::System.Convert.ToString);
            }
            if (content.Contains("DataCollectionOption"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.ICloudVMClusterInternal)this).DataCollectionOption = (Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IDataCollectionOptions) content.GetValueForProperty("DataCollectionOption",((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.ICloudVMClusterInternal)this).DataCollectionOption, Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.DataCollectionOptionsTypeConverter.ConvertFrom);
            }
            if (content.Contains("IormConfigCache"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.ICloudVMClusterInternal)this).IormConfigCache = (Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IExadataIormConfig) content.GetValueForProperty("IormConfigCache",((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.ICloudVMClusterInternal)this).IormConfigCache, Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.ExadataIormConfigTypeConverter.ConvertFrom);
            }
            if (content.Contains("ListenerPort"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.ICloudVMClusterInternal)this).ListenerPort = (long?) content.GetValueForProperty("ListenerPort",((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.ICloudVMClusterInternal)this).ListenerPort, (__y)=> (long) global::System.Convert.ChangeType(__y, typeof(long)));
            }
            if (content.Contains("NodeCount"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.ICloudVMClusterInternal)this).NodeCount = (int?) content.GetValueForProperty("NodeCount",((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.ICloudVMClusterInternal)this).NodeCount, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("StorageSizeInGb"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.ICloudVMClusterInternal)this).StorageSizeInGb = (int?) content.GetValueForProperty("StorageSizeInGb",((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.ICloudVMClusterInternal)this).StorageSizeInGb, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("DataStorageSizeInTb"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.ICloudVMClusterInternal)this).DataStorageSizeInTb = (double?) content.GetValueForProperty("DataStorageSizeInTb",((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.ICloudVMClusterInternal)this).DataStorageSizeInTb, (__y)=> (double) global::System.Convert.ChangeType(__y, typeof(double)));
            }
            if (content.Contains("DbNodeStorageSizeInGb"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.ICloudVMClusterInternal)this).DbNodeStorageSizeInGb = (int?) content.GetValueForProperty("DbNodeStorageSizeInGb",((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.ICloudVMClusterInternal)this).DbNodeStorageSizeInGb, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("MemorySizeInGb"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.ICloudVMClusterInternal)this).MemorySizeInGb = (int?) content.GetValueForProperty("MemorySizeInGb",((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.ICloudVMClusterInternal)this).MemorySizeInGb, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("TimeCreated"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.ICloudVMClusterInternal)this).TimeCreated = (global::System.DateTime?) content.GetValueForProperty("TimeCreated",((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.ICloudVMClusterInternal)this).TimeCreated, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            if (content.Contains("LifecycleDetail"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.ICloudVMClusterInternal)this).LifecycleDetail = (string) content.GetValueForProperty("LifecycleDetail",((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.ICloudVMClusterInternal)this).LifecycleDetail, global::System.Convert.ToString);
            }
            if (content.Contains("TimeZone"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.ICloudVMClusterInternal)this).TimeZone = (string) content.GetValueForProperty("TimeZone",((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.ICloudVMClusterInternal)this).TimeZone, global::System.Convert.ToString);
            }
            if (content.Contains("ZoneId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.ICloudVMClusterInternal)this).ZoneId = (string) content.GetValueForProperty("ZoneId",((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.ICloudVMClusterInternal)this).ZoneId, global::System.Convert.ToString);
            }
            if (content.Contains("Hostname"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.ICloudVMClusterInternal)this).Hostname = (string) content.GetValueForProperty("Hostname",((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.ICloudVMClusterInternal)this).Hostname, global::System.Convert.ToString);
            }
            if (content.Contains("Domain"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.ICloudVMClusterInternal)this).Domain = (string) content.GetValueForProperty("Domain",((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.ICloudVMClusterInternal)this).Domain, global::System.Convert.ToString);
            }
            if (content.Contains("CpuCoreCount"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.ICloudVMClusterInternal)this).CpuCoreCount = (int) content.GetValueForProperty("CpuCoreCount",((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.ICloudVMClusterInternal)this).CpuCoreCount, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("OcpuCount"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.ICloudVMClusterInternal)this).OcpuCount = (float?) content.GetValueForProperty("OcpuCount",((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.ICloudVMClusterInternal)this).OcpuCount, (__y)=> (float) global::System.Convert.ChangeType(__y, typeof(float)));
            }
            if (content.Contains("ClusterName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.ICloudVMClusterInternal)this).ClusterName = (string) content.GetValueForProperty("ClusterName",((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.ICloudVMClusterInternal)this).ClusterName, global::System.Convert.ToString);
            }
            if (content.Contains("DataStoragePercentage"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.ICloudVMClusterInternal)this).DataStoragePercentage = (int?) content.GetValueForProperty("DataStoragePercentage",((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.ICloudVMClusterInternal)this).DataStoragePercentage, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("IsLocalBackupEnabled"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.ICloudVMClusterInternal)this).IsLocalBackupEnabled = (bool?) content.GetValueForProperty("IsLocalBackupEnabled",((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.ICloudVMClusterInternal)this).IsLocalBackupEnabled, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("CloudExadataInfrastructureId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.ICloudVMClusterInternal)this).CloudExadataInfrastructureId = (string) content.GetValueForProperty("CloudExadataInfrastructureId",((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.ICloudVMClusterInternal)this).CloudExadataInfrastructureId, global::System.Convert.ToString);
            }
            if (content.Contains("IsSparseDiskgroupEnabled"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.ICloudVMClusterInternal)this).IsSparseDiskgroupEnabled = (bool?) content.GetValueForProperty("IsSparseDiskgroupEnabled",((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.ICloudVMClusterInternal)this).IsSparseDiskgroupEnabled, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("SystemVersion"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.ICloudVMClusterInternal)this).SystemVersion = (string) content.GetValueForProperty("SystemVersion",((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.ICloudVMClusterInternal)this).SystemVersion, global::System.Convert.ToString);
            }
            if (content.Contains("SshPublicKey"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.ICloudVMClusterInternal)this).SshPublicKey = (System.Collections.Generic.List<string>) content.GetValueForProperty("SshPublicKey",((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.ICloudVMClusterInternal)this).SshPublicKey, __y => TypeConverterExtensions.SelectToList<string>(__y, global::System.Convert.ToString));
            }
            if (content.Contains("ScanIPId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.ICloudVMClusterInternal)this).ScanIPId = (System.Collections.Generic.List<string>) content.GetValueForProperty("ScanIPId",((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.ICloudVMClusterInternal)this).ScanIPId, __y => TypeConverterExtensions.SelectToList<string>(__y, global::System.Convert.ToString));
            }
            if (content.Contains("VipId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.ICloudVMClusterInternal)this).VipId = (System.Collections.Generic.List<string>) content.GetValueForProperty("VipId",((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.ICloudVMClusterInternal)this).VipId, __y => TypeConverterExtensions.SelectToList<string>(__y, global::System.Convert.ToString));
            }
            if (content.Contains("ScanDnsName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.ICloudVMClusterInternal)this).ScanDnsName = (string) content.GetValueForProperty("ScanDnsName",((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.ICloudVMClusterInternal)this).ScanDnsName, global::System.Convert.ToString);
            }
            if (content.Contains("ScanListenerPortTcp"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.ICloudVMClusterInternal)this).ScanListenerPortTcp = (int?) content.GetValueForProperty("ScanListenerPortTcp",((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.ICloudVMClusterInternal)this).ScanListenerPortTcp, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("ScanListenerPortTcpSsl"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.ICloudVMClusterInternal)this).ScanListenerPortTcpSsl = (int?) content.GetValueForProperty("ScanListenerPortTcpSsl",((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.ICloudVMClusterInternal)this).ScanListenerPortTcpSsl, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("ScanDnsRecordId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.ICloudVMClusterInternal)this).ScanDnsRecordId = (string) content.GetValueForProperty("ScanDnsRecordId",((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.ICloudVMClusterInternal)this).ScanDnsRecordId, global::System.Convert.ToString);
            }
            if (content.Contains("Shape"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.ICloudVMClusterInternal)this).Shape = (string) content.GetValueForProperty("Shape",((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.ICloudVMClusterInternal)this).Shape, global::System.Convert.ToString);
            }
            if (content.Contains("ProvisioningState"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.ICloudVMClusterInternal)this).ProvisioningState = (string) content.GetValueForProperty("ProvisioningState",((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.ICloudVMClusterInternal)this).ProvisioningState, global::System.Convert.ToString);
            }
            if (content.Contains("LifecycleState"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.ICloudVMClusterInternal)this).LifecycleState = (string) content.GetValueForProperty("LifecycleState",((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.ICloudVMClusterInternal)this).LifecycleState, global::System.Convert.ToString);
            }
            if (content.Contains("GiVersion"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.ICloudVMClusterInternal)this).GiVersion = (string) content.GetValueForProperty("GiVersion",((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.ICloudVMClusterInternal)this).GiVersion, global::System.Convert.ToString);
            }
            if (content.Contains("OciUrl"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.ICloudVMClusterInternal)this).OciUrl = (string) content.GetValueForProperty("OciUrl",((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.ICloudVMClusterInternal)this).OciUrl, global::System.Convert.ToString);
            }
            if (content.Contains("NsgUrl"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.ICloudVMClusterInternal)this).NsgUrl = (string) content.GetValueForProperty("NsgUrl",((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.ICloudVMClusterInternal)this).NsgUrl, global::System.Convert.ToString);
            }
            if (content.Contains("BackupSubnetCidr"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.ICloudVMClusterInternal)this).BackupSubnetCidr = (string) content.GetValueForProperty("BackupSubnetCidr",((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.ICloudVMClusterInternal)this).BackupSubnetCidr, global::System.Convert.ToString);
            }
            if (content.Contains("NsgCidr"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.ICloudVMClusterInternal)this).NsgCidr = (System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.INsgCidr>) content.GetValueForProperty("NsgCidr",((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.ICloudVMClusterInternal)this).NsgCidr, __y => TypeConverterExtensions.SelectToList<Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.INsgCidr>(__y, Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.NsgCidrTypeConverter.ConvertFrom));
            }
            if (content.Contains("DisplayName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.ICloudVMClusterInternal)this).DisplayName = (string) content.GetValueForProperty("DisplayName",((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.ICloudVMClusterInternal)this).DisplayName, global::System.Convert.ToString);
            }
            if (content.Contains("ComputeNode"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.ICloudVMClusterInternal)this).ComputeNode = (System.Collections.Generic.List<string>) content.GetValueForProperty("ComputeNode",((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.ICloudVMClusterInternal)this).ComputeNode, __y => TypeConverterExtensions.SelectToList<string>(__y, global::System.Convert.ToString));
            }
            if (content.Contains("LastUpdateHistoryEntryId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.ICloudVMClusterInternal)this).LastUpdateHistoryEntryId = (string) content.GetValueForProperty("LastUpdateHistoryEntryId",((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.ICloudVMClusterInternal)this).LastUpdateHistoryEntryId, global::System.Convert.ToString);
            }
            if (content.Contains("DbServer"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.ICloudVMClusterInternal)this).DbServer = (System.Collections.Generic.List<string>) content.GetValueForProperty("DbServer",((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.ICloudVMClusterInternal)this).DbServer, __y => TypeConverterExtensions.SelectToList<string>(__y, global::System.Convert.ToString));
            }
            if (content.Contains("CompartmentId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.ICloudVMClusterInternal)this).CompartmentId = (string) content.GetValueForProperty("CompartmentId",((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.ICloudVMClusterInternal)this).CompartmentId, global::System.Convert.ToString);
            }
            if (content.Contains("SubnetOcid"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.ICloudVMClusterInternal)this).SubnetOcid = (string) content.GetValueForProperty("SubnetOcid",((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.ICloudVMClusterInternal)this).SubnetOcid, global::System.Convert.ToString);
            }
            if (content.Contains("IormConfigCacheObjective"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.ICloudVMClusterInternal)this).IormConfigCacheObjective = (string) content.GetValueForProperty("IormConfigCacheObjective",((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.ICloudVMClusterInternal)this).IormConfigCacheObjective, global::System.Convert.ToString);
            }
            if (content.Contains("DataCollectionOptionIsDiagnosticsEventsEnabled"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.ICloudVMClusterInternal)this).DataCollectionOptionIsDiagnosticsEventsEnabled = (bool?) content.GetValueForProperty("DataCollectionOptionIsDiagnosticsEventsEnabled",((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.ICloudVMClusterInternal)this).DataCollectionOptionIsDiagnosticsEventsEnabled, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("DataCollectionOptionIsHealthMonitoringEnabled"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.ICloudVMClusterInternal)this).DataCollectionOptionIsHealthMonitoringEnabled = (bool?) content.GetValueForProperty("DataCollectionOptionIsHealthMonitoringEnabled",((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.ICloudVMClusterInternal)this).DataCollectionOptionIsHealthMonitoringEnabled, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("DataCollectionOptionIsIncidentLogsEnabled"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.ICloudVMClusterInternal)this).DataCollectionOptionIsIncidentLogsEnabled = (bool?) content.GetValueForProperty("DataCollectionOptionIsIncidentLogsEnabled",((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.ICloudVMClusterInternal)this).DataCollectionOptionIsIncidentLogsEnabled, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("IormConfigCacheDbPlan"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.ICloudVMClusterInternal)this).IormConfigCacheDbPlan = (System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IDbIormConfig>) content.GetValueForProperty("IormConfigCacheDbPlan",((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.ICloudVMClusterInternal)this).IormConfigCacheDbPlan, __y => TypeConverterExtensions.SelectToList<Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IDbIormConfig>(__y, Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.DbIormConfigTypeConverter.ConvertFrom));
            }
            if (content.Contains("IormConfigCacheLifecycleDetail"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.ICloudVMClusterInternal)this).IormConfigCacheLifecycleDetail = (string) content.GetValueForProperty("IormConfigCacheLifecycleDetail",((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.ICloudVMClusterInternal)this).IormConfigCacheLifecycleDetail, global::System.Convert.ToString);
            }
            if (content.Contains("IormConfigCacheLifecycleState"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.ICloudVMClusterInternal)this).IormConfigCacheLifecycleState = (string) content.GetValueForProperty("IormConfigCacheLifecycleState",((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.ICloudVMClusterInternal)this).IormConfigCacheLifecycleState, global::System.Convert.ToString);
            }
            AfterDeserializePSObject(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Collections.IDictionary" /> into an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.CloudVMCluster"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        /// <returns>
        /// an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.ICloudVMCluster" />.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.ICloudVMCluster DeserializeFromDictionary(global::System.Collections.IDictionary content)
        {
            return new CloudVMCluster(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Management.Automation.PSObject" /> into an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.CloudVMCluster"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        /// <returns>
        /// an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.ICloudVMCluster" />.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.ICloudVMCluster DeserializeFromPSObject(global::System.Management.Automation.PSObject content)
        {
            return new CloudVMCluster(content);
        }

        /// <summary>
        /// Creates a new instance of <see cref="CloudVMCluster" />, deserializing the content from a json string.
        /// </summary>
        /// <param name="jsonText">a string containing a JSON serialized instance of this model.</param>
        /// <returns>an instance of the <see cref="CloudVMCluster" /> model class.</returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.ICloudVMCluster FromJsonString(string jsonText) => FromJson(Microsoft.Azure.PowerShell.Cmdlets.Oracle.Runtime.Json.JsonNode.Parse(jsonText));

        /// <summary>Serializes this instance to a json string.</summary>

        /// <returns>a <see cref="System.String" /> containing this model serialized to JSON text.</returns>
        public string ToJsonString() => ToJson(null, Microsoft.Azure.PowerShell.Cmdlets.Oracle.Runtime.SerializationMode.IncludeAll)?.ToString();

        public override string ToString()
        {
            var returnNow = false;
            var result = global::System.String.Empty;
            OverrideToString(ref result, ref returnNow);
            if (returnNow)
            {
                return result;
            }
            return ToJsonString();
        }
    }
    /// CloudVmCluster resource definition
    [System.ComponentModel.TypeConverter(typeof(CloudVMClusterTypeConverter))]
    public partial interface ICloudVMCluster

    {

    }
}