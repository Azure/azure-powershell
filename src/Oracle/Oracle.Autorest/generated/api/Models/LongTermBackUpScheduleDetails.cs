// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models
{
    using static Microsoft.Azure.PowerShell.Cmdlets.Oracle.Runtime.Extensions;

    /// <summary>Details for the long-term backup schedule.</summary>
    public partial class LongTermBackUpScheduleDetails :
        Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.ILongTermBackUpScheduleDetails,
        Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.ILongTermBackUpScheduleDetailsInternal
    {

        /// <summary>Backing field for <see cref="IsDisabled" /> property.</summary>
        private bool? _isDisabled;

        /// <summary>
        /// Indicates if the long-term backup schedule should be deleted. The default value is `FALSE`.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Oracle.Origin(Microsoft.Azure.PowerShell.Cmdlets.Oracle.PropertyOrigin.Owned)]
        public bool? IsDisabled { get => this._isDisabled; set => this._isDisabled = value; }

        /// <summary>Backing field for <see cref="RepeatCadence" /> property.</summary>
        private string _repeatCadence;

        /// <summary>The frequency of the long-term backup schedule</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Oracle.Origin(Microsoft.Azure.PowerShell.Cmdlets.Oracle.PropertyOrigin.Owned)]
        public string RepeatCadence { get => this._repeatCadence; set => this._repeatCadence = value; }

        /// <summary>Backing field for <see cref="RetentionPeriodInDay" /> property.</summary>
        private int? _retentionPeriodInDay;

        /// <summary>Retention period, in days, for backups.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Oracle.Origin(Microsoft.Azure.PowerShell.Cmdlets.Oracle.PropertyOrigin.Owned)]
        public int? RetentionPeriodInDay { get => this._retentionPeriodInDay; set => this._retentionPeriodInDay = value; }

        /// <summary>Backing field for <see cref="TimeOfBackup" /> property.</summary>
        private global::System.DateTime? _timeOfBackup;

        /// <summary>
        /// The timestamp for the long-term backup schedule. For a MONTHLY cadence, months having fewer days than the provided date
        /// will have the backup taken on the last day of that month.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Oracle.Origin(Microsoft.Azure.PowerShell.Cmdlets.Oracle.PropertyOrigin.Owned)]
        public global::System.DateTime? TimeOfBackup { get => this._timeOfBackup; set => this._timeOfBackup = value; }

        /// <summary>Creates an new <see cref="LongTermBackUpScheduleDetails" /> instance.</summary>
        public LongTermBackUpScheduleDetails()
        {

        }
    }
    /// Details for the long-term backup schedule.
    public partial interface ILongTermBackUpScheduleDetails :
        Microsoft.Azure.PowerShell.Cmdlets.Oracle.Runtime.IJsonSerializable
    {
        /// <summary>
        /// Indicates if the long-term backup schedule should be deleted. The default value is `FALSE`.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Oracle.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Indicates if the long-term backup schedule should be deleted. The default value is `FALSE`.",
        SerializedName = @"isDisabled",
        PossibleTypes = new [] { typeof(bool) })]
        bool? IsDisabled { get; set; }
        /// <summary>The frequency of the long-term backup schedule</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Oracle.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The frequency of the long-term backup schedule",
        SerializedName = @"repeatCadence",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.Oracle.PSArgumentCompleterAttribute("OneTime", "Weekly", "Monthly", "Yearly")]
        string RepeatCadence { get; set; }
        /// <summary>Retention period, in days, for backups.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Oracle.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Retention period, in days, for backups.",
        SerializedName = @"retentionPeriodInDays",
        PossibleTypes = new [] { typeof(int) })]
        int? RetentionPeriodInDay { get; set; }
        /// <summary>
        /// The timestamp for the long-term backup schedule. For a MONTHLY cadence, months having fewer days than the provided date
        /// will have the backup taken on the last day of that month.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Oracle.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The timestamp for the long-term backup schedule. For a MONTHLY cadence, months having fewer days than the provided date will have the backup taken on the last day of that month.",
        SerializedName = @"timeOfBackup",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? TimeOfBackup { get; set; }

    }
    /// Details for the long-term backup schedule.
    internal partial interface ILongTermBackUpScheduleDetailsInternal

    {
        /// <summary>
        /// Indicates if the long-term backup schedule should be deleted. The default value is `FALSE`.
        /// </summary>
        bool? IsDisabled { get; set; }
        /// <summary>The frequency of the long-term backup schedule</summary>
        [global::Microsoft.Azure.PowerShell.Cmdlets.Oracle.PSArgumentCompleterAttribute("OneTime", "Weekly", "Monthly", "Yearly")]
        string RepeatCadence { get; set; }
        /// <summary>Retention period, in days, for backups.</summary>
        int? RetentionPeriodInDay { get; set; }
        /// <summary>
        /// The timestamp for the long-term backup schedule. For a MONTHLY cadence, months having fewer days than the provided date
        /// will have the backup taken on the last day of that month.
        /// </summary>
        global::System.DateTime? TimeOfBackup { get; set; }

    }
}