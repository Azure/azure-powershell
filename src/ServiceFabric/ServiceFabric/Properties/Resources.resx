<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AddCertToUnsecureCluster" xml:space="preserve">
    <value>Insecure cluster {0} is not allowed to add certificate.</value>
  </data>
  <data name="CannotChangeDurabilityFrom" xml:space="preserve">
    <value>Cannot change durability level from {0} to {1}.</value>
  </data>
  <data name="CannotDeletePrimaryNodeType" xml:space="preserve">
    <value>Cannot delete primary node type {0}.</value>
  </data>
  <data name="CannotFindCertificateInCluster" xml:space="preserve">
    <value>Cannot find the certificate {0} in the cluster.</value>
  </data>
  <data name="CannotFindCommonNameAndIssuer" xml:space="preserve">
    <value>Cannot find the common name {0} and issuer {1} in the cluster.</value>
  </data>
  <data name="CannotFindDurabilityLevelSetting" xml:space="preserve">
    <value>Cannot find durability level setting.</value>
  </data>
  <data name="CannotFindTenantId" xml:space="preserve">
    <value>Cannot find tenant Id.</value>
  </data>
  <data name="CannotFindTheNodeType" xml:space="preserve">
    <value>Cannot find the node type {0}.</value>
  </data>
  <data name="CannotFindThumbprintInTheCluster" xml:space="preserve">
    <value>Cannot find the thumbprint {0} in the cluster.</value>
  </data>
  <data name="CannotFindVault" xml:space="preserve">
    <value>Cannot find key vault {0}.</value>
  </data>
  <data name="CannotFindVaultFromSecretId" xml:space="preserve">
    <value>Cannot find key vault '{0}' from secret id '{1}'.</value>
  </data>
  <data name="CannotFindVMSS" xml:space="preserve">
    <value>Cannot find Virtual Machine Scale Set with name {0}.</value>
  </data>
  <data name="CannotParseReliabilityLevel" xml:space="preserve">
    <value>Cannot parse reliability level {0}.</value>
  </data>
  <data name="CannotUpdateBronzeNodeType" xml:space="preserve">
    <value>Cannot update node type with a durability level of Bronze, please update durability level to Silver or above first.</value>
  </data>
  <data name="CannotUpdateNodeCountLessThenReliabilityLevel" xml:space="preserve">
    <value>Cannot update node count to {0} because it is less than the minimum required node count of {1} for {2} reliability level.</value>
  </data>
  <data name="CannotUpdateSkuWithBronzeDurability" xml:space="preserve">
    <value>Cannot update Sku while durability level is Bronze, please update durability level to Silver or above first.</value>
  </data>
  <data name="CertificateCommonNameMismatch" xml:space="preserve">
    <value>Certificate common name mistmatch the name provided is: '{0}' and the common name found in the certificate is: '{1}'. Please make sure you're using the correct certificate and common name.</value>
  </data>
  <data name="CertificateMixTPAndCN" xml:space="preserve">
    <value>Unable to mix certificates by common name and thumbprint. There is already a certificate, if this was set up by thumbprint you cannot add a new one by common name and vice versa.</value>
  </data>
  <data name="CheckingDeploymentStatus" xml:space="preserve">
    <value>Checking deployment status in {0} seconds.</value>
  </data>
  <data name="ClusterStateVerbose" xml:space="preserve">
    <value>The state of the cluster is : {0}.</value>
  </data>
  <data name="CreateSelfSignedCertificateFailedWithErrorDetail" xml:space="preserve">
    <value>Create self signed certificate failed with Status: {0}, StatusDetails: {1}, Code: {2}, Message: {3}.</value>
  </data>
  <data name="CreateSelfSignedCertificateFailedWithoutErrorDetail" xml:space="preserve">
    <value>Create self signed certificate failed with Status: {0}, StatusDetails: {1}.</value>
  </data>
  <data name="CreateSelfSignedCertificateTimeout" xml:space="preserve">
    <value>Creating self signed certificate timeout.</value>
  </data>
  <data name="DeploymentFailed" xml:space="preserve">
    <value>Deployment failed.</value>
  </data>
  <data name="DeploymentSucceeded" xml:space="preserve">
    <value>Deployment succeeded.</value>
  </data>
  <data name="DeploymentVerbose" xml:space="preserve">
    <value>Deployment is running.</value>
  </data>
  <data name="DuplicatedFabricSetting" xml:space="preserve">
    <value>Contains duplicate fabric setting {0}.</value>
  </data>
  <data name="DurabilityLevelMismatches" xml:space="preserve">
    <value>The durability level is mismatched between the cluster and the VM extension.</value>
  </data>
  <data name="FabricSettingNotFound" xml:space="preserve">
    <value>The fabric setting '{0}' does not exist.</value>
  </data>
  <data name="FailedToCreateSelfSignedCertificate" xml:space="preserve">
    <value>Failed to create self signed certificate.</value>
  </data>
  <data name="FailedToCreateStorageAccount" xml:space="preserve">
    <value>Failed to create the storage account.</value>
  </data>
  <data name="FailedToFindPrimaryNodeTypeError" xml:space="preserve">
    <value>Did not find the primary node type in cluster {0}.</value>
  </data>
  <data name="FailedToParseParameterFile" xml:space="preserve">
    <value>Failed to parse parameter file.</value>
  </data>
  <data name="FailedToParseTemplateFile" xml:space="preserve">
    <value>Failed to parse template file.</value>
  </data>
  <data name="FileNotExist" xml:space="preserve">
    <value>File {0} doesn't exist.</value>
  </data>
  <data name="InvalidCertificateInfoCNAndTPInParameterFile" xml:space="preserve">
    <value>Can not specify both certificate common name and thumbprint. If using common names non of the following should be specified in the parameters file: 'certificateThumbprint', 'secSourceVaultValue', 'secCertificateThumbprint', 'secCertificateUrlValue'.</value>
  </data>
  <data name="InvalidCertificateInformationCNInParameterFile" xml:space="preserve">
    <value>If using common name, the parameter -UseCommonName and -IssuerThumbprint must be use and the parameter names in the parameters file should be specified with 'sourceVaultValue','certificateCommonName','certificateUrlValue', 'certificateIssuerThumbprint'.</value>
  </data>
  <data name="InvalidCertificateInformationInParameterFile" xml:space="preserve">
    <value>The primary certificate parameter names in the parameters file should be specified with 'sourceVaultValue','certificateThumbprint','certificateUrlValue'. If the secondary certificate parameters are specified in the parameters file, the parameter names should be specified with 'secSourceVaultValue','secCertificateThumbprint','secCertificateUrlValue'.</value>
  </data>
  <data name="InvalidDirectory" xml:space="preserve">
    <value>Directory {0} doesn't exist.</value>
  </data>
  <data name="InvalidFileName" xml:space="preserve">
    <value>File name {0} contains invalid characters.</value>
  </data>
  <data name="InvalidInput" xml:space="preserve">
    <value>Invalid input.</value>
  </data>
  <data name="InvalidNetworkNameInResourceId" xml:space="preserve">
    <value>Invalid virtual network name in resource ID: {0}.</value>
  </data>
  <data name="InvalidPassword" xml:space="preserve">
    <value>The supplied password must be between 12-123 characters long and must satisfy at least 3 of the password complexity requirements from the following: \r\n1) Contains an uppercase character\r\n2) Contains a lowercase character\r\n3) Contains a numeric digit\r\n4) Contains a special character.</value>
  </data>
  <data name="InvalidSFExtensionInTemplate" xml:space="preserve">
    <value>The Service Fabric Extension is not valid in ARM Template. Please make sure it contains durabilityLevel definition and certificate section with either thumbprint or commonNames definition. See this template sample for reference: https://github.com/Azure/azure-quickstart-templates/blob/master/service-fabric-secure-nsg-cluster-65-node-3-nodetype/azuredeploy.json</value>
  </data>
  <data name="InvalidTemplateFile" xml:space="preserve">
    <value>Invalid template file.</value>
  </data>
  <data name="InvalidTemplateParameterFile" xml:space="preserve">
    <value>Invalid template parameter file.</value>
  </data>
  <data name="InvalidVmssConfiguration" xml:space="preserve">
    <value>Invalid existing VMSS configuration.</value>
  </data>
  <data name="InvalidVmssIpConfiguration" xml:space="preserve">
    <value>Invalid existing VMSS IP configuration.</value>
  </data>
  <data name="InvalidVmssNetworkConfiguration" xml:space="preserve">
    <value>Invalid existing VMSS network configuration.</value>
  </data>
  <data name="KeyVaultAndResourceGroupNotSameRegion" xml:space="preserve">
    <value>The key vault and the resource group are not in the same region.</value>
  </data>
  <data name="NewExistingCluster" xml:space="preserve">
    <value>The cluster {0} already exists. Please remove the resource group and try again.</value>
  </data>
  <data name="NoCertificateOperationReturned" xml:space="preserve">
    <value>No certificateOperation returned when creating self signed certificate in Azure key vault.</value>
  </data>
  <data name="NodeTypesNotDefinedInCluster" xml:space="preserve">
    <value>Cluster model has no definition of NodeTypes.</value>
  </data>
  <data name="NoneCertificateFound" xml:space="preserve">
    <value>Did not find any certificate in the cluster.</value>
  </data>
  <data name="NoVMSSFoundInRG" xml:space="preserve">
    <value>Did not find any Virtual Machine Scale Set in resource group {0}.</value>
  </data>
  <data name="OnlyOneClusterCertificate" xml:space="preserve">
    <value>There is only one certificate in the cluster, which cannot be removed.</value>
  </data>
  <data name="RemoveCertFromUnsecureCluster" xml:space="preserve">
    <value>Insecure cluster {0} is not allowed to remove certificate.</value>
  </data>
  <data name="ResourceGroupNotFound" xml:space="preserve">
    <value>The resource group {0} is not found.</value>
  </data>
  <data name="SkuCapacityIsNull" xml:space="preserve">
    <value>The capacity of the node type is null.</value>
  </data>
  <data name="SkuCapacityZero" xml:space="preserve">
    <value>The capacity of the node type would be less than zero.</value>
  </data>
  <data name="UnsupportedVmSkuForGold" xml:space="preserve">
    <value>Only {0} skus support Gold durability. Please specify -VmSku with one of these values.</value>
  </data>
  <data name="UseAutoToIncreaseNodesCount" xml:space="preserve">
    <value>Primary node count is {0}, which is less than the required node count of {1} for the target reliability level. Please use 'AutoAddNode' switch to automatically increase node count.</value>
  </data>
  <data name="VaultCreatedWithOutAccessPolicy" xml:space="preserve">
    <value>Access policy is not set. No user or application have access permission to use this vault. Please use Set-AzKeyVaultAccessPolicy to set access policies.</value>
  </data>
  <data name="VmExtensionNotFound" xml:space="preserve">
    <value>No valid Service Fabric extension found in resource group '{0}' that corresponds to cluster id '{1}'. The resource group should have a valid VM extension for Service Fabric.</value>
  </data>
  <data name="VmssVerbose" xml:space="preserve">
    <value>Virtual machine scale set {0} state is {1}.</value>
  </data>
  <data name="NoVmssFoundForCluster" xml:space="preserve">
    <value>No VMSS was found under resource group: {0} with service fabric extension and cluster id: {1}.</value>
  </data>
  <data name="SFExtensionNotFoundInVMSS" xml:space="preserve">
    <value>Service Fabric Extension no found in vmss name: {0} id: {1}.</value>
  </data>
  <data name="CerObjectNotInBundle" xml:space="preserve">
    <value>Unable to retrieve the certificate object form keyvault {0}, with name {1} and version {2}. This might mean the certificate is not managed, please use -Thumbprint parameter to specify the thumbprint corresponding to the secret identifier.</value>
  </data>
  <data name="CertificateThumbprintMismatch" xml:space="preserve">
    <value>The thumprint provided '{0}' is different from the thumbprint '{1}' for certificate {2} version {3} in keyvault {4}.</value>
  </data>
</root>