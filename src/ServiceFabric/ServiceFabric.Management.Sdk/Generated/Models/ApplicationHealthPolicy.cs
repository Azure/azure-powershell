// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.ServiceFabric.Models
{
    using System.Linq;

    /// <summary>
    /// Defines a health policy used to evaluate the health of an application or
    /// one of its children entities.
    /// </summary>
    public partial class ApplicationHealthPolicy
    {
        /// <summary>
        /// Initializes a new instance of the ApplicationHealthPolicy class.
        /// </summary>
        public ApplicationHealthPolicy()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the ApplicationHealthPolicy class.
        /// </summary>

        /// <param name="defaultServiceTypeHealthPolicy">The health policy used by default to evaluate the health of a service type.
        /// </param>

        /// <param name="serviceTypeHealthPolicies">The map with service type health policy per service type name. The map is
        /// empty by default.
        /// </param>
        public ApplicationHealthPolicy(ServiceTypeHealthPolicy defaultServiceTypeHealthPolicy = default(ServiceTypeHealthPolicy), System.Collections.Generic.IDictionary<string, ServiceTypeHealthPolicy> serviceTypeHealthPolicies = default(System.Collections.Generic.IDictionary<string, ServiceTypeHealthPolicy>))

        {
            this.DefaultServiceTypeHealthPolicy = defaultServiceTypeHealthPolicy;
            this.ServiceTypeHealthPolicies = serviceTypeHealthPolicies;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets or sets the health policy used by default to evaluate the health of a
        /// service type.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "defaultServiceTypeHealthPolicy")]
        public ServiceTypeHealthPolicy DefaultServiceTypeHealthPolicy {get; set; }

        /// <summary>
        /// Gets or sets the map with service type health policy per service type name.
        /// The map is empty by default.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "serviceTypeHealthPolicies")]
        public System.Collections.Generic.IDictionary<string, ServiceTypeHealthPolicy> ServiceTypeHealthPolicies {get; set; }
        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (this.DefaultServiceTypeHealthPolicy != null)
            {
                this.DefaultServiceTypeHealthPolicy.Validate();
            }
            if (this.ServiceTypeHealthPolicies != null)
            {
                foreach (var valueElement in this.ServiceTypeHealthPolicies.Values)
                {
                    if (valueElement != null)
                    {
                        valueElement.Validate();
                    }
                }
            }
        }
    }
}