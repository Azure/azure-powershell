// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.ServiceFabric.Models
{
    using System.Linq;

    /// <summary>
    /// Describes the notification target properties.
    /// </summary>
    public partial class NotificationTarget
    {
        /// <summary>
        /// Initializes a new instance of the NotificationTarget class.
        /// </summary>
        public NotificationTarget()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the NotificationTarget class.
        /// </summary>

        /// <param name="notificationChannel">The notification channel indicates the type of receivers subscribed to the
        /// notification, either user or subscription.
        /// Possible values include: 'EmailUser', 'EmailSubscription'</param>

        /// <param name="receivers">List of targets that subscribe to the notification.
        /// </param>
        public NotificationTarget(string notificationChannel, System.Collections.Generic.IList<string> receivers)

        {
            this.NotificationChannel = notificationChannel;
            this.Receivers = receivers;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets or sets the notification channel indicates the type of receivers
        /// subscribed to the notification, either user or subscription. Possible values include: &#39;EmailUser&#39;, &#39;EmailSubscription&#39;
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "notificationChannel")]
        public string NotificationChannel {get; set; }

        /// <summary>
        /// Gets or sets list of targets that subscribe to the notification.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "receivers")]
        public System.Collections.Generic.IList<string> Receivers {get; set; }
        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (this.NotificationChannel == null)
            {
                throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.CannotBeNull, "NotificationChannel");
            }
            if (this.Receivers == null)
            {
                throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.CannotBeNull, "Receivers");
            }


        }
    }
}