// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.
namespace Microsoft.Azure.Management.ServiceFabricManagedClusters
{
    using Microsoft.Rest.Azure;
    using Models;

    /// <summary>
    /// Extension methods for ManagedClusterVersionOperations
    /// </summary>
    public static partial class ManagedClusterVersionOperationsExtensions
    {
        /// <summary>
        /// Gets information about an available Service Fabric managed cluster code version.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='location'>
        /// The location for the cluster code versions. This is different from cluster location.
        /// </param>
        /// <param name='clusterVersion'>
        /// The cluster code version.
        /// </param>
        public static ManagedClusterCodeVersionResult Get(this IManagedClusterVersionOperations operations, string location, string clusterVersion)
        {
                return ((IManagedClusterVersionOperations)operations).GetAsync(location, clusterVersion).GetAwaiter().GetResult();
        }

        /// <summary>
        /// Gets information about an available Service Fabric managed cluster code version.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='location'>
        /// The location for the cluster code versions. This is different from cluster location.
        /// </param>
        /// <param name='clusterVersion'>
        /// The cluster code version.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        public static async System.Threading.Tasks.Task<ManagedClusterCodeVersionResult> GetAsync(this IManagedClusterVersionOperations operations, string location, string clusterVersion, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            using (var _result = await operations.GetWithHttpMessagesAsync(location, clusterVersion, null, cancellationToken).ConfigureAwait(false))
            {
                return _result.Body;
            }
        }
        /// <summary>
        /// Gets information about an available Service Fabric cluster code version by environment.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='location'>
        /// The location for the cluster code versions. This is different from cluster location.
        /// </param>
        /// <param name='clusterVersion'>
        /// The cluster code version.
        /// </param>
        public static ManagedClusterCodeVersionResult GetByEnvironment(this IManagedClusterVersionOperations operations, string location, string clusterVersion)
        {
                return ((IManagedClusterVersionOperations)operations).GetByEnvironmentAsync(location, clusterVersion).GetAwaiter().GetResult();
        }

        /// <summary>
        /// Gets information about an available Service Fabric cluster code version by environment.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='location'>
        /// The location for the cluster code versions. This is different from cluster location.
        /// </param>
        /// <param name='clusterVersion'>
        /// The cluster code version.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        public static async System.Threading.Tasks.Task<ManagedClusterCodeVersionResult> GetByEnvironmentAsync(this IManagedClusterVersionOperations operations, string location, string clusterVersion, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            using (var _result = await operations.GetByEnvironmentWithHttpMessagesAsync(location, clusterVersion, null, cancellationToken).ConfigureAwait(false))
            {
                return _result.Body;
            }
        }
        /// <summary>
        /// Gets all available code versions for Service Fabric cluster resources by location.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='location'>
        /// The location for the cluster code versions. This is different from cluster location.
        /// </param>
        public static System.Collections.Generic.IList<ManagedClusterCodeVersionResult> List(this IManagedClusterVersionOperations operations, string location)
        {
                return ((IManagedClusterVersionOperations)operations).ListAsync(location).GetAwaiter().GetResult();
        }

        /// <summary>
        /// Gets all available code versions for Service Fabric cluster resources by location.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='location'>
        /// The location for the cluster code versions. This is different from cluster location.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        public static async System.Threading.Tasks.Task<System.Collections.Generic.IList<ManagedClusterCodeVersionResult>> ListAsync(this IManagedClusterVersionOperations operations, string location, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            using (var _result = await operations.ListWithHttpMessagesAsync(location, null, cancellationToken).ConfigureAwait(false))
            {
                return _result.Body;
            }
        }
        /// <summary>
        /// Gets all available code versions for Service Fabric cluster resources by environment.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='location'>
        /// The location for the cluster code versions. This is different from cluster location.
        /// </param>
        public static System.Collections.Generic.IList<ManagedClusterCodeVersionResult> ListByEnvironment(this IManagedClusterVersionOperations operations, string location)
        {
                return ((IManagedClusterVersionOperations)operations).ListByEnvironmentAsync(location).GetAwaiter().GetResult();
        }

        /// <summary>
        /// Gets all available code versions for Service Fabric cluster resources by environment.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='location'>
        /// The location for the cluster code versions. This is different from cluster location.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        public static async System.Threading.Tasks.Task<System.Collections.Generic.IList<ManagedClusterCodeVersionResult>> ListByEnvironmentAsync(this IManagedClusterVersionOperations operations, string location, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            using (var _result = await operations.ListByEnvironmentWithHttpMessagesAsync(location, null, cancellationToken).ConfigureAwait(false))
            {
                return _result.Body;
            }
        }
    }
}
