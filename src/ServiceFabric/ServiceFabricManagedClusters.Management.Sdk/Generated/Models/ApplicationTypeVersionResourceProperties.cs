// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.ServiceFabricManagedClusters.Models
{
    using System.Linq;

    /// <summary>
    /// The properties of the application type version resource.
    /// </summary>
    public partial class ApplicationTypeVersionResourceProperties
    {
        /// <summary>
        /// Initializes a new instance of the ApplicationTypeVersionResourceProperties class.
        /// </summary>
        public ApplicationTypeVersionResourceProperties()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the ApplicationTypeVersionResourceProperties class.
        /// </summary>

        /// <param name="provisioningState">The current deployment or provisioning state, which only appears in the
        /// response
        /// </param>

        /// <param name="appPackageUrl">The URL to the application package
        /// </param>
        public ApplicationTypeVersionResourceProperties(string appPackageUrl, string provisioningState = default(string))

        {
            this.ProvisioningState = provisioningState;
            this.AppPackageUrl = appPackageUrl;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets the current deployment or provisioning state, which only appears in
        /// the response
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "provisioningState")]
        public string ProvisioningState {get; private set; }

        /// <summary>
        /// Gets or sets the URL to the application package
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "appPackageUrl")]
        public string AppPackageUrl {get; set; }
        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (this.AppPackageUrl == null)
            {
                throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.CannotBeNull, "AppPackageUrl");
            }


        }
    }
}