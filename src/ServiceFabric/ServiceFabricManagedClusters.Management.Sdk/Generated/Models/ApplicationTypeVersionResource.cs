// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.ServiceFabricManagedClusters.Models
{
    using System.Linq;

    /// <summary>
    /// An application type version resource for the specified application type
    /// name resource.
    /// </summary>
    [Microsoft.Rest.Serialization.JsonTransformation]
    public partial class ApplicationTypeVersionResource : ProxyResource
    {
        /// <summary>
        /// Initializes a new instance of the ApplicationTypeVersionResource class.
        /// </summary>
        public ApplicationTypeVersionResource()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the ApplicationTypeVersionResource class.
        /// </summary>

        /// <param name="id">Azure resource identifier.
        /// </param>

        /// <param name="name">Azure resource name.
        /// </param>

        /// <param name="type">Azure resource type.
        /// </param>

        /// <param name="location">Resource location depends on the parent resource.
        /// </param>

        /// <param name="tags">Azure resource tags.
        /// </param>

        /// <param name="systemData">Metadata pertaining to creation and last modification of the resource.
        /// </param>

        /// <param name="provisioningState">The current deployment or provisioning state, which only appears in the
        /// response
        /// </param>

        /// <param name="appPackageUrl">The URL to the application package
        /// </param>
        public ApplicationTypeVersionResource(string id = default(string), string name = default(string), string type = default(string), string location = default(string), System.Collections.Generic.IDictionary<string, string> tags = default(System.Collections.Generic.IDictionary<string, string>), SystemData systemData = default(SystemData), string provisioningState = default(string), string appPackageUrl = default(string))

        : base(id, name, type, location, tags, systemData)
        {
            this.ProvisioningState = provisioningState;
            this.AppPackageUrl = appPackageUrl;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets the current deployment or provisioning state, which only appears in
        /// the response
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.provisioningState")]
        public string ProvisioningState {get; private set; }

        /// <summary>
        /// Gets or sets the URL to the application package
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.appPackageUrl")]
        public string AppPackageUrl {get; set; }
    }
}