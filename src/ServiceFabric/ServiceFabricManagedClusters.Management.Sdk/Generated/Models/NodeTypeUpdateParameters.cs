// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.ServiceFabricManagedClusters.Models
{
    using System.Linq;

    /// <summary>
    /// Node type update request
    /// </summary>
    public partial class NodeTypeUpdateParameters
    {
        /// <summary>
        /// Initializes a new instance of the NodeTypeUpdateParameters class.
        /// </summary>
        public NodeTypeUpdateParameters()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the NodeTypeUpdateParameters class.
        /// </summary>

        /// <param name="tags">Node type update parameters
        /// </param>

        /// <param name="sku">The node type sku.
        /// </param>
        public NodeTypeUpdateParameters(System.Collections.Generic.IDictionary<string, string> tags = default(System.Collections.Generic.IDictionary<string, string>), NodeTypeSku sku = default(NodeTypeSku))

        {
            this.Tags = tags;
            this.Sku = sku;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets or sets node type update parameters
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "tags")]
        public System.Collections.Generic.IDictionary<string, string> Tags {get; set; }

        /// <summary>
        /// Gets or sets the node type sku.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "sku")]
        public NodeTypeSku Sku {get; set; }
        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {

            if (this.Sku != null)
            {
                this.Sku.Validate();
            }
        }
    }
}