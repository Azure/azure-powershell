// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.ServiceFabricManagedClusters.Models
{
    using System.Linq;

    /// <summary>
    /// Describes a node type sku.
    /// </summary>
    public partial class NodeTypeSku
    {
        /// <summary>
        /// Initializes a new instance of the NodeTypeSku class.
        /// </summary>
        public NodeTypeSku()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the NodeTypeSku class.
        /// </summary>

        /// <param name="name">The sku name. &lt;br /&gt;&lt;br /&gt;Name is internally generated and is used in
        /// auto-scale scenarios.&lt;br /&gt; Property does not allow to be changed to other
        /// values than generated.&lt;br /&gt; To avoid deployment errors please omit the
        /// property.
        /// </param>

        /// <param name="tier">Specifies the tier of the node type. &lt;br /&gt;&lt;br /&gt; Possible Values:&lt;br /&gt;
        /// **Standard**
        /// </param>

        /// <param name="capacity">The number of nodes in the node type.&lt;br /&gt;&lt;br /&gt;If present in request it
        /// will override properties.vmInstanceCount.
        /// </param>
        public NodeTypeSku(int capacity, string name = default(string), string tier = default(string))

        {
            this.Name = name;
            this.Tier = tier;
            this.Capacity = capacity;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets or sets the sku name. &lt;br /&gt;&lt;br /&gt;Name is internally generated and is
        /// used in auto-scale scenarios.&lt;br /&gt; Property does not allow to be changed
        /// to other values than generated.&lt;br /&gt; To avoid deployment errors please
        /// omit the property.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "name")]
        public string Name {get; set; }

        /// <summary>
        /// Gets or sets specifies the tier of the node type. &lt;br /&gt;&lt;br /&gt; Possible
        /// Values:&lt;br /&gt; **Standard**
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "tier")]
        public string Tier {get; set; }

        /// <summary>
        /// Gets or sets the number of nodes in the node type.&lt;br /&gt;&lt;br /&gt;If present in
        /// request it will override properties.vmInstanceCount.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "capacity")]
        public int Capacity {get; set; }
        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {


            if (this.Capacity > 2147483647)
            {
                throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.InclusiveMaximum, "Capacity", 2147483647);
            }
            if (this.Capacity < 1)
            {
                throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.InclusiveMinimum, "Capacity", 1);
            }
        }
    }
}