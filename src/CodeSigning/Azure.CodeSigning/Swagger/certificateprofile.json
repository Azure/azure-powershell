{
  "openapi": "3.0.1",
  "info": {
    "title": "CertificateProfile",
    "description": "Azure CodeSigning is a service that provides managed code signing for all.",
    "version": "2022-06-15-preview"
  },
  "servers": [
    {
      "url": "https://localhost:5001"
    }
  ],
  "paths": {
    "/codesigningaccounts/{codeSigningAccountName}/certificateprofiles/{certificateProfileName}/sign": {
      "post": {
        "tags": [
          "CertificateProfiles"
        ],
        "summary": "Initiates a sign operation.",
        "operationId": "CertificateProfile_Sign",
        "parameters": [
          {
            "name": "codeSigningAccountName",
            "in": "path",
            "description": "Azure Code Signing account name.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "accountB"
          },
          {
            "name": "certificateProfileName",
            "in": "path",
            "description": "Certificate profile name.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "profileA1"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "Version of the API to use.",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2022-06-15-preview"
            }
          }
        ],
        "requestBody": {
          "description": "Sign request details.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SignRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "202": {
            "description": "Returns the status of the sign operation.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SignStatus"
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SignStatus"
                }
              }
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        }
      }
    },
    "/codesigningaccounts/{codeSigningAccountName}/certificateprofiles/{certificateProfileName}/sign/{operationId}": {
      "get": {
        "tags": [
          "CertificateProfiles"
        ],
        "summary": "Gets the status of a sign operation.",
        "operationId": "CertificateProfile_GetSignOperation",
        "parameters": [
          {
            "name": "codeSigningAccountName",
            "in": "path",
            "description": "Azure Code Signing account name.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "accountB"
          },
          {
            "name": "certificateProfileName",
            "in": "path",
            "description": "Certificate profile name.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "profileA1"
          },
          {
            "name": "operationId",
            "in": "path",
            "description": "ID of the operation.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "Version of the API to use.",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2022-06-15-preview"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the status of the sign operation.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SignStatus"
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SignStatus"
                }
              }
            }
          }
        }
      }
    },
    "/codesigningaccounts/{codeSigningAccountName}/certificateprofiles/{certificateProfileName}/sign/eku": {
      "get": {
        "tags": [
          "CertificateProfiles"
        ],
        "summary": "Gets the ekus defined for that account and profile.",
        "operationId": "CertificateProfile_GetSignEku",
        "parameters": [
          {
            "name": "codeSigningAccountName",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "certificateProfileName",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2022-06-15-preview"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a list of EKUs.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/codesigningaccounts/{codeSigningAccountName}/certificateprofiles/{certificateProfileName}/sign/rootcert": {
      "get": {
        "tags": [
          "CertificateProfiles"
        ],
        "summary": "Gets the root certificate for that account and profile.",
        "operationId": "CertificateProfile_GetSignCertificateRoot",
        "parameters": [
          {
            "name": "codeSigningAccountName",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "certificateProfileName",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2022-06-15-preview"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "returns the root certificate",
            "content": {
              "application/x-x509-ca-cert": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Stream"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "SignatureAlgorithm": {
        "enum": [
          "RS256",
          "RS384",
          "RS512",
          "PS256",
          "PS384",
          "PS512",
          "ES256",
          "ES384",
          "ES512",
          "ES256K"
        ],
        "type": "string",
        "description": "The following algorithm identifiers are supported.",
        "x-ms-enum": {
          "name": "SignatureAlgorithm",
          "modelAsString": true
        }
      },
      "SignRequest": {
        "required": [
          "digest",
          "signatureAlgorithm"
        ],
        "type": "object",
        "properties": {
          "signatureAlgorithm": {
            "$ref": "#/components/schemas/SignatureAlgorithm"
          },
          "digest": {
            "type": "string",
            "description": "Digest to sign.",
            "format": "byte",
            "example": "RU9Gxlc6itrq37oQXfQePL+FdaSHYNsUvtyALsQMjEY="
          },
          "fileHashList": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "byte"
            },
            "description": "List of full file hash.",
            "nullable": true,
            "example": [
              "AQIDBAUGBwgJAAsMDQ4PEBESEwoVFhcYGRobHB0UHyA=",
              "ChQeKDI8RlBaAG54goyWoKq0vmTS3Obw+h4lJicoKSo="
            ]
          },
          "authenticodeHashList": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "byte"
            },
            "description": "List of authenticode hash.",
            "nullable": true,
            "example": [
              "dy8+qNT52Q05ugE8YiNeMfSedqvP5l35tgO7VwOqvvg=",
              "E3OElkMcpKpkOe3+Xz6ADAgeYXQ5zoy7TMqyBGn2Bpc="
            ]
          }
        },
        "additionalProperties": false
      },
      "SignStatus": {
        "required": [
          "operationId",
          "status"
        ],
        "type": "object",
        "properties": {
          "operationId": {
            "type": "string",
            "description": "ID of the operation.",
            "format": "uuid",
            "example": "76f60a30-d088-42e0-b16d-b76b88d3cbe1"
          },
          "status": {
            "$ref": "#/components/schemas/Status"
          },
          "signature": {
            "type": "string",
            "description": "Signature of the requested digest.",
            "format": "byte",
            "nullable": true
          },
          "signingCertificate": {
            "type": "string",
            "description": "Signing certificate corresponding to the private key used to sign the requested digest.",
            "format": "byte",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Status": {
        "enum": [
          "InProgress",
          "Succeeded",
          "Failed",
          "Canceled",
          "TimedOut",
          "NotFound"
        ],
        "type": "string",
        "x-ms-enum": {
          "name": "Status",
          "modelAsString": true
        }
      },
      "Stream": {
        "type": "object",
        "properties": {
          "canRead": {
            "type": "boolean",
            "readOnly": true
          },
          "canWrite": {
            "type": "boolean",
            "readOnly": true
          },
          "canSeek": {
            "type": "boolean",
            "readOnly": true
          },
          "canTimeout": {
            "type": "boolean",
            "readOnly": true
          },
          "length": {
            "type": "integer",
            "format": "int64",
            "readOnly": true
          },
          "position": {
            "type": "integer",
            "format": "int64"
          },
          "readTimeout": {
            "type": "integer",
            "format": "int32"
          },
          "writeTimeout": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      }
    },
    "securitySchemes": {
      "AADToken": {
        "type": "oauth2",
        "flows": {
          "authorizationCode": {
            "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/v2.0/authorize",
            "tokenUrl": "https://login.microsoftonline.com/common/oauth2/v2.0/token",
            "scopes": {
              "api://cf2ab426-f71a-4b61-bb8a-9e505b85bc2e/.default": "Default"
            }
          }
        }
      }
    }
  },
  "security": [
    {
      "AADToken": [
        "api://cf2ab426-f71a-4b61-bb8a-9e505b85bc2e/.default"
      ]
    }
  ],
  "x-ms-parameterized-host": {
    "hostTemplate": "{baseUrl}",
    "useSchemePrefix": false,
    "positionInOperation": "first",
    "parameters": [
      {
        "name": "baseUrl",
        "description": "The base URL where the CodeSigning Account has been provisioned, for example https://eus2.codesigning.azure.net.",
        "required": true,
        "type": "string",
        "in": "path",
        "x-ms-skip-url-encoding": true
      }
    ]
  }
}