// Code generated by Microsoft (R) AutoRest Code Generator (autorest: 3.10.2, generator: @autorest/powershell@4.0.718)
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Sample.API.Models
{
    using Sample.API.Runtime.PowerShell;

    /// <summary>Properties of the certificate profile.</summary>
    [System.ComponentModel.TypeConverter(typeof(CertificateProfilePropertiesTypeConverter))]
    public partial class CertificateProfileProperties
    {

        /// <summary>
        /// <c>AfterDeserializeDictionary</c> will be called after the deserialization has finished, allowing customization of the
        /// object before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>

        partial void AfterDeserializeDictionary(global::System.Collections.IDictionary content);

        /// <summary>
        /// <c>AfterDeserializePSObject</c> will be called after the deserialization has finished, allowing customization of the object
        /// before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>

        partial void AfterDeserializePSObject(global::System.Management.Automation.PSObject content);

        /// <summary>
        /// <c>BeforeDeserializeDictionary</c> will be called before the deserialization has commenced, allowing complete customization
        /// of the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <paramref name="returnNow" /> output
        /// parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeDeserializeDictionary(global::System.Collections.IDictionary content, ref bool returnNow);

        /// <summary>
        /// <c>BeforeDeserializePSObject</c> will be called before the deserialization has commenced, allowing complete customization
        /// of the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <paramref name="returnNow" /> output
        /// parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeDeserializePSObject(global::System.Management.Automation.PSObject content, ref bool returnNow);

        /// <summary>
        /// Deserializes a <see cref="global::System.Collections.IDictionary" /> into a new instance of <see cref="Sample.API.Models.CertificateProfileProperties"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        internal CertificateProfileProperties(global::System.Collections.IDictionary content)
        {
            bool returnNow = false;
            BeforeDeserializeDictionary(content, ref returnNow);
            if (returnNow)
            {
                return;
            }
            // actually deserialize
            if (content.Contains("ProfileType"))
            {
                ((Sample.API.Models.ICertificateProfilePropertiesInternal)this).ProfileType = (string) content.GetValueForProperty("ProfileType",((Sample.API.Models.ICertificateProfilePropertiesInternal)this).ProfileType, global::System.Convert.ToString);
            }
            if (content.Contains("IncludeStreetAddress"))
            {
                ((Sample.API.Models.ICertificateProfilePropertiesInternal)this).IncludeStreetAddress = (bool?) content.GetValueForProperty("IncludeStreetAddress",((Sample.API.Models.ICertificateProfilePropertiesInternal)this).IncludeStreetAddress, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("IncludeCity"))
            {
                ((Sample.API.Models.ICertificateProfilePropertiesInternal)this).IncludeCity = (bool?) content.GetValueForProperty("IncludeCity",((Sample.API.Models.ICertificateProfilePropertiesInternal)this).IncludeCity, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("IncludeState"))
            {
                ((Sample.API.Models.ICertificateProfilePropertiesInternal)this).IncludeState = (bool?) content.GetValueForProperty("IncludeState",((Sample.API.Models.ICertificateProfilePropertiesInternal)this).IncludeState, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("IncludeCountry"))
            {
                ((Sample.API.Models.ICertificateProfilePropertiesInternal)this).IncludeCountry = (bool?) content.GetValueForProperty("IncludeCountry",((Sample.API.Models.ICertificateProfilePropertiesInternal)this).IncludeCountry, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("IncludePostalCode"))
            {
                ((Sample.API.Models.ICertificateProfilePropertiesInternal)this).IncludePostalCode = (bool?) content.GetValueForProperty("IncludePostalCode",((Sample.API.Models.ICertificateProfilePropertiesInternal)this).IncludePostalCode, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("IdentityValidationId"))
            {
                ((Sample.API.Models.ICertificateProfilePropertiesInternal)this).IdentityValidationId = (string) content.GetValueForProperty("IdentityValidationId",((Sample.API.Models.ICertificateProfilePropertiesInternal)this).IdentityValidationId, global::System.Convert.ToString);
            }
            if (content.Contains("ProvisioningState"))
            {
                ((Sample.API.Models.ICertificateProfilePropertiesInternal)this).ProvisioningState = (string) content.GetValueForProperty("ProvisioningState",((Sample.API.Models.ICertificateProfilePropertiesInternal)this).ProvisioningState, global::System.Convert.ToString);
            }
            if (content.Contains("Status"))
            {
                ((Sample.API.Models.ICertificateProfilePropertiesInternal)this).Status = (string) content.GetValueForProperty("Status",((Sample.API.Models.ICertificateProfilePropertiesInternal)this).Status, global::System.Convert.ToString);
            }
            if (content.Contains("Certificates"))
            {
                ((Sample.API.Models.ICertificateProfilePropertiesInternal)this).Certificates = (System.Collections.Generic.List<Sample.API.Models.ICertificate>) content.GetValueForProperty("Certificates",((Sample.API.Models.ICertificateProfilePropertiesInternal)this).Certificates, __y => TypeConverterExtensions.SelectToList<Sample.API.Models.ICertificate>(__y, Sample.API.Models.CertificateTypeConverter.ConvertFrom));
            }
            AfterDeserializeDictionary(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Management.Automation.PSObject" /> into a new instance of <see cref="Sample.API.Models.CertificateProfileProperties"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        internal CertificateProfileProperties(global::System.Management.Automation.PSObject content)
        {
            bool returnNow = false;
            BeforeDeserializePSObject(content, ref returnNow);
            if (returnNow)
            {
                return;
            }
            // actually deserialize
            if (content.Contains("ProfileType"))
            {
                ((Sample.API.Models.ICertificateProfilePropertiesInternal)this).ProfileType = (string) content.GetValueForProperty("ProfileType",((Sample.API.Models.ICertificateProfilePropertiesInternal)this).ProfileType, global::System.Convert.ToString);
            }
            if (content.Contains("IncludeStreetAddress"))
            {
                ((Sample.API.Models.ICertificateProfilePropertiesInternal)this).IncludeStreetAddress = (bool?) content.GetValueForProperty("IncludeStreetAddress",((Sample.API.Models.ICertificateProfilePropertiesInternal)this).IncludeStreetAddress, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("IncludeCity"))
            {
                ((Sample.API.Models.ICertificateProfilePropertiesInternal)this).IncludeCity = (bool?) content.GetValueForProperty("IncludeCity",((Sample.API.Models.ICertificateProfilePropertiesInternal)this).IncludeCity, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("IncludeState"))
            {
                ((Sample.API.Models.ICertificateProfilePropertiesInternal)this).IncludeState = (bool?) content.GetValueForProperty("IncludeState",((Sample.API.Models.ICertificateProfilePropertiesInternal)this).IncludeState, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("IncludeCountry"))
            {
                ((Sample.API.Models.ICertificateProfilePropertiesInternal)this).IncludeCountry = (bool?) content.GetValueForProperty("IncludeCountry",((Sample.API.Models.ICertificateProfilePropertiesInternal)this).IncludeCountry, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("IncludePostalCode"))
            {
                ((Sample.API.Models.ICertificateProfilePropertiesInternal)this).IncludePostalCode = (bool?) content.GetValueForProperty("IncludePostalCode",((Sample.API.Models.ICertificateProfilePropertiesInternal)this).IncludePostalCode, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("IdentityValidationId"))
            {
                ((Sample.API.Models.ICertificateProfilePropertiesInternal)this).IdentityValidationId = (string) content.GetValueForProperty("IdentityValidationId",((Sample.API.Models.ICertificateProfilePropertiesInternal)this).IdentityValidationId, global::System.Convert.ToString);
            }
            if (content.Contains("ProvisioningState"))
            {
                ((Sample.API.Models.ICertificateProfilePropertiesInternal)this).ProvisioningState = (string) content.GetValueForProperty("ProvisioningState",((Sample.API.Models.ICertificateProfilePropertiesInternal)this).ProvisioningState, global::System.Convert.ToString);
            }
            if (content.Contains("Status"))
            {
                ((Sample.API.Models.ICertificateProfilePropertiesInternal)this).Status = (string) content.GetValueForProperty("Status",((Sample.API.Models.ICertificateProfilePropertiesInternal)this).Status, global::System.Convert.ToString);
            }
            if (content.Contains("Certificates"))
            {
                ((Sample.API.Models.ICertificateProfilePropertiesInternal)this).Certificates = (System.Collections.Generic.List<Sample.API.Models.ICertificate>) content.GetValueForProperty("Certificates",((Sample.API.Models.ICertificateProfilePropertiesInternal)this).Certificates, __y => TypeConverterExtensions.SelectToList<Sample.API.Models.ICertificate>(__y, Sample.API.Models.CertificateTypeConverter.ConvertFrom));
            }
            AfterDeserializePSObject(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Collections.IDictionary" /> into an instance of <see cref="Sample.API.Models.CertificateProfileProperties"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        /// <returns>an instance of <see cref="Sample.API.Models.ICertificateProfileProperties" />.</returns>
        public static Sample.API.Models.ICertificateProfileProperties DeserializeFromDictionary(global::System.Collections.IDictionary content)
        {
            return new CertificateProfileProperties(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Management.Automation.PSObject" /> into an instance of <see cref="Sample.API.Models.CertificateProfileProperties"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        /// <returns>an instance of <see cref="Sample.API.Models.ICertificateProfileProperties" />.</returns>
        public static Sample.API.Models.ICertificateProfileProperties DeserializeFromPSObject(global::System.Management.Automation.PSObject content)
        {
            return new CertificateProfileProperties(content);
        }

        /// <summary>
        /// Creates a new instance of <see cref="CertificateProfileProperties" />, deserializing the content from a json string.
        /// </summary>
        /// <param name="jsonText">a string containing a JSON serialized instance of this model.</param>
        /// <returns>an instance of the <see cref="CertificateProfileProperties" /> model class.</returns>
        public static Sample.API.Models.ICertificateProfileProperties FromJsonString(string jsonText) => FromJson(Sample.API.Runtime.Json.JsonNode.Parse(jsonText));

        /// <summary>Serializes this instance to a json string.</summary>

        /// <returns>a <see cref="System.String" /> containing this model serialized to JSON text.</returns>
        public string ToJsonString() => ToJson(null, Sample.API.Runtime.SerializationMode.IncludeAll)?.ToString();
    }
    /// Properties of the certificate profile.
    [System.ComponentModel.TypeConverter(typeof(CertificateProfilePropertiesTypeConverter))]
    public partial interface ICertificateProfileProperties

    {

    }
}