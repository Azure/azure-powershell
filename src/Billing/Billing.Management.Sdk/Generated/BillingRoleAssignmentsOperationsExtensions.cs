// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.
namespace Microsoft.Azure.Management.Billing
{
    using Microsoft.Rest.Azure;
    using Models;

    /// <summary>
    /// Extension methods for BillingRoleAssignmentsOperations
    /// </summary>
    public static partial class BillingRoleAssignmentsOperationsExtensions
    {
        /// <summary>
        /// Gets a role assignment for the caller on a billing account. The operation
        /// is supported for billing accounts with agreement type Microsoft Partner
        /// Agreement or Microsoft Customer Agreement.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='billingAccountName'>
        /// The ID that uniquely identifies a billing account.
        /// </param>
        /// <param name='billingRoleAssignmentName'>
        /// The ID that uniquely identifies a role assignment.
        /// </param>
        public static BillingRoleAssignment GetByBillingAccount(this IBillingRoleAssignmentsOperations operations, string billingAccountName, string billingRoleAssignmentName)
        {
                return ((IBillingRoleAssignmentsOperations)operations).GetByBillingAccountAsync(billingAccountName, billingRoleAssignmentName).GetAwaiter().GetResult();
        }

        /// <summary>
        /// Gets a role assignment for the caller on a billing account. The operation
        /// is supported for billing accounts with agreement type Microsoft Partner
        /// Agreement or Microsoft Customer Agreement.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='billingAccountName'>
        /// The ID that uniquely identifies a billing account.
        /// </param>
        /// <param name='billingRoleAssignmentName'>
        /// The ID that uniquely identifies a role assignment.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        public static async System.Threading.Tasks.Task<BillingRoleAssignment> GetByBillingAccountAsync(this IBillingRoleAssignmentsOperations operations, string billingAccountName, string billingRoleAssignmentName, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            using (var _result = await operations.GetByBillingAccountWithHttpMessagesAsync(billingAccountName, billingRoleAssignmentName, null, cancellationToken).ConfigureAwait(false))
            {
                return _result.Body;
            }
        }
        /// <summary>
        /// Deletes a role assignment for the caller on a billing account. The
        /// operation is supported for billing accounts with agreement type Microsoft
        /// Partner Agreement or Microsoft Customer Agreement.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='billingAccountName'>
        /// The ID that uniquely identifies a billing account.
        /// </param>
        /// <param name='billingRoleAssignmentName'>
        /// The ID that uniquely identifies a role assignment.
        /// </param>
        public static BillingRoleAssignment DeleteByBillingAccount(this IBillingRoleAssignmentsOperations operations, string billingAccountName, string billingRoleAssignmentName)
        {
                return ((IBillingRoleAssignmentsOperations)operations).DeleteByBillingAccountAsync(billingAccountName, billingRoleAssignmentName).GetAwaiter().GetResult();
        }

        /// <summary>
        /// Deletes a role assignment for the caller on a billing account. The
        /// operation is supported for billing accounts with agreement type Microsoft
        /// Partner Agreement or Microsoft Customer Agreement.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='billingAccountName'>
        /// The ID that uniquely identifies a billing account.
        /// </param>
        /// <param name='billingRoleAssignmentName'>
        /// The ID that uniquely identifies a role assignment.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        public static async System.Threading.Tasks.Task<BillingRoleAssignment> DeleteByBillingAccountAsync(this IBillingRoleAssignmentsOperations operations, string billingAccountName, string billingRoleAssignmentName, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            using (var _result = await operations.DeleteByBillingAccountWithHttpMessagesAsync(billingAccountName, billingRoleAssignmentName, null, cancellationToken).ConfigureAwait(false))
            {
                return _result.Body;
            }
        }
        /// <summary>
        /// Gets a role assignment for the caller on an invoice section. The operation
        /// is supported for billing accounts with agreement type Microsoft Customer
        /// Agreement.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='billingAccountName'>
        /// The ID that uniquely identifies a billing account.
        /// </param>
        /// <param name='billingProfileName'>
        /// The ID that uniquely identifies a billing profile.
        /// </param>
        /// <param name='invoiceSectionName'>
        /// The ID that uniquely identifies an invoice section.
        /// </param>
        /// <param name='billingRoleAssignmentName'>
        /// The ID that uniquely identifies a role assignment.
        /// </param>
        public static BillingRoleAssignment GetByInvoiceSection(this IBillingRoleAssignmentsOperations operations, string billingAccountName, string billingProfileName, string invoiceSectionName, string billingRoleAssignmentName)
        {
                return ((IBillingRoleAssignmentsOperations)operations).GetByInvoiceSectionAsync(billingAccountName, billingProfileName, invoiceSectionName, billingRoleAssignmentName).GetAwaiter().GetResult();
        }

        /// <summary>
        /// Gets a role assignment for the caller on an invoice section. The operation
        /// is supported for billing accounts with agreement type Microsoft Customer
        /// Agreement.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='billingAccountName'>
        /// The ID that uniquely identifies a billing account.
        /// </param>
        /// <param name='billingProfileName'>
        /// The ID that uniquely identifies a billing profile.
        /// </param>
        /// <param name='invoiceSectionName'>
        /// The ID that uniquely identifies an invoice section.
        /// </param>
        /// <param name='billingRoleAssignmentName'>
        /// The ID that uniquely identifies a role assignment.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        public static async System.Threading.Tasks.Task<BillingRoleAssignment> GetByInvoiceSectionAsync(this IBillingRoleAssignmentsOperations operations, string billingAccountName, string billingProfileName, string invoiceSectionName, string billingRoleAssignmentName, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            using (var _result = await operations.GetByInvoiceSectionWithHttpMessagesAsync(billingAccountName, billingProfileName, invoiceSectionName, billingRoleAssignmentName, null, cancellationToken).ConfigureAwait(false))
            {
                return _result.Body;
            }
        }
        /// <summary>
        /// Deletes a role assignment for the caller on an invoice section. The
        /// operation is supported for billing accounts with agreement type Microsoft
        /// Customer Agreement.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='billingAccountName'>
        /// The ID that uniquely identifies a billing account.
        /// </param>
        /// <param name='billingProfileName'>
        /// The ID that uniquely identifies a billing profile.
        /// </param>
        /// <param name='invoiceSectionName'>
        /// The ID that uniquely identifies an invoice section.
        /// </param>
        /// <param name='billingRoleAssignmentName'>
        /// The ID that uniquely identifies a role assignment.
        /// </param>
        public static BillingRoleAssignment DeleteByInvoiceSection(this IBillingRoleAssignmentsOperations operations, string billingAccountName, string billingProfileName, string invoiceSectionName, string billingRoleAssignmentName)
        {
                return ((IBillingRoleAssignmentsOperations)operations).DeleteByInvoiceSectionAsync(billingAccountName, billingProfileName, invoiceSectionName, billingRoleAssignmentName).GetAwaiter().GetResult();
        }

        /// <summary>
        /// Deletes a role assignment for the caller on an invoice section. The
        /// operation is supported for billing accounts with agreement type Microsoft
        /// Customer Agreement.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='billingAccountName'>
        /// The ID that uniquely identifies a billing account.
        /// </param>
        /// <param name='billingProfileName'>
        /// The ID that uniquely identifies a billing profile.
        /// </param>
        /// <param name='invoiceSectionName'>
        /// The ID that uniquely identifies an invoice section.
        /// </param>
        /// <param name='billingRoleAssignmentName'>
        /// The ID that uniquely identifies a role assignment.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        public static async System.Threading.Tasks.Task<BillingRoleAssignment> DeleteByInvoiceSectionAsync(this IBillingRoleAssignmentsOperations operations, string billingAccountName, string billingProfileName, string invoiceSectionName, string billingRoleAssignmentName, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            using (var _result = await operations.DeleteByInvoiceSectionWithHttpMessagesAsync(billingAccountName, billingProfileName, invoiceSectionName, billingRoleAssignmentName, null, cancellationToken).ConfigureAwait(false))
            {
                return _result.Body;
            }
        }
        /// <summary>
        /// Gets a role assignment for the caller on a billing profile. The operation
        /// is supported for billing accounts with agreement type Microsoft Partner
        /// Agreement or Microsoft Customer Agreement.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='billingAccountName'>
        /// The ID that uniquely identifies a billing account.
        /// </param>
        /// <param name='billingProfileName'>
        /// The ID that uniquely identifies a billing profile.
        /// </param>
        /// <param name='billingRoleAssignmentName'>
        /// The ID that uniquely identifies a role assignment.
        /// </param>
        public static BillingRoleAssignment GetByBillingProfile(this IBillingRoleAssignmentsOperations operations, string billingAccountName, string billingProfileName, string billingRoleAssignmentName)
        {
                return ((IBillingRoleAssignmentsOperations)operations).GetByBillingProfileAsync(billingAccountName, billingProfileName, billingRoleAssignmentName).GetAwaiter().GetResult();
        }

        /// <summary>
        /// Gets a role assignment for the caller on a billing profile. The operation
        /// is supported for billing accounts with agreement type Microsoft Partner
        /// Agreement or Microsoft Customer Agreement.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='billingAccountName'>
        /// The ID that uniquely identifies a billing account.
        /// </param>
        /// <param name='billingProfileName'>
        /// The ID that uniquely identifies a billing profile.
        /// </param>
        /// <param name='billingRoleAssignmentName'>
        /// The ID that uniquely identifies a role assignment.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        public static async System.Threading.Tasks.Task<BillingRoleAssignment> GetByBillingProfileAsync(this IBillingRoleAssignmentsOperations operations, string billingAccountName, string billingProfileName, string billingRoleAssignmentName, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            using (var _result = await operations.GetByBillingProfileWithHttpMessagesAsync(billingAccountName, billingProfileName, billingRoleAssignmentName, null, cancellationToken).ConfigureAwait(false))
            {
                return _result.Body;
            }
        }
        /// <summary>
        /// Deletes a role assignment for the caller on a billing profile. The
        /// operation is supported for billing accounts with agreement type Microsoft
        /// Partner Agreement or Microsoft Customer Agreement.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='billingAccountName'>
        /// The ID that uniquely identifies a billing account.
        /// </param>
        /// <param name='billingProfileName'>
        /// The ID that uniquely identifies a billing profile.
        /// </param>
        /// <param name='billingRoleAssignmentName'>
        /// The ID that uniquely identifies a role assignment.
        /// </param>
        public static BillingRoleAssignment DeleteByBillingProfile(this IBillingRoleAssignmentsOperations operations, string billingAccountName, string billingProfileName, string billingRoleAssignmentName)
        {
                return ((IBillingRoleAssignmentsOperations)operations).DeleteByBillingProfileAsync(billingAccountName, billingProfileName, billingRoleAssignmentName).GetAwaiter().GetResult();
        }

        /// <summary>
        /// Deletes a role assignment for the caller on a billing profile. The
        /// operation is supported for billing accounts with agreement type Microsoft
        /// Partner Agreement or Microsoft Customer Agreement.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='billingAccountName'>
        /// The ID that uniquely identifies a billing account.
        /// </param>
        /// <param name='billingProfileName'>
        /// The ID that uniquely identifies a billing profile.
        /// </param>
        /// <param name='billingRoleAssignmentName'>
        /// The ID that uniquely identifies a role assignment.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        public static async System.Threading.Tasks.Task<BillingRoleAssignment> DeleteByBillingProfileAsync(this IBillingRoleAssignmentsOperations operations, string billingAccountName, string billingProfileName, string billingRoleAssignmentName, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            using (var _result = await operations.DeleteByBillingProfileWithHttpMessagesAsync(billingAccountName, billingProfileName, billingRoleAssignmentName, null, cancellationToken).ConfigureAwait(false))
            {
                return _result.Body;
            }
        }
        /// <summary>
        /// Lists the role assignments for the caller on a billing account. The
        /// operation is supported for billing accounts with agreement type Microsoft
        /// Partner Agreement or Microsoft Customer Agreement.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='billingAccountName'>
        /// The ID that uniquely identifies a billing account.
        /// </param>
        public static Microsoft.Rest.Azure.IPage<BillingRoleAssignment> ListByBillingAccount(this IBillingRoleAssignmentsOperations operations, string billingAccountName)
        {
                return ((IBillingRoleAssignmentsOperations)operations).ListByBillingAccountAsync(billingAccountName).GetAwaiter().GetResult();
        }

        /// <summary>
        /// Lists the role assignments for the caller on a billing account. The
        /// operation is supported for billing accounts with agreement type Microsoft
        /// Partner Agreement or Microsoft Customer Agreement.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='billingAccountName'>
        /// The ID that uniquely identifies a billing account.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        public static async System.Threading.Tasks.Task<Microsoft.Rest.Azure.IPage<BillingRoleAssignment>> ListByBillingAccountAsync(this IBillingRoleAssignmentsOperations operations, string billingAccountName, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            using (var _result = await operations.ListByBillingAccountWithHttpMessagesAsync(billingAccountName, null, cancellationToken).ConfigureAwait(false))
            {
                return _result.Body;
            }
        }
        /// <summary>
        /// Lists the role assignments for the caller on an invoice section. The
        /// operation is supported for billing accounts with agreement type Microsoft
        /// Customer Agreement.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='billingAccountName'>
        /// The ID that uniquely identifies a billing account.
        /// </param>
        /// <param name='billingProfileName'>
        /// The ID that uniquely identifies a billing profile.
        /// </param>
        /// <param name='invoiceSectionName'>
        /// The ID that uniquely identifies an invoice section.
        /// </param>
        public static Microsoft.Rest.Azure.IPage<BillingRoleAssignment> ListByInvoiceSection(this IBillingRoleAssignmentsOperations operations, string billingAccountName, string billingProfileName, string invoiceSectionName)
        {
                return ((IBillingRoleAssignmentsOperations)operations).ListByInvoiceSectionAsync(billingAccountName, billingProfileName, invoiceSectionName).GetAwaiter().GetResult();
        }

        /// <summary>
        /// Lists the role assignments for the caller on an invoice section. The
        /// operation is supported for billing accounts with agreement type Microsoft
        /// Customer Agreement.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='billingAccountName'>
        /// The ID that uniquely identifies a billing account.
        /// </param>
        /// <param name='billingProfileName'>
        /// The ID that uniquely identifies a billing profile.
        /// </param>
        /// <param name='invoiceSectionName'>
        /// The ID that uniquely identifies an invoice section.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        public static async System.Threading.Tasks.Task<Microsoft.Rest.Azure.IPage<BillingRoleAssignment>> ListByInvoiceSectionAsync(this IBillingRoleAssignmentsOperations operations, string billingAccountName, string billingProfileName, string invoiceSectionName, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            using (var _result = await operations.ListByInvoiceSectionWithHttpMessagesAsync(billingAccountName, billingProfileName, invoiceSectionName, null, cancellationToken).ConfigureAwait(false))
            {
                return _result.Body;
            }
        }
        /// <summary>
        /// Lists the role assignments for the caller on a billing profile. The
        /// operation is supported for billing accounts with agreement type Microsoft
        /// Customer Agreement.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='billingAccountName'>
        /// The ID that uniquely identifies a billing account.
        /// </param>
        /// <param name='billingProfileName'>
        /// The ID that uniquely identifies a billing profile.
        /// </param>
        public static Microsoft.Rest.Azure.IPage<BillingRoleAssignment> ListByBillingProfile(this IBillingRoleAssignmentsOperations operations, string billingAccountName, string billingProfileName)
        {
                return ((IBillingRoleAssignmentsOperations)operations).ListByBillingProfileAsync(billingAccountName, billingProfileName).GetAwaiter().GetResult();
        }

        /// <summary>
        /// Lists the role assignments for the caller on a billing profile. The
        /// operation is supported for billing accounts with agreement type Microsoft
        /// Customer Agreement.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='billingAccountName'>
        /// The ID that uniquely identifies a billing account.
        /// </param>
        /// <param name='billingProfileName'>
        /// The ID that uniquely identifies a billing profile.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        public static async System.Threading.Tasks.Task<Microsoft.Rest.Azure.IPage<BillingRoleAssignment>> ListByBillingProfileAsync(this IBillingRoleAssignmentsOperations operations, string billingAccountName, string billingProfileName, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            using (var _result = await operations.ListByBillingProfileWithHttpMessagesAsync(billingAccountName, billingProfileName, null, cancellationToken).ConfigureAwait(false))
            {
                return _result.Body;
            }
        }
        /// <summary>
        /// Lists the role assignments for the caller on a billing account. The
        /// operation is supported for billing accounts with agreement type Microsoft
        /// Partner Agreement or Microsoft Customer Agreement.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='nextPageLink'>
        /// The NextLink from the previous successful call to List operation.
        /// </param>
        public static Microsoft.Rest.Azure.IPage<BillingRoleAssignment> ListByBillingAccountNext(this IBillingRoleAssignmentsOperations operations, string nextPageLink)
        {
                return ((IBillingRoleAssignmentsOperations)operations).ListByBillingAccountNextAsync(nextPageLink).GetAwaiter().GetResult();
        }

        /// <summary>
        /// Lists the role assignments for the caller on a billing account. The
        /// operation is supported for billing accounts with agreement type Microsoft
        /// Partner Agreement or Microsoft Customer Agreement.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='nextPageLink'>
        /// The NextLink from the previous successful call to List operation.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        public static async System.Threading.Tasks.Task<Microsoft.Rest.Azure.IPage<BillingRoleAssignment>> ListByBillingAccountNextAsync(this IBillingRoleAssignmentsOperations operations, string nextPageLink, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            using (var _result = await operations.ListByBillingAccountNextWithHttpMessagesAsync(nextPageLink, null, cancellationToken).ConfigureAwait(false))
            {
                return _result.Body;
            }
        }
        /// <summary>
        /// Lists the role assignments for the caller on an invoice section. The
        /// operation is supported for billing accounts with agreement type Microsoft
        /// Customer Agreement.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='nextPageLink'>
        /// The NextLink from the previous successful call to List operation.
        /// </param>
        public static Microsoft.Rest.Azure.IPage<BillingRoleAssignment> ListByInvoiceSectionNext(this IBillingRoleAssignmentsOperations operations, string nextPageLink)
        {
                return ((IBillingRoleAssignmentsOperations)operations).ListByInvoiceSectionNextAsync(nextPageLink).GetAwaiter().GetResult();
        }

        /// <summary>
        /// Lists the role assignments for the caller on an invoice section. The
        /// operation is supported for billing accounts with agreement type Microsoft
        /// Customer Agreement.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='nextPageLink'>
        /// The NextLink from the previous successful call to List operation.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        public static async System.Threading.Tasks.Task<Microsoft.Rest.Azure.IPage<BillingRoleAssignment>> ListByInvoiceSectionNextAsync(this IBillingRoleAssignmentsOperations operations, string nextPageLink, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            using (var _result = await operations.ListByInvoiceSectionNextWithHttpMessagesAsync(nextPageLink, null, cancellationToken).ConfigureAwait(false))
            {
                return _result.Body;
            }
        }
        /// <summary>
        /// Lists the role assignments for the caller on a billing profile. The
        /// operation is supported for billing accounts with agreement type Microsoft
        /// Customer Agreement.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='nextPageLink'>
        /// The NextLink from the previous successful call to List operation.
        /// </param>
        public static Microsoft.Rest.Azure.IPage<BillingRoleAssignment> ListByBillingProfileNext(this IBillingRoleAssignmentsOperations operations, string nextPageLink)
        {
                return ((IBillingRoleAssignmentsOperations)operations).ListByBillingProfileNextAsync(nextPageLink).GetAwaiter().GetResult();
        }

        /// <summary>
        /// Lists the role assignments for the caller on a billing profile. The
        /// operation is supported for billing accounts with agreement type Microsoft
        /// Customer Agreement.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='nextPageLink'>
        /// The NextLink from the previous successful call to List operation.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        public static async System.Threading.Tasks.Task<Microsoft.Rest.Azure.IPage<BillingRoleAssignment>> ListByBillingProfileNextAsync(this IBillingRoleAssignmentsOperations operations, string nextPageLink, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            using (var _result = await operations.ListByBillingProfileNextWithHttpMessagesAsync(nextPageLink, null, cancellationToken).ConfigureAwait(false))
            {
                return _result.Body;
            }
        }
    }
}
