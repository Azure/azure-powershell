// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.Billing.Models
{
    using System.Linq;

    /// <summary>
    /// The properties of the role assignment.
    /// </summary>
    public partial class BillingRoleAssignmentProperties
    {
        /// <summary>
        /// Initializes a new instance of the BillingRoleAssignmentProperties class.
        /// </summary>
        public BillingRoleAssignmentProperties()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the BillingRoleAssignmentProperties class.
        /// </summary>

        /// <param name="createdOn">The date the role assignment was created.
        /// </param>

        /// <param name="createdByPrincipalTenantId">The tenant Id of the user who created the role assignment.
        /// </param>

        /// <param name="createdByPrincipalId">The principal Id of the user who created the role assignment.
        /// </param>

        /// <param name="createdByUserEmailAddress">The email address of the user who created the role assignment.
        /// </param>

        /// <param name="principalId">The principal id of the user to whom the role was assigned.
        /// </param>

        /// <param name="principalTenantId">The principal tenant id of the user to whom the role was assigned.
        /// </param>

        /// <param name="roleDefinitionId">The ID of the role definition.
        /// </param>

        /// <param name="scope">The scope at which the role was assigned.
        /// </param>

        /// <param name="userAuthenticationType">The authentication type.
        /// </param>

        /// <param name="userEmailAddress">The email address of the user.
        /// </param>
        public BillingRoleAssignmentProperties(string createdOn = default(string), string createdByPrincipalTenantId = default(string), string createdByPrincipalId = default(string), string createdByUserEmailAddress = default(string), string principalId = default(string), string principalTenantId = default(string), string roleDefinitionId = default(string), string scope = default(string), string userAuthenticationType = default(string), string userEmailAddress = default(string))

        {
            this.CreatedOn = createdOn;
            this.CreatedByPrincipalTenantId = createdByPrincipalTenantId;
            this.CreatedByPrincipalId = createdByPrincipalId;
            this.CreatedByUserEmailAddress = createdByUserEmailAddress;
            this.PrincipalId = principalId;
            this.PrincipalTenantId = principalTenantId;
            this.RoleDefinitionId = roleDefinitionId;
            this.Scope = scope;
            this.UserAuthenticationType = userAuthenticationType;
            this.UserEmailAddress = userEmailAddress;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets the date the role assignment was created.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "createdOn")]
        public string CreatedOn {get; private set; }

        /// <summary>
        /// Gets the tenant Id of the user who created the role assignment.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "createdByPrincipalTenantId")]
        public string CreatedByPrincipalTenantId {get; private set; }

        /// <summary>
        /// Gets the principal Id of the user who created the role assignment.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "createdByPrincipalId")]
        public string CreatedByPrincipalId {get; private set; }

        /// <summary>
        /// Gets the email address of the user who created the role assignment.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "createdByUserEmailAddress")]
        public string CreatedByUserEmailAddress {get; private set; }

        /// <summary>
        /// Gets or sets the principal id of the user to whom the role was assigned.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "principalId")]
        public string PrincipalId {get; set; }

        /// <summary>
        /// Gets or sets the principal tenant id of the user to whom the role was
        /// assigned.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "principalTenantId")]
        public string PrincipalTenantId {get; set; }

        /// <summary>
        /// Gets or sets the ID of the role definition.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "roleDefinitionId")]
        public string RoleDefinitionId {get; set; }

        /// <summary>
        /// Gets the scope at which the role was assigned.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "scope")]
        public string Scope {get; private set; }

        /// <summary>
        /// Gets or sets the authentication type.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "userAuthenticationType")]
        public string UserAuthenticationType {get; set; }

        /// <summary>
        /// Gets or sets the email address of the user.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "userEmailAddress")]
        public string UserEmailAddress {get; set; }
    }
}