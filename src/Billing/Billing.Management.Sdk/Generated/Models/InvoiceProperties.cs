// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.Billing.Models
{
    using System.Linq;

    /// <summary>
    /// The properties of the invoice.
    /// </summary>
    public partial class InvoiceProperties
    {
        /// <summary>
        /// Initializes a new instance of the InvoiceProperties class.
        /// </summary>
        public InvoiceProperties()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the InvoiceProperties class.
        /// </summary>

        /// <param name="dueDate">The due date for the invoice.
        /// </param>

        /// <param name="invoiceDate">The date when the invoice was generated.
        /// </param>

        /// <param name="status">The current status of the invoice.
        /// Possible values include: &#39;Due&#39;, &#39;OverDue&#39;, &#39;Paid&#39;</param>

        /// <param name="amountDue">The amount due as of now.
        /// </param>

        /// <param name="azurePrepaymentApplied">The amount of Azure prepayment applied to the charges. This field is
        /// applicable to billing accounts with agreement type Microsoft Customer
        /// Agreement.
        /// </param>

        /// <param name="billedAmount">The total charges for the invoice billing period.
        /// </param>

        /// <param name="creditAmount">The total refund for returns and cancellations during the invoice billing
        /// period. This field is applicable to billing accounts with agreement type
        /// Microsoft Customer Agreement.
        /// </param>

        /// <param name="freeAzureCreditApplied">The amount of free Azure credits applied to the charges. This field is
        /// applicable to billing accounts with agreement type Microsoft Customer
        /// Agreement.
        /// </param>

        /// <param name="subTotal">The pre-tax amount due. This field is applicable to billing accounts with
        /// agreement type Microsoft Customer Agreement.
        /// </param>

        /// <param name="taxAmount">The amount of tax charged for the billing period. This field is applicable
        /// to billing accounts with agreement type Microsoft Customer Agreement.
        /// </param>

        /// <param name="totalAmount">The amount due when the invoice was generated. This field is applicable to
        /// billing accounts with agreement type Microsoft Customer Agreement.
        /// </param>

        /// <param name="invoicePeriodStartDate">The start date of the billing period for which the invoice is generated.
        /// </param>

        /// <param name="invoicePeriodEndDate">The end date of the billing period for which the invoice is generated.
        /// </param>

        /// <param name="invoiceType">Invoice type.
        /// Possible values include: &#39;AzureService&#39;, &#39;AzureMarketplace&#39;, &#39;AzureSupport&#39;</param>

        /// <param name="isMonthlyInvoice">Specifies if the invoice is generated as part of monthly invoicing cycle or
        /// not. This field is applicable to billing accounts with agreement type
        /// Microsoft Customer Agreement.
        /// </param>

        /// <param name="billingProfileId">The ID of the billing profile for which the invoice is generated.
        /// </param>

        /// <param name="billingProfileDisplayName">The name of the billing profile for which the invoice is generated.
        /// </param>

        /// <param name="purchaseOrderNumber">An optional purchase order number for the invoice.
        /// </param>

        /// <param name="documents">List of documents available to download such as invoice and tax receipt.
        /// </param>

        /// <param name="payments">List of payments.
        /// </param>

        /// <param name="subscriptionId">The ID of the subscription for which the invoice is generated.
        /// </param>
        public InvoiceProperties(System.DateTime? dueDate = default(System.DateTime?), System.DateTime? invoiceDate = default(System.DateTime?), string status = default(string), Amount amountDue = default(Amount), Amount azurePrepaymentApplied = default(Amount), Amount billedAmount = default(Amount), Amount creditAmount = default(Amount), Amount freeAzureCreditApplied = default(Amount), Amount subTotal = default(Amount), Amount taxAmount = default(Amount), Amount totalAmount = default(Amount), System.DateTime? invoicePeriodStartDate = default(System.DateTime?), System.DateTime? invoicePeriodEndDate = default(System.DateTime?), string invoiceType = default(string), bool? isMonthlyInvoice = default(bool?), string billingProfileId = default(string), string billingProfileDisplayName = default(string), string purchaseOrderNumber = default(string), System.Collections.Generic.IList<Document> documents = default(System.Collections.Generic.IList<Document>), System.Collections.Generic.IList<PaymentProperties> payments = default(System.Collections.Generic.IList<PaymentProperties>), string subscriptionId = default(string))

        {
            this.DueDate = dueDate;
            this.InvoiceDate = invoiceDate;
            this.Status = status;
            this.AmountDue = amountDue;
            this.AzurePrepaymentApplied = azurePrepaymentApplied;
            this.BilledAmount = billedAmount;
            this.CreditAmount = creditAmount;
            this.FreeAzureCreditApplied = freeAzureCreditApplied;
            this.SubTotal = subTotal;
            this.TaxAmount = taxAmount;
            this.TotalAmount = totalAmount;
            this.InvoicePeriodStartDate = invoicePeriodStartDate;
            this.InvoicePeriodEndDate = invoicePeriodEndDate;
            this.InvoiceType = invoiceType;
            this.IsMonthlyInvoice = isMonthlyInvoice;
            this.BillingProfileId = billingProfileId;
            this.BillingProfileDisplayName = billingProfileDisplayName;
            this.PurchaseOrderNumber = purchaseOrderNumber;
            this.Documents = documents;
            this.Payments = payments;
            this.SubscriptionId = subscriptionId;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets the due date for the invoice.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "dueDate")]
        public System.DateTime? DueDate {get; private set; }

        /// <summary>
        /// Gets the date when the invoice was generated.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "invoiceDate")]
        public System.DateTime? InvoiceDate {get; private set; }

        /// <summary>
        /// Gets the current status of the invoice. Possible values include: &#39;Due&#39;, &#39;OverDue&#39;, &#39;Paid&#39;
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "status")]
        public string Status {get; private set; }

        /// <summary>
        /// Gets the amount due as of now.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "amountDue")]
        public Amount AmountDue {get; private set; }

        /// <summary>
        /// Gets the amount of Azure prepayment applied to the charges. This field is
        /// applicable to billing accounts with agreement type Microsoft Customer
        /// Agreement.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "azurePrepaymentApplied")]
        public Amount AzurePrepaymentApplied {get; private set; }

        /// <summary>
        /// Gets the total charges for the invoice billing period.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "billedAmount")]
        public Amount BilledAmount {get; private set; }

        /// <summary>
        /// Gets the total refund for returns and cancellations during the invoice
        /// billing period. This field is applicable to billing accounts with agreement
        /// type Microsoft Customer Agreement.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "creditAmount")]
        public Amount CreditAmount {get; private set; }

        /// <summary>
        /// Gets the amount of free Azure credits applied to the charges. This field is
        /// applicable to billing accounts with agreement type Microsoft Customer
        /// Agreement.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "freeAzureCreditApplied")]
        public Amount FreeAzureCreditApplied {get; private set; }

        /// <summary>
        /// Gets the pre-tax amount due. This field is applicable to billing accounts
        /// with agreement type Microsoft Customer Agreement.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "subTotal")]
        public Amount SubTotal {get; private set; }

        /// <summary>
        /// Gets the amount of tax charged for the billing period. This field is
        /// applicable to billing accounts with agreement type Microsoft Customer
        /// Agreement.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "taxAmount")]
        public Amount TaxAmount {get; private set; }

        /// <summary>
        /// Gets the amount due when the invoice was generated. This field is
        /// applicable to billing accounts with agreement type Microsoft Customer
        /// Agreement.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "totalAmount")]
        public Amount TotalAmount {get; private set; }

        /// <summary>
        /// Gets the start date of the billing period for which the invoice is
        /// generated.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "invoicePeriodStartDate")]
        public System.DateTime? InvoicePeriodStartDate {get; private set; }

        /// <summary>
        /// Gets the end date of the billing period for which the invoice is generated.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "invoicePeriodEndDate")]
        public System.DateTime? InvoicePeriodEndDate {get; private set; }

        /// <summary>
        /// Gets invoice type. Possible values include: &#39;AzureService&#39;, &#39;AzureMarketplace&#39;, &#39;AzureSupport&#39;
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "invoiceType")]
        public string InvoiceType {get; private set; }

        /// <summary>
        /// Gets specifies if the invoice is generated as part of monthly invoicing
        /// cycle or not. This field is applicable to billing accounts with agreement
        /// type Microsoft Customer Agreement.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "isMonthlyInvoice")]
        public bool? IsMonthlyInvoice {get; private set; }

        /// <summary>
        /// Gets the ID of the billing profile for which the invoice is generated.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "billingProfileId")]
        public string BillingProfileId {get; private set; }

        /// <summary>
        /// Gets the name of the billing profile for which the invoice is generated.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "billingProfileDisplayName")]
        public string BillingProfileDisplayName {get; private set; }

        /// <summary>
        /// Gets an optional purchase order number for the invoice.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "purchaseOrderNumber")]
        public string PurchaseOrderNumber {get; private set; }

        /// <summary>
        /// Gets list of documents available to download such as invoice and tax
        /// receipt.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "documents")]
        public System.Collections.Generic.IList<Document> Documents {get; private set; }

        /// <summary>
        /// Gets list of payments.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "payments")]
        public System.Collections.Generic.IList<PaymentProperties> Payments {get; private set; }

        /// <summary>
        /// Gets the ID of the subscription for which the invoice is generated.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "subscriptionId")]
        public string SubscriptionId {get; private set; }
    }
}