// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.Billing.Models
{
    using System.Linq;

    /// <summary>
    /// Address details.
    /// </summary>
    public partial class AddressDetails
    {
        /// <summary>
        /// Initializes a new instance of the AddressDetails class.
        /// </summary>
        public AddressDetails()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the AddressDetails class.
        /// </summary>

        /// <param name="firstName">First name.
        /// </param>

        /// <param name="lastName">Last name.
        /// </param>

        /// <param name="companyName">Company name.
        /// </param>

        /// <param name="addressLine1">Address line 1.
        /// </param>

        /// <param name="addressLine2">Address line 2.
        /// </param>

        /// <param name="addressLine3">Address line 3.
        /// </param>

        /// <param name="city">Address city.
        /// </param>

        /// <param name="district">Address district.
        /// </param>

        /// <param name="region">Address region.
        /// </param>

        /// <param name="country">Country code uses ISO2, 2-digit format.
        /// </param>

        /// <param name="postalCode">Postal code.
        /// </param>

        /// <param name="email">Email address.
        /// </param>

        /// <param name="phoneNumber">Phone number.
        /// </param>
        public AddressDetails(string addressLine1, string country, string firstName = default(string), string lastName = default(string), string companyName = default(string), string addressLine2 = default(string), string addressLine3 = default(string), string city = default(string), string district = default(string), string region = default(string), string postalCode = default(string), string email = default(string), string phoneNumber = default(string))

        {
            this.FirstName = firstName;
            this.LastName = lastName;
            this.CompanyName = companyName;
            this.AddressLine1 = addressLine1;
            this.AddressLine2 = addressLine2;
            this.AddressLine3 = addressLine3;
            this.City = city;
            this.District = district;
            this.Region = region;
            this.Country = country;
            this.PostalCode = postalCode;
            this.Email = email;
            this.PhoneNumber = phoneNumber;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets or sets first name.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "firstName")]
        public string FirstName {get; set; }

        /// <summary>
        /// Gets or sets last name.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "lastName")]
        public string LastName {get; set; }

        /// <summary>
        /// Gets or sets company name.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "companyName")]
        public string CompanyName {get; set; }

        /// <summary>
        /// Gets or sets address line 1.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "addressLine1")]
        public string AddressLine1 {get; set; }

        /// <summary>
        /// Gets or sets address line 2.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "addressLine2")]
        public string AddressLine2 {get; set; }

        /// <summary>
        /// Gets or sets address line 3.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "addressLine3")]
        public string AddressLine3 {get; set; }

        /// <summary>
        /// Gets or sets address city.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "city")]
        public string City {get; set; }

        /// <summary>
        /// Gets or sets address district.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "district")]
        public string District {get; set; }

        /// <summary>
        /// Gets or sets address region.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "region")]
        public string Region {get; set; }

        /// <summary>
        /// Gets or sets country code uses ISO2, 2-digit format.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "country")]
        public string Country {get; set; }

        /// <summary>
        /// Gets or sets postal code.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "postalCode")]
        public string PostalCode {get; set; }

        /// <summary>
        /// Gets or sets email address.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "email")]
        public string Email {get; set; }

        /// <summary>
        /// Gets or sets phone number.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "phoneNumber")]
        public string PhoneNumber {get; set; }
        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (this.AddressLine1 == null)
            {
                throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.CannotBeNull, "AddressLine1");
            }
            if (this.Country == null)
            {
                throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.CannotBeNull, "Country");
            }













        }
    }
}