// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.
namespace Microsoft.Azure.Management.Billing
{
    using Microsoft.Rest.Azure;
    using Models;

    /// <summary>
    /// Extension methods for TransactionsOperations
    /// </summary>
    public static partial class TransactionsOperationsExtensions
    {
        /// <summary>
        /// Lists the transactions for an invoice. Transactions include purchases,
        /// refunds and Azure usage charges.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='billingAccountName'>
        /// The ID that uniquely identifies a billing account.
        /// </param>
        /// <param name='invoiceName'>
        /// The ID that uniquely identifies an invoice.
        /// </param>
        public static Microsoft.Rest.Azure.IPage<Transaction> ListByInvoice(this ITransactionsOperations operations, string billingAccountName, string invoiceName)
        {
                return ((ITransactionsOperations)operations).ListByInvoiceAsync(billingAccountName, invoiceName).GetAwaiter().GetResult();
        }

        /// <summary>
        /// Lists the transactions for an invoice. Transactions include purchases,
        /// refunds and Azure usage charges.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='billingAccountName'>
        /// The ID that uniquely identifies a billing account.
        /// </param>
        /// <param name='invoiceName'>
        /// The ID that uniquely identifies an invoice.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        public static async System.Threading.Tasks.Task<Microsoft.Rest.Azure.IPage<Transaction>> ListByInvoiceAsync(this ITransactionsOperations operations, string billingAccountName, string invoiceName, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            using (var _result = await operations.ListByInvoiceWithHttpMessagesAsync(billingAccountName, invoiceName, null, cancellationToken).ConfigureAwait(false))
            {
                return _result.Body;
            }
        }
        /// <summary>
        /// Lists the transactions for an invoice. Transactions include purchases,
        /// refunds and Azure usage charges.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='nextPageLink'>
        /// The NextLink from the previous successful call to List operation.
        /// </param>
        public static Microsoft.Rest.Azure.IPage<Transaction> ListByInvoiceNext(this ITransactionsOperations operations, string nextPageLink)
        {
                return ((ITransactionsOperations)operations).ListByInvoiceNextAsync(nextPageLink).GetAwaiter().GetResult();
        }

        /// <summary>
        /// Lists the transactions for an invoice. Transactions include purchases,
        /// refunds and Azure usage charges.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='nextPageLink'>
        /// The NextLink from the previous successful call to List operation.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        public static async System.Threading.Tasks.Task<Microsoft.Rest.Azure.IPage<Transaction>> ListByInvoiceNextAsync(this ITransactionsOperations operations, string nextPageLink, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            using (var _result = await operations.ListByInvoiceNextWithHttpMessagesAsync(nextPageLink, null, cancellationToken).ConfigureAwait(false))
            {
                return _result.Body;
            }
        }
    }
}
