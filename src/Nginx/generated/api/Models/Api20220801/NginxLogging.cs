// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20220801
{
    using static Microsoft.Azure.PowerShell.Cmdlets.Nginx.Runtime.Extensions;

    public partial class NginxLogging :
        Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20220801.INginxLogging,
        Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20220801.INginxLoggingInternal
    {

        /// <summary>Internal Acessors for StorageAccount</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20220801.INginxStorageAccount Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20220801.INginxLoggingInternal.StorageAccount { get => (this._storageAccount = this._storageAccount ?? new Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20220801.NginxStorageAccount()); set { {_storageAccount = value;} } }

        /// <summary>Backing field for <see cref="StorageAccount" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20220801.INginxStorageAccount _storageAccount;

        [Microsoft.Azure.PowerShell.Cmdlets.Nginx.Origin(Microsoft.Azure.PowerShell.Cmdlets.Nginx.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20220801.INginxStorageAccount StorageAccount { get => (this._storageAccount = this._storageAccount ?? new Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20220801.NginxStorageAccount()); set => this._storageAccount = value; }

        [Microsoft.Azure.PowerShell.Cmdlets.Nginx.Origin(Microsoft.Azure.PowerShell.Cmdlets.Nginx.PropertyOrigin.Inlined)]
        public string StorageAccountContainerName { get => ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20220801.INginxStorageAccountInternal)StorageAccount).ContainerName; set => ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20220801.INginxStorageAccountInternal)StorageAccount).ContainerName = value ?? null; }

        [Microsoft.Azure.PowerShell.Cmdlets.Nginx.Origin(Microsoft.Azure.PowerShell.Cmdlets.Nginx.PropertyOrigin.Inlined)]
        public string StorageAccountName { get => ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20220801.INginxStorageAccountInternal)StorageAccount).AccountName; set => ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20220801.INginxStorageAccountInternal)StorageAccount).AccountName = value ?? null; }

        /// <summary>Creates an new <see cref="NginxLogging" /> instance.</summary>
        public NginxLogging()
        {

        }
    }
    public partial interface INginxLogging :
        Microsoft.Azure.PowerShell.Cmdlets.Nginx.Runtime.IJsonSerializable
    {
        [Microsoft.Azure.PowerShell.Cmdlets.Nginx.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"",
        SerializedName = @"containerName",
        PossibleTypes = new [] { typeof(string) })]
        string StorageAccountContainerName { get; set; }

        [Microsoft.Azure.PowerShell.Cmdlets.Nginx.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"",
        SerializedName = @"accountName",
        PossibleTypes = new [] { typeof(string) })]
        string StorageAccountName { get; set; }

    }
    internal partial interface INginxLoggingInternal

    {
        Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20220801.INginxStorageAccount StorageAccount { get; set; }

        string StorageAccountContainerName { get; set; }

        string StorageAccountName { get; set; }

    }
}