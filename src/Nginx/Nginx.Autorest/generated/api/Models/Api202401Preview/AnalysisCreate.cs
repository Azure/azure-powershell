// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api202401Preview
{
    using static Microsoft.Azure.PowerShell.Cmdlets.Nginx.Runtime.Extensions;

    /// <summary>The request body for creating an analysis for an NGINX configuration.</summary>
    public partial class AnalysisCreate :
        Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api202401Preview.IAnalysisCreate,
        Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api202401Preview.IAnalysisCreateInternal
    {

        /// <summary>Backing field for <see cref="Config" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api202401Preview.IAnalysisCreateConfig _config;

        [Microsoft.Azure.PowerShell.Cmdlets.Nginx.Origin(Microsoft.Azure.PowerShell.Cmdlets.Nginx.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api202401Preview.IAnalysisCreateConfig Config { get => (this._config = this._config ?? new Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api202401Preview.AnalysisCreateConfig()); set => this._config = value; }

        [Microsoft.Azure.PowerShell.Cmdlets.Nginx.Origin(Microsoft.Azure.PowerShell.Cmdlets.Nginx.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api202401Preview.INginxConfigurationFile[] ConfigFile { get => ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api202401Preview.IAnalysisCreateConfigInternal)Config).File; set => ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api202401Preview.IAnalysisCreateConfigInternal)Config).File = value ?? null /* arrayOf */; }

        [Microsoft.Azure.PowerShell.Cmdlets.Nginx.Origin(Microsoft.Azure.PowerShell.Cmdlets.Nginx.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api202401Preview.INginxConfigurationFile[] ConfigProtectedFile { get => ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api202401Preview.IAnalysisCreateConfigInternal)Config).ProtectedFile; set => ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api202401Preview.IAnalysisCreateConfigInternal)Config).ProtectedFile = value ?? null /* arrayOf */; }

        /// <summary>
        /// The root file of the NGINX config file(s). It must match one of the files' filepath.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Nginx.Origin(Microsoft.Azure.PowerShell.Cmdlets.Nginx.PropertyOrigin.Inlined)]
        public string ConfigRootFile { get => ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api202401Preview.IAnalysisCreateConfigInternal)Config).RootFile; set => ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api202401Preview.IAnalysisCreateConfigInternal)Config).RootFile = value ?? null; }

        /// <summary>Internal Acessors for Config</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api202401Preview.IAnalysisCreateConfig Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api202401Preview.IAnalysisCreateInternal.Config { get => (this._config = this._config ?? new Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api202401Preview.AnalysisCreateConfig()); set { {_config = value;} } }

        /// <summary>Internal Acessors for ConfigPackage</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api202401Preview.INginxConfigurationPackage Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api202401Preview.IAnalysisCreateInternal.ConfigPackage { get => ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api202401Preview.IAnalysisCreateConfigInternal)Config).Package; set => ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api202401Preview.IAnalysisCreateConfigInternal)Config).Package = value; }

        [Microsoft.Azure.PowerShell.Cmdlets.Nginx.Origin(Microsoft.Azure.PowerShell.Cmdlets.Nginx.PropertyOrigin.Inlined)]
        public string PackageData { get => ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api202401Preview.IAnalysisCreateConfigInternal)Config).PackageData; set => ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api202401Preview.IAnalysisCreateConfigInternal)Config).PackageData = value ?? null; }

        [Microsoft.Azure.PowerShell.Cmdlets.Nginx.Origin(Microsoft.Azure.PowerShell.Cmdlets.Nginx.PropertyOrigin.Inlined)]
        public string[] PackageProtectedFile { get => ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api202401Preview.IAnalysisCreateConfigInternal)Config).PackageProtectedFile; set => ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api202401Preview.IAnalysisCreateConfigInternal)Config).PackageProtectedFile = value ?? null /* arrayOf */; }

        /// <summary>Creates an new <see cref="AnalysisCreate" /> instance.</summary>
        public AnalysisCreate()
        {

        }
    }
    /// The request body for creating an analysis for an NGINX configuration.
    public partial interface IAnalysisCreate :
        Microsoft.Azure.PowerShell.Cmdlets.Nginx.Runtime.IJsonSerializable
    {
        [Microsoft.Azure.PowerShell.Cmdlets.Nginx.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"",
        SerializedName = @"files",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api202401Preview.INginxConfigurationFile) })]
        Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api202401Preview.INginxConfigurationFile[] ConfigFile { get; set; }

        [Microsoft.Azure.PowerShell.Cmdlets.Nginx.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"",
        SerializedName = @"protectedFiles",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api202401Preview.INginxConfigurationFile) })]
        Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api202401Preview.INginxConfigurationFile[] ConfigProtectedFile { get; set; }
        /// <summary>
        /// The root file of the NGINX config file(s). It must match one of the files' filepath.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Nginx.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The root file of the NGINX config file(s). It must match one of the files' filepath.",
        SerializedName = @"rootFile",
        PossibleTypes = new [] { typeof(string) })]
        string ConfigRootFile { get; set; }

        [Microsoft.Azure.PowerShell.Cmdlets.Nginx.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"",
        SerializedName = @"data",
        PossibleTypes = new [] { typeof(string) })]
        string PackageData { get; set; }

        [Microsoft.Azure.PowerShell.Cmdlets.Nginx.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"",
        SerializedName = @"protectedFiles",
        PossibleTypes = new [] { typeof(string) })]
        string[] PackageProtectedFile { get; set; }

    }
    /// The request body for creating an analysis for an NGINX configuration.
    internal partial interface IAnalysisCreateInternal

    {
        Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api202401Preview.IAnalysisCreateConfig Config { get; set; }

        Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api202401Preview.INginxConfigurationFile[] ConfigFile { get; set; }

        Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api202401Preview.INginxConfigurationPackage ConfigPackage { get; set; }

        Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api202401Preview.INginxConfigurationFile[] ConfigProtectedFile { get; set; }
        /// <summary>
        /// The root file of the NGINX config file(s). It must match one of the files' filepath.
        /// </summary>
        string ConfigRootFile { get; set; }

        string PackageData { get; set; }

        string[] PackageProtectedFile { get; set; }

    }
}