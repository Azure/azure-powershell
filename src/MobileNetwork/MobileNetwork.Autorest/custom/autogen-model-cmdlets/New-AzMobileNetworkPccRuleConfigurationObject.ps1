
# ----------------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# http://www.apache.org/licenses/LICENSE-2.0
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# Code generated by Microsoft (R) AutoRest Code Generator.Changes may cause incorrect behavior and will be lost if the code
# is regenerated.
# ----------------------------------------------------------------------------------

<#
.Synopsis
Create an in-memory object for PccRuleConfiguration.
.Description
Create an in-memory object for PccRuleConfiguration.

.Outputs
Microsoft.Azure.PowerShell.Cmdlets.MobileNetwork.Models.PccRuleConfiguration
.Link
https://learn.microsoft.com/powershell/module/Az.MobileNetwork/new-azmobilenetworkpccruleconfigurationobject
#>
function New-AzMobileNetworkPccRuleConfigurationObject {
    [Microsoft.Azure.PowerShell.Cmdlets.MobileNetwork.ModelCmdletAttribute()]
    [OutputType('Microsoft.Azure.PowerShell.Cmdlets.MobileNetwork.Models.PccRuleConfiguration')]
    [CmdletBinding(PositionalBinding=$false)]
    Param(

        [Parameter(HelpMessage="Downlink bit rate.")]
        [string]
        $GuaranteedBitRateDownlink,
        [Parameter(HelpMessage="Uplink bit rate.")]
        [string]
        $GuaranteedBitRateUplink,
        [Parameter(Mandatory, HelpMessage="The name of the rule. This must be unique within the parent service. You must not use any of the following reserved strings - 'default', 'requested' or 'service'.")]
        [string]
        $RuleName,
        [Parameter(Mandatory, HelpMessage="A precedence value that is used to decide between data flow policy rules when identifying the QoS values to use for a particular SIM. A lower value means a higher priority. This value should be unique among all data flow policy rules configured in the mobile network.")]
        [int]
        $RulePrecedence,
        [Parameter(HelpMessage="QoS Flow allocation and retention priority (ARP) level. Flows with higher priority preempt flows with lower priority, if the settings of `preemptionCapability` and `preemptionVulnerability` allow it. 1 is the highest level of priority. If this field is not specified then `5qi` is used to derive the ARP value. See 3GPP TS23.501 section 5.7.2.2 for a full description of the ARP parameters.")]
        [int]
        $RuleQoPolicyAllocationAndRetentionPriorityLevel,
        [Parameter(HelpMessage="5G QoS Flow Indicator value. The 5QI identifies a specific QoS forwarding treatment to be provided to a flow. See 3GPP TS23.501 section 5.7.2.1 for a full description of the 5QI parameter, and table 5.7.4-1 for the definition the 5QI values.")]
        [int]
        $RuleQoPolicyFiveQi,
        [Parameter(HelpMessage="Downlink bit rate.")]
        [string]
        $RuleQoPolicyMaximumBitRateDownlink,
        [Parameter(HelpMessage="Uplink bit rate.")]
        [string]
        $RuleQoPolicyMaximumBitRateUplink,
        [Parameter(HelpMessage="QoS Flow preemption capability. The preemption capability of a QoS Flow controls whether it can preempt another QoS Flow with a lower priority level. See 3GPP TS23.501 section 5.7.2.2 for a full description of the ARP parameters.")]
        [Microsoft.Azure.PowerShell.Cmdlets.MobileNetwork.PSArgumentCompleterAttribute("NotPreempt", "MayPreempt")]
        [string]
        $RuleQoPolicyPreemptionCapability,
        [Parameter(HelpMessage="QoS Flow preemption vulnerability. The preemption vulnerability of a QoS Flow controls whether it can be preempted by a QoS Flow with a higher priority level. See 3GPP TS23.501 section 5.7.2.2 for a full description of the ARP parameters.")]
        [Microsoft.Azure.PowerShell.Cmdlets.MobileNetwork.PSArgumentCompleterAttribute("NotPreemptable", "Preemptable")]
        [string]
        $RuleQoPolicyPreemptionVulnerability,
        [Parameter(Mandatory, HelpMessage="The set of data flow templates to use for this data flow policy rule.")]
        [Microsoft.Azure.PowerShell.Cmdlets.MobileNetwork.Models.IServiceDataFlowTemplate[]]
        $ServiceDataFlowTemplate,
        [Parameter(HelpMessage="Determines whether flows that match this data flow policy rule are permitted.")]
        [Microsoft.Azure.PowerShell.Cmdlets.MobileNetwork.PSArgumentCompleterAttribute("Enabled", "Blocked")]
        [string]
        $TrafficControl
    )

    process {
        $Object = [Microsoft.Azure.PowerShell.Cmdlets.MobileNetwork.Models.PccRuleConfiguration]::New()

        if ($PSBoundParameters.ContainsKey('GuaranteedBitRateDownlink')) {
            $Object.GuaranteedBitRateDownlink = $GuaranteedBitRateDownlink
        }
        if ($PSBoundParameters.ContainsKey('GuaranteedBitRateUplink')) {
            $Object.GuaranteedBitRateUplink = $GuaranteedBitRateUplink
        }
        if ($PSBoundParameters.ContainsKey('RuleName')) {
            $Object.RuleName = $RuleName
        }
        if ($PSBoundParameters.ContainsKey('RulePrecedence')) {
            $Object.RulePrecedence = $RulePrecedence
        }
        if ($PSBoundParameters.ContainsKey('RuleQoPolicyAllocationAndRetentionPriorityLevel')) {
            $Object.RuleQoPolicyAllocationAndRetentionPriorityLevel = $RuleQoPolicyAllocationAndRetentionPriorityLevel
        }
        if ($PSBoundParameters.ContainsKey('RuleQoPolicyFiveQi')) {
            $Object.RuleQoPolicyFiveQi = $RuleQoPolicyFiveQi
        }
        if ($PSBoundParameters.ContainsKey('RuleQoPolicyMaximumBitRateDownlink')) {
            $Object.RuleQoPolicyMaximumBitRateDownlink = $RuleQoPolicyMaximumBitRateDownlink
        }
        if ($PSBoundParameters.ContainsKey('RuleQoPolicyMaximumBitRateUplink')) {
            $Object.RuleQoPolicyMaximumBitRateUplink = $RuleQoPolicyMaximumBitRateUplink
        }
        if ($PSBoundParameters.ContainsKey('RuleQoPolicyPreemptionCapability')) {
            $Object.RuleQoPolicyPreemptionCapability = $RuleQoPolicyPreemptionCapability
        }
        if ($PSBoundParameters.ContainsKey('RuleQoPolicyPreemptionVulnerability')) {
            $Object.RuleQoPolicyPreemptionVulnerability = $RuleQoPolicyPreemptionVulnerability
        }
        if ($PSBoundParameters.ContainsKey('ServiceDataFlowTemplate')) {
            $Object.ServiceDataFlowTemplate = $ServiceDataFlowTemplate
        }
        if ($PSBoundParameters.ContainsKey('TrafficControl')) {
            $Object.TrafficControl = $TrafficControl
        }
        return $Object
    }
}

