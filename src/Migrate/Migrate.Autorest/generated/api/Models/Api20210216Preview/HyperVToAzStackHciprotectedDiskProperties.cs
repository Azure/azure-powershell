// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Migrate.Models.Api20210216Preview
{
    using static Microsoft.Azure.PowerShell.Cmdlets.Migrate.Runtime.Extensions;

    /// <summary>HyperVToAzStackHCI protected disk properties.</summary>
    public partial class HyperVToAzStackHciprotectedDiskProperties :
        Microsoft.Azure.PowerShell.Cmdlets.Migrate.Models.Api20210216Preview.IHyperVToAzStackHciprotectedDiskProperties,
        Microsoft.Azure.PowerShell.Cmdlets.Migrate.Models.Api20210216Preview.IHyperVToAzStackHciprotectedDiskPropertiesInternal
    {

        /// <summary>Backing field for <see cref="CapacityInByte" /> property.</summary>
        private long? _capacityInByte;

        /// <summary>Gets or sets the disk capacity in bytes.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Migrate.Origin(Microsoft.Azure.PowerShell.Cmdlets.Migrate.PropertyOrigin.Owned)]
        public long? CapacityInByte { get => this._capacityInByte; }

        /// <summary>Backing field for <see cref="DiskType" /> property.</summary>
        private string _diskType;

        /// <summary>Gets or sets the disk type.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Migrate.Origin(Microsoft.Azure.PowerShell.Cmdlets.Migrate.PropertyOrigin.Owned)]
        public string DiskType { get => this._diskType; }

        /// <summary>Backing field for <see cref="IsDynamic" /> property.</summary>
        private bool? _isDynamic;

        /// <summary>
        /// Gets or sets a value indicating whether dynamic sizing is enabled on the virtual hard
        /// disk.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Migrate.Origin(Microsoft.Azure.PowerShell.Cmdlets.Migrate.PropertyOrigin.Owned)]
        public bool? IsDynamic { get => this._isDynamic; }

        /// <summary>Backing field for <see cref="IsOSDisk" /> property.</summary>
        private bool? _isOSDisk;

        /// <summary>Gets or sets a value indicating whether the disk is the OS disk.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Migrate.Origin(Microsoft.Azure.PowerShell.Cmdlets.Migrate.PropertyOrigin.Owned)]
        public bool? IsOSDisk { get => this._isOSDisk; }

        /// <summary>Internal Acessors for CapacityInByte</summary>
        long? Microsoft.Azure.PowerShell.Cmdlets.Migrate.Models.Api20210216Preview.IHyperVToAzStackHciprotectedDiskPropertiesInternal.CapacityInByte { get => this._capacityInByte; set { {_capacityInByte = value;} } }

        /// <summary>Internal Acessors for DiskType</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Migrate.Models.Api20210216Preview.IHyperVToAzStackHciprotectedDiskPropertiesInternal.DiskType { get => this._diskType; set { {_diskType = value;} } }

        /// <summary>Internal Acessors for IsDynamic</summary>
        bool? Microsoft.Azure.PowerShell.Cmdlets.Migrate.Models.Api20210216Preview.IHyperVToAzStackHciprotectedDiskPropertiesInternal.IsDynamic { get => this._isDynamic; set { {_isDynamic = value;} } }

        /// <summary>Internal Acessors for IsOSDisk</summary>
        bool? Microsoft.Azure.PowerShell.Cmdlets.Migrate.Models.Api20210216Preview.IHyperVToAzStackHciprotectedDiskPropertiesInternal.IsOSDisk { get => this._isOSDisk; set { {_isOSDisk = value;} } }

        /// <summary>Internal Acessors for MigrateDiskName</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Migrate.Models.Api20210216Preview.IHyperVToAzStackHciprotectedDiskPropertiesInternal.MigrateDiskName { get => this._migrateDiskName; set { {_migrateDiskName = value;} } }

        /// <summary>Internal Acessors for SeedDiskName</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Migrate.Models.Api20210216Preview.IHyperVToAzStackHciprotectedDiskPropertiesInternal.SeedDiskName { get => this._seedDiskName; set { {_seedDiskName = value;} } }

        /// <summary>Internal Acessors for SourceDiskId</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Migrate.Models.Api20210216Preview.IHyperVToAzStackHciprotectedDiskPropertiesInternal.SourceDiskId { get => this._sourceDiskId; set { {_sourceDiskId = value;} } }

        /// <summary>Internal Acessors for SourceDiskName</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Migrate.Models.Api20210216Preview.IHyperVToAzStackHciprotectedDiskPropertiesInternal.SourceDiskName { get => this._sourceDiskName; set { {_sourceDiskName = value;} } }

        /// <summary>Internal Acessors for StorageContainerId</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Migrate.Models.Api20210216Preview.IHyperVToAzStackHciprotectedDiskPropertiesInternal.StorageContainerId { get => this._storageContainerId; set { {_storageContainerId = value;} } }

        /// <summary>Internal Acessors for StorageContainerLocalPath</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Migrate.Models.Api20210216Preview.IHyperVToAzStackHciprotectedDiskPropertiesInternal.StorageContainerLocalPath { get => this._storageContainerLocalPath; set { {_storageContainerLocalPath = value;} } }

        /// <summary>Internal Acessors for TestMigrateDiskName</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Migrate.Models.Api20210216Preview.IHyperVToAzStackHciprotectedDiskPropertiesInternal.TestMigrateDiskName { get => this._testMigrateDiskName; set { {_testMigrateDiskName = value;} } }

        /// <summary>Backing field for <see cref="MigrateDiskName" /> property.</summary>
        private string _migrateDiskName;

        /// <summary>Gets or sets the failover clone disk.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Migrate.Origin(Microsoft.Azure.PowerShell.Cmdlets.Migrate.PropertyOrigin.Owned)]
        public string MigrateDiskName { get => this._migrateDiskName; }

        /// <summary>Backing field for <see cref="SeedDiskName" /> property.</summary>
        private string _seedDiskName;

        /// <summary>Gets or sets the seed disk name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Migrate.Origin(Microsoft.Azure.PowerShell.Cmdlets.Migrate.PropertyOrigin.Owned)]
        public string SeedDiskName { get => this._seedDiskName; }

        /// <summary>Backing field for <see cref="SourceDiskId" /> property.</summary>
        private string _sourceDiskId;

        /// <summary>Gets or sets the source disk Id.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Migrate.Origin(Microsoft.Azure.PowerShell.Cmdlets.Migrate.PropertyOrigin.Owned)]
        public string SourceDiskId { get => this._sourceDiskId; }

        /// <summary>Backing field for <see cref="SourceDiskName" /> property.</summary>
        private string _sourceDiskName;

        /// <summary>Gets or sets the source disk Name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Migrate.Origin(Microsoft.Azure.PowerShell.Cmdlets.Migrate.PropertyOrigin.Owned)]
        public string SourceDiskName { get => this._sourceDiskName; }

        /// <summary>Backing field for <see cref="StorageContainerId" /> property.</summary>
        private string _storageContainerId;

        /// <summary>Gets or sets the ARM Id of the storage container.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Migrate.Origin(Microsoft.Azure.PowerShell.Cmdlets.Migrate.PropertyOrigin.Owned)]
        public string StorageContainerId { get => this._storageContainerId; }

        /// <summary>Backing field for <see cref="StorageContainerLocalPath" /> property.</summary>
        private string _storageContainerLocalPath;

        /// <summary>Gets or sets the local path of the storage container.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Migrate.Origin(Microsoft.Azure.PowerShell.Cmdlets.Migrate.PropertyOrigin.Owned)]
        public string StorageContainerLocalPath { get => this._storageContainerLocalPath; }

        /// <summary>Backing field for <see cref="TestMigrateDiskName" /> property.</summary>
        private string _testMigrateDiskName;

        /// <summary>Gets or sets the test failover clone disk.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Migrate.Origin(Microsoft.Azure.PowerShell.Cmdlets.Migrate.PropertyOrigin.Owned)]
        public string TestMigrateDiskName { get => this._testMigrateDiskName; }

        /// <summary>
        /// Creates an new <see cref="HyperVToAzStackHciprotectedDiskProperties" /> instance.
        /// </summary>
        public HyperVToAzStackHciprotectedDiskProperties()
        {

        }
    }
    /// HyperVToAzStackHCI protected disk properties.
    public partial interface IHyperVToAzStackHciprotectedDiskProperties :
        Microsoft.Azure.PowerShell.Cmdlets.Migrate.Runtime.IJsonSerializable
    {
        /// <summary>Gets or sets the disk capacity in bytes.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Migrate.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Gets or sets the disk capacity in bytes.",
        SerializedName = @"capacityInBytes",
        PossibleTypes = new [] { typeof(long) })]
        long? CapacityInByte { get;  }
        /// <summary>Gets or sets the disk type.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Migrate.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Gets or sets the disk type.",
        SerializedName = @"diskType",
        PossibleTypes = new [] { typeof(string) })]
        string DiskType { get;  }
        /// <summary>
        /// Gets or sets a value indicating whether dynamic sizing is enabled on the virtual hard
        /// disk.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Migrate.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Gets or sets a value indicating whether dynamic sizing is enabled on the virtual hard
        disk.",
        SerializedName = @"isDynamic",
        PossibleTypes = new [] { typeof(bool) })]
        bool? IsDynamic { get;  }
        /// <summary>Gets or sets a value indicating whether the disk is the OS disk.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Migrate.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Gets or sets a value indicating whether the disk is the OS disk.",
        SerializedName = @"isOsDisk",
        PossibleTypes = new [] { typeof(bool) })]
        bool? IsOSDisk { get;  }
        /// <summary>Gets or sets the failover clone disk.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Migrate.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Gets or sets the failover clone disk.",
        SerializedName = @"migrateDiskName",
        PossibleTypes = new [] { typeof(string) })]
        string MigrateDiskName { get;  }
        /// <summary>Gets or sets the seed disk name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Migrate.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Gets or sets the seed disk name.",
        SerializedName = @"seedDiskName",
        PossibleTypes = new [] { typeof(string) })]
        string SeedDiskName { get;  }
        /// <summary>Gets or sets the source disk Id.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Migrate.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Gets or sets the source disk Id.",
        SerializedName = @"sourceDiskId",
        PossibleTypes = new [] { typeof(string) })]
        string SourceDiskId { get;  }
        /// <summary>Gets or sets the source disk Name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Migrate.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Gets or sets the source disk Name.",
        SerializedName = @"sourceDiskName",
        PossibleTypes = new [] { typeof(string) })]
        string SourceDiskName { get;  }
        /// <summary>Gets or sets the ARM Id of the storage container.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Migrate.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Gets or sets the ARM Id of the storage container.",
        SerializedName = @"storageContainerId",
        PossibleTypes = new [] { typeof(string) })]
        string StorageContainerId { get;  }
        /// <summary>Gets or sets the local path of the storage container.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Migrate.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Gets or sets the local path of the storage container.",
        SerializedName = @"storageContainerLocalPath",
        PossibleTypes = new [] { typeof(string) })]
        string StorageContainerLocalPath { get;  }
        /// <summary>Gets or sets the test failover clone disk.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Migrate.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Gets or sets the test failover clone disk.",
        SerializedName = @"testMigrateDiskName",
        PossibleTypes = new [] { typeof(string) })]
        string TestMigrateDiskName { get;  }

    }
    /// HyperVToAzStackHCI protected disk properties.
    internal partial interface IHyperVToAzStackHciprotectedDiskPropertiesInternal

    {
        /// <summary>Gets or sets the disk capacity in bytes.</summary>
        long? CapacityInByte { get; set; }
        /// <summary>Gets or sets the disk type.</summary>
        string DiskType { get; set; }
        /// <summary>
        /// Gets or sets a value indicating whether dynamic sizing is enabled on the virtual hard
        /// disk.
        /// </summary>
        bool? IsDynamic { get; set; }
        /// <summary>Gets or sets a value indicating whether the disk is the OS disk.</summary>
        bool? IsOSDisk { get; set; }
        /// <summary>Gets or sets the failover clone disk.</summary>
        string MigrateDiskName { get; set; }
        /// <summary>Gets or sets the seed disk name.</summary>
        string SeedDiskName { get; set; }
        /// <summary>Gets or sets the source disk Id.</summary>
        string SourceDiskId { get; set; }
        /// <summary>Gets or sets the source disk Name.</summary>
        string SourceDiskName { get; set; }
        /// <summary>Gets or sets the ARM Id of the storage container.</summary>
        string StorageContainerId { get; set; }
        /// <summary>Gets or sets the local path of the storage container.</summary>
        string StorageContainerLocalPath { get; set; }
        /// <summary>Gets or sets the test failover clone disk.</summary>
        string TestMigrateDiskName { get; set; }

    }
}