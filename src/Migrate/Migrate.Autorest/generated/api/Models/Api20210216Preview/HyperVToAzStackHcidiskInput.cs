// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Migrate.Models.Api20210216Preview
{
    using static Microsoft.Azure.PowerShell.Cmdlets.Migrate.Runtime.Extensions;

    /// <summary>HyperVToAzStack disk input.</summary>
    public partial class HyperVToAzStackHcidiskInput :
        Microsoft.Azure.PowerShell.Cmdlets.Migrate.Models.Api20210216Preview.IHyperVToAzStackHcidiskInput,
        Microsoft.Azure.PowerShell.Cmdlets.Migrate.Models.Api20210216Preview.IHyperVToAzStackHcidiskInputInternal
    {

        /// <summary>Backing field for <see cref="DiskFileFormat" /> property.</summary>
        private string _diskFileFormat;

        /// <summary>Gets or sets the type of the virtual hard disk, vhd or vhdx.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Migrate.Origin(Microsoft.Azure.PowerShell.Cmdlets.Migrate.PropertyOrigin.Owned)]
        public string DiskFileFormat { get => this._diskFileFormat; set => this._diskFileFormat = value; }

        /// <summary>Backing field for <see cref="DiskId" /> property.</summary>
        private string _diskId;

        /// <summary>Gets or sets the disk Id.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Migrate.Origin(Microsoft.Azure.PowerShell.Cmdlets.Migrate.PropertyOrigin.Owned)]
        public string DiskId { get => this._diskId; set => this._diskId = value; }

        /// <summary>Backing field for <see cref="DiskSizeGb" /> property.</summary>
        private long _diskSizeGb;

        /// <summary>Gets or sets the disk size in GB.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Migrate.Origin(Microsoft.Azure.PowerShell.Cmdlets.Migrate.PropertyOrigin.Owned)]
        public long DiskSizeGb { get => this._diskSizeGb; set => this._diskSizeGb = value; }

        /// <summary>Backing field for <see cref="IsDynamic" /> property.</summary>
        private bool? _isDynamic;

        /// <summary>
        /// Gets or sets a value indicating whether dynamic sizing is enabled on the virtual hard
        /// disk.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Migrate.Origin(Microsoft.Azure.PowerShell.Cmdlets.Migrate.PropertyOrigin.Owned)]
        public bool? IsDynamic { get => this._isDynamic; set => this._isDynamic = value; }

        /// <summary>Backing field for <see cref="IsOSDisk" /> property.</summary>
        private bool _isOSDisk;

        /// <summary>Gets or sets a value indicating whether disk is os disk.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Migrate.Origin(Microsoft.Azure.PowerShell.Cmdlets.Migrate.PropertyOrigin.Owned)]
        public bool IsOSDisk { get => this._isOSDisk; set => this._isOSDisk = value; }

        /// <summary>Backing field for <see cref="StorageContainerId" /> property.</summary>
        private string _storageContainerId;

        /// <summary>Gets or sets the target storage account ARM Id.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Migrate.Origin(Microsoft.Azure.PowerShell.Cmdlets.Migrate.PropertyOrigin.Owned)]
        public string StorageContainerId { get => this._storageContainerId; set => this._storageContainerId = value; }

        /// <summary>Creates an new <see cref="HyperVToAzStackHcidiskInput" /> instance.</summary>
        public HyperVToAzStackHcidiskInput()
        {

        }
    }
    /// HyperVToAzStack disk input.
    public partial interface IHyperVToAzStackHcidiskInput :
        Microsoft.Azure.PowerShell.Cmdlets.Migrate.Runtime.IJsonSerializable
    {
        /// <summary>Gets or sets the type of the virtual hard disk, vhd or vhdx.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Migrate.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"Gets or sets the type of the virtual hard disk, vhd or vhdx.",
        SerializedName = @"diskFileFormat",
        PossibleTypes = new [] { typeof(string) })]
        string DiskFileFormat { get; set; }
        /// <summary>Gets or sets the disk Id.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Migrate.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"Gets or sets the disk Id.",
        SerializedName = @"diskId",
        PossibleTypes = new [] { typeof(string) })]
        string DiskId { get; set; }
        /// <summary>Gets or sets the disk size in GB.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Migrate.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"Gets or sets the disk size in GB.",
        SerializedName = @"diskSizeGB",
        PossibleTypes = new [] { typeof(long) })]
        long DiskSizeGb { get; set; }
        /// <summary>
        /// Gets or sets a value indicating whether dynamic sizing is enabled on the virtual hard
        /// disk.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Migrate.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Gets or sets a value indicating whether dynamic sizing is enabled on the virtual hard
        disk.",
        SerializedName = @"isDynamic",
        PossibleTypes = new [] { typeof(bool) })]
        bool? IsDynamic { get; set; }
        /// <summary>Gets or sets a value indicating whether disk is os disk.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Migrate.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"Gets or sets a value indicating whether disk is os disk.",
        SerializedName = @"isOsDisk",
        PossibleTypes = new [] { typeof(bool) })]
        bool IsOSDisk { get; set; }
        /// <summary>Gets or sets the target storage account ARM Id.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Migrate.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Gets or sets the target storage account ARM Id.",
        SerializedName = @"storageContainerId",
        PossibleTypes = new [] { typeof(string) })]
        string StorageContainerId { get; set; }

    }
    /// HyperVToAzStack disk input.
    internal partial interface IHyperVToAzStackHcidiskInputInternal

    {
        /// <summary>Gets or sets the type of the virtual hard disk, vhd or vhdx.</summary>
        string DiskFileFormat { get; set; }
        /// <summary>Gets or sets the disk Id.</summary>
        string DiskId { get; set; }
        /// <summary>Gets or sets the disk size in GB.</summary>
        long DiskSizeGb { get; set; }
        /// <summary>
        /// Gets or sets a value indicating whether dynamic sizing is enabled on the virtual hard
        /// disk.
        /// </summary>
        bool? IsDynamic { get; set; }
        /// <summary>Gets or sets a value indicating whether disk is os disk.</summary>
        bool IsOSDisk { get; set; }
        /// <summary>Gets or sets the target storage account ARM Id.</summary>
        string StorageContainerId { get; set; }

    }
}