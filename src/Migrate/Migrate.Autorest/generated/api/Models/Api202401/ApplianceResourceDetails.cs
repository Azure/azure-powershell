// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Migrate.Models.Api202401
{
    using static Microsoft.Azure.PowerShell.Cmdlets.Migrate.Runtime.Extensions;

    /// <summary>Details of the appliance resource.</summary>
    public partial class ApplianceResourceDetails :
        Microsoft.Azure.PowerShell.Cmdlets.Migrate.Models.Api202401.IApplianceResourceDetails,
        Microsoft.Azure.PowerShell.Cmdlets.Migrate.Models.Api202401.IApplianceResourceDetailsInternal
    {

        /// <summary>Backing field for <see cref="Capacity" /> property.</summary>
        private long? _capacity;

        /// <summary>A value indicating the total capacity of appliance resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Migrate.Origin(Microsoft.Azure.PowerShell.Cmdlets.Migrate.PropertyOrigin.Owned)]
        public long? Capacity { get => this._capacity; }

        /// <summary>Internal Acessors for Capacity</summary>
        long? Microsoft.Azure.PowerShell.Cmdlets.Migrate.Models.Api202401.IApplianceResourceDetailsInternal.Capacity { get => this._capacity; set { {_capacity = value;} } }

        /// <summary>Internal Acessors for ProcessUtilization</summary>
        double? Microsoft.Azure.PowerShell.Cmdlets.Migrate.Models.Api202401.IApplianceResourceDetailsInternal.ProcessUtilization { get => this._processUtilization; set { {_processUtilization = value;} } }

        /// <summary>Internal Acessors for Status</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Migrate.Models.Api202401.IApplianceResourceDetailsInternal.Status { get => this._status; set { {_status = value;} } }

        /// <summary>Internal Acessors for TotalUtilization</summary>
        double? Microsoft.Azure.PowerShell.Cmdlets.Migrate.Models.Api202401.IApplianceResourceDetailsInternal.TotalUtilization { get => this._totalUtilization; set { {_totalUtilization = value;} } }

        /// <summary>Backing field for <see cref="ProcessUtilization" /> property.</summary>
        private double? _processUtilization;

        /// <summary>A value indicating the utilization percentage by gateway agent on appliance.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Migrate.Origin(Microsoft.Azure.PowerShell.Cmdlets.Migrate.PropertyOrigin.Owned)]
        public double? ProcessUtilization { get => this._processUtilization; }

        /// <summary>Backing field for <see cref="Status" /> property.</summary>
        private string _status;

        /// <summary>A value indicating the status of appliance resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Migrate.Origin(Microsoft.Azure.PowerShell.Cmdlets.Migrate.PropertyOrigin.Owned)]
        public string Status { get => this._status; }

        /// <summary>Backing field for <see cref="TotalUtilization" /> property.</summary>
        private double? _totalUtilization;

        /// <summary>
        /// A value indicating the total utilization percentage for all processes on the appliance.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Migrate.Origin(Microsoft.Azure.PowerShell.Cmdlets.Migrate.PropertyOrigin.Owned)]
        public double? TotalUtilization { get => this._totalUtilization; }

        /// <summary>Creates an new <see cref="ApplianceResourceDetails" /> instance.</summary>
        public ApplianceResourceDetails()
        {

        }
    }
    /// Details of the appliance resource.
    public partial interface IApplianceResourceDetails :
        Microsoft.Azure.PowerShell.Cmdlets.Migrate.Runtime.IJsonSerializable
    {
        /// <summary>A value indicating the total capacity of appliance resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Migrate.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"A value indicating the total capacity of appliance resource.",
        SerializedName = @"capacity",
        PossibleTypes = new [] { typeof(long) })]
        long? Capacity { get;  }
        /// <summary>A value indicating the utilization percentage by gateway agent on appliance.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Migrate.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"A value indicating the utilization percentage by gateway agent on appliance.",
        SerializedName = @"processUtilization",
        PossibleTypes = new [] { typeof(double) })]
        double? ProcessUtilization { get;  }
        /// <summary>A value indicating the status of appliance resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Migrate.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"A value indicating the status of appliance resource.",
        SerializedName = @"status",
        PossibleTypes = new [] { typeof(string) })]
        string Status { get;  }
        /// <summary>
        /// A value indicating the total utilization percentage for all processes on the appliance.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Migrate.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"A value indicating the total utilization percentage for all processes on the appliance.",
        SerializedName = @"totalUtilization",
        PossibleTypes = new [] { typeof(double) })]
        double? TotalUtilization { get;  }

    }
    /// Details of the appliance resource.
    internal partial interface IApplianceResourceDetailsInternal

    {
        /// <summary>A value indicating the total capacity of appliance resource.</summary>
        long? Capacity { get; set; }
        /// <summary>A value indicating the utilization percentage by gateway agent on appliance.</summary>
        double? ProcessUtilization { get; set; }
        /// <summary>A value indicating the status of appliance resource.</summary>
        string Status { get; set; }
        /// <summary>
        /// A value indicating the total utilization percentage for all processes on the appliance.
        /// </summary>
        double? TotalUtilization { get; set; }

    }
}