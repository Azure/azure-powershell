// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401
{
    using static Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.Extensions;

    /// <summary>Compute runtime config for feature store type workspace.</summary>
    public partial class ComputeRuntimeDto :
        Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IComputeRuntimeDto,
        Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IComputeRuntimeDtoInternal
    {

        /// <summary>Backing field for <see cref="SparkRuntimeVersion" /> property.</summary>
        private string _sparkRuntimeVersion;

        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Owned)]
        public string SparkRuntimeVersion { get => this._sparkRuntimeVersion; set => this._sparkRuntimeVersion = value; }

        /// <summary>Creates an new <see cref="ComputeRuntimeDto" /> instance.</summary>
        public ComputeRuntimeDto()
        {

        }
    }
    /// Compute runtime config for feature store type workspace.
    public partial interface IComputeRuntimeDto :
        Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.IJsonSerializable
    {
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"",
        SerializedName = @"sparkRuntimeVersion",
        PossibleTypes = new [] { typeof(string) })]
        string SparkRuntimeVersion { get; set; }

    }
    /// Compute runtime config for feature store type workspace.
    internal partial interface IComputeRuntimeDtoInternal

    {
        string SparkRuntimeVersion { get; set; }

    }
}