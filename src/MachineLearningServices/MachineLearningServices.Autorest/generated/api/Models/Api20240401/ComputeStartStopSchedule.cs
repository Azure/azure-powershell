// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401
{
    using static Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.Extensions;

    /// <summary>Compute start stop schedule properties</summary>
    public partial class ComputeStartStopSchedule :
        Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IComputeStartStopSchedule,
        Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IComputeStartStopScheduleInternal
    {

        /// <summary>Backing field for <see cref="Action" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Support.ComputePowerAction? _action;

        /// <summary>[Required] The compute power action.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Support.ComputePowerAction? Action { get => this._action; set => this._action = value; }

        /// <summary>Backing field for <see cref="Cron" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.ICron _cron;

        /// <summary>Required if triggerType is Cron.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.ICron Cron { get => (this._cron = this._cron ?? new Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.Cron()); set => this._cron = value; }

        /// <summary>
        /// [Required] Specifies cron expression of schedule.
        /// The expression should follow NCronTab format.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Inlined)]
        public string CronExpression { get => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.ICronInternal)Cron).Expression; set => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.ICronInternal)Cron).Expression = value ?? null; }

        /// <summary>The start time in yyyy-MM-ddTHH:mm:ss format.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Inlined)]
        public string CronStartTime { get => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.ICronInternal)Cron).StartTime; set => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.ICronInternal)Cron).StartTime = value ?? null; }

        /// <summary>
        /// Specifies time zone in which the schedule runs.
        /// TimeZone should follow Windows time zone format. Refer: https://docs.microsoft.com/en-us/windows-hardware/manufacture/desktop/default-time-zones?view=windows-11
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Inlined)]
        public string CronTimeZone { get => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.ICronInternal)Cron).TimeZone; set => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.ICronInternal)Cron).TimeZone = value ?? null; }

        /// <summary>Backing field for <see cref="Id" /> property.</summary>
        private string _id;

        /// <summary>A system assigned id for the schedule.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Owned)]
        public string Id { get => this._id; }

        /// <summary>Internal Acessors for Cron</summary>
        Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.ICron Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IComputeStartStopScheduleInternal.Cron { get => (this._cron = this._cron ?? new Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.Cron()); set { {_cron = value;} } }

        /// <summary>Internal Acessors for Id</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IComputeStartStopScheduleInternal.Id { get => this._id; set { {_id = value;} } }

        /// <summary>Internal Acessors for ProvisioningStatus</summary>
        Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Support.ProvisioningStatus? Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IComputeStartStopScheduleInternal.ProvisioningStatus { get => this._provisioningStatus; set { {_provisioningStatus = value;} } }

        /// <summary>Internal Acessors for Recurrence</summary>
        Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IRecurrence Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IComputeStartStopScheduleInternal.Recurrence { get => (this._recurrence = this._recurrence ?? new Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.Recurrence()); set { {_recurrence = value;} } }

        /// <summary>Internal Acessors for RecurrenceSchedule</summary>
        Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IComputeRecurrenceSchedule Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IComputeStartStopScheduleInternal.RecurrenceSchedule { get => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IRecurrenceInternal)Recurrence).Schedule; set => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IRecurrenceInternal)Recurrence).Schedule = value; }

        /// <summary>Internal Acessors for Schedule</summary>
        Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IScheduleBase Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IComputeStartStopScheduleInternal.Schedule { get => (this._schedule = this._schedule ?? new Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.ScheduleBase()); set { {_schedule = value;} } }

        /// <summary>Backing field for <see cref="ProvisioningStatus" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Support.ProvisioningStatus? _provisioningStatus;

        /// <summary>The current deployment state of schedule.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Support.ProvisioningStatus? ProvisioningStatus { get => this._provisioningStatus; }

        /// <summary>Backing field for <see cref="Recurrence" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IRecurrence _recurrence;

        /// <summary>Required if triggerType is Recurrence.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IRecurrence Recurrence { get => (this._recurrence = this._recurrence ?? new Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.Recurrence()); set => this._recurrence = value; }

        /// <summary>[Required] The frequency to trigger schedule.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Support.ComputeRecurrenceFrequency? RecurrenceFrequency { get => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IRecurrenceInternal)Recurrence).Frequency; set => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IRecurrenceInternal)Recurrence).Frequency = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Support.ComputeRecurrenceFrequency)""); }

        /// <summary>[Required] Specifies schedule interval in conjunction with frequency</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Inlined)]
        public int? RecurrenceInterval { get => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IRecurrenceInternal)Recurrence).Interval; set => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IRecurrenceInternal)Recurrence).Interval = value ?? default(int); }

        /// <summary>The start time in yyyy-MM-ddTHH:mm:ss format.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Inlined)]
        public string RecurrenceStartTime { get => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IRecurrenceInternal)Recurrence).StartTime; set => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IRecurrenceInternal)Recurrence).StartTime = value ?? null; }

        /// <summary>
        /// Specifies time zone in which the schedule runs.
        /// TimeZone should follow Windows time zone format. Refer: https://docs.microsoft.com/en-us/windows-hardware/manufacture/desktop/default-time-zones?view=windows-11
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Inlined)]
        public string RecurrenceTimeZone { get => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IRecurrenceInternal)Recurrence).TimeZone; set => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IRecurrenceInternal)Recurrence).TimeZone = value ?? null; }

        /// <summary>Backing field for <see cref="Schedule" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IScheduleBase _schedule;

        /// <summary>[Deprecated] Not used any more.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IScheduleBase Schedule { get => (this._schedule = this._schedule ?? new Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.ScheduleBase()); set => this._schedule = value; }

        /// <summary>[Required] List of hours for the schedule.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Inlined)]
        public int[] ScheduleHour { get => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IRecurrenceInternal)Recurrence).ScheduleHour; set => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IRecurrenceInternal)Recurrence).ScheduleHour = value ?? null /* arrayOf */; }

        /// <summary>A system assigned id for the schedule.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Inlined)]
        public string ScheduleId { get => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IScheduleBaseInternal)Schedule).Id; set => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IScheduleBaseInternal)Schedule).Id = value ?? null; }

        /// <summary>[Required] List of minutes for the schedule.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Inlined)]
        public int[] ScheduleMinute { get => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IRecurrenceInternal)Recurrence).ScheduleMinute; set => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IRecurrenceInternal)Recurrence).ScheduleMinute = value ?? null /* arrayOf */; }

        /// <summary>List of month days for the schedule</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Inlined)]
        public int[] ScheduleMonthDay { get => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IRecurrenceInternal)Recurrence).ScheduleMonthDay; set => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IRecurrenceInternal)Recurrence).ScheduleMonthDay = value ?? null /* arrayOf */; }

        /// <summary>The current deployment state of schedule.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Support.ScheduleProvisioningState? ScheduleProvisioningStatus { get => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IScheduleBaseInternal)Schedule).ProvisioningStatus; set => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IScheduleBaseInternal)Schedule).ProvisioningStatus = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Support.ScheduleProvisioningState)""); }

        /// <summary>Is the schedule enabled or disabled?</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Support.ScheduleStatus? ScheduleStatus { get => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IScheduleBaseInternal)Schedule).Status; set => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IScheduleBaseInternal)Schedule).Status = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Support.ScheduleStatus)""); }

        /// <summary>List of days for the schedule.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Support.ComputeWeekDay[] ScheduleWeekDay { get => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IRecurrenceInternal)Recurrence).ScheduleWeekDay; set => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IRecurrenceInternal)Recurrence).ScheduleWeekDay = value ?? null /* arrayOf */; }

        /// <summary>Backing field for <see cref="Status" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Support.ScheduleStatus? _status;

        /// <summary>Is the schedule enabled or disabled?</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Support.ScheduleStatus? Status { get => this._status; set => this._status = value; }

        /// <summary>Backing field for <see cref="TriggerType" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Support.ComputeTriggerType? _triggerType;

        /// <summary>[Required] The schedule trigger type.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Support.ComputeTriggerType? TriggerType { get => this._triggerType; set => this._triggerType = value; }

        /// <summary>Creates an new <see cref="ComputeStartStopSchedule" /> instance.</summary>
        public ComputeStartStopSchedule()
        {

        }
    }
    /// Compute start stop schedule properties
    public partial interface IComputeStartStopSchedule :
        Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.IJsonSerializable
    {
        /// <summary>[Required] The compute power action.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"[Required] The compute power action.",
        SerializedName = @"action",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Support.ComputePowerAction) })]
        Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Support.ComputePowerAction? Action { get; set; }
        /// <summary>
        /// [Required] Specifies cron expression of schedule.
        /// The expression should follow NCronTab format.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"[Required] Specifies cron expression of schedule.
        The expression should follow NCronTab format.",
        SerializedName = @"expression",
        PossibleTypes = new [] { typeof(string) })]
        string CronExpression { get; set; }
        /// <summary>The start time in yyyy-MM-ddTHH:mm:ss format.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The start time in yyyy-MM-ddTHH:mm:ss format.",
        SerializedName = @"startTime",
        PossibleTypes = new [] { typeof(string) })]
        string CronStartTime { get; set; }
        /// <summary>
        /// Specifies time zone in which the schedule runs.
        /// TimeZone should follow Windows time zone format. Refer: https://docs.microsoft.com/en-us/windows-hardware/manufacture/desktop/default-time-zones?view=windows-11
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Specifies time zone in which the schedule runs.
        TimeZone should follow Windows time zone format. Refer: https://docs.microsoft.com/en-us/windows-hardware/manufacture/desktop/default-time-zones?view=windows-11",
        SerializedName = @"timeZone",
        PossibleTypes = new [] { typeof(string) })]
        string CronTimeZone { get; set; }
        /// <summary>A system assigned id for the schedule.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"A system assigned id for the schedule.",
        SerializedName = @"id",
        PossibleTypes = new [] { typeof(string) })]
        string Id { get;  }
        /// <summary>The current deployment state of schedule.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The current deployment state of schedule.",
        SerializedName = @"provisioningStatus",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Support.ProvisioningStatus) })]
        Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Support.ProvisioningStatus? ProvisioningStatus { get;  }
        /// <summary>[Required] The frequency to trigger schedule.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"[Required] The frequency to trigger schedule.",
        SerializedName = @"frequency",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Support.ComputeRecurrenceFrequency) })]
        Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Support.ComputeRecurrenceFrequency? RecurrenceFrequency { get; set; }
        /// <summary>[Required] Specifies schedule interval in conjunction with frequency</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"[Required] Specifies schedule interval in conjunction with frequency",
        SerializedName = @"interval",
        PossibleTypes = new [] { typeof(int) })]
        int? RecurrenceInterval { get; set; }
        /// <summary>The start time in yyyy-MM-ddTHH:mm:ss format.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The start time in yyyy-MM-ddTHH:mm:ss format.",
        SerializedName = @"startTime",
        PossibleTypes = new [] { typeof(string) })]
        string RecurrenceStartTime { get; set; }
        /// <summary>
        /// Specifies time zone in which the schedule runs.
        /// TimeZone should follow Windows time zone format. Refer: https://docs.microsoft.com/en-us/windows-hardware/manufacture/desktop/default-time-zones?view=windows-11
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Specifies time zone in which the schedule runs.
        TimeZone should follow Windows time zone format. Refer: https://docs.microsoft.com/en-us/windows-hardware/manufacture/desktop/default-time-zones?view=windows-11",
        SerializedName = @"timeZone",
        PossibleTypes = new [] { typeof(string) })]
        string RecurrenceTimeZone { get; set; }
        /// <summary>[Required] List of hours for the schedule.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"[Required] List of hours for the schedule.",
        SerializedName = @"hours",
        PossibleTypes = new [] { typeof(int) })]
        int[] ScheduleHour { get; set; }
        /// <summary>A system assigned id for the schedule.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"A system assigned id for the schedule.",
        SerializedName = @"id",
        PossibleTypes = new [] { typeof(string) })]
        string ScheduleId { get; set; }
        /// <summary>[Required] List of minutes for the schedule.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"[Required] List of minutes for the schedule.",
        SerializedName = @"minutes",
        PossibleTypes = new [] { typeof(int) })]
        int[] ScheduleMinute { get; set; }
        /// <summary>List of month days for the schedule</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"List of month days for the schedule",
        SerializedName = @"monthDays",
        PossibleTypes = new [] { typeof(int) })]
        int[] ScheduleMonthDay { get; set; }
        /// <summary>The current deployment state of schedule.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The current deployment state of schedule.",
        SerializedName = @"provisioningStatus",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Support.ScheduleProvisioningState) })]
        Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Support.ScheduleProvisioningState? ScheduleProvisioningStatus { get; set; }
        /// <summary>Is the schedule enabled or disabled?</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Is the schedule enabled or disabled?",
        SerializedName = @"status",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Support.ScheduleStatus) })]
        Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Support.ScheduleStatus? ScheduleStatus { get; set; }
        /// <summary>List of days for the schedule.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"List of days for the schedule.",
        SerializedName = @"weekDays",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Support.ComputeWeekDay) })]
        Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Support.ComputeWeekDay[] ScheduleWeekDay { get; set; }
        /// <summary>Is the schedule enabled or disabled?</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Is the schedule enabled or disabled?",
        SerializedName = @"status",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Support.ScheduleStatus) })]
        Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Support.ScheduleStatus? Status { get; set; }
        /// <summary>[Required] The schedule trigger type.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"[Required] The schedule trigger type.",
        SerializedName = @"triggerType",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Support.ComputeTriggerType) })]
        Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Support.ComputeTriggerType? TriggerType { get; set; }

    }
    /// Compute start stop schedule properties
    internal partial interface IComputeStartStopScheduleInternal

    {
        /// <summary>[Required] The compute power action.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Support.ComputePowerAction? Action { get; set; }
        /// <summary>Required if triggerType is Cron.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.ICron Cron { get; set; }
        /// <summary>
        /// [Required] Specifies cron expression of schedule.
        /// The expression should follow NCronTab format.
        /// </summary>
        string CronExpression { get; set; }
        /// <summary>The start time in yyyy-MM-ddTHH:mm:ss format.</summary>
        string CronStartTime { get; set; }
        /// <summary>
        /// Specifies time zone in which the schedule runs.
        /// TimeZone should follow Windows time zone format. Refer: https://docs.microsoft.com/en-us/windows-hardware/manufacture/desktop/default-time-zones?view=windows-11
        /// </summary>
        string CronTimeZone { get; set; }
        /// <summary>A system assigned id for the schedule.</summary>
        string Id { get; set; }
        /// <summary>The current deployment state of schedule.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Support.ProvisioningStatus? ProvisioningStatus { get; set; }
        /// <summary>Required if triggerType is Recurrence.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IRecurrence Recurrence { get; set; }
        /// <summary>[Required] The frequency to trigger schedule.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Support.ComputeRecurrenceFrequency? RecurrenceFrequency { get; set; }
        /// <summary>[Required] Specifies schedule interval in conjunction with frequency</summary>
        int? RecurrenceInterval { get; set; }
        /// <summary>[Required] The recurrence schedule.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IComputeRecurrenceSchedule RecurrenceSchedule { get; set; }
        /// <summary>The start time in yyyy-MM-ddTHH:mm:ss format.</summary>
        string RecurrenceStartTime { get; set; }
        /// <summary>
        /// Specifies time zone in which the schedule runs.
        /// TimeZone should follow Windows time zone format. Refer: https://docs.microsoft.com/en-us/windows-hardware/manufacture/desktop/default-time-zones?view=windows-11
        /// </summary>
        string RecurrenceTimeZone { get; set; }
        /// <summary>[Deprecated] Not used any more.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IScheduleBase Schedule { get; set; }
        /// <summary>[Required] List of hours for the schedule.</summary>
        int[] ScheduleHour { get; set; }
        /// <summary>A system assigned id for the schedule.</summary>
        string ScheduleId { get; set; }
        /// <summary>[Required] List of minutes for the schedule.</summary>
        int[] ScheduleMinute { get; set; }
        /// <summary>List of month days for the schedule</summary>
        int[] ScheduleMonthDay { get; set; }
        /// <summary>The current deployment state of schedule.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Support.ScheduleProvisioningState? ScheduleProvisioningStatus { get; set; }
        /// <summary>Is the schedule enabled or disabled?</summary>
        Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Support.ScheduleStatus? ScheduleStatus { get; set; }
        /// <summary>List of days for the schedule.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Support.ComputeWeekDay[] ScheduleWeekDay { get; set; }
        /// <summary>Is the schedule enabled or disabled?</summary>
        Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Support.ScheduleStatus? Status { get; set; }
        /// <summary>[Required] The schedule trigger type.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Support.ComputeTriggerType? TriggerType { get; set; }

    }
}