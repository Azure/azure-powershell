// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401
{
    using static Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.Extensions;

    public partial class RequestLogging :
        Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IRequestLogging,
        Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IRequestLoggingInternal
    {

        /// <summary>Backing field for <see cref="CaptureHeader" /> property.</summary>
        private string[] _captureHeader;

        /// <summary>
        /// For payload logging, we only collect payload by default. If customers also want to collect the specified headers, they
        /// can set them in captureHeaders so that backend will collect those headers along with payload.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Owned)]
        public string[] CaptureHeader { get => this._captureHeader; set => this._captureHeader = value; }

        /// <summary>Creates an new <see cref="RequestLogging" /> instance.</summary>
        public RequestLogging()
        {

        }
    }
    public partial interface IRequestLogging :
        Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.IJsonSerializable
    {
        /// <summary>
        /// For payload logging, we only collect payload by default. If customers also want to collect the specified headers, they
        /// can set them in captureHeaders so that backend will collect those headers along with payload.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"For payload logging, we only collect payload by default. If customers also want to collect the specified headers, they can set them in captureHeaders so that backend will collect those headers along with payload.",
        SerializedName = @"captureHeaders",
        PossibleTypes = new [] { typeof(string) })]
        string[] CaptureHeader { get; set; }

    }
    internal partial interface IRequestLoggingInternal

    {
        /// <summary>
        /// For payload logging, we only collect payload by default. If customers also want to collect the specified headers, they
        /// can set them in captureHeaders so that backend will collect those headers along with payload.
        /// </summary>
        string[] CaptureHeader { get; set; }

    }
}