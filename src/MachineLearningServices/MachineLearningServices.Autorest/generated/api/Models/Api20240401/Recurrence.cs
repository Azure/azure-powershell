// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401
{
    using static Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.Extensions;

    /// <summary>The workflow trigger recurrence for ComputeStartStop schedule type.</summary>
    public partial class Recurrence :
        Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IRecurrence,
        Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IRecurrenceInternal
    {

        /// <summary>Backing field for <see cref="Frequency" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Support.ComputeRecurrenceFrequency? _frequency;

        /// <summary>[Required] The frequency to trigger schedule.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Support.ComputeRecurrenceFrequency? Frequency { get => this._frequency; set => this._frequency = value; }

        /// <summary>Backing field for <see cref="Interval" /> property.</summary>
        private int? _interval;

        /// <summary>[Required] Specifies schedule interval in conjunction with frequency</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Owned)]
        public int? Interval { get => this._interval; set => this._interval = value; }

        /// <summary>Internal Acessors for Schedule</summary>
        Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IComputeRecurrenceSchedule Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IRecurrenceInternal.Schedule { get => (this._schedule = this._schedule ?? new Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.ComputeRecurrenceSchedule()); set { {_schedule = value;} } }

        /// <summary>Backing field for <see cref="Schedule" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IComputeRecurrenceSchedule _schedule;

        /// <summary>[Required] The recurrence schedule.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IComputeRecurrenceSchedule Schedule { get => (this._schedule = this._schedule ?? new Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.ComputeRecurrenceSchedule()); set => this._schedule = value; }

        /// <summary>[Required] List of hours for the schedule.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Inlined)]
        public int[] ScheduleHour { get => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IComputeRecurrenceScheduleInternal)Schedule).Hour; set => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IComputeRecurrenceScheduleInternal)Schedule).Hour = value ?? null /* arrayOf */; }

        /// <summary>[Required] List of minutes for the schedule.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Inlined)]
        public int[] ScheduleMinute { get => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IComputeRecurrenceScheduleInternal)Schedule).Minute; set => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IComputeRecurrenceScheduleInternal)Schedule).Minute = value ?? null /* arrayOf */; }

        /// <summary>List of month days for the schedule</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Inlined)]
        public int[] ScheduleMonthDay { get => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IComputeRecurrenceScheduleInternal)Schedule).MonthDay; set => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IComputeRecurrenceScheduleInternal)Schedule).MonthDay = value ?? null /* arrayOf */; }

        /// <summary>List of days for the schedule.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Support.ComputeWeekDay[] ScheduleWeekDay { get => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IComputeRecurrenceScheduleInternal)Schedule).WeekDay; set => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IComputeRecurrenceScheduleInternal)Schedule).WeekDay = value ?? null /* arrayOf */; }

        /// <summary>Backing field for <see cref="StartTime" /> property.</summary>
        private string _startTime;

        /// <summary>The start time in yyyy-MM-ddTHH:mm:ss format.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Owned)]
        public string StartTime { get => this._startTime; set => this._startTime = value; }

        /// <summary>Backing field for <see cref="TimeZone" /> property.</summary>
        private string _timeZone;

        /// <summary>
        /// Specifies time zone in which the schedule runs.
        /// TimeZone should follow Windows time zone format. Refer: https://docs.microsoft.com/en-us/windows-hardware/manufacture/desktop/default-time-zones?view=windows-11
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Owned)]
        public string TimeZone { get => this._timeZone; set => this._timeZone = value; }

        /// <summary>Creates an new <see cref="Recurrence" /> instance.</summary>
        public Recurrence()
        {

        }
    }
    /// The workflow trigger recurrence for ComputeStartStop schedule type.
    public partial interface IRecurrence :
        Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.IJsonSerializable
    {
        /// <summary>[Required] The frequency to trigger schedule.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"[Required] The frequency to trigger schedule.",
        SerializedName = @"frequency",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Support.ComputeRecurrenceFrequency) })]
        Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Support.ComputeRecurrenceFrequency? Frequency { get; set; }
        /// <summary>[Required] Specifies schedule interval in conjunction with frequency</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"[Required] Specifies schedule interval in conjunction with frequency",
        SerializedName = @"interval",
        PossibleTypes = new [] { typeof(int) })]
        int? Interval { get; set; }
        /// <summary>[Required] List of hours for the schedule.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"[Required] List of hours for the schedule.",
        SerializedName = @"hours",
        PossibleTypes = new [] { typeof(int) })]
        int[] ScheduleHour { get; set; }
        /// <summary>[Required] List of minutes for the schedule.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"[Required] List of minutes for the schedule.",
        SerializedName = @"minutes",
        PossibleTypes = new [] { typeof(int) })]
        int[] ScheduleMinute { get; set; }
        /// <summary>List of month days for the schedule</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"List of month days for the schedule",
        SerializedName = @"monthDays",
        PossibleTypes = new [] { typeof(int) })]
        int[] ScheduleMonthDay { get; set; }
        /// <summary>List of days for the schedule.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"List of days for the schedule.",
        SerializedName = @"weekDays",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Support.ComputeWeekDay) })]
        Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Support.ComputeWeekDay[] ScheduleWeekDay { get; set; }
        /// <summary>The start time in yyyy-MM-ddTHH:mm:ss format.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The start time in yyyy-MM-ddTHH:mm:ss format.",
        SerializedName = @"startTime",
        PossibleTypes = new [] { typeof(string) })]
        string StartTime { get; set; }
        /// <summary>
        /// Specifies time zone in which the schedule runs.
        /// TimeZone should follow Windows time zone format. Refer: https://docs.microsoft.com/en-us/windows-hardware/manufacture/desktop/default-time-zones?view=windows-11
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Specifies time zone in which the schedule runs.
        TimeZone should follow Windows time zone format. Refer: https://docs.microsoft.com/en-us/windows-hardware/manufacture/desktop/default-time-zones?view=windows-11",
        SerializedName = @"timeZone",
        PossibleTypes = new [] { typeof(string) })]
        string TimeZone { get; set; }

    }
    /// The workflow trigger recurrence for ComputeStartStop schedule type.
    internal partial interface IRecurrenceInternal

    {
        /// <summary>[Required] The frequency to trigger schedule.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Support.ComputeRecurrenceFrequency? Frequency { get; set; }
        /// <summary>[Required] Specifies schedule interval in conjunction with frequency</summary>
        int? Interval { get; set; }
        /// <summary>[Required] The recurrence schedule.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IComputeRecurrenceSchedule Schedule { get; set; }
        /// <summary>[Required] List of hours for the schedule.</summary>
        int[] ScheduleHour { get; set; }
        /// <summary>[Required] List of minutes for the schedule.</summary>
        int[] ScheduleMinute { get; set; }
        /// <summary>List of month days for the schedule</summary>
        int[] ScheduleMonthDay { get; set; }
        /// <summary>List of days for the schedule.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Support.ComputeWeekDay[] ScheduleWeekDay { get; set; }
        /// <summary>The start time in yyyy-MM-ddTHH:mm:ss format.</summary>
        string StartTime { get; set; }
        /// <summary>
        /// Specifies time zone in which the schedule runs.
        /// TimeZone should follow Windows time zone format. Refer: https://docs.microsoft.com/en-us/windows-hardware/manufacture/desktop/default-time-zones?view=windows-11
        /// </summary>
        string TimeZone { get; set; }

    }
}