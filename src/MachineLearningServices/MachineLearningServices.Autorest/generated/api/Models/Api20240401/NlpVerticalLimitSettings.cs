// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401
{
    using static Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.Extensions;

    /// <summary>Job execution constraints.</summary>
    public partial class NlpVerticalLimitSettings :
        Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.INlpVerticalLimitSettings,
        Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.INlpVerticalLimitSettingsInternal
    {

        /// <summary>Backing field for <see cref="MaxConcurrentTrial" /> property.</summary>
        private int? _maxConcurrentTrial;

        /// <summary>Maximum Concurrent AutoML iterations.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Owned)]
        public int? MaxConcurrentTrial { get => this._maxConcurrentTrial; set => this._maxConcurrentTrial = value; }

        /// <summary>Backing field for <see cref="MaxTrial" /> property.</summary>
        private int? _maxTrial;

        /// <summary>Number of AutoML iterations.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Owned)]
        public int? MaxTrial { get => this._maxTrial; set => this._maxTrial = value; }

        /// <summary>Backing field for <see cref="Timeout" /> property.</summary>
        private global::System.TimeSpan? _timeout;

        /// <summary>AutoML job timeout.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Owned)]
        public global::System.TimeSpan? Timeout { get => this._timeout; set => this._timeout = value; }

        /// <summary>Creates an new <see cref="NlpVerticalLimitSettings" /> instance.</summary>
        public NlpVerticalLimitSettings()
        {

        }
    }
    /// Job execution constraints.
    public partial interface INlpVerticalLimitSettings :
        Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.IJsonSerializable
    {
        /// <summary>Maximum Concurrent AutoML iterations.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Maximum Concurrent AutoML iterations.",
        SerializedName = @"maxConcurrentTrials",
        PossibleTypes = new [] { typeof(int) })]
        int? MaxConcurrentTrial { get; set; }
        /// <summary>Number of AutoML iterations.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Number of AutoML iterations.",
        SerializedName = @"maxTrials",
        PossibleTypes = new [] { typeof(int) })]
        int? MaxTrial { get; set; }
        /// <summary>AutoML job timeout.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"AutoML job timeout.",
        SerializedName = @"timeout",
        PossibleTypes = new [] { typeof(global::System.TimeSpan) })]
        global::System.TimeSpan? Timeout { get; set; }

    }
    /// Job execution constraints.
    internal partial interface INlpVerticalLimitSettingsInternal

    {
        /// <summary>Maximum Concurrent AutoML iterations.</summary>
        int? MaxConcurrentTrial { get; set; }
        /// <summary>Number of AutoML iterations.</summary>
        int? MaxTrial { get; set; }
        /// <summary>AutoML job timeout.</summary>
        global::System.TimeSpan? Timeout { get; set; }

    }
}