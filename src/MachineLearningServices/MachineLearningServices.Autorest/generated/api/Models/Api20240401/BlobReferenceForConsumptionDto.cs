// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401
{
    using static Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.Extensions;

    public partial class BlobReferenceForConsumptionDto :
        Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IBlobReferenceForConsumptionDto,
        Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IBlobReferenceForConsumptionDtoInternal
    {

        /// <summary>Backing field for <see cref="BlobUri" /> property.</summary>
        private string _blobUri;

        /// <summary>
        /// Blob URI path for client to upload data.
        /// Example: https://blob.windows.core.net/Container/Path
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Owned)]
        public string BlobUri { get => this._blobUri; set => this._blobUri = value; }

        /// <summary>Backing field for <see cref="Credential" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IPendingUploadCredentialDto _credential;

        /// <summary>Credential info to access storage account</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IPendingUploadCredentialDto Credential { get => (this._credential = this._credential ?? new Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.PendingUploadCredentialDto()); set => this._credential = value; }

        /// <summary>[Required] Credential type used to authentication with storage.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Inlined)]
        public string CredentialType { get => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IPendingUploadCredentialDtoInternal)Credential).CredentialType; }

        /// <summary>Internal Acessors for Credential</summary>
        Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IPendingUploadCredentialDto Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IBlobReferenceForConsumptionDtoInternal.Credential { get => (this._credential = this._credential ?? new Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.PendingUploadCredentialDto()); set { {_credential = value;} } }

        /// <summary>Internal Acessors for CredentialType</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IBlobReferenceForConsumptionDtoInternal.CredentialType { get => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IPendingUploadCredentialDtoInternal)Credential).CredentialType; set => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IPendingUploadCredentialDtoInternal)Credential).CredentialType = value; }

        /// <summary>Backing field for <see cref="StorageAccountArmId" /> property.</summary>
        private string _storageAccountArmId;

        /// <summary>Arm ID of the storage account to use</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Owned)]
        public string StorageAccountArmId { get => this._storageAccountArmId; set => this._storageAccountArmId = value; }

        /// <summary>Creates an new <see cref="BlobReferenceForConsumptionDto" /> instance.</summary>
        public BlobReferenceForConsumptionDto()
        {

        }
    }
    public partial interface IBlobReferenceForConsumptionDto :
        Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.IJsonSerializable
    {
        /// <summary>
        /// Blob URI path for client to upload data.
        /// Example: https://blob.windows.core.net/Container/Path
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Blob URI path for client to upload data.
        Example: https://blob.windows.core.net/Container/Path",
        SerializedName = @"blobUri",
        PossibleTypes = new [] { typeof(string) })]
        string BlobUri { get; set; }
        /// <summary>[Required] Credential type used to authentication with storage.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"[Required] Credential type used to authentication with storage.",
        SerializedName = @"credentialType",
        PossibleTypes = new [] { typeof(string) })]
        string CredentialType { get;  }
        /// <summary>Arm ID of the storage account to use</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Arm ID of the storage account to use",
        SerializedName = @"storageAccountArmId",
        PossibleTypes = new [] { typeof(string) })]
        string StorageAccountArmId { get; set; }

    }
    internal partial interface IBlobReferenceForConsumptionDtoInternal

    {
        /// <summary>
        /// Blob URI path for client to upload data.
        /// Example: https://blob.windows.core.net/Container/Path
        /// </summary>
        string BlobUri { get; set; }
        /// <summary>Credential info to access storage account</summary>
        Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IPendingUploadCredentialDto Credential { get; set; }
        /// <summary>[Required] Credential type used to authentication with storage.</summary>
        string CredentialType { get; set; }
        /// <summary>Arm ID of the storage account to use</summary>
        string StorageAccountArmId { get; set; }

    }
}