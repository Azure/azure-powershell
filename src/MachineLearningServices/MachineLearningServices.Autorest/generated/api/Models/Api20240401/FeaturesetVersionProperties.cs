// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401
{
    using static Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.Extensions;

    /// <summary>DTO object representing feature set version</summary>
    public partial class FeaturesetVersionProperties :
        Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IFeaturesetVersionProperties,
        Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IFeaturesetVersionPropertiesInternal,
        Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.IValidates
    {
        /// <summary>
        /// Backing field for Inherited model <see cref= "Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IAssetBase"
        /// />
        /// </summary>
        private Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IAssetBase __assetBase = new Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.AssetBase();

        /// <summary>The asset description text.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Inherited)]
        public string Description { get => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IResourceBaseInternal)__assetBase).Description; set => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IResourceBaseInternal)__assetBase).Description = value ?? null; }

        /// <summary>Backing field for <see cref="Entity" /> property.</summary>
        private string[] _entity;

        /// <summary>Specifies list of entities</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Owned)]
        public string[] Entity { get => this._entity; set => this._entity = value; }

        /// <summary>If the name version are system generated (anonymous registration).</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Inherited)]
        public bool? IsAnonymou { get => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IAssetBaseInternal)__assetBase).IsAnonymou; set => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IAssetBaseInternal)__assetBase).IsAnonymou = value ?? default(bool); }

        /// <summary>Is the asset archived?</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Inherited)]
        public bool? IsArchived { get => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IAssetBaseInternal)__assetBase).IsArchived; set => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IAssetBaseInternal)__assetBase).IsArchived = value ?? default(bool); }

        /// <summary>Backing field for <see cref="MaterializationSetting" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IMaterializationSettings _materializationSetting;

        /// <summary>Specifies the materialization settings</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IMaterializationSettings MaterializationSetting { get => (this._materializationSetting = this._materializationSetting ?? new Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.MaterializationSettings()); set => this._materializationSetting = value; }

        /// <summary>Specifies the spark compute settings</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IMaterializationSettingsSparkConfiguration MaterializationSettingSparkConfiguration { get => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IMaterializationSettingsInternal)MaterializationSetting).SparkConfiguration; set => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IMaterializationSettingsInternal)MaterializationSetting).SparkConfiguration = value ?? null /* model class */; }

        /// <summary>Specifies the stores to which materialization should happen</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Support.MaterializationStoreType? MaterializationSettingStoreType { get => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IMaterializationSettingsInternal)MaterializationSetting).StoreType; set => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IMaterializationSettingsInternal)MaterializationSetting).StoreType = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Support.MaterializationStoreType)""); }

        /// <summary>Internal Acessors for MaterializationSetting</summary>
        Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IMaterializationSettings Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IFeaturesetVersionPropertiesInternal.MaterializationSetting { get => (this._materializationSetting = this._materializationSetting ?? new Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.MaterializationSettings()); set { {_materializationSetting = value;} } }

        /// <summary>Internal Acessors for MaterializationSettingNotification</summary>
        Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.INotificationSetting Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IFeaturesetVersionPropertiesInternal.MaterializationSettingNotification { get => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IMaterializationSettingsInternal)MaterializationSetting).Notification; set => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IMaterializationSettingsInternal)MaterializationSetting).Notification = value; }

        /// <summary>Internal Acessors for MaterializationSettingResource</summary>
        Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IMaterializationComputeResource Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IFeaturesetVersionPropertiesInternal.MaterializationSettingResource { get => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IMaterializationSettingsInternal)MaterializationSetting).Resource; set => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IMaterializationSettingsInternal)MaterializationSetting).Resource = value; }

        /// <summary>Internal Acessors for MaterializationSettingSchedule</summary>
        Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IRecurrenceTrigger Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IFeaturesetVersionPropertiesInternal.MaterializationSettingSchedule { get => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IMaterializationSettingsInternal)MaterializationSetting).Schedule; set => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IMaterializationSettingsInternal)MaterializationSetting).Schedule = value; }

        /// <summary>Internal Acessors for ProvisioningState</summary>
        Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Support.AssetProvisioningState? Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IFeaturesetVersionPropertiesInternal.ProvisioningState { get => this._provisioningState; set { {_provisioningState = value;} } }

        /// <summary>Internal Acessors for RecurrenceSchedule</summary>
        Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IRecurrenceSchedule Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IFeaturesetVersionPropertiesInternal.RecurrenceSchedule { get => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IMaterializationSettingsInternal)MaterializationSetting).RecurrenceSchedule; set => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IMaterializationSettingsInternal)MaterializationSetting).RecurrenceSchedule = value; }

        /// <summary>Internal Acessors for Specification</summary>
        Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IFeaturesetSpecification Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IFeaturesetVersionPropertiesInternal.Specification { get => (this._specification = this._specification ?? new Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.FeaturesetSpecification()); set { {_specification = value;} } }

        /// <summary>
        /// This is the email recipient list which has a limitation of 499 characters in total concat with comma separator
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Inlined)]
        public string[] NotificationEmail { get => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IMaterializationSettingsInternal)MaterializationSetting).NotificationEmail; set => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IMaterializationSettingsInternal)MaterializationSetting).NotificationEmail = value ?? null /* arrayOf */; }

        /// <summary>Send email notification to user on specified notification type</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Support.EmailNotificationEnableType[] NotificationEmailOn { get => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IMaterializationSettingsInternal)MaterializationSetting).NotificationEmailOn; set => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IMaterializationSettingsInternal)MaterializationSetting).NotificationEmailOn = value ?? null /* arrayOf */; }

        /// <summary>
        /// Send webhook callback to a service. Key is a user-provided name for the webhook.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.INotificationSettingWebhooks NotificationWebhook { get => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IMaterializationSettingsInternal)MaterializationSetting).NotificationWebhook; set => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IMaterializationSettingsInternal)MaterializationSetting).NotificationWebhook = value ?? null /* model class */; }

        /// <summary>The asset property dictionary.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Inherited)]
        public Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IResourceBaseProperties Property { get => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IResourceBaseInternal)__assetBase).Property; set => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IResourceBaseInternal)__assetBase).Property = value ?? null /* model class */; }

        /// <summary>Backing field for <see cref="ProvisioningState" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Support.AssetProvisioningState? _provisioningState;

        /// <summary>Provisioning state for the featureset version container.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Support.AssetProvisioningState? ProvisioningState { get => this._provisioningState; }

        /// <summary>Specifies the instance type</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Inlined)]
        public string ResourceInstanceType { get => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IMaterializationSettingsInternal)MaterializationSetting).ResourceInstanceType; set => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IMaterializationSettingsInternal)MaterializationSetting).ResourceInstanceType = value ?? null; }

        /// <summary>
        /// Specifies end time of schedule in ISO 8601, but without a UTC offset. Refer https://en.wikipedia.org/wiki/ISO_8601.
        /// Recommented format would be "2022-06-01T00:00:01"
        /// If not present, the schedule will run indefinitely
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Inlined)]
        public string ScheduleEndTime { get => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IMaterializationSettingsInternal)MaterializationSetting).ScheduleEndTime; set => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IMaterializationSettingsInternal)MaterializationSetting).ScheduleEndTime = value ?? null; }

        /// <summary>[Required] The frequency to trigger schedule.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Support.RecurrenceFrequency? ScheduleFrequency { get => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IMaterializationSettingsInternal)MaterializationSetting).ScheduleFrequency; set => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IMaterializationSettingsInternal)MaterializationSetting).ScheduleFrequency = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Support.RecurrenceFrequency)""); }

        /// <summary>[Required] List of hours for the schedule.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Inlined)]
        public int[] ScheduleHour { get => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IMaterializationSettingsInternal)MaterializationSetting).ScheduleHour; set => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IMaterializationSettingsInternal)MaterializationSetting).ScheduleHour = value ?? null /* arrayOf */; }

        /// <summary>[Required] Specifies schedule interval in conjunction with frequency</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Inlined)]
        public int? ScheduleInterval { get => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IMaterializationSettingsInternal)MaterializationSetting).ScheduleInterval; set => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IMaterializationSettingsInternal)MaterializationSetting).ScheduleInterval = value ?? default(int); }

        /// <summary>[Required] List of minutes for the schedule.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Inlined)]
        public int[] ScheduleMinute { get => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IMaterializationSettingsInternal)MaterializationSetting).ScheduleMinute; set => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IMaterializationSettingsInternal)MaterializationSetting).ScheduleMinute = value ?? null /* arrayOf */; }

        /// <summary>List of month days for the schedule</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Inlined)]
        public int[] ScheduleMonthDay { get => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IMaterializationSettingsInternal)MaterializationSetting).ScheduleMonthDay; set => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IMaterializationSettingsInternal)MaterializationSetting).ScheduleMonthDay = value ?? null /* arrayOf */; }

        /// <summary>Specifies start time of schedule in ISO 8601 format, but without a UTC offset.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Inlined)]
        public string ScheduleStartTime { get => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IMaterializationSettingsInternal)MaterializationSetting).ScheduleStartTime; set => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IMaterializationSettingsInternal)MaterializationSetting).ScheduleStartTime = value ?? null; }

        /// <summary>
        /// Specifies time zone in which the schedule runs.
        /// TimeZone should follow Windows time zone format. Refer: https://docs.microsoft.com/en-us/windows-hardware/manufacture/desktop/default-time-zones?view=windows-11
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Inlined)]
        public string ScheduleTimeZone { get => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IMaterializationSettingsInternal)MaterializationSetting).ScheduleTimeZone; set => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IMaterializationSettingsInternal)MaterializationSetting).ScheduleTimeZone = value ?? null; }

        /// <summary>[Required]</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Support.TriggerType? ScheduleTriggerType { get => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IMaterializationSettingsInternal)MaterializationSetting).ScheduleTriggerType; set => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IMaterializationSettingsInternal)MaterializationSetting).ScheduleTriggerType = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Support.TriggerType)""); }

        /// <summary>List of days for the schedule.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Support.WeekDay[] ScheduleWeekDay { get => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IMaterializationSettingsInternal)MaterializationSetting).ScheduleWeekDay; set => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IMaterializationSettingsInternal)MaterializationSetting).ScheduleWeekDay = value ?? null /* arrayOf */; }

        /// <summary>Backing field for <see cref="Specification" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IFeaturesetSpecification _specification;

        /// <summary>Specifies the feature spec details</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IFeaturesetSpecification Specification { get => (this._specification = this._specification ?? new Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.FeaturesetSpecification()); set => this._specification = value; }

        /// <summary>Specifies the spec path</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Inlined)]
        public string SpecificationPath { get => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IFeaturesetSpecificationInternal)Specification).Path; set => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IFeaturesetSpecificationInternal)Specification).Path = value ?? null; }

        /// <summary>Backing field for <see cref="Stage" /> property.</summary>
        private string _stage;

        /// <summary>Specifies the asset stage</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Owned)]
        public string Stage { get => this._stage; set => this._stage = value; }

        /// <summary>Tag dictionary. Tags can be added, removed, and updated.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Inherited)]
        public Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IResourceBaseTags Tag { get => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IResourceBaseInternal)__assetBase).Tag; set => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IResourceBaseInternal)__assetBase).Tag = value ?? null /* model class */; }

        /// <summary>Creates an new <see cref="FeaturesetVersionProperties" /> instance.</summary>
        public FeaturesetVersionProperties()
        {

        }

        /// <summary>Validates that this object meets the validation criteria.</summary>
        /// <param name="eventListener">an <see cref="Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.IEventListener" /> instance that will receive validation
        /// events.</param>
        /// <returns>
        /// A <see cref = "global::System.Threading.Tasks.Task" /> that will be complete when validation is completed.
        /// </returns>
        public async global::System.Threading.Tasks.Task Validate(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.IEventListener eventListener)
        {
            await eventListener.AssertNotNull(nameof(__assetBase), __assetBase);
            await eventListener.AssertObjectIsValid(nameof(__assetBase), __assetBase);
        }
    }
    /// DTO object representing feature set version
    public partial interface IFeaturesetVersionProperties :
        Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.IJsonSerializable,
        Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IAssetBase
    {
        /// <summary>Specifies list of entities</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Specifies list of entities",
        SerializedName = @"entities",
        PossibleTypes = new [] { typeof(string) })]
        string[] Entity { get; set; }
        /// <summary>Specifies the spark compute settings</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Specifies the spark compute settings",
        SerializedName = @"sparkConfiguration",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IMaterializationSettingsSparkConfiguration) })]
        Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IMaterializationSettingsSparkConfiguration MaterializationSettingSparkConfiguration { get; set; }
        /// <summary>Specifies the stores to which materialization should happen</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Specifies the stores to which materialization should happen",
        SerializedName = @"storeType",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Support.MaterializationStoreType) })]
        Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Support.MaterializationStoreType? MaterializationSettingStoreType { get; set; }
        /// <summary>
        /// This is the email recipient list which has a limitation of 499 characters in total concat with comma separator
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"This is the email recipient list which has a limitation of 499 characters in total concat with comma separator",
        SerializedName = @"emails",
        PossibleTypes = new [] { typeof(string) })]
        string[] NotificationEmail { get; set; }
        /// <summary>Send email notification to user on specified notification type</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Send email notification to user on specified notification type",
        SerializedName = @"emailOn",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Support.EmailNotificationEnableType) })]
        Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Support.EmailNotificationEnableType[] NotificationEmailOn { get; set; }
        /// <summary>
        /// Send webhook callback to a service. Key is a user-provided name for the webhook.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Send webhook callback to a service. Key is a user-provided name for the webhook.",
        SerializedName = @"webhooks",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.INotificationSettingWebhooks) })]
        Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.INotificationSettingWebhooks NotificationWebhook { get; set; }
        /// <summary>Provisioning state for the featureset version container.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Provisioning state for the featureset version container.",
        SerializedName = @"provisioningState",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Support.AssetProvisioningState) })]
        Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Support.AssetProvisioningState? ProvisioningState { get;  }
        /// <summary>Specifies the instance type</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Specifies the instance type",
        SerializedName = @"instanceType",
        PossibleTypes = new [] { typeof(string) })]
        string ResourceInstanceType { get; set; }
        /// <summary>
        /// Specifies end time of schedule in ISO 8601, but without a UTC offset. Refer https://en.wikipedia.org/wiki/ISO_8601.
        /// Recommented format would be "2022-06-01T00:00:01"
        /// If not present, the schedule will run indefinitely
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Specifies end time of schedule in ISO 8601, but without a UTC offset. Refer https://en.wikipedia.org/wiki/ISO_8601.
        Recommented format would be ""2022-06-01T00:00:01""
        If not present, the schedule will run indefinitely",
        SerializedName = @"endTime",
        PossibleTypes = new [] { typeof(string) })]
        string ScheduleEndTime { get; set; }
        /// <summary>[Required] The frequency to trigger schedule.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"[Required] The frequency to trigger schedule.",
        SerializedName = @"frequency",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Support.RecurrenceFrequency) })]
        Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Support.RecurrenceFrequency? ScheduleFrequency { get; set; }
        /// <summary>[Required] List of hours for the schedule.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"[Required] List of hours for the schedule.",
        SerializedName = @"hours",
        PossibleTypes = new [] { typeof(int) })]
        int[] ScheduleHour { get; set; }
        /// <summary>[Required] Specifies schedule interval in conjunction with frequency</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"[Required] Specifies schedule interval in conjunction with frequency",
        SerializedName = @"interval",
        PossibleTypes = new [] { typeof(int) })]
        int? ScheduleInterval { get; set; }
        /// <summary>[Required] List of minutes for the schedule.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"[Required] List of minutes for the schedule.",
        SerializedName = @"minutes",
        PossibleTypes = new [] { typeof(int) })]
        int[] ScheduleMinute { get; set; }
        /// <summary>List of month days for the schedule</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"List of month days for the schedule",
        SerializedName = @"monthDays",
        PossibleTypes = new [] { typeof(int) })]
        int[] ScheduleMonthDay { get; set; }
        /// <summary>Specifies start time of schedule in ISO 8601 format, but without a UTC offset.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Specifies start time of schedule in ISO 8601 format, but without a UTC offset.",
        SerializedName = @"startTime",
        PossibleTypes = new [] { typeof(string) })]
        string ScheduleStartTime { get; set; }
        /// <summary>
        /// Specifies time zone in which the schedule runs.
        /// TimeZone should follow Windows time zone format. Refer: https://docs.microsoft.com/en-us/windows-hardware/manufacture/desktop/default-time-zones?view=windows-11
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Specifies time zone in which the schedule runs.
        TimeZone should follow Windows time zone format. Refer: https://docs.microsoft.com/en-us/windows-hardware/manufacture/desktop/default-time-zones?view=windows-11",
        SerializedName = @"timeZone",
        PossibleTypes = new [] { typeof(string) })]
        string ScheduleTimeZone { get; set; }
        /// <summary>[Required]</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"[Required] ",
        SerializedName = @"triggerType",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Support.TriggerType) })]
        Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Support.TriggerType? ScheduleTriggerType { get; set; }
        /// <summary>List of days for the schedule.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"List of days for the schedule.",
        SerializedName = @"weekDays",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Support.WeekDay) })]
        Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Support.WeekDay[] ScheduleWeekDay { get; set; }
        /// <summary>Specifies the spec path</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Specifies the spec path",
        SerializedName = @"path",
        PossibleTypes = new [] { typeof(string) })]
        string SpecificationPath { get; set; }
        /// <summary>Specifies the asset stage</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Specifies the asset stage",
        SerializedName = @"stage",
        PossibleTypes = new [] { typeof(string) })]
        string Stage { get; set; }

    }
    /// DTO object representing feature set version
    internal partial interface IFeaturesetVersionPropertiesInternal :
        Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IAssetBaseInternal
    {
        /// <summary>Specifies list of entities</summary>
        string[] Entity { get; set; }
        /// <summary>Specifies the materialization settings</summary>
        Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IMaterializationSettings MaterializationSetting { get; set; }
        /// <summary>Specifies the notification details</summary>
        Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.INotificationSetting MaterializationSettingNotification { get; set; }
        /// <summary>Specifies the compute resource settings</summary>
        Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IMaterializationComputeResource MaterializationSettingResource { get; set; }
        /// <summary>Specifies the schedule details</summary>
        Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IRecurrenceTrigger MaterializationSettingSchedule { get; set; }
        /// <summary>Specifies the spark compute settings</summary>
        Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IMaterializationSettingsSparkConfiguration MaterializationSettingSparkConfiguration { get; set; }
        /// <summary>Specifies the stores to which materialization should happen</summary>
        Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Support.MaterializationStoreType? MaterializationSettingStoreType { get; set; }
        /// <summary>
        /// This is the email recipient list which has a limitation of 499 characters in total concat with comma separator
        /// </summary>
        string[] NotificationEmail { get; set; }
        /// <summary>Send email notification to user on specified notification type</summary>
        Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Support.EmailNotificationEnableType[] NotificationEmailOn { get; set; }
        /// <summary>
        /// Send webhook callback to a service. Key is a user-provided name for the webhook.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.INotificationSettingWebhooks NotificationWebhook { get; set; }
        /// <summary>Provisioning state for the featureset version container.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Support.AssetProvisioningState? ProvisioningState { get; set; }
        /// <summary>The recurrence schedule.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IRecurrenceSchedule RecurrenceSchedule { get; set; }
        /// <summary>Specifies the instance type</summary>
        string ResourceInstanceType { get; set; }
        /// <summary>
        /// Specifies end time of schedule in ISO 8601, but without a UTC offset. Refer https://en.wikipedia.org/wiki/ISO_8601.
        /// Recommented format would be "2022-06-01T00:00:01"
        /// If not present, the schedule will run indefinitely
        /// </summary>
        string ScheduleEndTime { get; set; }
        /// <summary>[Required] The frequency to trigger schedule.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Support.RecurrenceFrequency? ScheduleFrequency { get; set; }
        /// <summary>[Required] List of hours for the schedule.</summary>
        int[] ScheduleHour { get; set; }
        /// <summary>[Required] Specifies schedule interval in conjunction with frequency</summary>
        int? ScheduleInterval { get; set; }
        /// <summary>[Required] List of minutes for the schedule.</summary>
        int[] ScheduleMinute { get; set; }
        /// <summary>List of month days for the schedule</summary>
        int[] ScheduleMonthDay { get; set; }
        /// <summary>Specifies start time of schedule in ISO 8601 format, but without a UTC offset.</summary>
        string ScheduleStartTime { get; set; }
        /// <summary>
        /// Specifies time zone in which the schedule runs.
        /// TimeZone should follow Windows time zone format. Refer: https://docs.microsoft.com/en-us/windows-hardware/manufacture/desktop/default-time-zones?view=windows-11
        /// </summary>
        string ScheduleTimeZone { get; set; }
        /// <summary>[Required]</summary>
        Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Support.TriggerType? ScheduleTriggerType { get; set; }
        /// <summary>List of days for the schedule.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Support.WeekDay[] ScheduleWeekDay { get; set; }
        /// <summary>Specifies the feature spec details</summary>
        Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IFeaturesetSpecification Specification { get; set; }
        /// <summary>Specifies the spec path</summary>
        string SpecificationPath { get; set; }
        /// <summary>Specifies the asset stage</summary>
        string Stage { get; set; }

    }
}