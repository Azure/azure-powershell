// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401
{
    using static Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.Extensions;

    /// <summary>Job execution constraints.</summary>
    public partial class TableVerticalLimitSettings :
        Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.ITableVerticalLimitSettings,
        Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.ITableVerticalLimitSettingsInternal
    {

        /// <summary>Backing field for <see cref="EnableEarlyTermination" /> property.</summary>
        private bool? _enableEarlyTermination;

        /// <summary>
        /// Enable early termination, determines whether or not if AutoMLJob will terminate early if there is no score improvement
        /// in last 20 iterations.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Owned)]
        public bool? EnableEarlyTermination { get => this._enableEarlyTermination; set => this._enableEarlyTermination = value; }

        /// <summary>Backing field for <see cref="ExitScore" /> property.</summary>
        private double? _exitScore;

        /// <summary>Exit score for the AutoML job.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Owned)]
        public double? ExitScore { get => this._exitScore; set => this._exitScore = value; }

        /// <summary>Backing field for <see cref="MaxConcurrentTrial" /> property.</summary>
        private int? _maxConcurrentTrial;

        /// <summary>Maximum Concurrent iterations.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Owned)]
        public int? MaxConcurrentTrial { get => this._maxConcurrentTrial; set => this._maxConcurrentTrial = value; }

        /// <summary>Backing field for <see cref="MaxCoresPerTrial" /> property.</summary>
        private int? _maxCoresPerTrial;

        /// <summary>Max cores per iteration.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Owned)]
        public int? MaxCoresPerTrial { get => this._maxCoresPerTrial; set => this._maxCoresPerTrial = value; }

        /// <summary>Backing field for <see cref="MaxTrial" /> property.</summary>
        private int? _maxTrial;

        /// <summary>Number of iterations.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Owned)]
        public int? MaxTrial { get => this._maxTrial; set => this._maxTrial = value; }

        /// <summary>Backing field for <see cref="Timeout" /> property.</summary>
        private global::System.TimeSpan? _timeout;

        /// <summary>AutoML job timeout.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Owned)]
        public global::System.TimeSpan? Timeout { get => this._timeout; set => this._timeout = value; }

        /// <summary>Backing field for <see cref="TrialTimeout" /> property.</summary>
        private global::System.TimeSpan? _trialTimeout;

        /// <summary>Iteration timeout.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Owned)]
        public global::System.TimeSpan? TrialTimeout { get => this._trialTimeout; set => this._trialTimeout = value; }

        /// <summary>Creates an new <see cref="TableVerticalLimitSettings" /> instance.</summary>
        public TableVerticalLimitSettings()
        {

        }
    }
    /// Job execution constraints.
    public partial interface ITableVerticalLimitSettings :
        Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.IJsonSerializable
    {
        /// <summary>
        /// Enable early termination, determines whether or not if AutoMLJob will terminate early if there is no score improvement
        /// in last 20 iterations.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Enable early termination, determines whether or not if AutoMLJob will terminate early if there is no score improvement in last 20 iterations.",
        SerializedName = @"enableEarlyTermination",
        PossibleTypes = new [] { typeof(bool) })]
        bool? EnableEarlyTermination { get; set; }
        /// <summary>Exit score for the AutoML job.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Exit score for the AutoML job.",
        SerializedName = @"exitScore",
        PossibleTypes = new [] { typeof(double) })]
        double? ExitScore { get; set; }
        /// <summary>Maximum Concurrent iterations.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Maximum Concurrent iterations.",
        SerializedName = @"maxConcurrentTrials",
        PossibleTypes = new [] { typeof(int) })]
        int? MaxConcurrentTrial { get; set; }
        /// <summary>Max cores per iteration.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Max cores per iteration.",
        SerializedName = @"maxCoresPerTrial",
        PossibleTypes = new [] { typeof(int) })]
        int? MaxCoresPerTrial { get; set; }
        /// <summary>Number of iterations.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Number of iterations.",
        SerializedName = @"maxTrials",
        PossibleTypes = new [] { typeof(int) })]
        int? MaxTrial { get; set; }
        /// <summary>AutoML job timeout.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"AutoML job timeout.",
        SerializedName = @"timeout",
        PossibleTypes = new [] { typeof(global::System.TimeSpan) })]
        global::System.TimeSpan? Timeout { get; set; }
        /// <summary>Iteration timeout.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Iteration timeout.",
        SerializedName = @"trialTimeout",
        PossibleTypes = new [] { typeof(global::System.TimeSpan) })]
        global::System.TimeSpan? TrialTimeout { get; set; }

    }
    /// Job execution constraints.
    internal partial interface ITableVerticalLimitSettingsInternal

    {
        /// <summary>
        /// Enable early termination, determines whether or not if AutoMLJob will terminate early if there is no score improvement
        /// in last 20 iterations.
        /// </summary>
        bool? EnableEarlyTermination { get; set; }
        /// <summary>Exit score for the AutoML job.</summary>
        double? ExitScore { get; set; }
        /// <summary>Maximum Concurrent iterations.</summary>
        int? MaxConcurrentTrial { get; set; }
        /// <summary>Max cores per iteration.</summary>
        int? MaxCoresPerTrial { get; set; }
        /// <summary>Number of iterations.</summary>
        int? MaxTrial { get; set; }
        /// <summary>AutoML job timeout.</summary>
        global::System.TimeSpan? Timeout { get; set; }
        /// <summary>Iteration timeout.</summary>
        global::System.TimeSpan? TrialTimeout { get; set; }

    }
}