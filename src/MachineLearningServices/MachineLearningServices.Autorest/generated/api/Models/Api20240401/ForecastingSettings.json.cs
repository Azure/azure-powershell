// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401
{
    using static Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.Extensions;

    /// <summary>Forecasting specific parameters.</summary>
    public partial class ForecastingSettings
    {

        /// <summary>
        /// <c>AfterFromJson</c> will be called after the json deserialization has finished, allowing customization of the object
        /// before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="json">The JsonNode that should be deserialized into this object.</param>

        partial void AfterFromJson(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.Json.JsonObject json);

        /// <summary>
        /// <c>AfterToJson</c> will be called after the json serialization has finished, allowing customization of the <see cref="Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.Json.JsonObject"
        /// /> before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="container">The JSON container that the serialization result will be placed in.</param>

        partial void AfterToJson(ref Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.Json.JsonObject container);

        /// <summary>
        /// <c>BeforeFromJson</c> will be called before the json deserialization has commenced, allowing complete customization of
        /// the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <paramref name= "returnNow" />
        /// output parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="json">The JsonNode that should be deserialized into this object.</param>
        /// <param name="returnNow">Determines if the rest of the deserialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeFromJson(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.Json.JsonObject json, ref bool returnNow);

        /// <summary>
        /// <c>BeforeToJson</c> will be called before the json serialization has commenced, allowing complete customization of the
        /// object before it is serialized.
        /// If you wish to disable the default serialization entirely, return <c>true</c> in the <paramref name="returnNow" /> output
        /// parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="container">The JSON container that the serialization result will be placed in.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeToJson(ref Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.Json.JsonObject container, ref bool returnNow);

        /// <summary>
        /// Deserializes a Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.Json.JsonObject into a new instance of <see cref="ForecastingSettings" />.
        /// </summary>
        /// <param name="json">A Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.Json.JsonObject instance to deserialize from.</param>
        internal ForecastingSettings(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.Json.JsonObject json)
        {
            bool returnNow = false;
            BeforeFromJson(json, ref returnNow);
            if (returnNow)
            {
                return;
            }
            {_forecastHorizon = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.Json.JsonObject>("forecastHorizon"), out var __jsonForecastHorizon) ? Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.ForecastHorizon.FromJson(__jsonForecastHorizon) : ForecastHorizon;}
            {_seasonality = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.Json.JsonObject>("seasonality"), out var __jsonSeasonality) ? Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.Seasonality.FromJson(__jsonSeasonality) : Seasonality;}
            {_targetLag = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.Json.JsonObject>("targetLags"), out var __jsonTargetLags) ? Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.TargetLags.FromJson(__jsonTargetLags) : TargetLag;}
            {_targetRollingWindowSize = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.Json.JsonObject>("targetRollingWindowSize"), out var __jsonTargetRollingWindowSize) ? Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.TargetRollingWindowSize.FromJson(__jsonTargetRollingWindowSize) : TargetRollingWindowSize;}
            {_countryOrRegionForHoliday = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.Json.JsonString>("countryOrRegionForHolidays"), out var __jsonCountryOrRegionForHolidays) ? (string)__jsonCountryOrRegionForHolidays : (string)CountryOrRegionForHoliday;}
            {_cvStepSize = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.Json.JsonNumber>("cvStepSize"), out var __jsonCvStepSize) ? (int?)__jsonCvStepSize : CvStepSize;}
            {_featureLag = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.Json.JsonString>("featureLags"), out var __jsonFeatureLags) ? (string)__jsonFeatureLags : (string)FeatureLag;}
            {_frequency = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.Json.JsonString>("frequency"), out var __jsonFrequency) ? (string)__jsonFrequency : (string)Frequency;}
            {_shortSeriesHandlingConfig = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.Json.JsonString>("shortSeriesHandlingConfig"), out var __jsonShortSeriesHandlingConfig) ? (string)__jsonShortSeriesHandlingConfig : (string)ShortSeriesHandlingConfig;}
            {_targetAggregateFunction = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.Json.JsonString>("targetAggregateFunction"), out var __jsonTargetAggregateFunction) ? (string)__jsonTargetAggregateFunction : (string)TargetAggregateFunction;}
            {_timeColumnName = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.Json.JsonString>("timeColumnName"), out var __jsonTimeColumnName) ? (string)__jsonTimeColumnName : (string)TimeColumnName;}
            {_timeSeriesIdColumnName = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.Json.JsonArray>("timeSeriesIdColumnNames"), out var __jsonTimeSeriesIdColumnNames) ? If( __jsonTimeSeriesIdColumnNames as Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.Json.JsonArray, out var __v) ? new global::System.Func<string[]>(()=> global::System.Linq.Enumerable.ToArray(global::System.Linq.Enumerable.Select(__v, (__u)=>(string) (__u is Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.Json.JsonString __t ? (string)(__t.ToString()) : null)) ))() : null : TimeSeriesIdColumnName;}
            {_useStl = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.Json.JsonString>("useStl"), out var __jsonUseStl) ? (string)__jsonUseStl : (string)UseStl;}
            AfterFromJson(json);
        }

        /// <summary>
        /// Deserializes a <see cref="Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.Json.JsonNode"/> into an instance of Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IForecastingSettings.
        /// </summary>
        /// <param name="node">a <see cref="Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.Json.JsonNode" /> to deserialize from.</param>
        /// <returns>
        /// an instance of Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IForecastingSettings.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IForecastingSettings FromJson(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.Json.JsonNode node)
        {
            return node is Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.Json.JsonObject json ? new ForecastingSettings(json) : null;
        }

        /// <summary>
        /// Serializes this instance of <see cref="ForecastingSettings" /> into a <see cref="Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.Json.JsonNode" />.
        /// </summary>
        /// <param name="container">The <see cref="Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.Json.JsonObject"/> container to serialize this object into. If the caller
        /// passes in <c>null</c>, a new instance will be created and returned to the caller.</param>
        /// <param name="serializationMode">Allows the caller to choose the depth of the serialization. See <see cref="Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.SerializationMode"/>.</param>
        /// <returns>
        /// a serialized instance of <see cref="ForecastingSettings" /> as a <see cref="Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.Json.JsonNode" />.
        /// </returns>
        public Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.Json.JsonNode ToJson(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.Json.JsonObject container, Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.SerializationMode serializationMode)
        {
            container = container ?? new Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.Json.JsonObject();

            bool returnNow = false;
            BeforeToJson(ref container, ref returnNow);
            if (returnNow)
            {
                return container;
            }
            AddIf( null != this._forecastHorizon ? (Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.Json.JsonNode) this._forecastHorizon.ToJson(null,serializationMode) : null, "forecastHorizon" ,container.Add );
            AddIf( null != this._seasonality ? (Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.Json.JsonNode) this._seasonality.ToJson(null,serializationMode) : null, "seasonality" ,container.Add );
            AddIf( null != this._targetLag ? (Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.Json.JsonNode) this._targetLag.ToJson(null,serializationMode) : null, "targetLags" ,container.Add );
            AddIf( null != this._targetRollingWindowSize ? (Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.Json.JsonNode) this._targetRollingWindowSize.ToJson(null,serializationMode) : null, "targetRollingWindowSize" ,container.Add );
            AddIf( null != (((object)this._countryOrRegionForHoliday)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.Json.JsonString(this._countryOrRegionForHoliday.ToString()) : null, "countryOrRegionForHolidays" ,container.Add );
            AddIf( null != this._cvStepSize ? (Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.Json.JsonNode)new Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.Json.JsonNumber((int)this._cvStepSize) : null, "cvStepSize" ,container.Add );
            AddIf( null != (((object)this._featureLag)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.Json.JsonString(this._featureLag.ToString()) : null, "featureLags" ,container.Add );
            AddIf( null != (((object)this._frequency)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.Json.JsonString(this._frequency.ToString()) : null, "frequency" ,container.Add );
            AddIf( null != (((object)this._shortSeriesHandlingConfig)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.Json.JsonString(this._shortSeriesHandlingConfig.ToString()) : null, "shortSeriesHandlingConfig" ,container.Add );
            AddIf( null != (((object)this._targetAggregateFunction)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.Json.JsonString(this._targetAggregateFunction.ToString()) : null, "targetAggregateFunction" ,container.Add );
            AddIf( null != (((object)this._timeColumnName)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.Json.JsonString(this._timeColumnName.ToString()) : null, "timeColumnName" ,container.Add );
            if (null != this._timeSeriesIdColumnName)
            {
                var __w = new Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.Json.XNodeArray();
                foreach( var __x in this._timeSeriesIdColumnName )
                {
                    AddIf(null != (((object)__x)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.Json.JsonString(__x.ToString()) : null ,__w.Add);
                }
                container.Add("timeSeriesIdColumnNames",__w);
            }
            AddIf( null != (((object)this._useStl)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.Json.JsonString(this._useStl.ToString()) : null, "useStl" ,container.Add );
            AfterToJson(ref container);
            return container;
        }
    }
}