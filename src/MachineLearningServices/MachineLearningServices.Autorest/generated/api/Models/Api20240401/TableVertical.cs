// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401
{
    using static Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.Extensions;

    /// <summary>
    /// Abstract class for AutoML tasks that use table dataset as input - such as Classification/Regression/Forecasting.
    /// </summary>
    public partial class TableVertical :
        Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.ITableVertical,
        Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.ITableVerticalInternal
    {

        /// <summary>Backing field for <see cref="CvSplitColumnName" /> property.</summary>
        private string[] _cvSplitColumnName;

        /// <summary>Columns to use for CVSplit data.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Owned)]
        public string[] CvSplitColumnName { get => this._cvSplitColumnName; set => this._cvSplitColumnName = value; }

        /// <summary>Backing field for <see cref="FeaturizationSetting" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.ITableVerticalFeaturizationSettings _featurizationSetting;

        /// <summary>Featurization inputs needed for AutoML job.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.ITableVerticalFeaturizationSettings FeaturizationSetting { get => (this._featurizationSetting = this._featurizationSetting ?? new Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.TableVerticalFeaturizationSettings()); set => this._featurizationSetting = value; }

        /// <summary>These transformers shall not be used in featurization.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Support.BlockedTransformers[] FeaturizationSettingBlockedTransformer { get => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.ITableVerticalFeaturizationSettingsInternal)FeaturizationSetting).BlockedTransformer; set => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.ITableVerticalFeaturizationSettingsInternal)FeaturizationSetting).BlockedTransformer = value ?? null /* arrayOf */; }

        /// <summary>Dictionary of column name and its type (int, float, string, datetime etc).</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.ITableVerticalFeaturizationSettingsColumnNameAndTypes FeaturizationSettingColumnNameAndType { get => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.ITableVerticalFeaturizationSettingsInternal)FeaturizationSetting).ColumnNameAndType; set => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.ITableVerticalFeaturizationSettingsInternal)FeaturizationSetting).ColumnNameAndType = value ?? null /* model class */; }

        /// <summary>Dataset language, useful for the text data.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Inlined)]
        public string FeaturizationSettingDatasetLanguage { get => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IFeaturizationSettingsInternal)FeaturizationSetting).DatasetLanguage; set => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IFeaturizationSettingsInternal)FeaturizationSetting).DatasetLanguage = value ?? null; }

        /// <summary>Determines whether to use Dnn based featurizers for data featurization.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Inlined)]
        public bool? FeaturizationSettingEnableDnnFeaturization { get => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.ITableVerticalFeaturizationSettingsInternal)FeaturizationSetting).EnableDnnFeaturization; set => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.ITableVerticalFeaturizationSettingsInternal)FeaturizationSetting).EnableDnnFeaturization = value ?? default(bool); }

        /// <summary>
        /// Featurization mode - User can keep the default 'Auto' mode and AutoML will take care of necessary transformation of the
        /// data in featurization phase.
        /// If 'Off' is selected then no featurization is done.
        /// If 'Custom' is selected then user can specify additional inputs to customize how featurization is done.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Support.FeaturizationMode? FeaturizationSettingMode { get => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.ITableVerticalFeaturizationSettingsInternal)FeaturizationSetting).Mode; set => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.ITableVerticalFeaturizationSettingsInternal)FeaturizationSetting).Mode = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Support.FeaturizationMode)""); }

        /// <summary>
        /// User can specify additional transformers to be used along with the columns to which it would be applied and parameters
        /// for the transformer constructor.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.ITableVerticalFeaturizationSettingsTransformerParams FeaturizationSettingTransformerParam { get => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.ITableVerticalFeaturizationSettingsInternal)FeaturizationSetting).TransformerParam; set => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.ITableVerticalFeaturizationSettingsInternal)FeaturizationSetting).TransformerParam = value ?? null /* model class */; }

        /// <summary>Backing field for <see cref="LimitSetting" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.ITableVerticalLimitSettings _limitSetting;

        /// <summary>Execution constraints for AutoMLJob.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.ITableVerticalLimitSettings LimitSetting { get => (this._limitSetting = this._limitSetting ?? new Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.TableVerticalLimitSettings()); set => this._limitSetting = value; }

        /// <summary>
        /// Enable early termination, determines whether or not if AutoMLJob will terminate early if there is no score improvement
        /// in last 20 iterations.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Inlined)]
        public bool? LimitSettingEnableEarlyTermination { get => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.ITableVerticalLimitSettingsInternal)LimitSetting).EnableEarlyTermination; set => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.ITableVerticalLimitSettingsInternal)LimitSetting).EnableEarlyTermination = value ?? default(bool); }

        /// <summary>Exit score for the AutoML job.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Inlined)]
        public double? LimitSettingExitScore { get => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.ITableVerticalLimitSettingsInternal)LimitSetting).ExitScore; set => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.ITableVerticalLimitSettingsInternal)LimitSetting).ExitScore = value ?? default(double); }

        /// <summary>Maximum Concurrent iterations.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Inlined)]
        public int? LimitSettingMaxConcurrentTrial { get => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.ITableVerticalLimitSettingsInternal)LimitSetting).MaxConcurrentTrial; set => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.ITableVerticalLimitSettingsInternal)LimitSetting).MaxConcurrentTrial = value ?? default(int); }

        /// <summary>Max cores per iteration.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Inlined)]
        public int? LimitSettingMaxCoresPerTrial { get => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.ITableVerticalLimitSettingsInternal)LimitSetting).MaxCoresPerTrial; set => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.ITableVerticalLimitSettingsInternal)LimitSetting).MaxCoresPerTrial = value ?? default(int); }

        /// <summary>Number of iterations.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Inlined)]
        public int? LimitSettingMaxTrial { get => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.ITableVerticalLimitSettingsInternal)LimitSetting).MaxTrial; set => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.ITableVerticalLimitSettingsInternal)LimitSetting).MaxTrial = value ?? default(int); }

        /// <summary>AutoML job timeout.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Inlined)]
        public global::System.TimeSpan? LimitSettingTimeout { get => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.ITableVerticalLimitSettingsInternal)LimitSetting).Timeout; set => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.ITableVerticalLimitSettingsInternal)LimitSetting).Timeout = value ?? default(global::System.TimeSpan); }

        /// <summary>Iteration timeout.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Inlined)]
        public global::System.TimeSpan? LimitSettingTrialTimeout { get => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.ITableVerticalLimitSettingsInternal)LimitSetting).TrialTimeout; set => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.ITableVerticalLimitSettingsInternal)LimitSetting).TrialTimeout = value ?? default(global::System.TimeSpan); }

        /// <summary>Internal Acessors for FeaturizationSetting</summary>
        Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.ITableVerticalFeaturizationSettings Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.ITableVerticalInternal.FeaturizationSetting { get => (this._featurizationSetting = this._featurizationSetting ?? new Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.TableVerticalFeaturizationSettings()); set { {_featurizationSetting = value;} } }

        /// <summary>Internal Acessors for LimitSetting</summary>
        Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.ITableVerticalLimitSettings Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.ITableVerticalInternal.LimitSetting { get => (this._limitSetting = this._limitSetting ?? new Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.TableVerticalLimitSettings()); set { {_limitSetting = value;} } }

        /// <summary>Internal Acessors for NCrossValidation</summary>
        Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.INCrossValidations Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.ITableVerticalInternal.NCrossValidation { get => (this._nCrossValidation = this._nCrossValidation ?? new Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.NCrossValidations()); set { {_nCrossValidation = value;} } }

        /// <summary>Internal Acessors for TestData</summary>
        Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IMlTableJobInput Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.ITableVerticalInternal.TestData { get => (this._testData = this._testData ?? new Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.MlTableJobInput()); set { {_testData = value;} } }

        /// <summary>Internal Acessors for ValidationData</summary>
        Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IMlTableJobInput Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.ITableVerticalInternal.ValidationData { get => (this._validationData = this._validationData ?? new Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.MlTableJobInput()); set { {_validationData = value;} } }

        /// <summary>Backing field for <see cref="NCrossValidation" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.INCrossValidations _nCrossValidation;

        /// <summary>
        /// Number of cross validation folds to be applied on training dataset
        /// when validation dataset is not provided.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.INCrossValidations NCrossValidation { get => (this._nCrossValidation = this._nCrossValidation ?? new Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.NCrossValidations()); set => this._nCrossValidation = value; }

        /// <summary>[Required] Mode for determining N-Cross validations.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Support.NCrossValidationsMode? NCrossValidationMode { get => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.INCrossValidationsInternal)NCrossValidation).Mode; set => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.INCrossValidationsInternal)NCrossValidation).Mode = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Support.NCrossValidationsMode)""); }

        /// <summary>Backing field for <see cref="TestData" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IMlTableJobInput _testData;

        /// <summary>Test data input.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IMlTableJobInput TestData { get => (this._testData = this._testData ?? new Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.MlTableJobInput()); set => this._testData = value; }

        /// <summary>Description for the input.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Inlined)]
        public string TestDataDescription { get => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IJobInputInternal)TestData).Description; set => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IJobInputInternal)TestData).Description = value ?? null; }

        /// <summary>[Required] Specifies the type of job.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Support.JobInputType? TestDataJobInputType { get => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IJobInputInternal)TestData).Type; set => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IJobInputInternal)TestData).Type = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Support.JobInputType)""); }

        /// <summary>Input Asset Delivery Mode.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Support.InputDeliveryMode? TestDataMode { get => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IAssetJobInputInternal)TestData).Mode; set => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IAssetJobInputInternal)TestData).Mode = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Support.InputDeliveryMode)""); }

        /// <summary>Backing field for <see cref="TestDataSize" /> property.</summary>
        private double? _testDataSize;

        /// <summary>
        /// The fraction of test dataset that needs to be set aside for validation purpose.
        /// Values between (0.0 , 1.0)
        /// Applied when validation dataset is not provided.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Owned)]
        public double? TestDataSize { get => this._testDataSize; set => this._testDataSize = value; }

        /// <summary>[Required] Input Asset URI.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Inlined)]
        public string TestDataUri { get => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IAssetJobInputInternal)TestData).Uri; set => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IAssetJobInputInternal)TestData).Uri = value ?? null; }

        /// <summary>Backing field for <see cref="ValidationData" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IMlTableJobInput _validationData;

        /// <summary>Validation data inputs.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IMlTableJobInput ValidationData { get => (this._validationData = this._validationData ?? new Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.MlTableJobInput()); set => this._validationData = value; }

        /// <summary>Description for the input.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Inlined)]
        public string ValidationDataDescription { get => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IJobInputInternal)ValidationData).Description; set => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IJobInputInternal)ValidationData).Description = value ?? null; }

        /// <summary>[Required] Specifies the type of job.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Support.JobInputType? ValidationDataJobInputType { get => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IJobInputInternal)ValidationData).Type; set => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IJobInputInternal)ValidationData).Type = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Support.JobInputType)""); }

        /// <summary>Input Asset Delivery Mode.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Support.InputDeliveryMode? ValidationDataMode { get => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IAssetJobInputInternal)ValidationData).Mode; set => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IAssetJobInputInternal)ValidationData).Mode = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Support.InputDeliveryMode)""); }

        /// <summary>Backing field for <see cref="ValidationDataSize" /> property.</summary>
        private double? _validationDataSize;

        /// <summary>
        /// The fraction of training dataset that needs to be set aside for validation purpose.
        /// Values between (0.0 , 1.0)
        /// Applied when validation dataset is not provided.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Owned)]
        public double? ValidationDataSize { get => this._validationDataSize; set => this._validationDataSize = value; }

        /// <summary>[Required] Input Asset URI.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Inlined)]
        public string ValidationDataUri { get => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IAssetJobInputInternal)ValidationData).Uri; set => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IAssetJobInputInternal)ValidationData).Uri = value ?? null; }

        /// <summary>Backing field for <see cref="WeightColumnName" /> property.</summary>
        private string _weightColumnName;

        /// <summary>
        /// The name of the sample weight column. Automated ML supports a weighted column as an input, causing rows in the data to
        /// be weighted up or down.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Owned)]
        public string WeightColumnName { get => this._weightColumnName; set => this._weightColumnName = value; }

        /// <summary>Creates an new <see cref="TableVertical" /> instance.</summary>
        public TableVertical()
        {

        }
    }
    /// Abstract class for AutoML tasks that use table dataset as input - such as Classification/Regression/Forecasting.
    public partial interface ITableVertical :
        Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.IJsonSerializable
    {
        /// <summary>Columns to use for CVSplit data.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Columns to use for CVSplit data.",
        SerializedName = @"cvSplitColumnNames",
        PossibleTypes = new [] { typeof(string) })]
        string[] CvSplitColumnName { get; set; }
        /// <summary>These transformers shall not be used in featurization.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"These transformers shall not be used in featurization.",
        SerializedName = @"blockedTransformers",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Support.BlockedTransformers) })]
        Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Support.BlockedTransformers[] FeaturizationSettingBlockedTransformer { get; set; }
        /// <summary>Dictionary of column name and its type (int, float, string, datetime etc).</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Dictionary of column name and its type (int, float, string, datetime etc).",
        SerializedName = @"columnNameAndTypes",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.ITableVerticalFeaturizationSettingsColumnNameAndTypes) })]
        Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.ITableVerticalFeaturizationSettingsColumnNameAndTypes FeaturizationSettingColumnNameAndType { get; set; }
        /// <summary>Dataset language, useful for the text data.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Dataset language, useful for the text data.",
        SerializedName = @"datasetLanguage",
        PossibleTypes = new [] { typeof(string) })]
        string FeaturizationSettingDatasetLanguage { get; set; }
        /// <summary>Determines whether to use Dnn based featurizers for data featurization.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Determines whether to use Dnn based featurizers for data featurization.",
        SerializedName = @"enableDnnFeaturization",
        PossibleTypes = new [] { typeof(bool) })]
        bool? FeaturizationSettingEnableDnnFeaturization { get; set; }
        /// <summary>
        /// Featurization mode - User can keep the default 'Auto' mode and AutoML will take care of necessary transformation of the
        /// data in featurization phase.
        /// If 'Off' is selected then no featurization is done.
        /// If 'Custom' is selected then user can specify additional inputs to customize how featurization is done.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Featurization mode - User can keep the default 'Auto' mode and AutoML will take care of necessary transformation of the data in featurization phase.
        If 'Off' is selected then no featurization is done.
        If 'Custom' is selected then user can specify additional inputs to customize how featurization is done.",
        SerializedName = @"mode",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Support.FeaturizationMode) })]
        Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Support.FeaturizationMode? FeaturizationSettingMode { get; set; }
        /// <summary>
        /// User can specify additional transformers to be used along with the columns to which it would be applied and parameters
        /// for the transformer constructor.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"User can specify additional transformers to be used along with the columns to which it would be applied and parameters for the transformer constructor.",
        SerializedName = @"transformerParams",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.ITableVerticalFeaturizationSettingsTransformerParams) })]
        Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.ITableVerticalFeaturizationSettingsTransformerParams FeaturizationSettingTransformerParam { get; set; }
        /// <summary>
        /// Enable early termination, determines whether or not if AutoMLJob will terminate early if there is no score improvement
        /// in last 20 iterations.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Enable early termination, determines whether or not if AutoMLJob will terminate early if there is no score improvement in last 20 iterations.",
        SerializedName = @"enableEarlyTermination",
        PossibleTypes = new [] { typeof(bool) })]
        bool? LimitSettingEnableEarlyTermination { get; set; }
        /// <summary>Exit score for the AutoML job.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Exit score for the AutoML job.",
        SerializedName = @"exitScore",
        PossibleTypes = new [] { typeof(double) })]
        double? LimitSettingExitScore { get; set; }
        /// <summary>Maximum Concurrent iterations.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Maximum Concurrent iterations.",
        SerializedName = @"maxConcurrentTrials",
        PossibleTypes = new [] { typeof(int) })]
        int? LimitSettingMaxConcurrentTrial { get; set; }
        /// <summary>Max cores per iteration.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Max cores per iteration.",
        SerializedName = @"maxCoresPerTrial",
        PossibleTypes = new [] { typeof(int) })]
        int? LimitSettingMaxCoresPerTrial { get; set; }
        /// <summary>Number of iterations.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Number of iterations.",
        SerializedName = @"maxTrials",
        PossibleTypes = new [] { typeof(int) })]
        int? LimitSettingMaxTrial { get; set; }
        /// <summary>AutoML job timeout.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"AutoML job timeout.",
        SerializedName = @"timeout",
        PossibleTypes = new [] { typeof(global::System.TimeSpan) })]
        global::System.TimeSpan? LimitSettingTimeout { get; set; }
        /// <summary>Iteration timeout.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Iteration timeout.",
        SerializedName = @"trialTimeout",
        PossibleTypes = new [] { typeof(global::System.TimeSpan) })]
        global::System.TimeSpan? LimitSettingTrialTimeout { get; set; }
        /// <summary>[Required] Mode for determining N-Cross validations.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"[Required] Mode for determining N-Cross validations.",
        SerializedName = @"mode",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Support.NCrossValidationsMode) })]
        Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Support.NCrossValidationsMode? NCrossValidationMode { get; set; }
        /// <summary>Description for the input.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Description for the input.",
        SerializedName = @"description",
        PossibleTypes = new [] { typeof(string) })]
        string TestDataDescription { get; set; }
        /// <summary>[Required] Specifies the type of job.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"[Required] Specifies the type of job.",
        SerializedName = @"jobInputType",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Support.JobInputType) })]
        Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Support.JobInputType? TestDataJobInputType { get; set; }
        /// <summary>Input Asset Delivery Mode.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Input Asset Delivery Mode.",
        SerializedName = @"mode",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Support.InputDeliveryMode) })]
        Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Support.InputDeliveryMode? TestDataMode { get; set; }
        /// <summary>
        /// The fraction of test dataset that needs to be set aside for validation purpose.
        /// Values between (0.0 , 1.0)
        /// Applied when validation dataset is not provided.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The fraction of test dataset that needs to be set aside for validation purpose.
        Values between (0.0 , 1.0)
        Applied when validation dataset is not provided.",
        SerializedName = @"testDataSize",
        PossibleTypes = new [] { typeof(double) })]
        double? TestDataSize { get; set; }
        /// <summary>[Required] Input Asset URI.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"[Required] Input Asset URI.",
        SerializedName = @"uri",
        PossibleTypes = new [] { typeof(string) })]
        string TestDataUri { get; set; }
        /// <summary>Description for the input.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Description for the input.",
        SerializedName = @"description",
        PossibleTypes = new [] { typeof(string) })]
        string ValidationDataDescription { get; set; }
        /// <summary>[Required] Specifies the type of job.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"[Required] Specifies the type of job.",
        SerializedName = @"jobInputType",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Support.JobInputType) })]
        Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Support.JobInputType? ValidationDataJobInputType { get; set; }
        /// <summary>Input Asset Delivery Mode.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Input Asset Delivery Mode.",
        SerializedName = @"mode",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Support.InputDeliveryMode) })]
        Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Support.InputDeliveryMode? ValidationDataMode { get; set; }
        /// <summary>
        /// The fraction of training dataset that needs to be set aside for validation purpose.
        /// Values between (0.0 , 1.0)
        /// Applied when validation dataset is not provided.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The fraction of training dataset that needs to be set aside for validation purpose.
        Values between (0.0 , 1.0)
        Applied when validation dataset is not provided.",
        SerializedName = @"validationDataSize",
        PossibleTypes = new [] { typeof(double) })]
        double? ValidationDataSize { get; set; }
        /// <summary>[Required] Input Asset URI.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"[Required] Input Asset URI.",
        SerializedName = @"uri",
        PossibleTypes = new [] { typeof(string) })]
        string ValidationDataUri { get; set; }
        /// <summary>
        /// The name of the sample weight column. Automated ML supports a weighted column as an input, causing rows in the data to
        /// be weighted up or down.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The name of the sample weight column. Automated ML supports a weighted column as an input, causing rows in the data to be weighted up or down.",
        SerializedName = @"weightColumnName",
        PossibleTypes = new [] { typeof(string) })]
        string WeightColumnName { get; set; }

    }
    /// Abstract class for AutoML tasks that use table dataset as input - such as Classification/Regression/Forecasting.
    internal partial interface ITableVerticalInternal

    {
        /// <summary>Columns to use for CVSplit data.</summary>
        string[] CvSplitColumnName { get; set; }
        /// <summary>Featurization inputs needed for AutoML job.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.ITableVerticalFeaturizationSettings FeaturizationSetting { get; set; }
        /// <summary>These transformers shall not be used in featurization.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Support.BlockedTransformers[] FeaturizationSettingBlockedTransformer { get; set; }
        /// <summary>Dictionary of column name and its type (int, float, string, datetime etc).</summary>
        Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.ITableVerticalFeaturizationSettingsColumnNameAndTypes FeaturizationSettingColumnNameAndType { get; set; }
        /// <summary>Dataset language, useful for the text data.</summary>
        string FeaturizationSettingDatasetLanguage { get; set; }
        /// <summary>Determines whether to use Dnn based featurizers for data featurization.</summary>
        bool? FeaturizationSettingEnableDnnFeaturization { get; set; }
        /// <summary>
        /// Featurization mode - User can keep the default 'Auto' mode and AutoML will take care of necessary transformation of the
        /// data in featurization phase.
        /// If 'Off' is selected then no featurization is done.
        /// If 'Custom' is selected then user can specify additional inputs to customize how featurization is done.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Support.FeaturizationMode? FeaturizationSettingMode { get; set; }
        /// <summary>
        /// User can specify additional transformers to be used along with the columns to which it would be applied and parameters
        /// for the transformer constructor.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.ITableVerticalFeaturizationSettingsTransformerParams FeaturizationSettingTransformerParam { get; set; }
        /// <summary>Execution constraints for AutoMLJob.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.ITableVerticalLimitSettings LimitSetting { get; set; }
        /// <summary>
        /// Enable early termination, determines whether or not if AutoMLJob will terminate early if there is no score improvement
        /// in last 20 iterations.
        /// </summary>
        bool? LimitSettingEnableEarlyTermination { get; set; }
        /// <summary>Exit score for the AutoML job.</summary>
        double? LimitSettingExitScore { get; set; }
        /// <summary>Maximum Concurrent iterations.</summary>
        int? LimitSettingMaxConcurrentTrial { get; set; }
        /// <summary>Max cores per iteration.</summary>
        int? LimitSettingMaxCoresPerTrial { get; set; }
        /// <summary>Number of iterations.</summary>
        int? LimitSettingMaxTrial { get; set; }
        /// <summary>AutoML job timeout.</summary>
        global::System.TimeSpan? LimitSettingTimeout { get; set; }
        /// <summary>Iteration timeout.</summary>
        global::System.TimeSpan? LimitSettingTrialTimeout { get; set; }
        /// <summary>
        /// Number of cross validation folds to be applied on training dataset
        /// when validation dataset is not provided.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.INCrossValidations NCrossValidation { get; set; }
        /// <summary>[Required] Mode for determining N-Cross validations.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Support.NCrossValidationsMode? NCrossValidationMode { get; set; }
        /// <summary>Test data input.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IMlTableJobInput TestData { get; set; }
        /// <summary>Description for the input.</summary>
        string TestDataDescription { get; set; }
        /// <summary>[Required] Specifies the type of job.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Support.JobInputType? TestDataJobInputType { get; set; }
        /// <summary>Input Asset Delivery Mode.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Support.InputDeliveryMode? TestDataMode { get; set; }
        /// <summary>
        /// The fraction of test dataset that needs to be set aside for validation purpose.
        /// Values between (0.0 , 1.0)
        /// Applied when validation dataset is not provided.
        /// </summary>
        double? TestDataSize { get; set; }
        /// <summary>[Required] Input Asset URI.</summary>
        string TestDataUri { get; set; }
        /// <summary>Validation data inputs.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IMlTableJobInput ValidationData { get; set; }
        /// <summary>Description for the input.</summary>
        string ValidationDataDescription { get; set; }
        /// <summary>[Required] Specifies the type of job.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Support.JobInputType? ValidationDataJobInputType { get; set; }
        /// <summary>Input Asset Delivery Mode.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Support.InputDeliveryMode? ValidationDataMode { get; set; }
        /// <summary>
        /// The fraction of training dataset that needs to be set aside for validation purpose.
        /// Values between (0.0 , 1.0)
        /// Applied when validation dataset is not provided.
        /// </summary>
        double? ValidationDataSize { get; set; }
        /// <summary>[Required] Input Asset URI.</summary>
        string ValidationDataUri { get; set; }
        /// <summary>
        /// The name of the sample weight column. Automated ML supports a weighted column as an input, causing rows in the data to
        /// be weighted up or down.
        /// </summary>
        string WeightColumnName { get; set; }

    }
}