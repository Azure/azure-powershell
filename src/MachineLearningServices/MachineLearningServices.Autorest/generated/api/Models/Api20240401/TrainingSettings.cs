// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401
{
    using static Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.Extensions;

    /// <summary>Training related configuration.</summary>
    public partial class TrainingSettings :
        Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.ITrainingSettings,
        Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.ITrainingSettingsInternal
    {

        /// <summary>Backing field for <see cref="EnableDnnTraining" /> property.</summary>
        private bool? _enableDnnTraining;

        /// <summary>Enable recommendation of DNN models.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Owned)]
        public bool? EnableDnnTraining { get => this._enableDnnTraining; set => this._enableDnnTraining = value; }

        /// <summary>Backing field for <see cref="EnableModelExplainability" /> property.</summary>
        private bool? _enableModelExplainability;

        /// <summary>Flag to turn on explainability on best model.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Owned)]
        public bool? EnableModelExplainability { get => this._enableModelExplainability; set => this._enableModelExplainability = value; }

        /// <summary>Backing field for <see cref="EnableOnnxCompatibleModel" /> property.</summary>
        private bool? _enableOnnxCompatibleModel;

        /// <summary>Flag for enabling onnx compatible models.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Owned)]
        public bool? EnableOnnxCompatibleModel { get => this._enableOnnxCompatibleModel; set => this._enableOnnxCompatibleModel = value; }

        /// <summary>Backing field for <see cref="EnableStackEnsemble" /> property.</summary>
        private bool? _enableStackEnsemble;

        /// <summary>Enable stack ensemble run.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Owned)]
        public bool? EnableStackEnsemble { get => this._enableStackEnsemble; set => this._enableStackEnsemble = value; }

        /// <summary>Backing field for <see cref="EnableVoteEnsemble" /> property.</summary>
        private bool? _enableVoteEnsemble;

        /// <summary>Enable voting ensemble run.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Owned)]
        public bool? EnableVoteEnsemble { get => this._enableVoteEnsemble; set => this._enableVoteEnsemble = value; }

        /// <summary>Backing field for <see cref="EnsembleModelDownloadTimeout" /> property.</summary>
        private global::System.TimeSpan? _ensembleModelDownloadTimeout;

        /// <summary>
        /// During VotingEnsemble and StackEnsemble model generation, multiple fitted models from the previous child runs are downloaded.
        /// Configure this parameter with a higher value than 300 secs, if more time is needed.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Owned)]
        public global::System.TimeSpan? EnsembleModelDownloadTimeout { get => this._ensembleModelDownloadTimeout; set => this._ensembleModelDownloadTimeout = value; }

        /// <summary>Internal Acessors for StackEnsembleSetting</summary>
        Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IStackEnsembleSettings Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.ITrainingSettingsInternal.StackEnsembleSetting { get => (this._stackEnsembleSetting = this._stackEnsembleSetting ?? new Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.StackEnsembleSettings()); set { {_stackEnsembleSetting = value;} } }

        /// <summary>Backing field for <see cref="StackEnsembleSetting" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IStackEnsembleSettings _stackEnsembleSetting;

        /// <summary>Stack ensemble settings for stack ensemble run.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IStackEnsembleSettings StackEnsembleSetting { get => (this._stackEnsembleSetting = this._stackEnsembleSetting ?? new Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.StackEnsembleSettings()); set => this._stackEnsembleSetting = value; }

        /// <summary>Optional parameters to pass to the initializer of the meta-learner.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.IAny StackEnsembleSettingStackMetaLearnerKWarg { get => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IStackEnsembleSettingsInternal)StackEnsembleSetting).StackMetaLearnerKWarg; set => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IStackEnsembleSettingsInternal)StackEnsembleSetting).StackMetaLearnerKWarg = value ?? null /* model class */; }

        /// <summary>
        /// Specifies the proportion of the training set (when choosing train and validation type of training) to be reserved for
        /// training the meta-learner. Default value is 0.2.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Inlined)]
        public double? StackEnsembleSettingStackMetaLearnerTrainPercentage { get => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IStackEnsembleSettingsInternal)StackEnsembleSetting).StackMetaLearnerTrainPercentage; set => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IStackEnsembleSettingsInternal)StackEnsembleSetting).StackMetaLearnerTrainPercentage = value ?? default(double); }

        /// <summary>
        /// The meta-learner is a model trained on the output of the individual heterogeneous models.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Support.StackMetaLearnerType? StackEnsembleSettingStackMetaLearnerType { get => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IStackEnsembleSettingsInternal)StackEnsembleSetting).StackMetaLearnerType; set => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IStackEnsembleSettingsInternal)StackEnsembleSetting).StackMetaLearnerType = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Support.StackMetaLearnerType)""); }

        /// <summary>Creates an new <see cref="TrainingSettings" /> instance.</summary>
        public TrainingSettings()
        {

        }
    }
    /// Training related configuration.
    public partial interface ITrainingSettings :
        Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.IJsonSerializable
    {
        /// <summary>Enable recommendation of DNN models.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Enable recommendation of DNN models.",
        SerializedName = @"enableDnnTraining",
        PossibleTypes = new [] { typeof(bool) })]
        bool? EnableDnnTraining { get; set; }
        /// <summary>Flag to turn on explainability on best model.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Flag to turn on explainability on best model.",
        SerializedName = @"enableModelExplainability",
        PossibleTypes = new [] { typeof(bool) })]
        bool? EnableModelExplainability { get; set; }
        /// <summary>Flag for enabling onnx compatible models.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Flag for enabling onnx compatible models.",
        SerializedName = @"enableOnnxCompatibleModels",
        PossibleTypes = new [] { typeof(bool) })]
        bool? EnableOnnxCompatibleModel { get; set; }
        /// <summary>Enable stack ensemble run.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Enable stack ensemble run.",
        SerializedName = @"enableStackEnsemble",
        PossibleTypes = new [] { typeof(bool) })]
        bool? EnableStackEnsemble { get; set; }
        /// <summary>Enable voting ensemble run.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Enable voting ensemble run.",
        SerializedName = @"enableVoteEnsemble",
        PossibleTypes = new [] { typeof(bool) })]
        bool? EnableVoteEnsemble { get; set; }
        /// <summary>
        /// During VotingEnsemble and StackEnsemble model generation, multiple fitted models from the previous child runs are downloaded.
        /// Configure this parameter with a higher value than 300 secs, if more time is needed.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"During VotingEnsemble and StackEnsemble model generation, multiple fitted models from the previous child runs are downloaded.
        Configure this parameter with a higher value than 300 secs, if more time is needed.",
        SerializedName = @"ensembleModelDownloadTimeout",
        PossibleTypes = new [] { typeof(global::System.TimeSpan) })]
        global::System.TimeSpan? EnsembleModelDownloadTimeout { get; set; }
        /// <summary>Optional parameters to pass to the initializer of the meta-learner.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Optional parameters to pass to the initializer of the meta-learner.",
        SerializedName = @"stackMetaLearnerKWargs",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.IAny) })]
        Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.IAny StackEnsembleSettingStackMetaLearnerKWarg { get; set; }
        /// <summary>
        /// Specifies the proportion of the training set (when choosing train and validation type of training) to be reserved for
        /// training the meta-learner. Default value is 0.2.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Specifies the proportion of the training set (when choosing train and validation type of training) to be reserved for training the meta-learner. Default value is 0.2.",
        SerializedName = @"stackMetaLearnerTrainPercentage",
        PossibleTypes = new [] { typeof(double) })]
        double? StackEnsembleSettingStackMetaLearnerTrainPercentage { get; set; }
        /// <summary>
        /// The meta-learner is a model trained on the output of the individual heterogeneous models.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The meta-learner is a model trained on the output of the individual heterogeneous models.",
        SerializedName = @"stackMetaLearnerType",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Support.StackMetaLearnerType) })]
        Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Support.StackMetaLearnerType? StackEnsembleSettingStackMetaLearnerType { get; set; }

    }
    /// Training related configuration.
    internal partial interface ITrainingSettingsInternal

    {
        /// <summary>Enable recommendation of DNN models.</summary>
        bool? EnableDnnTraining { get; set; }
        /// <summary>Flag to turn on explainability on best model.</summary>
        bool? EnableModelExplainability { get; set; }
        /// <summary>Flag for enabling onnx compatible models.</summary>
        bool? EnableOnnxCompatibleModel { get; set; }
        /// <summary>Enable stack ensemble run.</summary>
        bool? EnableStackEnsemble { get; set; }
        /// <summary>Enable voting ensemble run.</summary>
        bool? EnableVoteEnsemble { get; set; }
        /// <summary>
        /// During VotingEnsemble and StackEnsemble model generation, multiple fitted models from the previous child runs are downloaded.
        /// Configure this parameter with a higher value than 300 secs, if more time is needed.
        /// </summary>
        global::System.TimeSpan? EnsembleModelDownloadTimeout { get; set; }
        /// <summary>Stack ensemble settings for stack ensemble run.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IStackEnsembleSettings StackEnsembleSetting { get; set; }
        /// <summary>Optional parameters to pass to the initializer of the meta-learner.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.IAny StackEnsembleSettingStackMetaLearnerKWarg { get; set; }
        /// <summary>
        /// Specifies the proportion of the training set (when choosing train and validation type of training) to be reserved for
        /// training the meta-learner. Default value is 0.2.
        /// </summary>
        double? StackEnsembleSettingStackMetaLearnerTrainPercentage { get; set; }
        /// <summary>
        /// The meta-learner is a model trained on the output of the individual heterogeneous models.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Support.StackMetaLearnerType? StackEnsembleSettingStackMetaLearnerType { get; set; }

    }
}