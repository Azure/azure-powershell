// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401
{
    using static Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.Extensions;

    public partial class PendingUploadResponseDto :
        Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IPendingUploadResponseDto,
        Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IPendingUploadResponseDtoInternal
    {

        /// <summary>Backing field for <see cref="BlobReferenceForConsumption" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IBlobReferenceForConsumptionDto _blobReferenceForConsumption;

        /// <summary>Container level read, write, list SAS</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IBlobReferenceForConsumptionDto BlobReferenceForConsumption { get => (this._blobReferenceForConsumption = this._blobReferenceForConsumption ?? new Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.BlobReferenceForConsumptionDto()); set => this._blobReferenceForConsumption = value; }

        /// <summary>
        /// Blob URI path for client to upload data.
        /// Example: https://blob.windows.core.net/Container/Path
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Inlined)]
        public string BlobReferenceForConsumptionBlobUri { get => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IBlobReferenceForConsumptionDtoInternal)BlobReferenceForConsumption).BlobUri; set => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IBlobReferenceForConsumptionDtoInternal)BlobReferenceForConsumption).BlobUri = value ?? null; }

        /// <summary>Arm ID of the storage account to use</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Inlined)]
        public string BlobReferenceForConsumptionStorageAccountArmId { get => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IBlobReferenceForConsumptionDtoInternal)BlobReferenceForConsumption).StorageAccountArmId; set => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IBlobReferenceForConsumptionDtoInternal)BlobReferenceForConsumption).StorageAccountArmId = value ?? null; }

        /// <summary>[Required] Credential type used to authentication with storage.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Inlined)]
        public string CredentialType { get => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IBlobReferenceForConsumptionDtoInternal)BlobReferenceForConsumption).CredentialType; }

        /// <summary>Internal Acessors for BlobReferenceForConsumption</summary>
        Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IBlobReferenceForConsumptionDto Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IPendingUploadResponseDtoInternal.BlobReferenceForConsumption { get => (this._blobReferenceForConsumption = this._blobReferenceForConsumption ?? new Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.BlobReferenceForConsumptionDto()); set { {_blobReferenceForConsumption = value;} } }

        /// <summary>Internal Acessors for BlobReferenceForConsumptionCredential</summary>
        Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IPendingUploadCredentialDto Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IPendingUploadResponseDtoInternal.BlobReferenceForConsumptionCredential { get => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IBlobReferenceForConsumptionDtoInternal)BlobReferenceForConsumption).Credential; set => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IBlobReferenceForConsumptionDtoInternal)BlobReferenceForConsumption).Credential = value; }

        /// <summary>Internal Acessors for CredentialType</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IPendingUploadResponseDtoInternal.CredentialType { get => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IBlobReferenceForConsumptionDtoInternal)BlobReferenceForConsumption).CredentialType; set => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IBlobReferenceForConsumptionDtoInternal)BlobReferenceForConsumption).CredentialType = value; }

        /// <summary>Backing field for <see cref="PendingUploadId" /> property.</summary>
        private string _pendingUploadId;

        /// <summary>ID for this upload request</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Owned)]
        public string PendingUploadId { get => this._pendingUploadId; set => this._pendingUploadId = value; }

        /// <summary>Backing field for <see cref="PendingUploadType" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Support.PendingUploadType? _pendingUploadType;

        /// <summary>TemporaryBlobReference is the only supported type</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Support.PendingUploadType? PendingUploadType { get => this._pendingUploadType; set => this._pendingUploadType = value; }

        /// <summary>Creates an new <see cref="PendingUploadResponseDto" /> instance.</summary>
        public PendingUploadResponseDto()
        {

        }
    }
    public partial interface IPendingUploadResponseDto :
        Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.IJsonSerializable
    {
        /// <summary>
        /// Blob URI path for client to upload data.
        /// Example: https://blob.windows.core.net/Container/Path
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Blob URI path for client to upload data.
        Example: https://blob.windows.core.net/Container/Path",
        SerializedName = @"blobUri",
        PossibleTypes = new [] { typeof(string) })]
        string BlobReferenceForConsumptionBlobUri { get; set; }
        /// <summary>Arm ID of the storage account to use</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Arm ID of the storage account to use",
        SerializedName = @"storageAccountArmId",
        PossibleTypes = new [] { typeof(string) })]
        string BlobReferenceForConsumptionStorageAccountArmId { get; set; }
        /// <summary>[Required] Credential type used to authentication with storage.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"[Required] Credential type used to authentication with storage.",
        SerializedName = @"credentialType",
        PossibleTypes = new [] { typeof(string) })]
        string CredentialType { get;  }
        /// <summary>ID for this upload request</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"ID for this upload request",
        SerializedName = @"pendingUploadId",
        PossibleTypes = new [] { typeof(string) })]
        string PendingUploadId { get; set; }
        /// <summary>TemporaryBlobReference is the only supported type</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"TemporaryBlobReference is the only supported type",
        SerializedName = @"pendingUploadType",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Support.PendingUploadType) })]
        Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Support.PendingUploadType? PendingUploadType { get; set; }

    }
    internal partial interface IPendingUploadResponseDtoInternal

    {
        /// <summary>Container level read, write, list SAS</summary>
        Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IBlobReferenceForConsumptionDto BlobReferenceForConsumption { get; set; }
        /// <summary>
        /// Blob URI path for client to upload data.
        /// Example: https://blob.windows.core.net/Container/Path
        /// </summary>
        string BlobReferenceForConsumptionBlobUri { get; set; }
        /// <summary>Credential info to access storage account</summary>
        Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IPendingUploadCredentialDto BlobReferenceForConsumptionCredential { get; set; }
        /// <summary>Arm ID of the storage account to use</summary>
        string BlobReferenceForConsumptionStorageAccountArmId { get; set; }
        /// <summary>[Required] Credential type used to authentication with storage.</summary>
        string CredentialType { get; set; }
        /// <summary>ID for this upload request</summary>
        string PendingUploadId { get; set; }
        /// <summary>TemporaryBlobReference is the only supported type</summary>
        Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Support.PendingUploadType? PendingUploadType { get; set; }

    }
}