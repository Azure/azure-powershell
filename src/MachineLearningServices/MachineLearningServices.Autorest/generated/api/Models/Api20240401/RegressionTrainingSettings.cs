// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401
{
    using static Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.Extensions;

    /// <summary>Regression Training related configuration.</summary>
    public partial class RegressionTrainingSettings :
        Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IRegressionTrainingSettings,
        Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IRegressionTrainingSettingsInternal,
        Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.IValidates
    {
        /// <summary>
        /// Backing field for Inherited model <see cref= "Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.ITrainingSettings"
        /// />
        /// </summary>
        private Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.ITrainingSettings __trainingSettings = new Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.TrainingSettings();

        /// <summary>Backing field for <see cref="AllowedTrainingAlgorithm" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Support.RegressionModels[] _allowedTrainingAlgorithm;

        /// <summary>Allowed models for regression task.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Support.RegressionModels[] AllowedTrainingAlgorithm { get => this._allowedTrainingAlgorithm; set => this._allowedTrainingAlgorithm = value; }

        /// <summary>Backing field for <see cref="BlockedTrainingAlgorithm" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Support.RegressionModels[] _blockedTrainingAlgorithm;

        /// <summary>Blocked models for regression task.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Support.RegressionModels[] BlockedTrainingAlgorithm { get => this._blockedTrainingAlgorithm; set => this._blockedTrainingAlgorithm = value; }

        /// <summary>Enable recommendation of DNN models.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Inherited)]
        public bool? EnableDnnTraining { get => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.ITrainingSettingsInternal)__trainingSettings).EnableDnnTraining; set => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.ITrainingSettingsInternal)__trainingSettings).EnableDnnTraining = value ?? default(bool); }

        /// <summary>Flag to turn on explainability on best model.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Inherited)]
        public bool? EnableModelExplainability { get => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.ITrainingSettingsInternal)__trainingSettings).EnableModelExplainability; set => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.ITrainingSettingsInternal)__trainingSettings).EnableModelExplainability = value ?? default(bool); }

        /// <summary>Flag for enabling onnx compatible models.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Inherited)]
        public bool? EnableOnnxCompatibleModel { get => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.ITrainingSettingsInternal)__trainingSettings).EnableOnnxCompatibleModel; set => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.ITrainingSettingsInternal)__trainingSettings).EnableOnnxCompatibleModel = value ?? default(bool); }

        /// <summary>Enable stack ensemble run.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Inherited)]
        public bool? EnableStackEnsemble { get => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.ITrainingSettingsInternal)__trainingSettings).EnableStackEnsemble; set => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.ITrainingSettingsInternal)__trainingSettings).EnableStackEnsemble = value ?? default(bool); }

        /// <summary>Enable voting ensemble run.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Inherited)]
        public bool? EnableVoteEnsemble { get => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.ITrainingSettingsInternal)__trainingSettings).EnableVoteEnsemble; set => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.ITrainingSettingsInternal)__trainingSettings).EnableVoteEnsemble = value ?? default(bool); }

        /// <summary>
        /// During VotingEnsemble and StackEnsemble model generation, multiple fitted models from the previous child runs are downloaded.
        /// Configure this parameter with a higher value than 300 secs, if more time is needed.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Inherited)]
        public global::System.TimeSpan? EnsembleModelDownloadTimeout { get => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.ITrainingSettingsInternal)__trainingSettings).EnsembleModelDownloadTimeout; set => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.ITrainingSettingsInternal)__trainingSettings).EnsembleModelDownloadTimeout = value ?? default(global::System.TimeSpan); }

        /// <summary>Stack ensemble settings for stack ensemble run.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Inherited)]
        public Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IStackEnsembleSettings StackEnsembleSetting { get => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.ITrainingSettingsInternal)__trainingSettings).StackEnsembleSetting; set => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.ITrainingSettingsInternal)__trainingSettings).StackEnsembleSetting = value ?? null /* model class */; }

        /// <summary>Optional parameters to pass to the initializer of the meta-learner.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Inherited)]
        public Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.IAny StackEnsembleSettingStackMetaLearnerKWarg { get => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.ITrainingSettingsInternal)__trainingSettings).StackEnsembleSettingStackMetaLearnerKWarg; set => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.ITrainingSettingsInternal)__trainingSettings).StackEnsembleSettingStackMetaLearnerKWarg = value ?? null /* model class */; }

        /// <summary>
        /// Specifies the proportion of the training set (when choosing train and validation type of training) to be reserved for
        /// training the meta-learner. Default value is 0.2.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Inherited)]
        public double? StackEnsembleSettingStackMetaLearnerTrainPercentage { get => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.ITrainingSettingsInternal)__trainingSettings).StackEnsembleSettingStackMetaLearnerTrainPercentage; set => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.ITrainingSettingsInternal)__trainingSettings).StackEnsembleSettingStackMetaLearnerTrainPercentage = value ?? default(double); }

        /// <summary>
        /// The meta-learner is a model trained on the output of the individual heterogeneous models.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Inherited)]
        public Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Support.StackMetaLearnerType? StackEnsembleSettingStackMetaLearnerType { get => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.ITrainingSettingsInternal)__trainingSettings).StackEnsembleSettingStackMetaLearnerType; set => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.ITrainingSettingsInternal)__trainingSettings).StackEnsembleSettingStackMetaLearnerType = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Support.StackMetaLearnerType)""); }

        /// <summary>Creates an new <see cref="RegressionTrainingSettings" /> instance.</summary>
        public RegressionTrainingSettings()
        {

        }

        /// <summary>Validates that this object meets the validation criteria.</summary>
        /// <param name="eventListener">an <see cref="Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.IEventListener" /> instance that will receive validation
        /// events.</param>
        /// <returns>
        /// A <see cref = "global::System.Threading.Tasks.Task" /> that will be complete when validation is completed.
        /// </returns>
        public async global::System.Threading.Tasks.Task Validate(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.IEventListener eventListener)
        {
            await eventListener.AssertNotNull(nameof(__trainingSettings), __trainingSettings);
            await eventListener.AssertObjectIsValid(nameof(__trainingSettings), __trainingSettings);
        }
    }
    /// Regression Training related configuration.
    public partial interface IRegressionTrainingSettings :
        Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.IJsonSerializable,
        Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.ITrainingSettings
    {
        /// <summary>Allowed models for regression task.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Allowed models for regression task.",
        SerializedName = @"allowedTrainingAlgorithms",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Support.RegressionModels) })]
        Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Support.RegressionModels[] AllowedTrainingAlgorithm { get; set; }
        /// <summary>Blocked models for regression task.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Blocked models for regression task.",
        SerializedName = @"blockedTrainingAlgorithms",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Support.RegressionModels) })]
        Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Support.RegressionModels[] BlockedTrainingAlgorithm { get; set; }

    }
    /// Regression Training related configuration.
    internal partial interface IRegressionTrainingSettingsInternal :
        Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.ITrainingSettingsInternal
    {
        /// <summary>Allowed models for regression task.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Support.RegressionModels[] AllowedTrainingAlgorithm { get; set; }
        /// <summary>Blocked models for regression task.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Support.RegressionModels[] BlockedTrainingAlgorithm { get; set; }

    }
}