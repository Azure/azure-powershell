// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20220501
{
    using static Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.Extensions;

    public partial class VirtualMachineSchema :
        Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20220501.IVirtualMachineSchema,
        Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20220501.IVirtualMachineSchemaInternal
    {

        /// <summary>Public IP address of the virtual machine.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Inlined)]
        public string Address { get => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20220501.IVirtualMachineSchemaPropertiesInternal)Property).Address; set => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20220501.IVirtualMachineSchemaPropertiesInternal)Property).Address = value ?? null; }

        /// <summary>Password of admin account</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Inlined)]
        public string AdministratorAccountPassword { get => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20220501.IVirtualMachineSchemaPropertiesInternal)Property).AdministratorAccountPassword; set => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20220501.IVirtualMachineSchemaPropertiesInternal)Property).AdministratorAccountPassword = value ?? null; }

        /// <summary>Private key data</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Inlined)]
        public string AdministratorAccountPrivateKeyData { get => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20220501.IVirtualMachineSchemaPropertiesInternal)Property).AdministratorAccountPrivateKeyData; set => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20220501.IVirtualMachineSchemaPropertiesInternal)Property).AdministratorAccountPrivateKeyData = value ?? null; }

        /// <summary>Public key data</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Inlined)]
        public string AdministratorAccountPublicKeyData { get => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20220501.IVirtualMachineSchemaPropertiesInternal)Property).AdministratorAccountPublicKeyData; set => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20220501.IVirtualMachineSchemaPropertiesInternal)Property).AdministratorAccountPublicKeyData = value ?? null; }

        /// <summary>Username of admin account</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Inlined)]
        public string AdministratorAccountUsername { get => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20220501.IVirtualMachineSchemaPropertiesInternal)Property).AdministratorAccountUsername; set => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20220501.IVirtualMachineSchemaPropertiesInternal)Property).AdministratorAccountUsername = value ?? null; }

        /// <summary>Indicates whether this compute will be used for running notebooks.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Inlined)]
        public bool? IsNotebookInstanceCompute { get => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20220501.IVirtualMachineSchemaPropertiesInternal)Property).IsNotebookInstanceCompute; set => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20220501.IVirtualMachineSchemaPropertiesInternal)Property).IsNotebookInstanceCompute = value ?? default(bool); }

        /// <summary>Internal Acessors for AdministratorAccount</summary>
        Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20220501.IVirtualMachineSshCredentials Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20220501.IVirtualMachineSchemaInternal.AdministratorAccount { get => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20220501.IVirtualMachineSchemaPropertiesInternal)Property).AdministratorAccount; set => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20220501.IVirtualMachineSchemaPropertiesInternal)Property).AdministratorAccount = value; }

        /// <summary>Internal Acessors for Property</summary>
        Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20220501.IVirtualMachineSchemaProperties Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20220501.IVirtualMachineSchemaInternal.Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20220501.VirtualMachineSchemaProperties()); set { {_property = value;} } }

        /// <summary>Notebook server port open for ssh connections.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Inlined)]
        public int? NotebookServerPort { get => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20220501.IVirtualMachineSchemaPropertiesInternal)Property).NotebookServerPort; set => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20220501.IVirtualMachineSchemaPropertiesInternal)Property).NotebookServerPort = value ?? default(int); }

        /// <summary>Backing field for <see cref="Property" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20220501.IVirtualMachineSchemaProperties _property;

        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20220501.IVirtualMachineSchemaProperties Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20220501.VirtualMachineSchemaProperties()); set => this._property = value; }

        /// <summary>Virtual Machine size</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Inlined)]
        public string Size { get => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20220501.IVirtualMachineSchemaPropertiesInternal)Property).VirtualMachineSize; set => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20220501.IVirtualMachineSchemaPropertiesInternal)Property).VirtualMachineSize = value ?? null; }

        /// <summary>Port open for ssh connections.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Inlined)]
        public int? SshPort { get => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20220501.IVirtualMachineSchemaPropertiesInternal)Property).SshPort; set => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20220501.IVirtualMachineSchemaPropertiesInternal)Property).SshPort = value ?? default(int); }

        /// <summary>Creates an new <see cref="VirtualMachineSchema" /> instance.</summary>
        public VirtualMachineSchema()
        {

        }
    }
    public partial interface IVirtualMachineSchema :
        Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.IJsonSerializable
    {
        /// <summary>Public IP address of the virtual machine.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Public IP address of the virtual machine.",
        SerializedName = @"address",
        PossibleTypes = new [] { typeof(string) })]
        string Address { get; set; }
        /// <summary>Password of admin account</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Password of admin account",
        SerializedName = @"password",
        PossibleTypes = new [] { typeof(string) })]
        string AdministratorAccountPassword { get; set; }
        /// <summary>Private key data</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Private key data",
        SerializedName = @"privateKeyData",
        PossibleTypes = new [] { typeof(string) })]
        string AdministratorAccountPrivateKeyData { get; set; }
        /// <summary>Public key data</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Public key data",
        SerializedName = @"publicKeyData",
        PossibleTypes = new [] { typeof(string) })]
        string AdministratorAccountPublicKeyData { get; set; }
        /// <summary>Username of admin account</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Username of admin account",
        SerializedName = @"username",
        PossibleTypes = new [] { typeof(string) })]
        string AdministratorAccountUsername { get; set; }
        /// <summary>Indicates whether this compute will be used for running notebooks.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Indicates whether this compute will be used for running notebooks.",
        SerializedName = @"isNotebookInstanceCompute",
        PossibleTypes = new [] { typeof(bool) })]
        bool? IsNotebookInstanceCompute { get; set; }
        /// <summary>Notebook server port open for ssh connections.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Notebook server port open for ssh connections.",
        SerializedName = @"notebookServerPort",
        PossibleTypes = new [] { typeof(int) })]
        int? NotebookServerPort { get; set; }
        /// <summary>Virtual Machine size</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Virtual Machine size",
        SerializedName = @"virtualMachineSize",
        PossibleTypes = new [] { typeof(string) })]
        string Size { get; set; }
        /// <summary>Port open for ssh connections.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Port open for ssh connections.",
        SerializedName = @"sshPort",
        PossibleTypes = new [] { typeof(int) })]
        int? SshPort { get; set; }

    }
    internal partial interface IVirtualMachineSchemaInternal

    {
        /// <summary>Public IP address of the virtual machine.</summary>
        string Address { get; set; }
        /// <summary>Admin credentials for virtual machine</summary>
        Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20220501.IVirtualMachineSshCredentials AdministratorAccount { get; set; }
        /// <summary>Password of admin account</summary>
        string AdministratorAccountPassword { get; set; }
        /// <summary>Private key data</summary>
        string AdministratorAccountPrivateKeyData { get; set; }
        /// <summary>Public key data</summary>
        string AdministratorAccountPublicKeyData { get; set; }
        /// <summary>Username of admin account</summary>
        string AdministratorAccountUsername { get; set; }
        /// <summary>Indicates whether this compute will be used for running notebooks.</summary>
        bool? IsNotebookInstanceCompute { get; set; }
        /// <summary>Notebook server port open for ssh connections.</summary>
        int? NotebookServerPort { get; set; }

        Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20220501.IVirtualMachineSchemaProperties Property { get; set; }
        /// <summary>Virtual Machine size</summary>
        string Size { get; set; }
        /// <summary>Port open for ssh connections.</summary>
        int? SshPort { get; set; }

    }
}