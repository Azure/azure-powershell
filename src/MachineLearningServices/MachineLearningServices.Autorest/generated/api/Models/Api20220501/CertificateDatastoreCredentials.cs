// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20220501
{
    using static Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.Extensions;

    /// <summary>Certificate datastore credentials configuration.</summary>
    public partial class CertificateDatastoreCredentials :
        Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20220501.ICertificateDatastoreCredentials,
        Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20220501.ICertificateDatastoreCredentialsInternal,
        Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.IValidates
    {
        /// <summary>
        /// Backing field for Inherited model <see cref= "Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20220501.IDatastoreCredentials"
        /// />
        /// </summary>
        private Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20220501.IDatastoreCredentials __datastoreCredentials = new Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20220501.DatastoreCredentials();

        /// <summary>Backing field for <see cref="AuthorityUrl" /> property.</summary>
        private string _authorityUrl;

        /// <summary>Authority URL used for authentication.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Owned)]
        public string AuthorityUrl { get => this._authorityUrl; set => this._authorityUrl = value; }

        /// <summary>Backing field for <see cref="ClientId" /> property.</summary>
        private string _clientId;

        /// <summary>[Required] Service principal client ID.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Owned)]
        public string ClientId { get => this._clientId; set => this._clientId = value; }

        /// <summary>[Required] Credential type used to authentication with storage.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Inherited)]
        public Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Support.CredentialsType CredentialsType { get => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20220501.IDatastoreCredentialsInternal)__datastoreCredentials).CredentialsType; set => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20220501.IDatastoreCredentialsInternal)__datastoreCredentials).CredentialsType = value ; }

        /// <summary>Backing field for <see cref="ResourceUrl" /> property.</summary>
        private string _resourceUrl;

        /// <summary>Resource the service principal has access to.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Owned)]
        public string ResourceUrl { get => this._resourceUrl; set => this._resourceUrl = value; }

        /// <summary>Backing field for <see cref="Secret" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20220501.ICertificateDatastoreSecrets _secret;

        /// <summary>[Required] Service principal secrets.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20220501.ICertificateDatastoreSecrets Secret { get => (this._secret = this._secret ?? new Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20220501.CertificateDatastoreSecrets()); set => this._secret = value; }

        /// <summary>Backing field for <see cref="TenantId" /> property.</summary>
        private string _tenantId;

        /// <summary>[Required] ID of the tenant to which the service principal belongs.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Owned)]
        public string TenantId { get => this._tenantId; set => this._tenantId = value; }

        /// <summary>Backing field for <see cref="Thumbprint" /> property.</summary>
        private string _thumbprint;

        /// <summary>[Required] Thumbprint of the certificate used for authentication.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Owned)]
        public string Thumbprint { get => this._thumbprint; set => this._thumbprint = value; }

        /// <summary>Creates an new <see cref="CertificateDatastoreCredentials" /> instance.</summary>
        public CertificateDatastoreCredentials()
        {

        }

        /// <summary>Validates that this object meets the validation criteria.</summary>
        /// <param name="eventListener">an <see cref="Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.IEventListener" /> instance that will receive validation
        /// events.</param>
        /// <returns>
        /// A <see cref = "global::System.Threading.Tasks.Task" /> that will be complete when validation is completed.
        /// </returns>
        public async global::System.Threading.Tasks.Task Validate(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.IEventListener eventListener)
        {
            await eventListener.AssertNotNull(nameof(__datastoreCredentials), __datastoreCredentials);
            await eventListener.AssertObjectIsValid(nameof(__datastoreCredentials), __datastoreCredentials);
        }
    }
    /// Certificate datastore credentials configuration.
    public partial interface ICertificateDatastoreCredentials :
        Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.IJsonSerializable,
        Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20220501.IDatastoreCredentials
    {
        /// <summary>Authority URL used for authentication.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Authority URL used for authentication.",
        SerializedName = @"authorityUrl",
        PossibleTypes = new [] { typeof(string) })]
        string AuthorityUrl { get; set; }
        /// <summary>[Required] Service principal client ID.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"[Required] Service principal client ID.",
        SerializedName = @"clientId",
        PossibleTypes = new [] { typeof(string) })]
        string ClientId { get; set; }
        /// <summary>Resource the service principal has access to.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Resource the service principal has access to.",
        SerializedName = @"resourceUrl",
        PossibleTypes = new [] { typeof(string) })]
        string ResourceUrl { get; set; }
        /// <summary>[Required] Service principal secrets.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"[Required] Service principal secrets.",
        SerializedName = @"secrets",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20220501.ICertificateDatastoreSecrets) })]
        Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20220501.ICertificateDatastoreSecrets Secret { get; set; }
        /// <summary>[Required] ID of the tenant to which the service principal belongs.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"[Required] ID of the tenant to which the service principal belongs.",
        SerializedName = @"tenantId",
        PossibleTypes = new [] { typeof(string) })]
        string TenantId { get; set; }
        /// <summary>[Required] Thumbprint of the certificate used for authentication.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"[Required] Thumbprint of the certificate used for authentication.",
        SerializedName = @"thumbprint",
        PossibleTypes = new [] { typeof(string) })]
        string Thumbprint { get; set; }

    }
    /// Certificate datastore credentials configuration.
    internal partial interface ICertificateDatastoreCredentialsInternal :
        Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20220501.IDatastoreCredentialsInternal
    {
        /// <summary>Authority URL used for authentication.</summary>
        string AuthorityUrl { get; set; }
        /// <summary>[Required] Service principal client ID.</summary>
        string ClientId { get; set; }
        /// <summary>Resource the service principal has access to.</summary>
        string ResourceUrl { get; set; }
        /// <summary>[Required] Service principal secrets.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20220501.ICertificateDatastoreSecrets Secret { get; set; }
        /// <summary>[Required] ID of the tenant to which the service principal belongs.</summary>
        string TenantId { get; set; }
        /// <summary>[Required] Thumbprint of the certificate used for authentication.</summary>
        string Thumbprint { get; set; }

    }
}