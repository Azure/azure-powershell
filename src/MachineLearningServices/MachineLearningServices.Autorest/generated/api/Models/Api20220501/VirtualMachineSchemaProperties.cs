// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20220501
{
    using static Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.Extensions;

    public partial class VirtualMachineSchemaProperties :
        Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20220501.IVirtualMachineSchemaProperties,
        Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20220501.IVirtualMachineSchemaPropertiesInternal
    {

        /// <summary>Backing field for <see cref="Address" /> property.</summary>
        private string _address;

        /// <summary>Public IP address of the virtual machine.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Owned)]
        public string Address { get => this._address; set => this._address = value; }

        /// <summary>Backing field for <see cref="AdministratorAccount" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20220501.IVirtualMachineSshCredentials _administratorAccount;

        /// <summary>Admin credentials for virtual machine</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20220501.IVirtualMachineSshCredentials AdministratorAccount { get => (this._administratorAccount = this._administratorAccount ?? new Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20220501.VirtualMachineSshCredentials()); set => this._administratorAccount = value; }

        /// <summary>Password of admin account</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Inlined)]
        public string AdministratorAccountPassword { get => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20220501.IVirtualMachineSshCredentialsInternal)AdministratorAccount).Password; set => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20220501.IVirtualMachineSshCredentialsInternal)AdministratorAccount).Password = value ?? null; }

        /// <summary>Private key data</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Inlined)]
        public string AdministratorAccountPrivateKeyData { get => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20220501.IVirtualMachineSshCredentialsInternal)AdministratorAccount).PrivateKeyData; set => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20220501.IVirtualMachineSshCredentialsInternal)AdministratorAccount).PrivateKeyData = value ?? null; }

        /// <summary>Public key data</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Inlined)]
        public string AdministratorAccountPublicKeyData { get => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20220501.IVirtualMachineSshCredentialsInternal)AdministratorAccount).PublicKeyData; set => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20220501.IVirtualMachineSshCredentialsInternal)AdministratorAccount).PublicKeyData = value ?? null; }

        /// <summary>Username of admin account</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Inlined)]
        public string AdministratorAccountUsername { get => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20220501.IVirtualMachineSshCredentialsInternal)AdministratorAccount).Username; set => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20220501.IVirtualMachineSshCredentialsInternal)AdministratorAccount).Username = value ?? null; }

        /// <summary>Backing field for <see cref="IsNotebookInstanceCompute" /> property.</summary>
        private bool? _isNotebookInstanceCompute;

        /// <summary>Indicates whether this compute will be used for running notebooks.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Owned)]
        public bool? IsNotebookInstanceCompute { get => this._isNotebookInstanceCompute; set => this._isNotebookInstanceCompute = value; }

        /// <summary>Internal Acessors for AdministratorAccount</summary>
        Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20220501.IVirtualMachineSshCredentials Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20220501.IVirtualMachineSchemaPropertiesInternal.AdministratorAccount { get => (this._administratorAccount = this._administratorAccount ?? new Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20220501.VirtualMachineSshCredentials()); set { {_administratorAccount = value;} } }

        /// <summary>Backing field for <see cref="NotebookServerPort" /> property.</summary>
        private int? _notebookServerPort;

        /// <summary>Notebook server port open for ssh connections.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Owned)]
        public int? NotebookServerPort { get => this._notebookServerPort; set => this._notebookServerPort = value; }

        /// <summary>Backing field for <see cref="SshPort" /> property.</summary>
        private int? _sshPort;

        /// <summary>Port open for ssh connections.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Owned)]
        public int? SshPort { get => this._sshPort; set => this._sshPort = value; }

        /// <summary>Backing field for <see cref="VirtualMachineSize" /> property.</summary>
        private string _virtualMachineSize;

        /// <summary>Virtual Machine size</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Owned)]
        public string VirtualMachineSize { get => this._virtualMachineSize; set => this._virtualMachineSize = value; }

        /// <summary>Creates an new <see cref="VirtualMachineSchemaProperties" /> instance.</summary>
        public VirtualMachineSchemaProperties()
        {

        }
    }
    public partial interface IVirtualMachineSchemaProperties :
        Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.IJsonSerializable
    {
        /// <summary>Public IP address of the virtual machine.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Public IP address of the virtual machine.",
        SerializedName = @"address",
        PossibleTypes = new [] { typeof(string) })]
        string Address { get; set; }
        /// <summary>Password of admin account</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Password of admin account",
        SerializedName = @"password",
        PossibleTypes = new [] { typeof(string) })]
        string AdministratorAccountPassword { get; set; }
        /// <summary>Private key data</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Private key data",
        SerializedName = @"privateKeyData",
        PossibleTypes = new [] { typeof(string) })]
        string AdministratorAccountPrivateKeyData { get; set; }
        /// <summary>Public key data</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Public key data",
        SerializedName = @"publicKeyData",
        PossibleTypes = new [] { typeof(string) })]
        string AdministratorAccountPublicKeyData { get; set; }
        /// <summary>Username of admin account</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Username of admin account",
        SerializedName = @"username",
        PossibleTypes = new [] { typeof(string) })]
        string AdministratorAccountUsername { get; set; }
        /// <summary>Indicates whether this compute will be used for running notebooks.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Indicates whether this compute will be used for running notebooks.",
        SerializedName = @"isNotebookInstanceCompute",
        PossibleTypes = new [] { typeof(bool) })]
        bool? IsNotebookInstanceCompute { get; set; }
        /// <summary>Notebook server port open for ssh connections.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Notebook server port open for ssh connections.",
        SerializedName = @"notebookServerPort",
        PossibleTypes = new [] { typeof(int) })]
        int? NotebookServerPort { get; set; }
        /// <summary>Port open for ssh connections.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Port open for ssh connections.",
        SerializedName = @"sshPort",
        PossibleTypes = new [] { typeof(int) })]
        int? SshPort { get; set; }
        /// <summary>Virtual Machine size</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Virtual Machine size",
        SerializedName = @"virtualMachineSize",
        PossibleTypes = new [] { typeof(string) })]
        string VirtualMachineSize { get; set; }

    }
    internal partial interface IVirtualMachineSchemaPropertiesInternal

    {
        /// <summary>Public IP address of the virtual machine.</summary>
        string Address { get; set; }
        /// <summary>Admin credentials for virtual machine</summary>
        Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20220501.IVirtualMachineSshCredentials AdministratorAccount { get; set; }
        /// <summary>Password of admin account</summary>
        string AdministratorAccountPassword { get; set; }
        /// <summary>Private key data</summary>
        string AdministratorAccountPrivateKeyData { get; set; }
        /// <summary>Public key data</summary>
        string AdministratorAccountPublicKeyData { get; set; }
        /// <summary>Username of admin account</summary>
        string AdministratorAccountUsername { get; set; }
        /// <summary>Indicates whether this compute will be used for running notebooks.</summary>
        bool? IsNotebookInstanceCompute { get; set; }
        /// <summary>Notebook server port open for ssh connections.</summary>
        int? NotebookServerPort { get; set; }
        /// <summary>Port open for ssh connections.</summary>
        int? SshPort { get; set; }
        /// <summary>Virtual Machine size</summary>
        string VirtualMachineSize { get; set; }

    }
}