// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20220501
{
    using static Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.Extensions;

    /// <summary>Defines an Aml Instance DataDisk.</summary>
    public partial class ComputeInstanceDataDisk :
        Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20220501.IComputeInstanceDataDisk,
        Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20220501.IComputeInstanceDataDiskInternal
    {

        /// <summary>Backing field for <see cref="Caching" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Support.Caching? _caching;

        /// <summary>Caching type of Data Disk.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Support.Caching? Caching { get => this._caching; set => this._caching = value; }

        /// <summary>Backing field for <see cref="DiskSizeGb" /> property.</summary>
        private int? _diskSizeGb;

        /// <summary>The initial disk size in gigabytes.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Owned)]
        public int? DiskSizeGb { get => this._diskSizeGb; set => this._diskSizeGb = value; }

        /// <summary>Backing field for <see cref="Lun" /> property.</summary>
        private int? _lun;

        /// <summary>
        /// The lun is used to uniquely identify each data disk. If attaching multiple disks, each should have a distinct lun.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Owned)]
        public int? Lun { get => this._lun; set => this._lun = value; }

        /// <summary>Backing field for <see cref="StorageAccountType" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Support.StorageAccountType? _storageAccountType;

        /// <summary>type of this storage account.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Support.StorageAccountType? StorageAccountType { get => this._storageAccountType; set => this._storageAccountType = value; }

        /// <summary>Creates an new <see cref="ComputeInstanceDataDisk" /> instance.</summary>
        public ComputeInstanceDataDisk()
        {

        }
    }
    /// Defines an Aml Instance DataDisk.
    public partial interface IComputeInstanceDataDisk :
        Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.IJsonSerializable
    {
        /// <summary>Caching type of Data Disk.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Caching type of Data Disk.",
        SerializedName = @"caching",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Support.Caching) })]
        Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Support.Caching? Caching { get; set; }
        /// <summary>The initial disk size in gigabytes.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The initial disk size in gigabytes.",
        SerializedName = @"diskSizeGB",
        PossibleTypes = new [] { typeof(int) })]
        int? DiskSizeGb { get; set; }
        /// <summary>
        /// The lun is used to uniquely identify each data disk. If attaching multiple disks, each should have a distinct lun.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The lun is used to uniquely identify each data disk. If attaching multiple disks, each should have a distinct lun.",
        SerializedName = @"lun",
        PossibleTypes = new [] { typeof(int) })]
        int? Lun { get; set; }
        /// <summary>type of this storage account.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"type of this storage account.",
        SerializedName = @"storageAccountType",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Support.StorageAccountType) })]
        Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Support.StorageAccountType? StorageAccountType { get; set; }

    }
    /// Defines an Aml Instance DataDisk.
    internal partial interface IComputeInstanceDataDiskInternal

    {
        /// <summary>Caching type of Data Disk.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Support.Caching? Caching { get; set; }
        /// <summary>The initial disk size in gigabytes.</summary>
        int? DiskSizeGb { get; set; }
        /// <summary>
        /// The lun is used to uniquely identify each data disk. If attaching multiple disks, each should have a distinct lun.
        /// </summary>
        int? Lun { get; set; }
        /// <summary>type of this storage account.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Support.StorageAccountType? StorageAccountType { get; set; }

    }
}