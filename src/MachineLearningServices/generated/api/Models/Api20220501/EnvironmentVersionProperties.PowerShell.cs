// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20220501
{
    using Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.PowerShell;

    /// <summary>Environment version details.</summary>
    [System.ComponentModel.TypeConverter(typeof(EnvironmentVersionPropertiesTypeConverter))]
    public partial class EnvironmentVersionProperties
    {

        /// <summary>
        /// <c>AfterDeserializeDictionary</c> will be called after the deserialization has finished, allowing customization of the
        /// object before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>

        partial void AfterDeserializeDictionary(global::System.Collections.IDictionary content);

        /// <summary>
        /// <c>AfterDeserializePSObject</c> will be called after the deserialization has finished, allowing customization of the object
        /// before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>

        partial void AfterDeserializePSObject(global::System.Management.Automation.PSObject content);

        /// <summary>
        /// <c>BeforeDeserializeDictionary</c> will be called before the deserialization has commenced, allowing complete customization
        /// of the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <paramref name="returnNow" /> output
        /// parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeDeserializeDictionary(global::System.Collections.IDictionary content, ref bool returnNow);

        /// <summary>
        /// <c>BeforeDeserializePSObject</c> will be called before the deserialization has commenced, allowing complete customization
        /// of the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <paramref name="returnNow" /> output
        /// parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeDeserializePSObject(global::System.Management.Automation.PSObject content, ref bool returnNow);

        /// <summary>
        /// <c>OverrideToString</c> will be called if it is implemented. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="stringResult">/// instance serialized to a string, normally it is a Json</param>
        /// <param name="returnNow">/// set returnNow to true if you provide a customized OverrideToString function</param>

        partial void OverrideToString(ref string stringResult, ref bool returnNow);

        /// <summary>
        /// Deserializes a <see cref="global::System.Collections.IDictionary" /> into an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20220501.EnvironmentVersionProperties"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        /// <returns>
        /// an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20220501.IEnvironmentVersionProperties"
        /// />.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20220501.IEnvironmentVersionProperties DeserializeFromDictionary(global::System.Collections.IDictionary content)
        {
            return new EnvironmentVersionProperties(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Management.Automation.PSObject" /> into an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20220501.EnvironmentVersionProperties"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        /// <returns>
        /// an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20220501.IEnvironmentVersionProperties"
        /// />.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20220501.IEnvironmentVersionProperties DeserializeFromPSObject(global::System.Management.Automation.PSObject content)
        {
            return new EnvironmentVersionProperties(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Collections.IDictionary" /> into a new instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20220501.EnvironmentVersionProperties"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        internal EnvironmentVersionProperties(global::System.Collections.IDictionary content)
        {
            bool returnNow = false;
            BeforeDeserializeDictionary(content, ref returnNow);
            if (returnNow)
            {
                return;
            }
            // actually deserialize
            if (content.Contains("Build"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20220501.IEnvironmentVersionPropertiesInternal)this).Build = (Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20220501.IBuildContext) content.GetValueForProperty("Build",((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20220501.IEnvironmentVersionPropertiesInternal)this).Build, Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20220501.BuildContextTypeConverter.ConvertFrom);
            }
            if (content.Contains("InferenceConfig"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20220501.IEnvironmentVersionPropertiesInternal)this).InferenceConfig = (Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20220501.IInferenceContainerProperties) content.GetValueForProperty("InferenceConfig",((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20220501.IEnvironmentVersionPropertiesInternal)this).InferenceConfig, Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20220501.InferenceContainerPropertiesTypeConverter.ConvertFrom);
            }
            if (content.Contains("CondaFile"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20220501.IEnvironmentVersionPropertiesInternal)this).CondaFile = (string) content.GetValueForProperty("CondaFile",((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20220501.IEnvironmentVersionPropertiesInternal)this).CondaFile, global::System.Convert.ToString);
            }
            if (content.Contains("EnvironmentType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20220501.IEnvironmentVersionPropertiesInternal)this).EnvironmentType = (Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Support.EnvironmentType?) content.GetValueForProperty("EnvironmentType",((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20220501.IEnvironmentVersionPropertiesInternal)this).EnvironmentType, Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Support.EnvironmentType.CreateFrom);
            }
            if (content.Contains("Image"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20220501.IEnvironmentVersionPropertiesInternal)this).Image = (string) content.GetValueForProperty("Image",((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20220501.IEnvironmentVersionPropertiesInternal)this).Image, global::System.Convert.ToString);
            }
            if (content.Contains("OSType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20220501.IEnvironmentVersionPropertiesInternal)this).OSType = (Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Support.OperatingSystemType?) content.GetValueForProperty("OSType",((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20220501.IEnvironmentVersionPropertiesInternal)this).OSType, Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Support.OperatingSystemType.CreateFrom);
            }
            if (content.Contains("Description"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20220501.IResourceBaseInternal)this).Description = (string) content.GetValueForProperty("Description",((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20220501.IResourceBaseInternal)this).Description, global::System.Convert.ToString);
            }
            if (content.Contains("Property"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20220501.IResourceBaseInternal)this).Property = (Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20220501.IResourceBaseProperties) content.GetValueForProperty("Property",((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20220501.IResourceBaseInternal)this).Property, Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20220501.ResourceBasePropertiesTypeConverter.ConvertFrom);
            }
            if (content.Contains("Tag"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20220501.IResourceBaseInternal)this).Tag = (Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20220501.IResourceBaseTags) content.GetValueForProperty("Tag",((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20220501.IResourceBaseInternal)this).Tag, Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20220501.ResourceBaseTagsTypeConverter.ConvertFrom);
            }
            if (content.Contains("IsAnonymou"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20220501.IAssetBaseInternal)this).IsAnonymou = (bool?) content.GetValueForProperty("IsAnonymou",((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20220501.IAssetBaseInternal)this).IsAnonymou, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("IsArchived"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20220501.IAssetBaseInternal)this).IsArchived = (bool?) content.GetValueForProperty("IsArchived",((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20220501.IAssetBaseInternal)this).IsArchived, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("BuildContextUri"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20220501.IEnvironmentVersionPropertiesInternal)this).BuildContextUri = (string) content.GetValueForProperty("BuildContextUri",((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20220501.IEnvironmentVersionPropertiesInternal)this).BuildContextUri, global::System.Convert.ToString);
            }
            if (content.Contains("BuildDockerfilePath"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20220501.IEnvironmentVersionPropertiesInternal)this).BuildDockerfilePath = (string) content.GetValueForProperty("BuildDockerfilePath",((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20220501.IEnvironmentVersionPropertiesInternal)this).BuildDockerfilePath, global::System.Convert.ToString);
            }
            if (content.Contains("InferenceConfigLivenessRoute"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20220501.IEnvironmentVersionPropertiesInternal)this).InferenceConfigLivenessRoute = (Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20220501.IRoute) content.GetValueForProperty("InferenceConfigLivenessRoute",((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20220501.IEnvironmentVersionPropertiesInternal)this).InferenceConfigLivenessRoute, Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20220501.RouteTypeConverter.ConvertFrom);
            }
            if (content.Contains("InferenceConfigReadinessRoute"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20220501.IEnvironmentVersionPropertiesInternal)this).InferenceConfigReadinessRoute = (Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20220501.IRoute) content.GetValueForProperty("InferenceConfigReadinessRoute",((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20220501.IEnvironmentVersionPropertiesInternal)this).InferenceConfigReadinessRoute, Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20220501.RouteTypeConverter.ConvertFrom);
            }
            if (content.Contains("InferenceConfigScoringRoute"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20220501.IEnvironmentVersionPropertiesInternal)this).InferenceConfigScoringRoute = (Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20220501.IRoute) content.GetValueForProperty("InferenceConfigScoringRoute",((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20220501.IEnvironmentVersionPropertiesInternal)this).InferenceConfigScoringRoute, Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20220501.RouteTypeConverter.ConvertFrom);
            }
            if (content.Contains("LivenessRoutePath"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20220501.IEnvironmentVersionPropertiesInternal)this).LivenessRoutePath = (string) content.GetValueForProperty("LivenessRoutePath",((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20220501.IEnvironmentVersionPropertiesInternal)this).LivenessRoutePath, global::System.Convert.ToString);
            }
            if (content.Contains("LivenessRoutePort"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20220501.IEnvironmentVersionPropertiesInternal)this).LivenessRoutePort = (int) content.GetValueForProperty("LivenessRoutePort",((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20220501.IEnvironmentVersionPropertiesInternal)this).LivenessRoutePort, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("ReadinessRoutePath"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20220501.IEnvironmentVersionPropertiesInternal)this).ReadinessRoutePath = (string) content.GetValueForProperty("ReadinessRoutePath",((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20220501.IEnvironmentVersionPropertiesInternal)this).ReadinessRoutePath, global::System.Convert.ToString);
            }
            if (content.Contains("ReadinessRoutePort"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20220501.IEnvironmentVersionPropertiesInternal)this).ReadinessRoutePort = (int) content.GetValueForProperty("ReadinessRoutePort",((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20220501.IEnvironmentVersionPropertiesInternal)this).ReadinessRoutePort, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("ScoringRoutePath"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20220501.IEnvironmentVersionPropertiesInternal)this).ScoringRoutePath = (string) content.GetValueForProperty("ScoringRoutePath",((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20220501.IEnvironmentVersionPropertiesInternal)this).ScoringRoutePath, global::System.Convert.ToString);
            }
            if (content.Contains("ScoringRoutePort"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20220501.IEnvironmentVersionPropertiesInternal)this).ScoringRoutePort = (int) content.GetValueForProperty("ScoringRoutePort",((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20220501.IEnvironmentVersionPropertiesInternal)this).ScoringRoutePort, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            AfterDeserializeDictionary(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Management.Automation.PSObject" /> into a new instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20220501.EnvironmentVersionProperties"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        internal EnvironmentVersionProperties(global::System.Management.Automation.PSObject content)
        {
            bool returnNow = false;
            BeforeDeserializePSObject(content, ref returnNow);
            if (returnNow)
            {
                return;
            }
            // actually deserialize
            if (content.Contains("Build"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20220501.IEnvironmentVersionPropertiesInternal)this).Build = (Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20220501.IBuildContext) content.GetValueForProperty("Build",((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20220501.IEnvironmentVersionPropertiesInternal)this).Build, Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20220501.BuildContextTypeConverter.ConvertFrom);
            }
            if (content.Contains("InferenceConfig"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20220501.IEnvironmentVersionPropertiesInternal)this).InferenceConfig = (Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20220501.IInferenceContainerProperties) content.GetValueForProperty("InferenceConfig",((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20220501.IEnvironmentVersionPropertiesInternal)this).InferenceConfig, Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20220501.InferenceContainerPropertiesTypeConverter.ConvertFrom);
            }
            if (content.Contains("CondaFile"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20220501.IEnvironmentVersionPropertiesInternal)this).CondaFile = (string) content.GetValueForProperty("CondaFile",((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20220501.IEnvironmentVersionPropertiesInternal)this).CondaFile, global::System.Convert.ToString);
            }
            if (content.Contains("EnvironmentType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20220501.IEnvironmentVersionPropertiesInternal)this).EnvironmentType = (Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Support.EnvironmentType?) content.GetValueForProperty("EnvironmentType",((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20220501.IEnvironmentVersionPropertiesInternal)this).EnvironmentType, Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Support.EnvironmentType.CreateFrom);
            }
            if (content.Contains("Image"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20220501.IEnvironmentVersionPropertiesInternal)this).Image = (string) content.GetValueForProperty("Image",((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20220501.IEnvironmentVersionPropertiesInternal)this).Image, global::System.Convert.ToString);
            }
            if (content.Contains("OSType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20220501.IEnvironmentVersionPropertiesInternal)this).OSType = (Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Support.OperatingSystemType?) content.GetValueForProperty("OSType",((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20220501.IEnvironmentVersionPropertiesInternal)this).OSType, Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Support.OperatingSystemType.CreateFrom);
            }
            if (content.Contains("Description"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20220501.IResourceBaseInternal)this).Description = (string) content.GetValueForProperty("Description",((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20220501.IResourceBaseInternal)this).Description, global::System.Convert.ToString);
            }
            if (content.Contains("Property"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20220501.IResourceBaseInternal)this).Property = (Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20220501.IResourceBaseProperties) content.GetValueForProperty("Property",((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20220501.IResourceBaseInternal)this).Property, Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20220501.ResourceBasePropertiesTypeConverter.ConvertFrom);
            }
            if (content.Contains("Tag"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20220501.IResourceBaseInternal)this).Tag = (Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20220501.IResourceBaseTags) content.GetValueForProperty("Tag",((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20220501.IResourceBaseInternal)this).Tag, Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20220501.ResourceBaseTagsTypeConverter.ConvertFrom);
            }
            if (content.Contains("IsAnonymou"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20220501.IAssetBaseInternal)this).IsAnonymou = (bool?) content.GetValueForProperty("IsAnonymou",((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20220501.IAssetBaseInternal)this).IsAnonymou, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("IsArchived"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20220501.IAssetBaseInternal)this).IsArchived = (bool?) content.GetValueForProperty("IsArchived",((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20220501.IAssetBaseInternal)this).IsArchived, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("BuildContextUri"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20220501.IEnvironmentVersionPropertiesInternal)this).BuildContextUri = (string) content.GetValueForProperty("BuildContextUri",((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20220501.IEnvironmentVersionPropertiesInternal)this).BuildContextUri, global::System.Convert.ToString);
            }
            if (content.Contains("BuildDockerfilePath"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20220501.IEnvironmentVersionPropertiesInternal)this).BuildDockerfilePath = (string) content.GetValueForProperty("BuildDockerfilePath",((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20220501.IEnvironmentVersionPropertiesInternal)this).BuildDockerfilePath, global::System.Convert.ToString);
            }
            if (content.Contains("InferenceConfigLivenessRoute"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20220501.IEnvironmentVersionPropertiesInternal)this).InferenceConfigLivenessRoute = (Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20220501.IRoute) content.GetValueForProperty("InferenceConfigLivenessRoute",((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20220501.IEnvironmentVersionPropertiesInternal)this).InferenceConfigLivenessRoute, Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20220501.RouteTypeConverter.ConvertFrom);
            }
            if (content.Contains("InferenceConfigReadinessRoute"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20220501.IEnvironmentVersionPropertiesInternal)this).InferenceConfigReadinessRoute = (Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20220501.IRoute) content.GetValueForProperty("InferenceConfigReadinessRoute",((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20220501.IEnvironmentVersionPropertiesInternal)this).InferenceConfigReadinessRoute, Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20220501.RouteTypeConverter.ConvertFrom);
            }
            if (content.Contains("InferenceConfigScoringRoute"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20220501.IEnvironmentVersionPropertiesInternal)this).InferenceConfigScoringRoute = (Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20220501.IRoute) content.GetValueForProperty("InferenceConfigScoringRoute",((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20220501.IEnvironmentVersionPropertiesInternal)this).InferenceConfigScoringRoute, Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20220501.RouteTypeConverter.ConvertFrom);
            }
            if (content.Contains("LivenessRoutePath"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20220501.IEnvironmentVersionPropertiesInternal)this).LivenessRoutePath = (string) content.GetValueForProperty("LivenessRoutePath",((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20220501.IEnvironmentVersionPropertiesInternal)this).LivenessRoutePath, global::System.Convert.ToString);
            }
            if (content.Contains("LivenessRoutePort"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20220501.IEnvironmentVersionPropertiesInternal)this).LivenessRoutePort = (int) content.GetValueForProperty("LivenessRoutePort",((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20220501.IEnvironmentVersionPropertiesInternal)this).LivenessRoutePort, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("ReadinessRoutePath"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20220501.IEnvironmentVersionPropertiesInternal)this).ReadinessRoutePath = (string) content.GetValueForProperty("ReadinessRoutePath",((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20220501.IEnvironmentVersionPropertiesInternal)this).ReadinessRoutePath, global::System.Convert.ToString);
            }
            if (content.Contains("ReadinessRoutePort"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20220501.IEnvironmentVersionPropertiesInternal)this).ReadinessRoutePort = (int) content.GetValueForProperty("ReadinessRoutePort",((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20220501.IEnvironmentVersionPropertiesInternal)this).ReadinessRoutePort, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("ScoringRoutePath"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20220501.IEnvironmentVersionPropertiesInternal)this).ScoringRoutePath = (string) content.GetValueForProperty("ScoringRoutePath",((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20220501.IEnvironmentVersionPropertiesInternal)this).ScoringRoutePath, global::System.Convert.ToString);
            }
            if (content.Contains("ScoringRoutePort"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20220501.IEnvironmentVersionPropertiesInternal)this).ScoringRoutePort = (int) content.GetValueForProperty("ScoringRoutePort",((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20220501.IEnvironmentVersionPropertiesInternal)this).ScoringRoutePort, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            AfterDeserializePSObject(content);
        }

        /// <summary>
        /// Creates a new instance of <see cref="EnvironmentVersionProperties" />, deserializing the content from a json string.
        /// </summary>
        /// <param name="jsonText">a string containing a JSON serialized instance of this model.</param>
        /// <returns>an instance of the <see cref="EnvironmentVersionProperties" /> model class.</returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20220501.IEnvironmentVersionProperties FromJsonString(string jsonText) => FromJson(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.Json.JsonNode.Parse(jsonText));

        /// <summary>Serializes this instance to a json string.</summary>

        /// <returns>a <see cref="System.String" /> containing this model serialized to JSON text.</returns>
        public string ToJsonString() => ToJson(null, Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.SerializationMode.IncludeAll)?.ToString();

        public override string ToString()
        {
            var returnNow = false;
            var result = global::System.String.Empty;
            OverrideToString(ref result, ref returnNow);
            if (returnNow)
            {
                return result;
            }
            return ToJsonString();
        }
    }
    /// Environment version details.
    [System.ComponentModel.TypeConverter(typeof(EnvironmentVersionPropertiesTypeConverter))]
    public partial interface IEnvironmentVersionProperties

    {

    }
}