// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20220501
{
    using static Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.Extensions;

    public partial class TargetUtilizationScaleSettings :
        Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20220501.ITargetUtilizationScaleSettings,
        Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20220501.ITargetUtilizationScaleSettingsInternal,
        Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.IValidates
    {
        /// <summary>
        /// Backing field for Inherited model <see cref= "Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20220501.IOnlineScaleSettings"
        /// />
        /// </summary>
        private Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20220501.IOnlineScaleSettings __onlineScaleSettings = new Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20220501.OnlineScaleSettings();

        /// <summary>Backing field for <see cref="MaxInstance" /> property.</summary>
        private int? _maxInstance;

        /// <summary>
        /// The maximum number of instances that the deployment can scale to. The quota will be reserved for max_instances.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Owned)]
        public int? MaxInstance { get => this._maxInstance; set => this._maxInstance = value; }

        /// <summary>Backing field for <see cref="MinInstance" /> property.</summary>
        private int? _minInstance;

        /// <summary>The minimum number of instances to always be present.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Owned)]
        public int? MinInstance { get => this._minInstance; set => this._minInstance = value; }

        /// <summary>Backing field for <see cref="PollingInterval" /> property.</summary>
        private global::System.TimeSpan? _pollingInterval;

        /// <summary>
        /// The polling interval in ISO 8691 format. Only supports duration with precision as low as Seconds.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Owned)]
        public global::System.TimeSpan? PollingInterval { get => this._pollingInterval; set => this._pollingInterval = value; }

        /// <summary>[Required] Type of deployment scaling algorithm</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Inherited)]
        public Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Support.ScaleType ScaleType { get => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20220501.IOnlineScaleSettingsInternal)__onlineScaleSettings).ScaleType; set => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20220501.IOnlineScaleSettingsInternal)__onlineScaleSettings).ScaleType = value ; }

        /// <summary>Backing field for <see cref="TargetUtilizationPercentage" /> property.</summary>
        private int? _targetUtilizationPercentage;

        /// <summary>Target CPU usage for the autoscaler.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Owned)]
        public int? TargetUtilizationPercentage { get => this._targetUtilizationPercentage; set => this._targetUtilizationPercentage = value; }

        /// <summary>Creates an new <see cref="TargetUtilizationScaleSettings" /> instance.</summary>
        public TargetUtilizationScaleSettings()
        {

        }

        /// <summary>Validates that this object meets the validation criteria.</summary>
        /// <param name="eventListener">an <see cref="Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.IEventListener" /> instance that will receive validation
        /// events.</param>
        /// <returns>
        /// A <see cref = "global::System.Threading.Tasks.Task" /> that will be complete when validation is completed.
        /// </returns>
        public async global::System.Threading.Tasks.Task Validate(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.IEventListener eventListener)
        {
            await eventListener.AssertNotNull(nameof(__onlineScaleSettings), __onlineScaleSettings);
            await eventListener.AssertObjectIsValid(nameof(__onlineScaleSettings), __onlineScaleSettings);
        }
    }
    public partial interface ITargetUtilizationScaleSettings :
        Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.IJsonSerializable,
        Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20220501.IOnlineScaleSettings
    {
        /// <summary>
        /// The maximum number of instances that the deployment can scale to. The quota will be reserved for max_instances.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The maximum number of instances that the deployment can scale to. The quota will be reserved for max_instances.",
        SerializedName = @"maxInstances",
        PossibleTypes = new [] { typeof(int) })]
        int? MaxInstance { get; set; }
        /// <summary>The minimum number of instances to always be present.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The minimum number of instances to always be present.",
        SerializedName = @"minInstances",
        PossibleTypes = new [] { typeof(int) })]
        int? MinInstance { get; set; }
        /// <summary>
        /// The polling interval in ISO 8691 format. Only supports duration with precision as low as Seconds.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The polling interval in ISO 8691 format. Only supports duration with precision as low as Seconds.",
        SerializedName = @"pollingInterval",
        PossibleTypes = new [] { typeof(global::System.TimeSpan) })]
        global::System.TimeSpan? PollingInterval { get; set; }
        /// <summary>Target CPU usage for the autoscaler.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Target CPU usage for the autoscaler.",
        SerializedName = @"targetUtilizationPercentage",
        PossibleTypes = new [] { typeof(int) })]
        int? TargetUtilizationPercentage { get; set; }

    }
    internal partial interface ITargetUtilizationScaleSettingsInternal :
        Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20220501.IOnlineScaleSettingsInternal
    {
        /// <summary>
        /// The maximum number of instances that the deployment can scale to. The quota will be reserved for max_instances.
        /// </summary>
        int? MaxInstance { get; set; }
        /// <summary>The minimum number of instances to always be present.</summary>
        int? MinInstance { get; set; }
        /// <summary>
        /// The polling interval in ISO 8691 format. Only supports duration with precision as low as Seconds.
        /// </summary>
        global::System.TimeSpan? PollingInterval { get; set; }
        /// <summary>Target CPU usage for the autoscaler.</summary>
        int? TargetUtilizationPercentage { get; set; }

    }
}