// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20220501
{
    using static Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.Extensions;

    /// <summary>AKS properties</summary>
    public partial class AksSchemaProperties :
        Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20220501.IAksSchemaProperties,
        Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20220501.IAksSchemaPropertiesInternal
    {

        /// <summary>Backing field for <see cref="AgentCount" /> property.</summary>
        private int? _agentCount;

        /// <summary>Number of agents</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Owned)]
        public int? AgentCount { get => this._agentCount; set => this._agentCount = value; }

        /// <summary>Backing field for <see cref="AgentVMSize" /> property.</summary>
        private string _agentVMSize;

        /// <summary>Agent virtual machine size</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Owned)]
        public string AgentVMSize { get => this._agentVMSize; set => this._agentVMSize = value; }

        /// <summary>
        /// An IP address assigned to the Kubernetes DNS service. It must be within the Kubernetes service address range specified
        /// in serviceCidr.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Inlined)]
        public string AkNetworkingConfigurationDnsServiceIP { get => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20220501.IAksNetworkingConfigurationInternal)AksNetworkingConfiguration).DnsServiceIP; set => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20220501.IAksNetworkingConfigurationInternal)AksNetworkingConfiguration).DnsServiceIP = value ?? null; }

        /// <summary>
        /// A CIDR notation IP range assigned to the Docker bridge network. It must not overlap with any Subnet IP ranges or the Kubernetes
        /// service address range.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Inlined)]
        public string AkNetworkingConfigurationDockerBridgeCidr { get => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20220501.IAksNetworkingConfigurationInternal)AksNetworkingConfiguration).DockerBridgeCidr; set => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20220501.IAksNetworkingConfigurationInternal)AksNetworkingConfiguration).DockerBridgeCidr = value ?? null; }

        /// <summary>
        /// A CIDR notation IP range from which to assign service cluster IPs. It must not overlap with any Subnet IP ranges.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Inlined)]
        public string AkNetworkingConfigurationServiceCidr { get => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20220501.IAksNetworkingConfigurationInternal)AksNetworkingConfiguration).ServiceCidr; set => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20220501.IAksNetworkingConfigurationInternal)AksNetworkingConfiguration).ServiceCidr = value ?? null; }

        /// <summary>Virtual network subnet resource ID the compute nodes belong to</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Inlined)]
        public string AkNetworkingConfigurationSubnetId { get => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20220501.IAksNetworkingConfigurationInternal)AksNetworkingConfiguration).SubnetId; set => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20220501.IAksNetworkingConfigurationInternal)AksNetworkingConfiguration).SubnetId = value ?? null; }

        /// <summary>Backing field for <see cref="AksNetworkingConfiguration" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20220501.IAksNetworkingConfiguration _aksNetworkingConfiguration;

        /// <summary>AKS networking configuration for vnet</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20220501.IAksNetworkingConfiguration AksNetworkingConfiguration { get => (this._aksNetworkingConfiguration = this._aksNetworkingConfiguration ?? new Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20220501.AksNetworkingConfiguration()); set => this._aksNetworkingConfiguration = value; }

        /// <summary>Backing field for <see cref="ClusterFqdn" /> property.</summary>
        private string _clusterFqdn;

        /// <summary>Cluster full qualified domain name</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Owned)]
        public string ClusterFqdn { get => this._clusterFqdn; set => this._clusterFqdn = value; }

        /// <summary>Backing field for <see cref="ClusterPurpose" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Support.ClusterPurpose? _clusterPurpose;

        /// <summary>Intended usage of the cluster</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Support.ClusterPurpose? ClusterPurpose { get => this._clusterPurpose; set => this._clusterPurpose = value; }

        /// <summary>Backing field for <see cref="LoadBalancerSubnet" /> property.</summary>
        private string _loadBalancerSubnet;

        /// <summary>Load Balancer Subnet</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Owned)]
        public string LoadBalancerSubnet { get => this._loadBalancerSubnet; set => this._loadBalancerSubnet = value; }

        /// <summary>Backing field for <see cref="LoadBalancerType" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Support.LoadBalancerType? _loadBalancerType;

        /// <summary>Load Balancer Type</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Support.LoadBalancerType? LoadBalancerType { get => this._loadBalancerType; set => this._loadBalancerType = value; }

        /// <summary>Internal Acessors for AksNetworkingConfiguration</summary>
        Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20220501.IAksNetworkingConfiguration Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20220501.IAksSchemaPropertiesInternal.AksNetworkingConfiguration { get => (this._aksNetworkingConfiguration = this._aksNetworkingConfiguration ?? new Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20220501.AksNetworkingConfiguration()); set { {_aksNetworkingConfiguration = value;} } }

        /// <summary>Internal Acessors for SslConfiguration</summary>
        Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20220501.ISslConfiguration Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20220501.IAksSchemaPropertiesInternal.SslConfiguration { get => (this._sslConfiguration = this._sslConfiguration ?? new Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20220501.SslConfiguration()); set { {_sslConfiguration = value;} } }

        /// <summary>Internal Acessors for SystemService</summary>
        Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20220501.ISystemService[] Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20220501.IAksSchemaPropertiesInternal.SystemService { get => this._systemService; set { {_systemService = value;} } }

        /// <summary>Backing field for <see cref="SslConfiguration" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20220501.ISslConfiguration _sslConfiguration;

        /// <summary>SSL configuration</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20220501.ISslConfiguration SslConfiguration { get => (this._sslConfiguration = this._sslConfiguration ?? new Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20220501.SslConfiguration()); set => this._sslConfiguration = value; }

        /// <summary>Cert data</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Inlined)]
        public string SslConfigurationCert { get => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20220501.ISslConfigurationInternal)SslConfiguration).Cert; set => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20220501.ISslConfigurationInternal)SslConfiguration).Cert = value ?? null; }

        /// <summary>CNAME of the cert</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Inlined)]
        public string SslConfigurationCname { get => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20220501.ISslConfigurationInternal)SslConfiguration).Cname; set => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20220501.ISslConfigurationInternal)SslConfiguration).Cname = value ?? null; }

        /// <summary>Key data</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Inlined)]
        public string SslConfigurationKey { get => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20220501.ISslConfigurationInternal)SslConfiguration).Key; set => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20220501.ISslConfigurationInternal)SslConfiguration).Key = value ?? null; }

        /// <summary>Leaf domain label of public endpoint</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Inlined)]
        public string SslConfigurationLeafDomainLabel { get => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20220501.ISslConfigurationInternal)SslConfiguration).LeafDomainLabel; set => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20220501.ISslConfigurationInternal)SslConfiguration).LeafDomainLabel = value ?? null; }

        /// <summary>Indicates whether to overwrite existing domain label.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Inlined)]
        public bool? SslConfigurationOverwriteExistingDomain { get => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20220501.ISslConfigurationInternal)SslConfiguration).OverwriteExistingDomain; set => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20220501.ISslConfigurationInternal)SslConfiguration).OverwriteExistingDomain = value ?? default(bool); }

        /// <summary>Enable or disable ssl for scoring</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Support.SslConfigStatus? SslConfigurationStatus { get => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20220501.ISslConfigurationInternal)SslConfiguration).Status; set => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20220501.ISslConfigurationInternal)SslConfiguration).Status = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Support.SslConfigStatus)""); }

        /// <summary>Backing field for <see cref="SystemService" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20220501.ISystemService[] _systemService;

        /// <summary>System services</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20220501.ISystemService[] SystemService { get => this._systemService; }

        /// <summary>Creates an new <see cref="AksSchemaProperties" /> instance.</summary>
        public AksSchemaProperties()
        {

        }
    }
    /// AKS properties
    public partial interface IAksSchemaProperties :
        Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.IJsonSerializable
    {
        /// <summary>Number of agents</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Number of agents",
        SerializedName = @"agentCount",
        PossibleTypes = new [] { typeof(int) })]
        int? AgentCount { get; set; }
        /// <summary>Agent virtual machine size</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Agent virtual machine size",
        SerializedName = @"agentVmSize",
        PossibleTypes = new [] { typeof(string) })]
        string AgentVMSize { get; set; }
        /// <summary>
        /// An IP address assigned to the Kubernetes DNS service. It must be within the Kubernetes service address range specified
        /// in serviceCidr.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"An IP address assigned to the Kubernetes DNS service. It must be within the Kubernetes service address range specified in serviceCidr.",
        SerializedName = @"dnsServiceIP",
        PossibleTypes = new [] { typeof(string) })]
        string AkNetworkingConfigurationDnsServiceIP { get; set; }
        /// <summary>
        /// A CIDR notation IP range assigned to the Docker bridge network. It must not overlap with any Subnet IP ranges or the Kubernetes
        /// service address range.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"A CIDR notation IP range assigned to the Docker bridge network. It must not overlap with any Subnet IP ranges or the Kubernetes service address range.",
        SerializedName = @"dockerBridgeCidr",
        PossibleTypes = new [] { typeof(string) })]
        string AkNetworkingConfigurationDockerBridgeCidr { get; set; }
        /// <summary>
        /// A CIDR notation IP range from which to assign service cluster IPs. It must not overlap with any Subnet IP ranges.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"A CIDR notation IP range from which to assign service cluster IPs. It must not overlap with any Subnet IP ranges.",
        SerializedName = @"serviceCidr",
        PossibleTypes = new [] { typeof(string) })]
        string AkNetworkingConfigurationServiceCidr { get; set; }
        /// <summary>Virtual network subnet resource ID the compute nodes belong to</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Virtual network subnet resource ID the compute nodes belong to",
        SerializedName = @"subnetId",
        PossibleTypes = new [] { typeof(string) })]
        string AkNetworkingConfigurationSubnetId { get; set; }
        /// <summary>Cluster full qualified domain name</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Cluster full qualified domain name",
        SerializedName = @"clusterFqdn",
        PossibleTypes = new [] { typeof(string) })]
        string ClusterFqdn { get; set; }
        /// <summary>Intended usage of the cluster</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Intended usage of the cluster",
        SerializedName = @"clusterPurpose",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Support.ClusterPurpose) })]
        Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Support.ClusterPurpose? ClusterPurpose { get; set; }
        /// <summary>Load Balancer Subnet</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Load Balancer Subnet",
        SerializedName = @"loadBalancerSubnet",
        PossibleTypes = new [] { typeof(string) })]
        string LoadBalancerSubnet { get; set; }
        /// <summary>Load Balancer Type</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Load Balancer Type",
        SerializedName = @"loadBalancerType",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Support.LoadBalancerType) })]
        Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Support.LoadBalancerType? LoadBalancerType { get; set; }
        /// <summary>Cert data</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Cert data",
        SerializedName = @"cert",
        PossibleTypes = new [] { typeof(string) })]
        string SslConfigurationCert { get; set; }
        /// <summary>CNAME of the cert</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"CNAME of the cert",
        SerializedName = @"cname",
        PossibleTypes = new [] { typeof(string) })]
        string SslConfigurationCname { get; set; }
        /// <summary>Key data</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Key data",
        SerializedName = @"key",
        PossibleTypes = new [] { typeof(string) })]
        string SslConfigurationKey { get; set; }
        /// <summary>Leaf domain label of public endpoint</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Leaf domain label of public endpoint",
        SerializedName = @"leafDomainLabel",
        PossibleTypes = new [] { typeof(string) })]
        string SslConfigurationLeafDomainLabel { get; set; }
        /// <summary>Indicates whether to overwrite existing domain label.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Indicates whether to overwrite existing domain label.",
        SerializedName = @"overwriteExistingDomain",
        PossibleTypes = new [] { typeof(bool) })]
        bool? SslConfigurationOverwriteExistingDomain { get; set; }
        /// <summary>Enable or disable ssl for scoring</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Enable or disable ssl for scoring",
        SerializedName = @"status",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Support.SslConfigStatus) })]
        Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Support.SslConfigStatus? SslConfigurationStatus { get; set; }
        /// <summary>System services</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"System services",
        SerializedName = @"systemServices",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20220501.ISystemService) })]
        Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20220501.ISystemService[] SystemService { get;  }

    }
    /// AKS properties
    internal partial interface IAksSchemaPropertiesInternal

    {
        /// <summary>Number of agents</summary>
        int? AgentCount { get; set; }
        /// <summary>Agent virtual machine size</summary>
        string AgentVMSize { get; set; }
        /// <summary>
        /// An IP address assigned to the Kubernetes DNS service. It must be within the Kubernetes service address range specified
        /// in serviceCidr.
        /// </summary>
        string AkNetworkingConfigurationDnsServiceIP { get; set; }
        /// <summary>
        /// A CIDR notation IP range assigned to the Docker bridge network. It must not overlap with any Subnet IP ranges or the Kubernetes
        /// service address range.
        /// </summary>
        string AkNetworkingConfigurationDockerBridgeCidr { get; set; }
        /// <summary>
        /// A CIDR notation IP range from which to assign service cluster IPs. It must not overlap with any Subnet IP ranges.
        /// </summary>
        string AkNetworkingConfigurationServiceCidr { get; set; }
        /// <summary>Virtual network subnet resource ID the compute nodes belong to</summary>
        string AkNetworkingConfigurationSubnetId { get; set; }
        /// <summary>AKS networking configuration for vnet</summary>
        Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20220501.IAksNetworkingConfiguration AksNetworkingConfiguration { get; set; }
        /// <summary>Cluster full qualified domain name</summary>
        string ClusterFqdn { get; set; }
        /// <summary>Intended usage of the cluster</summary>
        Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Support.ClusterPurpose? ClusterPurpose { get; set; }
        /// <summary>Load Balancer Subnet</summary>
        string LoadBalancerSubnet { get; set; }
        /// <summary>Load Balancer Type</summary>
        Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Support.LoadBalancerType? LoadBalancerType { get; set; }
        /// <summary>SSL configuration</summary>
        Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20220501.ISslConfiguration SslConfiguration { get; set; }
        /// <summary>Cert data</summary>
        string SslConfigurationCert { get; set; }
        /// <summary>CNAME of the cert</summary>
        string SslConfigurationCname { get; set; }
        /// <summary>Key data</summary>
        string SslConfigurationKey { get; set; }
        /// <summary>Leaf domain label of public endpoint</summary>
        string SslConfigurationLeafDomainLabel { get; set; }
        /// <summary>Indicates whether to overwrite existing domain label.</summary>
        bool? SslConfigurationOverwriteExistingDomain { get; set; }
        /// <summary>Enable or disable ssl for scoring</summary>
        Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Support.SslConfigStatus? SslConfigurationStatus { get; set; }
        /// <summary>System services</summary>
        Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20220501.ISystemService[] SystemService { get; set; }

    }
}