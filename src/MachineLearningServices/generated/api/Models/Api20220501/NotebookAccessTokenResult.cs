// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20220501
{
    using static Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.Extensions;

    public partial class NotebookAccessTokenResult :
        Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20220501.INotebookAccessTokenResult,
        Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20220501.INotebookAccessTokenResultInternal
    {

        /// <summary>Backing field for <see cref="AccessToken" /> property.</summary>
        private string _accessToken;

        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Owned)]
        public string AccessToken { get => this._accessToken; }

        /// <summary>Backing field for <see cref="ExpiresIn" /> property.</summary>
        private int? _expiresIn;

        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Owned)]
        public int? ExpiresIn { get => this._expiresIn; }

        /// <summary>Backing field for <see cref="HostName" /> property.</summary>
        private string _hostName;

        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Owned)]
        public string HostName { get => this._hostName; }

        /// <summary>Internal Acessors for AccessToken</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20220501.INotebookAccessTokenResultInternal.AccessToken { get => this._accessToken; set { {_accessToken = value;} } }

        /// <summary>Internal Acessors for ExpiresIn</summary>
        int? Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20220501.INotebookAccessTokenResultInternal.ExpiresIn { get => this._expiresIn; set { {_expiresIn = value;} } }

        /// <summary>Internal Acessors for HostName</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20220501.INotebookAccessTokenResultInternal.HostName { get => this._hostName; set { {_hostName = value;} } }

        /// <summary>Internal Acessors for NotebookResourceId</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20220501.INotebookAccessTokenResultInternal.NotebookResourceId { get => this._notebookResourceId; set { {_notebookResourceId = value;} } }

        /// <summary>Internal Acessors for PublicDns</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20220501.INotebookAccessTokenResultInternal.PublicDns { get => this._publicDns; set { {_publicDns = value;} } }

        /// <summary>Internal Acessors for RefreshToken</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20220501.INotebookAccessTokenResultInternal.RefreshToken { get => this._refreshToken; set { {_refreshToken = value;} } }

        /// <summary>Internal Acessors for Scope</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20220501.INotebookAccessTokenResultInternal.Scope { get => this._scope; set { {_scope = value;} } }

        /// <summary>Internal Acessors for TokenType</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20220501.INotebookAccessTokenResultInternal.TokenType { get => this._tokenType; set { {_tokenType = value;} } }

        /// <summary>Backing field for <see cref="NotebookResourceId" /> property.</summary>
        private string _notebookResourceId;

        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Owned)]
        public string NotebookResourceId { get => this._notebookResourceId; }

        /// <summary>Backing field for <see cref="PublicDns" /> property.</summary>
        private string _publicDns;

        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Owned)]
        public string PublicDns { get => this._publicDns; }

        /// <summary>Backing field for <see cref="RefreshToken" /> property.</summary>
        private string _refreshToken;

        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Owned)]
        public string RefreshToken { get => this._refreshToken; }

        /// <summary>Backing field for <see cref="Scope" /> property.</summary>
        private string _scope;

        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Owned)]
        public string Scope { get => this._scope; }

        /// <summary>Backing field for <see cref="TokenType" /> property.</summary>
        private string _tokenType;

        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Owned)]
        public string TokenType { get => this._tokenType; }

        /// <summary>Creates an new <see cref="NotebookAccessTokenResult" /> instance.</summary>
        public NotebookAccessTokenResult()
        {

        }
    }
    public partial interface INotebookAccessTokenResult :
        Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.IJsonSerializable
    {
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"",
        SerializedName = @"accessToken",
        PossibleTypes = new [] { typeof(string) })]
        string AccessToken { get;  }

        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"",
        SerializedName = @"expiresIn",
        PossibleTypes = new [] { typeof(int) })]
        int? ExpiresIn { get;  }

        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"",
        SerializedName = @"hostName",
        PossibleTypes = new [] { typeof(string) })]
        string HostName { get;  }

        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"",
        SerializedName = @"notebookResourceId",
        PossibleTypes = new [] { typeof(string) })]
        string NotebookResourceId { get;  }

        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"",
        SerializedName = @"publicDns",
        PossibleTypes = new [] { typeof(string) })]
        string PublicDns { get;  }

        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"",
        SerializedName = @"refreshToken",
        PossibleTypes = new [] { typeof(string) })]
        string RefreshToken { get;  }

        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"",
        SerializedName = @"scope",
        PossibleTypes = new [] { typeof(string) })]
        string Scope { get;  }

        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"",
        SerializedName = @"tokenType",
        PossibleTypes = new [] { typeof(string) })]
        string TokenType { get;  }

    }
    internal partial interface INotebookAccessTokenResultInternal

    {
        string AccessToken { get; set; }

        int? ExpiresIn { get; set; }

        string HostName { get; set; }

        string NotebookResourceId { get; set; }

        string PublicDns { get; set; }

        string RefreshToken { get; set; }

        string Scope { get; set; }

        string TokenType { get; set; }

    }
}