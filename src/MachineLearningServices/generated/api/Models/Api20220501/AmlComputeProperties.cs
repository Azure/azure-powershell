// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20220501
{
    using static Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.Extensions;

    /// <summary>AML Compute properties</summary>
    public partial class AmlComputeProperties :
        Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20220501.IAmlComputeProperties,
        Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20220501.IAmlComputePropertiesInternal
    {

        /// <summary>Backing field for <see cref="AllocationState" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Support.AllocationState? _allocationState;

        /// <summary>
        /// Allocation state of the compute. Possible values are: steady - Indicates that the compute is not resizing. There are no
        /// changes to the number of compute nodes in the compute in progress. A compute enters this state when it is created and
        /// when no operations are being performed on the compute to change the number of compute nodes. resizing - Indicates that
        /// the compute is resizing; that is, compute nodes are being added to or removed from the compute.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Support.AllocationState? AllocationState { get => this._allocationState; }

        /// <summary>Backing field for <see cref="AllocationStateTransitionTime" /> property.</summary>
        private global::System.DateTime? _allocationStateTransitionTime;

        /// <summary>The time at which the compute entered its current allocation state.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Owned)]
        public global::System.DateTime? AllocationStateTransitionTime { get => this._allocationStateTransitionTime; }

        /// <summary>Backing field for <see cref="CurrentNodeCount" /> property.</summary>
        private int? _currentNodeCount;

        /// <summary>The number of compute nodes currently assigned to the compute.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Owned)]
        public int? CurrentNodeCount { get => this._currentNodeCount; }

        /// <summary>Backing field for <see cref="EnableNodePublicIP" /> property.</summary>
        private bool? _enableNodePublicIP;

        /// <summary>
        /// Enable or disable node public IP address provisioning. Possible values are: Possible values are: true - Indicates that
        /// the compute nodes will have public IPs provisioned. false - Indicates that the compute nodes will have a private endpoint
        /// and no public IPs.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Owned)]
        public bool? EnableNodePublicIP { get => this._enableNodePublicIP; set => this._enableNodePublicIP = value; }

        /// <summary>Backing field for <see cref="Error" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api30.IErrorResponse[] _error;

        /// <summary>Collection of errors encountered by various compute nodes during node setup.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api30.IErrorResponse[] Error { get => this._error; }

        /// <summary>Backing field for <see cref="IsolatedNetwork" /> property.</summary>
        private bool? _isolatedNetwork;

        /// <summary>Network is isolated or not</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Owned)]
        public bool? IsolatedNetwork { get => this._isolatedNetwork; set => this._isolatedNetwork = value; }

        /// <summary>Internal Acessors for AllocationState</summary>
        Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Support.AllocationState? Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20220501.IAmlComputePropertiesInternal.AllocationState { get => this._allocationState; set { {_allocationState = value;} } }

        /// <summary>Internal Acessors for AllocationStateTransitionTime</summary>
        global::System.DateTime? Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20220501.IAmlComputePropertiesInternal.AllocationStateTransitionTime { get => this._allocationStateTransitionTime; set { {_allocationStateTransitionTime = value;} } }

        /// <summary>Internal Acessors for CurrentNodeCount</summary>
        int? Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20220501.IAmlComputePropertiesInternal.CurrentNodeCount { get => this._currentNodeCount; set { {_currentNodeCount = value;} } }

        /// <summary>Internal Acessors for Error</summary>
        Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api30.IErrorResponse[] Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20220501.IAmlComputePropertiesInternal.Error { get => this._error; set { {_error = value;} } }

        /// <summary>Internal Acessors for NodeStateCount</summary>
        Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20220501.INodeStateCounts Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20220501.IAmlComputePropertiesInternal.NodeStateCount { get => (this._nodeStateCount = this._nodeStateCount ?? new Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20220501.NodeStateCounts()); set { {_nodeStateCount = value;} } }

        /// <summary>Internal Acessors for NodeStateCountIdleNodeCount</summary>
        int? Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20220501.IAmlComputePropertiesInternal.NodeStateCountIdleNodeCount { get => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20220501.INodeStateCountsInternal)NodeStateCount).IdleNodeCount; set => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20220501.INodeStateCountsInternal)NodeStateCount).IdleNodeCount = value; }

        /// <summary>Internal Acessors for NodeStateCountLeavingNodeCount</summary>
        int? Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20220501.IAmlComputePropertiesInternal.NodeStateCountLeavingNodeCount { get => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20220501.INodeStateCountsInternal)NodeStateCount).LeavingNodeCount; set => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20220501.INodeStateCountsInternal)NodeStateCount).LeavingNodeCount = value; }

        /// <summary>Internal Acessors for NodeStateCountPreemptedNodeCount</summary>
        int? Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20220501.IAmlComputePropertiesInternal.NodeStateCountPreemptedNodeCount { get => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20220501.INodeStateCountsInternal)NodeStateCount).PreemptedNodeCount; set => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20220501.INodeStateCountsInternal)NodeStateCount).PreemptedNodeCount = value; }

        /// <summary>Internal Acessors for NodeStateCountPreparingNodeCount</summary>
        int? Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20220501.IAmlComputePropertiesInternal.NodeStateCountPreparingNodeCount { get => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20220501.INodeStateCountsInternal)NodeStateCount).PreparingNodeCount; set => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20220501.INodeStateCountsInternal)NodeStateCount).PreparingNodeCount = value; }

        /// <summary>Internal Acessors for NodeStateCountRunningNodeCount</summary>
        int? Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20220501.IAmlComputePropertiesInternal.NodeStateCountRunningNodeCount { get => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20220501.INodeStateCountsInternal)NodeStateCount).RunningNodeCount; set => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20220501.INodeStateCountsInternal)NodeStateCount).RunningNodeCount = value; }

        /// <summary>Internal Acessors for NodeStateCountUnusableNodeCount</summary>
        int? Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20220501.IAmlComputePropertiesInternal.NodeStateCountUnusableNodeCount { get => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20220501.INodeStateCountsInternal)NodeStateCount).UnusableNodeCount; set => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20220501.INodeStateCountsInternal)NodeStateCount).UnusableNodeCount = value; }

        /// <summary>Internal Acessors for ScaleSetting</summary>
        Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20220501.IScaleSettings Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20220501.IAmlComputePropertiesInternal.ScaleSetting { get => (this._scaleSetting = this._scaleSetting ?? new Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20220501.ScaleSettings()); set { {_scaleSetting = value;} } }

        /// <summary>Internal Acessors for Subnet</summary>
        Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20220501.IResourceId Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20220501.IAmlComputePropertiesInternal.Subnet { get => (this._subnet = this._subnet ?? new Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20220501.ResourceId()); set { {_subnet = value;} } }

        /// <summary>Internal Acessors for TargetNodeCount</summary>
        int? Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20220501.IAmlComputePropertiesInternal.TargetNodeCount { get => this._targetNodeCount; set { {_targetNodeCount = value;} } }

        /// <summary>Internal Acessors for UserAccountCredentials</summary>
        Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20220501.IUserAccountCredentials Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20220501.IAmlComputePropertiesInternal.UserAccountCredentials { get => (this._userAccountCredentials = this._userAccountCredentials ?? new Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20220501.UserAccountCredentials()); set { {_userAccountCredentials = value;} } }

        /// <summary>Internal Acessors for VirtualMachineImage</summary>
        Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20220501.IVirtualMachineImage Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20220501.IAmlComputePropertiesInternal.VirtualMachineImage { get => (this._virtualMachineImage = this._virtualMachineImage ?? new Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20220501.VirtualMachineImage()); set { {_virtualMachineImage = value;} } }

        /// <summary>Backing field for <see cref="NodeStateCount" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20220501.INodeStateCounts _nodeStateCount;

        /// <summary>Counts of various node states on the compute.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20220501.INodeStateCounts NodeStateCount { get => (this._nodeStateCount = this._nodeStateCount ?? new Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20220501.NodeStateCounts()); }

        /// <summary>Number of compute nodes in idle state.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Inlined)]
        public int? NodeStateCountIdleNodeCount { get => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20220501.INodeStateCountsInternal)NodeStateCount).IdleNodeCount; }

        /// <summary>Number of compute nodes which are leaving the amlCompute.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Inlined)]
        public int? NodeStateCountLeavingNodeCount { get => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20220501.INodeStateCountsInternal)NodeStateCount).LeavingNodeCount; }

        /// <summary>Number of compute nodes which are in preempted state.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Inlined)]
        public int? NodeStateCountPreemptedNodeCount { get => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20220501.INodeStateCountsInternal)NodeStateCount).PreemptedNodeCount; }

        /// <summary>Number of compute nodes which are being prepared.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Inlined)]
        public int? NodeStateCountPreparingNodeCount { get => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20220501.INodeStateCountsInternal)NodeStateCount).PreparingNodeCount; }

        /// <summary>Number of compute nodes which are running jobs.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Inlined)]
        public int? NodeStateCountRunningNodeCount { get => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20220501.INodeStateCountsInternal)NodeStateCount).RunningNodeCount; }

        /// <summary>Number of compute nodes which are in unusable state.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Inlined)]
        public int? NodeStateCountUnusableNodeCount { get => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20220501.INodeStateCountsInternal)NodeStateCount).UnusableNodeCount; }

        /// <summary>Backing field for <see cref="OSType" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Support.OSType? _oSType;

        /// <summary>Compute OS Type</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Support.OSType? OSType { get => this._oSType; set => this._oSType = value; }

        /// <summary>Backing field for <see cref="PropertyBag" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.IAny _propertyBag;

        /// <summary>A property bag containing additional properties.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.IAny PropertyBag { get => (this._propertyBag = this._propertyBag ?? new Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Any()); set => this._propertyBag = value; }

        /// <summary>Backing field for <see cref="RemoteLoginPortPublicAccess" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Support.RemoteLoginPortPublicAccess? _remoteLoginPortPublicAccess;

        /// <summary>
        /// State of the public SSH port. Possible values are: Disabled - Indicates that the public ssh port is closed on all nodes
        /// of the cluster. Enabled - Indicates that the public ssh port is open on all nodes of the cluster. NotSpecified - Indicates
        /// that the public ssh port is closed on all nodes of the cluster if VNet is defined, else is open all public nodes. It can
        /// be default only during cluster creation time, after creation it will be either enabled or disabled.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Support.RemoteLoginPortPublicAccess? RemoteLoginPortPublicAccess { get => this._remoteLoginPortPublicAccess; set => this._remoteLoginPortPublicAccess = value; }

        /// <summary>Backing field for <see cref="ScaleSetting" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20220501.IScaleSettings _scaleSetting;

        /// <summary>Scale settings for AML Compute</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20220501.IScaleSettings ScaleSetting { get => (this._scaleSetting = this._scaleSetting ?? new Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20220501.ScaleSettings()); set => this._scaleSetting = value; }

        /// <summary>Max number of nodes to use</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Inlined)]
        public int? ScaleSettingMaxNodeCount { get => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20220501.IScaleSettingsInternal)ScaleSetting).MaxNodeCount; set => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20220501.IScaleSettingsInternal)ScaleSetting).MaxNodeCount = value ?? default(int); }

        /// <summary>Min number of nodes to use</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Inlined)]
        public int? ScaleSettingMinNodeCount { get => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20220501.IScaleSettingsInternal)ScaleSetting).MinNodeCount; set => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20220501.IScaleSettingsInternal)ScaleSetting).MinNodeCount = value ?? default(int); }

        /// <summary>
        /// Node Idle Time before scaling down amlCompute. This string needs to be in the RFC Format.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Inlined)]
        public global::System.TimeSpan? ScaleSettingNodeIdleTimeBeforeScaleDown { get => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20220501.IScaleSettingsInternal)ScaleSetting).NodeIdleTimeBeforeScaleDown; set => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20220501.IScaleSettingsInternal)ScaleSetting).NodeIdleTimeBeforeScaleDown = value ?? default(global::System.TimeSpan); }

        /// <summary>Backing field for <see cref="Subnet" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20220501.IResourceId _subnet;

        /// <summary>Virtual network subnet resource ID the compute nodes belong to.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20220501.IResourceId Subnet { get => (this._subnet = this._subnet ?? new Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20220501.ResourceId()); set => this._subnet = value; }

        /// <summary>The ID of the resource</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Inlined)]
        public string SubnetId { get => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20220501.IResourceIdInternal)Subnet).Id; set => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20220501.IResourceIdInternal)Subnet).Id = value ?? null; }

        /// <summary>Backing field for <see cref="TargetNodeCount" /> property.</summary>
        private int? _targetNodeCount;

        /// <summary>
        /// The target number of compute nodes for the compute. If the allocationState is resizing, this property denotes the target
        /// node count for the ongoing resize operation. If the allocationState is steady, this property denotes the target node count
        /// for the previous resize operation.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Owned)]
        public int? TargetNodeCount { get => this._targetNodeCount; }

        /// <summary>Backing field for <see cref="UserAccountCredentials" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20220501.IUserAccountCredentials _userAccountCredentials;

        /// <summary>
        /// Credentials for an administrator user account that will be created on each compute node.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20220501.IUserAccountCredentials UserAccountCredentials { get => (this._userAccountCredentials = this._userAccountCredentials ?? new Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20220501.UserAccountCredentials()); set => this._userAccountCredentials = value; }

        /// <summary>Name of the administrator user account which can be used to SSH to nodes.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Inlined)]
        public string UserAccountCredentialsAdminUserName { get => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20220501.IUserAccountCredentialsInternal)UserAccountCredentials).AdminUserName; set => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20220501.IUserAccountCredentialsInternal)UserAccountCredentials).AdminUserName = value ?? null; }

        /// <summary>Password of the administrator user account.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Inlined)]
        public string UserAccountCredentialsAdminUserPassword { get => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20220501.IUserAccountCredentialsInternal)UserAccountCredentials).AdminUserPassword; set => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20220501.IUserAccountCredentialsInternal)UserAccountCredentials).AdminUserPassword = value ?? null; }

        /// <summary>SSH public key of the administrator user account.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Inlined)]
        public string UserAccountCredentialsAdminUserSshPublicKey { get => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20220501.IUserAccountCredentialsInternal)UserAccountCredentials).AdminUserSshPublicKey; set => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20220501.IUserAccountCredentialsInternal)UserAccountCredentials).AdminUserSshPublicKey = value ?? null; }

        /// <summary>Backing field for <see cref="VMPriority" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Support.VMPriority? _vMPriority;

        /// <summary>Virtual Machine priority</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Support.VMPriority? VMPriority { get => this._vMPriority; set => this._vMPriority = value; }

        /// <summary>Backing field for <see cref="VMSize" /> property.</summary>
        private string _vMSize;

        /// <summary>Virtual Machine Size</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Owned)]
        public string VMSize { get => this._vMSize; set => this._vMSize = value; }

        /// <summary>Backing field for <see cref="VirtualMachineImage" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20220501.IVirtualMachineImage _virtualMachineImage;

        /// <summary>Virtual Machine image for AML Compute - windows only</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20220501.IVirtualMachineImage VirtualMachineImage { get => (this._virtualMachineImage = this._virtualMachineImage ?? new Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20220501.VirtualMachineImage()); set => this._virtualMachineImage = value; }

        /// <summary>Virtual Machine image path</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Inlined)]
        public string VirtualMachineImageId { get => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20220501.IVirtualMachineImageInternal)VirtualMachineImage).Id; set => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20220501.IVirtualMachineImageInternal)VirtualMachineImage).Id = value ?? null; }

        /// <summary>Creates an new <see cref="AmlComputeProperties" /> instance.</summary>
        public AmlComputeProperties()
        {

        }
    }
    /// AML Compute properties
    public partial interface IAmlComputeProperties :
        Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.IJsonSerializable
    {
        /// <summary>
        /// Allocation state of the compute. Possible values are: steady - Indicates that the compute is not resizing. There are no
        /// changes to the number of compute nodes in the compute in progress. A compute enters this state when it is created and
        /// when no operations are being performed on the compute to change the number of compute nodes. resizing - Indicates that
        /// the compute is resizing; that is, compute nodes are being added to or removed from the compute.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Allocation state of the compute. Possible values are: steady - Indicates that the compute is not resizing. There are no changes to the number of compute nodes in the compute in progress. A compute enters this state when it is created and when no operations are being performed on the compute to change the number of compute nodes. resizing - Indicates that the compute is resizing; that is, compute nodes are being added to or removed from the compute.",
        SerializedName = @"allocationState",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Support.AllocationState) })]
        Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Support.AllocationState? AllocationState { get;  }
        /// <summary>The time at which the compute entered its current allocation state.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The time at which the compute entered its current allocation state.",
        SerializedName = @"allocationStateTransitionTime",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? AllocationStateTransitionTime { get;  }
        /// <summary>The number of compute nodes currently assigned to the compute.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The number of compute nodes currently assigned to the compute.",
        SerializedName = @"currentNodeCount",
        PossibleTypes = new [] { typeof(int) })]
        int? CurrentNodeCount { get;  }
        /// <summary>
        /// Enable or disable node public IP address provisioning. Possible values are: Possible values are: true - Indicates that
        /// the compute nodes will have public IPs provisioned. false - Indicates that the compute nodes will have a private endpoint
        /// and no public IPs.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Enable or disable node public IP address provisioning. Possible values are: Possible values are: true - Indicates that the compute nodes will have public IPs provisioned. false - Indicates that the compute nodes will have a private endpoint and no public IPs.",
        SerializedName = @"enableNodePublicIp",
        PossibleTypes = new [] { typeof(bool) })]
        bool? EnableNodePublicIP { get; set; }
        /// <summary>Collection of errors encountered by various compute nodes during node setup.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Collection of errors encountered by various compute nodes during node setup.",
        SerializedName = @"errors",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api30.IErrorResponse) })]
        Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api30.IErrorResponse[] Error { get;  }
        /// <summary>Network is isolated or not</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Network is isolated or not",
        SerializedName = @"isolatedNetwork",
        PossibleTypes = new [] { typeof(bool) })]
        bool? IsolatedNetwork { get; set; }
        /// <summary>Number of compute nodes in idle state.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Number of compute nodes in idle state.",
        SerializedName = @"idleNodeCount",
        PossibleTypes = new [] { typeof(int) })]
        int? NodeStateCountIdleNodeCount { get;  }
        /// <summary>Number of compute nodes which are leaving the amlCompute.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Number of compute nodes which are leaving the amlCompute.",
        SerializedName = @"leavingNodeCount",
        PossibleTypes = new [] { typeof(int) })]
        int? NodeStateCountLeavingNodeCount { get;  }
        /// <summary>Number of compute nodes which are in preempted state.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Number of compute nodes which are in preempted state.",
        SerializedName = @"preemptedNodeCount",
        PossibleTypes = new [] { typeof(int) })]
        int? NodeStateCountPreemptedNodeCount { get;  }
        /// <summary>Number of compute nodes which are being prepared.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Number of compute nodes which are being prepared.",
        SerializedName = @"preparingNodeCount",
        PossibleTypes = new [] { typeof(int) })]
        int? NodeStateCountPreparingNodeCount { get;  }
        /// <summary>Number of compute nodes which are running jobs.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Number of compute nodes which are running jobs.",
        SerializedName = @"runningNodeCount",
        PossibleTypes = new [] { typeof(int) })]
        int? NodeStateCountRunningNodeCount { get;  }
        /// <summary>Number of compute nodes which are in unusable state.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Number of compute nodes which are in unusable state.",
        SerializedName = @"unusableNodeCount",
        PossibleTypes = new [] { typeof(int) })]
        int? NodeStateCountUnusableNodeCount { get;  }
        /// <summary>Compute OS Type</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Compute OS Type",
        SerializedName = @"osType",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Support.OSType) })]
        Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Support.OSType? OSType { get; set; }
        /// <summary>A property bag containing additional properties.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"A property bag containing additional properties.",
        SerializedName = @"propertyBag",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.IAny) })]
        Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.IAny PropertyBag { get; set; }
        /// <summary>
        /// State of the public SSH port. Possible values are: Disabled - Indicates that the public ssh port is closed on all nodes
        /// of the cluster. Enabled - Indicates that the public ssh port is open on all nodes of the cluster. NotSpecified - Indicates
        /// that the public ssh port is closed on all nodes of the cluster if VNet is defined, else is open all public nodes. It can
        /// be default only during cluster creation time, after creation it will be either enabled or disabled.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"State of the public SSH port. Possible values are: Disabled - Indicates that the public ssh port is closed on all nodes of the cluster. Enabled - Indicates that the public ssh port is open on all nodes of the cluster. NotSpecified - Indicates that the public ssh port is closed on all nodes of the cluster if VNet is defined, else is open all public nodes. It can be default only during cluster creation time, after creation it will be either enabled or disabled.",
        SerializedName = @"remoteLoginPortPublicAccess",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Support.RemoteLoginPortPublicAccess) })]
        Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Support.RemoteLoginPortPublicAccess? RemoteLoginPortPublicAccess { get; set; }
        /// <summary>Max number of nodes to use</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Max number of nodes to use",
        SerializedName = @"maxNodeCount",
        PossibleTypes = new [] { typeof(int) })]
        int? ScaleSettingMaxNodeCount { get; set; }
        /// <summary>Min number of nodes to use</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Min number of nodes to use",
        SerializedName = @"minNodeCount",
        PossibleTypes = new [] { typeof(int) })]
        int? ScaleSettingMinNodeCount { get; set; }
        /// <summary>
        /// Node Idle Time before scaling down amlCompute. This string needs to be in the RFC Format.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Node Idle Time before scaling down amlCompute. This string needs to be in the RFC Format.",
        SerializedName = @"nodeIdleTimeBeforeScaleDown",
        PossibleTypes = new [] { typeof(global::System.TimeSpan) })]
        global::System.TimeSpan? ScaleSettingNodeIdleTimeBeforeScaleDown { get; set; }
        /// <summary>The ID of the resource</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The ID of the resource",
        SerializedName = @"id",
        PossibleTypes = new [] { typeof(string) })]
        string SubnetId { get; set; }
        /// <summary>
        /// The target number of compute nodes for the compute. If the allocationState is resizing, this property denotes the target
        /// node count for the ongoing resize operation. If the allocationState is steady, this property denotes the target node count
        /// for the previous resize operation.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The target number of compute nodes for the compute. If the allocationState is resizing, this property denotes the target node count for the ongoing resize operation. If the allocationState is steady, this property denotes the target node count for the previous resize operation.",
        SerializedName = @"targetNodeCount",
        PossibleTypes = new [] { typeof(int) })]
        int? TargetNodeCount { get;  }
        /// <summary>Name of the administrator user account which can be used to SSH to nodes.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Name of the administrator user account which can be used to SSH to nodes.",
        SerializedName = @"adminUserName",
        PossibleTypes = new [] { typeof(string) })]
        string UserAccountCredentialsAdminUserName { get; set; }
        /// <summary>Password of the administrator user account.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Password of the administrator user account.",
        SerializedName = @"adminUserPassword",
        PossibleTypes = new [] { typeof(string) })]
        string UserAccountCredentialsAdminUserPassword { get; set; }
        /// <summary>SSH public key of the administrator user account.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"SSH public key of the administrator user account.",
        SerializedName = @"adminUserSshPublicKey",
        PossibleTypes = new [] { typeof(string) })]
        string UserAccountCredentialsAdminUserSshPublicKey { get; set; }
        /// <summary>Virtual Machine priority</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Virtual Machine priority",
        SerializedName = @"vmPriority",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Support.VMPriority) })]
        Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Support.VMPriority? VMPriority { get; set; }
        /// <summary>Virtual Machine Size</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Virtual Machine Size",
        SerializedName = @"vmSize",
        PossibleTypes = new [] { typeof(string) })]
        string VMSize { get; set; }
        /// <summary>Virtual Machine image path</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Virtual Machine image path",
        SerializedName = @"id",
        PossibleTypes = new [] { typeof(string) })]
        string VirtualMachineImageId { get; set; }

    }
    /// AML Compute properties
    internal partial interface IAmlComputePropertiesInternal

    {
        /// <summary>
        /// Allocation state of the compute. Possible values are: steady - Indicates that the compute is not resizing. There are no
        /// changes to the number of compute nodes in the compute in progress. A compute enters this state when it is created and
        /// when no operations are being performed on the compute to change the number of compute nodes. resizing - Indicates that
        /// the compute is resizing; that is, compute nodes are being added to or removed from the compute.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Support.AllocationState? AllocationState { get; set; }
        /// <summary>The time at which the compute entered its current allocation state.</summary>
        global::System.DateTime? AllocationStateTransitionTime { get; set; }
        /// <summary>The number of compute nodes currently assigned to the compute.</summary>
        int? CurrentNodeCount { get; set; }
        /// <summary>
        /// Enable or disable node public IP address provisioning. Possible values are: Possible values are: true - Indicates that
        /// the compute nodes will have public IPs provisioned. false - Indicates that the compute nodes will have a private endpoint
        /// and no public IPs.
        /// </summary>
        bool? EnableNodePublicIP { get; set; }
        /// <summary>Collection of errors encountered by various compute nodes during node setup.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api30.IErrorResponse[] Error { get; set; }
        /// <summary>Network is isolated or not</summary>
        bool? IsolatedNetwork { get; set; }
        /// <summary>Counts of various node states on the compute.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20220501.INodeStateCounts NodeStateCount { get; set; }
        /// <summary>Number of compute nodes in idle state.</summary>
        int? NodeStateCountIdleNodeCount { get; set; }
        /// <summary>Number of compute nodes which are leaving the amlCompute.</summary>
        int? NodeStateCountLeavingNodeCount { get; set; }
        /// <summary>Number of compute nodes which are in preempted state.</summary>
        int? NodeStateCountPreemptedNodeCount { get; set; }
        /// <summary>Number of compute nodes which are being prepared.</summary>
        int? NodeStateCountPreparingNodeCount { get; set; }
        /// <summary>Number of compute nodes which are running jobs.</summary>
        int? NodeStateCountRunningNodeCount { get; set; }
        /// <summary>Number of compute nodes which are in unusable state.</summary>
        int? NodeStateCountUnusableNodeCount { get; set; }
        /// <summary>Compute OS Type</summary>
        Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Support.OSType? OSType { get; set; }
        /// <summary>A property bag containing additional properties.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.IAny PropertyBag { get; set; }
        /// <summary>
        /// State of the public SSH port. Possible values are: Disabled - Indicates that the public ssh port is closed on all nodes
        /// of the cluster. Enabled - Indicates that the public ssh port is open on all nodes of the cluster. NotSpecified - Indicates
        /// that the public ssh port is closed on all nodes of the cluster if VNet is defined, else is open all public nodes. It can
        /// be default only during cluster creation time, after creation it will be either enabled or disabled.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Support.RemoteLoginPortPublicAccess? RemoteLoginPortPublicAccess { get; set; }
        /// <summary>Scale settings for AML Compute</summary>
        Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20220501.IScaleSettings ScaleSetting { get; set; }
        /// <summary>Max number of nodes to use</summary>
        int? ScaleSettingMaxNodeCount { get; set; }
        /// <summary>Min number of nodes to use</summary>
        int? ScaleSettingMinNodeCount { get; set; }
        /// <summary>
        /// Node Idle Time before scaling down amlCompute. This string needs to be in the RFC Format.
        /// </summary>
        global::System.TimeSpan? ScaleSettingNodeIdleTimeBeforeScaleDown { get; set; }
        /// <summary>Virtual network subnet resource ID the compute nodes belong to.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20220501.IResourceId Subnet { get; set; }
        /// <summary>The ID of the resource</summary>
        string SubnetId { get; set; }
        /// <summary>
        /// The target number of compute nodes for the compute. If the allocationState is resizing, this property denotes the target
        /// node count for the ongoing resize operation. If the allocationState is steady, this property denotes the target node count
        /// for the previous resize operation.
        /// </summary>
        int? TargetNodeCount { get; set; }
        /// <summary>
        /// Credentials for an administrator user account that will be created on each compute node.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20220501.IUserAccountCredentials UserAccountCredentials { get; set; }
        /// <summary>Name of the administrator user account which can be used to SSH to nodes.</summary>
        string UserAccountCredentialsAdminUserName { get; set; }
        /// <summary>Password of the administrator user account.</summary>
        string UserAccountCredentialsAdminUserPassword { get; set; }
        /// <summary>SSH public key of the administrator user account.</summary>
        string UserAccountCredentialsAdminUserSshPublicKey { get; set; }
        /// <summary>Virtual Machine priority</summary>
        Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Support.VMPriority? VMPriority { get; set; }
        /// <summary>Virtual Machine Size</summary>
        string VMSize { get; set; }
        /// <summary>Virtual Machine image for AML Compute - windows only</summary>
        Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20220501.IVirtualMachineImage VirtualMachineImage { get; set; }
        /// <summary>Virtual Machine image path</summary>
        string VirtualMachineImageId { get; set; }

    }
}