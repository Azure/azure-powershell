// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.PrivateDns
{
    using Microsoft.Rest.Azure;
    using Models;

    /// <summary>
    /// VirtualNetworkLinksOperations operations.
    /// </summary>
    public partial interface IVirtualNetworkLinksOperations
    {
        /// <summary>
        /// Creates or updates a virtual network link to the specified Private DNS
        /// zone.
        /// </summary>
        /// <remarks>
        /// Creates or updates a virtual network link to the specified Private DNS
        /// zone.
        /// </remarks>
        /// <param name='resourceGroupName'>
        /// The name of the resource group.
        /// </param>
        /// <param name='privateZoneName'>
        /// The name of the Private DNS zone (without a terminating dot).
        /// </param>
        /// <param name='virtualNetworkLinkName'>
        /// The name of the virtual network link.
        /// </param>
        /// <param name='ifMatch'>
        /// The ETag of the virtual network link to the Private DNS zone. Omit this
        /// value to always overwrite the current virtual network link. Specify the
        /// last-seen ETag value to prevent accidentally overwriting any concurrent
        /// changes.
        /// </param>
        /// <param name='ifNoneMatch'>
        /// Set to &#39;*&#39; to allow a new virtual network link to the Private DNS zone to
        /// be created, but to prevent updating an existing link. Other values will be
        /// ignored.
        /// </param>
        /// <param name='parameters'>
        /// Parameters supplied to the CreateOrUpdate operation.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="Microsoft.Rest.Azure.CloudException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.SerializationException">
        /// Thrown when unable to deserialize the response
        /// </exception>
        System.Threading.Tasks.Task<Microsoft.Rest.Azure.AzureOperationResponse<VirtualNetworkLink>> CreateOrUpdateWithHttpMessagesAsync(string resourceGroupName, string privateZoneName, string virtualNetworkLinkName, VirtualNetworkLink parameters, string ifMatch = default(string), string ifNoneMatch = default(string), System.Collections.Generic.Dictionary<string, System.Collections.Generic.List<string>> customHeaders = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// Updates a virtual network link to the specified Private DNS zone.
        /// </summary>
        /// <remarks>
        /// Updates a virtual network link to the specified Private DNS zone.
        /// </remarks>
        /// <param name='resourceGroupName'>
        /// The name of the resource group.
        /// </param>
        /// <param name='privateZoneName'>
        /// The name of the Private DNS zone (without a terminating dot).
        /// </param>
        /// <param name='virtualNetworkLinkName'>
        /// The name of the virtual network link.
        /// </param>
        /// <param name='ifMatch'>
        /// The ETag of the virtual network link to the Private DNS zone. Omit this
        /// value to always overwrite the current virtual network link. Specify the
        /// last-seen ETag value to prevent accidentally overwriting any concurrent
        /// changes.
        /// </param>
        /// <param name='parameters'>
        /// Parameters supplied to the Update operation.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="Microsoft.Rest.Azure.CloudException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.SerializationException">
        /// Thrown when unable to deserialize the response
        /// </exception>
        System.Threading.Tasks.Task<Microsoft.Rest.Azure.AzureOperationResponse<VirtualNetworkLink>> UpdateWithHttpMessagesAsync(string resourceGroupName, string privateZoneName, string virtualNetworkLinkName, VirtualNetworkLink parameters, string ifMatch = default(string), System.Collections.Generic.Dictionary<string, System.Collections.Generic.List<string>> customHeaders = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// Deletes a virtual network link to the specified Private DNS zone. WARNING:
        /// In case of a registration virtual network, all auto-registered DNS records
        /// in the zone for the virtual network will also be deleted. This operation
        /// cannot be undone.
        /// </summary>
        /// <remarks>
        /// Deletes a virtual network link to the specified Private DNS zone. WARNING:
        /// In case of a registration virtual network, all auto-registered DNS records
        /// in the zone for the virtual network will also be deleted. This operation
        /// cannot be undone.
        /// </remarks>
        /// <param name='resourceGroupName'>
        /// The name of the resource group.
        /// </param>
        /// <param name='privateZoneName'>
        /// The name of the Private DNS zone (without a terminating dot).
        /// </param>
        /// <param name='virtualNetworkLinkName'>
        /// The name of the virtual network link.
        /// </param>
        /// <param name='ifMatch'>
        /// The ETag of the virtual network link to the Private DNS zone. Omit this
        /// value to always delete the current zone. Specify the last-seen ETag value
        /// to prevent accidentally deleting any concurrent changes.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="Microsoft.Rest.Azure.CloudException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        System.Threading.Tasks.Task<Microsoft.Rest.Azure.AzureOperationResponse> DeleteWithHttpMessagesAsync(string resourceGroupName, string privateZoneName, string virtualNetworkLinkName, string ifMatch = default(string), System.Collections.Generic.Dictionary<string, System.Collections.Generic.List<string>> customHeaders = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// Gets a virtual network link to the specified Private DNS zone.
        /// </summary>
        /// <remarks>
        /// Gets a virtual network link to the specified Private DNS zone.
        /// </remarks>
        /// <param name='resourceGroupName'>
        /// The name of the resource group.
        /// </param>
        /// <param name='privateZoneName'>
        /// The name of the Private DNS zone (without a terminating dot).
        /// </param>
        /// <param name='virtualNetworkLinkName'>
        /// The name of the virtual network link.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="Microsoft.Rest.Azure.CloudException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.SerializationException">
        /// Thrown when unable to deserialize the response
        /// </exception>
        System.Threading.Tasks.Task<Microsoft.Rest.Azure.AzureOperationResponse<VirtualNetworkLink>> GetWithHttpMessagesAsync(string resourceGroupName, string privateZoneName, string virtualNetworkLinkName, System.Collections.Generic.Dictionary<string, System.Collections.Generic.List<string>> customHeaders = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// Lists the virtual network links to the specified Private DNS zone.
        /// </summary>
        /// <remarks>
        /// Lists the virtual network links to the specified Private DNS zone.
        /// </remarks>
        /// <param name='resourceGroupName'>
        /// The name of the resource group.
        /// </param>
        /// <param name='privateZoneName'>
        /// The name of the Private DNS zone (without a terminating dot).
        /// </param>
        /// <param name='top'>
        /// The maximum number of virtual network links to return. If not specified,
        /// returns up to 100 virtual network links.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="Microsoft.Rest.Azure.CloudException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.SerializationException">
        /// Thrown when unable to deserialize the response
        /// </exception>
        System.Threading.Tasks.Task<Microsoft.Rest.Azure.AzureOperationResponse<Microsoft.Rest.Azure.IPage<VirtualNetworkLink>>> ListWithHttpMessagesAsync(string resourceGroupName, string privateZoneName, int? top = default(int?), System.Collections.Generic.Dictionary<string, System.Collections.Generic.List<string>> customHeaders = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// Creates or updates a virtual network link to the specified Private DNS
        /// zone.
        /// </summary>
        /// <remarks>
        /// Creates or updates a virtual network link to the specified Private DNS
        /// zone.
        /// </remarks>
        /// <param name='resourceGroupName'>
        /// The name of the resource group.
        /// </param>
        /// <param name='privateZoneName'>
        /// The name of the Private DNS zone (without a terminating dot).
        /// </param>
        /// <param name='virtualNetworkLinkName'>
        /// The name of the virtual network link.
        /// </param>
        /// <param name='ifMatch'>
        /// The ETag of the virtual network link to the Private DNS zone. Omit this
        /// value to always overwrite the current virtual network link. Specify the
        /// last-seen ETag value to prevent accidentally overwriting any concurrent
        /// changes.
        /// </param>
        /// <param name='ifNoneMatch'>
        /// Set to &#39;*&#39; to allow a new virtual network link to the Private DNS zone to
        /// be created, but to prevent updating an existing link. Other values will be
        /// ignored.
        /// </param>
        /// <param name='parameters'>
        /// Parameters supplied to the CreateOrUpdate operation.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="Microsoft.Rest.Azure.CloudException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.SerializationException">
        /// Thrown when unable to deserialize the response
        /// </exception>
        System.Threading.Tasks.Task<Microsoft.Rest.Azure.AzureOperationResponse<VirtualNetworkLink>> BeginCreateOrUpdateWithHttpMessagesAsync(string resourceGroupName, string privateZoneName, string virtualNetworkLinkName, VirtualNetworkLink parameters, string ifMatch = default(string), string ifNoneMatch = default(string), System.Collections.Generic.Dictionary<string, System.Collections.Generic.List<string>> customHeaders = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// Updates a virtual network link to the specified Private DNS zone.
        /// </summary>
        /// <remarks>
        /// Updates a virtual network link to the specified Private DNS zone.
        /// </remarks>
        /// <param name='resourceGroupName'>
        /// The name of the resource group.
        /// </param>
        /// <param name='privateZoneName'>
        /// The name of the Private DNS zone (without a terminating dot).
        /// </param>
        /// <param name='virtualNetworkLinkName'>
        /// The name of the virtual network link.
        /// </param>
        /// <param name='ifMatch'>
        /// The ETag of the virtual network link to the Private DNS zone. Omit this
        /// value to always overwrite the current virtual network link. Specify the
        /// last-seen ETag value to prevent accidentally overwriting any concurrent
        /// changes.
        /// </param>
        /// <param name='parameters'>
        /// Parameters supplied to the Update operation.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="Microsoft.Rest.Azure.CloudException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.SerializationException">
        /// Thrown when unable to deserialize the response
        /// </exception>
        System.Threading.Tasks.Task<Microsoft.Rest.Azure.AzureOperationResponse<VirtualNetworkLink>> BeginUpdateWithHttpMessagesAsync(string resourceGroupName, string privateZoneName, string virtualNetworkLinkName, VirtualNetworkLink parameters, string ifMatch = default(string), System.Collections.Generic.Dictionary<string, System.Collections.Generic.List<string>> customHeaders = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// Deletes a virtual network link to the specified Private DNS zone. WARNING:
        /// In case of a registration virtual network, all auto-registered DNS records
        /// in the zone for the virtual network will also be deleted. This operation
        /// cannot be undone.
        /// </summary>
        /// <remarks>
        /// Deletes a virtual network link to the specified Private DNS zone. WARNING:
        /// In case of a registration virtual network, all auto-registered DNS records
        /// in the zone for the virtual network will also be deleted. This operation
        /// cannot be undone.
        /// </remarks>
        /// <param name='resourceGroupName'>
        /// The name of the resource group.
        /// </param>
        /// <param name='privateZoneName'>
        /// The name of the Private DNS zone (without a terminating dot).
        /// </param>
        /// <param name='virtualNetworkLinkName'>
        /// The name of the virtual network link.
        /// </param>
        /// <param name='ifMatch'>
        /// The ETag of the virtual network link to the Private DNS zone. Omit this
        /// value to always delete the current zone. Specify the last-seen ETag value
        /// to prevent accidentally deleting any concurrent changes.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="Microsoft.Rest.Azure.CloudException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        System.Threading.Tasks.Task<Microsoft.Rest.Azure.AzureOperationResponse> BeginDeleteWithHttpMessagesAsync(string resourceGroupName, string privateZoneName, string virtualNetworkLinkName, string ifMatch = default(string), System.Collections.Generic.Dictionary<string, System.Collections.Generic.List<string>> customHeaders = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// Lists the virtual network links to the specified Private DNS zone.
        /// </summary>
        /// <remarks>
        /// Lists the virtual network links to the specified Private DNS zone.
        /// </remarks>
        /// <param name='nextPageLink'>
        /// The NextLink from the previous successful call to List operation.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="Microsoft.Rest.Azure.CloudException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.SerializationException">
        /// Thrown when unable to deserialize the response
        /// </exception>
        System.Threading.Tasks.Task<Microsoft.Rest.Azure.AzureOperationResponse<Microsoft.Rest.Azure.IPage<VirtualNetworkLink>>> ListNextWithHttpMessagesAsync(string nextPageLink, System.Collections.Generic.Dictionary<string, System.Collections.Generic.List<string>> customHeaders = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

    }
}