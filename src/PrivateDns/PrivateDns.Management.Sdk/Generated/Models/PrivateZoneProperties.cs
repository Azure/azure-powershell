// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.PrivateDns.Models
{
    using System.Linq;

    /// <summary>
    /// Represents the properties of the Private DNS zone.
    /// </summary>
    public partial class PrivateZoneProperties
    {
        /// <summary>
        /// Initializes a new instance of the PrivateZoneProperties class.
        /// </summary>
        public PrivateZoneProperties()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the PrivateZoneProperties class.
        /// </summary>

        /// <param name="maxNumberOfRecordSets">The maximum number of record sets that can be created in this Private DNS
        /// zone. This is a read-only property and any attempt to set this value will
        /// be ignored.
        /// </param>

        /// <param name="numberOfRecordSets">The current number of record sets in this Private DNS zone. This is a
        /// read-only property and any attempt to set this value will be ignored.
        /// </param>

        /// <param name="maxNumberOfVirtualNetworkLinks">The maximum number of virtual networks that can be linked to this Private
        /// DNS zone. This is a read-only property and any attempt to set this value
        /// will be ignored.
        /// </param>

        /// <param name="numberOfVirtualNetworkLinks">The current number of virtual networks that are linked to this Private DNS
        /// zone. This is a read-only property and any attempt to set this value will
        /// be ignored.
        /// </param>

        /// <param name="maxNumberOfVirtualNetworkLinksWithRegistration">The maximum number of virtual networks that can be linked to this Private
        /// DNS zone with registration enabled. This is a read-only property and any
        /// attempt to set this value will be ignored.
        /// </param>

        /// <param name="numberOfVirtualNetworkLinksWithRegistration">The current number of virtual networks that are linked to this Private DNS
        /// zone with registration enabled. This is a read-only property and any
        /// attempt to set this value will be ignored.
        /// </param>

        /// <param name="provisioningState">The provisioning state of the resource. This is a read-only property and
        /// any attempt to set this value will be ignored.
        /// Possible values include: &#39;Creating&#39;, &#39;Updating&#39;, &#39;Deleting&#39;, &#39;Succeeded&#39;,
        /// &#39;Failed&#39;, &#39;Canceled&#39;</param>

        /// <param name="internalId">Private zone internal Id
        /// </param>
        public PrivateZoneProperties(long? maxNumberOfRecordSets = default(long?), long? numberOfRecordSets = default(long?), long? maxNumberOfVirtualNetworkLinks = default(long?), long? numberOfVirtualNetworkLinks = default(long?), long? maxNumberOfVirtualNetworkLinksWithRegistration = default(long?), long? numberOfVirtualNetworkLinksWithRegistration = default(long?), string provisioningState = default(string), string internalId = default(string))

        {
            this.MaxNumberOfRecordSets = maxNumberOfRecordSets;
            this.NumberOfRecordSets = numberOfRecordSets;
            this.MaxNumberOfVirtualNetworkLinks = maxNumberOfVirtualNetworkLinks;
            this.NumberOfVirtualNetworkLinks = numberOfVirtualNetworkLinks;
            this.MaxNumberOfVirtualNetworkLinksWithRegistration = maxNumberOfVirtualNetworkLinksWithRegistration;
            this.NumberOfVirtualNetworkLinksWithRegistration = numberOfVirtualNetworkLinksWithRegistration;
            this.ProvisioningState = provisioningState;
            this.InternalId = internalId;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets the maximum number of record sets that can be created in this Private
        /// DNS zone. This is a read-only property and any attempt to set this value
        /// will be ignored.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "maxNumberOfRecordSets")]
        public long? MaxNumberOfRecordSets {get; private set; }

        /// <summary>
        /// Gets the current number of record sets in this Private DNS zone. This is a
        /// read-only property and any attempt to set this value will be ignored.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "numberOfRecordSets")]
        public long? NumberOfRecordSets {get; private set; }

        /// <summary>
        /// Gets the maximum number of virtual networks that can be linked to this
        /// Private DNS zone. This is a read-only property and any attempt to set this
        /// value will be ignored.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "maxNumberOfVirtualNetworkLinks")]
        public long? MaxNumberOfVirtualNetworkLinks {get; private set; }

        /// <summary>
        /// Gets the current number of virtual networks that are linked to this Private
        /// DNS zone. This is a read-only property and any attempt to set this value
        /// will be ignored.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "numberOfVirtualNetworkLinks")]
        public long? NumberOfVirtualNetworkLinks {get; private set; }

        /// <summary>
        /// Gets the maximum number of virtual networks that can be linked to this
        /// Private DNS zone with registration enabled. This is a read-only property
        /// and any attempt to set this value will be ignored.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "maxNumberOfVirtualNetworkLinksWithRegistration")]
        public long? MaxNumberOfVirtualNetworkLinksWithRegistration {get; private set; }

        /// <summary>
        /// Gets the current number of virtual networks that are linked to this Private
        /// DNS zone with registration enabled. This is a read-only property and any
        /// attempt to set this value will be ignored.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "numberOfVirtualNetworkLinksWithRegistration")]
        public long? NumberOfVirtualNetworkLinksWithRegistration {get; private set; }

        /// <summary>
        /// Gets the provisioning state of the resource. This is a read-only property
        /// and any attempt to set this value will be ignored. Possible values include: &#39;Creating&#39;, &#39;Updating&#39;, &#39;Deleting&#39;, &#39;Succeeded&#39;, &#39;Failed&#39;, &#39;Canceled&#39;
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "provisioningState")]
        public string ProvisioningState {get; private set; }

        /// <summary>
        /// Gets private zone internal Id
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "internalId")]
        public string InternalId {get; private set; }
    }
}