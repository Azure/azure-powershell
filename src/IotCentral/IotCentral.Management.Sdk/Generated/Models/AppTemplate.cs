// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.IotCentral.Models
{
    using System.Linq;

    /// <summary>
    /// IoT Central Application Template.
    /// </summary>
    public partial class AppTemplate
    {
        /// <summary>
        /// Initializes a new instance of the AppTemplate class.
        /// </summary>
        public AppTemplate()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the AppTemplate class.
        /// </summary>

        /// <param name="manifestId">The ID of the template.
        /// </param>

        /// <param name="manifestVersion">The version of the template.
        /// </param>

        /// <param name="name">The name of the template.
        /// </param>

        /// <param name="title">The title of the template.
        /// </param>

        /// <param name="order">The order of the template in the templates list.
        /// </param>

        /// <param name="description">The description of the template.
        /// </param>

        /// <param name="industry">The industry of the template.
        /// </param>

        /// <param name="locations">A list of locations that support the template.
        /// </param>
        public AppTemplate(string manifestId = default(string), string manifestVersion = default(string), string name = default(string), string title = default(string), double? order = default(double?), string description = default(string), string industry = default(string), System.Collections.Generic.IList<AppTemplateLocations> locations = default(System.Collections.Generic.IList<AppTemplateLocations>))

        {
            this.ManifestId = manifestId;
            this.ManifestVersion = manifestVersion;
            this.Name = name;
            this.Title = title;
            this.Order = order;
            this.Description = description;
            this.Industry = industry;
            this.Locations = locations;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets the ID of the template.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "manifestId")]
        public string ManifestId {get; private set; }

        /// <summary>
        /// Gets the version of the template.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "manifestVersion")]
        public string ManifestVersion {get; private set; }

        /// <summary>
        /// Gets the name of the template.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "name")]
        public string Name {get; private set; }

        /// <summary>
        /// Gets the title of the template.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "title")]
        public string Title {get; private set; }

        /// <summary>
        /// Gets the order of the template in the templates list.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "order")]
        public double? Order {get; private set; }

        /// <summary>
        /// Gets the description of the template.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "description")]
        public string Description {get; private set; }

        /// <summary>
        /// Gets the industry of the template.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "industry")]
        public string Industry {get; private set; }

        /// <summary>
        /// Gets a list of locations that support the template.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "locations")]
        public System.Collections.Generic.IList<AppTemplateLocations> Locations {get; private set; }
    }
}