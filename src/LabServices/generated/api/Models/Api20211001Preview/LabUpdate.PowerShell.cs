// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview
{
    using Microsoft.Azure.PowerShell.Cmdlets.LabServices.Runtime.PowerShell;

    /// <summary>The lab resource for updates.</summary>
    [System.ComponentModel.TypeConverter(typeof(LabUpdateTypeConverter))]
    public partial class LabUpdate
    {

        /// <summary>
        /// <c>AfterDeserializeDictionary</c> will be called after the deserialization has finished, allowing customization of the
        /// object before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>

        partial void AfterDeserializeDictionary(global::System.Collections.IDictionary content);

        /// <summary>
        /// <c>AfterDeserializePSObject</c> will be called after the deserialization has finished, allowing customization of the object
        /// before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>

        partial void AfterDeserializePSObject(global::System.Management.Automation.PSObject content);

        /// <summary>
        /// <c>BeforeDeserializeDictionary</c> will be called before the deserialization has commenced, allowing complete customization
        /// of the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <see "returnNow" /> output parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeDeserializeDictionary(global::System.Collections.IDictionary content, ref bool returnNow);

        /// <summary>
        /// <c>BeforeDeserializePSObject</c> will be called before the deserialization has commenced, allowing complete customization
        /// of the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <see "returnNow" /> output parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeDeserializePSObject(global::System.Management.Automation.PSObject content, ref bool returnNow);

        /// <summary>
        /// Deserializes a <see cref="global::System.Collections.IDictionary" /> into an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.LabUpdate"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        /// <returns>
        /// an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabUpdate" />.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabUpdate DeserializeFromDictionary(global::System.Collections.IDictionary content)
        {
            return new LabUpdate(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Management.Automation.PSObject" /> into an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.LabUpdate"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        /// <returns>
        /// an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabUpdate" />.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabUpdate DeserializeFromPSObject(global::System.Management.Automation.PSObject content)
        {
            return new LabUpdate(content);
        }

        /// <summary>
        /// Creates a new instance of <see cref="LabUpdate" />, deserializing the content from a json string.
        /// </summary>
        /// <param name="jsonText">a string containing a JSON serialized instance of this model.</param>
        /// <returns>an instance of the <see cref="className" /> model class.</returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabUpdate FromJsonString(string jsonText) => FromJson(Microsoft.Azure.PowerShell.Cmdlets.LabServices.Runtime.Json.JsonNode.Parse(jsonText));

        /// <summary>
        /// Deserializes a <see cref="global::System.Collections.IDictionary" /> into a new instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.LabUpdate"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        internal LabUpdate(global::System.Collections.IDictionary content)
        {
            bool returnNow = false;
            BeforeDeserializeDictionary(content, ref returnNow);
            if (returnNow)
            {
                return;
            }
            // actually deserialize
            if (content.Contains("Property"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabUpdateInternal)this).Property = (Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabUpdateProperties) content.GetValueForProperty("Property",((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabUpdateInternal)this).Property, Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.LabUpdatePropertiesTypeConverter.ConvertFrom);
            }
            if (content.Contains("Tag"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ITrackedResourceUpdateInternal)this).Tag = (string[]) content.GetValueForProperty("Tag",((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ITrackedResourceUpdateInternal)this).Tag, __y => TypeConverterExtensions.SelectToArray<string>(__y, global::System.Convert.ToString));
            }
            if (content.Contains("ConnectionProfile"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabUpdateInternal)this).ConnectionProfile = (Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.IConnectionProfile) content.GetValueForProperty("ConnectionProfile",((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabUpdateInternal)this).ConnectionProfile, Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ConnectionProfileTypeConverter.ConvertFrom);
            }
            if (content.Contains("SecurityProfile"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabUpdateInternal)this).SecurityProfile = (Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ISecurityProfile) content.GetValueForProperty("SecurityProfile",((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabUpdateInternal)this).SecurityProfile, Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.SecurityProfileTypeConverter.ConvertFrom);
            }
            if (content.Contains("RosterProfile"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabUpdateInternal)this).RosterProfile = (Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.IRosterProfile) content.GetValueForProperty("RosterProfile",((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabUpdateInternal)this).RosterProfile, Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.RosterProfileTypeConverter.ConvertFrom);
            }
            if (content.Contains("AutoShutdownProfile"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabUpdateInternal)this).AutoShutdownProfile = (Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.IAutoShutdownProfile) content.GetValueForProperty("AutoShutdownProfile",((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabUpdateInternal)this).AutoShutdownProfile, Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.AutoShutdownProfileTypeConverter.ConvertFrom);
            }
            if (content.Contains("VirtualMachineProfile"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabUpdateInternal)this).VirtualMachineProfile = (Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.IVirtualMachineProfile) content.GetValueForProperty("VirtualMachineProfile",((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabUpdateInternal)this).VirtualMachineProfile, Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.VirtualMachineProfileTypeConverter.ConvertFrom);
            }
            if (content.Contains("LabPlanId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabUpdateInternal)this).LabPlanId = (string) content.GetValueForProperty("LabPlanId",((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabUpdateInternal)this).LabPlanId, global::System.Convert.ToString);
            }
            if (content.Contains("Title"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabUpdateInternal)this).Title = (string) content.GetValueForProperty("Title",((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabUpdateInternal)this).Title, global::System.Convert.ToString);
            }
            if (content.Contains("Description"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabUpdateInternal)this).Description = (string) content.GetValueForProperty("Description",((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabUpdateInternal)this).Description, global::System.Convert.ToString);
            }
            if (content.Contains("AutoShutdownProfileDisconnectDelay"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabUpdateInternal)this).AutoShutdownProfileDisconnectDelay = (global::System.TimeSpan?) content.GetValueForProperty("AutoShutdownProfileDisconnectDelay",((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabUpdateInternal)this).AutoShutdownProfileDisconnectDelay, (v) => v is global::System.TimeSpan _v ? _v : global::System.Xml.XmlConvert.ToTimeSpan( v.ToString() ));
            }
            if (content.Contains("AutoShutdownProfileIdleDelay"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabUpdateInternal)this).AutoShutdownProfileIdleDelay = (global::System.TimeSpan?) content.GetValueForProperty("AutoShutdownProfileIdleDelay",((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabUpdateInternal)this).AutoShutdownProfileIdleDelay, (v) => v is global::System.TimeSpan _v ? _v : global::System.Xml.XmlConvert.ToTimeSpan( v.ToString() ));
            }
            if (content.Contains("VirtualMachineProfileImageReference"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabUpdateInternal)this).VirtualMachineProfileImageReference = (Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.IImageReference) content.GetValueForProperty("VirtualMachineProfileImageReference",((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabUpdateInternal)this).VirtualMachineProfileImageReference, Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ImageReferenceTypeConverter.ConvertFrom);
            }
            if (content.Contains("VirtualMachineProfileSku"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabUpdateInternal)this).VirtualMachineProfileSku = (Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20.ISku) content.GetValueForProperty("VirtualMachineProfileSku",((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabUpdateInternal)this).VirtualMachineProfileSku, Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20.SkuTypeConverter.ConvertFrom);
            }
            if (content.Contains("VirtualMachineProfileCreateOption"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabUpdateInternal)this).VirtualMachineProfileCreateOption = (Microsoft.Azure.PowerShell.Cmdlets.LabServices.Support.CreateOption) content.GetValueForProperty("VirtualMachineProfileCreateOption",((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabUpdateInternal)this).VirtualMachineProfileCreateOption, Microsoft.Azure.PowerShell.Cmdlets.LabServices.Support.CreateOption.CreateFrom);
            }
            if (content.Contains("VirtualMachineProfileOSType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabUpdateInternal)this).VirtualMachineProfileOSType = (Microsoft.Azure.PowerShell.Cmdlets.LabServices.Support.OSType?) content.GetValueForProperty("VirtualMachineProfileOSType",((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabUpdateInternal)this).VirtualMachineProfileOSType, Microsoft.Azure.PowerShell.Cmdlets.LabServices.Support.OSType.CreateFrom);
            }
            if (content.Contains("VirtualMachineProfileUsageQuota"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabUpdateInternal)this).VirtualMachineProfileUsageQuota = (global::System.TimeSpan) content.GetValueForProperty("VirtualMachineProfileUsageQuota",((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabUpdateInternal)this).VirtualMachineProfileUsageQuota, (v) => v is global::System.TimeSpan _v ? _v : global::System.Xml.XmlConvert.ToTimeSpan( v.ToString() ));
            }
            if (content.Contains("SecurityProfileRegistrationCode"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabUpdateInternal)this).SecurityProfileRegistrationCode = (string) content.GetValueForProperty("SecurityProfileRegistrationCode",((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabUpdateInternal)this).SecurityProfileRegistrationCode, global::System.Convert.ToString);
            }
            if (content.Contains("RosterProfileLmsInstance"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabUpdateInternal)this).RosterProfileLmsInstance = (string) content.GetValueForProperty("RosterProfileLmsInstance",((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabUpdateInternal)this).RosterProfileLmsInstance, global::System.Convert.ToString);
            }
            if (content.Contains("AutoShutdownProfileShutdownOnDisconnect"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabUpdateInternal)this).AutoShutdownProfileShutdownOnDisconnect = (Microsoft.Azure.PowerShell.Cmdlets.LabServices.Support.EnableState?) content.GetValueForProperty("AutoShutdownProfileShutdownOnDisconnect",((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabUpdateInternal)this).AutoShutdownProfileShutdownOnDisconnect, Microsoft.Azure.PowerShell.Cmdlets.LabServices.Support.EnableState.CreateFrom);
            }
            if (content.Contains("AutoShutdownProfileShutdownWhenNotConnected"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabUpdateInternal)this).AutoShutdownProfileShutdownWhenNotConnected = (Microsoft.Azure.PowerShell.Cmdlets.LabServices.Support.EnableState?) content.GetValueForProperty("AutoShutdownProfileShutdownWhenNotConnected",((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabUpdateInternal)this).AutoShutdownProfileShutdownWhenNotConnected, Microsoft.Azure.PowerShell.Cmdlets.LabServices.Support.EnableState.CreateFrom);
            }
            if (content.Contains("AutoShutdownProfileShutdownOnIdle"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabUpdateInternal)this).AutoShutdownProfileShutdownOnIdle = (Microsoft.Azure.PowerShell.Cmdlets.LabServices.Support.ShutdownOnIdleMode?) content.GetValueForProperty("AutoShutdownProfileShutdownOnIdle",((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabUpdateInternal)this).AutoShutdownProfileShutdownOnIdle, Microsoft.Azure.PowerShell.Cmdlets.LabServices.Support.ShutdownOnIdleMode.CreateFrom);
            }
            if (content.Contains("AutoShutdownProfileNoConnectDelay"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabUpdateInternal)this).AutoShutdownProfileNoConnectDelay = (global::System.TimeSpan?) content.GetValueForProperty("AutoShutdownProfileNoConnectDelay",((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabUpdateInternal)this).AutoShutdownProfileNoConnectDelay, (v) => v is global::System.TimeSpan _v ? _v : global::System.Xml.XmlConvert.ToTimeSpan( v.ToString() ));
            }
            if (content.Contains("ConnectionProfileWebSshAccess"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabUpdateInternal)this).ConnectionProfileWebSshAccess = (Microsoft.Azure.PowerShell.Cmdlets.LabServices.Support.ConnectionType?) content.GetValueForProperty("ConnectionProfileWebSshAccess",((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabUpdateInternal)this).ConnectionProfileWebSshAccess, Microsoft.Azure.PowerShell.Cmdlets.LabServices.Support.ConnectionType.CreateFrom);
            }
            if (content.Contains("ConnectionProfileWebRdpAccess"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabUpdateInternal)this).ConnectionProfileWebRdpAccess = (Microsoft.Azure.PowerShell.Cmdlets.LabServices.Support.ConnectionType?) content.GetValueForProperty("ConnectionProfileWebRdpAccess",((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabUpdateInternal)this).ConnectionProfileWebRdpAccess, Microsoft.Azure.PowerShell.Cmdlets.LabServices.Support.ConnectionType.CreateFrom);
            }
            if (content.Contains("ConnectionProfileClientSshAccess"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabUpdateInternal)this).ConnectionProfileClientSshAccess = (Microsoft.Azure.PowerShell.Cmdlets.LabServices.Support.ConnectionType?) content.GetValueForProperty("ConnectionProfileClientSshAccess",((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabUpdateInternal)this).ConnectionProfileClientSshAccess, Microsoft.Azure.PowerShell.Cmdlets.LabServices.Support.ConnectionType.CreateFrom);
            }
            if (content.Contains("ConnectionProfileClientRdpAccess"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabUpdateInternal)this).ConnectionProfileClientRdpAccess = (Microsoft.Azure.PowerShell.Cmdlets.LabServices.Support.ConnectionType?) content.GetValueForProperty("ConnectionProfileClientRdpAccess",((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabUpdateInternal)this).ConnectionProfileClientRdpAccess, Microsoft.Azure.PowerShell.Cmdlets.LabServices.Support.ConnectionType.CreateFrom);
            }
            if (content.Contains("VirtualMachineProfileAdditionalCapability"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabUpdateInternal)this).VirtualMachineProfileAdditionalCapability = (Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.IVirtualMachineAdditionalCapabilities) content.GetValueForProperty("VirtualMachineProfileAdditionalCapability",((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabUpdateInternal)this).VirtualMachineProfileAdditionalCapability, Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.VirtualMachineAdditionalCapabilitiesTypeConverter.ConvertFrom);
            }
            if (content.Contains("VirtualMachineProfileAdminUser"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabUpdateInternal)this).VirtualMachineProfileAdminUser = (Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ICredentials) content.GetValueForProperty("VirtualMachineProfileAdminUser",((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabUpdateInternal)this).VirtualMachineProfileAdminUser, Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.CredentialsTypeConverter.ConvertFrom);
            }
            if (content.Contains("VirtualMachineProfileNonAdminUser"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabUpdateInternal)this).VirtualMachineProfileNonAdminUser = (Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ICredentials) content.GetValueForProperty("VirtualMachineProfileNonAdminUser",((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabUpdateInternal)this).VirtualMachineProfileNonAdminUser, Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.CredentialsTypeConverter.ConvertFrom);
            }
            if (content.Contains("VirtualMachineProfileUseSharedPassword"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabUpdateInternal)this).VirtualMachineProfileUseSharedPassword = (Microsoft.Azure.PowerShell.Cmdlets.LabServices.Support.EnableState?) content.GetValueForProperty("VirtualMachineProfileUseSharedPassword",((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabUpdateInternal)this).VirtualMachineProfileUseSharedPassword, Microsoft.Azure.PowerShell.Cmdlets.LabServices.Support.EnableState.CreateFrom);
            }
            if (content.Contains("ImageReferenceOffer"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabUpdateInternal)this).ImageReferenceOffer = (string) content.GetValueForProperty("ImageReferenceOffer",((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabUpdateInternal)this).ImageReferenceOffer, global::System.Convert.ToString);
            }
            if (content.Contains("ImageReferencePublisher"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabUpdateInternal)this).ImageReferencePublisher = (string) content.GetValueForProperty("ImageReferencePublisher",((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabUpdateInternal)this).ImageReferencePublisher, global::System.Convert.ToString);
            }
            if (content.Contains("ImageReferenceSku"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabUpdateInternal)this).ImageReferenceSku = (string) content.GetValueForProperty("ImageReferenceSku",((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabUpdateInternal)this).ImageReferenceSku, global::System.Convert.ToString);
            }
            if (content.Contains("ImageReferenceVersion"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabUpdateInternal)this).ImageReferenceVersion = (string) content.GetValueForProperty("ImageReferenceVersion",((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabUpdateInternal)this).ImageReferenceVersion, global::System.Convert.ToString);
            }
            if (content.Contains("ImageReferenceExactVersion"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabUpdateInternal)this).ImageReferenceExactVersion = (string) content.GetValueForProperty("ImageReferenceExactVersion",((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabUpdateInternal)this).ImageReferenceExactVersion, global::System.Convert.ToString);
            }
            if (content.Contains("SkuName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabUpdateInternal)this).SkuName = (string) content.GetValueForProperty("SkuName",((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabUpdateInternal)this).SkuName, global::System.Convert.ToString);
            }
            if (content.Contains("SkuTier"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabUpdateInternal)this).SkuTier = (Microsoft.Azure.PowerShell.Cmdlets.LabServices.Support.SkuTier?) content.GetValueForProperty("SkuTier",((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabUpdateInternal)this).SkuTier, Microsoft.Azure.PowerShell.Cmdlets.LabServices.Support.SkuTier.CreateFrom);
            }
            if (content.Contains("SkuSize"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabUpdateInternal)this).SkuSize = (string) content.GetValueForProperty("SkuSize",((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabUpdateInternal)this).SkuSize, global::System.Convert.ToString);
            }
            if (content.Contains("SkuFamily"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabUpdateInternal)this).SkuFamily = (string) content.GetValueForProperty("SkuFamily",((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabUpdateInternal)this).SkuFamily, global::System.Convert.ToString);
            }
            if (content.Contains("SkuCapacity"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabUpdateInternal)this).SkuCapacity = (int?) content.GetValueForProperty("SkuCapacity",((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabUpdateInternal)this).SkuCapacity, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("SecurityProfileOpenAccess"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabUpdateInternal)this).SecurityProfileOpenAccess = (Microsoft.Azure.PowerShell.Cmdlets.LabServices.Support.EnableState?) content.GetValueForProperty("SecurityProfileOpenAccess",((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabUpdateInternal)this).SecurityProfileOpenAccess, Microsoft.Azure.PowerShell.Cmdlets.LabServices.Support.EnableState.CreateFrom);
            }
            if (content.Contains("RosterProfileActiveDirectoryGroupId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabUpdateInternal)this).RosterProfileActiveDirectoryGroupId = (string) content.GetValueForProperty("RosterProfileActiveDirectoryGroupId",((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabUpdateInternal)this).RosterProfileActiveDirectoryGroupId, global::System.Convert.ToString);
            }
            if (content.Contains("RosterProfileLtiContextId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabUpdateInternal)this).RosterProfileLtiContextId = (string) content.GetValueForProperty("RosterProfileLtiContextId",((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabUpdateInternal)this).RosterProfileLtiContextId, global::System.Convert.ToString);
            }
            if (content.Contains("RosterProfileLtiClientId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabUpdateInternal)this).RosterProfileLtiClientId = (string) content.GetValueForProperty("RosterProfileLtiClientId",((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabUpdateInternal)this).RosterProfileLtiClientId, global::System.Convert.ToString);
            }
            if (content.Contains("RosterProfileLtiRosterEndpoint"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabUpdateInternal)this).RosterProfileLtiRosterEndpoint = (string) content.GetValueForProperty("RosterProfileLtiRosterEndpoint",((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabUpdateInternal)this).RosterProfileLtiRosterEndpoint, global::System.Convert.ToString);
            }
            if (content.Contains("ImageReferenceId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabUpdateInternal)this).ImageReferenceId = (string) content.GetValueForProperty("ImageReferenceId",((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabUpdateInternal)this).ImageReferenceId, global::System.Convert.ToString);
            }
            if (content.Contains("AdditionalCapabilityInstallGpuDriver"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabUpdateInternal)this).AdditionalCapabilityInstallGpuDriver = (Microsoft.Azure.PowerShell.Cmdlets.LabServices.Support.EnableState?) content.GetValueForProperty("AdditionalCapabilityInstallGpuDriver",((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabUpdateInternal)this).AdditionalCapabilityInstallGpuDriver, Microsoft.Azure.PowerShell.Cmdlets.LabServices.Support.EnableState.CreateFrom);
            }
            if (content.Contains("AdminUserUsername"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabUpdateInternal)this).AdminUserUsername = (string) content.GetValueForProperty("AdminUserUsername",((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabUpdateInternal)this).AdminUserUsername, global::System.Convert.ToString);
            }
            if (content.Contains("AdminUserPassword"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabUpdateInternal)this).AdminUserPassword = (string) content.GetValueForProperty("AdminUserPassword",((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabUpdateInternal)this).AdminUserPassword, global::System.Convert.ToString);
            }
            if (content.Contains("NonAdminUserUsername"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabUpdateInternal)this).NonAdminUserUsername = (string) content.GetValueForProperty("NonAdminUserUsername",((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabUpdateInternal)this).NonAdminUserUsername, global::System.Convert.ToString);
            }
            if (content.Contains("NonAdminUserPassword"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabUpdateInternal)this).NonAdminUserPassword = (string) content.GetValueForProperty("NonAdminUserPassword",((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabUpdateInternal)this).NonAdminUserPassword, global::System.Convert.ToString);
            }
            AfterDeserializeDictionary(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Management.Automation.PSObject" /> into a new instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.LabUpdate"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        internal LabUpdate(global::System.Management.Automation.PSObject content)
        {
            bool returnNow = false;
            BeforeDeserializePSObject(content, ref returnNow);
            if (returnNow)
            {
                return;
            }
            // actually deserialize
            if (content.Contains("Property"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabUpdateInternal)this).Property = (Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabUpdateProperties) content.GetValueForProperty("Property",((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabUpdateInternal)this).Property, Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.LabUpdatePropertiesTypeConverter.ConvertFrom);
            }
            if (content.Contains("Tag"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ITrackedResourceUpdateInternal)this).Tag = (string[]) content.GetValueForProperty("Tag",((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ITrackedResourceUpdateInternal)this).Tag, __y => TypeConverterExtensions.SelectToArray<string>(__y, global::System.Convert.ToString));
            }
            if (content.Contains("ConnectionProfile"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabUpdateInternal)this).ConnectionProfile = (Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.IConnectionProfile) content.GetValueForProperty("ConnectionProfile",((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabUpdateInternal)this).ConnectionProfile, Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ConnectionProfileTypeConverter.ConvertFrom);
            }
            if (content.Contains("SecurityProfile"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabUpdateInternal)this).SecurityProfile = (Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ISecurityProfile) content.GetValueForProperty("SecurityProfile",((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabUpdateInternal)this).SecurityProfile, Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.SecurityProfileTypeConverter.ConvertFrom);
            }
            if (content.Contains("RosterProfile"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabUpdateInternal)this).RosterProfile = (Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.IRosterProfile) content.GetValueForProperty("RosterProfile",((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabUpdateInternal)this).RosterProfile, Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.RosterProfileTypeConverter.ConvertFrom);
            }
            if (content.Contains("AutoShutdownProfile"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabUpdateInternal)this).AutoShutdownProfile = (Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.IAutoShutdownProfile) content.GetValueForProperty("AutoShutdownProfile",((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabUpdateInternal)this).AutoShutdownProfile, Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.AutoShutdownProfileTypeConverter.ConvertFrom);
            }
            if (content.Contains("VirtualMachineProfile"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabUpdateInternal)this).VirtualMachineProfile = (Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.IVirtualMachineProfile) content.GetValueForProperty("VirtualMachineProfile",((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabUpdateInternal)this).VirtualMachineProfile, Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.VirtualMachineProfileTypeConverter.ConvertFrom);
            }
            if (content.Contains("LabPlanId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabUpdateInternal)this).LabPlanId = (string) content.GetValueForProperty("LabPlanId",((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabUpdateInternal)this).LabPlanId, global::System.Convert.ToString);
            }
            if (content.Contains("Title"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabUpdateInternal)this).Title = (string) content.GetValueForProperty("Title",((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabUpdateInternal)this).Title, global::System.Convert.ToString);
            }
            if (content.Contains("Description"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabUpdateInternal)this).Description = (string) content.GetValueForProperty("Description",((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabUpdateInternal)this).Description, global::System.Convert.ToString);
            }
            if (content.Contains("AutoShutdownProfileDisconnectDelay"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabUpdateInternal)this).AutoShutdownProfileDisconnectDelay = (global::System.TimeSpan?) content.GetValueForProperty("AutoShutdownProfileDisconnectDelay",((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabUpdateInternal)this).AutoShutdownProfileDisconnectDelay, (v) => v is global::System.TimeSpan _v ? _v : global::System.Xml.XmlConvert.ToTimeSpan( v.ToString() ));
            }
            if (content.Contains("AutoShutdownProfileIdleDelay"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabUpdateInternal)this).AutoShutdownProfileIdleDelay = (global::System.TimeSpan?) content.GetValueForProperty("AutoShutdownProfileIdleDelay",((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabUpdateInternal)this).AutoShutdownProfileIdleDelay, (v) => v is global::System.TimeSpan _v ? _v : global::System.Xml.XmlConvert.ToTimeSpan( v.ToString() ));
            }
            if (content.Contains("VirtualMachineProfileImageReference"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabUpdateInternal)this).VirtualMachineProfileImageReference = (Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.IImageReference) content.GetValueForProperty("VirtualMachineProfileImageReference",((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabUpdateInternal)this).VirtualMachineProfileImageReference, Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ImageReferenceTypeConverter.ConvertFrom);
            }
            if (content.Contains("VirtualMachineProfileSku"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabUpdateInternal)this).VirtualMachineProfileSku = (Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20.ISku) content.GetValueForProperty("VirtualMachineProfileSku",((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabUpdateInternal)this).VirtualMachineProfileSku, Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20.SkuTypeConverter.ConvertFrom);
            }
            if (content.Contains("VirtualMachineProfileCreateOption"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabUpdateInternal)this).VirtualMachineProfileCreateOption = (Microsoft.Azure.PowerShell.Cmdlets.LabServices.Support.CreateOption) content.GetValueForProperty("VirtualMachineProfileCreateOption",((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabUpdateInternal)this).VirtualMachineProfileCreateOption, Microsoft.Azure.PowerShell.Cmdlets.LabServices.Support.CreateOption.CreateFrom);
            }
            if (content.Contains("VirtualMachineProfileOSType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabUpdateInternal)this).VirtualMachineProfileOSType = (Microsoft.Azure.PowerShell.Cmdlets.LabServices.Support.OSType?) content.GetValueForProperty("VirtualMachineProfileOSType",((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabUpdateInternal)this).VirtualMachineProfileOSType, Microsoft.Azure.PowerShell.Cmdlets.LabServices.Support.OSType.CreateFrom);
            }
            if (content.Contains("VirtualMachineProfileUsageQuota"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabUpdateInternal)this).VirtualMachineProfileUsageQuota = (global::System.TimeSpan) content.GetValueForProperty("VirtualMachineProfileUsageQuota",((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabUpdateInternal)this).VirtualMachineProfileUsageQuota, (v) => v is global::System.TimeSpan _v ? _v : global::System.Xml.XmlConvert.ToTimeSpan( v.ToString() ));
            }
            if (content.Contains("SecurityProfileRegistrationCode"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabUpdateInternal)this).SecurityProfileRegistrationCode = (string) content.GetValueForProperty("SecurityProfileRegistrationCode",((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabUpdateInternal)this).SecurityProfileRegistrationCode, global::System.Convert.ToString);
            }
            if (content.Contains("RosterProfileLmsInstance"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabUpdateInternal)this).RosterProfileLmsInstance = (string) content.GetValueForProperty("RosterProfileLmsInstance",((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabUpdateInternal)this).RosterProfileLmsInstance, global::System.Convert.ToString);
            }
            if (content.Contains("AutoShutdownProfileShutdownOnDisconnect"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabUpdateInternal)this).AutoShutdownProfileShutdownOnDisconnect = (Microsoft.Azure.PowerShell.Cmdlets.LabServices.Support.EnableState?) content.GetValueForProperty("AutoShutdownProfileShutdownOnDisconnect",((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabUpdateInternal)this).AutoShutdownProfileShutdownOnDisconnect, Microsoft.Azure.PowerShell.Cmdlets.LabServices.Support.EnableState.CreateFrom);
            }
            if (content.Contains("AutoShutdownProfileShutdownWhenNotConnected"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabUpdateInternal)this).AutoShutdownProfileShutdownWhenNotConnected = (Microsoft.Azure.PowerShell.Cmdlets.LabServices.Support.EnableState?) content.GetValueForProperty("AutoShutdownProfileShutdownWhenNotConnected",((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabUpdateInternal)this).AutoShutdownProfileShutdownWhenNotConnected, Microsoft.Azure.PowerShell.Cmdlets.LabServices.Support.EnableState.CreateFrom);
            }
            if (content.Contains("AutoShutdownProfileShutdownOnIdle"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabUpdateInternal)this).AutoShutdownProfileShutdownOnIdle = (Microsoft.Azure.PowerShell.Cmdlets.LabServices.Support.ShutdownOnIdleMode?) content.GetValueForProperty("AutoShutdownProfileShutdownOnIdle",((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabUpdateInternal)this).AutoShutdownProfileShutdownOnIdle, Microsoft.Azure.PowerShell.Cmdlets.LabServices.Support.ShutdownOnIdleMode.CreateFrom);
            }
            if (content.Contains("AutoShutdownProfileNoConnectDelay"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabUpdateInternal)this).AutoShutdownProfileNoConnectDelay = (global::System.TimeSpan?) content.GetValueForProperty("AutoShutdownProfileNoConnectDelay",((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabUpdateInternal)this).AutoShutdownProfileNoConnectDelay, (v) => v is global::System.TimeSpan _v ? _v : global::System.Xml.XmlConvert.ToTimeSpan( v.ToString() ));
            }
            if (content.Contains("ConnectionProfileWebSshAccess"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabUpdateInternal)this).ConnectionProfileWebSshAccess = (Microsoft.Azure.PowerShell.Cmdlets.LabServices.Support.ConnectionType?) content.GetValueForProperty("ConnectionProfileWebSshAccess",((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabUpdateInternal)this).ConnectionProfileWebSshAccess, Microsoft.Azure.PowerShell.Cmdlets.LabServices.Support.ConnectionType.CreateFrom);
            }
            if (content.Contains("ConnectionProfileWebRdpAccess"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabUpdateInternal)this).ConnectionProfileWebRdpAccess = (Microsoft.Azure.PowerShell.Cmdlets.LabServices.Support.ConnectionType?) content.GetValueForProperty("ConnectionProfileWebRdpAccess",((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabUpdateInternal)this).ConnectionProfileWebRdpAccess, Microsoft.Azure.PowerShell.Cmdlets.LabServices.Support.ConnectionType.CreateFrom);
            }
            if (content.Contains("ConnectionProfileClientSshAccess"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabUpdateInternal)this).ConnectionProfileClientSshAccess = (Microsoft.Azure.PowerShell.Cmdlets.LabServices.Support.ConnectionType?) content.GetValueForProperty("ConnectionProfileClientSshAccess",((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabUpdateInternal)this).ConnectionProfileClientSshAccess, Microsoft.Azure.PowerShell.Cmdlets.LabServices.Support.ConnectionType.CreateFrom);
            }
            if (content.Contains("ConnectionProfileClientRdpAccess"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabUpdateInternal)this).ConnectionProfileClientRdpAccess = (Microsoft.Azure.PowerShell.Cmdlets.LabServices.Support.ConnectionType?) content.GetValueForProperty("ConnectionProfileClientRdpAccess",((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabUpdateInternal)this).ConnectionProfileClientRdpAccess, Microsoft.Azure.PowerShell.Cmdlets.LabServices.Support.ConnectionType.CreateFrom);
            }
            if (content.Contains("VirtualMachineProfileAdditionalCapability"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabUpdateInternal)this).VirtualMachineProfileAdditionalCapability = (Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.IVirtualMachineAdditionalCapabilities) content.GetValueForProperty("VirtualMachineProfileAdditionalCapability",((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabUpdateInternal)this).VirtualMachineProfileAdditionalCapability, Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.VirtualMachineAdditionalCapabilitiesTypeConverter.ConvertFrom);
            }
            if (content.Contains("VirtualMachineProfileAdminUser"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabUpdateInternal)this).VirtualMachineProfileAdminUser = (Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ICredentials) content.GetValueForProperty("VirtualMachineProfileAdminUser",((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabUpdateInternal)this).VirtualMachineProfileAdminUser, Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.CredentialsTypeConverter.ConvertFrom);
            }
            if (content.Contains("VirtualMachineProfileNonAdminUser"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabUpdateInternal)this).VirtualMachineProfileNonAdminUser = (Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ICredentials) content.GetValueForProperty("VirtualMachineProfileNonAdminUser",((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabUpdateInternal)this).VirtualMachineProfileNonAdminUser, Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.CredentialsTypeConverter.ConvertFrom);
            }
            if (content.Contains("VirtualMachineProfileUseSharedPassword"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabUpdateInternal)this).VirtualMachineProfileUseSharedPassword = (Microsoft.Azure.PowerShell.Cmdlets.LabServices.Support.EnableState?) content.GetValueForProperty("VirtualMachineProfileUseSharedPassword",((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabUpdateInternal)this).VirtualMachineProfileUseSharedPassword, Microsoft.Azure.PowerShell.Cmdlets.LabServices.Support.EnableState.CreateFrom);
            }
            if (content.Contains("ImageReferenceOffer"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabUpdateInternal)this).ImageReferenceOffer = (string) content.GetValueForProperty("ImageReferenceOffer",((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabUpdateInternal)this).ImageReferenceOffer, global::System.Convert.ToString);
            }
            if (content.Contains("ImageReferencePublisher"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabUpdateInternal)this).ImageReferencePublisher = (string) content.GetValueForProperty("ImageReferencePublisher",((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabUpdateInternal)this).ImageReferencePublisher, global::System.Convert.ToString);
            }
            if (content.Contains("ImageReferenceSku"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabUpdateInternal)this).ImageReferenceSku = (string) content.GetValueForProperty("ImageReferenceSku",((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabUpdateInternal)this).ImageReferenceSku, global::System.Convert.ToString);
            }
            if (content.Contains("ImageReferenceVersion"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabUpdateInternal)this).ImageReferenceVersion = (string) content.GetValueForProperty("ImageReferenceVersion",((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabUpdateInternal)this).ImageReferenceVersion, global::System.Convert.ToString);
            }
            if (content.Contains("ImageReferenceExactVersion"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabUpdateInternal)this).ImageReferenceExactVersion = (string) content.GetValueForProperty("ImageReferenceExactVersion",((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabUpdateInternal)this).ImageReferenceExactVersion, global::System.Convert.ToString);
            }
            if (content.Contains("SkuName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabUpdateInternal)this).SkuName = (string) content.GetValueForProperty("SkuName",((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabUpdateInternal)this).SkuName, global::System.Convert.ToString);
            }
            if (content.Contains("SkuTier"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabUpdateInternal)this).SkuTier = (Microsoft.Azure.PowerShell.Cmdlets.LabServices.Support.SkuTier?) content.GetValueForProperty("SkuTier",((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabUpdateInternal)this).SkuTier, Microsoft.Azure.PowerShell.Cmdlets.LabServices.Support.SkuTier.CreateFrom);
            }
            if (content.Contains("SkuSize"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabUpdateInternal)this).SkuSize = (string) content.GetValueForProperty("SkuSize",((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabUpdateInternal)this).SkuSize, global::System.Convert.ToString);
            }
            if (content.Contains("SkuFamily"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabUpdateInternal)this).SkuFamily = (string) content.GetValueForProperty("SkuFamily",((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabUpdateInternal)this).SkuFamily, global::System.Convert.ToString);
            }
            if (content.Contains("SkuCapacity"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabUpdateInternal)this).SkuCapacity = (int?) content.GetValueForProperty("SkuCapacity",((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabUpdateInternal)this).SkuCapacity, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("SecurityProfileOpenAccess"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabUpdateInternal)this).SecurityProfileOpenAccess = (Microsoft.Azure.PowerShell.Cmdlets.LabServices.Support.EnableState?) content.GetValueForProperty("SecurityProfileOpenAccess",((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabUpdateInternal)this).SecurityProfileOpenAccess, Microsoft.Azure.PowerShell.Cmdlets.LabServices.Support.EnableState.CreateFrom);
            }
            if (content.Contains("RosterProfileActiveDirectoryGroupId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabUpdateInternal)this).RosterProfileActiveDirectoryGroupId = (string) content.GetValueForProperty("RosterProfileActiveDirectoryGroupId",((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabUpdateInternal)this).RosterProfileActiveDirectoryGroupId, global::System.Convert.ToString);
            }
            if (content.Contains("RosterProfileLtiContextId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabUpdateInternal)this).RosterProfileLtiContextId = (string) content.GetValueForProperty("RosterProfileLtiContextId",((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabUpdateInternal)this).RosterProfileLtiContextId, global::System.Convert.ToString);
            }
            if (content.Contains("RosterProfileLtiClientId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabUpdateInternal)this).RosterProfileLtiClientId = (string) content.GetValueForProperty("RosterProfileLtiClientId",((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabUpdateInternal)this).RosterProfileLtiClientId, global::System.Convert.ToString);
            }
            if (content.Contains("RosterProfileLtiRosterEndpoint"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabUpdateInternal)this).RosterProfileLtiRosterEndpoint = (string) content.GetValueForProperty("RosterProfileLtiRosterEndpoint",((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabUpdateInternal)this).RosterProfileLtiRosterEndpoint, global::System.Convert.ToString);
            }
            if (content.Contains("ImageReferenceId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabUpdateInternal)this).ImageReferenceId = (string) content.GetValueForProperty("ImageReferenceId",((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabUpdateInternal)this).ImageReferenceId, global::System.Convert.ToString);
            }
            if (content.Contains("AdditionalCapabilityInstallGpuDriver"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabUpdateInternal)this).AdditionalCapabilityInstallGpuDriver = (Microsoft.Azure.PowerShell.Cmdlets.LabServices.Support.EnableState?) content.GetValueForProperty("AdditionalCapabilityInstallGpuDriver",((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabUpdateInternal)this).AdditionalCapabilityInstallGpuDriver, Microsoft.Azure.PowerShell.Cmdlets.LabServices.Support.EnableState.CreateFrom);
            }
            if (content.Contains("AdminUserUsername"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabUpdateInternal)this).AdminUserUsername = (string) content.GetValueForProperty("AdminUserUsername",((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabUpdateInternal)this).AdminUserUsername, global::System.Convert.ToString);
            }
            if (content.Contains("AdminUserPassword"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabUpdateInternal)this).AdminUserPassword = (string) content.GetValueForProperty("AdminUserPassword",((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabUpdateInternal)this).AdminUserPassword, global::System.Convert.ToString);
            }
            if (content.Contains("NonAdminUserUsername"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabUpdateInternal)this).NonAdminUserUsername = (string) content.GetValueForProperty("NonAdminUserUsername",((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabUpdateInternal)this).NonAdminUserUsername, global::System.Convert.ToString);
            }
            if (content.Contains("NonAdminUserPassword"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabUpdateInternal)this).NonAdminUserPassword = (string) content.GetValueForProperty("NonAdminUserPassword",((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabUpdateInternal)this).NonAdminUserPassword, global::System.Convert.ToString);
            }
            AfterDeserializePSObject(content);
        }

        /// <summary>Serializes this instance to a json string.</summary>

        /// <returns>a <see cref="System.String" /> containing this model serialized to JSON text.</returns>
        public string ToJsonString() => ToJson(null, Microsoft.Azure.PowerShell.Cmdlets.LabServices.Runtime.SerializationMode.IncludeAll)?.ToString();
    }
    /// The lab resource for updates.
    [System.ComponentModel.TypeConverter(typeof(LabUpdateTypeConverter))]
    public partial interface ILabUpdate

    {

    }
}