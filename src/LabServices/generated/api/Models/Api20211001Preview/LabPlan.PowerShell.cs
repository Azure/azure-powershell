// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview
{
    using Microsoft.Azure.PowerShell.Cmdlets.LabServices.Runtime.PowerShell;

    /// <summary>
    /// Lab Plans act as a permission container for creating labs via labs.azure.com. Additionally, they can provide a set of
    /// default configurations that will apply at the time of creating a lab, but these defaults can still be overwritten.
    /// </summary>
    [System.ComponentModel.TypeConverter(typeof(LabPlanTypeConverter))]
    public partial class LabPlan
    {

        /// <summary>
        /// <c>AfterDeserializeDictionary</c> will be called after the deserialization has finished, allowing customization of the
        /// object before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>

        partial void AfterDeserializeDictionary(global::System.Collections.IDictionary content);

        /// <summary>
        /// <c>AfterDeserializePSObject</c> will be called after the deserialization has finished, allowing customization of the object
        /// before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>

        partial void AfterDeserializePSObject(global::System.Management.Automation.PSObject content);

        /// <summary>
        /// <c>BeforeDeserializeDictionary</c> will be called before the deserialization has commenced, allowing complete customization
        /// of the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <see "returnNow" /> output parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeDeserializeDictionary(global::System.Collections.IDictionary content, ref bool returnNow);

        /// <summary>
        /// <c>BeforeDeserializePSObject</c> will be called before the deserialization has commenced, allowing complete customization
        /// of the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <see "returnNow" /> output parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeDeserializePSObject(global::System.Management.Automation.PSObject content, ref bool returnNow);

        /// <summary>
        /// Deserializes a <see cref="global::System.Collections.IDictionary" /> into an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.LabPlan"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        /// <returns>
        /// an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabPlan" />.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabPlan DeserializeFromDictionary(global::System.Collections.IDictionary content)
        {
            return new LabPlan(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Management.Automation.PSObject" /> into an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.LabPlan"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        /// <returns>
        /// an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabPlan" />.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabPlan DeserializeFromPSObject(global::System.Management.Automation.PSObject content)
        {
            return new LabPlan(content);
        }

        /// <summary>
        /// Creates a new instance of <see cref="LabPlan" />, deserializing the content from a json string.
        /// </summary>
        /// <param name="jsonText">a string containing a JSON serialized instance of this model.</param>
        /// <returns>an instance of the <see cref="className" /> model class.</returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabPlan FromJsonString(string jsonText) => FromJson(Microsoft.Azure.PowerShell.Cmdlets.LabServices.Runtime.Json.JsonNode.Parse(jsonText));

        /// <summary>
        /// Deserializes a <see cref="global::System.Collections.IDictionary" /> into a new instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.LabPlan"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        internal LabPlan(global::System.Collections.IDictionary content)
        {
            bool returnNow = false;
            BeforeDeserializeDictionary(content, ref returnNow);
            if (returnNow)
            {
                return;
            }
            // actually deserialize
            if (content.Contains("SystemData"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabPlanInternal)this).SystemData = (Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20.ISystemData) content.GetValueForProperty("SystemData",((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabPlanInternal)this).SystemData, Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20.SystemDataTypeConverter.ConvertFrom);
            }
            if (content.Contains("Property"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabPlanInternal)this).Property = (Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabPlanProperties) content.GetValueForProperty("Property",((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabPlanInternal)this).Property, Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.LabPlanPropertiesTypeConverter.ConvertFrom);
            }
            if (content.Contains("Id"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20.IResourceInternal)this).Id = (string) content.GetValueForProperty("Id",((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20.IResourceInternal)this).Id, global::System.Convert.ToString);
            }
            if (content.Contains("Name"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20.IResourceInternal)this).Name = (string) content.GetValueForProperty("Name",((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20.IResourceInternal)this).Name, global::System.Convert.ToString);
            }
            if (content.Contains("Type"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20.IResourceInternal)this).Type = (string) content.GetValueForProperty("Type",((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20.IResourceInternal)this).Type, global::System.Convert.ToString);
            }
            if (content.Contains("Tag"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20.ITrackedResourceInternal)this).Tag = (Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20.ITrackedResourceTags) content.GetValueForProperty("Tag",((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20.ITrackedResourceInternal)this).Tag, Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20.TrackedResourceTagsTypeConverter.ConvertFrom);
            }
            if (content.Contains("Location"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20.ITrackedResourceInternal)this).Location = (string) content.GetValueForProperty("Location",((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20.ITrackedResourceInternal)this).Location, global::System.Convert.ToString);
            }
            if (content.Contains("SystemDataCreatedBy"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabPlanInternal)this).SystemDataCreatedBy = (string) content.GetValueForProperty("SystemDataCreatedBy",((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabPlanInternal)this).SystemDataCreatedBy, global::System.Convert.ToString);
            }
            if (content.Contains("SystemDataCreatedAt"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabPlanInternal)this).SystemDataCreatedAt = (global::System.DateTime?) content.GetValueForProperty("SystemDataCreatedAt",((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabPlanInternal)this).SystemDataCreatedAt, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            if (content.Contains("SupportInfo"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabPlanInternal)this).SupportInfo = (Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ISupportInfo) content.GetValueForProperty("SupportInfo",((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabPlanInternal)this).SupportInfo, Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.SupportInfoTypeConverter.ConvertFrom);
            }
            if (content.Contains("ProvisioningState"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabPlanInternal)this).ProvisioningState = (Microsoft.Azure.PowerShell.Cmdlets.LabServices.Support.ProvisioningState?) content.GetValueForProperty("ProvisioningState",((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabPlanInternal)this).ProvisioningState, Microsoft.Azure.PowerShell.Cmdlets.LabServices.Support.ProvisioningState.CreateFrom);
            }
            if (content.Contains("SystemDataCreatedByType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabPlanInternal)this).SystemDataCreatedByType = (Microsoft.Azure.PowerShell.Cmdlets.LabServices.Support.CreatedByType?) content.GetValueForProperty("SystemDataCreatedByType",((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabPlanInternal)this).SystemDataCreatedByType, Microsoft.Azure.PowerShell.Cmdlets.LabServices.Support.CreatedByType.CreateFrom);
            }
            if (content.Contains("SystemDataLastModifiedBy"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabPlanInternal)this).SystemDataLastModifiedBy = (string) content.GetValueForProperty("SystemDataLastModifiedBy",((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabPlanInternal)this).SystemDataLastModifiedBy, global::System.Convert.ToString);
            }
            if (content.Contains("SystemDataLastModifiedByType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabPlanInternal)this).SystemDataLastModifiedByType = (Microsoft.Azure.PowerShell.Cmdlets.LabServices.Support.CreatedByType?) content.GetValueForProperty("SystemDataLastModifiedByType",((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabPlanInternal)this).SystemDataLastModifiedByType, Microsoft.Azure.PowerShell.Cmdlets.LabServices.Support.CreatedByType.CreateFrom);
            }
            if (content.Contains("SystemDataLastModifiedAt"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabPlanInternal)this).SystemDataLastModifiedAt = (global::System.DateTime?) content.GetValueForProperty("SystemDataLastModifiedAt",((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabPlanInternal)this).SystemDataLastModifiedAt, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            if (content.Contains("SupportInfoUrl"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabPlanInternal)this).SupportInfoUrl = (string) content.GetValueForProperty("SupportInfoUrl",((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabPlanInternal)this).SupportInfoUrl, global::System.Convert.ToString);
            }
            if (content.Contains("SupportInfoInstruction"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabPlanInternal)this).SupportInfoInstruction = (string) content.GetValueForProperty("SupportInfoInstruction",((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabPlanInternal)this).SupportInfoInstruction, global::System.Convert.ToString);
            }
            if (content.Contains("DefaultConnectionProfile"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabPlanInternal)this).DefaultConnectionProfile = (Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.IConnectionProfile) content.GetValueForProperty("DefaultConnectionProfile",((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabPlanInternal)this).DefaultConnectionProfile, Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ConnectionProfileTypeConverter.ConvertFrom);
            }
            if (content.Contains("DefaultAutoShutdownProfile"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabPlanInternal)this).DefaultAutoShutdownProfile = (Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.IAutoShutdownProfile) content.GetValueForProperty("DefaultAutoShutdownProfile",((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabPlanInternal)this).DefaultAutoShutdownProfile, Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.AutoShutdownProfileTypeConverter.ConvertFrom);
            }
            if (content.Contains("DefaultNetworkProfile"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabPlanInternal)this).DefaultNetworkProfile = (Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabPlanNetworkProfile) content.GetValueForProperty("DefaultNetworkProfile",((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabPlanInternal)this).DefaultNetworkProfile, Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.LabPlanNetworkProfileTypeConverter.ConvertFrom);
            }
            if (content.Contains("AllowedRegion"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabPlanInternal)this).AllowedRegion = (string[]) content.GetValueForProperty("AllowedRegion",((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabPlanInternal)this).AllowedRegion, __y => TypeConverterExtensions.SelectToArray<string>(__y, global::System.Convert.ToString));
            }
            if (content.Contains("SharedGalleryId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabPlanInternal)this).SharedGalleryId = (string) content.GetValueForProperty("SharedGalleryId",((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabPlanInternal)this).SharedGalleryId, global::System.Convert.ToString);
            }
            if (content.Contains("LinkedLmsInstance"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabPlanInternal)this).LinkedLmsInstance = (string) content.GetValueForProperty("LinkedLmsInstance",((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabPlanInternal)this).LinkedLmsInstance, global::System.Convert.ToString);
            }
            if (content.Contains("DefaultConnectionProfileWebSshAccess"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabPlanInternal)this).DefaultConnectionProfileWebSshAccess = (Microsoft.Azure.PowerShell.Cmdlets.LabServices.Support.ConnectionType?) content.GetValueForProperty("DefaultConnectionProfileWebSshAccess",((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabPlanInternal)this).DefaultConnectionProfileWebSshAccess, Microsoft.Azure.PowerShell.Cmdlets.LabServices.Support.ConnectionType.CreateFrom);
            }
            if (content.Contains("DefaultConnectionProfileWebRdpAccess"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabPlanInternal)this).DefaultConnectionProfileWebRdpAccess = (Microsoft.Azure.PowerShell.Cmdlets.LabServices.Support.ConnectionType?) content.GetValueForProperty("DefaultConnectionProfileWebRdpAccess",((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabPlanInternal)this).DefaultConnectionProfileWebRdpAccess, Microsoft.Azure.PowerShell.Cmdlets.LabServices.Support.ConnectionType.CreateFrom);
            }
            if (content.Contains("DefaultConnectionProfileClientSshAccess"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabPlanInternal)this).DefaultConnectionProfileClientSshAccess = (Microsoft.Azure.PowerShell.Cmdlets.LabServices.Support.ConnectionType?) content.GetValueForProperty("DefaultConnectionProfileClientSshAccess",((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabPlanInternal)this).DefaultConnectionProfileClientSshAccess, Microsoft.Azure.PowerShell.Cmdlets.LabServices.Support.ConnectionType.CreateFrom);
            }
            if (content.Contains("DefaultConnectionProfileClientRdpAccess"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabPlanInternal)this).DefaultConnectionProfileClientRdpAccess = (Microsoft.Azure.PowerShell.Cmdlets.LabServices.Support.ConnectionType?) content.GetValueForProperty("DefaultConnectionProfileClientRdpAccess",((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabPlanInternal)this).DefaultConnectionProfileClientRdpAccess, Microsoft.Azure.PowerShell.Cmdlets.LabServices.Support.ConnectionType.CreateFrom);
            }
            if (content.Contains("DefaultAutoShutdownProfileShutdownOnDisconnect"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabPlanInternal)this).DefaultAutoShutdownProfileShutdownOnDisconnect = (Microsoft.Azure.PowerShell.Cmdlets.LabServices.Support.EnableState?) content.GetValueForProperty("DefaultAutoShutdownProfileShutdownOnDisconnect",((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabPlanInternal)this).DefaultAutoShutdownProfileShutdownOnDisconnect, Microsoft.Azure.PowerShell.Cmdlets.LabServices.Support.EnableState.CreateFrom);
            }
            if (content.Contains("DefaultAutoShutdownProfileShutdownWhenNotConnected"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabPlanInternal)this).DefaultAutoShutdownProfileShutdownWhenNotConnected = (Microsoft.Azure.PowerShell.Cmdlets.LabServices.Support.EnableState?) content.GetValueForProperty("DefaultAutoShutdownProfileShutdownWhenNotConnected",((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabPlanInternal)this).DefaultAutoShutdownProfileShutdownWhenNotConnected, Microsoft.Azure.PowerShell.Cmdlets.LabServices.Support.EnableState.CreateFrom);
            }
            if (content.Contains("DefaultAutoShutdownProfileShutdownOnIdle"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabPlanInternal)this).DefaultAutoShutdownProfileShutdownOnIdle = (Microsoft.Azure.PowerShell.Cmdlets.LabServices.Support.ShutdownOnIdleMode?) content.GetValueForProperty("DefaultAutoShutdownProfileShutdownOnIdle",((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabPlanInternal)this).DefaultAutoShutdownProfileShutdownOnIdle, Microsoft.Azure.PowerShell.Cmdlets.LabServices.Support.ShutdownOnIdleMode.CreateFrom);
            }
            if (content.Contains("DefaultAutoShutdownProfileDisconnectDelay"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabPlanInternal)this).DefaultAutoShutdownProfileDisconnectDelay = (global::System.TimeSpan?) content.GetValueForProperty("DefaultAutoShutdownProfileDisconnectDelay",((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabPlanInternal)this).DefaultAutoShutdownProfileDisconnectDelay, (v) => v is global::System.TimeSpan _v ? _v : global::System.Xml.XmlConvert.ToTimeSpan( v.ToString() ));
            }
            if (content.Contains("DefaultAutoShutdownProfileNoConnectDelay"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabPlanInternal)this).DefaultAutoShutdownProfileNoConnectDelay = (global::System.TimeSpan?) content.GetValueForProperty("DefaultAutoShutdownProfileNoConnectDelay",((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabPlanInternal)this).DefaultAutoShutdownProfileNoConnectDelay, (v) => v is global::System.TimeSpan _v ? _v : global::System.Xml.XmlConvert.ToTimeSpan( v.ToString() ));
            }
            if (content.Contains("DefaultAutoShutdownProfileIdleDelay"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabPlanInternal)this).DefaultAutoShutdownProfileIdleDelay = (global::System.TimeSpan?) content.GetValueForProperty("DefaultAutoShutdownProfileIdleDelay",((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabPlanInternal)this).DefaultAutoShutdownProfileIdleDelay, (v) => v is global::System.TimeSpan _v ? _v : global::System.Xml.XmlConvert.ToTimeSpan( v.ToString() ));
            }
            if (content.Contains("DefaultNetworkProfileSubnetId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabPlanInternal)this).DefaultNetworkProfileSubnetId = (string) content.GetValueForProperty("DefaultNetworkProfileSubnetId",((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabPlanInternal)this).DefaultNetworkProfileSubnetId, global::System.Convert.ToString);
            }
            if (content.Contains("SupportInfoEmail"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabPlanInternal)this).SupportInfoEmail = (string) content.GetValueForProperty("SupportInfoEmail",((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabPlanInternal)this).SupportInfoEmail, global::System.Convert.ToString);
            }
            if (content.Contains("SupportInfoPhone"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabPlanInternal)this).SupportInfoPhone = (string) content.GetValueForProperty("SupportInfoPhone",((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabPlanInternal)this).SupportInfoPhone, global::System.Convert.ToString);
            }
            AfterDeserializeDictionary(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Management.Automation.PSObject" /> into a new instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.LabPlan"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        internal LabPlan(global::System.Management.Automation.PSObject content)
        {
            bool returnNow = false;
            BeforeDeserializePSObject(content, ref returnNow);
            if (returnNow)
            {
                return;
            }
            // actually deserialize
            if (content.Contains("SystemData"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabPlanInternal)this).SystemData = (Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20.ISystemData) content.GetValueForProperty("SystemData",((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabPlanInternal)this).SystemData, Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20.SystemDataTypeConverter.ConvertFrom);
            }
            if (content.Contains("Property"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabPlanInternal)this).Property = (Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabPlanProperties) content.GetValueForProperty("Property",((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabPlanInternal)this).Property, Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.LabPlanPropertiesTypeConverter.ConvertFrom);
            }
            if (content.Contains("Id"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20.IResourceInternal)this).Id = (string) content.GetValueForProperty("Id",((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20.IResourceInternal)this).Id, global::System.Convert.ToString);
            }
            if (content.Contains("Name"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20.IResourceInternal)this).Name = (string) content.GetValueForProperty("Name",((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20.IResourceInternal)this).Name, global::System.Convert.ToString);
            }
            if (content.Contains("Type"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20.IResourceInternal)this).Type = (string) content.GetValueForProperty("Type",((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20.IResourceInternal)this).Type, global::System.Convert.ToString);
            }
            if (content.Contains("Tag"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20.ITrackedResourceInternal)this).Tag = (Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20.ITrackedResourceTags) content.GetValueForProperty("Tag",((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20.ITrackedResourceInternal)this).Tag, Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20.TrackedResourceTagsTypeConverter.ConvertFrom);
            }
            if (content.Contains("Location"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20.ITrackedResourceInternal)this).Location = (string) content.GetValueForProperty("Location",((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20.ITrackedResourceInternal)this).Location, global::System.Convert.ToString);
            }
            if (content.Contains("SystemDataCreatedBy"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabPlanInternal)this).SystemDataCreatedBy = (string) content.GetValueForProperty("SystemDataCreatedBy",((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabPlanInternal)this).SystemDataCreatedBy, global::System.Convert.ToString);
            }
            if (content.Contains("SystemDataCreatedAt"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabPlanInternal)this).SystemDataCreatedAt = (global::System.DateTime?) content.GetValueForProperty("SystemDataCreatedAt",((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabPlanInternal)this).SystemDataCreatedAt, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            if (content.Contains("SupportInfo"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabPlanInternal)this).SupportInfo = (Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ISupportInfo) content.GetValueForProperty("SupportInfo",((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabPlanInternal)this).SupportInfo, Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.SupportInfoTypeConverter.ConvertFrom);
            }
            if (content.Contains("ProvisioningState"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabPlanInternal)this).ProvisioningState = (Microsoft.Azure.PowerShell.Cmdlets.LabServices.Support.ProvisioningState?) content.GetValueForProperty("ProvisioningState",((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabPlanInternal)this).ProvisioningState, Microsoft.Azure.PowerShell.Cmdlets.LabServices.Support.ProvisioningState.CreateFrom);
            }
            if (content.Contains("SystemDataCreatedByType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabPlanInternal)this).SystemDataCreatedByType = (Microsoft.Azure.PowerShell.Cmdlets.LabServices.Support.CreatedByType?) content.GetValueForProperty("SystemDataCreatedByType",((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabPlanInternal)this).SystemDataCreatedByType, Microsoft.Azure.PowerShell.Cmdlets.LabServices.Support.CreatedByType.CreateFrom);
            }
            if (content.Contains("SystemDataLastModifiedBy"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabPlanInternal)this).SystemDataLastModifiedBy = (string) content.GetValueForProperty("SystemDataLastModifiedBy",((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabPlanInternal)this).SystemDataLastModifiedBy, global::System.Convert.ToString);
            }
            if (content.Contains("SystemDataLastModifiedByType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabPlanInternal)this).SystemDataLastModifiedByType = (Microsoft.Azure.PowerShell.Cmdlets.LabServices.Support.CreatedByType?) content.GetValueForProperty("SystemDataLastModifiedByType",((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabPlanInternal)this).SystemDataLastModifiedByType, Microsoft.Azure.PowerShell.Cmdlets.LabServices.Support.CreatedByType.CreateFrom);
            }
            if (content.Contains("SystemDataLastModifiedAt"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabPlanInternal)this).SystemDataLastModifiedAt = (global::System.DateTime?) content.GetValueForProperty("SystemDataLastModifiedAt",((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabPlanInternal)this).SystemDataLastModifiedAt, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            if (content.Contains("SupportInfoUrl"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabPlanInternal)this).SupportInfoUrl = (string) content.GetValueForProperty("SupportInfoUrl",((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabPlanInternal)this).SupportInfoUrl, global::System.Convert.ToString);
            }
            if (content.Contains("SupportInfoInstruction"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabPlanInternal)this).SupportInfoInstruction = (string) content.GetValueForProperty("SupportInfoInstruction",((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabPlanInternal)this).SupportInfoInstruction, global::System.Convert.ToString);
            }
            if (content.Contains("DefaultConnectionProfile"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabPlanInternal)this).DefaultConnectionProfile = (Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.IConnectionProfile) content.GetValueForProperty("DefaultConnectionProfile",((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabPlanInternal)this).DefaultConnectionProfile, Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ConnectionProfileTypeConverter.ConvertFrom);
            }
            if (content.Contains("DefaultAutoShutdownProfile"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabPlanInternal)this).DefaultAutoShutdownProfile = (Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.IAutoShutdownProfile) content.GetValueForProperty("DefaultAutoShutdownProfile",((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabPlanInternal)this).DefaultAutoShutdownProfile, Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.AutoShutdownProfileTypeConverter.ConvertFrom);
            }
            if (content.Contains("DefaultNetworkProfile"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabPlanInternal)this).DefaultNetworkProfile = (Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabPlanNetworkProfile) content.GetValueForProperty("DefaultNetworkProfile",((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabPlanInternal)this).DefaultNetworkProfile, Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.LabPlanNetworkProfileTypeConverter.ConvertFrom);
            }
            if (content.Contains("AllowedRegion"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabPlanInternal)this).AllowedRegion = (string[]) content.GetValueForProperty("AllowedRegion",((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabPlanInternal)this).AllowedRegion, __y => TypeConverterExtensions.SelectToArray<string>(__y, global::System.Convert.ToString));
            }
            if (content.Contains("SharedGalleryId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabPlanInternal)this).SharedGalleryId = (string) content.GetValueForProperty("SharedGalleryId",((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabPlanInternal)this).SharedGalleryId, global::System.Convert.ToString);
            }
            if (content.Contains("LinkedLmsInstance"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabPlanInternal)this).LinkedLmsInstance = (string) content.GetValueForProperty("LinkedLmsInstance",((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabPlanInternal)this).LinkedLmsInstance, global::System.Convert.ToString);
            }
            if (content.Contains("DefaultConnectionProfileWebSshAccess"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabPlanInternal)this).DefaultConnectionProfileWebSshAccess = (Microsoft.Azure.PowerShell.Cmdlets.LabServices.Support.ConnectionType?) content.GetValueForProperty("DefaultConnectionProfileWebSshAccess",((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabPlanInternal)this).DefaultConnectionProfileWebSshAccess, Microsoft.Azure.PowerShell.Cmdlets.LabServices.Support.ConnectionType.CreateFrom);
            }
            if (content.Contains("DefaultConnectionProfileWebRdpAccess"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabPlanInternal)this).DefaultConnectionProfileWebRdpAccess = (Microsoft.Azure.PowerShell.Cmdlets.LabServices.Support.ConnectionType?) content.GetValueForProperty("DefaultConnectionProfileWebRdpAccess",((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabPlanInternal)this).DefaultConnectionProfileWebRdpAccess, Microsoft.Azure.PowerShell.Cmdlets.LabServices.Support.ConnectionType.CreateFrom);
            }
            if (content.Contains("DefaultConnectionProfileClientSshAccess"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabPlanInternal)this).DefaultConnectionProfileClientSshAccess = (Microsoft.Azure.PowerShell.Cmdlets.LabServices.Support.ConnectionType?) content.GetValueForProperty("DefaultConnectionProfileClientSshAccess",((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabPlanInternal)this).DefaultConnectionProfileClientSshAccess, Microsoft.Azure.PowerShell.Cmdlets.LabServices.Support.ConnectionType.CreateFrom);
            }
            if (content.Contains("DefaultConnectionProfileClientRdpAccess"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabPlanInternal)this).DefaultConnectionProfileClientRdpAccess = (Microsoft.Azure.PowerShell.Cmdlets.LabServices.Support.ConnectionType?) content.GetValueForProperty("DefaultConnectionProfileClientRdpAccess",((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabPlanInternal)this).DefaultConnectionProfileClientRdpAccess, Microsoft.Azure.PowerShell.Cmdlets.LabServices.Support.ConnectionType.CreateFrom);
            }
            if (content.Contains("DefaultAutoShutdownProfileShutdownOnDisconnect"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabPlanInternal)this).DefaultAutoShutdownProfileShutdownOnDisconnect = (Microsoft.Azure.PowerShell.Cmdlets.LabServices.Support.EnableState?) content.GetValueForProperty("DefaultAutoShutdownProfileShutdownOnDisconnect",((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabPlanInternal)this).DefaultAutoShutdownProfileShutdownOnDisconnect, Microsoft.Azure.PowerShell.Cmdlets.LabServices.Support.EnableState.CreateFrom);
            }
            if (content.Contains("DefaultAutoShutdownProfileShutdownWhenNotConnected"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabPlanInternal)this).DefaultAutoShutdownProfileShutdownWhenNotConnected = (Microsoft.Azure.PowerShell.Cmdlets.LabServices.Support.EnableState?) content.GetValueForProperty("DefaultAutoShutdownProfileShutdownWhenNotConnected",((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabPlanInternal)this).DefaultAutoShutdownProfileShutdownWhenNotConnected, Microsoft.Azure.PowerShell.Cmdlets.LabServices.Support.EnableState.CreateFrom);
            }
            if (content.Contains("DefaultAutoShutdownProfileShutdownOnIdle"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabPlanInternal)this).DefaultAutoShutdownProfileShutdownOnIdle = (Microsoft.Azure.PowerShell.Cmdlets.LabServices.Support.ShutdownOnIdleMode?) content.GetValueForProperty("DefaultAutoShutdownProfileShutdownOnIdle",((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabPlanInternal)this).DefaultAutoShutdownProfileShutdownOnIdle, Microsoft.Azure.PowerShell.Cmdlets.LabServices.Support.ShutdownOnIdleMode.CreateFrom);
            }
            if (content.Contains("DefaultAutoShutdownProfileDisconnectDelay"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabPlanInternal)this).DefaultAutoShutdownProfileDisconnectDelay = (global::System.TimeSpan?) content.GetValueForProperty("DefaultAutoShutdownProfileDisconnectDelay",((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabPlanInternal)this).DefaultAutoShutdownProfileDisconnectDelay, (v) => v is global::System.TimeSpan _v ? _v : global::System.Xml.XmlConvert.ToTimeSpan( v.ToString() ));
            }
            if (content.Contains("DefaultAutoShutdownProfileNoConnectDelay"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabPlanInternal)this).DefaultAutoShutdownProfileNoConnectDelay = (global::System.TimeSpan?) content.GetValueForProperty("DefaultAutoShutdownProfileNoConnectDelay",((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabPlanInternal)this).DefaultAutoShutdownProfileNoConnectDelay, (v) => v is global::System.TimeSpan _v ? _v : global::System.Xml.XmlConvert.ToTimeSpan( v.ToString() ));
            }
            if (content.Contains("DefaultAutoShutdownProfileIdleDelay"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabPlanInternal)this).DefaultAutoShutdownProfileIdleDelay = (global::System.TimeSpan?) content.GetValueForProperty("DefaultAutoShutdownProfileIdleDelay",((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabPlanInternal)this).DefaultAutoShutdownProfileIdleDelay, (v) => v is global::System.TimeSpan _v ? _v : global::System.Xml.XmlConvert.ToTimeSpan( v.ToString() ));
            }
            if (content.Contains("DefaultNetworkProfileSubnetId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabPlanInternal)this).DefaultNetworkProfileSubnetId = (string) content.GetValueForProperty("DefaultNetworkProfileSubnetId",((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabPlanInternal)this).DefaultNetworkProfileSubnetId, global::System.Convert.ToString);
            }
            if (content.Contains("SupportInfoEmail"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabPlanInternal)this).SupportInfoEmail = (string) content.GetValueForProperty("SupportInfoEmail",((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabPlanInternal)this).SupportInfoEmail, global::System.Convert.ToString);
            }
            if (content.Contains("SupportInfoPhone"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabPlanInternal)this).SupportInfoPhone = (string) content.GetValueForProperty("SupportInfoPhone",((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabPlanInternal)this).SupportInfoPhone, global::System.Convert.ToString);
            }
            AfterDeserializePSObject(content);
        }

        /// <summary>Serializes this instance to a json string.</summary>

        /// <returns>a <see cref="System.String" /> containing this model serialized to JSON text.</returns>
        public string ToJsonString() => ToJson(null, Microsoft.Azure.PowerShell.Cmdlets.LabServices.Runtime.SerializationMode.IncludeAll)?.ToString();
    }
    /// Lab Plans act as a permission container for creating labs via labs.azure.com. Additionally, they can provide a set of
    /// default configurations that will apply at the time of creating a lab, but these defaults can still be overwritten.
    [System.ComponentModel.TypeConverter(typeof(LabPlanTypeConverter))]
    public partial interface ILabPlan

    {

    }
}