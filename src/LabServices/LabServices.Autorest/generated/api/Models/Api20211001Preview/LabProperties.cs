// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview
{
    using static Microsoft.Azure.PowerShell.Cmdlets.LabServices.Runtime.Extensions;

    /// <summary>Properties of a lab resource.</summary>
    public partial class LabProperties :
        Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabProperties,
        Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabPropertiesInternal,
        Microsoft.Azure.PowerShell.Cmdlets.LabServices.Runtime.IValidates
    {
        /// <summary>
        /// Backing field for Inherited model <see cref= "Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabUpdateProperties"
        /// />
        /// </summary>
        private Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabUpdateProperties __labUpdateProperties = new Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.LabUpdateProperties();

        /// <summary>Flag to pre-install dedicated GPU drivers.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.LabServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.LabServices.PropertyOrigin.Inherited)]
        public Microsoft.Azure.PowerShell.Cmdlets.LabServices.Support.EnableState? AdditionalCapabilityInstallGpuDriver { get => ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabUpdatePropertiesInternal)__labUpdateProperties).AdditionalCapabilityInstallGpuDriver; set => ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabUpdatePropertiesInternal)__labUpdateProperties).AdditionalCapabilityInstallGpuDriver = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Support.EnableState)""); }

        /// <summary>The password for the user. This is required for the TemplateVM createOption.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.LabServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.LabServices.PropertyOrigin.Inherited)]
        public string AdminUserPassword { get => ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabUpdatePropertiesInternal)__labUpdateProperties).AdminUserPassword; set => ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabUpdatePropertiesInternal)__labUpdateProperties).AdminUserPassword = value ?? null; }

        /// <summary>The username to use when signing in to lab VMs.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.LabServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.LabServices.PropertyOrigin.Inherited)]
        public string AdminUserUsername { get => ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabUpdatePropertiesInternal)__labUpdateProperties).AdminUserUsername; set => ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabUpdatePropertiesInternal)__labUpdateProperties).AdminUserUsername = value ?? null; }

        /// <summary>
        /// The resource auto shutdown configuration for the lab. This controls whether actions are taken on resources that are sitting
        /// idle.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.LabServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.LabServices.PropertyOrigin.Inherited)]
        public Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.IAutoShutdownProfile AutoShutdownProfile { get => ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabUpdatePropertiesInternal)__labUpdateProperties).AutoShutdownProfile; set => ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabUpdatePropertiesInternal)__labUpdateProperties).AutoShutdownProfile = value ?? null /* model class */; }

        /// <summary>
        /// The amount of time a VM will stay running after a user disconnects if this behavior is enabled.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.LabServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.LabServices.PropertyOrigin.Inherited)]
        public global::System.TimeSpan? AutoShutdownProfileDisconnectDelay { get => ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabUpdatePropertiesInternal)__labUpdateProperties).AutoShutdownProfileDisconnectDelay; set => ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabUpdatePropertiesInternal)__labUpdateProperties).AutoShutdownProfileDisconnectDelay = value ?? default(global::System.TimeSpan); }

        /// <summary>
        /// The amount of time a VM will idle before it is shutdown if this behavior is enabled.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.LabServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.LabServices.PropertyOrigin.Inherited)]
        public global::System.TimeSpan? AutoShutdownProfileIdleDelay { get => ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabUpdatePropertiesInternal)__labUpdateProperties).AutoShutdownProfileIdleDelay; set => ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabUpdatePropertiesInternal)__labUpdateProperties).AutoShutdownProfileIdleDelay = value ?? default(global::System.TimeSpan); }

        /// <summary>
        /// The amount of time a VM will stay running before it is shutdown if no connection is made and this behavior is enabled.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.LabServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.LabServices.PropertyOrigin.Inherited)]
        public global::System.TimeSpan? AutoShutdownProfileNoConnectDelay { get => ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabUpdatePropertiesInternal)__labUpdateProperties).AutoShutdownProfileNoConnectDelay; set => ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabUpdatePropertiesInternal)__labUpdateProperties).AutoShutdownProfileNoConnectDelay = value ?? default(global::System.TimeSpan); }

        /// <summary>Whether shutdown on disconnect is enabled</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.LabServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.LabServices.PropertyOrigin.Inherited)]
        public Microsoft.Azure.PowerShell.Cmdlets.LabServices.Support.EnableState? AutoShutdownProfileShutdownOnDisconnect { get => ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabUpdatePropertiesInternal)__labUpdateProperties).AutoShutdownProfileShutdownOnDisconnect; set => ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabUpdatePropertiesInternal)__labUpdateProperties).AutoShutdownProfileShutdownOnDisconnect = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Support.EnableState)""); }

        /// <summary>Whether a VM will get shutdown when it has idled for a period of time.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.LabServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.LabServices.PropertyOrigin.Inherited)]
        public Microsoft.Azure.PowerShell.Cmdlets.LabServices.Support.ShutdownOnIdleMode? AutoShutdownProfileShutdownOnIdle { get => ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabUpdatePropertiesInternal)__labUpdateProperties).AutoShutdownProfileShutdownOnIdle; set => ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabUpdatePropertiesInternal)__labUpdateProperties).AutoShutdownProfileShutdownOnIdle = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Support.ShutdownOnIdleMode)""); }

        /// <summary>
        /// Whether a VM will get shutdown when it hasn't been connected to after a period of time.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.LabServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.LabServices.PropertyOrigin.Inherited)]
        public Microsoft.Azure.PowerShell.Cmdlets.LabServices.Support.EnableState? AutoShutdownProfileShutdownWhenNotConnected { get => ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabUpdatePropertiesInternal)__labUpdateProperties).AutoShutdownProfileShutdownWhenNotConnected; set => ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabUpdatePropertiesInternal)__labUpdateProperties).AutoShutdownProfileShutdownWhenNotConnected = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Support.EnableState)""); }

        /// <summary>
        /// The connection profile for the lab. This controls settings such as web access to lab resources or whether RDP or SSH ports
        /// are open.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.LabServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.LabServices.PropertyOrigin.Inherited)]
        public Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.IConnectionProfile ConnectionProfile { get => ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabUpdatePropertiesInternal)__labUpdateProperties).ConnectionProfile; set => ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabUpdatePropertiesInternal)__labUpdateProperties).ConnectionProfile = value ?? null /* model class */; }

        /// <summary>The enabled access level for Client Access over RDP.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.LabServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.LabServices.PropertyOrigin.Inherited)]
        public Microsoft.Azure.PowerShell.Cmdlets.LabServices.Support.ConnectionType? ConnectionProfileClientRdpAccess { get => ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabUpdatePropertiesInternal)__labUpdateProperties).ConnectionProfileClientRdpAccess; set => ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabUpdatePropertiesInternal)__labUpdateProperties).ConnectionProfileClientRdpAccess = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Support.ConnectionType)""); }

        /// <summary>The enabled access level for Client Access over SSH.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.LabServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.LabServices.PropertyOrigin.Inherited)]
        public Microsoft.Azure.PowerShell.Cmdlets.LabServices.Support.ConnectionType? ConnectionProfileClientSshAccess { get => ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabUpdatePropertiesInternal)__labUpdateProperties).ConnectionProfileClientSshAccess; set => ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabUpdatePropertiesInternal)__labUpdateProperties).ConnectionProfileClientSshAccess = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Support.ConnectionType)""); }

        /// <summary>The enabled access level for Web Access over RDP.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.LabServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.LabServices.PropertyOrigin.Inherited)]
        public Microsoft.Azure.PowerShell.Cmdlets.LabServices.Support.ConnectionType? ConnectionProfileWebRdpAccess { get => ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabUpdatePropertiesInternal)__labUpdateProperties).ConnectionProfileWebRdpAccess; set => ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabUpdatePropertiesInternal)__labUpdateProperties).ConnectionProfileWebRdpAccess = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Support.ConnectionType)""); }

        /// <summary>The enabled access level for Web Access over SSH.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.LabServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.LabServices.PropertyOrigin.Inherited)]
        public Microsoft.Azure.PowerShell.Cmdlets.LabServices.Support.ConnectionType? ConnectionProfileWebSshAccess { get => ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabUpdatePropertiesInternal)__labUpdateProperties).ConnectionProfileWebSshAccess; set => ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabUpdatePropertiesInternal)__labUpdateProperties).ConnectionProfileWebSshAccess = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Support.ConnectionType)""); }

        /// <summary>The description of the lab.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.LabServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.LabServices.PropertyOrigin.Inherited)]
        public string Description { get => ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabUpdatePropertiesInternal)__labUpdateProperties).Description; set => ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabUpdatePropertiesInternal)__labUpdateProperties).Description = value ?? null; }

        /// <summary>The actual version of the image after use.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.LabServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.LabServices.PropertyOrigin.Inherited)]
        public string ImageReferenceExactVersion { get => ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabUpdatePropertiesInternal)__labUpdateProperties).ImageReferenceExactVersion; }

        /// <summary>Image resource ID</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.LabServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.LabServices.PropertyOrigin.Inherited)]
        public string ImageReferenceId { get => ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabUpdatePropertiesInternal)__labUpdateProperties).ImageReferenceId; set => ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabUpdatePropertiesInternal)__labUpdateProperties).ImageReferenceId = value ?? null; }

        /// <summary>The image offer if applicable.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.LabServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.LabServices.PropertyOrigin.Inherited)]
        public string ImageReferenceOffer { get => ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabUpdatePropertiesInternal)__labUpdateProperties).ImageReferenceOffer; set => ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabUpdatePropertiesInternal)__labUpdateProperties).ImageReferenceOffer = value ?? null; }

        /// <summary>The image publisher</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.LabServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.LabServices.PropertyOrigin.Inherited)]
        public string ImageReferencePublisher { get => ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabUpdatePropertiesInternal)__labUpdateProperties).ImageReferencePublisher; set => ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabUpdatePropertiesInternal)__labUpdateProperties).ImageReferencePublisher = value ?? null; }

        /// <summary>The image SKU</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.LabServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.LabServices.PropertyOrigin.Inherited)]
        public string ImageReferenceSku { get => ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabUpdatePropertiesInternal)__labUpdateProperties).ImageReferenceSku; set => ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabUpdatePropertiesInternal)__labUpdateProperties).ImageReferenceSku = value ?? null; }

        /// <summary>The image version specified on creation.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.LabServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.LabServices.PropertyOrigin.Inherited)]
        public string ImageReferenceVersion { get => ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabUpdatePropertiesInternal)__labUpdateProperties).ImageReferenceVersion; set => ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabUpdatePropertiesInternal)__labUpdateProperties).ImageReferenceVersion = value ?? null; }

        /// <summary>
        /// The ID of the lab plan. Used during resource creation to provide defaults and acts as a permission container when creating
        /// a lab via labs.azure.com. Setting a labPlanId on an existing lab provides organization..
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.LabServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.LabServices.PropertyOrigin.Inherited)]
        public string LabPlanId { get => ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabUpdatePropertiesInternal)__labUpdateProperties).LabPlanId; set => ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabUpdatePropertiesInternal)__labUpdateProperties).LabPlanId = value ?? null; }

        /// <summary>Internal Acessors for NetworkProfile</summary>
        Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabNetworkProfile Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabPropertiesInternal.NetworkProfile { get => (this._networkProfile = this._networkProfile ?? new Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.LabNetworkProfile()); set { {_networkProfile = value;} } }

        /// <summary>Internal Acessors for ProvisioningState</summary>
        Microsoft.Azure.PowerShell.Cmdlets.LabServices.Support.ProvisioningState? Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabPropertiesInternal.ProvisioningState { get => this._provisioningState; set { {_provisioningState = value;} } }

        /// <summary>Internal Acessors for State</summary>
        Microsoft.Azure.PowerShell.Cmdlets.LabServices.Support.LabState? Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabPropertiesInternal.State { get => this._state; set { {_state = value;} } }

        /// <summary>Internal Acessors for ImageReferenceExactVersion</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabUpdatePropertiesInternal.ImageReferenceExactVersion { get => ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabUpdatePropertiesInternal)__labUpdateProperties).ImageReferenceExactVersion; set => ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabUpdatePropertiesInternal)__labUpdateProperties).ImageReferenceExactVersion = value; }

        /// <summary>Internal Acessors for SecurityProfileRegistrationCode</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabUpdatePropertiesInternal.SecurityProfileRegistrationCode { get => ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabUpdatePropertiesInternal)__labUpdateProperties).SecurityProfileRegistrationCode; set => ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabUpdatePropertiesInternal)__labUpdateProperties).SecurityProfileRegistrationCode = value; }

        /// <summary>Internal Acessors for VirtualMachineProfileOSType</summary>
        Microsoft.Azure.PowerShell.Cmdlets.LabServices.Support.OSType? Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabUpdatePropertiesInternal.VirtualMachineProfileOSType { get => ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabUpdatePropertiesInternal)__labUpdateProperties).VirtualMachineProfileOSType; set => ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabUpdatePropertiesInternal)__labUpdateProperties).VirtualMachineProfileOSType = value; }

        /// <summary>Backing field for <see cref="NetworkProfile" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabNetworkProfile _networkProfile;

        /// <summary>
        /// The network profile for the lab, typically applied via a lab plan. This profile cannot be modified once a lab has been
        /// created.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.LabServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.LabServices.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabNetworkProfile NetworkProfile { get => (this._networkProfile = this._networkProfile ?? new Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.LabNetworkProfile()); set => this._networkProfile = value; }

        /// <summary>The external load balancer resource id</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.LabServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.LabServices.PropertyOrigin.Inlined)]
        public string NetworkProfileLoadBalancerId { get => ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabNetworkProfileInternal)NetworkProfile).LoadBalancerId; set => ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabNetworkProfileInternal)NetworkProfile).LoadBalancerId = value ?? null; }

        /// <summary>The external public IP resource id</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.LabServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.LabServices.PropertyOrigin.Inlined)]
        public string NetworkProfilePublicIPId { get => ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabNetworkProfileInternal)NetworkProfile).PublicIPId; set => ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabNetworkProfileInternal)NetworkProfile).PublicIPId = value ?? null; }

        /// <summary>The external subnet resource id</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.LabServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.LabServices.PropertyOrigin.Inlined)]
        public string NetworkProfileSubnetId { get => ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabNetworkProfileInternal)NetworkProfile).SubnetId; set => ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabNetworkProfileInternal)NetworkProfile).SubnetId = value ?? null; }

        /// <summary>The password for the user. This is required for the TemplateVM createOption.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.LabServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.LabServices.PropertyOrigin.Inherited)]
        public string NonAdminUserPassword { get => ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabUpdatePropertiesInternal)__labUpdateProperties).NonAdminUserPassword; set => ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabUpdatePropertiesInternal)__labUpdateProperties).NonAdminUserPassword = value ?? null; }

        /// <summary>The username to use when signing in to lab VMs.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.LabServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.LabServices.PropertyOrigin.Inherited)]
        public string NonAdminUserUsername { get => ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabUpdatePropertiesInternal)__labUpdateProperties).NonAdminUserUsername; set => ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabUpdatePropertiesInternal)__labUpdateProperties).NonAdminUserUsername = value ?? null; }

        /// <summary>Backing field for <see cref="ProvisioningState" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.LabServices.Support.ProvisioningState? _provisioningState;

        /// <summary>Current provisioning state of the lab.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.LabServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.LabServices.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.LabServices.Support.ProvisioningState? ProvisioningState { get => this._provisioningState; }

        /// <summary>The lab user list management profile.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.LabServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.LabServices.PropertyOrigin.Inherited)]
        public Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.IRosterProfile RosterProfile { get => ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabUpdatePropertiesInternal)__labUpdateProperties).RosterProfile; set => ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabUpdatePropertiesInternal)__labUpdateProperties).RosterProfile = value ?? null /* model class */; }

        /// <summary>
        /// The AAD group ID which this lab roster is populated from. Having this set enables AAD sync mode.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.LabServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.LabServices.PropertyOrigin.Inherited)]
        public string RosterProfileActiveDirectoryGroupId { get => ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabUpdatePropertiesInternal)__labUpdateProperties).RosterProfileActiveDirectoryGroupId; set => ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabUpdatePropertiesInternal)__labUpdateProperties).RosterProfileActiveDirectoryGroupId = value ?? null; }

        /// <summary>The base URI identifying the lms instance.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.LabServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.LabServices.PropertyOrigin.Inherited)]
        public string RosterProfileLmsInstance { get => ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabUpdatePropertiesInternal)__labUpdateProperties).RosterProfileLmsInstance; set => ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabUpdatePropertiesInternal)__labUpdateProperties).RosterProfileLmsInstance = value ?? null; }

        /// <summary>The unique id of the azure lab services tool in the lms.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.LabServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.LabServices.PropertyOrigin.Inherited)]
        public string RosterProfileLtiClientId { get => ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabUpdatePropertiesInternal)__labUpdateProperties).RosterProfileLtiClientId; set => ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabUpdatePropertiesInternal)__labUpdateProperties).RosterProfileLtiClientId = value ?? null; }

        /// <summary>The unique context identifier for the lab in the lms.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.LabServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.LabServices.PropertyOrigin.Inherited)]
        public string RosterProfileLtiContextId { get => ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabUpdatePropertiesInternal)__labUpdateProperties).RosterProfileLtiContextId; set => ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabUpdatePropertiesInternal)__labUpdateProperties).RosterProfileLtiContextId = value ?? null; }

        /// <summary>
        /// The uri of the names and roles service endpoint on the lms for the class attached to this lab.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.LabServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.LabServices.PropertyOrigin.Inherited)]
        public string RosterProfileLtiRosterEndpoint { get => ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabUpdatePropertiesInternal)__labUpdateProperties).RosterProfileLtiRosterEndpoint; set => ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabUpdatePropertiesInternal)__labUpdateProperties).RosterProfileLtiRosterEndpoint = value ?? null; }

        /// <summary>The lab security profile.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.LabServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.LabServices.PropertyOrigin.Inherited)]
        public Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ISecurityProfile SecurityProfile { get => ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabUpdatePropertiesInternal)__labUpdateProperties).SecurityProfile; set => ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabUpdatePropertiesInternal)__labUpdateProperties).SecurityProfile = value ?? null /* model class */; }

        /// <summary>Whether any user or only specified users can register to a lab.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.LabServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.LabServices.PropertyOrigin.Inherited)]
        public Microsoft.Azure.PowerShell.Cmdlets.LabServices.Support.EnableState? SecurityProfileOpenAccess { get => ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabUpdatePropertiesInternal)__labUpdateProperties).SecurityProfileOpenAccess; set => ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabUpdatePropertiesInternal)__labUpdateProperties).SecurityProfileOpenAccess = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Support.EnableState)""); }

        /// <summary>The registration code for the lab.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.LabServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.LabServices.PropertyOrigin.Inherited)]
        public string SecurityProfileRegistrationCode { get => ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabUpdatePropertiesInternal)__labUpdateProperties).SecurityProfileRegistrationCode; }

        /// <summary>
        /// If the SKU supports scale out/in then the capacity integer should be included. If scale out/in is not possible for the
        /// resource this may be omitted.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.LabServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.LabServices.PropertyOrigin.Inherited)]
        public int? SkuCapacity { get => ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabUpdatePropertiesInternal)__labUpdateProperties).SkuCapacity; set => ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabUpdatePropertiesInternal)__labUpdateProperties).SkuCapacity = value ?? default(int); }

        /// <summary>
        /// If the service has different generations of hardware, for the same SKU, then that can be captured here.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.LabServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.LabServices.PropertyOrigin.Inherited)]
        public string SkuFamily { get => ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabUpdatePropertiesInternal)__labUpdateProperties).SkuFamily; set => ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabUpdatePropertiesInternal)__labUpdateProperties).SkuFamily = value ?? null; }

        /// <summary>The name of the SKU. Ex - P3. It is typically a letter+number code</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.LabServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.LabServices.PropertyOrigin.Inherited)]
        public string SkuName { get => ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabUpdatePropertiesInternal)__labUpdateProperties).SkuName; set => ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabUpdatePropertiesInternal)__labUpdateProperties).SkuName = value ?? null; }

        /// <summary>
        /// The SKU size. When the name field is the combination of tier and some other value, this would be the standalone code.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.LabServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.LabServices.PropertyOrigin.Inherited)]
        public string SkuSize { get => ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabUpdatePropertiesInternal)__labUpdateProperties).SkuSize; set => ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabUpdatePropertiesInternal)__labUpdateProperties).SkuSize = value ?? null; }

        /// <summary>
        /// This field is required to be implemented by the Resource Provider if the service has more than one tier, but is not required
        /// on a PUT.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.LabServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.LabServices.PropertyOrigin.Inherited)]
        public Microsoft.Azure.PowerShell.Cmdlets.LabServices.Support.SkuTier? SkuTier { get => ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabUpdatePropertiesInternal)__labUpdateProperties).SkuTier; set => ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabUpdatePropertiesInternal)__labUpdateProperties).SkuTier = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Support.SkuTier)""); }

        /// <summary>Backing field for <see cref="State" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.LabServices.Support.LabState? _state;

        /// <summary>The lab state.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.LabServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.LabServices.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.LabServices.Support.LabState? State { get => this._state; }

        /// <summary>The title of the lab.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.LabServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.LabServices.PropertyOrigin.Inherited)]
        public string Title { get => ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabUpdatePropertiesInternal)__labUpdateProperties).Title; set => ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabUpdatePropertiesInternal)__labUpdateProperties).Title = value ?? null; }

        /// <summary>The profile used for creating lab virtual machines.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.LabServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.LabServices.PropertyOrigin.Inherited)]
        public Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.IVirtualMachineProfile VirtualMachineProfile { get => ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabUpdatePropertiesInternal)__labUpdateProperties).VirtualMachineProfile; set => ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabUpdatePropertiesInternal)__labUpdateProperties).VirtualMachineProfile = value ?? null /* model class */; }

        /// <summary>Additional VM capabilities.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.LabServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.LabServices.PropertyOrigin.Inherited)]
        public Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.IVirtualMachineAdditionalCapabilities VirtualMachineProfileAdditionalCapability { get => ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabUpdatePropertiesInternal)__labUpdateProperties).VirtualMachineProfileAdditionalCapability; set => ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabUpdatePropertiesInternal)__labUpdateProperties).VirtualMachineProfileAdditionalCapability = value ?? null /* model class */; }

        /// <summary>Credentials for the admin user on the VM.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.LabServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.LabServices.PropertyOrigin.Inherited)]
        public Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ICredentials VirtualMachineProfileAdminUser { get => ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabUpdatePropertiesInternal)__labUpdateProperties).VirtualMachineProfileAdminUser; set => ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabUpdatePropertiesInternal)__labUpdateProperties).VirtualMachineProfileAdminUser = value ?? null /* model class */; }

        /// <summary>Indicates what lab virtual machines are created from.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.LabServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.LabServices.PropertyOrigin.Inherited)]
        public Microsoft.Azure.PowerShell.Cmdlets.LabServices.Support.CreateOption? VirtualMachineProfileCreateOption { get => ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabUpdatePropertiesInternal)__labUpdateProperties).VirtualMachineProfileCreateOption; set => ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabUpdatePropertiesInternal)__labUpdateProperties).VirtualMachineProfileCreateOption = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Support.CreateOption)""); }

        /// <summary>The image configuration for lab virtual machines.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.LabServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.LabServices.PropertyOrigin.Inherited)]
        public Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.IImageReference VirtualMachineProfileImageReference { get => ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabUpdatePropertiesInternal)__labUpdateProperties).VirtualMachineProfileImageReference; set => ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabUpdatePropertiesInternal)__labUpdateProperties).VirtualMachineProfileImageReference = value ?? null /* model class */; }

        /// <summary>Credentials for the non-admin user on the VM, if one exists.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.LabServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.LabServices.PropertyOrigin.Inherited)]
        public Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ICredentials VirtualMachineProfileNonAdminUser { get => ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabUpdatePropertiesInternal)__labUpdateProperties).VirtualMachineProfileNonAdminUser; set => ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabUpdatePropertiesInternal)__labUpdateProperties).VirtualMachineProfileNonAdminUser = value ?? null /* model class */; }

        /// <summary>The OS type of the image</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.LabServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.LabServices.PropertyOrigin.Inherited)]
        public Microsoft.Azure.PowerShell.Cmdlets.LabServices.Support.OSType? VirtualMachineProfileOSType { get => ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabUpdatePropertiesInternal)__labUpdateProperties).VirtualMachineProfileOSType; }

        /// <summary>The SKU for the lab. Defines the type of virtual machines used in the lab.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.LabServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.LabServices.PropertyOrigin.Inherited)]
        public Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20.ISku VirtualMachineProfileSku { get => ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabUpdatePropertiesInternal)__labUpdateProperties).VirtualMachineProfileSku; set => ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabUpdatePropertiesInternal)__labUpdateProperties).VirtualMachineProfileSku = value ?? null /* model class */; }

        /// <summary>
        /// The initial quota alloted to each lab user. Must be a time span between 0 and 9999 hours.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.LabServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.LabServices.PropertyOrigin.Inherited)]
        public global::System.TimeSpan? VirtualMachineProfileUsageQuota { get => ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabUpdatePropertiesInternal)__labUpdateProperties).VirtualMachineProfileUsageQuota; set => ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabUpdatePropertiesInternal)__labUpdateProperties).VirtualMachineProfileUsageQuota = value ?? default(global::System.TimeSpan); }

        /// <summary>Enabling this option will use the same password for all user VMs.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.LabServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.LabServices.PropertyOrigin.Inherited)]
        public Microsoft.Azure.PowerShell.Cmdlets.LabServices.Support.EnableState? VirtualMachineProfileUseSharedPassword { get => ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabUpdatePropertiesInternal)__labUpdateProperties).VirtualMachineProfileUseSharedPassword; set => ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabUpdatePropertiesInternal)__labUpdateProperties).VirtualMachineProfileUseSharedPassword = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Support.EnableState)""); }

        /// <summary>Creates an new <see cref="LabProperties" /> instance.</summary>
        public LabProperties()
        {

        }

        /// <summary>Validates that this object meets the validation criteria.</summary>
        /// <param name="eventListener">an <see cref="Microsoft.Azure.PowerShell.Cmdlets.LabServices.Runtime.IEventListener" /> instance that will receive validation
        /// events.</param>
        /// <returns>
        /// A < see cref = "global::System.Threading.Tasks.Task" /> that will be complete when validation is completed.
        /// </returns>
        public async global::System.Threading.Tasks.Task Validate(Microsoft.Azure.PowerShell.Cmdlets.LabServices.Runtime.IEventListener eventListener)
        {
            await eventListener.AssertNotNull(nameof(__labUpdateProperties), __labUpdateProperties);
            await eventListener.AssertObjectIsValid(nameof(__labUpdateProperties), __labUpdateProperties);
        }
    }
    /// Properties of a lab resource.
    public partial interface ILabProperties :
        Microsoft.Azure.PowerShell.Cmdlets.LabServices.Runtime.IJsonSerializable,
        Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabUpdateProperties
    {
        /// <summary>The external load balancer resource id</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.LabServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The external load balancer resource id",
        SerializedName = @"loadBalancerId",
        PossibleTypes = new [] { typeof(string) })]
        string NetworkProfileLoadBalancerId { get; set; }
        /// <summary>The external public IP resource id</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.LabServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The external public IP resource id",
        SerializedName = @"publicIpId",
        PossibleTypes = new [] { typeof(string) })]
        string NetworkProfilePublicIPId { get; set; }
        /// <summary>The external subnet resource id</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.LabServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The external subnet resource id",
        SerializedName = @"subnetId",
        PossibleTypes = new [] { typeof(string) })]
        string NetworkProfileSubnetId { get; set; }
        /// <summary>Current provisioning state of the lab.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.LabServices.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Current provisioning state of the lab.",
        SerializedName = @"provisioningState",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.LabServices.Support.ProvisioningState) })]
        Microsoft.Azure.PowerShell.Cmdlets.LabServices.Support.ProvisioningState? ProvisioningState { get;  }
        /// <summary>The lab state.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.LabServices.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The lab state.",
        SerializedName = @"state",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.LabServices.Support.LabState) })]
        Microsoft.Azure.PowerShell.Cmdlets.LabServices.Support.LabState? State { get;  }

    }
    /// Properties of a lab resource.
    internal partial interface ILabPropertiesInternal :
        Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabUpdatePropertiesInternal
    {
        /// <summary>
        /// The network profile for the lab, typically applied via a lab plan. This profile cannot be modified once a lab has been
        /// created.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabNetworkProfile NetworkProfile { get; set; }
        /// <summary>The external load balancer resource id</summary>
        string NetworkProfileLoadBalancerId { get; set; }
        /// <summary>The external public IP resource id</summary>
        string NetworkProfilePublicIPId { get; set; }
        /// <summary>The external subnet resource id</summary>
        string NetworkProfileSubnetId { get; set; }
        /// <summary>Current provisioning state of the lab.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.LabServices.Support.ProvisioningState? ProvisioningState { get; set; }
        /// <summary>The lab state.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.LabServices.Support.LabState? State { get; set; }

    }
}