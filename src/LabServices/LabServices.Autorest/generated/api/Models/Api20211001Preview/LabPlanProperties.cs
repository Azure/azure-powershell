// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview
{
    using static Microsoft.Azure.PowerShell.Cmdlets.LabServices.Runtime.Extensions;

    /// <summary>Lab plan resource properties</summary>
    public partial class LabPlanProperties :
        Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabPlanProperties,
        Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabPlanPropertiesInternal,
        Microsoft.Azure.PowerShell.Cmdlets.LabServices.Runtime.IValidates
    {
        /// <summary>
        /// Backing field for Inherited model <see cref= "Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabPlanUpdateProperties"
        /// />
        /// </summary>
        private Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabPlanUpdateProperties __labPlanUpdateProperties = new Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.LabPlanUpdateProperties();

        /// <summary>
        /// The allowed regions for the lab creator to use when creating labs using this lab plan.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.LabServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.LabServices.PropertyOrigin.Inherited)]
        public string[] AllowedRegion { get => ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabPlanUpdatePropertiesInternal)__labPlanUpdateProperties).AllowedRegion; set => ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabPlanUpdatePropertiesInternal)__labPlanUpdateProperties).AllowedRegion = value ?? null /* arrayOf */; }

        /// <summary>
        /// The default lab shutdown profile. This can be changed on a lab resource and only provides a default profile.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.LabServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.LabServices.PropertyOrigin.Inherited)]
        public Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.IAutoShutdownProfile DefaultAutoShutdownProfile { get => ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabPlanUpdatePropertiesInternal)__labPlanUpdateProperties).DefaultAutoShutdownProfile; set => ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabPlanUpdatePropertiesInternal)__labPlanUpdateProperties).DefaultAutoShutdownProfile = value ?? null /* model class */; }

        /// <summary>
        /// The amount of time a VM will stay running after a user disconnects if this behavior is enabled.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.LabServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.LabServices.PropertyOrigin.Inherited)]
        public global::System.TimeSpan? DefaultAutoShutdownProfileDisconnectDelay { get => ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabPlanUpdatePropertiesInternal)__labPlanUpdateProperties).DefaultAutoShutdownProfileDisconnectDelay; set => ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabPlanUpdatePropertiesInternal)__labPlanUpdateProperties).DefaultAutoShutdownProfileDisconnectDelay = value ?? default(global::System.TimeSpan); }

        /// <summary>
        /// The amount of time a VM will idle before it is shutdown if this behavior is enabled.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.LabServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.LabServices.PropertyOrigin.Inherited)]
        public global::System.TimeSpan? DefaultAutoShutdownProfileIdleDelay { get => ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabPlanUpdatePropertiesInternal)__labPlanUpdateProperties).DefaultAutoShutdownProfileIdleDelay; set => ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabPlanUpdatePropertiesInternal)__labPlanUpdateProperties).DefaultAutoShutdownProfileIdleDelay = value ?? default(global::System.TimeSpan); }

        /// <summary>
        /// The amount of time a VM will stay running before it is shutdown if no connection is made and this behavior is enabled.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.LabServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.LabServices.PropertyOrigin.Inherited)]
        public global::System.TimeSpan? DefaultAutoShutdownProfileNoConnectDelay { get => ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabPlanUpdatePropertiesInternal)__labPlanUpdateProperties).DefaultAutoShutdownProfileNoConnectDelay; set => ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabPlanUpdatePropertiesInternal)__labPlanUpdateProperties).DefaultAutoShutdownProfileNoConnectDelay = value ?? default(global::System.TimeSpan); }

        /// <summary>Whether shutdown on disconnect is enabled</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.LabServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.LabServices.PropertyOrigin.Inherited)]
        public Microsoft.Azure.PowerShell.Cmdlets.LabServices.Support.EnableState? DefaultAutoShutdownProfileShutdownOnDisconnect { get => ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabPlanUpdatePropertiesInternal)__labPlanUpdateProperties).DefaultAutoShutdownProfileShutdownOnDisconnect; set => ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabPlanUpdatePropertiesInternal)__labPlanUpdateProperties).DefaultAutoShutdownProfileShutdownOnDisconnect = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Support.EnableState)""); }

        /// <summary>Whether a VM will get shutdown when it has idled for a period of time.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.LabServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.LabServices.PropertyOrigin.Inherited)]
        public Microsoft.Azure.PowerShell.Cmdlets.LabServices.Support.ShutdownOnIdleMode? DefaultAutoShutdownProfileShutdownOnIdle { get => ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabPlanUpdatePropertiesInternal)__labPlanUpdateProperties).DefaultAutoShutdownProfileShutdownOnIdle; set => ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabPlanUpdatePropertiesInternal)__labPlanUpdateProperties).DefaultAutoShutdownProfileShutdownOnIdle = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Support.ShutdownOnIdleMode)""); }

        /// <summary>
        /// Whether a VM will get shutdown when it hasn't been connected to after a period of time.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.LabServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.LabServices.PropertyOrigin.Inherited)]
        public Microsoft.Azure.PowerShell.Cmdlets.LabServices.Support.EnableState? DefaultAutoShutdownProfileShutdownWhenNotConnected { get => ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabPlanUpdatePropertiesInternal)__labPlanUpdateProperties).DefaultAutoShutdownProfileShutdownWhenNotConnected; set => ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabPlanUpdatePropertiesInternal)__labPlanUpdateProperties).DefaultAutoShutdownProfileShutdownWhenNotConnected = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Support.EnableState)""); }

        /// <summary>
        /// The default lab connection profile. This can be changed on a lab resource and only provides a default profile.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.LabServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.LabServices.PropertyOrigin.Inherited)]
        public Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.IConnectionProfile DefaultConnectionProfile { get => ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabPlanUpdatePropertiesInternal)__labPlanUpdateProperties).DefaultConnectionProfile; set => ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabPlanUpdatePropertiesInternal)__labPlanUpdateProperties).DefaultConnectionProfile = value ?? null /* model class */; }

        /// <summary>The enabled access level for Client Access over RDP.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.LabServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.LabServices.PropertyOrigin.Inherited)]
        public Microsoft.Azure.PowerShell.Cmdlets.LabServices.Support.ConnectionType? DefaultConnectionProfileClientRdpAccess { get => ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabPlanUpdatePropertiesInternal)__labPlanUpdateProperties).DefaultConnectionProfileClientRdpAccess; set => ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabPlanUpdatePropertiesInternal)__labPlanUpdateProperties).DefaultConnectionProfileClientRdpAccess = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Support.ConnectionType)""); }

        /// <summary>The enabled access level for Client Access over SSH.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.LabServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.LabServices.PropertyOrigin.Inherited)]
        public Microsoft.Azure.PowerShell.Cmdlets.LabServices.Support.ConnectionType? DefaultConnectionProfileClientSshAccess { get => ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabPlanUpdatePropertiesInternal)__labPlanUpdateProperties).DefaultConnectionProfileClientSshAccess; set => ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabPlanUpdatePropertiesInternal)__labPlanUpdateProperties).DefaultConnectionProfileClientSshAccess = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Support.ConnectionType)""); }

        /// <summary>The enabled access level for Web Access over RDP.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.LabServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.LabServices.PropertyOrigin.Inherited)]
        public Microsoft.Azure.PowerShell.Cmdlets.LabServices.Support.ConnectionType? DefaultConnectionProfileWebRdpAccess { get => ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabPlanUpdatePropertiesInternal)__labPlanUpdateProperties).DefaultConnectionProfileWebRdpAccess; set => ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabPlanUpdatePropertiesInternal)__labPlanUpdateProperties).DefaultConnectionProfileWebRdpAccess = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Support.ConnectionType)""); }

        /// <summary>The enabled access level for Web Access over SSH.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.LabServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.LabServices.PropertyOrigin.Inherited)]
        public Microsoft.Azure.PowerShell.Cmdlets.LabServices.Support.ConnectionType? DefaultConnectionProfileWebSshAccess { get => ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabPlanUpdatePropertiesInternal)__labPlanUpdateProperties).DefaultConnectionProfileWebSshAccess; set => ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabPlanUpdatePropertiesInternal)__labPlanUpdateProperties).DefaultConnectionProfileWebSshAccess = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Support.ConnectionType)""); }

        /// <summary>
        /// The lab plan network profile. To enforce lab network policies they must be defined here and cannot be changed when there
        /// are existing labs associated with this lab plan.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.LabServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.LabServices.PropertyOrigin.Inherited)]
        public Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabPlanNetworkProfile DefaultNetworkProfile { get => ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabPlanUpdatePropertiesInternal)__labPlanUpdateProperties).DefaultNetworkProfile; set => ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabPlanUpdatePropertiesInternal)__labPlanUpdateProperties).DefaultNetworkProfile = value ?? null /* model class */; }

        /// <summary>The external subnet resource id</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.LabServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.LabServices.PropertyOrigin.Inherited)]
        public string DefaultNetworkProfileSubnetId { get => ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabPlanUpdatePropertiesInternal)__labPlanUpdateProperties).DefaultNetworkProfileSubnetId; set => ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabPlanUpdatePropertiesInternal)__labPlanUpdateProperties).DefaultNetworkProfileSubnetId = value ?? null; }

        /// <summary>Base Url of the lms instance this lab plan can link lab rosters against.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.LabServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.LabServices.PropertyOrigin.Inherited)]
        public string LinkedLmsInstance { get => ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabPlanUpdatePropertiesInternal)__labPlanUpdateProperties).LinkedLmsInstance; set => ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabPlanUpdatePropertiesInternal)__labPlanUpdateProperties).LinkedLmsInstance = value ?? null; }

        /// <summary>Internal Acessors for ProvisioningState</summary>
        Microsoft.Azure.PowerShell.Cmdlets.LabServices.Support.ProvisioningState? Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabPlanPropertiesInternal.ProvisioningState { get => this._provisioningState; set { {_provisioningState = value;} } }

        /// <summary>Backing field for <see cref="ProvisioningState" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.LabServices.Support.ProvisioningState? _provisioningState;

        /// <summary>Current provisioning state of the lab plan.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.LabServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.LabServices.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.LabServices.Support.ProvisioningState? ProvisioningState { get => this._provisioningState; }

        /// <summary>
        /// Resource ID of the Shared Image Gallery attached to this lab plan. When saving a lab template virtual machine image it
        /// will be persisted in this gallery. Shared images from the gallery can be made available to use when creating new labs.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.LabServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.LabServices.PropertyOrigin.Inherited)]
        public string SharedGalleryId { get => ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabPlanUpdatePropertiesInternal)__labPlanUpdateProperties).SharedGalleryId; set => ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabPlanUpdatePropertiesInternal)__labPlanUpdateProperties).SharedGalleryId = value ?? null; }

        /// <summary>
        /// Support contact information and instructions for users of the lab plan. This information is displayed to lab owners and
        /// virtual machine users for all labs in the lab plan.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.LabServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.LabServices.PropertyOrigin.Inherited)]
        public Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ISupportInfo SupportInfo { get => ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabPlanUpdatePropertiesInternal)__labPlanUpdateProperties).SupportInfo; set => ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabPlanUpdatePropertiesInternal)__labPlanUpdateProperties).SupportInfo = value ?? null /* model class */; }

        /// <summary>Support contact email address.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.LabServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.LabServices.PropertyOrigin.Inherited)]
        public string SupportInfoEmail { get => ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabPlanUpdatePropertiesInternal)__labPlanUpdateProperties).SupportInfoEmail; set => ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabPlanUpdatePropertiesInternal)__labPlanUpdateProperties).SupportInfoEmail = value ?? null; }

        /// <summary>Support instructions.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.LabServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.LabServices.PropertyOrigin.Inherited)]
        public string SupportInfoInstruction { get => ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabPlanUpdatePropertiesInternal)__labPlanUpdateProperties).SupportInfoInstruction; set => ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabPlanUpdatePropertiesInternal)__labPlanUpdateProperties).SupportInfoInstruction = value ?? null; }

        /// <summary>Support contact phone number.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.LabServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.LabServices.PropertyOrigin.Inherited)]
        public string SupportInfoPhone { get => ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabPlanUpdatePropertiesInternal)__labPlanUpdateProperties).SupportInfoPhone; set => ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabPlanUpdatePropertiesInternal)__labPlanUpdateProperties).SupportInfoPhone = value ?? null; }

        /// <summary>Support web address.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.LabServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.LabServices.PropertyOrigin.Inherited)]
        public string SupportInfoUrl { get => ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabPlanUpdatePropertiesInternal)__labPlanUpdateProperties).SupportInfoUrl; set => ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabPlanUpdatePropertiesInternal)__labPlanUpdateProperties).SupportInfoUrl = value ?? null; }

        /// <summary>Creates an new <see cref="LabPlanProperties" /> instance.</summary>
        public LabPlanProperties()
        {

        }

        /// <summary>Validates that this object meets the validation criteria.</summary>
        /// <param name="eventListener">an <see cref="Microsoft.Azure.PowerShell.Cmdlets.LabServices.Runtime.IEventListener" /> instance that will receive validation
        /// events.</param>
        /// <returns>
        /// A < see cref = "global::System.Threading.Tasks.Task" /> that will be complete when validation is completed.
        /// </returns>
        public async global::System.Threading.Tasks.Task Validate(Microsoft.Azure.PowerShell.Cmdlets.LabServices.Runtime.IEventListener eventListener)
        {
            await eventListener.AssertNotNull(nameof(__labPlanUpdateProperties), __labPlanUpdateProperties);
            await eventListener.AssertObjectIsValid(nameof(__labPlanUpdateProperties), __labPlanUpdateProperties);
        }
    }
    /// Lab plan resource properties
    public partial interface ILabPlanProperties :
        Microsoft.Azure.PowerShell.Cmdlets.LabServices.Runtime.IJsonSerializable,
        Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabPlanUpdateProperties
    {
        /// <summary>Current provisioning state of the lab plan.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.LabServices.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Current provisioning state of the lab plan.",
        SerializedName = @"provisioningState",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.LabServices.Support.ProvisioningState) })]
        Microsoft.Azure.PowerShell.Cmdlets.LabServices.Support.ProvisioningState? ProvisioningState { get;  }

    }
    /// Lab plan resource properties
    internal partial interface ILabPlanPropertiesInternal :
        Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ILabPlanUpdatePropertiesInternal
    {
        /// <summary>Current provisioning state of the lab plan.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.LabServices.Support.ProvisioningState? ProvisioningState { get; set; }

    }
}