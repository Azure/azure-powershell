// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview
{
    using Microsoft.Azure.PowerShell.Cmdlets.LabServices.Runtime.PowerShell;

    /// <summary>Properties of an image resource.</summary>
    [System.ComponentModel.TypeConverter(typeof(ImagePropertiesTypeConverter))]
    public partial class ImageProperties
    {

        /// <summary>
        /// <c>AfterDeserializeDictionary</c> will be called after the deserialization has finished, allowing customization of the
        /// object before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>

        partial void AfterDeserializeDictionary(global::System.Collections.IDictionary content);

        /// <summary>
        /// <c>AfterDeserializePSObject</c> will be called after the deserialization has finished, allowing customization of the object
        /// before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>

        partial void AfterDeserializePSObject(global::System.Management.Automation.PSObject content);

        /// <summary>
        /// <c>BeforeDeserializeDictionary</c> will be called before the deserialization has commenced, allowing complete customization
        /// of the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <see "returnNow" /> output parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeDeserializeDictionary(global::System.Collections.IDictionary content, ref bool returnNow);

        /// <summary>
        /// <c>BeforeDeserializePSObject</c> will be called before the deserialization has commenced, allowing complete customization
        /// of the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <see "returnNow" /> output parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeDeserializePSObject(global::System.Management.Automation.PSObject content, ref bool returnNow);

        /// <summary>
        /// Deserializes a <see cref="global::System.Collections.IDictionary" /> into an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ImageProperties"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        /// <returns>
        /// an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.IImageProperties" />.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.IImageProperties DeserializeFromDictionary(global::System.Collections.IDictionary content)
        {
            return new ImageProperties(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Management.Automation.PSObject" /> into an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ImageProperties"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        /// <returns>
        /// an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.IImageProperties" />.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.IImageProperties DeserializeFromPSObject(global::System.Management.Automation.PSObject content)
        {
            return new ImageProperties(content);
        }

        /// <summary>
        /// Creates a new instance of <see cref="ImageProperties" />, deserializing the content from a json string.
        /// </summary>
        /// <param name="jsonText">a string containing a JSON serialized instance of this model.</param>
        /// <returns>an instance of the <see cref="className" /> model class.</returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.IImageProperties FromJsonString(string jsonText) => FromJson(Microsoft.Azure.PowerShell.Cmdlets.LabServices.Runtime.Json.JsonNode.Parse(jsonText));

        /// <summary>
        /// Deserializes a <see cref="global::System.Collections.IDictionary" /> into a new instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ImageProperties"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        internal ImageProperties(global::System.Collections.IDictionary content)
        {
            bool returnNow = false;
            BeforeDeserializeDictionary(content, ref returnNow);
            if (returnNow)
            {
                return;
            }
            // actually deserialize
            if (content.Contains("ProvisioningState"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.IImagePropertiesInternal)this).ProvisioningState = (Microsoft.Azure.PowerShell.Cmdlets.LabServices.Support.ProvisioningState?) content.GetValueForProperty("ProvisioningState",((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.IImagePropertiesInternal)this).ProvisioningState, Microsoft.Azure.PowerShell.Cmdlets.LabServices.Support.ProvisioningState.CreateFrom);
            }
            if (content.Contains("DisplayName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.IImagePropertiesInternal)this).DisplayName = (string) content.GetValueForProperty("DisplayName",((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.IImagePropertiesInternal)this).DisplayName, global::System.Convert.ToString);
            }
            if (content.Contains("Description"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.IImagePropertiesInternal)this).Description = (string) content.GetValueForProperty("Description",((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.IImagePropertiesInternal)this).Description, global::System.Convert.ToString);
            }
            if (content.Contains("IconUrl"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.IImagePropertiesInternal)this).IconUrl = (string) content.GetValueForProperty("IconUrl",((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.IImagePropertiesInternal)this).IconUrl, global::System.Convert.ToString);
            }
            if (content.Contains("Author"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.IImagePropertiesInternal)this).Author = (string) content.GetValueForProperty("Author",((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.IImagePropertiesInternal)this).Author, global::System.Convert.ToString);
            }
            if (content.Contains("OSType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.IImagePropertiesInternal)this).OSType = (Microsoft.Azure.PowerShell.Cmdlets.LabServices.Support.OSType?) content.GetValueForProperty("OSType",((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.IImagePropertiesInternal)this).OSType, Microsoft.Azure.PowerShell.Cmdlets.LabServices.Support.OSType.CreateFrom);
            }
            if (content.Contains("Plan"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.IImagePropertiesInternal)this).Plan = (string) content.GetValueForProperty("Plan",((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.IImagePropertiesInternal)this).Plan, global::System.Convert.ToString);
            }
            if (content.Contains("TermsStatus"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.IImagePropertiesInternal)this).TermsStatus = (Microsoft.Azure.PowerShell.Cmdlets.LabServices.Support.EnableState?) content.GetValueForProperty("TermsStatus",((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.IImagePropertiesInternal)this).TermsStatus, Microsoft.Azure.PowerShell.Cmdlets.LabServices.Support.EnableState.CreateFrom);
            }
            if (content.Contains("Offer"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.IImagePropertiesInternal)this).Offer = (string) content.GetValueForProperty("Offer",((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.IImagePropertiesInternal)this).Offer, global::System.Convert.ToString);
            }
            if (content.Contains("Publisher"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.IImagePropertiesInternal)this).Publisher = (string) content.GetValueForProperty("Publisher",((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.IImagePropertiesInternal)this).Publisher, global::System.Convert.ToString);
            }
            if (content.Contains("Sku"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.IImagePropertiesInternal)this).Sku = (string) content.GetValueForProperty("Sku",((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.IImagePropertiesInternal)this).Sku, global::System.Convert.ToString);
            }
            if (content.Contains("Version"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.IImagePropertiesInternal)this).Version = (string) content.GetValueForProperty("Version",((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.IImagePropertiesInternal)this).Version, global::System.Convert.ToString);
            }
            if (content.Contains("SharedGalleryId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.IImagePropertiesInternal)this).SharedGalleryId = (string) content.GetValueForProperty("SharedGalleryId",((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.IImagePropertiesInternal)this).SharedGalleryId, global::System.Convert.ToString);
            }
            if (content.Contains("AvailableRegion"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.IImagePropertiesInternal)this).AvailableRegion = (string[]) content.GetValueForProperty("AvailableRegion",((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.IImagePropertiesInternal)this).AvailableRegion, __y => TypeConverterExtensions.SelectToArray<string>(__y, global::System.Convert.ToString));
            }
            if (content.Contains("OSState"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.IImagePropertiesInternal)this).OSState = (Microsoft.Azure.PowerShell.Cmdlets.LabServices.Support.OSState?) content.GetValueForProperty("OSState",((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.IImagePropertiesInternal)this).OSState, Microsoft.Azure.PowerShell.Cmdlets.LabServices.Support.OSState.CreateFrom);
            }
            if (content.Contains("EnabledState"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.IImageUpdatePropertiesInternal)this).EnabledState = (Microsoft.Azure.PowerShell.Cmdlets.LabServices.Support.EnableState?) content.GetValueForProperty("EnabledState",((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.IImageUpdatePropertiesInternal)this).EnabledState, Microsoft.Azure.PowerShell.Cmdlets.LabServices.Support.EnableState.CreateFrom);
            }
            AfterDeserializeDictionary(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Management.Automation.PSObject" /> into a new instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ImageProperties"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        internal ImageProperties(global::System.Management.Automation.PSObject content)
        {
            bool returnNow = false;
            BeforeDeserializePSObject(content, ref returnNow);
            if (returnNow)
            {
                return;
            }
            // actually deserialize
            if (content.Contains("ProvisioningState"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.IImagePropertiesInternal)this).ProvisioningState = (Microsoft.Azure.PowerShell.Cmdlets.LabServices.Support.ProvisioningState?) content.GetValueForProperty("ProvisioningState",((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.IImagePropertiesInternal)this).ProvisioningState, Microsoft.Azure.PowerShell.Cmdlets.LabServices.Support.ProvisioningState.CreateFrom);
            }
            if (content.Contains("DisplayName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.IImagePropertiesInternal)this).DisplayName = (string) content.GetValueForProperty("DisplayName",((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.IImagePropertiesInternal)this).DisplayName, global::System.Convert.ToString);
            }
            if (content.Contains("Description"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.IImagePropertiesInternal)this).Description = (string) content.GetValueForProperty("Description",((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.IImagePropertiesInternal)this).Description, global::System.Convert.ToString);
            }
            if (content.Contains("IconUrl"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.IImagePropertiesInternal)this).IconUrl = (string) content.GetValueForProperty("IconUrl",((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.IImagePropertiesInternal)this).IconUrl, global::System.Convert.ToString);
            }
            if (content.Contains("Author"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.IImagePropertiesInternal)this).Author = (string) content.GetValueForProperty("Author",((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.IImagePropertiesInternal)this).Author, global::System.Convert.ToString);
            }
            if (content.Contains("OSType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.IImagePropertiesInternal)this).OSType = (Microsoft.Azure.PowerShell.Cmdlets.LabServices.Support.OSType?) content.GetValueForProperty("OSType",((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.IImagePropertiesInternal)this).OSType, Microsoft.Azure.PowerShell.Cmdlets.LabServices.Support.OSType.CreateFrom);
            }
            if (content.Contains("Plan"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.IImagePropertiesInternal)this).Plan = (string) content.GetValueForProperty("Plan",((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.IImagePropertiesInternal)this).Plan, global::System.Convert.ToString);
            }
            if (content.Contains("TermsStatus"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.IImagePropertiesInternal)this).TermsStatus = (Microsoft.Azure.PowerShell.Cmdlets.LabServices.Support.EnableState?) content.GetValueForProperty("TermsStatus",((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.IImagePropertiesInternal)this).TermsStatus, Microsoft.Azure.PowerShell.Cmdlets.LabServices.Support.EnableState.CreateFrom);
            }
            if (content.Contains("Offer"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.IImagePropertiesInternal)this).Offer = (string) content.GetValueForProperty("Offer",((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.IImagePropertiesInternal)this).Offer, global::System.Convert.ToString);
            }
            if (content.Contains("Publisher"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.IImagePropertiesInternal)this).Publisher = (string) content.GetValueForProperty("Publisher",((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.IImagePropertiesInternal)this).Publisher, global::System.Convert.ToString);
            }
            if (content.Contains("Sku"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.IImagePropertiesInternal)this).Sku = (string) content.GetValueForProperty("Sku",((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.IImagePropertiesInternal)this).Sku, global::System.Convert.ToString);
            }
            if (content.Contains("Version"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.IImagePropertiesInternal)this).Version = (string) content.GetValueForProperty("Version",((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.IImagePropertiesInternal)this).Version, global::System.Convert.ToString);
            }
            if (content.Contains("SharedGalleryId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.IImagePropertiesInternal)this).SharedGalleryId = (string) content.GetValueForProperty("SharedGalleryId",((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.IImagePropertiesInternal)this).SharedGalleryId, global::System.Convert.ToString);
            }
            if (content.Contains("AvailableRegion"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.IImagePropertiesInternal)this).AvailableRegion = (string[]) content.GetValueForProperty("AvailableRegion",((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.IImagePropertiesInternal)this).AvailableRegion, __y => TypeConverterExtensions.SelectToArray<string>(__y, global::System.Convert.ToString));
            }
            if (content.Contains("OSState"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.IImagePropertiesInternal)this).OSState = (Microsoft.Azure.PowerShell.Cmdlets.LabServices.Support.OSState?) content.GetValueForProperty("OSState",((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.IImagePropertiesInternal)this).OSState, Microsoft.Azure.PowerShell.Cmdlets.LabServices.Support.OSState.CreateFrom);
            }
            if (content.Contains("EnabledState"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.IImageUpdatePropertiesInternal)this).EnabledState = (Microsoft.Azure.PowerShell.Cmdlets.LabServices.Support.EnableState?) content.GetValueForProperty("EnabledState",((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.IImageUpdatePropertiesInternal)this).EnabledState, Microsoft.Azure.PowerShell.Cmdlets.LabServices.Support.EnableState.CreateFrom);
            }
            AfterDeserializePSObject(content);
        }

        /// <summary>Serializes this instance to a json string.</summary>

        /// <returns>a <see cref="System.String" /> containing this model serialized to JSON text.</returns>
        public string ToJsonString() => ToJson(null, Microsoft.Azure.PowerShell.Cmdlets.LabServices.Runtime.SerializationMode.IncludeAll)?.ToString();
    }
    /// Properties of an image resource.
    [System.ComponentModel.TypeConverter(typeof(ImagePropertiesTypeConverter))]
    public partial interface IImageProperties

    {

    }
}