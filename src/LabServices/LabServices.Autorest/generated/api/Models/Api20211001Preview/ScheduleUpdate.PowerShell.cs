// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview
{
    using Microsoft.Azure.PowerShell.Cmdlets.LabServices.Runtime.PowerShell;

    /// <summary>
    /// Schedule for automatically turning virtual machines in a lab on and off at specified times. Used for updates.
    /// </summary>
    [System.ComponentModel.TypeConverter(typeof(ScheduleUpdateTypeConverter))]
    public partial class ScheduleUpdate
    {

        /// <summary>
        /// <c>AfterDeserializeDictionary</c> will be called after the deserialization has finished, allowing customization of the
        /// object before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>

        partial void AfterDeserializeDictionary(global::System.Collections.IDictionary content);

        /// <summary>
        /// <c>AfterDeserializePSObject</c> will be called after the deserialization has finished, allowing customization of the object
        /// before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>

        partial void AfterDeserializePSObject(global::System.Management.Automation.PSObject content);

        /// <summary>
        /// <c>BeforeDeserializeDictionary</c> will be called before the deserialization has commenced, allowing complete customization
        /// of the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <see "returnNow" /> output parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeDeserializeDictionary(global::System.Collections.IDictionary content, ref bool returnNow);

        /// <summary>
        /// <c>BeforeDeserializePSObject</c> will be called before the deserialization has commenced, allowing complete customization
        /// of the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <see "returnNow" /> output parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeDeserializePSObject(global::System.Management.Automation.PSObject content, ref bool returnNow);

        /// <summary>
        /// Deserializes a <see cref="global::System.Collections.IDictionary" /> into an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ScheduleUpdate"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        /// <returns>
        /// an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.IScheduleUpdate" />.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.IScheduleUpdate DeserializeFromDictionary(global::System.Collections.IDictionary content)
        {
            return new ScheduleUpdate(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Management.Automation.PSObject" /> into an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ScheduleUpdate"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        /// <returns>
        /// an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.IScheduleUpdate" />.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.IScheduleUpdate DeserializeFromPSObject(global::System.Management.Automation.PSObject content)
        {
            return new ScheduleUpdate(content);
        }

        /// <summary>
        /// Creates a new instance of <see cref="ScheduleUpdate" />, deserializing the content from a json string.
        /// </summary>
        /// <param name="jsonText">a string containing a JSON serialized instance of this model.</param>
        /// <returns>an instance of the <see cref="className" /> model class.</returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.IScheduleUpdate FromJsonString(string jsonText) => FromJson(Microsoft.Azure.PowerShell.Cmdlets.LabServices.Runtime.Json.JsonNode.Parse(jsonText));

        /// <summary>
        /// Deserializes a <see cref="global::System.Collections.IDictionary" /> into a new instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ScheduleUpdate"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        internal ScheduleUpdate(global::System.Collections.IDictionary content)
        {
            bool returnNow = false;
            BeforeDeserializeDictionary(content, ref returnNow);
            if (returnNow)
            {
                return;
            }
            // actually deserialize
            if (content.Contains("Property"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.IScheduleUpdateInternal)this).Property = (Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.IScheduleUpdateProperties) content.GetValueForProperty("Property",((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.IScheduleUpdateInternal)this).Property, Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ScheduleUpdatePropertiesTypeConverter.ConvertFrom);
            }
            if (content.Contains("RecurrencePattern"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.IScheduleUpdateInternal)this).RecurrencePattern = (Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.IRecurrencePattern) content.GetValueForProperty("RecurrencePattern",((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.IScheduleUpdateInternal)this).RecurrencePattern, Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.RecurrencePatternTypeConverter.ConvertFrom);
            }
            if (content.Contains("StartAt"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.IScheduleUpdateInternal)this).StartAt = (global::System.DateTime?) content.GetValueForProperty("StartAt",((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.IScheduleUpdateInternal)this).StartAt, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            if (content.Contains("StopAt"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.IScheduleUpdateInternal)this).StopAt = (global::System.DateTime?) content.GetValueForProperty("StopAt",((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.IScheduleUpdateInternal)this).StopAt, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            if (content.Contains("TimeZoneId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.IScheduleUpdateInternal)this).TimeZoneId = (string) content.GetValueForProperty("TimeZoneId",((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.IScheduleUpdateInternal)this).TimeZoneId, global::System.Convert.ToString);
            }
            if (content.Contains("Note"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.IScheduleUpdateInternal)this).Note = (string) content.GetValueForProperty("Note",((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.IScheduleUpdateInternal)this).Note, global::System.Convert.ToString);
            }
            if (content.Contains("RecurrencePatternWeekDay"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.IScheduleUpdateInternal)this).RecurrencePatternWeekDay = (Microsoft.Azure.PowerShell.Cmdlets.LabServices.Support.WeekDay[]) content.GetValueForProperty("RecurrencePatternWeekDay",((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.IScheduleUpdateInternal)this).RecurrencePatternWeekDay, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.LabServices.Support.WeekDay>(__y, Microsoft.Azure.PowerShell.Cmdlets.LabServices.Support.WeekDay.CreateFrom));
            }
            if (content.Contains("RecurrencePatternInterval"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.IScheduleUpdateInternal)this).RecurrencePatternInterval = (int?) content.GetValueForProperty("RecurrencePatternInterval",((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.IScheduleUpdateInternal)this).RecurrencePatternInterval, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("RecurrencePatternExpirationDate"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.IScheduleUpdateInternal)this).RecurrencePatternExpirationDate = (global::System.DateTime) content.GetValueForProperty("RecurrencePatternExpirationDate",((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.IScheduleUpdateInternal)this).RecurrencePatternExpirationDate, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            if (content.Contains("RecurrencePatternFrequency"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.IScheduleUpdateInternal)this).RecurrencePatternFrequency = (Microsoft.Azure.PowerShell.Cmdlets.LabServices.Support.RecurrenceFrequency) content.GetValueForProperty("RecurrencePatternFrequency",((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.IScheduleUpdateInternal)this).RecurrencePatternFrequency, Microsoft.Azure.PowerShell.Cmdlets.LabServices.Support.RecurrenceFrequency.CreateFrom);
            }
            AfterDeserializeDictionary(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Management.Automation.PSObject" /> into a new instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ScheduleUpdate"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        internal ScheduleUpdate(global::System.Management.Automation.PSObject content)
        {
            bool returnNow = false;
            BeforeDeserializePSObject(content, ref returnNow);
            if (returnNow)
            {
                return;
            }
            // actually deserialize
            if (content.Contains("Property"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.IScheduleUpdateInternal)this).Property = (Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.IScheduleUpdateProperties) content.GetValueForProperty("Property",((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.IScheduleUpdateInternal)this).Property, Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.ScheduleUpdatePropertiesTypeConverter.ConvertFrom);
            }
            if (content.Contains("RecurrencePattern"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.IScheduleUpdateInternal)this).RecurrencePattern = (Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.IRecurrencePattern) content.GetValueForProperty("RecurrencePattern",((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.IScheduleUpdateInternal)this).RecurrencePattern, Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.RecurrencePatternTypeConverter.ConvertFrom);
            }
            if (content.Contains("StartAt"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.IScheduleUpdateInternal)this).StartAt = (global::System.DateTime?) content.GetValueForProperty("StartAt",((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.IScheduleUpdateInternal)this).StartAt, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            if (content.Contains("StopAt"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.IScheduleUpdateInternal)this).StopAt = (global::System.DateTime?) content.GetValueForProperty("StopAt",((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.IScheduleUpdateInternal)this).StopAt, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            if (content.Contains("TimeZoneId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.IScheduleUpdateInternal)this).TimeZoneId = (string) content.GetValueForProperty("TimeZoneId",((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.IScheduleUpdateInternal)this).TimeZoneId, global::System.Convert.ToString);
            }
            if (content.Contains("Note"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.IScheduleUpdateInternal)this).Note = (string) content.GetValueForProperty("Note",((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.IScheduleUpdateInternal)this).Note, global::System.Convert.ToString);
            }
            if (content.Contains("RecurrencePatternWeekDay"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.IScheduleUpdateInternal)this).RecurrencePatternWeekDay = (Microsoft.Azure.PowerShell.Cmdlets.LabServices.Support.WeekDay[]) content.GetValueForProperty("RecurrencePatternWeekDay",((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.IScheduleUpdateInternal)this).RecurrencePatternWeekDay, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.LabServices.Support.WeekDay>(__y, Microsoft.Azure.PowerShell.Cmdlets.LabServices.Support.WeekDay.CreateFrom));
            }
            if (content.Contains("RecurrencePatternInterval"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.IScheduleUpdateInternal)this).RecurrencePatternInterval = (int?) content.GetValueForProperty("RecurrencePatternInterval",((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.IScheduleUpdateInternal)this).RecurrencePatternInterval, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("RecurrencePatternExpirationDate"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.IScheduleUpdateInternal)this).RecurrencePatternExpirationDate = (global::System.DateTime) content.GetValueForProperty("RecurrencePatternExpirationDate",((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.IScheduleUpdateInternal)this).RecurrencePatternExpirationDate, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            if (content.Contains("RecurrencePatternFrequency"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.IScheduleUpdateInternal)this).RecurrencePatternFrequency = (Microsoft.Azure.PowerShell.Cmdlets.LabServices.Support.RecurrenceFrequency) content.GetValueForProperty("RecurrencePatternFrequency",((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.Api20211001Preview.IScheduleUpdateInternal)this).RecurrencePatternFrequency, Microsoft.Azure.PowerShell.Cmdlets.LabServices.Support.RecurrenceFrequency.CreateFrom);
            }
            AfterDeserializePSObject(content);
        }

        /// <summary>Serializes this instance to a json string.</summary>

        /// <returns>a <see cref="System.String" /> containing this model serialized to JSON text.</returns>
        public string ToJsonString() => ToJson(null, Microsoft.Azure.PowerShell.Cmdlets.LabServices.Runtime.SerializationMode.IncludeAll)?.ToString();
    }
    /// Schedule for automatically turning virtual machines in a lab on and off at specified times. Used for updates.
    [System.ComponentModel.TypeConverter(typeof(ScheduleUpdateTypeConverter))]
    public partial interface IScheduleUpdate

    {

    }
}