// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Batch.Models
{
    using static Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.Extensions;

    public partial class NodesGetNodeFilePropertiesOkResponseHeaders :
        Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.INodesGetNodeFilePropertiesOkResponseHeaders,
        Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.INodesGetNodeFilePropertiesOkResponseHeadersInternal,
        Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.IHeaderSerializable
    {

        /// <summary>Backing field for <see cref="ClientRequestId" /> property.</summary>
        private string _clientRequestId;

        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Origin(Microsoft.Azure.PowerShell.Cmdlets.Batch.PropertyOrigin.Owned)]
        public string ClientRequestId { get => this._clientRequestId; set => this._clientRequestId = value; }

        /// <summary>Backing field for <see cref="ContentLength" /> property.</summary>
        private string _contentLength;

        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Origin(Microsoft.Azure.PowerShell.Cmdlets.Batch.PropertyOrigin.Owned)]
        public string ContentLength { get => this._contentLength; set => this._contentLength = value; }

        /// <summary>Backing field for <see cref="ETag" /> property.</summary>
        private string _eTag;

        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Origin(Microsoft.Azure.PowerShell.Cmdlets.Batch.PropertyOrigin.Owned)]
        public string ETag { get => this._eTag; set => this._eTag = value; }

        /// <summary>Backing field for <see cref="LastModified" /> property.</summary>
        private string _lastModified;

        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Origin(Microsoft.Azure.PowerShell.Cmdlets.Batch.PropertyOrigin.Owned)]
        public string LastModified { get => this._lastModified; set => this._lastModified = value; }

        /// <summary>Backing field for <see cref="OcpBatchFileIsdirectory" /> property.</summary>
        private bool? _ocpBatchFileIsdirectory;

        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Origin(Microsoft.Azure.PowerShell.Cmdlets.Batch.PropertyOrigin.Owned)]
        public bool? OcpBatchFileIsdirectory { get => this._ocpBatchFileIsdirectory; set => this._ocpBatchFileIsdirectory = value; }

        /// <summary>Backing field for <see cref="OcpBatchFileMode" /> property.</summary>
        private string _ocpBatchFileMode;

        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Origin(Microsoft.Azure.PowerShell.Cmdlets.Batch.PropertyOrigin.Owned)]
        public string OcpBatchFileMode { get => this._ocpBatchFileMode; set => this._ocpBatchFileMode = value; }

        /// <summary>Backing field for <see cref="OcpBatchFileUrl" /> property.</summary>
        private string _ocpBatchFileUrl;

        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Origin(Microsoft.Azure.PowerShell.Cmdlets.Batch.PropertyOrigin.Owned)]
        public string OcpBatchFileUrl { get => this._ocpBatchFileUrl; set => this._ocpBatchFileUrl = value; }

        /// <summary>Backing field for <see cref="OcpCreationTime" /> property.</summary>
        private string _ocpCreationTime;

        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Origin(Microsoft.Azure.PowerShell.Cmdlets.Batch.PropertyOrigin.Owned)]
        public string OcpCreationTime { get => this._ocpCreationTime; set => this._ocpCreationTime = value; }

        /// <summary>Backing field for <see cref="RequestId" /> property.</summary>
        private string _requestId;

        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Origin(Microsoft.Azure.PowerShell.Cmdlets.Batch.PropertyOrigin.Owned)]
        public string RequestId { get => this._requestId; set => this._requestId = value; }

        /// <param name="headers"></param>
        void Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.IHeaderSerializable.ReadHeaders(global::System.Net.Http.Headers.HttpResponseHeaders headers)
        {
            if (headers.TryGetValues("Content-Length", out var __contentLengthHeader0))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.INodesGetNodeFilePropertiesOkResponseHeadersInternal)this).ContentLength = System.Linq.Enumerable.FirstOrDefault(__contentLengthHeader0) is string __headerContentLengthHeader0 ? __headerContentLengthHeader0 : (string)null;
            }
            if (headers.TryGetValues("ETag", out var __eTagHeader1))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.INodesGetNodeFilePropertiesOkResponseHeadersInternal)this).ETag = System.Linq.Enumerable.FirstOrDefault(__eTagHeader1) is string __headerETagHeader1 ? __headerETagHeader1 : (string)null;
            }
            if (headers.TryGetValues("Last-Modified", out var __lastModifiedHeader2))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.INodesGetNodeFilePropertiesOkResponseHeadersInternal)this).LastModified = System.Linq.Enumerable.FirstOrDefault(__lastModifiedHeader2) is string __headerLastModifiedHeader2 ? __headerLastModifiedHeader2 : (string)null;
            }
            if (headers.TryGetValues("client-request-id", out var __clientRequestIdHeader3))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.INodesGetNodeFilePropertiesOkResponseHeadersInternal)this).ClientRequestId = System.Linq.Enumerable.FirstOrDefault(__clientRequestIdHeader3) is string __headerClientRequestIdHeader3 ? __headerClientRequestIdHeader3 : (string)null;
            }
            if (headers.TryGetValues("ocp-batch-file-isdirectory", out var __ocpBatchFileIsdirectoryHeader4))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.INodesGetNodeFilePropertiesOkResponseHeadersInternal)this).OcpBatchFileIsdirectory = System.Linq.Enumerable.FirstOrDefault(__ocpBatchFileIsdirectoryHeader4) is string __headerOcpBatchFileIsdirectoryHeader4 ? bool.TryParse( __headerOcpBatchFileIsdirectoryHeader4, out bool __headerOcpBatchFileIsdirectoryHeader4Value ) ? __headerOcpBatchFileIsdirectoryHeader4Value : default(bool?) : default(bool?);
            }
            if (headers.TryGetValues("ocp-batch-file-mode", out var __ocpBatchFileModeHeader5))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.INodesGetNodeFilePropertiesOkResponseHeadersInternal)this).OcpBatchFileMode = System.Linq.Enumerable.FirstOrDefault(__ocpBatchFileModeHeader5) is string __headerOcpBatchFileModeHeader5 ? __headerOcpBatchFileModeHeader5 : (string)null;
            }
            if (headers.TryGetValues("ocp-batch-file-url", out var __ocpBatchFileUrlHeader6))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.INodesGetNodeFilePropertiesOkResponseHeadersInternal)this).OcpBatchFileUrl = System.Linq.Enumerable.FirstOrDefault(__ocpBatchFileUrlHeader6) is string __headerOcpBatchFileUrlHeader6 ? __headerOcpBatchFileUrlHeader6 : (string)null;
            }
            if (headers.TryGetValues("ocp-creation-time", out var __ocpCreationTimeHeader7))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.INodesGetNodeFilePropertiesOkResponseHeadersInternal)this).OcpCreationTime = System.Linq.Enumerable.FirstOrDefault(__ocpCreationTimeHeader7) is string __headerOcpCreationTimeHeader7 ? __headerOcpCreationTimeHeader7 : (string)null;
            }
            if (headers.TryGetValues("request-id", out var __requestIdHeader8))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.INodesGetNodeFilePropertiesOkResponseHeadersInternal)this).RequestId = System.Linq.Enumerable.FirstOrDefault(__requestIdHeader8) is string __headerRequestIdHeader8 ? __headerRequestIdHeader8 : (string)null;
            }
        }

        /// <summary>
        /// Creates an new <see cref="NodesGetNodeFilePropertiesOkResponseHeaders" /> instance.
        /// </summary>
        public NodesGetNodeFilePropertiesOkResponseHeaders()
        {

        }
    }
    public partial interface INodesGetNodeFilePropertiesOkResponseHeaders

    {
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"",
        SerializedName = @"client-request-id",
        PossibleTypes = new [] { typeof(string) })]
        string ClientRequestId { get; set; }

        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"",
        SerializedName = @"Content-Length",
        PossibleTypes = new [] { typeof(string) })]
        string ContentLength { get; set; }

        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"",
        SerializedName = @"ETag",
        PossibleTypes = new [] { typeof(string) })]
        string ETag { get; set; }

        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"",
        SerializedName = @"Last-Modified",
        PossibleTypes = new [] { typeof(string) })]
        string LastModified { get; set; }

        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"",
        SerializedName = @"ocp-batch-file-isdirectory",
        PossibleTypes = new [] { typeof(bool) })]
        bool? OcpBatchFileIsdirectory { get; set; }

        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"",
        SerializedName = @"ocp-batch-file-mode",
        PossibleTypes = new [] { typeof(string) })]
        string OcpBatchFileMode { get; set; }

        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"",
        SerializedName = @"ocp-batch-file-url",
        PossibleTypes = new [] { typeof(string) })]
        string OcpBatchFileUrl { get; set; }

        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"",
        SerializedName = @"ocp-creation-time",
        PossibleTypes = new [] { typeof(string) })]
        string OcpCreationTime { get; set; }

        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"",
        SerializedName = @"request-id",
        PossibleTypes = new [] { typeof(string) })]
        string RequestId { get; set; }

    }
    internal partial interface INodesGetNodeFilePropertiesOkResponseHeadersInternal

    {
        string ClientRequestId { get; set; }

        string ContentLength { get; set; }

        string ETag { get; set; }

        string LastModified { get; set; }

        bool? OcpBatchFileIsdirectory { get; set; }

        string OcpBatchFileMode { get; set; }

        string OcpBatchFileUrl { get; set; }

        string OcpCreationTime { get; set; }

        string RequestId { get; set; }

    }
}