// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Batch.Models
{
    using static Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.Extensions;

    /// <summary>
    /// Specifies any dependencies of a Task. Any Task that is explicitly specified or
    /// within a dependency range must complete before the dependant Task will be
    /// scheduled.
    /// </summary>
    public partial class BatchTaskDependencies :
        Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchTaskDependencies,
        Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchTaskDependenciesInternal
    {

        /// <summary>Backing field for <see cref="TaskId" /> property.</summary>
        private System.Collections.Generic.List<string> _taskId;

        /// <summary>
        /// The list of Task IDs that this Task depends on. All Tasks in this list must complete successfully before the dependent
        /// Task can be scheduled. The taskIds collection is limited to 64000 characters total (i.e. the combined length of all Task
        /// IDs). If the taskIds collection exceeds the maximum length, the Add Task request fails with error code TaskDependencyListTooLong.
        /// In this case consider using Task ID ranges instead.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Origin(Microsoft.Azure.PowerShell.Cmdlets.Batch.PropertyOrigin.Owned)]
        public System.Collections.Generic.List<string> TaskId { get => this._taskId; set => this._taskId = value; }

        /// <summary>Backing field for <see cref="TaskIdRange" /> property.</summary>
        private System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchTaskIdRange> _taskIdRange;

        /// <summary>
        /// The list of Task ID ranges that this Task depends on. All Tasks in all ranges must complete successfully before the dependent
        /// Task can be scheduled.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Origin(Microsoft.Azure.PowerShell.Cmdlets.Batch.PropertyOrigin.Owned)]
        public System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchTaskIdRange> TaskIdRange { get => this._taskIdRange; set => this._taskIdRange = value; }

        /// <summary>Creates an new <see cref="BatchTaskDependencies" /> instance.</summary>
        public BatchTaskDependencies()
        {

        }
    }
    /// Specifies any dependencies of a Task. Any Task that is explicitly specified or
    /// within a dependency range must complete before the dependant Task will be
    /// scheduled.
    public partial interface IBatchTaskDependencies :
        Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.IJsonSerializable
    {
        /// <summary>
        /// The list of Task IDs that this Task depends on. All Tasks in this list must complete successfully before the dependent
        /// Task can be scheduled. The taskIds collection is limited to 64000 characters total (i.e. the combined length of all Task
        /// IDs). If the taskIds collection exceeds the maximum length, the Add Task request fails with error code TaskDependencyListTooLong.
        /// In this case consider using Task ID ranges instead.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The list of Task IDs that this Task depends on. All Tasks in this list must complete successfully before the dependent Task can be scheduled. The taskIds collection is limited to 64000 characters total (i.e. the combined length of all Task IDs). If the taskIds collection exceeds the maximum length, the Add Task request fails with error code TaskDependencyListTooLong. In this case consider using Task ID ranges instead.",
        SerializedName = @"taskIds",
        PossibleTypes = new [] { typeof(string) })]
        System.Collections.Generic.List<string> TaskId { get; set; }
        /// <summary>
        /// The list of Task ID ranges that this Task depends on. All Tasks in all ranges must complete successfully before the dependent
        /// Task can be scheduled.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The list of Task ID ranges that this Task depends on. All Tasks in all ranges must complete successfully before the dependent Task can be scheduled.",
        SerializedName = @"taskIdRanges",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchTaskIdRange) })]
        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchTaskIdRange> TaskIdRange { get; set; }

    }
    /// Specifies any dependencies of a Task. Any Task that is explicitly specified or
    /// within a dependency range must complete before the dependant Task will be
    /// scheduled.
    internal partial interface IBatchTaskDependenciesInternal

    {
        /// <summary>
        /// The list of Task IDs that this Task depends on. All Tasks in this list must complete successfully before the dependent
        /// Task can be scheduled. The taskIds collection is limited to 64000 characters total (i.e. the combined length of all Task
        /// IDs). If the taskIds collection exceeds the maximum length, the Add Task request fails with error code TaskDependencyListTooLong.
        /// In this case consider using Task ID ranges instead.
        /// </summary>
        System.Collections.Generic.List<string> TaskId { get; set; }
        /// <summary>
        /// The list of Task ID ranges that this Task depends on. All Tasks in all ranges must complete successfully before the dependent
        /// Task can be scheduled.
        /// </summary>
        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchTaskIdRange> TaskIdRange { get; set; }

    }
}