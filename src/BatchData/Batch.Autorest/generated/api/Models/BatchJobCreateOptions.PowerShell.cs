// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Batch.Models
{
    using Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.PowerShell;

    /// <summary>Parameters for creating an Azure Batch Job.</summary>
    [System.ComponentModel.TypeConverter(typeof(BatchJobCreateOptionsTypeConverter))]
    public partial class BatchJobCreateOptions
    {

        /// <summary>
        /// <c>AfterDeserializeDictionary</c> will be called after the deserialization has finished, allowing customization of the
        /// object before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>

        partial void AfterDeserializeDictionary(global::System.Collections.IDictionary content);

        /// <summary>
        /// <c>AfterDeserializePSObject</c> will be called after the deserialization has finished, allowing customization of the object
        /// before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>

        partial void AfterDeserializePSObject(global::System.Management.Automation.PSObject content);

        /// <summary>
        /// <c>BeforeDeserializeDictionary</c> will be called before the deserialization has commenced, allowing complete customization
        /// of the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <paramref name="returnNow" /> output
        /// parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeDeserializeDictionary(global::System.Collections.IDictionary content, ref bool returnNow);

        /// <summary>
        /// <c>BeforeDeserializePSObject</c> will be called before the deserialization has commenced, allowing complete customization
        /// of the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <paramref name="returnNow" /> output
        /// parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeDeserializePSObject(global::System.Management.Automation.PSObject content, ref bool returnNow);

        /// <summary>
        /// <c>OverrideToString</c> will be called if it is implemented. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="stringResult">/// instance serialized to a string, normally it is a Json</param>
        /// <param name="returnNow">/// set returnNow to true if you provide a customized OverrideToString function</param>

        partial void OverrideToString(ref string stringResult, ref bool returnNow);

        /// <summary>
        /// Deserializes a <see cref="global::System.Collections.IDictionary" /> into a new instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.BatchJobCreateOptions"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        internal BatchJobCreateOptions(global::System.Collections.IDictionary content)
        {
            bool returnNow = false;
            BeforeDeserializeDictionary(content, ref returnNow);
            if (returnNow)
            {
                return;
            }
            // actually deserialize
            if (content.Contains("Constraint"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchJobCreateOptionsInternal)this).Constraint = (Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchJobConstraints) content.GetValueForProperty("Constraint",((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchJobCreateOptionsInternal)this).Constraint, Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.BatchJobConstraintsTypeConverter.ConvertFrom);
            }
            if (content.Contains("JobReleaseTask"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchJobCreateOptionsInternal)this).JobReleaseTask = (Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchJobReleaseTask) content.GetValueForProperty("JobReleaseTask",((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchJobCreateOptionsInternal)this).JobReleaseTask, Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.BatchJobReleaseTaskTypeConverter.ConvertFrom);
            }
            if (content.Contains("PoolInfo"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchJobCreateOptionsInternal)this).PoolInfo = (Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchPoolInfo) content.GetValueForProperty("PoolInfo",((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchJobCreateOptionsInternal)this).PoolInfo, Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.BatchPoolInfoTypeConverter.ConvertFrom);
            }
            if (content.Contains("NetworkConfiguration"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchJobCreateOptionsInternal)this).NetworkConfiguration = (Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchJobNetworkConfiguration) content.GetValueForProperty("NetworkConfiguration",((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchJobCreateOptionsInternal)this).NetworkConfiguration, Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.BatchJobNetworkConfigurationTypeConverter.ConvertFrom);
            }
            if (content.Contains("Id"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchJobCreateOptionsInternal)this).Id = (string) content.GetValueForProperty("Id",((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchJobCreateOptionsInternal)this).Id, global::System.Convert.ToString);
            }
            if (content.Contains("DisplayName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchJobCreateOptionsInternal)this).DisplayName = (string) content.GetValueForProperty("DisplayName",((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchJobCreateOptionsInternal)this).DisplayName, global::System.Convert.ToString);
            }
            if (content.Contains("UsesTaskDependency"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchJobCreateOptionsInternal)this).UsesTaskDependency = (bool?) content.GetValueForProperty("UsesTaskDependency",((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchJobCreateOptionsInternal)this).UsesTaskDependency, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("Priority"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchJobCreateOptionsInternal)this).Priority = (int?) content.GetValueForProperty("Priority",((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchJobCreateOptionsInternal)this).Priority, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("AllowTaskPreemption"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchJobCreateOptionsInternal)this).AllowTaskPreemption = (bool?) content.GetValueForProperty("AllowTaskPreemption",((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchJobCreateOptionsInternal)this).AllowTaskPreemption, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("MaxParallelTask"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchJobCreateOptionsInternal)this).MaxParallelTask = (int?) content.GetValueForProperty("MaxParallelTask",((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchJobCreateOptionsInternal)this).MaxParallelTask, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("CommonEnvironmentSetting"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchJobCreateOptionsInternal)this).CommonEnvironmentSetting = (System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IEnvironmentSetting>) content.GetValueForProperty("CommonEnvironmentSetting",((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchJobCreateOptionsInternal)this).CommonEnvironmentSetting, __y => TypeConverterExtensions.SelectToList<Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IEnvironmentSetting>(__y, Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.EnvironmentSettingTypeConverter.ConvertFrom));
            }
            if (content.Contains("AllTasksCompleteMode"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchJobCreateOptionsInternal)this).AllTasksCompleteMode = (string) content.GetValueForProperty("AllTasksCompleteMode",((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchJobCreateOptionsInternal)this).AllTasksCompleteMode, global::System.Convert.ToString);
            }
            if (content.Contains("TaskFailureMode"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchJobCreateOptionsInternal)this).TaskFailureMode = (string) content.GetValueForProperty("TaskFailureMode",((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchJobCreateOptionsInternal)this).TaskFailureMode, global::System.Convert.ToString);
            }
            if (content.Contains("Metadata"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchJobCreateOptionsInternal)this).Metadata = (System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchMetadataItem>) content.GetValueForProperty("Metadata",((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchJobCreateOptionsInternal)this).Metadata, __y => TypeConverterExtensions.SelectToList<Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchMetadataItem>(__y, Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.BatchMetadataItemTypeConverter.ConvertFrom));
            }
            if (content.Contains("JobManagerTask"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchJobCreateOptionsInternal)this).JobManagerTask = (Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchJobManagerTask) content.GetValueForProperty("JobManagerTask",((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchJobCreateOptionsInternal)this).JobManagerTask, Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.BatchJobManagerTaskTypeConverter.ConvertFrom);
            }
            if (content.Contains("JobPreparationTask"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchJobCreateOptionsInternal)this).JobPreparationTask = (Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchJobPreparationTask) content.GetValueForProperty("JobPreparationTask",((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchJobCreateOptionsInternal)this).JobPreparationTask, Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.BatchJobPreparationTaskTypeConverter.ConvertFrom);
            }
            if (content.Contains("JobReleaseTaskUserIdentity"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchJobCreateOptionsInternal)this).JobReleaseTaskUserIdentity = (Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IUserIdentity) content.GetValueForProperty("JobReleaseTaskUserIdentity",((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchJobCreateOptionsInternal)this).JobReleaseTaskUserIdentity, Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.UserIdentityTypeConverter.ConvertFrom);
            }
            if (content.Contains("ConstraintMaxWallClockTime"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchJobCreateOptionsInternal)this).ConstraintMaxWallClockTime = (global::System.TimeSpan?) content.GetValueForProperty("ConstraintMaxWallClockTime",((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchJobCreateOptionsInternal)this).ConstraintMaxWallClockTime, (v) => v is global::System.TimeSpan _v ? _v : global::System.Xml.XmlConvert.ToTimeSpan( v.ToString() ));
            }
            if (content.Contains("ConstraintMaxTaskRetryCount"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchJobCreateOptionsInternal)this).ConstraintMaxTaskRetryCount = (int?) content.GetValueForProperty("ConstraintMaxTaskRetryCount",((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchJobCreateOptionsInternal)this).ConstraintMaxTaskRetryCount, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("JobReleaseTaskContainerSetting"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchJobCreateOptionsInternal)this).JobReleaseTaskContainerSetting = (Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchTaskContainerSettings) content.GetValueForProperty("JobReleaseTaskContainerSetting",((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchJobCreateOptionsInternal)this).JobReleaseTaskContainerSetting, Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.BatchTaskContainerSettingsTypeConverter.ConvertFrom);
            }
            if (content.Contains("JobReleaseTaskId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchJobCreateOptionsInternal)this).JobReleaseTaskId = (string) content.GetValueForProperty("JobReleaseTaskId",((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchJobCreateOptionsInternal)this).JobReleaseTaskId, global::System.Convert.ToString);
            }
            if (content.Contains("JobReleaseTaskCommandLine"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchJobCreateOptionsInternal)this).JobReleaseTaskCommandLine = (string) content.GetValueForProperty("JobReleaseTaskCommandLine",((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchJobCreateOptionsInternal)this).JobReleaseTaskCommandLine, global::System.Convert.ToString);
            }
            if (content.Contains("JobReleaseTaskResourceFile"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchJobCreateOptionsInternal)this).JobReleaseTaskResourceFile = (System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IResourceFile>) content.GetValueForProperty("JobReleaseTaskResourceFile",((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchJobCreateOptionsInternal)this).JobReleaseTaskResourceFile, __y => TypeConverterExtensions.SelectToList<Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IResourceFile>(__y, Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.ResourceFileTypeConverter.ConvertFrom));
            }
            if (content.Contains("JobReleaseTaskEnvironmentSetting"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchJobCreateOptionsInternal)this).JobReleaseTaskEnvironmentSetting = (System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IEnvironmentSetting>) content.GetValueForProperty("JobReleaseTaskEnvironmentSetting",((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchJobCreateOptionsInternal)this).JobReleaseTaskEnvironmentSetting, __y => TypeConverterExtensions.SelectToList<Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IEnvironmentSetting>(__y, Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.EnvironmentSettingTypeConverter.ConvertFrom));
            }
            if (content.Contains("JobReleaseTaskMaxWallClockTime"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchJobCreateOptionsInternal)this).JobReleaseTaskMaxWallClockTime = (global::System.TimeSpan?) content.GetValueForProperty("JobReleaseTaskMaxWallClockTime",((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchJobCreateOptionsInternal)this).JobReleaseTaskMaxWallClockTime, (v) => v is global::System.TimeSpan _v ? _v : global::System.Xml.XmlConvert.ToTimeSpan( v.ToString() ));
            }
            if (content.Contains("JobReleaseTaskRetentionTime"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchJobCreateOptionsInternal)this).JobReleaseTaskRetentionTime = (global::System.TimeSpan?) content.GetValueForProperty("JobReleaseTaskRetentionTime",((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchJobCreateOptionsInternal)this).JobReleaseTaskRetentionTime, (v) => v is global::System.TimeSpan _v ? _v : global::System.Xml.XmlConvert.ToTimeSpan( v.ToString() ));
            }
            if (content.Contains("UserIdentityUsername"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchJobCreateOptionsInternal)this).UserIdentityUsername = (string) content.GetValueForProperty("UserIdentityUsername",((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchJobCreateOptionsInternal)this).UserIdentityUsername, global::System.Convert.ToString);
            }
            if (content.Contains("PoolInfoAutoPoolSpecification"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchJobCreateOptionsInternal)this).PoolInfoAutoPoolSpecification = (Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchAutoPoolSpecification) content.GetValueForProperty("PoolInfoAutoPoolSpecification",((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchJobCreateOptionsInternal)this).PoolInfoAutoPoolSpecification, Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.BatchAutoPoolSpecificationTypeConverter.ConvertFrom);
            }
            if (content.Contains("PoolInfoPoolId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchJobCreateOptionsInternal)this).PoolInfoPoolId = (string) content.GetValueForProperty("PoolInfoPoolId",((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchJobCreateOptionsInternal)this).PoolInfoPoolId, global::System.Convert.ToString);
            }
            if (content.Contains("NetworkConfigurationSubnetId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchJobCreateOptionsInternal)this).NetworkConfigurationSubnetId = (string) content.GetValueForProperty("NetworkConfigurationSubnetId",((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchJobCreateOptionsInternal)this).NetworkConfigurationSubnetId, global::System.Convert.ToString);
            }
            if (content.Contains("NetworkConfigurationSkipWithdrawFromVnet"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchJobCreateOptionsInternal)this).NetworkConfigurationSkipWithdrawFromVnet = (bool?) content.GetValueForProperty("NetworkConfigurationSkipWithdrawFromVnet",((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchJobCreateOptionsInternal)this).NetworkConfigurationSkipWithdrawFromVnet, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("ContainerSettingRegistry"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchJobCreateOptionsInternal)this).ContainerSettingRegistry = (Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IContainerRegistryReference) content.GetValueForProperty("ContainerSettingRegistry",((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchJobCreateOptionsInternal)this).ContainerSettingRegistry, Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.ContainerRegistryReferenceTypeConverter.ConvertFrom);
            }
            if (content.Contains("ContainerSettingContainerRunOption"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchJobCreateOptionsInternal)this).ContainerSettingContainerRunOption = (string) content.GetValueForProperty("ContainerSettingContainerRunOption",((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchJobCreateOptionsInternal)this).ContainerSettingContainerRunOption, global::System.Convert.ToString);
            }
            if (content.Contains("ContainerSettingImageName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchJobCreateOptionsInternal)this).ContainerSettingImageName = (string) content.GetValueForProperty("ContainerSettingImageName",((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchJobCreateOptionsInternal)this).ContainerSettingImageName, global::System.Convert.ToString);
            }
            if (content.Contains("ContainerSettingWorkingDirectory"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchJobCreateOptionsInternal)this).ContainerSettingWorkingDirectory = (string) content.GetValueForProperty("ContainerSettingWorkingDirectory",((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchJobCreateOptionsInternal)this).ContainerSettingWorkingDirectory, global::System.Convert.ToString);
            }
            if (content.Contains("ContainerSettingContainerHostBatchBindMount"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchJobCreateOptionsInternal)this).ContainerSettingContainerHostBatchBindMount = (System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IContainerHostBatchBindMountEntry>) content.GetValueForProperty("ContainerSettingContainerHostBatchBindMount",((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchJobCreateOptionsInternal)this).ContainerSettingContainerHostBatchBindMount, __y => TypeConverterExtensions.SelectToList<Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IContainerHostBatchBindMountEntry>(__y, Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.ContainerHostBatchBindMountEntryTypeConverter.ConvertFrom));
            }
            if (content.Contains("UserIdentityAutoUser"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchJobCreateOptionsInternal)this).UserIdentityAutoUser = (Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IAutoUserSpecification) content.GetValueForProperty("UserIdentityAutoUser",((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchJobCreateOptionsInternal)this).UserIdentityAutoUser, Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.AutoUserSpecificationTypeConverter.ConvertFrom);
            }
            if (content.Contains("AutoUserScope"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchJobCreateOptionsInternal)this).AutoUserScope = (string) content.GetValueForProperty("AutoUserScope",((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchJobCreateOptionsInternal)this).AutoUserScope, global::System.Convert.ToString);
            }
            if (content.Contains("AutoUserElevationLevel"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchJobCreateOptionsInternal)this).AutoUserElevationLevel = (string) content.GetValueForProperty("AutoUserElevationLevel",((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchJobCreateOptionsInternal)this).AutoUserElevationLevel, global::System.Convert.ToString);
            }
            if (content.Contains("AutoPoolSpecificationAutoPoolIdPrefix"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchJobCreateOptionsInternal)this).AutoPoolSpecificationAutoPoolIdPrefix = (string) content.GetValueForProperty("AutoPoolSpecificationAutoPoolIdPrefix",((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchJobCreateOptionsInternal)this).AutoPoolSpecificationAutoPoolIdPrefix, global::System.Convert.ToString);
            }
            if (content.Contains("AutoPoolSpecificationPoolLifetimeOption"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchJobCreateOptionsInternal)this).AutoPoolSpecificationPoolLifetimeOption = (string) content.GetValueForProperty("AutoPoolSpecificationPoolLifetimeOption",((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchJobCreateOptionsInternal)this).AutoPoolSpecificationPoolLifetimeOption, global::System.Convert.ToString);
            }
            if (content.Contains("AutoPoolSpecificationKeepAlive"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchJobCreateOptionsInternal)this).AutoPoolSpecificationKeepAlive = (bool?) content.GetValueForProperty("AutoPoolSpecificationKeepAlive",((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchJobCreateOptionsInternal)this).AutoPoolSpecificationKeepAlive, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("AutoPoolSpecificationPool"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchJobCreateOptionsInternal)this).AutoPoolSpecificationPool = (Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchPoolSpecification) content.GetValueForProperty("AutoPoolSpecificationPool",((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchJobCreateOptionsInternal)this).AutoPoolSpecificationPool, Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.BatchPoolSpecificationTypeConverter.ConvertFrom);
            }
            if (content.Contains("RegistryIdentityReference"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchJobCreateOptionsInternal)this).RegistryIdentityReference = (Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchNodeIdentityReference) content.GetValueForProperty("RegistryIdentityReference",((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchJobCreateOptionsInternal)this).RegistryIdentityReference, Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.BatchNodeIdentityReferenceTypeConverter.ConvertFrom);
            }
            if (content.Contains("RegistryUsername"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchJobCreateOptionsInternal)this).RegistryUsername = (string) content.GetValueForProperty("RegistryUsername",((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchJobCreateOptionsInternal)this).RegistryUsername, global::System.Convert.ToString);
            }
            if (content.Contains("RegistryPassword"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchJobCreateOptionsInternal)this).RegistryPassword = (System.Security.SecureString) content.GetValueForProperty("RegistryPassword",((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchJobCreateOptionsInternal)this).RegistryPassword, (object ss) => (System.Security.SecureString)ss);
            }
            if (content.Contains("RegistryServer"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchJobCreateOptionsInternal)this).RegistryServer = (string) content.GetValueForProperty("RegistryServer",((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchJobCreateOptionsInternal)this).RegistryServer, global::System.Convert.ToString);
            }
            if (content.Contains("IdentityReferenceResourceId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchJobCreateOptionsInternal)this).IdentityReferenceResourceId = (string) content.GetValueForProperty("IdentityReferenceResourceId",((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchJobCreateOptionsInternal)this).IdentityReferenceResourceId, global::System.Convert.ToString);
            }
            AfterDeserializeDictionary(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Management.Automation.PSObject" /> into a new instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.BatchJobCreateOptions"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        internal BatchJobCreateOptions(global::System.Management.Automation.PSObject content)
        {
            bool returnNow = false;
            BeforeDeserializePSObject(content, ref returnNow);
            if (returnNow)
            {
                return;
            }
            // actually deserialize
            if (content.Contains("Constraint"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchJobCreateOptionsInternal)this).Constraint = (Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchJobConstraints) content.GetValueForProperty("Constraint",((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchJobCreateOptionsInternal)this).Constraint, Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.BatchJobConstraintsTypeConverter.ConvertFrom);
            }
            if (content.Contains("JobReleaseTask"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchJobCreateOptionsInternal)this).JobReleaseTask = (Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchJobReleaseTask) content.GetValueForProperty("JobReleaseTask",((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchJobCreateOptionsInternal)this).JobReleaseTask, Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.BatchJobReleaseTaskTypeConverter.ConvertFrom);
            }
            if (content.Contains("PoolInfo"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchJobCreateOptionsInternal)this).PoolInfo = (Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchPoolInfo) content.GetValueForProperty("PoolInfo",((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchJobCreateOptionsInternal)this).PoolInfo, Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.BatchPoolInfoTypeConverter.ConvertFrom);
            }
            if (content.Contains("NetworkConfiguration"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchJobCreateOptionsInternal)this).NetworkConfiguration = (Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchJobNetworkConfiguration) content.GetValueForProperty("NetworkConfiguration",((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchJobCreateOptionsInternal)this).NetworkConfiguration, Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.BatchJobNetworkConfigurationTypeConverter.ConvertFrom);
            }
            if (content.Contains("Id"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchJobCreateOptionsInternal)this).Id = (string) content.GetValueForProperty("Id",((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchJobCreateOptionsInternal)this).Id, global::System.Convert.ToString);
            }
            if (content.Contains("DisplayName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchJobCreateOptionsInternal)this).DisplayName = (string) content.GetValueForProperty("DisplayName",((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchJobCreateOptionsInternal)this).DisplayName, global::System.Convert.ToString);
            }
            if (content.Contains("UsesTaskDependency"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchJobCreateOptionsInternal)this).UsesTaskDependency = (bool?) content.GetValueForProperty("UsesTaskDependency",((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchJobCreateOptionsInternal)this).UsesTaskDependency, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("Priority"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchJobCreateOptionsInternal)this).Priority = (int?) content.GetValueForProperty("Priority",((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchJobCreateOptionsInternal)this).Priority, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("AllowTaskPreemption"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchJobCreateOptionsInternal)this).AllowTaskPreemption = (bool?) content.GetValueForProperty("AllowTaskPreemption",((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchJobCreateOptionsInternal)this).AllowTaskPreemption, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("MaxParallelTask"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchJobCreateOptionsInternal)this).MaxParallelTask = (int?) content.GetValueForProperty("MaxParallelTask",((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchJobCreateOptionsInternal)this).MaxParallelTask, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("CommonEnvironmentSetting"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchJobCreateOptionsInternal)this).CommonEnvironmentSetting = (System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IEnvironmentSetting>) content.GetValueForProperty("CommonEnvironmentSetting",((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchJobCreateOptionsInternal)this).CommonEnvironmentSetting, __y => TypeConverterExtensions.SelectToList<Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IEnvironmentSetting>(__y, Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.EnvironmentSettingTypeConverter.ConvertFrom));
            }
            if (content.Contains("AllTasksCompleteMode"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchJobCreateOptionsInternal)this).AllTasksCompleteMode = (string) content.GetValueForProperty("AllTasksCompleteMode",((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchJobCreateOptionsInternal)this).AllTasksCompleteMode, global::System.Convert.ToString);
            }
            if (content.Contains("TaskFailureMode"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchJobCreateOptionsInternal)this).TaskFailureMode = (string) content.GetValueForProperty("TaskFailureMode",((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchJobCreateOptionsInternal)this).TaskFailureMode, global::System.Convert.ToString);
            }
            if (content.Contains("Metadata"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchJobCreateOptionsInternal)this).Metadata = (System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchMetadataItem>) content.GetValueForProperty("Metadata",((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchJobCreateOptionsInternal)this).Metadata, __y => TypeConverterExtensions.SelectToList<Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchMetadataItem>(__y, Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.BatchMetadataItemTypeConverter.ConvertFrom));
            }
            if (content.Contains("JobManagerTask"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchJobCreateOptionsInternal)this).JobManagerTask = (Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchJobManagerTask) content.GetValueForProperty("JobManagerTask",((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchJobCreateOptionsInternal)this).JobManagerTask, Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.BatchJobManagerTaskTypeConverter.ConvertFrom);
            }
            if (content.Contains("JobPreparationTask"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchJobCreateOptionsInternal)this).JobPreparationTask = (Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchJobPreparationTask) content.GetValueForProperty("JobPreparationTask",((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchJobCreateOptionsInternal)this).JobPreparationTask, Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.BatchJobPreparationTaskTypeConverter.ConvertFrom);
            }
            if (content.Contains("JobReleaseTaskUserIdentity"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchJobCreateOptionsInternal)this).JobReleaseTaskUserIdentity = (Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IUserIdentity) content.GetValueForProperty("JobReleaseTaskUserIdentity",((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchJobCreateOptionsInternal)this).JobReleaseTaskUserIdentity, Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.UserIdentityTypeConverter.ConvertFrom);
            }
            if (content.Contains("ConstraintMaxWallClockTime"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchJobCreateOptionsInternal)this).ConstraintMaxWallClockTime = (global::System.TimeSpan?) content.GetValueForProperty("ConstraintMaxWallClockTime",((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchJobCreateOptionsInternal)this).ConstraintMaxWallClockTime, (v) => v is global::System.TimeSpan _v ? _v : global::System.Xml.XmlConvert.ToTimeSpan( v.ToString() ));
            }
            if (content.Contains("ConstraintMaxTaskRetryCount"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchJobCreateOptionsInternal)this).ConstraintMaxTaskRetryCount = (int?) content.GetValueForProperty("ConstraintMaxTaskRetryCount",((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchJobCreateOptionsInternal)this).ConstraintMaxTaskRetryCount, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("JobReleaseTaskContainerSetting"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchJobCreateOptionsInternal)this).JobReleaseTaskContainerSetting = (Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchTaskContainerSettings) content.GetValueForProperty("JobReleaseTaskContainerSetting",((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchJobCreateOptionsInternal)this).JobReleaseTaskContainerSetting, Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.BatchTaskContainerSettingsTypeConverter.ConvertFrom);
            }
            if (content.Contains("JobReleaseTaskId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchJobCreateOptionsInternal)this).JobReleaseTaskId = (string) content.GetValueForProperty("JobReleaseTaskId",((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchJobCreateOptionsInternal)this).JobReleaseTaskId, global::System.Convert.ToString);
            }
            if (content.Contains("JobReleaseTaskCommandLine"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchJobCreateOptionsInternal)this).JobReleaseTaskCommandLine = (string) content.GetValueForProperty("JobReleaseTaskCommandLine",((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchJobCreateOptionsInternal)this).JobReleaseTaskCommandLine, global::System.Convert.ToString);
            }
            if (content.Contains("JobReleaseTaskResourceFile"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchJobCreateOptionsInternal)this).JobReleaseTaskResourceFile = (System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IResourceFile>) content.GetValueForProperty("JobReleaseTaskResourceFile",((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchJobCreateOptionsInternal)this).JobReleaseTaskResourceFile, __y => TypeConverterExtensions.SelectToList<Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IResourceFile>(__y, Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.ResourceFileTypeConverter.ConvertFrom));
            }
            if (content.Contains("JobReleaseTaskEnvironmentSetting"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchJobCreateOptionsInternal)this).JobReleaseTaskEnvironmentSetting = (System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IEnvironmentSetting>) content.GetValueForProperty("JobReleaseTaskEnvironmentSetting",((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchJobCreateOptionsInternal)this).JobReleaseTaskEnvironmentSetting, __y => TypeConverterExtensions.SelectToList<Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IEnvironmentSetting>(__y, Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.EnvironmentSettingTypeConverter.ConvertFrom));
            }
            if (content.Contains("JobReleaseTaskMaxWallClockTime"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchJobCreateOptionsInternal)this).JobReleaseTaskMaxWallClockTime = (global::System.TimeSpan?) content.GetValueForProperty("JobReleaseTaskMaxWallClockTime",((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchJobCreateOptionsInternal)this).JobReleaseTaskMaxWallClockTime, (v) => v is global::System.TimeSpan _v ? _v : global::System.Xml.XmlConvert.ToTimeSpan( v.ToString() ));
            }
            if (content.Contains("JobReleaseTaskRetentionTime"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchJobCreateOptionsInternal)this).JobReleaseTaskRetentionTime = (global::System.TimeSpan?) content.GetValueForProperty("JobReleaseTaskRetentionTime",((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchJobCreateOptionsInternal)this).JobReleaseTaskRetentionTime, (v) => v is global::System.TimeSpan _v ? _v : global::System.Xml.XmlConvert.ToTimeSpan( v.ToString() ));
            }
            if (content.Contains("UserIdentityUsername"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchJobCreateOptionsInternal)this).UserIdentityUsername = (string) content.GetValueForProperty("UserIdentityUsername",((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchJobCreateOptionsInternal)this).UserIdentityUsername, global::System.Convert.ToString);
            }
            if (content.Contains("PoolInfoAutoPoolSpecification"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchJobCreateOptionsInternal)this).PoolInfoAutoPoolSpecification = (Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchAutoPoolSpecification) content.GetValueForProperty("PoolInfoAutoPoolSpecification",((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchJobCreateOptionsInternal)this).PoolInfoAutoPoolSpecification, Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.BatchAutoPoolSpecificationTypeConverter.ConvertFrom);
            }
            if (content.Contains("PoolInfoPoolId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchJobCreateOptionsInternal)this).PoolInfoPoolId = (string) content.GetValueForProperty("PoolInfoPoolId",((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchJobCreateOptionsInternal)this).PoolInfoPoolId, global::System.Convert.ToString);
            }
            if (content.Contains("NetworkConfigurationSubnetId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchJobCreateOptionsInternal)this).NetworkConfigurationSubnetId = (string) content.GetValueForProperty("NetworkConfigurationSubnetId",((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchJobCreateOptionsInternal)this).NetworkConfigurationSubnetId, global::System.Convert.ToString);
            }
            if (content.Contains("NetworkConfigurationSkipWithdrawFromVnet"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchJobCreateOptionsInternal)this).NetworkConfigurationSkipWithdrawFromVnet = (bool?) content.GetValueForProperty("NetworkConfigurationSkipWithdrawFromVnet",((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchJobCreateOptionsInternal)this).NetworkConfigurationSkipWithdrawFromVnet, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("ContainerSettingRegistry"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchJobCreateOptionsInternal)this).ContainerSettingRegistry = (Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IContainerRegistryReference) content.GetValueForProperty("ContainerSettingRegistry",((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchJobCreateOptionsInternal)this).ContainerSettingRegistry, Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.ContainerRegistryReferenceTypeConverter.ConvertFrom);
            }
            if (content.Contains("ContainerSettingContainerRunOption"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchJobCreateOptionsInternal)this).ContainerSettingContainerRunOption = (string) content.GetValueForProperty("ContainerSettingContainerRunOption",((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchJobCreateOptionsInternal)this).ContainerSettingContainerRunOption, global::System.Convert.ToString);
            }
            if (content.Contains("ContainerSettingImageName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchJobCreateOptionsInternal)this).ContainerSettingImageName = (string) content.GetValueForProperty("ContainerSettingImageName",((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchJobCreateOptionsInternal)this).ContainerSettingImageName, global::System.Convert.ToString);
            }
            if (content.Contains("ContainerSettingWorkingDirectory"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchJobCreateOptionsInternal)this).ContainerSettingWorkingDirectory = (string) content.GetValueForProperty("ContainerSettingWorkingDirectory",((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchJobCreateOptionsInternal)this).ContainerSettingWorkingDirectory, global::System.Convert.ToString);
            }
            if (content.Contains("ContainerSettingContainerHostBatchBindMount"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchJobCreateOptionsInternal)this).ContainerSettingContainerHostBatchBindMount = (System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IContainerHostBatchBindMountEntry>) content.GetValueForProperty("ContainerSettingContainerHostBatchBindMount",((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchJobCreateOptionsInternal)this).ContainerSettingContainerHostBatchBindMount, __y => TypeConverterExtensions.SelectToList<Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IContainerHostBatchBindMountEntry>(__y, Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.ContainerHostBatchBindMountEntryTypeConverter.ConvertFrom));
            }
            if (content.Contains("UserIdentityAutoUser"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchJobCreateOptionsInternal)this).UserIdentityAutoUser = (Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IAutoUserSpecification) content.GetValueForProperty("UserIdentityAutoUser",((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchJobCreateOptionsInternal)this).UserIdentityAutoUser, Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.AutoUserSpecificationTypeConverter.ConvertFrom);
            }
            if (content.Contains("AutoUserScope"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchJobCreateOptionsInternal)this).AutoUserScope = (string) content.GetValueForProperty("AutoUserScope",((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchJobCreateOptionsInternal)this).AutoUserScope, global::System.Convert.ToString);
            }
            if (content.Contains("AutoUserElevationLevel"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchJobCreateOptionsInternal)this).AutoUserElevationLevel = (string) content.GetValueForProperty("AutoUserElevationLevel",((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchJobCreateOptionsInternal)this).AutoUserElevationLevel, global::System.Convert.ToString);
            }
            if (content.Contains("AutoPoolSpecificationAutoPoolIdPrefix"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchJobCreateOptionsInternal)this).AutoPoolSpecificationAutoPoolIdPrefix = (string) content.GetValueForProperty("AutoPoolSpecificationAutoPoolIdPrefix",((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchJobCreateOptionsInternal)this).AutoPoolSpecificationAutoPoolIdPrefix, global::System.Convert.ToString);
            }
            if (content.Contains("AutoPoolSpecificationPoolLifetimeOption"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchJobCreateOptionsInternal)this).AutoPoolSpecificationPoolLifetimeOption = (string) content.GetValueForProperty("AutoPoolSpecificationPoolLifetimeOption",((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchJobCreateOptionsInternal)this).AutoPoolSpecificationPoolLifetimeOption, global::System.Convert.ToString);
            }
            if (content.Contains("AutoPoolSpecificationKeepAlive"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchJobCreateOptionsInternal)this).AutoPoolSpecificationKeepAlive = (bool?) content.GetValueForProperty("AutoPoolSpecificationKeepAlive",((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchJobCreateOptionsInternal)this).AutoPoolSpecificationKeepAlive, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("AutoPoolSpecificationPool"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchJobCreateOptionsInternal)this).AutoPoolSpecificationPool = (Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchPoolSpecification) content.GetValueForProperty("AutoPoolSpecificationPool",((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchJobCreateOptionsInternal)this).AutoPoolSpecificationPool, Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.BatchPoolSpecificationTypeConverter.ConvertFrom);
            }
            if (content.Contains("RegistryIdentityReference"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchJobCreateOptionsInternal)this).RegistryIdentityReference = (Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchNodeIdentityReference) content.GetValueForProperty("RegistryIdentityReference",((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchJobCreateOptionsInternal)this).RegistryIdentityReference, Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.BatchNodeIdentityReferenceTypeConverter.ConvertFrom);
            }
            if (content.Contains("RegistryUsername"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchJobCreateOptionsInternal)this).RegistryUsername = (string) content.GetValueForProperty("RegistryUsername",((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchJobCreateOptionsInternal)this).RegistryUsername, global::System.Convert.ToString);
            }
            if (content.Contains("RegistryPassword"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchJobCreateOptionsInternal)this).RegistryPassword = (System.Security.SecureString) content.GetValueForProperty("RegistryPassword",((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchJobCreateOptionsInternal)this).RegistryPassword, (object ss) => (System.Security.SecureString)ss);
            }
            if (content.Contains("RegistryServer"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchJobCreateOptionsInternal)this).RegistryServer = (string) content.GetValueForProperty("RegistryServer",((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchJobCreateOptionsInternal)this).RegistryServer, global::System.Convert.ToString);
            }
            if (content.Contains("IdentityReferenceResourceId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchJobCreateOptionsInternal)this).IdentityReferenceResourceId = (string) content.GetValueForProperty("IdentityReferenceResourceId",((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchJobCreateOptionsInternal)this).IdentityReferenceResourceId, global::System.Convert.ToString);
            }
            AfterDeserializePSObject(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Collections.IDictionary" /> into an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.BatchJobCreateOptions"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        /// <returns>
        /// an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchJobCreateOptions" />.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchJobCreateOptions DeserializeFromDictionary(global::System.Collections.IDictionary content)
        {
            return new BatchJobCreateOptions(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Management.Automation.PSObject" /> into an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.BatchJobCreateOptions"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        /// <returns>
        /// an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchJobCreateOptions" />.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchJobCreateOptions DeserializeFromPSObject(global::System.Management.Automation.PSObject content)
        {
            return new BatchJobCreateOptions(content);
        }

        /// <summary>
        /// Creates a new instance of <see cref="BatchJobCreateOptions" />, deserializing the content from a json string.
        /// </summary>
        /// <param name="jsonText">a string containing a JSON serialized instance of this model.</param>
        /// <returns>an instance of the <see cref="BatchJobCreateOptions" /> model class.</returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchJobCreateOptions FromJsonString(string jsonText) => FromJson(Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.Json.JsonNode.Parse(jsonText));

        /// <summary>Serializes this instance to a json string.</summary>

        /// <returns>a <see cref="System.String" /> containing this model serialized to JSON text.</returns>
        public string ToJsonString() => ToJson(null, Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.SerializationMode.IncludeAll)?.ToString();

        public override string ToString()
        {
            var returnNow = false;
            var result = global::System.String.Empty;
            OverrideToString(ref result, ref returnNow);
            if (returnNow)
            {
                return result;
            }
            return ToJsonString();
        }
    }
    /// Parameters for creating an Azure Batch Job.
    [System.ComponentModel.TypeConverter(typeof(BatchJobCreateOptionsTypeConverter))]
    public partial interface IBatchJobCreateOptions

    {

    }
}