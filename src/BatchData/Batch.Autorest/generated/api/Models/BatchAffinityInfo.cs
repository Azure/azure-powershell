// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Batch.Models
{
    using static Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.Extensions;

    /// <summary>
    /// A locality hint that can be used by the Batch service to select a Compute Node
    /// on which to start a Task.
    /// </summary>
    public partial class BatchAffinityInfo :
        Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchAffinityInfo,
        Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchAffinityInfoInternal
    {

        /// <summary>Backing field for <see cref="AffinityId" /> property.</summary>
        private string _affinityId;

        /// <summary>
        /// An opaque string representing the location of a Compute Node or a Task that has run previously. You can pass the affinityId
        /// of a Node to indicate that this Task needs to run on that Compute Node. Note that this is just a soft affinity. If the
        /// target Compute Node is busy or unavailable at the time the Task is scheduled, then the Task will be scheduled elsewhere.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Origin(Microsoft.Azure.PowerShell.Cmdlets.Batch.PropertyOrigin.Owned)]
        public string AffinityId { get => this._affinityId; set => this._affinityId = value; }

        /// <summary>Creates an new <see cref="BatchAffinityInfo" /> instance.</summary>
        public BatchAffinityInfo()
        {

        }
    }
    /// A locality hint that can be used by the Batch service to select a Compute Node
    /// on which to start a Task.
    public partial interface IBatchAffinityInfo :
        Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.IJsonSerializable
    {
        /// <summary>
        /// An opaque string representing the location of a Compute Node or a Task that has run previously. You can pass the affinityId
        /// of a Node to indicate that this Task needs to run on that Compute Node. Note that this is just a soft affinity. If the
        /// target Compute Node is busy or unavailable at the time the Task is scheduled, then the Task will be scheduled elsewhere.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"An opaque string representing the location of a Compute Node or a Task that has run previously. You can pass the affinityId of a Node to indicate that this Task needs to run on that Compute Node. Note that this is just a soft affinity. If the target Compute Node is busy or unavailable at the time the Task is scheduled, then the Task will be scheduled elsewhere.",
        SerializedName = @"affinityId",
        PossibleTypes = new [] { typeof(string) })]
        string AffinityId { get; set; }

    }
    /// A locality hint that can be used by the Batch service to select a Compute Node
    /// on which to start a Task.
    internal partial interface IBatchAffinityInfoInternal

    {
        /// <summary>
        /// An opaque string representing the location of a Compute Node or a Task that has run previously. You can pass the affinityId
        /// of a Node to indicate that this Task needs to run on that Compute Node. Note that this is just a soft affinity. If the
        /// target Compute Node is busy or unavailable at the time the Task is scheduled, then the Task will be scheduled elsewhere.
        /// </summary>
        string AffinityId { get; set; }

    }
}