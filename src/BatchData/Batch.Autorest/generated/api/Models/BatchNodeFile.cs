// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Batch.Models
{
    using static Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.Extensions;

    /// <summary>Information about a file or directory on a Compute Node.</summary>
    public partial class BatchNodeFile :
        Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchNodeFile,
        Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchNodeFileInternal
    {

        /// <summary>The length of the file.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Origin(Microsoft.Azure.PowerShell.Cmdlets.Batch.PropertyOrigin.Inlined)]
        public string ContentLength { get => ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IFilePropertiesInternal)Property).ContentLength; set => ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IFilePropertiesInternal)Property).ContentLength = value ?? null; }

        /// <summary>The content type of the file.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Origin(Microsoft.Azure.PowerShell.Cmdlets.Batch.PropertyOrigin.Inlined)]
        public string ContentType { get => ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IFilePropertiesInternal)Property).ContentType; set => ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IFilePropertiesInternal)Property).ContentType = value ?? null; }

        /// <summary>
        /// The file creation time. The creation time is not returned for files on Linux Compute Nodes.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Origin(Microsoft.Azure.PowerShell.Cmdlets.Batch.PropertyOrigin.Inlined)]
        public global::System.DateTime? CreationTime { get => ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IFilePropertiesInternal)Property).CreationTime; set => ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IFilePropertiesInternal)Property).CreationTime = value ?? default(global::System.DateTime); }

        /// <summary>
        /// The file mode attribute in octal format. The file mode is returned only for files on Linux Compute Nodes.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Origin(Microsoft.Azure.PowerShell.Cmdlets.Batch.PropertyOrigin.Inlined)]
        public string FileMode { get => ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IFilePropertiesInternal)Property).FileMode; set => ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IFilePropertiesInternal)Property).FileMode = value ?? null; }

        /// <summary>Backing field for <see cref="IsDirectory" /> property.</summary>
        private bool? _isDirectory;

        /// <summary>Whether the object represents a directory.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Origin(Microsoft.Azure.PowerShell.Cmdlets.Batch.PropertyOrigin.Owned)]
        public bool? IsDirectory { get => this._isDirectory; set => this._isDirectory = value; }

        /// <summary>The time at which the file was last modified.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Origin(Microsoft.Azure.PowerShell.Cmdlets.Batch.PropertyOrigin.Inlined)]
        public global::System.DateTime? LastModified { get => ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IFilePropertiesInternal)Property).LastModified; set => ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IFilePropertiesInternal)Property).LastModified = value ?? default(global::System.DateTime); }

        /// <summary>Internal Acessors for Property</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IFileProperties Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchNodeFileInternal.Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.FileProperties()); set { {_property = value;} } }

        /// <summary>Backing field for <see cref="Name" /> property.</summary>
        private string _name;

        /// <summary>The file path.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Origin(Microsoft.Azure.PowerShell.Cmdlets.Batch.PropertyOrigin.Owned)]
        public string Name { get => this._name; set => this._name = value; }

        /// <summary>Backing field for <see cref="Property" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IFileProperties _property;

        /// <summary>The file properties.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Origin(Microsoft.Azure.PowerShell.Cmdlets.Batch.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IFileProperties Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.FileProperties()); set => this._property = value; }

        /// <summary>Backing field for <see cref="Url" /> property.</summary>
        private string _url;

        /// <summary>The URL of the file.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Origin(Microsoft.Azure.PowerShell.Cmdlets.Batch.PropertyOrigin.Owned)]
        public string Url { get => this._url; set => this._url = value; }

        /// <summary>Creates an new <see cref="BatchNodeFile" /> instance.</summary>
        public BatchNodeFile()
        {

        }
    }
    /// Information about a file or directory on a Compute Node.
    public partial interface IBatchNodeFile :
        Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.IJsonSerializable
    {
        /// <summary>The length of the file.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The length of the file.",
        SerializedName = @"contentLength",
        PossibleTypes = new [] { typeof(string) })]
        string ContentLength { get; set; }
        /// <summary>The content type of the file.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The content type of the file.",
        SerializedName = @"contentType",
        PossibleTypes = new [] { typeof(string) })]
        string ContentType { get; set; }
        /// <summary>
        /// The file creation time. The creation time is not returned for files on Linux Compute Nodes.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The file creation time. The creation time is not returned for files on Linux Compute Nodes.",
        SerializedName = @"creationTime",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? CreationTime { get; set; }
        /// <summary>
        /// The file mode attribute in octal format. The file mode is returned only for files on Linux Compute Nodes.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The file mode attribute in octal format. The file mode is returned only for files on Linux Compute Nodes.",
        SerializedName = @"fileMode",
        PossibleTypes = new [] { typeof(string) })]
        string FileMode { get; set; }
        /// <summary>Whether the object represents a directory.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Whether the object represents a directory.",
        SerializedName = @"isDirectory",
        PossibleTypes = new [] { typeof(bool) })]
        bool? IsDirectory { get; set; }
        /// <summary>The time at which the file was last modified.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The time at which the file was last modified.",
        SerializedName = @"lastModified",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? LastModified { get; set; }
        /// <summary>The file path.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The file path.",
        SerializedName = @"name",
        PossibleTypes = new [] { typeof(string) })]
        string Name { get; set; }
        /// <summary>The URL of the file.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The URL of the file.",
        SerializedName = @"url",
        PossibleTypes = new [] { typeof(string) })]
        string Url { get; set; }

    }
    /// Information about a file or directory on a Compute Node.
    internal partial interface IBatchNodeFileInternal

    {
        /// <summary>The length of the file.</summary>
        string ContentLength { get; set; }
        /// <summary>The content type of the file.</summary>
        string ContentType { get; set; }
        /// <summary>
        /// The file creation time. The creation time is not returned for files on Linux Compute Nodes.
        /// </summary>
        global::System.DateTime? CreationTime { get; set; }
        /// <summary>
        /// The file mode attribute in octal format. The file mode is returned only for files on Linux Compute Nodes.
        /// </summary>
        string FileMode { get; set; }
        /// <summary>Whether the object represents a directory.</summary>
        bool? IsDirectory { get; set; }
        /// <summary>The time at which the file was last modified.</summary>
        global::System.DateTime? LastModified { get; set; }
        /// <summary>The file path.</summary>
        string Name { get; set; }
        /// <summary>The file properties.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IFileProperties Property { get; set; }
        /// <summary>The URL of the file.</summary>
        string Url { get; set; }

    }
}