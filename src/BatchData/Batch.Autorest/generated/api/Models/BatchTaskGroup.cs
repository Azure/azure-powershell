// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Batch.Models
{
    using static Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.Extensions;

    /// <summary>A collection of Azure Batch Tasks to add.</summary>
    public partial class BatchTaskGroup :
        Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchTaskGroup,
        Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchTaskGroupInternal
    {

        /// <summary>Backing field for <see cref="Value" /> property.</summary>
        private System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchTaskCreateOptions> _value;

        /// <summary>
        /// The collection of Tasks to add. The maximum count of Tasks is 100. The total serialized size of this collection must be
        /// less than 1MB. If it is greater than 1MB (for example if each Task has 100's of resource files or environment variables),
        /// the request will fail with code 'RequestBodyTooLarge' and should be retried again with fewer Tasks.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Origin(Microsoft.Azure.PowerShell.Cmdlets.Batch.PropertyOrigin.Owned)]
        public System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchTaskCreateOptions> Value { get => this._value; set => this._value = value; }

        /// <summary>Creates an new <see cref="BatchTaskGroup" /> instance.</summary>
        public BatchTaskGroup()
        {

        }
    }
    /// A collection of Azure Batch Tasks to add.
    public partial interface IBatchTaskGroup :
        Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.IJsonSerializable
    {
        /// <summary>
        /// The collection of Tasks to add. The maximum count of Tasks is 100. The total serialized size of this collection must be
        /// less than 1MB. If it is greater than 1MB (for example if each Task has 100's of resource files or environment variables),
        /// the request will fail with code 'RequestBodyTooLarge' and should be retried again with fewer Tasks.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The collection of Tasks to add. The maximum count of Tasks is 100. The total serialized size of this collection must be less than 1MB. If it is greater than 1MB (for example if each Task has 100's of resource files or environment variables), the request will fail with code 'RequestBodyTooLarge' and should be retried again with fewer Tasks.",
        SerializedName = @"value",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchTaskCreateOptions) })]
        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchTaskCreateOptions> Value { get; set; }

    }
    /// A collection of Azure Batch Tasks to add.
    internal partial interface IBatchTaskGroupInternal

    {
        /// <summary>
        /// The collection of Tasks to add. The maximum count of Tasks is 100. The total serialized size of this collection must be
        /// less than 1MB. If it is greater than 1MB (for example if each Task has 100's of resource files or environment variables),
        /// the request will fail with code 'RequestBodyTooLarge' and should be retried again with fewer Tasks.
        /// </summary>
        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchTaskCreateOptions> Value { get; set; }

    }
}