// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Batch.Models
{
    using Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.PowerShell;

    /// <summary>
    /// A reference to the Azure Virtual Machines Marketplace Image and additional
    /// information about the Image.
    /// </summary>
    [System.ComponentModel.TypeConverter(typeof(BatchSupportedImageTypeConverter))]
    public partial class BatchSupportedImage
    {

        /// <summary>
        /// <c>AfterDeserializeDictionary</c> will be called after the deserialization has finished, allowing customization of the
        /// object before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>

        partial void AfterDeserializeDictionary(global::System.Collections.IDictionary content);

        /// <summary>
        /// <c>AfterDeserializePSObject</c> will be called after the deserialization has finished, allowing customization of the object
        /// before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>

        partial void AfterDeserializePSObject(global::System.Management.Automation.PSObject content);

        /// <summary>
        /// <c>BeforeDeserializeDictionary</c> will be called before the deserialization has commenced, allowing complete customization
        /// of the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <paramref name="returnNow" /> output
        /// parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeDeserializeDictionary(global::System.Collections.IDictionary content, ref bool returnNow);

        /// <summary>
        /// <c>BeforeDeserializePSObject</c> will be called before the deserialization has commenced, allowing complete customization
        /// of the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <paramref name="returnNow" /> output
        /// parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeDeserializePSObject(global::System.Management.Automation.PSObject content, ref bool returnNow);

        /// <summary>
        /// <c>OverrideToString</c> will be called if it is implemented. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="stringResult">/// instance serialized to a string, normally it is a Json</param>
        /// <param name="returnNow">/// set returnNow to true if you provide a customized OverrideToString function</param>

        partial void OverrideToString(ref string stringResult, ref bool returnNow);

        /// <summary>
        /// Deserializes a <see cref="global::System.Collections.IDictionary" /> into a new instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.BatchSupportedImage"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        internal BatchSupportedImage(global::System.Collections.IDictionary content)
        {
            bool returnNow = false;
            BeforeDeserializeDictionary(content, ref returnNow);
            if (returnNow)
            {
                return;
            }
            // actually deserialize
            if (content.Contains("ImageReference"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchSupportedImageInternal)this).ImageReference = (Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchVMImageReference) content.GetValueForProperty("ImageReference",((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchSupportedImageInternal)this).ImageReference, Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.BatchVMImageReferenceTypeConverter.ConvertFrom);
            }
            if (content.Contains("NodeAgentSkuId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchSupportedImageInternal)this).NodeAgentSkuId = (string) content.GetValueForProperty("NodeAgentSkuId",((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchSupportedImageInternal)this).NodeAgentSkuId, global::System.Convert.ToString);
            }
            if (content.Contains("OSType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchSupportedImageInternal)this).OSType = (string) content.GetValueForProperty("OSType",((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchSupportedImageInternal)this).OSType, global::System.Convert.ToString);
            }
            if (content.Contains("Capability"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchSupportedImageInternal)this).Capability = (System.Collections.Generic.List<string>) content.GetValueForProperty("Capability",((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchSupportedImageInternal)this).Capability, __y => TypeConverterExtensions.SelectToList<string>(__y, global::System.Convert.ToString));
            }
            if (content.Contains("BatchSupportEndOfLife"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchSupportedImageInternal)this).BatchSupportEndOfLife = (global::System.DateTime?) content.GetValueForProperty("BatchSupportEndOfLife",((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchSupportedImageInternal)this).BatchSupportEndOfLife, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            if (content.Contains("VerificationType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchSupportedImageInternal)this).VerificationType = (string) content.GetValueForProperty("VerificationType",((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchSupportedImageInternal)this).VerificationType, global::System.Convert.ToString);
            }
            if (content.Contains("ImageReferencePublisher"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchSupportedImageInternal)this).ImageReferencePublisher = (string) content.GetValueForProperty("ImageReferencePublisher",((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchSupportedImageInternal)this).ImageReferencePublisher, global::System.Convert.ToString);
            }
            if (content.Contains("ImageReferenceOffer"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchSupportedImageInternal)this).ImageReferenceOffer = (string) content.GetValueForProperty("ImageReferenceOffer",((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchSupportedImageInternal)this).ImageReferenceOffer, global::System.Convert.ToString);
            }
            if (content.Contains("ImageReferenceSku"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchSupportedImageInternal)this).ImageReferenceSku = (string) content.GetValueForProperty("ImageReferenceSku",((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchSupportedImageInternal)this).ImageReferenceSku, global::System.Convert.ToString);
            }
            if (content.Contains("ImageReferenceVersion"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchSupportedImageInternal)this).ImageReferenceVersion = (string) content.GetValueForProperty("ImageReferenceVersion",((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchSupportedImageInternal)this).ImageReferenceVersion, global::System.Convert.ToString);
            }
            if (content.Contains("ImageReferenceVirtualMachineImageId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchSupportedImageInternal)this).ImageReferenceVirtualMachineImageId = (string) content.GetValueForProperty("ImageReferenceVirtualMachineImageId",((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchSupportedImageInternal)this).ImageReferenceVirtualMachineImageId, global::System.Convert.ToString);
            }
            if (content.Contains("ImageReferenceExactVersion"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchSupportedImageInternal)this).ImageReferenceExactVersion = (string) content.GetValueForProperty("ImageReferenceExactVersion",((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchSupportedImageInternal)this).ImageReferenceExactVersion, global::System.Convert.ToString);
            }
            if (content.Contains("ImageReferenceSharedGalleryImageId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchSupportedImageInternal)this).ImageReferenceSharedGalleryImageId = (string) content.GetValueForProperty("ImageReferenceSharedGalleryImageId",((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchSupportedImageInternal)this).ImageReferenceSharedGalleryImageId, global::System.Convert.ToString);
            }
            if (content.Contains("ImageReferenceCommunityGalleryImageId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchSupportedImageInternal)this).ImageReferenceCommunityGalleryImageId = (string) content.GetValueForProperty("ImageReferenceCommunityGalleryImageId",((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchSupportedImageInternal)this).ImageReferenceCommunityGalleryImageId, global::System.Convert.ToString);
            }
            AfterDeserializeDictionary(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Management.Automation.PSObject" /> into a new instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.BatchSupportedImage"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        internal BatchSupportedImage(global::System.Management.Automation.PSObject content)
        {
            bool returnNow = false;
            BeforeDeserializePSObject(content, ref returnNow);
            if (returnNow)
            {
                return;
            }
            // actually deserialize
            if (content.Contains("ImageReference"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchSupportedImageInternal)this).ImageReference = (Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchVMImageReference) content.GetValueForProperty("ImageReference",((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchSupportedImageInternal)this).ImageReference, Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.BatchVMImageReferenceTypeConverter.ConvertFrom);
            }
            if (content.Contains("NodeAgentSkuId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchSupportedImageInternal)this).NodeAgentSkuId = (string) content.GetValueForProperty("NodeAgentSkuId",((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchSupportedImageInternal)this).NodeAgentSkuId, global::System.Convert.ToString);
            }
            if (content.Contains("OSType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchSupportedImageInternal)this).OSType = (string) content.GetValueForProperty("OSType",((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchSupportedImageInternal)this).OSType, global::System.Convert.ToString);
            }
            if (content.Contains("Capability"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchSupportedImageInternal)this).Capability = (System.Collections.Generic.List<string>) content.GetValueForProperty("Capability",((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchSupportedImageInternal)this).Capability, __y => TypeConverterExtensions.SelectToList<string>(__y, global::System.Convert.ToString));
            }
            if (content.Contains("BatchSupportEndOfLife"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchSupportedImageInternal)this).BatchSupportEndOfLife = (global::System.DateTime?) content.GetValueForProperty("BatchSupportEndOfLife",((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchSupportedImageInternal)this).BatchSupportEndOfLife, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            if (content.Contains("VerificationType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchSupportedImageInternal)this).VerificationType = (string) content.GetValueForProperty("VerificationType",((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchSupportedImageInternal)this).VerificationType, global::System.Convert.ToString);
            }
            if (content.Contains("ImageReferencePublisher"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchSupportedImageInternal)this).ImageReferencePublisher = (string) content.GetValueForProperty("ImageReferencePublisher",((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchSupportedImageInternal)this).ImageReferencePublisher, global::System.Convert.ToString);
            }
            if (content.Contains("ImageReferenceOffer"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchSupportedImageInternal)this).ImageReferenceOffer = (string) content.GetValueForProperty("ImageReferenceOffer",((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchSupportedImageInternal)this).ImageReferenceOffer, global::System.Convert.ToString);
            }
            if (content.Contains("ImageReferenceSku"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchSupportedImageInternal)this).ImageReferenceSku = (string) content.GetValueForProperty("ImageReferenceSku",((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchSupportedImageInternal)this).ImageReferenceSku, global::System.Convert.ToString);
            }
            if (content.Contains("ImageReferenceVersion"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchSupportedImageInternal)this).ImageReferenceVersion = (string) content.GetValueForProperty("ImageReferenceVersion",((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchSupportedImageInternal)this).ImageReferenceVersion, global::System.Convert.ToString);
            }
            if (content.Contains("ImageReferenceVirtualMachineImageId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchSupportedImageInternal)this).ImageReferenceVirtualMachineImageId = (string) content.GetValueForProperty("ImageReferenceVirtualMachineImageId",((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchSupportedImageInternal)this).ImageReferenceVirtualMachineImageId, global::System.Convert.ToString);
            }
            if (content.Contains("ImageReferenceExactVersion"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchSupportedImageInternal)this).ImageReferenceExactVersion = (string) content.GetValueForProperty("ImageReferenceExactVersion",((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchSupportedImageInternal)this).ImageReferenceExactVersion, global::System.Convert.ToString);
            }
            if (content.Contains("ImageReferenceSharedGalleryImageId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchSupportedImageInternal)this).ImageReferenceSharedGalleryImageId = (string) content.GetValueForProperty("ImageReferenceSharedGalleryImageId",((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchSupportedImageInternal)this).ImageReferenceSharedGalleryImageId, global::System.Convert.ToString);
            }
            if (content.Contains("ImageReferenceCommunityGalleryImageId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchSupportedImageInternal)this).ImageReferenceCommunityGalleryImageId = (string) content.GetValueForProperty("ImageReferenceCommunityGalleryImageId",((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchSupportedImageInternal)this).ImageReferenceCommunityGalleryImageId, global::System.Convert.ToString);
            }
            AfterDeserializePSObject(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Collections.IDictionary" /> into an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.BatchSupportedImage"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        /// <returns>
        /// an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchSupportedImage" />.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchSupportedImage DeserializeFromDictionary(global::System.Collections.IDictionary content)
        {
            return new BatchSupportedImage(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Management.Automation.PSObject" /> into an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.BatchSupportedImage"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        /// <returns>
        /// an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchSupportedImage" />.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchSupportedImage DeserializeFromPSObject(global::System.Management.Automation.PSObject content)
        {
            return new BatchSupportedImage(content);
        }

        /// <summary>
        /// Creates a new instance of <see cref="BatchSupportedImage" />, deserializing the content from a json string.
        /// </summary>
        /// <param name="jsonText">a string containing a JSON serialized instance of this model.</param>
        /// <returns>an instance of the <see cref="BatchSupportedImage" /> model class.</returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchSupportedImage FromJsonString(string jsonText) => FromJson(Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.Json.JsonNode.Parse(jsonText));

        /// <summary>Serializes this instance to a json string.</summary>

        /// <returns>a <see cref="System.String" /> containing this model serialized to JSON text.</returns>
        public string ToJsonString() => ToJson(null, Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.SerializationMode.IncludeAll)?.ToString();

        public override string ToString()
        {
            var returnNow = false;
            var result = global::System.String.Empty;
            OverrideToString(ref result, ref returnNow);
            if (returnNow)
            {
                return result;
            }
            return ToJsonString();
        }
    }
    /// A reference to the Azure Virtual Machines Marketplace Image and additional
    /// information about the Image.
    [System.ComponentModel.TypeConverter(typeof(BatchSupportedImageTypeConverter))]
    public partial interface IBatchSupportedImage

    {

    }
}