// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Batch.Models
{
    using static Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.Extensions;

    /// <summary>The result of uploading Batch service log files from a specific Compute Node.</summary>
    public partial class UploadBatchServiceLogsResult :
        Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IUploadBatchServiceLogsResult,
        Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IUploadBatchServiceLogsResultInternal,
        Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.IHeaderSerializable
    {

        /// <summary>Backing field for <see cref="ClientRequestId" /> property.</summary>
        private string _clientRequestId;

        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Origin(Microsoft.Azure.PowerShell.Cmdlets.Batch.PropertyOrigin.Owned)]
        public string ClientRequestId { get => this._clientRequestId; set => this._clientRequestId = value; }

        /// <summary>Backing field for <see cref="ETag" /> property.</summary>
        private string _eTag;

        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Origin(Microsoft.Azure.PowerShell.Cmdlets.Batch.PropertyOrigin.Owned)]
        public string ETag { get => this._eTag; set => this._eTag = value; }

        /// <summary>Backing field for <see cref="LastModified" /> property.</summary>
        private string _lastModified;

        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Origin(Microsoft.Azure.PowerShell.Cmdlets.Batch.PropertyOrigin.Owned)]
        public string LastModified { get => this._lastModified; set => this._lastModified = value; }

        /// <summary>Backing field for <see cref="NumberOfFilesUploaded" /> property.</summary>
        private int _numberOfFilesUploaded;

        /// <summary>The number of log files which will be uploaded.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Origin(Microsoft.Azure.PowerShell.Cmdlets.Batch.PropertyOrigin.Owned)]
        public int NumberOfFilesUploaded { get => this._numberOfFilesUploaded; set => this._numberOfFilesUploaded = value; }

        /// <summary>Backing field for <see cref="RequestId" /> property.</summary>
        private string _requestId;

        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Origin(Microsoft.Azure.PowerShell.Cmdlets.Batch.PropertyOrigin.Owned)]
        public string RequestId { get => this._requestId; set => this._requestId = value; }

        /// <summary>Backing field for <see cref="VirtualDirectoryName" /> property.</summary>
        private string _virtualDirectoryName;

        /// <summary>
        /// The virtual directory within Azure Blob Storage container to which the Batch Service log file(s) will be uploaded. The
        /// virtual directory name is part of the blob name for each log file uploaded, and it is built based poolId, nodeId and a
        /// unique identifier.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Origin(Microsoft.Azure.PowerShell.Cmdlets.Batch.PropertyOrigin.Owned)]
        public string VirtualDirectoryName { get => this._virtualDirectoryName; set => this._virtualDirectoryName = value; }

        /// <param name="headers"></param>
        void Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.IHeaderSerializable.ReadHeaders(global::System.Net.Http.Headers.HttpResponseHeaders headers)
        {
            if (headers.TryGetValues("ETag", out var __eTagHeader0))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IUploadBatchServiceLogsResultInternal)this).ETag = System.Linq.Enumerable.FirstOrDefault(__eTagHeader0) is string __headerETagHeader0 ? __headerETagHeader0 : (string)null;
            }
            if (headers.TryGetValues("Last-Modified", out var __lastModifiedHeader1))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IUploadBatchServiceLogsResultInternal)this).LastModified = System.Linq.Enumerable.FirstOrDefault(__lastModifiedHeader1) is string __headerLastModifiedHeader1 ? __headerLastModifiedHeader1 : (string)null;
            }
            if (headers.TryGetValues("client-request-id", out var __clientRequestIdHeader2))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IUploadBatchServiceLogsResultInternal)this).ClientRequestId = System.Linq.Enumerable.FirstOrDefault(__clientRequestIdHeader2) is string __headerClientRequestIdHeader2 ? __headerClientRequestIdHeader2 : (string)null;
            }
            if (headers.TryGetValues("request-id", out var __requestIdHeader3))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IUploadBatchServiceLogsResultInternal)this).RequestId = System.Linq.Enumerable.FirstOrDefault(__requestIdHeader3) is string __headerRequestIdHeader3 ? __headerRequestIdHeader3 : (string)null;
            }
        }

        /// <summary>Creates an new <see cref="UploadBatchServiceLogsResult" /> instance.</summary>
        public UploadBatchServiceLogsResult()
        {

        }
    }
    /// The result of uploading Batch service log files from a specific Compute Node.
    public partial interface IUploadBatchServiceLogsResult :
        Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.IJsonSerializable
    {
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"",
        SerializedName = @"client-request-id",
        PossibleTypes = new [] { typeof(string) })]
        string ClientRequestId { get; set; }

        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"",
        SerializedName = @"ETag",
        PossibleTypes = new [] { typeof(string) })]
        string ETag { get; set; }

        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"",
        SerializedName = @"Last-Modified",
        PossibleTypes = new [] { typeof(string) })]
        string LastModified { get; set; }
        /// <summary>The number of log files which will be uploaded.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The number of log files which will be uploaded.",
        SerializedName = @"numberOfFilesUploaded",
        PossibleTypes = new [] { typeof(int) })]
        int NumberOfFilesUploaded { get; set; }

        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"",
        SerializedName = @"request-id",
        PossibleTypes = new [] { typeof(string) })]
        string RequestId { get; set; }
        /// <summary>
        /// The virtual directory within Azure Blob Storage container to which the Batch Service log file(s) will be uploaded. The
        /// virtual directory name is part of the blob name for each log file uploaded, and it is built based poolId, nodeId and a
        /// unique identifier.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The virtual directory within Azure Blob Storage container to which the Batch Service log file(s) will be uploaded. The virtual directory name is part of the blob name for each log file uploaded, and it is built based poolId, nodeId and a unique identifier.",
        SerializedName = @"virtualDirectoryName",
        PossibleTypes = new [] { typeof(string) })]
        string VirtualDirectoryName { get; set; }

    }
    /// The result of uploading Batch service log files from a specific Compute Node.
    internal partial interface IUploadBatchServiceLogsResultInternal

    {
        string ClientRequestId { get; set; }

        string ETag { get; set; }

        string LastModified { get; set; }
        /// <summary>The number of log files which will be uploaded.</summary>
        int NumberOfFilesUploaded { get; set; }

        string RequestId { get; set; }
        /// <summary>
        /// The virtual directory within Azure Blob Storage container to which the Batch Service log file(s) will be uploaded. The
        /// virtual directory name is part of the blob name for each log file uploaded, and it is built based poolId, nodeId and a
        /// unique identifier.
        /// </summary>
        string VirtualDirectoryName { get; set; }

    }
}