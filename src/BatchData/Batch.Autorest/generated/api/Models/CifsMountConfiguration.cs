// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Batch.Models
{
    using static Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.Extensions;

    /// <summary>Information used to connect to a CIFS file system.</summary>
    public partial class CifsMountConfiguration :
        Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.ICifsMountConfiguration,
        Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.ICifsMountConfigurationInternal
    {

        /// <summary>Backing field for <see cref="MountOption" /> property.</summary>
        private string _mountOption;

        /// <summary>
        /// Additional command line options to pass to the mount command. These are 'net use' options in Windows and 'mount' options
        /// in Linux.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Origin(Microsoft.Azure.PowerShell.Cmdlets.Batch.PropertyOrigin.Owned)]
        public string MountOption { get => this._mountOption; set => this._mountOption = value; }

        /// <summary>Backing field for <see cref="Password" /> property.</summary>
        private System.Security.SecureString _password;

        /// <summary>The password to use for authentication against the CIFS file system.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Origin(Microsoft.Azure.PowerShell.Cmdlets.Batch.PropertyOrigin.Owned)]
        public System.Security.SecureString Password { get => this._password; set => this._password = value; }

        /// <summary>Backing field for <see cref="RelativeMountPath" /> property.</summary>
        private string _relativeMountPath;

        /// <summary>
        /// The relative path on the compute node where the file system will be mounted. All file systems are mounted relative to
        /// the Batch mounts directory, accessible via the AZ_BATCH_NODE_MOUNTS_DIR environment variable.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Origin(Microsoft.Azure.PowerShell.Cmdlets.Batch.PropertyOrigin.Owned)]
        public string RelativeMountPath { get => this._relativeMountPath; set => this._relativeMountPath = value; }

        /// <summary>Backing field for <see cref="Source" /> property.</summary>
        private string _source;

        /// <summary>The URI of the file system to mount.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Origin(Microsoft.Azure.PowerShell.Cmdlets.Batch.PropertyOrigin.Owned)]
        public string Source { get => this._source; set => this._source = value; }

        /// <summary>Backing field for <see cref="Username" /> property.</summary>
        private string _username;

        /// <summary>The user to use for authentication against the CIFS file system.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Origin(Microsoft.Azure.PowerShell.Cmdlets.Batch.PropertyOrigin.Owned)]
        public string Username { get => this._username; set => this._username = value; }

        /// <summary>Creates an new <see cref="CifsMountConfiguration" /> instance.</summary>
        public CifsMountConfiguration()
        {

        }
    }
    /// Information used to connect to a CIFS file system.
    public partial interface ICifsMountConfiguration :
        Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.IJsonSerializable
    {
        /// <summary>
        /// Additional command line options to pass to the mount command. These are 'net use' options in Windows and 'mount' options
        /// in Linux.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Additional command line options to pass to the mount command. These are 'net use' options in Windows and 'mount' options in Linux.",
        SerializedName = @"mountOptions",
        PossibleTypes = new [] { typeof(string) })]
        string MountOption { get; set; }
        /// <summary>The password to use for authentication against the CIFS file system.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The password to use for authentication against the CIFS file system.",
        SerializedName = @"password",
        PossibleTypes = new [] { typeof(System.Security.SecureString) })]
        System.Security.SecureString Password { get; set; }
        /// <summary>
        /// The relative path on the compute node where the file system will be mounted. All file systems are mounted relative to
        /// the Batch mounts directory, accessible via the AZ_BATCH_NODE_MOUNTS_DIR environment variable.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The relative path on the compute node where the file system will be mounted. All file systems are mounted relative to the Batch mounts directory, accessible via the AZ_BATCH_NODE_MOUNTS_DIR environment variable.",
        SerializedName = @"relativeMountPath",
        PossibleTypes = new [] { typeof(string) })]
        string RelativeMountPath { get; set; }
        /// <summary>The URI of the file system to mount.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The URI of the file system to mount.",
        SerializedName = @"source",
        PossibleTypes = new [] { typeof(string) })]
        string Source { get; set; }
        /// <summary>The user to use for authentication against the CIFS file system.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The user to use for authentication against the CIFS file system.",
        SerializedName = @"username",
        PossibleTypes = new [] { typeof(string) })]
        string Username { get; set; }

    }
    /// Information used to connect to a CIFS file system.
    internal partial interface ICifsMountConfigurationInternal

    {
        /// <summary>
        /// Additional command line options to pass to the mount command. These are 'net use' options in Windows and 'mount' options
        /// in Linux.
        /// </summary>
        string MountOption { get; set; }
        /// <summary>The password to use for authentication against the CIFS file system.</summary>
        System.Security.SecureString Password { get; set; }
        /// <summary>
        /// The relative path on the compute node where the file system will be mounted. All file systems are mounted relative to
        /// the Batch mounts directory, accessible via the AZ_BATCH_NODE_MOUNTS_DIR environment variable.
        /// </summary>
        string RelativeMountPath { get; set; }
        /// <summary>The URI of the file system to mount.</summary>
        string Source { get; set; }
        /// <summary>The user to use for authentication against the CIFS file system.</summary>
        string Username { get; set; }

    }
}