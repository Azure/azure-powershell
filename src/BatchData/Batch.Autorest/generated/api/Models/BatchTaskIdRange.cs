// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Batch.Models
{
    using static Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.Extensions;

    /// <summary>
    /// The start and end of the range are inclusive. For example, if a range has start
    /// 9 and end 12, then it represents Tasks '9', '10', '11' and '12'.
    /// </summary>
    public partial class BatchTaskIdRange :
        Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchTaskIdRange,
        Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchTaskIdRangeInternal
    {

        /// <summary>Backing field for <see cref="End" /> property.</summary>
        private int _end;

        /// <summary>The last Task ID in the range.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Origin(Microsoft.Azure.PowerShell.Cmdlets.Batch.PropertyOrigin.Owned)]
        public int End { get => this._end; set => this._end = value; }

        /// <summary>Backing field for <see cref="Start" /> property.</summary>
        private int _start;

        /// <summary>The first Task ID in the range.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Origin(Microsoft.Azure.PowerShell.Cmdlets.Batch.PropertyOrigin.Owned)]
        public int Start { get => this._start; set => this._start = value; }

        /// <summary>Creates an new <see cref="BatchTaskIdRange" /> instance.</summary>
        public BatchTaskIdRange()
        {

        }
    }
    /// The start and end of the range are inclusive. For example, if a range has start
    /// 9 and end 12, then it represents Tasks '9', '10', '11' and '12'.
    public partial interface IBatchTaskIdRange :
        Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.IJsonSerializable
    {
        /// <summary>The last Task ID in the range.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The last Task ID in the range.",
        SerializedName = @"end",
        PossibleTypes = new [] { typeof(int) })]
        int End { get; set; }
        /// <summary>The first Task ID in the range.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The first Task ID in the range.",
        SerializedName = @"start",
        PossibleTypes = new [] { typeof(int) })]
        int Start { get; set; }

    }
    /// The start and end of the range are inclusive. For example, if a range has start
    /// 9 and end 12, then it represents Tasks '9', '10', '11' and '12'.
    internal partial interface IBatchTaskIdRangeInternal

    {
        /// <summary>The last Task ID in the range.</summary>
        int End { get; set; }
        /// <summary>The first Task ID in the range.</summary>
        int Start { get; set; }

    }
}