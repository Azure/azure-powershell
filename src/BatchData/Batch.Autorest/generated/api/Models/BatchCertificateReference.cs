// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Batch.Models
{
    using static Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.Extensions;

    /// <summary>
    /// A reference to a Certificate to be installed on Compute Nodes in a Pool. Warning: This object is deprecated and will be
    /// removed after February, 2024. Please use the [Azure KeyVault Extension](https://learn.microsoft.com/azure/batch/batch-certificate-migration-guide)
    /// instead.
    /// </summary>
    public partial class BatchCertificateReference :
        Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchCertificateReference,
        Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchCertificateReferenceInternal
    {

        /// <summary>Backing field for <see cref="StoreLocation" /> property.</summary>
        private string _storeLocation;

        /// <summary>
        /// The location of the Certificate store on the Compute Node into which to install the Certificate. The default value is
        /// currentuser. This property is applicable only for Pools configured with Windows Compute Nodes (that is, created with cloudServiceConfiguration,
        /// or with virtualMachineConfiguration using a Windows Image reference). For Linux Compute Nodes, the Certificates are stored
        /// in a directory inside the Task working directory and an environment variable AZ_BATCH_CERTIFICATES_DIR is supplied to
        /// the Task to query for this location. For Certificates with visibility of 'remoteUser', a 'certs' directory is created
        /// in the user's home directory (e.g., /home/{user-name}/certs) and Certificates are placed in that directory.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Origin(Microsoft.Azure.PowerShell.Cmdlets.Batch.PropertyOrigin.Owned)]
        public string StoreLocation { get => this._storeLocation; set => this._storeLocation = value; }

        /// <summary>Backing field for <see cref="StoreName" /> property.</summary>
        private string _storeName;

        /// <summary>
        /// The name of the Certificate store on the Compute Node into which to install the Certificate. This property is applicable
        /// only for Pools configured with Windows Compute Nodes (that is, created with cloudServiceConfiguration, or with virtualMachineConfiguration
        /// using a Windows Image reference). Common store names include: My, Root, CA, Trust, Disallowed, TrustedPeople, TrustedPublisher,
        /// AuthRoot, AddressBook, but any custom store name can also be used. The default value is My.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Origin(Microsoft.Azure.PowerShell.Cmdlets.Batch.PropertyOrigin.Owned)]
        public string StoreName { get => this._storeName; set => this._storeName = value; }

        /// <summary>Backing field for <see cref="Thumbprint" /> property.</summary>
        private string _thumbprint;

        /// <summary>The thumbprint of the Certificate.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Origin(Microsoft.Azure.PowerShell.Cmdlets.Batch.PropertyOrigin.Owned)]
        public string Thumbprint { get => this._thumbprint; set => this._thumbprint = value; }

        /// <summary>Backing field for <see cref="ThumbprintAlgorithm" /> property.</summary>
        private string _thumbprintAlgorithm;

        /// <summary>The algorithm with which the thumbprint is associated. This must be sha1.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Origin(Microsoft.Azure.PowerShell.Cmdlets.Batch.PropertyOrigin.Owned)]
        public string ThumbprintAlgorithm { get => this._thumbprintAlgorithm; set => this._thumbprintAlgorithm = value; }

        /// <summary>Backing field for <see cref="Visibility" /> property.</summary>
        private System.Collections.Generic.List<string> _visibility;

        /// <summary>
        /// Which user Accounts on the Compute Node should have access to the private data of the Certificate. You can specify more
        /// than one visibility in this collection. The default is all Accounts.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Origin(Microsoft.Azure.PowerShell.Cmdlets.Batch.PropertyOrigin.Owned)]
        public System.Collections.Generic.List<string> Visibility { get => this._visibility; set => this._visibility = value; }

        /// <summary>Creates an new <see cref="BatchCertificateReference" /> instance.</summary>
        public BatchCertificateReference()
        {

        }
    }
    /// A reference to a Certificate to be installed on Compute Nodes in a Pool. Warning: This object is deprecated and will be
    /// removed after February, 2024. Please use the [Azure KeyVault Extension](https://learn.microsoft.com/azure/batch/batch-certificate-migration-guide)
    /// instead.
    public partial interface IBatchCertificateReference :
        Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.IJsonSerializable
    {
        /// <summary>
        /// The location of the Certificate store on the Compute Node into which to install the Certificate. The default value is
        /// currentuser. This property is applicable only for Pools configured with Windows Compute Nodes (that is, created with cloudServiceConfiguration,
        /// or with virtualMachineConfiguration using a Windows Image reference). For Linux Compute Nodes, the Certificates are stored
        /// in a directory inside the Task working directory and an environment variable AZ_BATCH_CERTIFICATES_DIR is supplied to
        /// the Task to query for this location. For Certificates with visibility of 'remoteUser', a 'certs' directory is created
        /// in the user's home directory (e.g., /home/{user-name}/certs) and Certificates are placed in that directory.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The location of the Certificate store on the Compute Node into which to install the Certificate. The default value is currentuser. This property is applicable only for Pools configured with Windows Compute Nodes (that is, created with cloudServiceConfiguration, or with virtualMachineConfiguration using a Windows Image reference). For Linux Compute Nodes, the Certificates are stored in a directory inside the Task working directory and an environment variable AZ_BATCH_CERTIFICATES_DIR is supplied to the Task to query for this location. For Certificates with visibility of 'remoteUser', a 'certs' directory is created in the user's home directory (e.g., /home/{user-name}/certs) and Certificates are placed in that directory.",
        SerializedName = @"storeLocation",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.Batch.PSArgumentCompleterAttribute("currentuser", "localmachine")]
        string StoreLocation { get; set; }
        /// <summary>
        /// The name of the Certificate store on the Compute Node into which to install the Certificate. This property is applicable
        /// only for Pools configured with Windows Compute Nodes (that is, created with cloudServiceConfiguration, or with virtualMachineConfiguration
        /// using a Windows Image reference). Common store names include: My, Root, CA, Trust, Disallowed, TrustedPeople, TrustedPublisher,
        /// AuthRoot, AddressBook, but any custom store name can also be used. The default value is My.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The name of the Certificate store on the Compute Node into which to install the Certificate. This property is applicable only for Pools configured with Windows Compute Nodes (that is, created with cloudServiceConfiguration, or with virtualMachineConfiguration using a Windows Image reference). Common store names include: My, Root, CA, Trust, Disallowed, TrustedPeople, TrustedPublisher, AuthRoot, AddressBook, but any custom store name can also be used. The default value is My.",
        SerializedName = @"storeName",
        PossibleTypes = new [] { typeof(string) })]
        string StoreName { get; set; }
        /// <summary>The thumbprint of the Certificate.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The thumbprint of the Certificate.",
        SerializedName = @"thumbprint",
        PossibleTypes = new [] { typeof(string) })]
        string Thumbprint { get; set; }
        /// <summary>The algorithm with which the thumbprint is associated. This must be sha1.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The algorithm with which the thumbprint is associated. This must be sha1.",
        SerializedName = @"thumbprintAlgorithm",
        PossibleTypes = new [] { typeof(string) })]
        string ThumbprintAlgorithm { get; set; }
        /// <summary>
        /// Which user Accounts on the Compute Node should have access to the private data of the Certificate. You can specify more
        /// than one visibility in this collection. The default is all Accounts.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Which user Accounts on the Compute Node should have access to the private data of the Certificate. You can specify more than one visibility in this collection. The default is all Accounts.",
        SerializedName = @"visibility",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.Batch.PSArgumentCompleterAttribute("starttask", "task", "remoteuser")]
        System.Collections.Generic.List<string> Visibility { get; set; }

    }
    /// A reference to a Certificate to be installed on Compute Nodes in a Pool. Warning: This object is deprecated and will be
    /// removed after February, 2024. Please use the [Azure KeyVault Extension](https://learn.microsoft.com/azure/batch/batch-certificate-migration-guide)
    /// instead.
    internal partial interface IBatchCertificateReferenceInternal

    {
        /// <summary>
        /// The location of the Certificate store on the Compute Node into which to install the Certificate. The default value is
        /// currentuser. This property is applicable only for Pools configured with Windows Compute Nodes (that is, created with cloudServiceConfiguration,
        /// or with virtualMachineConfiguration using a Windows Image reference). For Linux Compute Nodes, the Certificates are stored
        /// in a directory inside the Task working directory and an environment variable AZ_BATCH_CERTIFICATES_DIR is supplied to
        /// the Task to query for this location. For Certificates with visibility of 'remoteUser', a 'certs' directory is created
        /// in the user's home directory (e.g., /home/{user-name}/certs) and Certificates are placed in that directory.
        /// </summary>
        [global::Microsoft.Azure.PowerShell.Cmdlets.Batch.PSArgumentCompleterAttribute("currentuser", "localmachine")]
        string StoreLocation { get; set; }
        /// <summary>
        /// The name of the Certificate store on the Compute Node into which to install the Certificate. This property is applicable
        /// only for Pools configured with Windows Compute Nodes (that is, created with cloudServiceConfiguration, or with virtualMachineConfiguration
        /// using a Windows Image reference). Common store names include: My, Root, CA, Trust, Disallowed, TrustedPeople, TrustedPublisher,
        /// AuthRoot, AddressBook, but any custom store name can also be used. The default value is My.
        /// </summary>
        string StoreName { get; set; }
        /// <summary>The thumbprint of the Certificate.</summary>
        string Thumbprint { get; set; }
        /// <summary>The algorithm with which the thumbprint is associated. This must be sha1.</summary>
        string ThumbprintAlgorithm { get; set; }
        /// <summary>
        /// Which user Accounts on the Compute Node should have access to the private data of the Certificate. You can specify more
        /// than one visibility in this collection. The default is all Accounts.
        /// </summary>
        [global::Microsoft.Azure.PowerShell.Cmdlets.Batch.PSArgumentCompleterAttribute("starttask", "task", "remoteuser")]
        System.Collections.Generic.List<string> Visibility { get; set; }

    }
}