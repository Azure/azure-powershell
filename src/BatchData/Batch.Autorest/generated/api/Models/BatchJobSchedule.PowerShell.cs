// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Batch.Models
{
    using Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.PowerShell;

    /// <summary>
    /// A Job Schedule that allows recurring Jobs by specifying when to run Jobs and a
    /// specification used to create each Job.
    /// </summary>
    [System.ComponentModel.TypeConverter(typeof(BatchJobScheduleTypeConverter))]
    public partial class BatchJobSchedule
    {

        /// <summary>
        /// <c>AfterDeserializeDictionary</c> will be called after the deserialization has finished, allowing customization of the
        /// object before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>

        partial void AfterDeserializeDictionary(global::System.Collections.IDictionary content);

        /// <summary>
        /// <c>AfterDeserializePSObject</c> will be called after the deserialization has finished, allowing customization of the object
        /// before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>

        partial void AfterDeserializePSObject(global::System.Management.Automation.PSObject content);

        /// <summary>
        /// <c>BeforeDeserializeDictionary</c> will be called before the deserialization has commenced, allowing complete customization
        /// of the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <paramref name="returnNow" /> output
        /// parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeDeserializeDictionary(global::System.Collections.IDictionary content, ref bool returnNow);

        /// <summary>
        /// <c>BeforeDeserializePSObject</c> will be called before the deserialization has commenced, allowing complete customization
        /// of the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <paramref name="returnNow" /> output
        /// parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeDeserializePSObject(global::System.Management.Automation.PSObject content, ref bool returnNow);

        /// <summary>
        /// <c>OverrideToString</c> will be called if it is implemented. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="stringResult">/// instance serialized to a string, normally it is a Json</param>
        /// <param name="returnNow">/// set returnNow to true if you provide a customized OverrideToString function</param>

        partial void OverrideToString(ref string stringResult, ref bool returnNow);

        /// <summary>
        /// Deserializes a <see cref="global::System.Collections.IDictionary" /> into a new instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.BatchJobSchedule"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        internal BatchJobSchedule(global::System.Collections.IDictionary content)
        {
            bool returnNow = false;
            BeforeDeserializeDictionary(content, ref returnNow);
            if (returnNow)
            {
                return;
            }
            // actually deserialize
            if (content.Contains("Schedule"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchJobScheduleInternal)this).Schedule = (Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchJobScheduleConfiguration) content.GetValueForProperty("Schedule",((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchJobScheduleInternal)this).Schedule, Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.BatchJobScheduleConfigurationTypeConverter.ConvertFrom);
            }
            if (content.Contains("ExecutionInfo"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchJobScheduleInternal)this).ExecutionInfo = (Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchJobScheduleExecutionInfo) content.GetValueForProperty("ExecutionInfo",((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchJobScheduleInternal)this).ExecutionInfo, Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.BatchJobScheduleExecutionInfoTypeConverter.ConvertFrom);
            }
            if (content.Contains("JobScheduleStatistics"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchJobScheduleInternal)this).JobScheduleStatistics = (Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchJobScheduleStatistics) content.GetValueForProperty("JobScheduleStatistics",((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchJobScheduleInternal)this).JobScheduleStatistics, Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.BatchJobScheduleStatisticsTypeConverter.ConvertFrom);
            }
            if (content.Contains("Id"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchJobScheduleInternal)this).Id = (string) content.GetValueForProperty("Id",((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchJobScheduleInternal)this).Id, global::System.Convert.ToString);
            }
            if (content.Contains("DisplayName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchJobScheduleInternal)this).DisplayName = (string) content.GetValueForProperty("DisplayName",((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchJobScheduleInternal)this).DisplayName, global::System.Convert.ToString);
            }
            if (content.Contains("Url"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchJobScheduleInternal)this).Url = (string) content.GetValueForProperty("Url",((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchJobScheduleInternal)this).Url, global::System.Convert.ToString);
            }
            if (content.Contains("ETag"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchJobScheduleInternal)this).ETag = (string) content.GetValueForProperty("ETag",((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchJobScheduleInternal)this).ETag, global::System.Convert.ToString);
            }
            if (content.Contains("LastModified"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchJobScheduleInternal)this).LastModified = (global::System.DateTime?) content.GetValueForProperty("LastModified",((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchJobScheduleInternal)this).LastModified, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            if (content.Contains("CreationTime"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchJobScheduleInternal)this).CreationTime = (global::System.DateTime?) content.GetValueForProperty("CreationTime",((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchJobScheduleInternal)this).CreationTime, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            if (content.Contains("State"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchJobScheduleInternal)this).State = (string) content.GetValueForProperty("State",((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchJobScheduleInternal)this).State, global::System.Convert.ToString);
            }
            if (content.Contains("StateTransitionTime"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchJobScheduleInternal)this).StateTransitionTime = (global::System.DateTime?) content.GetValueForProperty("StateTransitionTime",((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchJobScheduleInternal)this).StateTransitionTime, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            if (content.Contains("PreviousState"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchJobScheduleInternal)this).PreviousState = (string) content.GetValueForProperty("PreviousState",((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchJobScheduleInternal)this).PreviousState, global::System.Convert.ToString);
            }
            if (content.Contains("PreviousStateTransitionTime"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchJobScheduleInternal)this).PreviousStateTransitionTime = (global::System.DateTime?) content.GetValueForProperty("PreviousStateTransitionTime",((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchJobScheduleInternal)this).PreviousStateTransitionTime, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            if (content.Contains("Metadata"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchJobScheduleInternal)this).Metadata = (System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchMetadataItem>) content.GetValueForProperty("Metadata",((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchJobScheduleInternal)this).Metadata, __y => TypeConverterExtensions.SelectToList<Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchMetadataItem>(__y, Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.BatchMetadataItemTypeConverter.ConvertFrom));
            }
            if (content.Contains("ETag1"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchJobScheduleInternal)this).ETag1 = (string) content.GetValueForProperty("ETag1",((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchJobScheduleInternal)this).ETag1, global::System.Convert.ToString);
            }
            if (content.Contains("LastModified1"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchJobScheduleInternal)this).LastModified1 = (string) content.GetValueForProperty("LastModified1",((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchJobScheduleInternal)this).LastModified1, global::System.Convert.ToString);
            }
            if (content.Contains("ClientRequestId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchJobScheduleInternal)this).ClientRequestId = (string) content.GetValueForProperty("ClientRequestId",((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchJobScheduleInternal)this).ClientRequestId, global::System.Convert.ToString);
            }
            if (content.Contains("RequestId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchJobScheduleInternal)this).RequestId = (string) content.GetValueForProperty("RequestId",((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchJobScheduleInternal)this).RequestId, global::System.Convert.ToString);
            }
            if (content.Contains("JobSpecification"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchJobScheduleInternal)this).JobSpecification = (Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchJobSpecification) content.GetValueForProperty("JobSpecification",((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchJobScheduleInternal)this).JobSpecification, Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.BatchJobSpecificationTypeConverter.ConvertFrom);
            }
            if (content.Contains("ScheduleDoNotRunUntil"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchJobScheduleInternal)this).ScheduleDoNotRunUntil = (global::System.DateTime?) content.GetValueForProperty("ScheduleDoNotRunUntil",((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchJobScheduleInternal)this).ScheduleDoNotRunUntil, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            if (content.Contains("ScheduleDoNotRunAfter"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchJobScheduleInternal)this).ScheduleDoNotRunAfter = (global::System.DateTime?) content.GetValueForProperty("ScheduleDoNotRunAfter",((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchJobScheduleInternal)this).ScheduleDoNotRunAfter, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            if (content.Contains("ScheduleStartWindow"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchJobScheduleInternal)this).ScheduleStartWindow = (global::System.TimeSpan?) content.GetValueForProperty("ScheduleStartWindow",((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchJobScheduleInternal)this).ScheduleStartWindow, (v) => v is global::System.TimeSpan _v ? _v : global::System.Xml.XmlConvert.ToTimeSpan( v.ToString() ));
            }
            if (content.Contains("ScheduleRecurrenceInterval"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchJobScheduleInternal)this).ScheduleRecurrenceInterval = (global::System.TimeSpan?) content.GetValueForProperty("ScheduleRecurrenceInterval",((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchJobScheduleInternal)this).ScheduleRecurrenceInterval, (v) => v is global::System.TimeSpan _v ? _v : global::System.Xml.XmlConvert.ToTimeSpan( v.ToString() ));
            }
            if (content.Contains("ExecutionInfoRecentJob"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchJobScheduleInternal)this).ExecutionInfoRecentJob = (Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IRecentBatchJob) content.GetValueForProperty("ExecutionInfoRecentJob",((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchJobScheduleInternal)this).ExecutionInfoRecentJob, Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.RecentBatchJobTypeConverter.ConvertFrom);
            }
            if (content.Contains("ExecutionInfoNextRunTime"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchJobScheduleInternal)this).ExecutionInfoNextRunTime = (global::System.DateTime?) content.GetValueForProperty("ExecutionInfoNextRunTime",((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchJobScheduleInternal)this).ExecutionInfoNextRunTime, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            if (content.Contains("ExecutionInfoEndTime"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchJobScheduleInternal)this).ExecutionInfoEndTime = (global::System.DateTime?) content.GetValueForProperty("ExecutionInfoEndTime",((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchJobScheduleInternal)this).ExecutionInfoEndTime, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            if (content.Contains("JobScheduleStatisticsUrl"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchJobScheduleInternal)this).JobScheduleStatisticsUrl = (string) content.GetValueForProperty("JobScheduleStatisticsUrl",((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchJobScheduleInternal)this).JobScheduleStatisticsUrl, global::System.Convert.ToString);
            }
            if (content.Contains("JobScheduleStatisticsStartTime"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchJobScheduleInternal)this).JobScheduleStatisticsStartTime = (global::System.DateTime?) content.GetValueForProperty("JobScheduleStatisticsStartTime",((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchJobScheduleInternal)this).JobScheduleStatisticsStartTime, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            if (content.Contains("JobScheduleStatisticsLastUpdateTime"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchJobScheduleInternal)this).JobScheduleStatisticsLastUpdateTime = (global::System.DateTime?) content.GetValueForProperty("JobScheduleStatisticsLastUpdateTime",((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchJobScheduleInternal)this).JobScheduleStatisticsLastUpdateTime, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            if (content.Contains("JobScheduleStatisticsUserCpuTime"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchJobScheduleInternal)this).JobScheduleStatisticsUserCpuTime = (global::System.TimeSpan?) content.GetValueForProperty("JobScheduleStatisticsUserCpuTime",((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchJobScheduleInternal)this).JobScheduleStatisticsUserCpuTime, (v) => v is global::System.TimeSpan _v ? _v : global::System.Xml.XmlConvert.ToTimeSpan( v.ToString() ));
            }
            if (content.Contains("JobScheduleStatisticsKernelCpuTime"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchJobScheduleInternal)this).JobScheduleStatisticsKernelCpuTime = (global::System.TimeSpan?) content.GetValueForProperty("JobScheduleStatisticsKernelCpuTime",((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchJobScheduleInternal)this).JobScheduleStatisticsKernelCpuTime, (v) => v is global::System.TimeSpan _v ? _v : global::System.Xml.XmlConvert.ToTimeSpan( v.ToString() ));
            }
            if (content.Contains("JobScheduleStatisticsWallClockTime"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchJobScheduleInternal)this).JobScheduleStatisticsWallClockTime = (global::System.TimeSpan?) content.GetValueForProperty("JobScheduleStatisticsWallClockTime",((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchJobScheduleInternal)this).JobScheduleStatisticsWallClockTime, (v) => v is global::System.TimeSpan _v ? _v : global::System.Xml.XmlConvert.ToTimeSpan( v.ToString() ));
            }
            if (content.Contains("JobScheduleStatisticsReadIop"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchJobScheduleInternal)this).JobScheduleStatisticsReadIop = (string) content.GetValueForProperty("JobScheduleStatisticsReadIop",((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchJobScheduleInternal)this).JobScheduleStatisticsReadIop, global::System.Convert.ToString);
            }
            if (content.Contains("JobScheduleStatisticsWriteIop"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchJobScheduleInternal)this).JobScheduleStatisticsWriteIop = (string) content.GetValueForProperty("JobScheduleStatisticsWriteIop",((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchJobScheduleInternal)this).JobScheduleStatisticsWriteIop, global::System.Convert.ToString);
            }
            if (content.Contains("JobScheduleStatisticsReadIoGiB"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchJobScheduleInternal)this).JobScheduleStatisticsReadIoGiB = (float?) content.GetValueForProperty("JobScheduleStatisticsReadIoGiB",((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchJobScheduleInternal)this).JobScheduleStatisticsReadIoGiB, (__y)=> (float) global::System.Convert.ChangeType(__y, typeof(float)));
            }
            if (content.Contains("JobScheduleStatisticsWriteIoGiB"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchJobScheduleInternal)this).JobScheduleStatisticsWriteIoGiB = (float?) content.GetValueForProperty("JobScheduleStatisticsWriteIoGiB",((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchJobScheduleInternal)this).JobScheduleStatisticsWriteIoGiB, (__y)=> (float) global::System.Convert.ChangeType(__y, typeof(float)));
            }
            if (content.Contains("JobScheduleStatisticsSucceededTasksCount"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchJobScheduleInternal)this).JobScheduleStatisticsSucceededTasksCount = (string) content.GetValueForProperty("JobScheduleStatisticsSucceededTasksCount",((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchJobScheduleInternal)this).JobScheduleStatisticsSucceededTasksCount, global::System.Convert.ToString);
            }
            if (content.Contains("JobScheduleStatisticsFailedTasksCount"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchJobScheduleInternal)this).JobScheduleStatisticsFailedTasksCount = (string) content.GetValueForProperty("JobScheduleStatisticsFailedTasksCount",((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchJobScheduleInternal)this).JobScheduleStatisticsFailedTasksCount, global::System.Convert.ToString);
            }
            if (content.Contains("JobScheduleStatisticsTaskRetriesCount"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchJobScheduleInternal)this).JobScheduleStatisticsTaskRetriesCount = (string) content.GetValueForProperty("JobScheduleStatisticsTaskRetriesCount",((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchJobScheduleInternal)this).JobScheduleStatisticsTaskRetriesCount, global::System.Convert.ToString);
            }
            if (content.Contains("JobScheduleStatisticsWaitTime"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchJobScheduleInternal)this).JobScheduleStatisticsWaitTime = (global::System.TimeSpan?) content.GetValueForProperty("JobScheduleStatisticsWaitTime",((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchJobScheduleInternal)this).JobScheduleStatisticsWaitTime, (v) => v is global::System.TimeSpan _v ? _v : global::System.Xml.XmlConvert.ToTimeSpan( v.ToString() ));
            }
            if (content.Contains("RecentJobId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchJobScheduleInternal)this).RecentJobId = (string) content.GetValueForProperty("RecentJobId",((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchJobScheduleInternal)this).RecentJobId, global::System.Convert.ToString);
            }
            if (content.Contains("RecentJobUrl"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchJobScheduleInternal)this).RecentJobUrl = (string) content.GetValueForProperty("RecentJobUrl",((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchJobScheduleInternal)this).RecentJobUrl, global::System.Convert.ToString);
            }
            AfterDeserializeDictionary(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Management.Automation.PSObject" /> into a new instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.BatchJobSchedule"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        internal BatchJobSchedule(global::System.Management.Automation.PSObject content)
        {
            bool returnNow = false;
            BeforeDeserializePSObject(content, ref returnNow);
            if (returnNow)
            {
                return;
            }
            // actually deserialize
            if (content.Contains("Schedule"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchJobScheduleInternal)this).Schedule = (Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchJobScheduleConfiguration) content.GetValueForProperty("Schedule",((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchJobScheduleInternal)this).Schedule, Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.BatchJobScheduleConfigurationTypeConverter.ConvertFrom);
            }
            if (content.Contains("ExecutionInfo"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchJobScheduleInternal)this).ExecutionInfo = (Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchJobScheduleExecutionInfo) content.GetValueForProperty("ExecutionInfo",((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchJobScheduleInternal)this).ExecutionInfo, Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.BatchJobScheduleExecutionInfoTypeConverter.ConvertFrom);
            }
            if (content.Contains("JobScheduleStatistics"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchJobScheduleInternal)this).JobScheduleStatistics = (Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchJobScheduleStatistics) content.GetValueForProperty("JobScheduleStatistics",((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchJobScheduleInternal)this).JobScheduleStatistics, Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.BatchJobScheduleStatisticsTypeConverter.ConvertFrom);
            }
            if (content.Contains("Id"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchJobScheduleInternal)this).Id = (string) content.GetValueForProperty("Id",((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchJobScheduleInternal)this).Id, global::System.Convert.ToString);
            }
            if (content.Contains("DisplayName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchJobScheduleInternal)this).DisplayName = (string) content.GetValueForProperty("DisplayName",((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchJobScheduleInternal)this).DisplayName, global::System.Convert.ToString);
            }
            if (content.Contains("Url"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchJobScheduleInternal)this).Url = (string) content.GetValueForProperty("Url",((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchJobScheduleInternal)this).Url, global::System.Convert.ToString);
            }
            if (content.Contains("ETag"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchJobScheduleInternal)this).ETag = (string) content.GetValueForProperty("ETag",((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchJobScheduleInternal)this).ETag, global::System.Convert.ToString);
            }
            if (content.Contains("LastModified"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchJobScheduleInternal)this).LastModified = (global::System.DateTime?) content.GetValueForProperty("LastModified",((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchJobScheduleInternal)this).LastModified, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            if (content.Contains("CreationTime"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchJobScheduleInternal)this).CreationTime = (global::System.DateTime?) content.GetValueForProperty("CreationTime",((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchJobScheduleInternal)this).CreationTime, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            if (content.Contains("State"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchJobScheduleInternal)this).State = (string) content.GetValueForProperty("State",((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchJobScheduleInternal)this).State, global::System.Convert.ToString);
            }
            if (content.Contains("StateTransitionTime"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchJobScheduleInternal)this).StateTransitionTime = (global::System.DateTime?) content.GetValueForProperty("StateTransitionTime",((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchJobScheduleInternal)this).StateTransitionTime, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            if (content.Contains("PreviousState"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchJobScheduleInternal)this).PreviousState = (string) content.GetValueForProperty("PreviousState",((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchJobScheduleInternal)this).PreviousState, global::System.Convert.ToString);
            }
            if (content.Contains("PreviousStateTransitionTime"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchJobScheduleInternal)this).PreviousStateTransitionTime = (global::System.DateTime?) content.GetValueForProperty("PreviousStateTransitionTime",((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchJobScheduleInternal)this).PreviousStateTransitionTime, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            if (content.Contains("Metadata"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchJobScheduleInternal)this).Metadata = (System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchMetadataItem>) content.GetValueForProperty("Metadata",((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchJobScheduleInternal)this).Metadata, __y => TypeConverterExtensions.SelectToList<Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchMetadataItem>(__y, Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.BatchMetadataItemTypeConverter.ConvertFrom));
            }
            if (content.Contains("ETag1"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchJobScheduleInternal)this).ETag1 = (string) content.GetValueForProperty("ETag1",((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchJobScheduleInternal)this).ETag1, global::System.Convert.ToString);
            }
            if (content.Contains("LastModified1"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchJobScheduleInternal)this).LastModified1 = (string) content.GetValueForProperty("LastModified1",((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchJobScheduleInternal)this).LastModified1, global::System.Convert.ToString);
            }
            if (content.Contains("ClientRequestId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchJobScheduleInternal)this).ClientRequestId = (string) content.GetValueForProperty("ClientRequestId",((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchJobScheduleInternal)this).ClientRequestId, global::System.Convert.ToString);
            }
            if (content.Contains("RequestId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchJobScheduleInternal)this).RequestId = (string) content.GetValueForProperty("RequestId",((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchJobScheduleInternal)this).RequestId, global::System.Convert.ToString);
            }
            if (content.Contains("JobSpecification"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchJobScheduleInternal)this).JobSpecification = (Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchJobSpecification) content.GetValueForProperty("JobSpecification",((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchJobScheduleInternal)this).JobSpecification, Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.BatchJobSpecificationTypeConverter.ConvertFrom);
            }
            if (content.Contains("ScheduleDoNotRunUntil"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchJobScheduleInternal)this).ScheduleDoNotRunUntil = (global::System.DateTime?) content.GetValueForProperty("ScheduleDoNotRunUntil",((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchJobScheduleInternal)this).ScheduleDoNotRunUntil, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            if (content.Contains("ScheduleDoNotRunAfter"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchJobScheduleInternal)this).ScheduleDoNotRunAfter = (global::System.DateTime?) content.GetValueForProperty("ScheduleDoNotRunAfter",((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchJobScheduleInternal)this).ScheduleDoNotRunAfter, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            if (content.Contains("ScheduleStartWindow"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchJobScheduleInternal)this).ScheduleStartWindow = (global::System.TimeSpan?) content.GetValueForProperty("ScheduleStartWindow",((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchJobScheduleInternal)this).ScheduleStartWindow, (v) => v is global::System.TimeSpan _v ? _v : global::System.Xml.XmlConvert.ToTimeSpan( v.ToString() ));
            }
            if (content.Contains("ScheduleRecurrenceInterval"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchJobScheduleInternal)this).ScheduleRecurrenceInterval = (global::System.TimeSpan?) content.GetValueForProperty("ScheduleRecurrenceInterval",((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchJobScheduleInternal)this).ScheduleRecurrenceInterval, (v) => v is global::System.TimeSpan _v ? _v : global::System.Xml.XmlConvert.ToTimeSpan( v.ToString() ));
            }
            if (content.Contains("ExecutionInfoRecentJob"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchJobScheduleInternal)this).ExecutionInfoRecentJob = (Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IRecentBatchJob) content.GetValueForProperty("ExecutionInfoRecentJob",((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchJobScheduleInternal)this).ExecutionInfoRecentJob, Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.RecentBatchJobTypeConverter.ConvertFrom);
            }
            if (content.Contains("ExecutionInfoNextRunTime"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchJobScheduleInternal)this).ExecutionInfoNextRunTime = (global::System.DateTime?) content.GetValueForProperty("ExecutionInfoNextRunTime",((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchJobScheduleInternal)this).ExecutionInfoNextRunTime, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            if (content.Contains("ExecutionInfoEndTime"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchJobScheduleInternal)this).ExecutionInfoEndTime = (global::System.DateTime?) content.GetValueForProperty("ExecutionInfoEndTime",((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchJobScheduleInternal)this).ExecutionInfoEndTime, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            if (content.Contains("JobScheduleStatisticsUrl"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchJobScheduleInternal)this).JobScheduleStatisticsUrl = (string) content.GetValueForProperty("JobScheduleStatisticsUrl",((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchJobScheduleInternal)this).JobScheduleStatisticsUrl, global::System.Convert.ToString);
            }
            if (content.Contains("JobScheduleStatisticsStartTime"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchJobScheduleInternal)this).JobScheduleStatisticsStartTime = (global::System.DateTime?) content.GetValueForProperty("JobScheduleStatisticsStartTime",((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchJobScheduleInternal)this).JobScheduleStatisticsStartTime, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            if (content.Contains("JobScheduleStatisticsLastUpdateTime"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchJobScheduleInternal)this).JobScheduleStatisticsLastUpdateTime = (global::System.DateTime?) content.GetValueForProperty("JobScheduleStatisticsLastUpdateTime",((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchJobScheduleInternal)this).JobScheduleStatisticsLastUpdateTime, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            if (content.Contains("JobScheduleStatisticsUserCpuTime"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchJobScheduleInternal)this).JobScheduleStatisticsUserCpuTime = (global::System.TimeSpan?) content.GetValueForProperty("JobScheduleStatisticsUserCpuTime",((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchJobScheduleInternal)this).JobScheduleStatisticsUserCpuTime, (v) => v is global::System.TimeSpan _v ? _v : global::System.Xml.XmlConvert.ToTimeSpan( v.ToString() ));
            }
            if (content.Contains("JobScheduleStatisticsKernelCpuTime"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchJobScheduleInternal)this).JobScheduleStatisticsKernelCpuTime = (global::System.TimeSpan?) content.GetValueForProperty("JobScheduleStatisticsKernelCpuTime",((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchJobScheduleInternal)this).JobScheduleStatisticsKernelCpuTime, (v) => v is global::System.TimeSpan _v ? _v : global::System.Xml.XmlConvert.ToTimeSpan( v.ToString() ));
            }
            if (content.Contains("JobScheduleStatisticsWallClockTime"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchJobScheduleInternal)this).JobScheduleStatisticsWallClockTime = (global::System.TimeSpan?) content.GetValueForProperty("JobScheduleStatisticsWallClockTime",((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchJobScheduleInternal)this).JobScheduleStatisticsWallClockTime, (v) => v is global::System.TimeSpan _v ? _v : global::System.Xml.XmlConvert.ToTimeSpan( v.ToString() ));
            }
            if (content.Contains("JobScheduleStatisticsReadIop"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchJobScheduleInternal)this).JobScheduleStatisticsReadIop = (string) content.GetValueForProperty("JobScheduleStatisticsReadIop",((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchJobScheduleInternal)this).JobScheduleStatisticsReadIop, global::System.Convert.ToString);
            }
            if (content.Contains("JobScheduleStatisticsWriteIop"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchJobScheduleInternal)this).JobScheduleStatisticsWriteIop = (string) content.GetValueForProperty("JobScheduleStatisticsWriteIop",((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchJobScheduleInternal)this).JobScheduleStatisticsWriteIop, global::System.Convert.ToString);
            }
            if (content.Contains("JobScheduleStatisticsReadIoGiB"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchJobScheduleInternal)this).JobScheduleStatisticsReadIoGiB = (float?) content.GetValueForProperty("JobScheduleStatisticsReadIoGiB",((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchJobScheduleInternal)this).JobScheduleStatisticsReadIoGiB, (__y)=> (float) global::System.Convert.ChangeType(__y, typeof(float)));
            }
            if (content.Contains("JobScheduleStatisticsWriteIoGiB"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchJobScheduleInternal)this).JobScheduleStatisticsWriteIoGiB = (float?) content.GetValueForProperty("JobScheduleStatisticsWriteIoGiB",((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchJobScheduleInternal)this).JobScheduleStatisticsWriteIoGiB, (__y)=> (float) global::System.Convert.ChangeType(__y, typeof(float)));
            }
            if (content.Contains("JobScheduleStatisticsSucceededTasksCount"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchJobScheduleInternal)this).JobScheduleStatisticsSucceededTasksCount = (string) content.GetValueForProperty("JobScheduleStatisticsSucceededTasksCount",((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchJobScheduleInternal)this).JobScheduleStatisticsSucceededTasksCount, global::System.Convert.ToString);
            }
            if (content.Contains("JobScheduleStatisticsFailedTasksCount"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchJobScheduleInternal)this).JobScheduleStatisticsFailedTasksCount = (string) content.GetValueForProperty("JobScheduleStatisticsFailedTasksCount",((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchJobScheduleInternal)this).JobScheduleStatisticsFailedTasksCount, global::System.Convert.ToString);
            }
            if (content.Contains("JobScheduleStatisticsTaskRetriesCount"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchJobScheduleInternal)this).JobScheduleStatisticsTaskRetriesCount = (string) content.GetValueForProperty("JobScheduleStatisticsTaskRetriesCount",((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchJobScheduleInternal)this).JobScheduleStatisticsTaskRetriesCount, global::System.Convert.ToString);
            }
            if (content.Contains("JobScheduleStatisticsWaitTime"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchJobScheduleInternal)this).JobScheduleStatisticsWaitTime = (global::System.TimeSpan?) content.GetValueForProperty("JobScheduleStatisticsWaitTime",((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchJobScheduleInternal)this).JobScheduleStatisticsWaitTime, (v) => v is global::System.TimeSpan _v ? _v : global::System.Xml.XmlConvert.ToTimeSpan( v.ToString() ));
            }
            if (content.Contains("RecentJobId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchJobScheduleInternal)this).RecentJobId = (string) content.GetValueForProperty("RecentJobId",((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchJobScheduleInternal)this).RecentJobId, global::System.Convert.ToString);
            }
            if (content.Contains("RecentJobUrl"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchJobScheduleInternal)this).RecentJobUrl = (string) content.GetValueForProperty("RecentJobUrl",((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchJobScheduleInternal)this).RecentJobUrl, global::System.Convert.ToString);
            }
            AfterDeserializePSObject(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Collections.IDictionary" /> into an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.BatchJobSchedule"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        /// <returns>
        /// an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchJobSchedule" />.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchJobSchedule DeserializeFromDictionary(global::System.Collections.IDictionary content)
        {
            return new BatchJobSchedule(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Management.Automation.PSObject" /> into an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.BatchJobSchedule"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        /// <returns>
        /// an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchJobSchedule" />.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchJobSchedule DeserializeFromPSObject(global::System.Management.Automation.PSObject content)
        {
            return new BatchJobSchedule(content);
        }

        /// <summary>
        /// Creates a new instance of <see cref="BatchJobSchedule" />, deserializing the content from a json string.
        /// </summary>
        /// <param name="jsonText">a string containing a JSON serialized instance of this model.</param>
        /// <returns>an instance of the <see cref="BatchJobSchedule" /> model class.</returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchJobSchedule FromJsonString(string jsonText) => FromJson(Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.Json.JsonNode.Parse(jsonText));

        /// <summary>Serializes this instance to a json string.</summary>

        /// <returns>a <see cref="System.String" /> containing this model serialized to JSON text.</returns>
        public string ToJsonString() => ToJson(null, Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.SerializationMode.IncludeAll)?.ToString();

        public override string ToString()
        {
            var returnNow = false;
            var result = global::System.String.Empty;
            OverrideToString(ref result, ref returnNow);
            if (returnNow)
            {
                return result;
            }
            return ToJsonString();
        }
    }
    /// A Job Schedule that allows recurring Jobs by specifying when to run Jobs and a
    /// specification used to create each Job.
    [System.ComponentModel.TypeConverter(typeof(BatchJobScheduleTypeConverter))]
    public partial interface IBatchJobSchedule

    {

    }
}