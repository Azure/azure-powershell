// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Batch.Models
{
    using static Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.Extensions;

    /// <summary>Contains utilization and resource usage statistics for the lifetime of a Pool.</summary>
    public partial class BatchPoolStatistics :
        Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchPoolStatistics,
        Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchPoolStatisticsInternal
    {

        /// <summary>Backing field for <see cref="LastUpdateTime" /> property.</summary>
        private global::System.DateTime _lastUpdateTime;

        /// <summary>
        /// The time at which the statistics were last updated. All statistics are limited to the range between startTime and lastUpdateTime.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Origin(Microsoft.Azure.PowerShell.Cmdlets.Batch.PropertyOrigin.Owned)]
        public global::System.DateTime LastUpdateTime { get => this._lastUpdateTime; set => this._lastUpdateTime = value; }

        /// <summary>Internal Acessors for ResourceStatistics</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchPoolResourceStatistics Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchPoolStatisticsInternal.ResourceStatistics { get => (this._resourceStatistics = this._resourceStatistics ?? new Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.BatchPoolResourceStatistics()); set { {_resourceStatistics = value;} } }

        /// <summary>Internal Acessors for UsageStatistics</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchPoolUsageStatistics Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchPoolStatisticsInternal.UsageStatistics { get => (this._usageStatistics = this._usageStatistics ?? new Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.BatchPoolUsageStatistics()); set { {_usageStatistics = value;} } }

        /// <summary>Backing field for <see cref="ResourceStatistics" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchPoolResourceStatistics _resourceStatistics;

        /// <summary>Statistics related to resource consumption by Compute Nodes in the Pool.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Origin(Microsoft.Azure.PowerShell.Cmdlets.Batch.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchPoolResourceStatistics ResourceStatistics { get => (this._resourceStatistics = this._resourceStatistics ?? new Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.BatchPoolResourceStatistics()); set => this._resourceStatistics = value; }

        /// <summary>
        /// The average CPU usage across all Compute Nodes in the Pool (percentage per node).
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Origin(Microsoft.Azure.PowerShell.Cmdlets.Batch.PropertyOrigin.Inlined)]
        public float? ResourceStatisticsAvgCpuPercentage { get => ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchPoolResourceStatisticsInternal)ResourceStatistics).AvgCpuPercentage; set => ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchPoolResourceStatisticsInternal)ResourceStatistics).AvgCpuPercentage = value ?? default(float); }

        /// <summary>The average used disk space in GiB across all Compute Nodes in the Pool.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Origin(Microsoft.Azure.PowerShell.Cmdlets.Batch.PropertyOrigin.Inlined)]
        public float? ResourceStatisticsAvgDiskGiB { get => ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchPoolResourceStatisticsInternal)ResourceStatistics).AvgDiskGiB; set => ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchPoolResourceStatisticsInternal)ResourceStatistics).AvgDiskGiB = value ?? default(float); }

        /// <summary>The average memory usage in GiB across all Compute Nodes in the Pool.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Origin(Microsoft.Azure.PowerShell.Cmdlets.Batch.PropertyOrigin.Inlined)]
        public float? ResourceStatisticsAvgMemoryGiB { get => ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchPoolResourceStatisticsInternal)ResourceStatistics).AvgMemoryGiB; set => ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchPoolResourceStatisticsInternal)ResourceStatistics).AvgMemoryGiB = value ?? default(float); }

        /// <summary>
        /// The total amount of data in GiB of disk reads across all Compute Nodes in the Pool.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Origin(Microsoft.Azure.PowerShell.Cmdlets.Batch.PropertyOrigin.Inlined)]
        public float? ResourceStatisticsDiskReadGiB { get => ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchPoolResourceStatisticsInternal)ResourceStatistics).DiskReadGiB; set => ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchPoolResourceStatisticsInternal)ResourceStatistics).DiskReadGiB = value ?? default(float); }

        /// <summary>The total number of disk read operations across all Compute Nodes in the Pool.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Origin(Microsoft.Azure.PowerShell.Cmdlets.Batch.PropertyOrigin.Inlined)]
        public string ResourceStatisticsDiskReadIop { get => ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchPoolResourceStatisticsInternal)ResourceStatistics).DiskReadIop; set => ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchPoolResourceStatisticsInternal)ResourceStatistics).DiskReadIop = value ?? null; }

        /// <summary>
        /// The total amount of data in GiB of disk writes across all Compute Nodes in the Pool.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Origin(Microsoft.Azure.PowerShell.Cmdlets.Batch.PropertyOrigin.Inlined)]
        public float? ResourceStatisticsDiskWriteGiB { get => ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchPoolResourceStatisticsInternal)ResourceStatistics).DiskWriteGiB; set => ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchPoolResourceStatisticsInternal)ResourceStatistics).DiskWriteGiB = value ?? default(float); }

        /// <summary>The total number of disk write operations across all Compute Nodes in the Pool.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Origin(Microsoft.Azure.PowerShell.Cmdlets.Batch.PropertyOrigin.Inlined)]
        public string ResourceStatisticsDiskWriteIop { get => ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchPoolResourceStatisticsInternal)ResourceStatistics).DiskWriteIop; set => ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchPoolResourceStatisticsInternal)ResourceStatistics).DiskWriteIop = value ?? null; }

        /// <summary>
        /// The time at which the statistics were last updated. All statistics are limited to the range between startTime and lastUpdateTime.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Origin(Microsoft.Azure.PowerShell.Cmdlets.Batch.PropertyOrigin.Inlined)]
        public global::System.DateTime? ResourceStatisticsLastUpdateTime { get => ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchPoolResourceStatisticsInternal)ResourceStatistics).LastUpdateTime; set => ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchPoolResourceStatisticsInternal)ResourceStatistics).LastUpdateTime = value ?? default(global::System.DateTime); }

        /// <summary>
        /// The total amount of data in GiB of network reads across all Compute Nodes in the Pool.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Origin(Microsoft.Azure.PowerShell.Cmdlets.Batch.PropertyOrigin.Inlined)]
        public float? ResourceStatisticsNetworkReadGiB { get => ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchPoolResourceStatisticsInternal)ResourceStatistics).NetworkReadGiB; set => ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchPoolResourceStatisticsInternal)ResourceStatistics).NetworkReadGiB = value ?? default(float); }

        /// <summary>
        /// The total amount of data in GiB of network writes across all Compute Nodes in the Pool.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Origin(Microsoft.Azure.PowerShell.Cmdlets.Batch.PropertyOrigin.Inlined)]
        public float? ResourceStatisticsNetworkWriteGiB { get => ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchPoolResourceStatisticsInternal)ResourceStatistics).NetworkWriteGiB; set => ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchPoolResourceStatisticsInternal)ResourceStatistics).NetworkWriteGiB = value ?? default(float); }

        /// <summary>The peak used disk space in GiB across all Compute Nodes in the Pool.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Origin(Microsoft.Azure.PowerShell.Cmdlets.Batch.PropertyOrigin.Inlined)]
        public float? ResourceStatisticsPeakDiskGiB { get => ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchPoolResourceStatisticsInternal)ResourceStatistics).PeakDiskGiB; set => ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchPoolResourceStatisticsInternal)ResourceStatistics).PeakDiskGiB = value ?? default(float); }

        /// <summary>The peak memory usage in GiB across all Compute Nodes in the Pool.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Origin(Microsoft.Azure.PowerShell.Cmdlets.Batch.PropertyOrigin.Inlined)]
        public float? ResourceStatisticsPeakMemoryGiB { get => ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchPoolResourceStatisticsInternal)ResourceStatistics).PeakMemoryGiB; set => ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchPoolResourceStatisticsInternal)ResourceStatistics).PeakMemoryGiB = value ?? default(float); }

        /// <summary>The start time of the time range covered by the statistics.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Origin(Microsoft.Azure.PowerShell.Cmdlets.Batch.PropertyOrigin.Inlined)]
        public global::System.DateTime? ResourceStatisticsStartTime { get => ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchPoolResourceStatisticsInternal)ResourceStatistics).StartTime; set => ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchPoolResourceStatisticsInternal)ResourceStatistics).StartTime = value ?? default(global::System.DateTime); }

        /// <summary>Backing field for <see cref="StartTime" /> property.</summary>
        private global::System.DateTime _startTime;

        /// <summary>The start time of the time range covered by the statistics.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Origin(Microsoft.Azure.PowerShell.Cmdlets.Batch.PropertyOrigin.Owned)]
        public global::System.DateTime StartTime { get => this._startTime; set => this._startTime = value; }

        /// <summary>Backing field for <see cref="Url" /> property.</summary>
        private string _url;

        /// <summary>The URL for the statistics.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Origin(Microsoft.Azure.PowerShell.Cmdlets.Batch.PropertyOrigin.Owned)]
        public string Url { get => this._url; set => this._url = value; }

        /// <summary>Backing field for <see cref="UsageStatistics" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchPoolUsageStatistics _usageStatistics;

        /// <summary>Statistics related to Pool usage, such as the amount of core-time used.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Origin(Microsoft.Azure.PowerShell.Cmdlets.Batch.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchPoolUsageStatistics UsageStatistics { get => (this._usageStatistics = this._usageStatistics ?? new Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.BatchPoolUsageStatistics()); set => this._usageStatistics = value; }

        /// <summary>
        /// The aggregated wall-clock time of the dedicated Compute Node cores being part of the Pool.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Origin(Microsoft.Azure.PowerShell.Cmdlets.Batch.PropertyOrigin.Inlined)]
        public global::System.TimeSpan? UsageStatisticsDedicatedCoreTime { get => ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchPoolUsageStatisticsInternal)UsageStatistics).DedicatedCoreTime; set => ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchPoolUsageStatisticsInternal)UsageStatistics).DedicatedCoreTime = value ?? default(global::System.TimeSpan); }

        /// <summary>
        /// The time at which the statistics were last updated. All statistics are limited to the range between startTime and lastUpdateTime.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Origin(Microsoft.Azure.PowerShell.Cmdlets.Batch.PropertyOrigin.Inlined)]
        public global::System.DateTime? UsageStatisticsLastUpdateTime { get => ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchPoolUsageStatisticsInternal)UsageStatistics).LastUpdateTime; set => ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchPoolUsageStatisticsInternal)UsageStatistics).LastUpdateTime = value ?? default(global::System.DateTime); }

        /// <summary>The start time of the time range covered by the statistics.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Origin(Microsoft.Azure.PowerShell.Cmdlets.Batch.PropertyOrigin.Inlined)]
        public global::System.DateTime? UsageStatisticsStartTime { get => ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchPoolUsageStatisticsInternal)UsageStatistics).StartTime; set => ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchPoolUsageStatisticsInternal)UsageStatistics).StartTime = value ?? default(global::System.DateTime); }

        /// <summary>Creates an new <see cref="BatchPoolStatistics" /> instance.</summary>
        public BatchPoolStatistics()
        {

        }
    }
    /// Contains utilization and resource usage statistics for the lifetime of a Pool.
    public partial interface IBatchPoolStatistics :
        Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.IJsonSerializable
    {
        /// <summary>
        /// The time at which the statistics were last updated. All statistics are limited to the range between startTime and lastUpdateTime.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The time at which the statistics were last updated. All statistics are limited to the range between startTime and lastUpdateTime.",
        SerializedName = @"lastUpdateTime",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime LastUpdateTime { get; set; }
        /// <summary>
        /// The average CPU usage across all Compute Nodes in the Pool (percentage per node).
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The average CPU usage across all Compute Nodes in the Pool (percentage per node).",
        SerializedName = @"avgCPUPercentage",
        PossibleTypes = new [] { typeof(float) })]
        float? ResourceStatisticsAvgCpuPercentage { get; set; }
        /// <summary>The average used disk space in GiB across all Compute Nodes in the Pool.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The average used disk space in GiB across all Compute Nodes in the Pool.",
        SerializedName = @"avgDiskGiB",
        PossibleTypes = new [] { typeof(float) })]
        float? ResourceStatisticsAvgDiskGiB { get; set; }
        /// <summary>The average memory usage in GiB across all Compute Nodes in the Pool.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The average memory usage in GiB across all Compute Nodes in the Pool.",
        SerializedName = @"avgMemoryGiB",
        PossibleTypes = new [] { typeof(float) })]
        float? ResourceStatisticsAvgMemoryGiB { get; set; }
        /// <summary>
        /// The total amount of data in GiB of disk reads across all Compute Nodes in the Pool.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The total amount of data in GiB of disk reads across all Compute Nodes in the Pool.",
        SerializedName = @"diskReadGiB",
        PossibleTypes = new [] { typeof(float) })]
        float? ResourceStatisticsDiskReadGiB { get; set; }
        /// <summary>The total number of disk read operations across all Compute Nodes in the Pool.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The total number of disk read operations across all Compute Nodes in the Pool.",
        SerializedName = @"diskReadIOps",
        PossibleTypes = new [] { typeof(string) })]
        string ResourceStatisticsDiskReadIop { get; set; }
        /// <summary>
        /// The total amount of data in GiB of disk writes across all Compute Nodes in the Pool.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The total amount of data in GiB of disk writes across all Compute Nodes in the Pool.",
        SerializedName = @"diskWriteGiB",
        PossibleTypes = new [] { typeof(float) })]
        float? ResourceStatisticsDiskWriteGiB { get; set; }
        /// <summary>The total number of disk write operations across all Compute Nodes in the Pool.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The total number of disk write operations across all Compute Nodes in the Pool.",
        SerializedName = @"diskWriteIOps",
        PossibleTypes = new [] { typeof(string) })]
        string ResourceStatisticsDiskWriteIop { get; set; }
        /// <summary>
        /// The time at which the statistics were last updated. All statistics are limited to the range between startTime and lastUpdateTime.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The time at which the statistics were last updated. All statistics are limited to the range between startTime and lastUpdateTime.",
        SerializedName = @"lastUpdateTime",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? ResourceStatisticsLastUpdateTime { get; set; }
        /// <summary>
        /// The total amount of data in GiB of network reads across all Compute Nodes in the Pool.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The total amount of data in GiB of network reads across all Compute Nodes in the Pool.",
        SerializedName = @"networkReadGiB",
        PossibleTypes = new [] { typeof(float) })]
        float? ResourceStatisticsNetworkReadGiB { get; set; }
        /// <summary>
        /// The total amount of data in GiB of network writes across all Compute Nodes in the Pool.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The total amount of data in GiB of network writes across all Compute Nodes in the Pool.",
        SerializedName = @"networkWriteGiB",
        PossibleTypes = new [] { typeof(float) })]
        float? ResourceStatisticsNetworkWriteGiB { get; set; }
        /// <summary>The peak used disk space in GiB across all Compute Nodes in the Pool.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The peak used disk space in GiB across all Compute Nodes in the Pool.",
        SerializedName = @"peakDiskGiB",
        PossibleTypes = new [] { typeof(float) })]
        float? ResourceStatisticsPeakDiskGiB { get; set; }
        /// <summary>The peak memory usage in GiB across all Compute Nodes in the Pool.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The peak memory usage in GiB across all Compute Nodes in the Pool.",
        SerializedName = @"peakMemoryGiB",
        PossibleTypes = new [] { typeof(float) })]
        float? ResourceStatisticsPeakMemoryGiB { get; set; }
        /// <summary>The start time of the time range covered by the statistics.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The start time of the time range covered by the statistics.",
        SerializedName = @"startTime",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? ResourceStatisticsStartTime { get; set; }
        /// <summary>The start time of the time range covered by the statistics.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The start time of the time range covered by the statistics.",
        SerializedName = @"startTime",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime StartTime { get; set; }
        /// <summary>The URL for the statistics.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The URL for the statistics.",
        SerializedName = @"url",
        PossibleTypes = new [] { typeof(string) })]
        string Url { get; set; }
        /// <summary>
        /// The aggregated wall-clock time of the dedicated Compute Node cores being part of the Pool.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The aggregated wall-clock time of the dedicated Compute Node cores being part of the Pool.",
        SerializedName = @"dedicatedCoreTime",
        PossibleTypes = new [] { typeof(global::System.TimeSpan) })]
        global::System.TimeSpan? UsageStatisticsDedicatedCoreTime { get; set; }
        /// <summary>
        /// The time at which the statistics were last updated. All statistics are limited to the range between startTime and lastUpdateTime.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The time at which the statistics were last updated. All statistics are limited to the range between startTime and lastUpdateTime.",
        SerializedName = @"lastUpdateTime",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? UsageStatisticsLastUpdateTime { get; set; }
        /// <summary>The start time of the time range covered by the statistics.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The start time of the time range covered by the statistics.",
        SerializedName = @"startTime",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? UsageStatisticsStartTime { get; set; }

    }
    /// Contains utilization and resource usage statistics for the lifetime of a Pool.
    internal partial interface IBatchPoolStatisticsInternal

    {
        /// <summary>
        /// The time at which the statistics were last updated. All statistics are limited to the range between startTime and lastUpdateTime.
        /// </summary>
        global::System.DateTime LastUpdateTime { get; set; }
        /// <summary>Statistics related to resource consumption by Compute Nodes in the Pool.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchPoolResourceStatistics ResourceStatistics { get; set; }
        /// <summary>
        /// The average CPU usage across all Compute Nodes in the Pool (percentage per node).
        /// </summary>
        float? ResourceStatisticsAvgCpuPercentage { get; set; }
        /// <summary>The average used disk space in GiB across all Compute Nodes in the Pool.</summary>
        float? ResourceStatisticsAvgDiskGiB { get; set; }
        /// <summary>The average memory usage in GiB across all Compute Nodes in the Pool.</summary>
        float? ResourceStatisticsAvgMemoryGiB { get; set; }
        /// <summary>
        /// The total amount of data in GiB of disk reads across all Compute Nodes in the Pool.
        /// </summary>
        float? ResourceStatisticsDiskReadGiB { get; set; }
        /// <summary>The total number of disk read operations across all Compute Nodes in the Pool.</summary>
        string ResourceStatisticsDiskReadIop { get; set; }
        /// <summary>
        /// The total amount of data in GiB of disk writes across all Compute Nodes in the Pool.
        /// </summary>
        float? ResourceStatisticsDiskWriteGiB { get; set; }
        /// <summary>The total number of disk write operations across all Compute Nodes in the Pool.</summary>
        string ResourceStatisticsDiskWriteIop { get; set; }
        /// <summary>
        /// The time at which the statistics were last updated. All statistics are limited to the range between startTime and lastUpdateTime.
        /// </summary>
        global::System.DateTime? ResourceStatisticsLastUpdateTime { get; set; }
        /// <summary>
        /// The total amount of data in GiB of network reads across all Compute Nodes in the Pool.
        /// </summary>
        float? ResourceStatisticsNetworkReadGiB { get; set; }
        /// <summary>
        /// The total amount of data in GiB of network writes across all Compute Nodes in the Pool.
        /// </summary>
        float? ResourceStatisticsNetworkWriteGiB { get; set; }
        /// <summary>The peak used disk space in GiB across all Compute Nodes in the Pool.</summary>
        float? ResourceStatisticsPeakDiskGiB { get; set; }
        /// <summary>The peak memory usage in GiB across all Compute Nodes in the Pool.</summary>
        float? ResourceStatisticsPeakMemoryGiB { get; set; }
        /// <summary>The start time of the time range covered by the statistics.</summary>
        global::System.DateTime? ResourceStatisticsStartTime { get; set; }
        /// <summary>The start time of the time range covered by the statistics.</summary>
        global::System.DateTime StartTime { get; set; }
        /// <summary>The URL for the statistics.</summary>
        string Url { get; set; }
        /// <summary>Statistics related to Pool usage, such as the amount of core-time used.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchPoolUsageStatistics UsageStatistics { get; set; }
        /// <summary>
        /// The aggregated wall-clock time of the dedicated Compute Node cores being part of the Pool.
        /// </summary>
        global::System.TimeSpan? UsageStatisticsDedicatedCoreTime { get; set; }
        /// <summary>
        /// The time at which the statistics were last updated. All statistics are limited to the range between startTime and lastUpdateTime.
        /// </summary>
        global::System.DateTime? UsageStatisticsLastUpdateTime { get; set; }
        /// <summary>The start time of the time range covered by the statistics.</summary>
        global::System.DateTime? UsageStatisticsStartTime { get; set; }

    }
}