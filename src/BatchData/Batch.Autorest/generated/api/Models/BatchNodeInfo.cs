// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Batch.Models
{
    using static Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.Extensions;

    /// <summary>Information about the Compute Node on which a Task ran.</summary>
    public partial class BatchNodeInfo :
        Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchNodeInfo,
        Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchNodeInfoInternal
    {

        /// <summary>Backing field for <see cref="AffinityId" /> property.</summary>
        private string _affinityId;

        /// <summary>
        /// An identifier for the Node on which the Task ran, which can be passed when adding a Task to request that the Task be scheduled
        /// on this Compute Node.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Origin(Microsoft.Azure.PowerShell.Cmdlets.Batch.PropertyOrigin.Owned)]
        public string AffinityId { get => this._affinityId; set => this._affinityId = value; }

        /// <summary>Backing field for <see cref="NodeId" /> property.</summary>
        private string _nodeId;

        /// <summary>The ID of the Compute Node on which the Task ran.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Origin(Microsoft.Azure.PowerShell.Cmdlets.Batch.PropertyOrigin.Owned)]
        public string NodeId { get => this._nodeId; set => this._nodeId = value; }

        /// <summary>Backing field for <see cref="NodeUrl" /> property.</summary>
        private string _nodeUrl;

        /// <summary>The URL of the Compute Node on which the Task ran.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Origin(Microsoft.Azure.PowerShell.Cmdlets.Batch.PropertyOrigin.Owned)]
        public string NodeUrl { get => this._nodeUrl; set => this._nodeUrl = value; }

        /// <summary>Backing field for <see cref="PoolId" /> property.</summary>
        private string _poolId;

        /// <summary>The ID of the Pool on which the Task ran.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Origin(Microsoft.Azure.PowerShell.Cmdlets.Batch.PropertyOrigin.Owned)]
        public string PoolId { get => this._poolId; set => this._poolId = value; }

        /// <summary>Backing field for <see cref="TaskRootDirectory" /> property.</summary>
        private string _taskRootDirectory;

        /// <summary>The root directory of the Task on the Compute Node.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Origin(Microsoft.Azure.PowerShell.Cmdlets.Batch.PropertyOrigin.Owned)]
        public string TaskRootDirectory { get => this._taskRootDirectory; set => this._taskRootDirectory = value; }

        /// <summary>Backing field for <see cref="TaskRootDirectoryUrl" /> property.</summary>
        private string _taskRootDirectoryUrl;

        /// <summary>The URL to the root directory of the Task on the Compute Node.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Origin(Microsoft.Azure.PowerShell.Cmdlets.Batch.PropertyOrigin.Owned)]
        public string TaskRootDirectoryUrl { get => this._taskRootDirectoryUrl; set => this._taskRootDirectoryUrl = value; }

        /// <summary>Creates an new <see cref="BatchNodeInfo" /> instance.</summary>
        public BatchNodeInfo()
        {

        }
    }
    /// Information about the Compute Node on which a Task ran.
    public partial interface IBatchNodeInfo :
        Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.IJsonSerializable
    {
        /// <summary>
        /// An identifier for the Node on which the Task ran, which can be passed when adding a Task to request that the Task be scheduled
        /// on this Compute Node.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"An identifier for the Node on which the Task ran, which can be passed when adding a Task to request that the Task be scheduled on this Compute Node.",
        SerializedName = @"affinityId",
        PossibleTypes = new [] { typeof(string) })]
        string AffinityId { get; set; }
        /// <summary>The ID of the Compute Node on which the Task ran.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The ID of the Compute Node on which the Task ran.",
        SerializedName = @"nodeId",
        PossibleTypes = new [] { typeof(string) })]
        string NodeId { get; set; }
        /// <summary>The URL of the Compute Node on which the Task ran.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The URL of the Compute Node on which the Task ran.",
        SerializedName = @"nodeUrl",
        PossibleTypes = new [] { typeof(string) })]
        string NodeUrl { get; set; }
        /// <summary>The ID of the Pool on which the Task ran.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The ID of the Pool on which the Task ran.",
        SerializedName = @"poolId",
        PossibleTypes = new [] { typeof(string) })]
        string PoolId { get; set; }
        /// <summary>The root directory of the Task on the Compute Node.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The root directory of the Task on the Compute Node.",
        SerializedName = @"taskRootDirectory",
        PossibleTypes = new [] { typeof(string) })]
        string TaskRootDirectory { get; set; }
        /// <summary>The URL to the root directory of the Task on the Compute Node.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The URL to the root directory of the Task on the Compute Node.",
        SerializedName = @"taskRootDirectoryUrl",
        PossibleTypes = new [] { typeof(string) })]
        string TaskRootDirectoryUrl { get; set; }

    }
    /// Information about the Compute Node on which a Task ran.
    internal partial interface IBatchNodeInfoInternal

    {
        /// <summary>
        /// An identifier for the Node on which the Task ran, which can be passed when adding a Task to request that the Task be scheduled
        /// on this Compute Node.
        /// </summary>
        string AffinityId { get; set; }
        /// <summary>The ID of the Compute Node on which the Task ran.</summary>
        string NodeId { get; set; }
        /// <summary>The URL of the Compute Node on which the Task ran.</summary>
        string NodeUrl { get; set; }
        /// <summary>The ID of the Pool on which the Task ran.</summary>
        string PoolId { get; set; }
        /// <summary>The root directory of the Task on the Compute Node.</summary>
        string TaskRootDirectory { get; set; }
        /// <summary>The URL to the root directory of the Task on the Compute Node.</summary>
        string TaskRootDirectoryUrl { get; set; }

    }
}