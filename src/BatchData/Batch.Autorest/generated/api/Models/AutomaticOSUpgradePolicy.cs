// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Batch.Models
{
    using static Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.Extensions;

    /// <summary>The configuration parameters used for performing automatic OS upgrade.</summary>
    public partial class AutomaticOSUpgradePolicy :
        Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IAutomaticOSUpgradePolicy,
        Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IAutomaticOSUpgradePolicyInternal
    {

        /// <summary>Backing field for <see cref="DisableAutomaticRollback" /> property.</summary>
        private bool? _disableAutomaticRollback;

        /// <summary>Whether OS image rollback feature should be disabled.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Origin(Microsoft.Azure.PowerShell.Cmdlets.Batch.PropertyOrigin.Owned)]
        public bool? DisableAutomaticRollback { get => this._disableAutomaticRollback; set => this._disableAutomaticRollback = value; }

        /// <summary>Backing field for <see cref="EnableAutomaticOSUpgrade" /> property.</summary>
        private bool? _enableAutomaticOSUpgrade;

        /// <summary>
        /// Indicates whether OS upgrades should automatically be applied to scale set instances in a rolling fashion when a newer
        /// version of the OS image becomes available. <br /><br /> If this is set to true for Windows based pools, [WindowsConfiguration.enableAutomaticUpdates](https://learn.microsoft.com/rest/api/batchservice/pool/add?tabs=HTTP#windowsconfiguration)
        /// cannot be set to true.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Origin(Microsoft.Azure.PowerShell.Cmdlets.Batch.PropertyOrigin.Owned)]
        public bool? EnableAutomaticOSUpgrade { get => this._enableAutomaticOSUpgrade; set => this._enableAutomaticOSUpgrade = value; }

        /// <summary>Backing field for <see cref="OSRollingUpgradeDeferral" /> property.</summary>
        private bool? _oSRollingUpgradeDeferral;

        /// <summary>Defer OS upgrades on the TVMs if they are running tasks.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Origin(Microsoft.Azure.PowerShell.Cmdlets.Batch.PropertyOrigin.Owned)]
        public bool? OSRollingUpgradeDeferral { get => this._oSRollingUpgradeDeferral; set => this._oSRollingUpgradeDeferral = value; }

        /// <summary>Backing field for <see cref="UseRollingUpgradePolicy" /> property.</summary>
        private bool? _useRollingUpgradePolicy;

        /// <summary>
        /// Indicates whether rolling upgrade policy should be used during Auto OS Upgrade. Auto OS Upgrade will fallback to the default
        /// policy if no policy is defined on the VMSS.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Origin(Microsoft.Azure.PowerShell.Cmdlets.Batch.PropertyOrigin.Owned)]
        public bool? UseRollingUpgradePolicy { get => this._useRollingUpgradePolicy; set => this._useRollingUpgradePolicy = value; }

        /// <summary>Creates an new <see cref="AutomaticOSUpgradePolicy" /> instance.</summary>
        public AutomaticOSUpgradePolicy()
        {

        }
    }
    /// The configuration parameters used for performing automatic OS upgrade.
    public partial interface IAutomaticOSUpgradePolicy :
        Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.IJsonSerializable
    {
        /// <summary>Whether OS image rollback feature should be disabled.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Whether OS image rollback feature should be disabled.",
        SerializedName = @"disableAutomaticRollback",
        PossibleTypes = new [] { typeof(bool) })]
        bool? DisableAutomaticRollback { get; set; }
        /// <summary>
        /// Indicates whether OS upgrades should automatically be applied to scale set instances in a rolling fashion when a newer
        /// version of the OS image becomes available. <br /><br /> If this is set to true for Windows based pools, [WindowsConfiguration.enableAutomaticUpdates](https://learn.microsoft.com/rest/api/batchservice/pool/add?tabs=HTTP#windowsconfiguration)
        /// cannot be set to true.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Indicates whether OS upgrades should automatically be applied to scale set instances in a rolling fashion when a newer version of the OS image becomes available. <br /><br /> If this is set to true for Windows based pools, [WindowsConfiguration.enableAutomaticUpdates](https://learn.microsoft.com/rest/api/batchservice/pool/add?tabs=HTTP#windowsconfiguration) cannot be set to true.",
        SerializedName = @"enableAutomaticOSUpgrade",
        PossibleTypes = new [] { typeof(bool) })]
        bool? EnableAutomaticOSUpgrade { get; set; }
        /// <summary>Defer OS upgrades on the TVMs if they are running tasks.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Defer OS upgrades on the TVMs if they are running tasks.",
        SerializedName = @"osRollingUpgradeDeferral",
        PossibleTypes = new [] { typeof(bool) })]
        bool? OSRollingUpgradeDeferral { get; set; }
        /// <summary>
        /// Indicates whether rolling upgrade policy should be used during Auto OS Upgrade. Auto OS Upgrade will fallback to the default
        /// policy if no policy is defined on the VMSS.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Indicates whether rolling upgrade policy should be used during Auto OS Upgrade. Auto OS Upgrade will fallback to the default policy if no policy is defined on the VMSS.",
        SerializedName = @"useRollingUpgradePolicy",
        PossibleTypes = new [] { typeof(bool) })]
        bool? UseRollingUpgradePolicy { get; set; }

    }
    /// The configuration parameters used for performing automatic OS upgrade.
    internal partial interface IAutomaticOSUpgradePolicyInternal

    {
        /// <summary>Whether OS image rollback feature should be disabled.</summary>
        bool? DisableAutomaticRollback { get; set; }
        /// <summary>
        /// Indicates whether OS upgrades should automatically be applied to scale set instances in a rolling fashion when a newer
        /// version of the OS image becomes available. <br /><br /> If this is set to true for Windows based pools, [WindowsConfiguration.enableAutomaticUpdates](https://learn.microsoft.com/rest/api/batchservice/pool/add?tabs=HTTP#windowsconfiguration)
        /// cannot be set to true.
        /// </summary>
        bool? EnableAutomaticOSUpgrade { get; set; }
        /// <summary>Defer OS upgrades on the TVMs if they are running tasks.</summary>
        bool? OSRollingUpgradeDeferral { get; set; }
        /// <summary>
        /// Indicates whether rolling upgrade policy should be used during Auto OS Upgrade. Auto OS Upgrade will fallback to the default
        /// policy if no policy is defined on the VMSS.
        /// </summary>
        bool? UseRollingUpgradePolicy { get; set; }

    }
}