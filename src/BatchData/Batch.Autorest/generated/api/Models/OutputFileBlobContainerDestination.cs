// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Batch.Models
{
    using static Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.Extensions;

    /// <summary>Specifies a file upload destination within an Azure blob storage container.</summary>
    public partial class OutputFileBlobContainerDestination :
        Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IOutputFileBlobContainerDestination,
        Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IOutputFileBlobContainerDestinationInternal
    {

        /// <summary>Backing field for <see cref="ContainerUrl" /> property.</summary>
        private string _containerUrl;

        /// <summary>
        /// The URL of the container within Azure Blob Storage to which to upload the file(s). If not using a managed identity, the
        /// URL must include a Shared Access Signature (SAS) granting write permissions to the container.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Origin(Microsoft.Azure.PowerShell.Cmdlets.Batch.PropertyOrigin.Owned)]
        public string ContainerUrl { get => this._containerUrl; set => this._containerUrl = value; }

        /// <summary>Backing field for <see cref="IdentityReference" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchNodeIdentityReference _identityReference;

        /// <summary>
        /// The reference to the user assigned identity to use to access Azure Blob Storage specified by containerUrl. The identity
        /// must have write access to the Azure Blob Storage container.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Origin(Microsoft.Azure.PowerShell.Cmdlets.Batch.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchNodeIdentityReference IdentityReference { get => (this._identityReference = this._identityReference ?? new Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.BatchNodeIdentityReference()); set => this._identityReference = value; }

        /// <summary>The ARM resource id of the user assigned identity.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Origin(Microsoft.Azure.PowerShell.Cmdlets.Batch.PropertyOrigin.Inlined)]
        public string IdentityReferenceResourceId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchNodeIdentityReferenceInternal)IdentityReference).ResourceId; set => ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchNodeIdentityReferenceInternal)IdentityReference).ResourceId = value ?? null; }

        /// <summary>Internal Acessors for IdentityReference</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchNodeIdentityReference Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IOutputFileBlobContainerDestinationInternal.IdentityReference { get => (this._identityReference = this._identityReference ?? new Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.BatchNodeIdentityReference()); set { {_identityReference = value;} } }

        /// <summary>Backing field for <see cref="Path" /> property.</summary>
        private string _path;

        /// <summary>
        /// The destination blob or virtual directory within the Azure Storage container. If filePattern refers to a specific file
        /// (i.e. contains no wildcards), then path is the name of the blob to which to upload that file. If filePattern contains
        /// one or more wildcards (and therefore may match multiple files), then path is the name of the blob virtual directory (which
        /// is prepended to each blob name) to which to upload the file(s). If omitted, file(s) are uploaded to the root of the container
        /// with a blob name matching their file name.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Origin(Microsoft.Azure.PowerShell.Cmdlets.Batch.PropertyOrigin.Owned)]
        public string Path { get => this._path; set => this._path = value; }

        /// <summary>Backing field for <see cref="UploadHeader" /> property.</summary>
        private System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IOutputFileUploadHeader> _uploadHeader;

        /// <summary>
        /// A list of name-value pairs for headers to be used in uploading output files. These headers will be specified when uploading
        /// files to Azure Storage. Official document on allowed headers when uploading blobs: https://learn.microsoft.com/rest/api/storageservices/put-blob#request-headers-all-blob-types.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Origin(Microsoft.Azure.PowerShell.Cmdlets.Batch.PropertyOrigin.Owned)]
        public System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IOutputFileUploadHeader> UploadHeader { get => this._uploadHeader; set => this._uploadHeader = value; }

        /// <summary>Creates an new <see cref="OutputFileBlobContainerDestination" /> instance.</summary>
        public OutputFileBlobContainerDestination()
        {

        }
    }
    /// Specifies a file upload destination within an Azure blob storage container.
    public partial interface IOutputFileBlobContainerDestination :
        Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.IJsonSerializable
    {
        /// <summary>
        /// The URL of the container within Azure Blob Storage to which to upload the file(s). If not using a managed identity, the
        /// URL must include a Shared Access Signature (SAS) granting write permissions to the container.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The URL of the container within Azure Blob Storage to which to upload the file(s). If not using a managed identity, the URL must include a Shared Access Signature (SAS) granting write permissions to the container.",
        SerializedName = @"containerUrl",
        PossibleTypes = new [] { typeof(string) })]
        string ContainerUrl { get; set; }
        /// <summary>The ARM resource id of the user assigned identity.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The ARM resource id of the user assigned identity.",
        SerializedName = @"resourceId",
        PossibleTypes = new [] { typeof(string) })]
        string IdentityReferenceResourceId { get; set; }
        /// <summary>
        /// The destination blob or virtual directory within the Azure Storage container. If filePattern refers to a specific file
        /// (i.e. contains no wildcards), then path is the name of the blob to which to upload that file. If filePattern contains
        /// one or more wildcards (and therefore may match multiple files), then path is the name of the blob virtual directory (which
        /// is prepended to each blob name) to which to upload the file(s). If omitted, file(s) are uploaded to the root of the container
        /// with a blob name matching their file name.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The destination blob or virtual directory within the Azure Storage container. If filePattern refers to a specific file (i.e. contains no wildcards), then path is the name of the blob to which to upload that file. If filePattern contains one or more wildcards (and therefore may match multiple files), then path is the name of the blob virtual directory (which is prepended to each blob name) to which to upload the file(s). If omitted, file(s) are uploaded to the root of the container with a blob name matching their file name.",
        SerializedName = @"path",
        PossibleTypes = new [] { typeof(string) })]
        string Path { get; set; }
        /// <summary>
        /// A list of name-value pairs for headers to be used in uploading output files. These headers will be specified when uploading
        /// files to Azure Storage. Official document on allowed headers when uploading blobs: https://learn.microsoft.com/rest/api/storageservices/put-blob#request-headers-all-blob-types.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"A list of name-value pairs for headers to be used in uploading output files. These headers will be specified when uploading files to Azure Storage. Official document on allowed headers when uploading blobs: https://learn.microsoft.com/rest/api/storageservices/put-blob#request-headers-all-blob-types.",
        SerializedName = @"uploadHeaders",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IOutputFileUploadHeader) })]
        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IOutputFileUploadHeader> UploadHeader { get; set; }

    }
    /// Specifies a file upload destination within an Azure blob storage container.
    internal partial interface IOutputFileBlobContainerDestinationInternal

    {
        /// <summary>
        /// The URL of the container within Azure Blob Storage to which to upload the file(s). If not using a managed identity, the
        /// URL must include a Shared Access Signature (SAS) granting write permissions to the container.
        /// </summary>
        string ContainerUrl { get; set; }
        /// <summary>
        /// The reference to the user assigned identity to use to access Azure Blob Storage specified by containerUrl. The identity
        /// must have write access to the Azure Blob Storage container.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchNodeIdentityReference IdentityReference { get; set; }
        /// <summary>The ARM resource id of the user assigned identity.</summary>
        string IdentityReferenceResourceId { get; set; }
        /// <summary>
        /// The destination blob or virtual directory within the Azure Storage container. If filePattern refers to a specific file
        /// (i.e. contains no wildcards), then path is the name of the blob to which to upload that file. If filePattern contains
        /// one or more wildcards (and therefore may match multiple files), then path is the name of the blob virtual directory (which
        /// is prepended to each blob name) to which to upload the file(s). If omitted, file(s) are uploaded to the root of the container
        /// with a blob name matching their file name.
        /// </summary>
        string Path { get; set; }
        /// <summary>
        /// A list of name-value pairs for headers to be used in uploading output files. These headers will be specified when uploading
        /// files to Azure Storage. Official document on allowed headers when uploading blobs: https://learn.microsoft.com/rest/api/storageservices/put-blob#request-headers-all-blob-types.
        /// </summary>
        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IOutputFileUploadHeader> UploadHeader { get; set; }

    }
}