// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Batch.Models
{
    using static Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.Extensions;

    /// <summary>
    /// Parameters for creating a user account for RDP or SSH access on an Azure Batch Compute Node.
    /// </summary>
    public partial class BatchNodeUserCreateOptions :
        Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchNodeUserCreateOptions,
        Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchNodeUserCreateOptionsInternal
    {

        /// <summary>Backing field for <see cref="ExpiryTime" /> property.</summary>
        private global::System.DateTime? _expiryTime;

        /// <summary>
        /// The time at which the Account should expire. If omitted, the default is 1 day from the current time. For Linux Compute
        /// Nodes, the expiryTime has a precision up to a day.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Origin(Microsoft.Azure.PowerShell.Cmdlets.Batch.PropertyOrigin.Owned)]
        public global::System.DateTime? ExpiryTime { get => this._expiryTime; set => this._expiryTime = value; }

        /// <summary>Backing field for <see cref="IsAdmin" /> property.</summary>
        private bool? _isAdmin;

        /// <summary>
        /// Whether the Account should be an administrator on the Compute Node. The default value is false.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Origin(Microsoft.Azure.PowerShell.Cmdlets.Batch.PropertyOrigin.Owned)]
        public bool? IsAdmin { get => this._isAdmin; set => this._isAdmin = value; }

        /// <summary>Backing field for <see cref="Name" /> property.</summary>
        private string _name;

        /// <summary>The user name of the Account.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Origin(Microsoft.Azure.PowerShell.Cmdlets.Batch.PropertyOrigin.Owned)]
        public string Name { get => this._name; set => this._name = value; }

        /// <summary>Backing field for <see cref="Password" /> property.</summary>
        private System.Security.SecureString _password;

        /// <summary>
        /// The password of the Account. The password is required for Windows Compute Nodes. For Linux Compute Nodes, the password
        /// can optionally be specified along with the sshPublicKey property.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Origin(Microsoft.Azure.PowerShell.Cmdlets.Batch.PropertyOrigin.Owned)]
        public System.Security.SecureString Password { get => this._password; set => this._password = value; }

        /// <summary>Backing field for <see cref="SshPublicKey" /> property.</summary>
        private string _sshPublicKey;

        /// <summary>
        /// The SSH public key that can be used for remote login to the Compute Node. The public key should be compatible with OpenSSH
        /// encoding and should be base 64 encoded. This property can be specified only for Linux Compute Nodes. If this is specified
        /// for a Windows Compute Node, then the Batch service rejects the request; if you are calling the REST API directly, the
        /// HTTP status code is 400 (Bad Request).
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Origin(Microsoft.Azure.PowerShell.Cmdlets.Batch.PropertyOrigin.Owned)]
        public string SshPublicKey { get => this._sshPublicKey; set => this._sshPublicKey = value; }

        /// <summary>Creates an new <see cref="BatchNodeUserCreateOptions" /> instance.</summary>
        public BatchNodeUserCreateOptions()
        {

        }
    }
    /// Parameters for creating a user account for RDP or SSH access on an Azure Batch Compute Node.
    public partial interface IBatchNodeUserCreateOptions :
        Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.IJsonSerializable
    {
        /// <summary>
        /// The time at which the Account should expire. If omitted, the default is 1 day from the current time. For Linux Compute
        /// Nodes, the expiryTime has a precision up to a day.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The time at which the Account should expire. If omitted, the default is 1 day from the current time. For Linux Compute Nodes, the expiryTime has a precision up to a day.",
        SerializedName = @"expiryTime",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? ExpiryTime { get; set; }
        /// <summary>
        /// Whether the Account should be an administrator on the Compute Node. The default value is false.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Whether the Account should be an administrator on the Compute Node. The default value is false.",
        SerializedName = @"isAdmin",
        PossibleTypes = new [] { typeof(bool) })]
        bool? IsAdmin { get; set; }
        /// <summary>The user name of the Account.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The user name of the Account.",
        SerializedName = @"name",
        PossibleTypes = new [] { typeof(string) })]
        string Name { get; set; }
        /// <summary>
        /// The password of the Account. The password is required for Windows Compute Nodes. For Linux Compute Nodes, the password
        /// can optionally be specified along with the sshPublicKey property.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The password of the Account. The password is required for Windows Compute Nodes. For Linux Compute Nodes, the password can optionally be specified along with the sshPublicKey property.",
        SerializedName = @"password",
        PossibleTypes = new [] { typeof(System.Security.SecureString) })]
        System.Security.SecureString Password { get; set; }
        /// <summary>
        /// The SSH public key that can be used for remote login to the Compute Node. The public key should be compatible with OpenSSH
        /// encoding and should be base 64 encoded. This property can be specified only for Linux Compute Nodes. If this is specified
        /// for a Windows Compute Node, then the Batch service rejects the request; if you are calling the REST API directly, the
        /// HTTP status code is 400 (Bad Request).
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The SSH public key that can be used for remote login to the Compute Node. The public key should be compatible with OpenSSH encoding and should be base 64 encoded. This property can be specified only for Linux Compute Nodes. If this is specified for a Windows Compute Node, then the Batch service rejects the request; if you are calling the REST API directly, the HTTP status code is 400 (Bad Request).",
        SerializedName = @"sshPublicKey",
        PossibleTypes = new [] { typeof(string) })]
        string SshPublicKey { get; set; }

    }
    /// Parameters for creating a user account for RDP or SSH access on an Azure Batch Compute Node.
    internal partial interface IBatchNodeUserCreateOptionsInternal

    {
        /// <summary>
        /// The time at which the Account should expire. If omitted, the default is 1 day from the current time. For Linux Compute
        /// Nodes, the expiryTime has a precision up to a day.
        /// </summary>
        global::System.DateTime? ExpiryTime { get; set; }
        /// <summary>
        /// Whether the Account should be an administrator on the Compute Node. The default value is false.
        /// </summary>
        bool? IsAdmin { get; set; }
        /// <summary>The user name of the Account.</summary>
        string Name { get; set; }
        /// <summary>
        /// The password of the Account. The password is required for Windows Compute Nodes. For Linux Compute Nodes, the password
        /// can optionally be specified along with the sshPublicKey property.
        /// </summary>
        System.Security.SecureString Password { get; set; }
        /// <summary>
        /// The SSH public key that can be used for remote login to the Compute Node. The public key should be compatible with OpenSSH
        /// encoding and should be base 64 encoded. This property can be specified only for Linux Compute Nodes. If this is specified
        /// for a Windows Compute Node, then the Batch service rejects the request; if you are calling the REST API directly, the
        /// HTTP status code is 400 (Bad Request).
        /// </summary>
        string SshPublicKey { get; set; }

    }
}