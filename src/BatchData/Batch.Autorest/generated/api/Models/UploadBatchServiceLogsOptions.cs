// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Batch.Models
{
    using static Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.Extensions;

    /// <summary>The Azure Batch service log files upload parameters for a Compute Node.</summary>
    public partial class UploadBatchServiceLogsOptions :
        Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IUploadBatchServiceLogsOptions,
        Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IUploadBatchServiceLogsOptionsInternal
    {

        /// <summary>Backing field for <see cref="ContainerUrl" /> property.</summary>
        private string _containerUrl;

        /// <summary>
        /// The URL of the container within Azure Blob Storage to which to upload the Batch Service log file(s). If a user assigned
        /// managed identity is not being used, the URL must include a Shared Access Signature (SAS) granting write permissions to
        /// the container. The SAS duration must allow enough time for the upload to finish. The start time for SAS is optional and
        /// recommended to not be specified.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Origin(Microsoft.Azure.PowerShell.Cmdlets.Batch.PropertyOrigin.Owned)]
        public string ContainerUrl { get => this._containerUrl; set => this._containerUrl = value; }

        /// <summary>Backing field for <see cref="EndTime" /> property.</summary>
        private global::System.DateTime? _endTime;

        /// <summary>
        /// The end of the time range from which to upload Batch Service log file(s). Any log file containing a log message in the
        /// time range will be uploaded. This means that the operation might retrieve more logs than have been requested since the
        /// entire log file is always uploaded, but the operation should not retrieve fewer logs than have been requested. If omitted,
        /// the default is to upload all logs available after the startTime.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Origin(Microsoft.Azure.PowerShell.Cmdlets.Batch.PropertyOrigin.Owned)]
        public global::System.DateTime? EndTime { get => this._endTime; set => this._endTime = value; }

        /// <summary>Backing field for <see cref="IdentityReference" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchNodeIdentityReference _identityReference;

        /// <summary>
        /// The reference to the user assigned identity to use to access Azure Blob Storage specified by containerUrl. The identity
        /// must have write access to the Azure Blob Storage container.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Origin(Microsoft.Azure.PowerShell.Cmdlets.Batch.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchNodeIdentityReference IdentityReference { get => (this._identityReference = this._identityReference ?? new Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.BatchNodeIdentityReference()); set => this._identityReference = value; }

        /// <summary>The ARM resource id of the user assigned identity.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Origin(Microsoft.Azure.PowerShell.Cmdlets.Batch.PropertyOrigin.Inlined)]
        public string IdentityReferenceResourceId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchNodeIdentityReferenceInternal)IdentityReference).ResourceId; set => ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchNodeIdentityReferenceInternal)IdentityReference).ResourceId = value ?? null; }

        /// <summary>Internal Acessors for IdentityReference</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchNodeIdentityReference Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IUploadBatchServiceLogsOptionsInternal.IdentityReference { get => (this._identityReference = this._identityReference ?? new Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.BatchNodeIdentityReference()); set { {_identityReference = value;} } }

        /// <summary>Backing field for <see cref="StartTime" /> property.</summary>
        private global::System.DateTime _startTime;

        /// <summary>
        /// The start of the time range from which to upload Batch Service log file(s). Any log file containing a log message in the
        /// time range will be uploaded. This means that the operation might retrieve more logs than have been requested since the
        /// entire log file is always uploaded, but the operation should not retrieve fewer logs than have been requested.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Origin(Microsoft.Azure.PowerShell.Cmdlets.Batch.PropertyOrigin.Owned)]
        public global::System.DateTime StartTime { get => this._startTime; set => this._startTime = value; }

        /// <summary>Creates an new <see cref="UploadBatchServiceLogsOptions" /> instance.</summary>
        public UploadBatchServiceLogsOptions()
        {

        }
    }
    /// The Azure Batch service log files upload parameters for a Compute Node.
    public partial interface IUploadBatchServiceLogsOptions :
        Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.IJsonSerializable
    {
        /// <summary>
        /// The URL of the container within Azure Blob Storage to which to upload the Batch Service log file(s). If a user assigned
        /// managed identity is not being used, the URL must include a Shared Access Signature (SAS) granting write permissions to
        /// the container. The SAS duration must allow enough time for the upload to finish. The start time for SAS is optional and
        /// recommended to not be specified.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The URL of the container within Azure Blob Storage to which to upload the Batch Service log file(s). If a user assigned managed identity is not being used, the URL must include a Shared Access Signature (SAS) granting write permissions to the container. The SAS duration must allow enough time for the upload to finish. The start time for SAS is optional and recommended to not be specified.",
        SerializedName = @"containerUrl",
        PossibleTypes = new [] { typeof(string) })]
        string ContainerUrl { get; set; }
        /// <summary>
        /// The end of the time range from which to upload Batch Service log file(s). Any log file containing a log message in the
        /// time range will be uploaded. This means that the operation might retrieve more logs than have been requested since the
        /// entire log file is always uploaded, but the operation should not retrieve fewer logs than have been requested. If omitted,
        /// the default is to upload all logs available after the startTime.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The end of the time range from which to upload Batch Service log file(s). Any log file containing a log message in the time range will be uploaded. This means that the operation might retrieve more logs than have been requested since the entire log file is always uploaded, but the operation should not retrieve fewer logs than have been requested. If omitted, the default is to upload all logs available after the startTime.",
        SerializedName = @"endTime",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? EndTime { get; set; }
        /// <summary>The ARM resource id of the user assigned identity.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The ARM resource id of the user assigned identity.",
        SerializedName = @"resourceId",
        PossibleTypes = new [] { typeof(string) })]
        string IdentityReferenceResourceId { get; set; }
        /// <summary>
        /// The start of the time range from which to upload Batch Service log file(s). Any log file containing a log message in the
        /// time range will be uploaded. This means that the operation might retrieve more logs than have been requested since the
        /// entire log file is always uploaded, but the operation should not retrieve fewer logs than have been requested.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The start of the time range from which to upload Batch Service log file(s). Any log file containing a log message in the time range will be uploaded. This means that the operation might retrieve more logs than have been requested since the entire log file is always uploaded, but the operation should not retrieve fewer logs than have been requested.",
        SerializedName = @"startTime",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime StartTime { get; set; }

    }
    /// The Azure Batch service log files upload parameters for a Compute Node.
    internal partial interface IUploadBatchServiceLogsOptionsInternal

    {
        /// <summary>
        /// The URL of the container within Azure Blob Storage to which to upload the Batch Service log file(s). If a user assigned
        /// managed identity is not being used, the URL must include a Shared Access Signature (SAS) granting write permissions to
        /// the container. The SAS duration must allow enough time for the upload to finish. The start time for SAS is optional and
        /// recommended to not be specified.
        /// </summary>
        string ContainerUrl { get; set; }
        /// <summary>
        /// The end of the time range from which to upload Batch Service log file(s). Any log file containing a log message in the
        /// time range will be uploaded. This means that the operation might retrieve more logs than have been requested since the
        /// entire log file is always uploaded, but the operation should not retrieve fewer logs than have been requested. If omitted,
        /// the default is to upload all logs available after the startTime.
        /// </summary>
        global::System.DateTime? EndTime { get; set; }
        /// <summary>
        /// The reference to the user assigned identity to use to access Azure Blob Storage specified by containerUrl. The identity
        /// must have write access to the Azure Blob Storage container.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchNodeIdentityReference IdentityReference { get; set; }
        /// <summary>The ARM resource id of the user assigned identity.</summary>
        string IdentityReferenceResourceId { get; set; }
        /// <summary>
        /// The start of the time range from which to upload Batch Service log file(s). Any log file containing a log message in the
        /// time range will be uploaded. This means that the operation might retrieve more logs than have been requested since the
        /// entire log file is always uploaded, but the operation should not retrieve fewer logs than have been requested.
        /// </summary>
        global::System.DateTime StartTime { get; set; }

    }
}