// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Batch.Models
{
    using static Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.Extensions;

    /// <summary>Properties used to create a user Account on a Linux Compute Node.</summary>
    public partial class LinuxUserConfiguration :
        Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.ILinuxUserConfiguration,
        Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.ILinuxUserConfigurationInternal
    {

        /// <summary>Backing field for <see cref="Gid" /> property.</summary>
        private int? _gid;

        /// <summary>
        /// The group ID for the user Account. The uid and gid properties must be specified together or not at all. If not specified
        /// the underlying operating system picks the gid.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Origin(Microsoft.Azure.PowerShell.Cmdlets.Batch.PropertyOrigin.Owned)]
        public int? Gid { get => this._gid; set => this._gid = value; }

        /// <summary>Backing field for <see cref="SshPrivateKey" /> property.</summary>
        private System.Security.SecureString _sshPrivateKey;

        /// <summary>
        /// The SSH private key for the user Account. The private key must not be password protected. The private key is used to automatically
        /// configure asymmetric-key based authentication for SSH between Compute Nodes in a Linux Pool when the Pool's enableInterNodeCommunication
        /// property is true (it is ignored if enableInterNodeCommunication is false). It does this by placing the key pair into the
        /// user's .ssh directory. If not specified, password-less SSH is not configured between Compute Nodes (no modification of
        /// the user's .ssh directory is done).
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Origin(Microsoft.Azure.PowerShell.Cmdlets.Batch.PropertyOrigin.Owned)]
        public System.Security.SecureString SshPrivateKey { get => this._sshPrivateKey; set => this._sshPrivateKey = value; }

        /// <summary>Backing field for <see cref="Uid" /> property.</summary>
        private int? _uid;

        /// <summary>
        /// The user ID of the user Account. The uid and gid properties must be specified together or not at all. If not specified
        /// the underlying operating system picks the uid.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Origin(Microsoft.Azure.PowerShell.Cmdlets.Batch.PropertyOrigin.Owned)]
        public int? Uid { get => this._uid; set => this._uid = value; }

        /// <summary>Creates an new <see cref="LinuxUserConfiguration" /> instance.</summary>
        public LinuxUserConfiguration()
        {

        }
    }
    /// Properties used to create a user Account on a Linux Compute Node.
    public partial interface ILinuxUserConfiguration :
        Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.IJsonSerializable
    {
        /// <summary>
        /// The group ID for the user Account. The uid and gid properties must be specified together or not at all. If not specified
        /// the underlying operating system picks the gid.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The group ID for the user Account. The uid and gid properties must be specified together or not at all. If not specified the underlying operating system picks the gid.",
        SerializedName = @"gid",
        PossibleTypes = new [] { typeof(int) })]
        int? Gid { get; set; }
        /// <summary>
        /// The SSH private key for the user Account. The private key must not be password protected. The private key is used to automatically
        /// configure asymmetric-key based authentication for SSH between Compute Nodes in a Linux Pool when the Pool's enableInterNodeCommunication
        /// property is true (it is ignored if enableInterNodeCommunication is false). It does this by placing the key pair into the
        /// user's .ssh directory. If not specified, password-less SSH is not configured between Compute Nodes (no modification of
        /// the user's .ssh directory is done).
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The SSH private key for the user Account. The private key must not be password protected. The private key is used to automatically configure asymmetric-key based authentication for SSH between Compute Nodes in a Linux Pool when the Pool's enableInterNodeCommunication property is true (it is ignored if enableInterNodeCommunication is false). It does this by placing the key pair into the user's .ssh directory. If not specified, password-less SSH is not configured between Compute Nodes (no modification of the user's .ssh directory is done).",
        SerializedName = @"sshPrivateKey",
        PossibleTypes = new [] { typeof(System.Security.SecureString) })]
        System.Security.SecureString SshPrivateKey { get; set; }
        /// <summary>
        /// The user ID of the user Account. The uid and gid properties must be specified together or not at all. If not specified
        /// the underlying operating system picks the uid.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The user ID of the user Account. The uid and gid properties must be specified together or not at all. If not specified the underlying operating system picks the uid.",
        SerializedName = @"uid",
        PossibleTypes = new [] { typeof(int) })]
        int? Uid { get; set; }

    }
    /// Properties used to create a user Account on a Linux Compute Node.
    internal partial interface ILinuxUserConfigurationInternal

    {
        /// <summary>
        /// The group ID for the user Account. The uid and gid properties must be specified together or not at all. If not specified
        /// the underlying operating system picks the gid.
        /// </summary>
        int? Gid { get; set; }
        /// <summary>
        /// The SSH private key for the user Account. The private key must not be password protected. The private key is used to automatically
        /// configure asymmetric-key based authentication for SSH between Compute Nodes in a Linux Pool when the Pool's enableInterNodeCommunication
        /// property is true (it is ignored if enableInterNodeCommunication is false). It does this by placing the key pair into the
        /// user's .ssh directory. If not specified, password-less SSH is not configured between Compute Nodes (no modification of
        /// the user's .ssh directory is done).
        /// </summary>
        System.Security.SecureString SshPrivateKey { get; set; }
        /// <summary>
        /// The user ID of the user Account. The uid and gid properties must be specified together or not at all. If not specified
        /// the underlying operating system picks the uid.
        /// </summary>
        int? Uid { get; set; }

    }
}