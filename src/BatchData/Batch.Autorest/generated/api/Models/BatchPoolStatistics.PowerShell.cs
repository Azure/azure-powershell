// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Batch.Models
{
    using Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.PowerShell;

    /// <summary>Contains utilization and resource usage statistics for the lifetime of a Pool.</summary>
    [System.ComponentModel.TypeConverter(typeof(BatchPoolStatisticsTypeConverter))]
    public partial class BatchPoolStatistics
    {

        /// <summary>
        /// <c>AfterDeserializeDictionary</c> will be called after the deserialization has finished, allowing customization of the
        /// object before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>

        partial void AfterDeserializeDictionary(global::System.Collections.IDictionary content);

        /// <summary>
        /// <c>AfterDeserializePSObject</c> will be called after the deserialization has finished, allowing customization of the object
        /// before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>

        partial void AfterDeserializePSObject(global::System.Management.Automation.PSObject content);

        /// <summary>
        /// <c>BeforeDeserializeDictionary</c> will be called before the deserialization has commenced, allowing complete customization
        /// of the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <paramref name="returnNow" /> output
        /// parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeDeserializeDictionary(global::System.Collections.IDictionary content, ref bool returnNow);

        /// <summary>
        /// <c>BeforeDeserializePSObject</c> will be called before the deserialization has commenced, allowing complete customization
        /// of the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <paramref name="returnNow" /> output
        /// parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeDeserializePSObject(global::System.Management.Automation.PSObject content, ref bool returnNow);

        /// <summary>
        /// <c>OverrideToString</c> will be called if it is implemented. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="stringResult">/// instance serialized to a string, normally it is a Json</param>
        /// <param name="returnNow">/// set returnNow to true if you provide a customized OverrideToString function</param>

        partial void OverrideToString(ref string stringResult, ref bool returnNow);

        /// <summary>
        /// Deserializes a <see cref="global::System.Collections.IDictionary" /> into a new instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.BatchPoolStatistics"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        internal BatchPoolStatistics(global::System.Collections.IDictionary content)
        {
            bool returnNow = false;
            BeforeDeserializeDictionary(content, ref returnNow);
            if (returnNow)
            {
                return;
            }
            // actually deserialize
            if (content.Contains("UsageStatistics"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchPoolStatisticsInternal)this).UsageStatistics = (Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchPoolUsageStatistics) content.GetValueForProperty("UsageStatistics",((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchPoolStatisticsInternal)this).UsageStatistics, Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.BatchPoolUsageStatisticsTypeConverter.ConvertFrom);
            }
            if (content.Contains("ResourceStatistics"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchPoolStatisticsInternal)this).ResourceStatistics = (Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchPoolResourceStatistics) content.GetValueForProperty("ResourceStatistics",((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchPoolStatisticsInternal)this).ResourceStatistics, Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.BatchPoolResourceStatisticsTypeConverter.ConvertFrom);
            }
            if (content.Contains("Url"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchPoolStatisticsInternal)this).Url = (string) content.GetValueForProperty("Url",((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchPoolStatisticsInternal)this).Url, global::System.Convert.ToString);
            }
            if (content.Contains("StartTime"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchPoolStatisticsInternal)this).StartTime = (global::System.DateTime) content.GetValueForProperty("StartTime",((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchPoolStatisticsInternal)this).StartTime, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            if (content.Contains("LastUpdateTime"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchPoolStatisticsInternal)this).LastUpdateTime = (global::System.DateTime) content.GetValueForProperty("LastUpdateTime",((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchPoolStatisticsInternal)this).LastUpdateTime, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            if (content.Contains("UsageStatisticsStartTime"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchPoolStatisticsInternal)this).UsageStatisticsStartTime = (global::System.DateTime?) content.GetValueForProperty("UsageStatisticsStartTime",((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchPoolStatisticsInternal)this).UsageStatisticsStartTime, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            if (content.Contains("UsageStatisticsLastUpdateTime"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchPoolStatisticsInternal)this).UsageStatisticsLastUpdateTime = (global::System.DateTime?) content.GetValueForProperty("UsageStatisticsLastUpdateTime",((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchPoolStatisticsInternal)this).UsageStatisticsLastUpdateTime, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            if (content.Contains("UsageStatisticsDedicatedCoreTime"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchPoolStatisticsInternal)this).UsageStatisticsDedicatedCoreTime = (global::System.TimeSpan?) content.GetValueForProperty("UsageStatisticsDedicatedCoreTime",((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchPoolStatisticsInternal)this).UsageStatisticsDedicatedCoreTime, (v) => v is global::System.TimeSpan _v ? _v : global::System.Xml.XmlConvert.ToTimeSpan( v.ToString() ));
            }
            if (content.Contains("ResourceStatisticsStartTime"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchPoolStatisticsInternal)this).ResourceStatisticsStartTime = (global::System.DateTime?) content.GetValueForProperty("ResourceStatisticsStartTime",((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchPoolStatisticsInternal)this).ResourceStatisticsStartTime, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            if (content.Contains("ResourceStatisticsLastUpdateTime"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchPoolStatisticsInternal)this).ResourceStatisticsLastUpdateTime = (global::System.DateTime?) content.GetValueForProperty("ResourceStatisticsLastUpdateTime",((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchPoolStatisticsInternal)this).ResourceStatisticsLastUpdateTime, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            if (content.Contains("ResourceStatisticsAvgCpuPercentage"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchPoolStatisticsInternal)this).ResourceStatisticsAvgCpuPercentage = (float?) content.GetValueForProperty("ResourceStatisticsAvgCpuPercentage",((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchPoolStatisticsInternal)this).ResourceStatisticsAvgCpuPercentage, (__y)=> (float) global::System.Convert.ChangeType(__y, typeof(float)));
            }
            if (content.Contains("ResourceStatisticsAvgMemoryGiB"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchPoolStatisticsInternal)this).ResourceStatisticsAvgMemoryGiB = (float?) content.GetValueForProperty("ResourceStatisticsAvgMemoryGiB",((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchPoolStatisticsInternal)this).ResourceStatisticsAvgMemoryGiB, (__y)=> (float) global::System.Convert.ChangeType(__y, typeof(float)));
            }
            if (content.Contains("ResourceStatisticsPeakMemoryGiB"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchPoolStatisticsInternal)this).ResourceStatisticsPeakMemoryGiB = (float?) content.GetValueForProperty("ResourceStatisticsPeakMemoryGiB",((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchPoolStatisticsInternal)this).ResourceStatisticsPeakMemoryGiB, (__y)=> (float) global::System.Convert.ChangeType(__y, typeof(float)));
            }
            if (content.Contains("ResourceStatisticsAvgDiskGiB"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchPoolStatisticsInternal)this).ResourceStatisticsAvgDiskGiB = (float?) content.GetValueForProperty("ResourceStatisticsAvgDiskGiB",((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchPoolStatisticsInternal)this).ResourceStatisticsAvgDiskGiB, (__y)=> (float) global::System.Convert.ChangeType(__y, typeof(float)));
            }
            if (content.Contains("ResourceStatisticsPeakDiskGiB"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchPoolStatisticsInternal)this).ResourceStatisticsPeakDiskGiB = (float?) content.GetValueForProperty("ResourceStatisticsPeakDiskGiB",((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchPoolStatisticsInternal)this).ResourceStatisticsPeakDiskGiB, (__y)=> (float) global::System.Convert.ChangeType(__y, typeof(float)));
            }
            if (content.Contains("ResourceStatisticsDiskReadIop"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchPoolStatisticsInternal)this).ResourceStatisticsDiskReadIop = (string) content.GetValueForProperty("ResourceStatisticsDiskReadIop",((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchPoolStatisticsInternal)this).ResourceStatisticsDiskReadIop, global::System.Convert.ToString);
            }
            if (content.Contains("ResourceStatisticsDiskWriteIop"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchPoolStatisticsInternal)this).ResourceStatisticsDiskWriteIop = (string) content.GetValueForProperty("ResourceStatisticsDiskWriteIop",((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchPoolStatisticsInternal)this).ResourceStatisticsDiskWriteIop, global::System.Convert.ToString);
            }
            if (content.Contains("ResourceStatisticsDiskReadGiB"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchPoolStatisticsInternal)this).ResourceStatisticsDiskReadGiB = (float?) content.GetValueForProperty("ResourceStatisticsDiskReadGiB",((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchPoolStatisticsInternal)this).ResourceStatisticsDiskReadGiB, (__y)=> (float) global::System.Convert.ChangeType(__y, typeof(float)));
            }
            if (content.Contains("ResourceStatisticsDiskWriteGiB"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchPoolStatisticsInternal)this).ResourceStatisticsDiskWriteGiB = (float?) content.GetValueForProperty("ResourceStatisticsDiskWriteGiB",((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchPoolStatisticsInternal)this).ResourceStatisticsDiskWriteGiB, (__y)=> (float) global::System.Convert.ChangeType(__y, typeof(float)));
            }
            if (content.Contains("ResourceStatisticsNetworkReadGiB"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchPoolStatisticsInternal)this).ResourceStatisticsNetworkReadGiB = (float?) content.GetValueForProperty("ResourceStatisticsNetworkReadGiB",((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchPoolStatisticsInternal)this).ResourceStatisticsNetworkReadGiB, (__y)=> (float) global::System.Convert.ChangeType(__y, typeof(float)));
            }
            if (content.Contains("ResourceStatisticsNetworkWriteGiB"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchPoolStatisticsInternal)this).ResourceStatisticsNetworkWriteGiB = (float?) content.GetValueForProperty("ResourceStatisticsNetworkWriteGiB",((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchPoolStatisticsInternal)this).ResourceStatisticsNetworkWriteGiB, (__y)=> (float) global::System.Convert.ChangeType(__y, typeof(float)));
            }
            AfterDeserializeDictionary(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Management.Automation.PSObject" /> into a new instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.BatchPoolStatistics"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        internal BatchPoolStatistics(global::System.Management.Automation.PSObject content)
        {
            bool returnNow = false;
            BeforeDeserializePSObject(content, ref returnNow);
            if (returnNow)
            {
                return;
            }
            // actually deserialize
            if (content.Contains("UsageStatistics"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchPoolStatisticsInternal)this).UsageStatistics = (Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchPoolUsageStatistics) content.GetValueForProperty("UsageStatistics",((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchPoolStatisticsInternal)this).UsageStatistics, Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.BatchPoolUsageStatisticsTypeConverter.ConvertFrom);
            }
            if (content.Contains("ResourceStatistics"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchPoolStatisticsInternal)this).ResourceStatistics = (Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchPoolResourceStatistics) content.GetValueForProperty("ResourceStatistics",((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchPoolStatisticsInternal)this).ResourceStatistics, Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.BatchPoolResourceStatisticsTypeConverter.ConvertFrom);
            }
            if (content.Contains("Url"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchPoolStatisticsInternal)this).Url = (string) content.GetValueForProperty("Url",((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchPoolStatisticsInternal)this).Url, global::System.Convert.ToString);
            }
            if (content.Contains("StartTime"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchPoolStatisticsInternal)this).StartTime = (global::System.DateTime) content.GetValueForProperty("StartTime",((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchPoolStatisticsInternal)this).StartTime, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            if (content.Contains("LastUpdateTime"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchPoolStatisticsInternal)this).LastUpdateTime = (global::System.DateTime) content.GetValueForProperty("LastUpdateTime",((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchPoolStatisticsInternal)this).LastUpdateTime, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            if (content.Contains("UsageStatisticsStartTime"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchPoolStatisticsInternal)this).UsageStatisticsStartTime = (global::System.DateTime?) content.GetValueForProperty("UsageStatisticsStartTime",((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchPoolStatisticsInternal)this).UsageStatisticsStartTime, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            if (content.Contains("UsageStatisticsLastUpdateTime"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchPoolStatisticsInternal)this).UsageStatisticsLastUpdateTime = (global::System.DateTime?) content.GetValueForProperty("UsageStatisticsLastUpdateTime",((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchPoolStatisticsInternal)this).UsageStatisticsLastUpdateTime, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            if (content.Contains("UsageStatisticsDedicatedCoreTime"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchPoolStatisticsInternal)this).UsageStatisticsDedicatedCoreTime = (global::System.TimeSpan?) content.GetValueForProperty("UsageStatisticsDedicatedCoreTime",((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchPoolStatisticsInternal)this).UsageStatisticsDedicatedCoreTime, (v) => v is global::System.TimeSpan _v ? _v : global::System.Xml.XmlConvert.ToTimeSpan( v.ToString() ));
            }
            if (content.Contains("ResourceStatisticsStartTime"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchPoolStatisticsInternal)this).ResourceStatisticsStartTime = (global::System.DateTime?) content.GetValueForProperty("ResourceStatisticsStartTime",((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchPoolStatisticsInternal)this).ResourceStatisticsStartTime, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            if (content.Contains("ResourceStatisticsLastUpdateTime"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchPoolStatisticsInternal)this).ResourceStatisticsLastUpdateTime = (global::System.DateTime?) content.GetValueForProperty("ResourceStatisticsLastUpdateTime",((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchPoolStatisticsInternal)this).ResourceStatisticsLastUpdateTime, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            if (content.Contains("ResourceStatisticsAvgCpuPercentage"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchPoolStatisticsInternal)this).ResourceStatisticsAvgCpuPercentage = (float?) content.GetValueForProperty("ResourceStatisticsAvgCpuPercentage",((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchPoolStatisticsInternal)this).ResourceStatisticsAvgCpuPercentage, (__y)=> (float) global::System.Convert.ChangeType(__y, typeof(float)));
            }
            if (content.Contains("ResourceStatisticsAvgMemoryGiB"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchPoolStatisticsInternal)this).ResourceStatisticsAvgMemoryGiB = (float?) content.GetValueForProperty("ResourceStatisticsAvgMemoryGiB",((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchPoolStatisticsInternal)this).ResourceStatisticsAvgMemoryGiB, (__y)=> (float) global::System.Convert.ChangeType(__y, typeof(float)));
            }
            if (content.Contains("ResourceStatisticsPeakMemoryGiB"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchPoolStatisticsInternal)this).ResourceStatisticsPeakMemoryGiB = (float?) content.GetValueForProperty("ResourceStatisticsPeakMemoryGiB",((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchPoolStatisticsInternal)this).ResourceStatisticsPeakMemoryGiB, (__y)=> (float) global::System.Convert.ChangeType(__y, typeof(float)));
            }
            if (content.Contains("ResourceStatisticsAvgDiskGiB"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchPoolStatisticsInternal)this).ResourceStatisticsAvgDiskGiB = (float?) content.GetValueForProperty("ResourceStatisticsAvgDiskGiB",((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchPoolStatisticsInternal)this).ResourceStatisticsAvgDiskGiB, (__y)=> (float) global::System.Convert.ChangeType(__y, typeof(float)));
            }
            if (content.Contains("ResourceStatisticsPeakDiskGiB"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchPoolStatisticsInternal)this).ResourceStatisticsPeakDiskGiB = (float?) content.GetValueForProperty("ResourceStatisticsPeakDiskGiB",((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchPoolStatisticsInternal)this).ResourceStatisticsPeakDiskGiB, (__y)=> (float) global::System.Convert.ChangeType(__y, typeof(float)));
            }
            if (content.Contains("ResourceStatisticsDiskReadIop"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchPoolStatisticsInternal)this).ResourceStatisticsDiskReadIop = (string) content.GetValueForProperty("ResourceStatisticsDiskReadIop",((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchPoolStatisticsInternal)this).ResourceStatisticsDiskReadIop, global::System.Convert.ToString);
            }
            if (content.Contains("ResourceStatisticsDiskWriteIop"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchPoolStatisticsInternal)this).ResourceStatisticsDiskWriteIop = (string) content.GetValueForProperty("ResourceStatisticsDiskWriteIop",((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchPoolStatisticsInternal)this).ResourceStatisticsDiskWriteIop, global::System.Convert.ToString);
            }
            if (content.Contains("ResourceStatisticsDiskReadGiB"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchPoolStatisticsInternal)this).ResourceStatisticsDiskReadGiB = (float?) content.GetValueForProperty("ResourceStatisticsDiskReadGiB",((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchPoolStatisticsInternal)this).ResourceStatisticsDiskReadGiB, (__y)=> (float) global::System.Convert.ChangeType(__y, typeof(float)));
            }
            if (content.Contains("ResourceStatisticsDiskWriteGiB"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchPoolStatisticsInternal)this).ResourceStatisticsDiskWriteGiB = (float?) content.GetValueForProperty("ResourceStatisticsDiskWriteGiB",((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchPoolStatisticsInternal)this).ResourceStatisticsDiskWriteGiB, (__y)=> (float) global::System.Convert.ChangeType(__y, typeof(float)));
            }
            if (content.Contains("ResourceStatisticsNetworkReadGiB"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchPoolStatisticsInternal)this).ResourceStatisticsNetworkReadGiB = (float?) content.GetValueForProperty("ResourceStatisticsNetworkReadGiB",((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchPoolStatisticsInternal)this).ResourceStatisticsNetworkReadGiB, (__y)=> (float) global::System.Convert.ChangeType(__y, typeof(float)));
            }
            if (content.Contains("ResourceStatisticsNetworkWriteGiB"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchPoolStatisticsInternal)this).ResourceStatisticsNetworkWriteGiB = (float?) content.GetValueForProperty("ResourceStatisticsNetworkWriteGiB",((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchPoolStatisticsInternal)this).ResourceStatisticsNetworkWriteGiB, (__y)=> (float) global::System.Convert.ChangeType(__y, typeof(float)));
            }
            AfterDeserializePSObject(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Collections.IDictionary" /> into an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.BatchPoolStatistics"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        /// <returns>
        /// an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchPoolStatistics" />.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchPoolStatistics DeserializeFromDictionary(global::System.Collections.IDictionary content)
        {
            return new BatchPoolStatistics(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Management.Automation.PSObject" /> into an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.BatchPoolStatistics"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        /// <returns>
        /// an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchPoolStatistics" />.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchPoolStatistics DeserializeFromPSObject(global::System.Management.Automation.PSObject content)
        {
            return new BatchPoolStatistics(content);
        }

        /// <summary>
        /// Creates a new instance of <see cref="BatchPoolStatistics" />, deserializing the content from a json string.
        /// </summary>
        /// <param name="jsonText">a string containing a JSON serialized instance of this model.</param>
        /// <returns>an instance of the <see cref="BatchPoolStatistics" /> model class.</returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchPoolStatistics FromJsonString(string jsonText) => FromJson(Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.Json.JsonNode.Parse(jsonText));

        /// <summary>Serializes this instance to a json string.</summary>

        /// <returns>a <see cref="System.String" /> containing this model serialized to JSON text.</returns>
        public string ToJsonString() => ToJson(null, Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.SerializationMode.IncludeAll)?.ToString();

        public override string ToString()
        {
            var returnNow = false;
            var result = global::System.String.Empty;
            OverrideToString(ref result, ref returnNow);
            if (returnNow)
            {
                return result;
            }
            return ToJsonString();
        }
    }
    /// Contains utilization and resource usage statistics for the lifetime of a Pool.
    [System.ComponentModel.TypeConverter(typeof(BatchPoolStatisticsTypeConverter))]
    public partial interface IBatchPoolStatistics

    {

    }
}