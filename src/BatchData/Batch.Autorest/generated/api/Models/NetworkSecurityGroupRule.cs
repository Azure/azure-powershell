// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Batch.Models
{
    using static Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.Extensions;

    /// <summary>A network security group rule to apply to an inbound endpoint.</summary>
    public partial class NetworkSecurityGroupRule :
        Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.INetworkSecurityGroupRule,
        Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.INetworkSecurityGroupRuleInternal
    {

        /// <summary>Backing field for <see cref="Access" /> property.</summary>
        private string _access;

        /// <summary>
        /// The action that should be taken for a specified IP address, subnet range or tag.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Origin(Microsoft.Azure.PowerShell.Cmdlets.Batch.PropertyOrigin.Owned)]
        public string Access { get => this._access; set => this._access = value; }

        /// <summary>Backing field for <see cref="Priority" /> property.</summary>
        private int _priority;

        /// <summary>
        /// The priority for this rule. Priorities within a Pool must be unique and are evaluated in order of priority. The lower
        /// the number the higher the priority. For example, rules could be specified with order numbers of 150, 250, and 350. The
        /// rule with the order number of 150 takes precedence over the rule that has an order of 250. Allowed priorities are 150
        /// to 4096. If any reserved or duplicate values are provided the request fails with HTTP status code 400.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Origin(Microsoft.Azure.PowerShell.Cmdlets.Batch.PropertyOrigin.Owned)]
        public int Priority { get => this._priority; set => this._priority = value; }

        /// <summary>Backing field for <see cref="SourceAddressPrefix" /> property.</summary>
        private string _sourceAddressPrefix;

        /// <summary>
        /// The source address prefix or tag to match for the rule. Valid values are a single IP address (i.e. 10.10.10.10), IP subnet
        /// (i.e. 192.168.1.0/24), default tag, or * (for all addresses). If any other values are provided the request fails with
        /// HTTP status code 400.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Origin(Microsoft.Azure.PowerShell.Cmdlets.Batch.PropertyOrigin.Owned)]
        public string SourceAddressPrefix { get => this._sourceAddressPrefix; set => this._sourceAddressPrefix = value; }

        /// <summary>Backing field for <see cref="SourcePortRange" /> property.</summary>
        private System.Collections.Generic.List<string> _sourcePortRange;

        /// <summary>
        /// The source port ranges to match for the rule. Valid values are '*' (for all ports 0 - 65535), a specific port (i.e. 22),
        /// or a port range (i.e. 100-200). The ports must be in the range of 0 to 65535. Each entry in this collection must not overlap
        /// any other entry (either a range or an individual port). If any other values are provided the request fails with HTTP status
        /// code 400. The default value is '*'.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Origin(Microsoft.Azure.PowerShell.Cmdlets.Batch.PropertyOrigin.Owned)]
        public System.Collections.Generic.List<string> SourcePortRange { get => this._sourcePortRange; set => this._sourcePortRange = value; }

        /// <summary>Creates an new <see cref="NetworkSecurityGroupRule" /> instance.</summary>
        public NetworkSecurityGroupRule()
        {

        }
    }
    /// A network security group rule to apply to an inbound endpoint.
    public partial interface INetworkSecurityGroupRule :
        Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.IJsonSerializable
    {
        /// <summary>
        /// The action that should be taken for a specified IP address, subnet range or tag.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The action that should be taken for a specified IP address, subnet range or tag.",
        SerializedName = @"access",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.Batch.PSArgumentCompleterAttribute("allow", "deny")]
        string Access { get; set; }
        /// <summary>
        /// The priority for this rule. Priorities within a Pool must be unique and are evaluated in order of priority. The lower
        /// the number the higher the priority. For example, rules could be specified with order numbers of 150, 250, and 350. The
        /// rule with the order number of 150 takes precedence over the rule that has an order of 250. Allowed priorities are 150
        /// to 4096. If any reserved or duplicate values are provided the request fails with HTTP status code 400.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The priority for this rule. Priorities within a Pool must be unique and are evaluated in order of priority. The lower the number the higher the priority. For example, rules could be specified with order numbers of 150, 250, and 350. The rule with the order number of 150 takes precedence over the rule that has an order of 250. Allowed priorities are 150 to 4096. If any reserved or duplicate values are provided the request fails with HTTP status code 400.",
        SerializedName = @"priority",
        PossibleTypes = new [] { typeof(int) })]
        int Priority { get; set; }
        /// <summary>
        /// The source address prefix or tag to match for the rule. Valid values are a single IP address (i.e. 10.10.10.10), IP subnet
        /// (i.e. 192.168.1.0/24), default tag, or * (for all addresses). If any other values are provided the request fails with
        /// HTTP status code 400.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The source address prefix or tag to match for the rule. Valid values are a single IP address (i.e. 10.10.10.10), IP subnet (i.e. 192.168.1.0/24), default tag, or * (for all addresses).  If any other values are provided the request fails with HTTP status code 400.",
        SerializedName = @"sourceAddressPrefix",
        PossibleTypes = new [] { typeof(string) })]
        string SourceAddressPrefix { get; set; }
        /// <summary>
        /// The source port ranges to match for the rule. Valid values are '*' (for all ports 0 - 65535), a specific port (i.e. 22),
        /// or a port range (i.e. 100-200). The ports must be in the range of 0 to 65535. Each entry in this collection must not overlap
        /// any other entry (either a range or an individual port). If any other values are provided the request fails with HTTP status
        /// code 400. The default value is '*'.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The source port ranges to match for the rule. Valid values are '*' (for all ports 0 - 65535), a specific port (i.e. 22), or a port range (i.e. 100-200). The ports must be in the range of 0 to 65535. Each entry in this collection must not overlap any other entry (either a range or an individual port). If any other values are provided the request fails with HTTP status code 400. The default value is '*'.",
        SerializedName = @"sourcePortRanges",
        PossibleTypes = new [] { typeof(string) })]
        System.Collections.Generic.List<string> SourcePortRange { get; set; }

    }
    /// A network security group rule to apply to an inbound endpoint.
    internal partial interface INetworkSecurityGroupRuleInternal

    {
        /// <summary>
        /// The action that should be taken for a specified IP address, subnet range or tag.
        /// </summary>
        [global::Microsoft.Azure.PowerShell.Cmdlets.Batch.PSArgumentCompleterAttribute("allow", "deny")]
        string Access { get; set; }
        /// <summary>
        /// The priority for this rule. Priorities within a Pool must be unique and are evaluated in order of priority. The lower
        /// the number the higher the priority. For example, rules could be specified with order numbers of 150, 250, and 350. The
        /// rule with the order number of 150 takes precedence over the rule that has an order of 250. Allowed priorities are 150
        /// to 4096. If any reserved or duplicate values are provided the request fails with HTTP status code 400.
        /// </summary>
        int Priority { get; set; }
        /// <summary>
        /// The source address prefix or tag to match for the rule. Valid values are a single IP address (i.e. 10.10.10.10), IP subnet
        /// (i.e. 192.168.1.0/24), default tag, or * (for all addresses). If any other values are provided the request fails with
        /// HTTP status code 400.
        /// </summary>
        string SourceAddressPrefix { get; set; }
        /// <summary>
        /// The source port ranges to match for the rule. Valid values are '*' (for all ports 0 - 65535), a specific port (i.e. 22),
        /// or a port range (i.e. 100-200). The ports must be in the range of 0 to 65535. Each entry in this collection must not overlap
        /// any other entry (either a range or an individual port). If any other values are provided the request fails with HTTP status
        /// code 400. The default value is '*'.
        /// </summary>
        System.Collections.Generic.List<string> SourcePortRange { get; set; }

    }
}