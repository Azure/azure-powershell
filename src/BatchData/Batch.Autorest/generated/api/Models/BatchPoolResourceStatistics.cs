// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Batch.Models
{
    using static Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.Extensions;

    /// <summary>Statistics related to resource consumption by Compute Nodes in a Pool.</summary>
    public partial class BatchPoolResourceStatistics :
        Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchPoolResourceStatistics,
        Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchPoolResourceStatisticsInternal
    {

        /// <summary>Backing field for <see cref="AvgCpuPercentage" /> property.</summary>
        private float _avgCpuPercentage;

        /// <summary>
        /// The average CPU usage across all Compute Nodes in the Pool (percentage per node).
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Origin(Microsoft.Azure.PowerShell.Cmdlets.Batch.PropertyOrigin.Owned)]
        public float AvgCpuPercentage { get => this._avgCpuPercentage; set => this._avgCpuPercentage = value; }

        /// <summary>Backing field for <see cref="AvgDiskGiB" /> property.</summary>
        private float _avgDiskGiB;

        /// <summary>The average used disk space in GiB across all Compute Nodes in the Pool.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Origin(Microsoft.Azure.PowerShell.Cmdlets.Batch.PropertyOrigin.Owned)]
        public float AvgDiskGiB { get => this._avgDiskGiB; set => this._avgDiskGiB = value; }

        /// <summary>Backing field for <see cref="AvgMemoryGiB" /> property.</summary>
        private float _avgMemoryGiB;

        /// <summary>The average memory usage in GiB across all Compute Nodes in the Pool.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Origin(Microsoft.Azure.PowerShell.Cmdlets.Batch.PropertyOrigin.Owned)]
        public float AvgMemoryGiB { get => this._avgMemoryGiB; set => this._avgMemoryGiB = value; }

        /// <summary>Backing field for <see cref="DiskReadGiB" /> property.</summary>
        private float _diskReadGiB;

        /// <summary>
        /// The total amount of data in GiB of disk reads across all Compute Nodes in the Pool.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Origin(Microsoft.Azure.PowerShell.Cmdlets.Batch.PropertyOrigin.Owned)]
        public float DiskReadGiB { get => this._diskReadGiB; set => this._diskReadGiB = value; }

        /// <summary>Backing field for <see cref="DiskReadIop" /> property.</summary>
        private string _diskReadIop;

        /// <summary>The total number of disk read operations across all Compute Nodes in the Pool.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Origin(Microsoft.Azure.PowerShell.Cmdlets.Batch.PropertyOrigin.Owned)]
        public string DiskReadIop { get => this._diskReadIop; set => this._diskReadIop = value; }

        /// <summary>Backing field for <see cref="DiskWriteGiB" /> property.</summary>
        private float _diskWriteGiB;

        /// <summary>
        /// The total amount of data in GiB of disk writes across all Compute Nodes in the Pool.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Origin(Microsoft.Azure.PowerShell.Cmdlets.Batch.PropertyOrigin.Owned)]
        public float DiskWriteGiB { get => this._diskWriteGiB; set => this._diskWriteGiB = value; }

        /// <summary>Backing field for <see cref="DiskWriteIop" /> property.</summary>
        private string _diskWriteIop;

        /// <summary>The total number of disk write operations across all Compute Nodes in the Pool.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Origin(Microsoft.Azure.PowerShell.Cmdlets.Batch.PropertyOrigin.Owned)]
        public string DiskWriteIop { get => this._diskWriteIop; set => this._diskWriteIop = value; }

        /// <summary>Backing field for <see cref="LastUpdateTime" /> property.</summary>
        private global::System.DateTime _lastUpdateTime;

        /// <summary>
        /// The time at which the statistics were last updated. All statistics are limited to the range between startTime and lastUpdateTime.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Origin(Microsoft.Azure.PowerShell.Cmdlets.Batch.PropertyOrigin.Owned)]
        public global::System.DateTime LastUpdateTime { get => this._lastUpdateTime; set => this._lastUpdateTime = value; }

        /// <summary>Backing field for <see cref="NetworkReadGiB" /> property.</summary>
        private float _networkReadGiB;

        /// <summary>
        /// The total amount of data in GiB of network reads across all Compute Nodes in the Pool.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Origin(Microsoft.Azure.PowerShell.Cmdlets.Batch.PropertyOrigin.Owned)]
        public float NetworkReadGiB { get => this._networkReadGiB; set => this._networkReadGiB = value; }

        /// <summary>Backing field for <see cref="NetworkWriteGiB" /> property.</summary>
        private float _networkWriteGiB;

        /// <summary>
        /// The total amount of data in GiB of network writes across all Compute Nodes in the Pool.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Origin(Microsoft.Azure.PowerShell.Cmdlets.Batch.PropertyOrigin.Owned)]
        public float NetworkWriteGiB { get => this._networkWriteGiB; set => this._networkWriteGiB = value; }

        /// <summary>Backing field for <see cref="PeakDiskGiB" /> property.</summary>
        private float _peakDiskGiB;

        /// <summary>The peak used disk space in GiB across all Compute Nodes in the Pool.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Origin(Microsoft.Azure.PowerShell.Cmdlets.Batch.PropertyOrigin.Owned)]
        public float PeakDiskGiB { get => this._peakDiskGiB; set => this._peakDiskGiB = value; }

        /// <summary>Backing field for <see cref="PeakMemoryGiB" /> property.</summary>
        private float _peakMemoryGiB;

        /// <summary>The peak memory usage in GiB across all Compute Nodes in the Pool.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Origin(Microsoft.Azure.PowerShell.Cmdlets.Batch.PropertyOrigin.Owned)]
        public float PeakMemoryGiB { get => this._peakMemoryGiB; set => this._peakMemoryGiB = value; }

        /// <summary>Backing field for <see cref="StartTime" /> property.</summary>
        private global::System.DateTime _startTime;

        /// <summary>The start time of the time range covered by the statistics.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Origin(Microsoft.Azure.PowerShell.Cmdlets.Batch.PropertyOrigin.Owned)]
        public global::System.DateTime StartTime { get => this._startTime; set => this._startTime = value; }

        /// <summary>Creates an new <see cref="BatchPoolResourceStatistics" /> instance.</summary>
        public BatchPoolResourceStatistics()
        {

        }
    }
    /// Statistics related to resource consumption by Compute Nodes in a Pool.
    public partial interface IBatchPoolResourceStatistics :
        Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.IJsonSerializable
    {
        /// <summary>
        /// The average CPU usage across all Compute Nodes in the Pool (percentage per node).
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The average CPU usage across all Compute Nodes in the Pool (percentage per node).",
        SerializedName = @"avgCPUPercentage",
        PossibleTypes = new [] { typeof(float) })]
        float AvgCpuPercentage { get; set; }
        /// <summary>The average used disk space in GiB across all Compute Nodes in the Pool.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The average used disk space in GiB across all Compute Nodes in the Pool.",
        SerializedName = @"avgDiskGiB",
        PossibleTypes = new [] { typeof(float) })]
        float AvgDiskGiB { get; set; }
        /// <summary>The average memory usage in GiB across all Compute Nodes in the Pool.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The average memory usage in GiB across all Compute Nodes in the Pool.",
        SerializedName = @"avgMemoryGiB",
        PossibleTypes = new [] { typeof(float) })]
        float AvgMemoryGiB { get; set; }
        /// <summary>
        /// The total amount of data in GiB of disk reads across all Compute Nodes in the Pool.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The total amount of data in GiB of disk reads across all Compute Nodes in the Pool.",
        SerializedName = @"diskReadGiB",
        PossibleTypes = new [] { typeof(float) })]
        float DiskReadGiB { get; set; }
        /// <summary>The total number of disk read operations across all Compute Nodes in the Pool.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The total number of disk read operations across all Compute Nodes in the Pool.",
        SerializedName = @"diskReadIOps",
        PossibleTypes = new [] { typeof(string) })]
        string DiskReadIop { get; set; }
        /// <summary>
        /// The total amount of data in GiB of disk writes across all Compute Nodes in the Pool.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The total amount of data in GiB of disk writes across all Compute Nodes in the Pool.",
        SerializedName = @"diskWriteGiB",
        PossibleTypes = new [] { typeof(float) })]
        float DiskWriteGiB { get; set; }
        /// <summary>The total number of disk write operations across all Compute Nodes in the Pool.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The total number of disk write operations across all Compute Nodes in the Pool.",
        SerializedName = @"diskWriteIOps",
        PossibleTypes = new [] { typeof(string) })]
        string DiskWriteIop { get; set; }
        /// <summary>
        /// The time at which the statistics were last updated. All statistics are limited to the range between startTime and lastUpdateTime.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The time at which the statistics were last updated. All statistics are limited to the range between startTime and lastUpdateTime.",
        SerializedName = @"lastUpdateTime",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime LastUpdateTime { get; set; }
        /// <summary>
        /// The total amount of data in GiB of network reads across all Compute Nodes in the Pool.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The total amount of data in GiB of network reads across all Compute Nodes in the Pool.",
        SerializedName = @"networkReadGiB",
        PossibleTypes = new [] { typeof(float) })]
        float NetworkReadGiB { get; set; }
        /// <summary>
        /// The total amount of data in GiB of network writes across all Compute Nodes in the Pool.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The total amount of data in GiB of network writes across all Compute Nodes in the Pool.",
        SerializedName = @"networkWriteGiB",
        PossibleTypes = new [] { typeof(float) })]
        float NetworkWriteGiB { get; set; }
        /// <summary>The peak used disk space in GiB across all Compute Nodes in the Pool.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The peak used disk space in GiB across all Compute Nodes in the Pool.",
        SerializedName = @"peakDiskGiB",
        PossibleTypes = new [] { typeof(float) })]
        float PeakDiskGiB { get; set; }
        /// <summary>The peak memory usage in GiB across all Compute Nodes in the Pool.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The peak memory usage in GiB across all Compute Nodes in the Pool.",
        SerializedName = @"peakMemoryGiB",
        PossibleTypes = new [] { typeof(float) })]
        float PeakMemoryGiB { get; set; }
        /// <summary>The start time of the time range covered by the statistics.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The start time of the time range covered by the statistics.",
        SerializedName = @"startTime",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime StartTime { get; set; }

    }
    /// Statistics related to resource consumption by Compute Nodes in a Pool.
    internal partial interface IBatchPoolResourceStatisticsInternal

    {
        /// <summary>
        /// The average CPU usage across all Compute Nodes in the Pool (percentage per node).
        /// </summary>
        float AvgCpuPercentage { get; set; }
        /// <summary>The average used disk space in GiB across all Compute Nodes in the Pool.</summary>
        float AvgDiskGiB { get; set; }
        /// <summary>The average memory usage in GiB across all Compute Nodes in the Pool.</summary>
        float AvgMemoryGiB { get; set; }
        /// <summary>
        /// The total amount of data in GiB of disk reads across all Compute Nodes in the Pool.
        /// </summary>
        float DiskReadGiB { get; set; }
        /// <summary>The total number of disk read operations across all Compute Nodes in the Pool.</summary>
        string DiskReadIop { get; set; }
        /// <summary>
        /// The total amount of data in GiB of disk writes across all Compute Nodes in the Pool.
        /// </summary>
        float DiskWriteGiB { get; set; }
        /// <summary>The total number of disk write operations across all Compute Nodes in the Pool.</summary>
        string DiskWriteIop { get; set; }
        /// <summary>
        /// The time at which the statistics were last updated. All statistics are limited to the range between startTime and lastUpdateTime.
        /// </summary>
        global::System.DateTime LastUpdateTime { get; set; }
        /// <summary>
        /// The total amount of data in GiB of network reads across all Compute Nodes in the Pool.
        /// </summary>
        float NetworkReadGiB { get; set; }
        /// <summary>
        /// The total amount of data in GiB of network writes across all Compute Nodes in the Pool.
        /// </summary>
        float NetworkWriteGiB { get; set; }
        /// <summary>The peak used disk space in GiB across all Compute Nodes in the Pool.</summary>
        float PeakDiskGiB { get; set; }
        /// <summary>The peak memory usage in GiB across all Compute Nodes in the Pool.</summary>
        float PeakMemoryGiB { get; set; }
        /// <summary>The start time of the time range covered by the statistics.</summary>
        global::System.DateTime StartTime { get; set; }

    }
}