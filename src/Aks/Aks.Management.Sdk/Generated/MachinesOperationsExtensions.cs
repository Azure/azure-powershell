// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.
namespace Microsoft.Azure.Management.ContainerService
{
    using Microsoft.Rest.Azure;
    using Models;

    /// <summary>
    /// Extension methods for MachinesOperations
    /// </summary>
    public static partial class MachinesOperationsExtensions
    {
        /// <summary>
        /// Gets a list of machines in the specified agent pool.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='resourceGroupName'>
        /// The name of the resource group. The name is case insensitive.
        /// </param>
        /// <param name='resourceName'>
        /// The name of the managed cluster resource.
        /// </param>
        /// <param name='agentPoolName'>
        /// The name of the agent pool.
        /// </param>
        public static Microsoft.Rest.Azure.IPage<Machine> List(this IMachinesOperations operations, string resourceGroupName, string resourceName, string agentPoolName)
        {
                return ((IMachinesOperations)operations).ListAsync(resourceGroupName, resourceName, agentPoolName).GetAwaiter().GetResult();
        }

        /// <summary>
        /// Gets a list of machines in the specified agent pool.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='resourceGroupName'>
        /// The name of the resource group. The name is case insensitive.
        /// </param>
        /// <param name='resourceName'>
        /// The name of the managed cluster resource.
        /// </param>
        /// <param name='agentPoolName'>
        /// The name of the agent pool.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        public static async System.Threading.Tasks.Task<Microsoft.Rest.Azure.IPage<Machine>> ListAsync(this IMachinesOperations operations, string resourceGroupName, string resourceName, string agentPoolName, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            using (var _result = await operations.ListWithHttpMessagesAsync(resourceGroupName, resourceName, agentPoolName, null, cancellationToken).ConfigureAwait(false))
            {
                return _result.Body;
            }
        }
        /// <summary>
        /// Get a specific machine in the specified agent pool.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='resourceGroupName'>
        /// The name of the resource group. The name is case insensitive.
        /// </param>
        /// <param name='resourceName'>
        /// The name of the managed cluster resource.
        /// </param>
        /// <param name='agentPoolName'>
        /// The name of the agent pool.
        /// </param>
        /// <param name='machineName'>
        /// host name of the machine
        /// </param>
        public static Machine Get(this IMachinesOperations operations, string resourceGroupName, string resourceName, string agentPoolName, string machineName)
        {
                return ((IMachinesOperations)operations).GetAsync(resourceGroupName, resourceName, agentPoolName, machineName).GetAwaiter().GetResult();
        }

        /// <summary>
        /// Get a specific machine in the specified agent pool.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='resourceGroupName'>
        /// The name of the resource group. The name is case insensitive.
        /// </param>
        /// <param name='resourceName'>
        /// The name of the managed cluster resource.
        /// </param>
        /// <param name='agentPoolName'>
        /// The name of the agent pool.
        /// </param>
        /// <param name='machineName'>
        /// host name of the machine
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        public static async System.Threading.Tasks.Task<Machine> GetAsync(this IMachinesOperations operations, string resourceGroupName, string resourceName, string agentPoolName, string machineName, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            using (var _result = await operations.GetWithHttpMessagesAsync(resourceGroupName, resourceName, agentPoolName, machineName, null, cancellationToken).ConfigureAwait(false))
            {
                return _result.Body;
            }
        }
        /// <summary>
        /// Gets a list of machines in the specified agent pool.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='nextPageLink'>
        /// The NextLink from the previous successful call to List operation.
        /// </param>
        public static Microsoft.Rest.Azure.IPage<Machine> ListNext(this IMachinesOperations operations, string nextPageLink)
        {
                return ((IMachinesOperations)operations).ListNextAsync(nextPageLink).GetAwaiter().GetResult();
        }

        /// <summary>
        /// Gets a list of machines in the specified agent pool.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='nextPageLink'>
        /// The NextLink from the previous successful call to List operation.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        public static async System.Threading.Tasks.Task<Microsoft.Rest.Azure.IPage<Machine>> ListNextAsync(this IMachinesOperations operations, string nextPageLink, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            using (var _result = await operations.ListNextWithHttpMessagesAsync(nextPageLink, null, cancellationToken).ConfigureAwait(false))
            {
                return _result.Body;
            }
        }
    }
}
