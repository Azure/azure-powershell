// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.ContainerService.Models
{
    using System.Linq;

    /// <summary>
    /// A machine. Contains details about the underlying virtual machine. A machine
    /// may be visible here but not in kubectl get nodes; if so it may be because
    /// the machine has not been registered with the Kubernetes API Server yet.
    /// </summary>
    public partial class Machine : SubResource
    {
        /// <summary>
        /// Initializes a new instance of the Machine class.
        /// </summary>
        public Machine()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the Machine class.
        /// </summary>

        /// <param name="id">Resource ID.
        /// </param>

        /// <param name="name">The name of the resource that is unique within a resource group. This name
        /// can be used to access the resource.
        /// </param>

        /// <param name="type">Resource type
        /// </param>

        /// <param name="zones">The Availability zone in which machine is located.
        /// </param>

        /// <param name="properties">The properties of the machine
        /// </param>
        public Machine(string id = default(string), string name = default(string), string type = default(string), System.Collections.Generic.IList<string> zones = default(System.Collections.Generic.IList<string>), MachineProperties properties = default(MachineProperties))

        : base(id, name, type)
        {
            this.Zones = zones;
            this.Properties = properties;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets the Availability zone in which machine is located.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "zones")]
        public System.Collections.Generic.IList<string> Zones {get; private set; }

        /// <summary>
        /// Gets the properties of the machine
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties")]
        public MachineProperties Properties {get; private set; }
    }
}