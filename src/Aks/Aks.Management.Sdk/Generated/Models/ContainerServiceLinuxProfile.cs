// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.ContainerService.Models
{
    using System.Linq;

    /// <summary>
    /// Profile for Linux VMs in the container service cluster.
    /// </summary>
    public partial class ContainerServiceLinuxProfile
    {
        /// <summary>
        /// Initializes a new instance of the ContainerServiceLinuxProfile class.
        /// </summary>
        public ContainerServiceLinuxProfile()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the ContainerServiceLinuxProfile class.
        /// </summary>

        /// <param name="adminUsername">The administrator username to use for Linux VMs.
        /// </param>

        /// <param name="ssh">The SSH configuration for Linux-based VMs running on Azure.
        /// </param>
        public ContainerServiceLinuxProfile(string adminUsername, ContainerServiceSshConfiguration ssh)

        {
            this.AdminUsername = adminUsername;
            this.Ssh = ssh;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets or sets the administrator username to use for Linux VMs.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "adminUsername")]
        public string AdminUsername {get; set; }

        /// <summary>
        /// Gets or sets the SSH configuration for Linux-based VMs running on Azure.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "ssh")]
        public ContainerServiceSshConfiguration Ssh {get; set; }
        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (this.AdminUsername == null)
            {
                throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.CannotBeNull, "AdminUsername");
            }
            if (this.Ssh == null)
            {
                throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.CannotBeNull, "Ssh");
            }
            if (this.AdminUsername != null)
            {
                if (!System.Text.RegularExpressions.Regex.IsMatch(this.AdminUsername, "^[A-Za-z][-A-Za-z0-9_]*$"))
                {
                    throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.Pattern, "AdminUsername", "^[A-Za-z][-A-Za-z0-9_]*$");
                }
            }
            if (this.Ssh != null)
            {
                this.Ssh.Validate();
            }
        }
    }
}