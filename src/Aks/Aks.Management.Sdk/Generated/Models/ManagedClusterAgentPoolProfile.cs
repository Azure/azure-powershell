// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.ContainerService.Models
{
    using System.Linq;

    /// <summary>
    /// Profile for the container service agent pool.
    /// </summary>
    public partial class ManagedClusterAgentPoolProfile : ManagedClusterAgentPoolProfileProperties
    {
        /// <summary>
        /// Initializes a new instance of the ManagedClusterAgentPoolProfile class.
        /// </summary>
        public ManagedClusterAgentPoolProfile()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the ManagedClusterAgentPoolProfile class.
        /// </summary>

        /// <param name="eTag">Unique read-only string used to implement optimistic concurrency. The eTag
        /// value will change when the resource is updated. Specify an if-match or
        /// if-none-match header with the eTag value for a subsequent request to enable
        /// optimistic concurrency per the normal etag convention.
        /// </param>

        /// <param name="count">Number of agents (VMs) to host docker containers. Allowed values must be in
        /// the range of 0 to 1000 (inclusive) for user pools and in the range of 1 to
        /// 1000 (inclusive) for system pools. The default value is 1.
        /// </param>

        /// <param name="vmSize">The size of the agent pool VMs. VM size availability varies by region. If a
        /// node contains insufficient compute resources (memory, cpu, etc) pods might
        /// fail to run correctly. For more details on restricted VM sizes, see:
        /// https://docs.microsoft.com/azure/aks/quotas-skus-regions
        /// </param>

        /// <param name="osDiskSizeGb">OS Disk Size in GB to be used to specify the disk size for every machine in
        /// the master/agent pool. If you specify 0, it will apply the default osDisk
        /// size according to the vmSize specified.
        /// </param>

        /// <param name="osDiskType">The OS disk type to be used for machines in the agent pool. The default is
        /// &#39;Ephemeral&#39; if the VM supports it and has a cache disk larger than the
        /// requested OSDiskSizeGB. Otherwise, defaults to &#39;Managed&#39;. May not be
        /// changed after creation. For more information see [Ephemeral
        /// OS](https://docs.microsoft.com/azure/aks/cluster-configuration#ephemeral-os).
        /// Possible values include: &#39;Managed&#39;, &#39;Ephemeral&#39;</param>

        /// <param name="kubeletDiskType">Determines the placement of emptyDir volumes, container runtime data root,
        /// and Kubelet ephemeral storage.
        /// Possible values include: &#39;OS&#39;, &#39;Temporary&#39;</param>

        /// <param name="workloadRuntime">Determines the type of workload a node can run.
        /// Possible values include: &#39;OCIContainer&#39;, &#39;WasmWasi&#39;</param>

        /// <param name="messageOfTheDay">Message of the day for Linux nodes, base64-encoded. A base64-encoded string
        /// which will be written to /etc/motd after decoding. This allows
        /// customization of the message of the day for Linux nodes. It must not be
        /// specified for Windows nodes. It must be a static string (i.e., will be
        /// printed raw and not be executed as a script).
        /// </param>

        /// <param name="vnetSubnetId">The ID of the subnet which agent pool nodes and optionally pods will join
        /// on startup. If this is not specified, a VNET and subnet will be generated
        /// and used. If no podSubnetID is specified, this applies to nodes and pods,
        /// otherwise it applies to just nodes. This is of the form:
        /// /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworks/{virtualNetworkName}/subnets/{subnetName}
        /// </param>

        /// <param name="podSubnetId">The ID of the subnet which pods will join when launched. If omitted, pod
        /// IPs are statically assigned on the node subnet (see vnetSubnetID for more
        /// details). This is of the form:
        /// /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworks/{virtualNetworkName}/subnets/{subnetName}
        /// </param>

        /// <param name="podIPAllocationMode">Pod IP Allocation Mode. The IP allocation mode for pods in the agent pool.
        /// Must be used with podSubnetId. The default is &#39;DynamicIndividual&#39;.
        /// Possible values include: &#39;DynamicIndividual&#39;, &#39;StaticBlock&#39;</param>

        /// <param name="maxPods">The maximum number of pods that can run on a node.
        /// </param>

        /// <param name="osType">The operating system type. The default is Linux.
        /// Possible values include: &#39;Linux&#39;, &#39;Windows&#39;</param>

        /// <param name="osSku">Specifies the OS SKU used by the agent pool. The default is Ubuntu if
        /// OSType is Linux. The default is Windows2019 when Kubernetes &lt;= 1.24 or
        /// Windows2022 when Kubernetes &gt;= 1.25 if OSType is Windows.
        /// Possible values include: &#39;Ubuntu&#39;, &#39;AzureLinux&#39;, &#39;AzureLinux3&#39;,
        /// &#39;CBLMariner&#39;, &#39;Windows2019&#39;, &#39;Windows2022&#39;, &#39;Ubuntu2204&#39;</param>

        /// <param name="maxCount">The maximum number of nodes for auto-scaling
        /// </param>

        /// <param name="minCount">The minimum number of nodes for auto-scaling
        /// </param>

        /// <param name="enableAutoScaling">Whether to enable auto-scaler
        /// </param>

        /// <param name="scaleDownMode">The scale down mode to use when scaling the Agent Pool. This also effects
        /// the cluster autoscaler behavior. If not specified, it defaults to Delete.
        /// Possible values include: &#39;Delete&#39;, &#39;Deallocate&#39;</param>

        /// <param name="type">The type of Agent Pool.
        /// Possible values include: &#39;VirtualMachineScaleSets&#39;, &#39;AvailabilitySet&#39;,
        /// &#39;VirtualMachines&#39;</param>

        /// <param name="mode">The mode of an agent pool. A cluster must have at least one &#39;System&#39; Agent
        /// Pool at all times. For additional information on agent pool restrictions
        /// and best practices, see:
        /// https://docs.microsoft.com/azure/aks/use-system-pools
        /// Possible values include: &#39;System&#39;, &#39;User&#39;, &#39;Gateway&#39;</param>

        /// <param name="orchestratorVersion">The version of Kubernetes specified by the user. Both patch version
        /// (major.minor.patch) (e.g. 1.20.13) and (major.minor) (e.g. 1.20) are
        /// supported. When (major.minor) is specified, the latest supported GA patch
        /// version is chosen automatically. Updating the cluster with the same
        /// (major.minor) once it has been created (e.g. 1.14.x -) 1.14) will not
        /// trigger an upgrade, even if a newer patch version is available. As a best
        /// practice, you should upgrade all node pools in an AKS cluster to the same
        /// Kubernetes version. The node pool version must have the same major version
        /// as the control plane. The node pool minor version must be within two minor
        /// versions of the control plane version. The node pool version cannot be
        /// greater than the control plane version. For more information see [upgrading
        /// a node
        /// pool](https://docs.microsoft.com/azure/aks/use-multiple-node-pools#upgrade-a-node-pool).
        /// </param>

        /// <param name="currentOrchestratorVersion">The version of Kubernetes the Agent Pool is running. If orchestratorVersion
        /// is a fully specified version (major.minor.patch), this field will be
        /// exactly equal to it. If orchestratorVersion is (major.minor), this field
        /// will contain the full (major.minor.patch) version being used.
        /// </param>

        /// <param name="nodeImageVersion">The version of node image
        /// </param>

        /// <param name="upgradeSettings">Settings for upgrading the agentpool
        /// </param>

        /// <param name="provisioningState">The current deployment or provisioning state.
        /// </param>

        /// <param name="powerState">Whether the Agent Pool is running or stopped. When an Agent Pool is first
        /// created it is initially Running. The Agent Pool can be stopped by setting
        /// this field to Stopped. A stopped Agent Pool stops all of its VMs and does
        /// not accrue billing charges. An Agent Pool can only be stopped if it is
        /// Running and provisioning state is Succeeded
        /// </param>

        /// <param name="availabilityZones">The list of Availability zones to use for nodes. This can only be specified
        /// if the AgentPoolType property is &#39;VirtualMachineScaleSets&#39;.
        /// </param>

        /// <param name="enableNodePublicIP">Whether each node is allocated its own public IP. Some scenarios may
        /// require nodes in a node pool to receive their own dedicated public IP
        /// addresses. A common scenario is for gaming workloads, where a console needs
        /// to make a direct connection to a cloud virtual machine to minimize hops.
        /// For more information see [assigning a public IP per
        /// node](https://docs.microsoft.com/azure/aks/use-multiple-node-pools#assign-a-public-ip-per-node-for-your-node-pools).
        /// The default is false.
        /// </param>

        /// <param name="nodePublicIPPrefixId">The public IP prefix ID which VM nodes should use IPs from. This is of the
        /// form:
        /// /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/publicIPPrefixes/{publicIPPrefixName}
        /// </param>

        /// <param name="scaleSetPriority">The Virtual Machine Scale Set priority. If not specified, the default is
        /// &#39;Regular&#39;.
        /// Possible values include: &#39;Spot&#39;, &#39;Regular&#39;</param>

        /// <param name="scaleSetEvictionPolicy">The Virtual Machine Scale Set eviction policy to use. This cannot be
        /// specified unless the scaleSetPriority is &#39;Spot&#39;. If not specified, the
        /// default is &#39;Delete&#39;.
        /// Possible values include: &#39;Delete&#39;, &#39;Deallocate&#39;</param>

        /// <param name="spotMaxPrice">The max price (in US Dollars) you are willing to pay for spot instances.
        /// Possible values are any decimal value greater than zero or -1 which
        /// indicates default price to be up-to on-demand. Possible values are any
        /// decimal value greater than zero or -1 which indicates the willingness to
        /// pay any on-demand price. For more details on spot pricing, see [spot VMs
        /// pricing](https://docs.microsoft.com/azure/virtual-machines/spot-vms#pricing)
        /// </param>

        /// <param name="tags">The tags to be persisted on the agent pool virtual machine scale set.
        /// </param>

        /// <param name="nodeLabels">The node labels to be persisted across all nodes in agent pool.
        /// </param>

        /// <param name="nodeTaints">The taints added to new nodes during node pool create and scale. For
        /// example, key=value:NoSchedule.
        /// </param>

        /// <param name="proximityPlacementGroupId">The ID for Proximity Placement Group.
        /// </param>

        /// <param name="kubeletConfig">The Kubelet configuration on the agent pool nodes.
        /// </param>

        /// <param name="linuxOSConfig">The OS configuration of Linux agent nodes.
        /// </param>

        /// <param name="enableEncryptionAtHost">Whether to enable host based OS and data drive encryption. This is only
        /// supported on certain VM sizes and in certain Azure regions. For more
        /// information, see:
        /// https://docs.microsoft.com/azure/aks/enable-host-encryption
        /// </param>

        /// <param name="enableUltraSsd">Whether to enable UltraSSD
        /// </param>

        /// <param name="enableFips">Whether to use a FIPS-enabled OS. See [Add a FIPS-enabled node
        /// pool](https://docs.microsoft.com/azure/aks/use-multiple-node-pools#add-a-fips-enabled-node-pool-preview)
        /// for more details.
        /// </param>

        /// <param name="gpuInstanceProfile">GPUInstanceProfile to be used to specify GPU MIG instance profile for
        /// supported GPU VM SKU.
        /// Possible values include: &#39;MIG1g&#39;, &#39;MIG2g&#39;, &#39;MIG3g&#39;, &#39;MIG4g&#39;, &#39;MIG7g&#39;</param>

        /// <param name="creationData">CreationData to be used to specify the source Snapshot ID if the node pool
        /// will be created/upgraded using a snapshot.
        /// </param>

        /// <param name="capacityReservationGroupId">AKS will associate the specified agent pool with the Capacity Reservation
        /// Group.
        /// </param>

        /// <param name="hostGroupId">The fully qualified resource ID of the Dedicated Host Group to provision
        /// virtual machines from, used only in creation scenario and not allowed to
        /// changed once set. This is of the form:
        /// /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/hostGroups/{hostGroupName}.
        /// For more information see [Azure dedicated
        /// hosts](https://docs.microsoft.com/azure/virtual-machines/dedicated-hosts).
        /// </param>

        /// <param name="networkProfile">Network-related settings of an agent pool.
        /// </param>

        /// <param name="windowsProfile">The Windows agent pool&#39;s specific profile.
        /// </param>

        /// <param name="securityProfile">The security settings of an agent pool.
        /// </param>

        /// <param name="gpuProfile">GPU settings for the Agent Pool.
        /// </param>

        /// <param name="gatewayProfile">Profile specific to a managed agent pool in Gateway mode. This field cannot
        /// be set if agent pool mode is not Gateway.
        /// </param>

        /// <param name="virtualMachinesProfile">Specifications on VirtualMachines agent pool.
        /// </param>

        /// <param name="virtualMachineNodesStatus">The status of nodes in a VirtualMachines agent pool.
        /// </param>

        /// <param name="status">Contains read-only information about the Agent Pool.
        /// </param>

        /// <param name="name">Unique name of the agent pool profile in the context of the subscription
        /// and resource group. Windows agent pool names must be 6 characters or less.
        /// </param>
        public ManagedClusterAgentPoolProfile(string name, string eTag = default(string), int? count = default(int?), string vmSize = default(string), int? osDiskSizeGb = default(int?), string osDiskType = default(string), string kubeletDiskType = default(string), string workloadRuntime = default(string), string messageOfTheDay = default(string), string vnetSubnetId = default(string), string podSubnetId = default(string), string podIPAllocationMode = default(string), int? maxPods = default(int?), string osType = default(string), string osSku = default(string), int? maxCount = default(int?), int? minCount = default(int?), bool? enableAutoScaling = default(bool?), string scaleDownMode = default(string), string type = default(string), string mode = default(string), string orchestratorVersion = default(string), string currentOrchestratorVersion = default(string), string nodeImageVersion = default(string), AgentPoolUpgradeSettings upgradeSettings = default(AgentPoolUpgradeSettings), string provisioningState = default(string), PowerState powerState = default(PowerState), System.Collections.Generic.IList<string> availabilityZones = default(System.Collections.Generic.IList<string>), bool? enableNodePublicIP = default(bool?), string nodePublicIPPrefixId = default(string), string scaleSetPriority = default(string), string scaleSetEvictionPolicy = default(string), double? spotMaxPrice = default(double?), System.Collections.Generic.IDictionary<string, string> tags = default(System.Collections.Generic.IDictionary<string, string>), System.Collections.Generic.IDictionary<string, string> nodeLabels = default(System.Collections.Generic.IDictionary<string, string>), System.Collections.Generic.IList<string> nodeTaints = default(System.Collections.Generic.IList<string>), string proximityPlacementGroupId = default(string), KubeletConfig kubeletConfig = default(KubeletConfig), LinuxOSConfig linuxOSConfig = default(LinuxOSConfig), bool? enableEncryptionAtHost = default(bool?), bool? enableUltraSsd = default(bool?), bool? enableFips = default(bool?), string gpuInstanceProfile = default(string), CreationData creationData = default(CreationData), string capacityReservationGroupId = default(string), string hostGroupId = default(string), AgentPoolNetworkProfile networkProfile = default(AgentPoolNetworkProfile), AgentPoolWindowsProfile windowsProfile = default(AgentPoolWindowsProfile), AgentPoolSecurityProfile securityProfile = default(AgentPoolSecurityProfile), GPUProfile gpuProfile = default(GPUProfile), AgentPoolGatewayProfile gatewayProfile = default(AgentPoolGatewayProfile), VirtualMachinesProfile virtualMachinesProfile = default(VirtualMachinesProfile), System.Collections.Generic.IList<VirtualMachineNodes> virtualMachineNodesStatus = default(System.Collections.Generic.IList<VirtualMachineNodes>), AgentPoolStatus status = default(AgentPoolStatus))

        : base(eTag, count, vmSize, osDiskSizeGb, osDiskType, kubeletDiskType, workloadRuntime, messageOfTheDay, vnetSubnetId, podSubnetId, podIPAllocationMode, maxPods, osType, osSku, maxCount, minCount, enableAutoScaling, scaleDownMode, type, mode, orchestratorVersion, currentOrchestratorVersion, nodeImageVersion, upgradeSettings, provisioningState, powerState, availabilityZones, enableNodePublicIP, nodePublicIPPrefixId, scaleSetPriority, scaleSetEvictionPolicy, spotMaxPrice, tags, nodeLabels, nodeTaints, proximityPlacementGroupId, kubeletConfig, linuxOSConfig, enableEncryptionAtHost, enableUltraSsd, enableFips, gpuInstanceProfile, creationData, capacityReservationGroupId, hostGroupId, networkProfile, windowsProfile, securityProfile, gpuProfile, gatewayProfile, virtualMachinesProfile, virtualMachineNodesStatus, status)
        {
            this.Name = name;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets or sets unique name of the agent pool profile in the context of the
        /// subscription and resource group. Windows agent pool names must be 6
        /// characters or less.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "name")]
        public string Name {get; set; }
        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public override void Validate()
        {
            base.Validate();
            if (this.Name == null)
            {
                throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.CannotBeNull, "Name");
            }
            if (this.Name != null)
            {
                if (!System.Text.RegularExpressions.Regex.IsMatch(this.Name, "^[a-z][a-z0-9]{0,11}$"))
                {
                    throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.Pattern, "Name", "^[a-z][a-z0-9]{0,11}$");
                }
            }
        }
    }
}