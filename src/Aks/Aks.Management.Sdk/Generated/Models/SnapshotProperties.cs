// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.ContainerService.Models
{
    using System.Linq;

    /// <summary>
    /// Properties used to configure a node pool snapshot.
    /// </summary>
    public partial class SnapshotProperties
    {
        /// <summary>
        /// Initializes a new instance of the SnapshotProperties class.
        /// </summary>
        public SnapshotProperties()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the SnapshotProperties class.
        /// </summary>

        /// <param name="creationData">CreationData to be used to specify the source agent pool resource ID to
        /// create this snapshot.
        /// </param>

        /// <param name="snapshotType">The type of a snapshot. The default is NodePool.
        /// Possible values include: 'NodePool'</param>

        /// <param name="kubernetesVersion">The version of Kubernetes.
        /// </param>

        /// <param name="nodeImageVersion">The version of node image.
        /// </param>

        /// <param name="osType">The operating system type. The default is Linux.
        /// Possible values include: 'Linux', 'Windows'</param>

        /// <param name="osSku">Specifies the OS SKU used by the agent pool. The default is Ubuntu if
        /// OSType is Linux. The default is Windows2019 when Kubernetes &lt;= 1.24 or
        /// Windows2022 when Kubernetes &gt;= 1.25 if OSType is Windows.
        /// Possible values include: 'Ubuntu', 'AzureLinux', 'CBLMariner',
        /// 'Windows2019', 'Windows2022'</param>

        /// <param name="vmSize">The size of the VM.
        /// </param>

        /// <param name="enableFips">Whether to use a FIPS-enabled OS.
        /// </param>
        public SnapshotProperties(CreationData creationData = default(CreationData), string snapshotType = default(string), string kubernetesVersion = default(string), string nodeImageVersion = default(string), string osType = default(string), string osSku = default(string), string vmSize = default(string), bool? enableFips = default(bool?))

        {
            this.CreationData = creationData;
            this.SnapshotType = snapshotType;
            this.KubernetesVersion = kubernetesVersion;
            this.NodeImageVersion = nodeImageVersion;
            this.OSType = osType;
            this.OSSku = osSku;
            this.VMSize = vmSize;
            this.EnableFips = enableFips;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets or sets creationData to be used to specify the source agent pool
        /// resource ID to create this snapshot.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "creationData")]
        public CreationData CreationData {get; set; }

        /// <summary>
        /// Gets or sets the type of a snapshot. The default is NodePool. Possible values include: &#39;NodePool&#39;
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "snapshotType")]
        public string SnapshotType {get; set; }

        /// <summary>
        /// Gets the version of Kubernetes.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "kubernetesVersion")]
        public string KubernetesVersion {get; private set; }

        /// <summary>
        /// Gets the version of node image.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "nodeImageVersion")]
        public string NodeImageVersion {get; private set; }

        /// <summary>
        /// Gets the operating system type. The default is Linux. Possible values include: &#39;Linux&#39;, &#39;Windows&#39;
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "osType")]
        public string OSType {get; private set; }

        /// <summary>
        /// Gets specifies the OS SKU used by the agent pool. The default is Ubuntu if
        /// OSType is Linux. The default is Windows2019 when Kubernetes &lt;= 1.24 or
        /// Windows2022 when Kubernetes &gt;= 1.25 if OSType is Windows. Possible values include: &#39;Ubuntu&#39;, &#39;AzureLinux&#39;, &#39;CBLMariner&#39;, &#39;Windows2019&#39;, &#39;Windows2022&#39;
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "osSku")]
        public string OSSku {get; private set; }

        /// <summary>
        /// Gets the size of the VM.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "vmSize")]
        public string VMSize {get; private set; }

        /// <summary>
        /// Gets whether to use a FIPS-enabled OS.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "enableFIPS")]
        public bool? EnableFips {get; private set; }
    }
}