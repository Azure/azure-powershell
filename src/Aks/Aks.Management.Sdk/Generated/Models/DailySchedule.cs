// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.ContainerService.Models
{
    using System.Linq;

    /// <summary>
    /// For schedules like: &#39;recur every day&#39; or &#39;recur every 3 days&#39;.
    /// </summary>
    public partial class DailySchedule
    {
        /// <summary>
        /// Initializes a new instance of the DailySchedule class.
        /// </summary>
        public DailySchedule()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the DailySchedule class.
        /// </summary>

        /// <param name="intervalDays">Specifies the number of days between each set of occurrences.
        /// </param>
        public DailySchedule(int intervalDays)

        {
            this.IntervalDays = intervalDays;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets or sets specifies the number of days between each set of occurrences.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "intervalDays")]
        public int IntervalDays {get; set; }
        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (this.IntervalDays > 7)
            {
                throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.InclusiveMaximum, "IntervalDays", 7);
            }
            if (this.IntervalDays < 1)
            {
                throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.InclusiveMinimum, "IntervalDays", 1);
            }
        }
    }
}