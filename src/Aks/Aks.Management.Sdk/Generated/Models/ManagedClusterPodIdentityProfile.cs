// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.ContainerService.Models
{
    using System.Linq;

    /// <summary>
    /// See [use AAD pod
    /// identity](https://docs.microsoft.com/azure/aks/use-azure-ad-pod-identity)
    /// for more details on pod identity integration.
    /// </summary>
    /// <remarks>
    /// See [use AAD pod
    /// identity](https://docs.microsoft.com/azure/aks/use-azure-ad-pod-identity)
    /// for more details on pod identity integration.
    /// </remarks>
    public partial class ManagedClusterPodIdentityProfile
    {
        /// <summary>
        /// Initializes a new instance of the ManagedClusterPodIdentityProfile class.
        /// </summary>
        public ManagedClusterPodIdentityProfile()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the ManagedClusterPodIdentityProfile class.
        /// </summary>

        /// <param name="enabled">Whether the pod identity addon is enabled.
        /// </param>

        /// <param name="allowNetworkPluginKubenet">Running in Kubenet is disabled by default due to the security related
        /// nature of AAD Pod Identity and the risks of IP spoofing. See [using Kubenet
        /// network plugin with AAD Pod
        /// Identity](https://docs.microsoft.com/azure/aks/use-azure-ad-pod-identity#using-kubenet-network-plugin-with-azure-active-directory-pod-managed-identities)
        /// for more information.
        /// </param>

        /// <param name="userAssignedIdentities">The pod identities to use in the cluster.
        /// </param>

        /// <param name="userAssignedIdentityExceptions">The pod identity exceptions to allow.
        /// </param>
        public ManagedClusterPodIdentityProfile(bool? enabled = default(bool?), bool? allowNetworkPluginKubenet = default(bool?), System.Collections.Generic.IList<ManagedClusterPodIdentity> userAssignedIdentities = default(System.Collections.Generic.IList<ManagedClusterPodIdentity>), System.Collections.Generic.IList<ManagedClusterPodIdentityException> userAssignedIdentityExceptions = default(System.Collections.Generic.IList<ManagedClusterPodIdentityException>))

        {
            this.Enabled = enabled;
            this.AllowNetworkPluginKubenet = allowNetworkPluginKubenet;
            this.UserAssignedIdentities = userAssignedIdentities;
            this.UserAssignedIdentityExceptions = userAssignedIdentityExceptions;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets or sets whether the pod identity addon is enabled.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "enabled")]
        public bool? Enabled {get; set; }

        /// <summary>
        /// Gets or sets running in Kubenet is disabled by default due to the security
        /// related nature of AAD Pod Identity and the risks of IP spoofing. See [using
        /// Kubenet network plugin with AAD Pod
        /// Identity](https://docs.microsoft.com/azure/aks/use-azure-ad-pod-identity#using-kubenet-network-plugin-with-azure-active-directory-pod-managed-identities)
        /// for more information.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "allowNetworkPluginKubenet")]
        public bool? AllowNetworkPluginKubenet {get; set; }

        /// <summary>
        /// Gets or sets the pod identities to use in the cluster.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "userAssignedIdentities")]
        public System.Collections.Generic.IList<ManagedClusterPodIdentity> UserAssignedIdentities {get; set; }

        /// <summary>
        /// Gets or sets the pod identity exceptions to allow.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "userAssignedIdentityExceptions")]
        public System.Collections.Generic.IList<ManagedClusterPodIdentityException> UserAssignedIdentityExceptions {get; set; }
    }
}