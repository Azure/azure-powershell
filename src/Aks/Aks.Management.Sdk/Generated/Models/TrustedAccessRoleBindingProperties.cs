// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.ContainerService.Models
{
    using System.Linq;

    /// <summary>
    /// Properties for trusted access role binding
    /// </summary>
    public partial class TrustedAccessRoleBindingProperties
    {
        /// <summary>
        /// Initializes a new instance of the TrustedAccessRoleBindingProperties class.
        /// </summary>
        public TrustedAccessRoleBindingProperties()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the TrustedAccessRoleBindingProperties class.
        /// </summary>

        /// <param name="provisioningState">The current provisioning state of trusted access role binding.
        /// Possible values include: &#39;Canceled&#39;, &#39;Deleting&#39;, &#39;Failed&#39;, &#39;Succeeded&#39;,
        /// &#39;Updating&#39;</param>

        /// <param name="sourceResourceId">The ARM resource ID of source resource that trusted access is configured
        /// for.
        /// </param>

        /// <param name="roles">A list of roles to bind, each item is a resource type qualified role name.
        /// For example: &#39;Microsoft.MachineLearningServices/workspaces/reader&#39;.
        /// </param>
        public TrustedAccessRoleBindingProperties(string sourceResourceId, System.Collections.Generic.IList<string> roles, string provisioningState = default(string))

        {
            this.ProvisioningState = provisioningState;
            this.SourceResourceId = sourceResourceId;
            this.Roles = roles;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets the current provisioning state of trusted access role binding. Possible values include: &#39;Canceled&#39;, &#39;Deleting&#39;, &#39;Failed&#39;, &#39;Succeeded&#39;, &#39;Updating&#39;
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "provisioningState")]
        public string ProvisioningState {get; private set; }

        /// <summary>
        /// Gets or sets the ARM resource ID of source resource that trusted access is
        /// configured for.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "sourceResourceId")]
        public string SourceResourceId {get; set; }

        /// <summary>
        /// Gets or sets a list of roles to bind, each item is a resource type
        /// qualified role name. For example:
        /// &#39;Microsoft.MachineLearningServices/workspaces/reader&#39;.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "roles")]
        public System.Collections.Generic.IList<string> Roles {get; set; }
        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (this.SourceResourceId == null)
            {
                throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.CannotBeNull, "SourceResourceId");
            }
            if (this.Roles == null)
            {
                throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.CannotBeNull, "Roles");
            }



        }
    }
}