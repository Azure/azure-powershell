// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.ContainerService.Models
{
    using System.Linq;

    /// <summary>
    /// The list of available upgrade versions.
    /// </summary>
    public partial class AgentPoolUpgradeProfileProperties
    {
        /// <summary>
        /// Initializes a new instance of the AgentPoolUpgradeProfileProperties class.
        /// </summary>
        public AgentPoolUpgradeProfileProperties()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the AgentPoolUpgradeProfileProperties class.
        /// </summary>

        /// <param name="kubernetesVersion">The Kubernetes version (major.minor.patch).
        /// </param>

        /// <param name="osType">The operating system type. The default is Linux.
        /// Possible values include: 'Linux', 'Windows'</param>

        /// <param name="upgrades">List of orchestrator types and versions available for upgrade.
        /// </param>

        /// <param name="latestNodeImageVersion">The latest AKS supported node image version.
        /// </param>
        public AgentPoolUpgradeProfileProperties(string kubernetesVersion, string osType, System.Collections.Generic.IList<AgentPoolUpgradeProfilePropertiesUpgradesItem> upgrades = default(System.Collections.Generic.IList<AgentPoolUpgradeProfilePropertiesUpgradesItem>), string latestNodeImageVersion = default(string))

        {
            this.KubernetesVersion = kubernetesVersion;
            this.OSType = osType;
            this.Upgrades = upgrades;
            this.LatestNodeImageVersion = latestNodeImageVersion;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets or sets the Kubernetes version (major.minor.patch).
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "kubernetesVersion")]
        public string KubernetesVersion {get; set; }

        /// <summary>
        /// Gets or sets the operating system type. The default is Linux. Possible values include: &#39;Linux&#39;, &#39;Windows&#39;
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "osType")]
        public string OSType {get; set; }

        /// <summary>
        /// Gets or sets list of orchestrator types and versions available for upgrade.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "upgrades")]
        public System.Collections.Generic.IList<AgentPoolUpgradeProfilePropertiesUpgradesItem> Upgrades {get; set; }

        /// <summary>
        /// Gets or sets the latest AKS supported node image version.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "latestNodeImageVersion")]
        public string LatestNodeImageVersion {get; set; }
        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (this.KubernetesVersion == null)
            {
                throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.CannotBeNull, "KubernetesVersion");
            }
            if (this.OSType == null)
            {
                throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.CannotBeNull, "OSType");
            }




        }
    }
}