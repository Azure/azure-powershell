// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.ContainerService.Models
{
    using System.Linq;

    /// <summary>
    /// The port range.
    /// </summary>
    public partial class PortRange
    {
        /// <summary>
        /// Initializes a new instance of the PortRange class.
        /// </summary>
        public PortRange()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the PortRange class.
        /// </summary>

        /// <param name="portStart">The minimum port that is included in the range. It should be ranged from 1
        /// to 65535, and be less than or equal to portEnd.
        /// </param>

        /// <param name="portEnd">The maximum port that is included in the range. It should be ranged from 1
        /// to 65535, and be greater than or equal to portStart.
        /// </param>

        /// <param name="protocol">The network protocol of the port.
        /// Possible values include: &#39;TCP&#39;, &#39;UDP&#39;</param>
        public PortRange(int? portStart = default(int?), int? portEnd = default(int?), string protocol = default(string))

        {
            this.PortStart = portStart;
            this.PortEnd = portEnd;
            this.Protocol = protocol;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets or sets the minimum port that is included in the range. It should be
        /// ranged from 1 to 65535, and be less than or equal to portEnd.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "portStart")]
        public int? PortStart {get; set; }

        /// <summary>
        /// Gets or sets the maximum port that is included in the range. It should be
        /// ranged from 1 to 65535, and be greater than or equal to portStart.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "portEnd")]
        public int? PortEnd {get; set; }

        /// <summary>
        /// Gets or sets the network protocol of the port. Possible values include: &#39;TCP&#39;, &#39;UDP&#39;
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "protocol")]
        public string Protocol {get; set; }
        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (this.PortStart != null)
            {
                if (this.PortStart > 65535)
                {
                    throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.InclusiveMaximum, "PortStart", 65535);
                }
                if (this.PortStart < 1)
                {
                    throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.InclusiveMinimum, "PortStart", 1);
                }
            }
            if (this.PortEnd != null)
            {
                if (this.PortEnd > 65535)
                {
                    throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.InclusiveMaximum, "PortEnd", 65535);
                }
                if (this.PortEnd < 1)
                {
                    throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.InclusiveMinimum, "PortEnd", 1);
                }
            }

        }
    }
}