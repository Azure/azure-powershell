// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.ContainerService.Models
{
    using System.Linq;

    /// <summary>
    /// Settings for overrides when upgrading a cluster.
    /// </summary>
    public partial class UpgradeOverrideSettings
    {
        /// <summary>
        /// Initializes a new instance of the UpgradeOverrideSettings class.
        /// </summary>
        public UpgradeOverrideSettings()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the UpgradeOverrideSettings class.
        /// </summary>

        /// <param name="forceUpgrade">Whether to force upgrade the cluster. Note that this option instructs
        /// upgrade operation to bypass upgrade protections such as checking for
        /// deprecated API usage. Enable this option only with caution.
        /// </param>

        /// <param name="until">Until when the overrides are effective. Note that this only matches the
        /// start time of an upgrade, and the effectiveness won&#39;t change once an
        /// upgrade starts even if the `until` expires as upgrade proceeds. This field
        /// is not set by default. It must be set for the overrides to take effect.
        /// </param>
        public UpgradeOverrideSettings(bool? forceUpgrade = default(bool?), System.DateTime? until = default(System.DateTime?))

        {
            this.ForceUpgrade = forceUpgrade;
            this.Until = until;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets or sets whether to force upgrade the cluster. Note that this option
        /// instructs upgrade operation to bypass upgrade protections such as checking
        /// for deprecated API usage. Enable this option only with caution.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "forceUpgrade")]
        public bool? ForceUpgrade {get; set; }

        /// <summary>
        /// Gets or sets until when the overrides are effective. Note that this only
        /// matches the start time of an upgrade, and the effectiveness won&#39;t change
        /// once an upgrade starts even if the `until` expires as upgrade proceeds.
        /// This field is not set by default. It must be set for the overrides to take
        /// effect.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "until")]
        public System.DateTime? Until {get; set; }
    }
}