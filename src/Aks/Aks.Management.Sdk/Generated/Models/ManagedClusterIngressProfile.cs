// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.ContainerService.Models
{
    using System.Linq;

    /// <summary>
    /// Ingress profile for the container service cluster.
    /// </summary>
    public partial class ManagedClusterIngressProfile
    {
        /// <summary>
        /// Initializes a new instance of the ManagedClusterIngressProfile class.
        /// </summary>
        public ManagedClusterIngressProfile()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the ManagedClusterIngressProfile class.
        /// </summary>

        /// <param name="webAppRouting">App Routing settings for the ingress profile. You can find an overview and
        /// onboarding guide for this feature at
        /// https://learn.microsoft.com/en-us/azure/aks/app-routing?tabs=default%2Cdeploy-app-default.
        /// </param>
        public ManagedClusterIngressProfile(ManagedClusterIngressProfileWebAppRouting webAppRouting = default(ManagedClusterIngressProfileWebAppRouting))

        {
            this.WebAppRouting = webAppRouting;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets or sets app Routing settings for the ingress profile. You can find an
        /// overview and onboarding guide for this feature at
        /// https://learn.microsoft.com/en-us/azure/aks/app-routing?tabs=default%2Cdeploy-app-default.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "webAppRouting")]
        public ManagedClusterIngressProfileWebAppRouting WebAppRouting {get; set; }
        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (this.WebAppRouting != null)
            {
                this.WebAppRouting.Validate();
            }
        }
    }
}