
# ----------------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# http://www.apache.org/licenses/LICENSE-2.0
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# Code generated by Microsoft (R) AutoRest Code Generator.Changes may cause incorrect behavior and will be lost if the code
# is regenerated.
# ----------------------------------------------------------------------------------

<#
.Synopsis
Create an in-memory object for TimeInWeek.
.Description
Create an in-memory object for TimeInWeek.

.Outputs
Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.Api20230201.TimeInWeek
.Link
https://learn.microsoft.com/powershell/module/Az.Aks/new-AzAksTimeInWeekObject
#>
function New-AzAksTimeInWeekObject {
    [OutputType('Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.Api20230201.TimeInWeek')]
    [CmdletBinding(PositionalBinding=$false)]
    Param(

        [Parameter(HelpMessage="The day of the week.")]
        [ArgumentCompleter([Microsoft.Azure.PowerShell.Cmdlets.Aks.Support.WeekDay])]
        [Microsoft.Azure.PowerShell.Cmdlets.Aks.Support.WeekDay]
        $Day,
        [Parameter(HelpMessage="Each integer hour represents a time range beginning at 0m after the hour ending at the next hour (non-inclusive). 0 corresponds to 00:00 UTC, 23 corresponds to 23:00 UTC. Specifying [0, 1] means the 00:00 - 02:00 UTC time range.")]
        [int[]]
        $HourSlot
    )

    process {
        $Object = [Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.Api20230201.TimeInWeek]::New()

        if ($PSBoundParameters.ContainsKey('Day')) {
            $Object.Day = $Day
        }
        if ($PSBoundParameters.ContainsKey('HourSlot')) {
            $Object.HourSlot = $HourSlot
        }
        return $Object
    }
}

