// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.Api20230201
{
    using static Microsoft.Azure.PowerShell.Cmdlets.Aks.Runtime.Extensions;

    /// <summary>Sysctl settings for Linux agent nodes.</summary>
    public partial class SysctlConfig
    {

        /// <summary>
        /// <c>AfterFromJson</c> will be called after the json deserialization has finished, allowing customization of the object
        /// before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="json">The JsonNode that should be deserialized into this object.</param>

        partial void AfterFromJson(Microsoft.Azure.PowerShell.Cmdlets.Aks.Runtime.Json.JsonObject json);

        /// <summary>
        /// <c>AfterToJson</c> will be called after the json serialization has finished, allowing customization of the <see cref="Microsoft.Azure.PowerShell.Cmdlets.Aks.Runtime.Json.JsonObject"
        /// /> before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="container">The JSON container that the serialization result will be placed in.</param>

        partial void AfterToJson(ref Microsoft.Azure.PowerShell.Cmdlets.Aks.Runtime.Json.JsonObject container);

        /// <summary>
        /// <c>BeforeFromJson</c> will be called before the json deserialization has commenced, allowing complete customization of
        /// the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <paramref name= "returnNow" />
        /// output parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="json">The JsonNode that should be deserialized into this object.</param>
        /// <param name="returnNow">Determines if the rest of the deserialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeFromJson(Microsoft.Azure.PowerShell.Cmdlets.Aks.Runtime.Json.JsonObject json, ref bool returnNow);

        /// <summary>
        /// <c>BeforeToJson</c> will be called before the json serialization has commenced, allowing complete customization of the
        /// object before it is serialized.
        /// If you wish to disable the default serialization entirely, return <c>true</c> in the <paramref name="returnNow" /> output
        /// parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="container">The JSON container that the serialization result will be placed in.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeToJson(ref Microsoft.Azure.PowerShell.Cmdlets.Aks.Runtime.Json.JsonObject container, ref bool returnNow);

        /// <summary>
        /// Deserializes a <see cref="Microsoft.Azure.PowerShell.Cmdlets.Aks.Runtime.Json.JsonNode"/> into an instance of Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.Api20230201.ISysctlConfig.
        /// </summary>
        /// <param name="node">a <see cref="Microsoft.Azure.PowerShell.Cmdlets.Aks.Runtime.Json.JsonNode" /> to deserialize from.</param>
        /// <returns>
        /// an instance of Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.Api20230201.ISysctlConfig.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.Api20230201.ISysctlConfig FromJson(Microsoft.Azure.PowerShell.Cmdlets.Aks.Runtime.Json.JsonNode node)
        {
            return node is Microsoft.Azure.PowerShell.Cmdlets.Aks.Runtime.Json.JsonObject json ? new SysctlConfig(json) : null;
        }

        /// <summary>
        /// Deserializes a Microsoft.Azure.PowerShell.Cmdlets.Aks.Runtime.Json.JsonObject into a new instance of <see cref="SysctlConfig" />.
        /// </summary>
        /// <param name="json">A Microsoft.Azure.PowerShell.Cmdlets.Aks.Runtime.Json.JsonObject instance to deserialize from.</param>
        internal SysctlConfig(Microsoft.Azure.PowerShell.Cmdlets.Aks.Runtime.Json.JsonObject json)
        {
            bool returnNow = false;
            BeforeFromJson(json, ref returnNow);
            if (returnNow)
            {
                return;
            }
            {_netCoreSomaxconn = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Aks.Runtime.Json.JsonNumber>("netCoreSomaxconn"), out var __jsonNetCoreSomaxconn) ? (int?)__jsonNetCoreSomaxconn : NetCoreSomaxconn;}
            {_netCoreNetdevMaxBacklog = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Aks.Runtime.Json.JsonNumber>("netCoreNetdevMaxBacklog"), out var __jsonNetCoreNetdevMaxBacklog) ? (int?)__jsonNetCoreNetdevMaxBacklog : NetCoreNetdevMaxBacklog;}
            {_netCoreRmemDefault = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Aks.Runtime.Json.JsonNumber>("netCoreRmemDefault"), out var __jsonNetCoreRmemDefault) ? (int?)__jsonNetCoreRmemDefault : NetCoreRmemDefault;}
            {_netCoreRmemMax = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Aks.Runtime.Json.JsonNumber>("netCoreRmemMax"), out var __jsonNetCoreRmemMax) ? (int?)__jsonNetCoreRmemMax : NetCoreRmemMax;}
            {_netCoreWmemDefault = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Aks.Runtime.Json.JsonNumber>("netCoreWmemDefault"), out var __jsonNetCoreWmemDefault) ? (int?)__jsonNetCoreWmemDefault : NetCoreWmemDefault;}
            {_netCoreWmemMax = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Aks.Runtime.Json.JsonNumber>("netCoreWmemMax"), out var __jsonNetCoreWmemMax) ? (int?)__jsonNetCoreWmemMax : NetCoreWmemMax;}
            {_netCoreOptmemMax = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Aks.Runtime.Json.JsonNumber>("netCoreOptmemMax"), out var __jsonNetCoreOptmemMax) ? (int?)__jsonNetCoreOptmemMax : NetCoreOptmemMax;}
            {_netIpv4TcpMaxSynBacklog = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Aks.Runtime.Json.JsonNumber>("netIpv4TcpMaxSynBacklog"), out var __jsonNetIpv4TcpMaxSynBacklog) ? (int?)__jsonNetIpv4TcpMaxSynBacklog : NetIpv4TcpMaxSynBacklog;}
            {_netIpv4TcpMaxTwBucket = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Aks.Runtime.Json.JsonNumber>("netIpv4TcpMaxTwBuckets"), out var __jsonNetIpv4TcpMaxTwBuckets) ? (int?)__jsonNetIpv4TcpMaxTwBuckets : NetIpv4TcpMaxTwBucket;}
            {_netIpv4TcpFinTimeout = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Aks.Runtime.Json.JsonNumber>("netIpv4TcpFinTimeout"), out var __jsonNetIpv4TcpFinTimeout) ? (int?)__jsonNetIpv4TcpFinTimeout : NetIpv4TcpFinTimeout;}
            {_netIpv4TcpKeepaliveTime = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Aks.Runtime.Json.JsonNumber>("netIpv4TcpKeepaliveTime"), out var __jsonNetIpv4TcpKeepaliveTime) ? (int?)__jsonNetIpv4TcpKeepaliveTime : NetIpv4TcpKeepaliveTime;}
            {_netIpv4TcpKeepaliveProbe = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Aks.Runtime.Json.JsonNumber>("netIpv4TcpKeepaliveProbes"), out var __jsonNetIpv4TcpKeepaliveProbes) ? (int?)__jsonNetIpv4TcpKeepaliveProbes : NetIpv4TcpKeepaliveProbe;}
            {_netIpv4TcpkeepaliveIntvl = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Aks.Runtime.Json.JsonNumber>("netIpv4TcpkeepaliveIntvl"), out var __jsonNetIpv4TcpkeepaliveIntvl) ? (int?)__jsonNetIpv4TcpkeepaliveIntvl : NetIpv4TcpkeepaliveIntvl;}
            {_netIpv4TcpTwReuse = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Aks.Runtime.Json.JsonBoolean>("netIpv4TcpTwReuse"), out var __jsonNetIpv4TcpTwReuse) ? (bool?)__jsonNetIpv4TcpTwReuse : NetIpv4TcpTwReuse;}
            {_netIpv4IPLocalPortRange = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Aks.Runtime.Json.JsonString>("netIpv4IpLocalPortRange"), out var __jsonNetIpv4IPLocalPortRange) ? (string)__jsonNetIpv4IPLocalPortRange : (string)NetIpv4IPLocalPortRange;}
            {_netIpv4NeighDefaultGcThresh1 = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Aks.Runtime.Json.JsonNumber>("netIpv4NeighDefaultGcThresh1"), out var __jsonNetIpv4NeighDefaultGcThresh1) ? (int?)__jsonNetIpv4NeighDefaultGcThresh1 : NetIpv4NeighDefaultGcThresh1;}
            {_netIpv4NeighDefaultGcThresh2 = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Aks.Runtime.Json.JsonNumber>("netIpv4NeighDefaultGcThresh2"), out var __jsonNetIpv4NeighDefaultGcThresh2) ? (int?)__jsonNetIpv4NeighDefaultGcThresh2 : NetIpv4NeighDefaultGcThresh2;}
            {_netIpv4NeighDefaultGcThresh3 = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Aks.Runtime.Json.JsonNumber>("netIpv4NeighDefaultGcThresh3"), out var __jsonNetIpv4NeighDefaultGcThresh3) ? (int?)__jsonNetIpv4NeighDefaultGcThresh3 : NetIpv4NeighDefaultGcThresh3;}
            {_netNetfilterNfConntrackMax = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Aks.Runtime.Json.JsonNumber>("netNetfilterNfConntrackMax"), out var __jsonNetNetfilterNfConntrackMax) ? (int?)__jsonNetNetfilterNfConntrackMax : NetNetfilterNfConntrackMax;}
            {_netNetfilterNfConntrackBucket = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Aks.Runtime.Json.JsonNumber>("netNetfilterNfConntrackBuckets"), out var __jsonNetNetfilterNfConntrackBuckets) ? (int?)__jsonNetNetfilterNfConntrackBuckets : NetNetfilterNfConntrackBucket;}
            {_fsInotifyMaxUserWatch = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Aks.Runtime.Json.JsonNumber>("fsInotifyMaxUserWatches"), out var __jsonFsInotifyMaxUserWatches) ? (int?)__jsonFsInotifyMaxUserWatches : FsInotifyMaxUserWatch;}
            {_fsFileMax = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Aks.Runtime.Json.JsonNumber>("fsFileMax"), out var __jsonFsFileMax) ? (int?)__jsonFsFileMax : FsFileMax;}
            {_fsAioMaxNr = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Aks.Runtime.Json.JsonNumber>("fsAioMaxNr"), out var __jsonFsAioMaxNr) ? (int?)__jsonFsAioMaxNr : FsAioMaxNr;}
            {_fsNrOpen = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Aks.Runtime.Json.JsonNumber>("fsNrOpen"), out var __jsonFsNrOpen) ? (int?)__jsonFsNrOpen : FsNrOpen;}
            {_kernelThreadsMax = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Aks.Runtime.Json.JsonNumber>("kernelThreadsMax"), out var __jsonKernelThreadsMax) ? (int?)__jsonKernelThreadsMax : KernelThreadsMax;}
            {_vMMaxMapCount = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Aks.Runtime.Json.JsonNumber>("vmMaxMapCount"), out var __jsonVMMaxMapCount) ? (int?)__jsonVMMaxMapCount : VMMaxMapCount;}
            {_vMSwappiness = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Aks.Runtime.Json.JsonNumber>("vmSwappiness"), out var __jsonVMSwappiness) ? (int?)__jsonVMSwappiness : VMSwappiness;}
            {_vMVfsCachePressure = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Aks.Runtime.Json.JsonNumber>("vmVfsCachePressure"), out var __jsonVMVfsCachePressure) ? (int?)__jsonVMVfsCachePressure : VMVfsCachePressure;}
            AfterFromJson(json);
        }

        /// <summary>
        /// Serializes this instance of <see cref="SysctlConfig" /> into a <see cref="Microsoft.Azure.PowerShell.Cmdlets.Aks.Runtime.Json.JsonNode" />.
        /// </summary>
        /// <param name="container">The <see cref="Microsoft.Azure.PowerShell.Cmdlets.Aks.Runtime.Json.JsonObject"/> container to serialize this object into. If the caller
        /// passes in <c>null</c>, a new instance will be created and returned to the caller.</param>
        /// <param name="serializationMode">Allows the caller to choose the depth of the serialization. See <see cref="Microsoft.Azure.PowerShell.Cmdlets.Aks.Runtime.SerializationMode"/>.</param>
        /// <returns>
        /// a serialized instance of <see cref="SysctlConfig" /> as a <see cref="Microsoft.Azure.PowerShell.Cmdlets.Aks.Runtime.Json.JsonNode" />.
        /// </returns>
        public Microsoft.Azure.PowerShell.Cmdlets.Aks.Runtime.Json.JsonNode ToJson(Microsoft.Azure.PowerShell.Cmdlets.Aks.Runtime.Json.JsonObject container, Microsoft.Azure.PowerShell.Cmdlets.Aks.Runtime.SerializationMode serializationMode)
        {
            container = container ?? new Microsoft.Azure.PowerShell.Cmdlets.Aks.Runtime.Json.JsonObject();

            bool returnNow = false;
            BeforeToJson(ref container, ref returnNow);
            if (returnNow)
            {
                return container;
            }
            AddIf( null != this._netCoreSomaxconn ? (Microsoft.Azure.PowerShell.Cmdlets.Aks.Runtime.Json.JsonNode)new Microsoft.Azure.PowerShell.Cmdlets.Aks.Runtime.Json.JsonNumber((int)this._netCoreSomaxconn) : null, "netCoreSomaxconn" ,container.Add );
            AddIf( null != this._netCoreNetdevMaxBacklog ? (Microsoft.Azure.PowerShell.Cmdlets.Aks.Runtime.Json.JsonNode)new Microsoft.Azure.PowerShell.Cmdlets.Aks.Runtime.Json.JsonNumber((int)this._netCoreNetdevMaxBacklog) : null, "netCoreNetdevMaxBacklog" ,container.Add );
            AddIf( null != this._netCoreRmemDefault ? (Microsoft.Azure.PowerShell.Cmdlets.Aks.Runtime.Json.JsonNode)new Microsoft.Azure.PowerShell.Cmdlets.Aks.Runtime.Json.JsonNumber((int)this._netCoreRmemDefault) : null, "netCoreRmemDefault" ,container.Add );
            AddIf( null != this._netCoreRmemMax ? (Microsoft.Azure.PowerShell.Cmdlets.Aks.Runtime.Json.JsonNode)new Microsoft.Azure.PowerShell.Cmdlets.Aks.Runtime.Json.JsonNumber((int)this._netCoreRmemMax) : null, "netCoreRmemMax" ,container.Add );
            AddIf( null != this._netCoreWmemDefault ? (Microsoft.Azure.PowerShell.Cmdlets.Aks.Runtime.Json.JsonNode)new Microsoft.Azure.PowerShell.Cmdlets.Aks.Runtime.Json.JsonNumber((int)this._netCoreWmemDefault) : null, "netCoreWmemDefault" ,container.Add );
            AddIf( null != this._netCoreWmemMax ? (Microsoft.Azure.PowerShell.Cmdlets.Aks.Runtime.Json.JsonNode)new Microsoft.Azure.PowerShell.Cmdlets.Aks.Runtime.Json.JsonNumber((int)this._netCoreWmemMax) : null, "netCoreWmemMax" ,container.Add );
            AddIf( null != this._netCoreOptmemMax ? (Microsoft.Azure.PowerShell.Cmdlets.Aks.Runtime.Json.JsonNode)new Microsoft.Azure.PowerShell.Cmdlets.Aks.Runtime.Json.JsonNumber((int)this._netCoreOptmemMax) : null, "netCoreOptmemMax" ,container.Add );
            AddIf( null != this._netIpv4TcpMaxSynBacklog ? (Microsoft.Azure.PowerShell.Cmdlets.Aks.Runtime.Json.JsonNode)new Microsoft.Azure.PowerShell.Cmdlets.Aks.Runtime.Json.JsonNumber((int)this._netIpv4TcpMaxSynBacklog) : null, "netIpv4TcpMaxSynBacklog" ,container.Add );
            AddIf( null != this._netIpv4TcpMaxTwBucket ? (Microsoft.Azure.PowerShell.Cmdlets.Aks.Runtime.Json.JsonNode)new Microsoft.Azure.PowerShell.Cmdlets.Aks.Runtime.Json.JsonNumber((int)this._netIpv4TcpMaxTwBucket) : null, "netIpv4TcpMaxTwBuckets" ,container.Add );
            AddIf( null != this._netIpv4TcpFinTimeout ? (Microsoft.Azure.PowerShell.Cmdlets.Aks.Runtime.Json.JsonNode)new Microsoft.Azure.PowerShell.Cmdlets.Aks.Runtime.Json.JsonNumber((int)this._netIpv4TcpFinTimeout) : null, "netIpv4TcpFinTimeout" ,container.Add );
            AddIf( null != this._netIpv4TcpKeepaliveTime ? (Microsoft.Azure.PowerShell.Cmdlets.Aks.Runtime.Json.JsonNode)new Microsoft.Azure.PowerShell.Cmdlets.Aks.Runtime.Json.JsonNumber((int)this._netIpv4TcpKeepaliveTime) : null, "netIpv4TcpKeepaliveTime" ,container.Add );
            AddIf( null != this._netIpv4TcpKeepaliveProbe ? (Microsoft.Azure.PowerShell.Cmdlets.Aks.Runtime.Json.JsonNode)new Microsoft.Azure.PowerShell.Cmdlets.Aks.Runtime.Json.JsonNumber((int)this._netIpv4TcpKeepaliveProbe) : null, "netIpv4TcpKeepaliveProbes" ,container.Add );
            AddIf( null != this._netIpv4TcpkeepaliveIntvl ? (Microsoft.Azure.PowerShell.Cmdlets.Aks.Runtime.Json.JsonNode)new Microsoft.Azure.PowerShell.Cmdlets.Aks.Runtime.Json.JsonNumber((int)this._netIpv4TcpkeepaliveIntvl) : null, "netIpv4TcpkeepaliveIntvl" ,container.Add );
            AddIf( null != this._netIpv4TcpTwReuse ? (Microsoft.Azure.PowerShell.Cmdlets.Aks.Runtime.Json.JsonNode)new Microsoft.Azure.PowerShell.Cmdlets.Aks.Runtime.Json.JsonBoolean((bool)this._netIpv4TcpTwReuse) : null, "netIpv4TcpTwReuse" ,container.Add );
            AddIf( null != (((object)this._netIpv4IPLocalPortRange)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.Aks.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.Aks.Runtime.Json.JsonString(this._netIpv4IPLocalPortRange.ToString()) : null, "netIpv4IpLocalPortRange" ,container.Add );
            AddIf( null != this._netIpv4NeighDefaultGcThresh1 ? (Microsoft.Azure.PowerShell.Cmdlets.Aks.Runtime.Json.JsonNode)new Microsoft.Azure.PowerShell.Cmdlets.Aks.Runtime.Json.JsonNumber((int)this._netIpv4NeighDefaultGcThresh1) : null, "netIpv4NeighDefaultGcThresh1" ,container.Add );
            AddIf( null != this._netIpv4NeighDefaultGcThresh2 ? (Microsoft.Azure.PowerShell.Cmdlets.Aks.Runtime.Json.JsonNode)new Microsoft.Azure.PowerShell.Cmdlets.Aks.Runtime.Json.JsonNumber((int)this._netIpv4NeighDefaultGcThresh2) : null, "netIpv4NeighDefaultGcThresh2" ,container.Add );
            AddIf( null != this._netIpv4NeighDefaultGcThresh3 ? (Microsoft.Azure.PowerShell.Cmdlets.Aks.Runtime.Json.JsonNode)new Microsoft.Azure.PowerShell.Cmdlets.Aks.Runtime.Json.JsonNumber((int)this._netIpv4NeighDefaultGcThresh3) : null, "netIpv4NeighDefaultGcThresh3" ,container.Add );
            AddIf( null != this._netNetfilterNfConntrackMax ? (Microsoft.Azure.PowerShell.Cmdlets.Aks.Runtime.Json.JsonNode)new Microsoft.Azure.PowerShell.Cmdlets.Aks.Runtime.Json.JsonNumber((int)this._netNetfilterNfConntrackMax) : null, "netNetfilterNfConntrackMax" ,container.Add );
            AddIf( null != this._netNetfilterNfConntrackBucket ? (Microsoft.Azure.PowerShell.Cmdlets.Aks.Runtime.Json.JsonNode)new Microsoft.Azure.PowerShell.Cmdlets.Aks.Runtime.Json.JsonNumber((int)this._netNetfilterNfConntrackBucket) : null, "netNetfilterNfConntrackBuckets" ,container.Add );
            AddIf( null != this._fsInotifyMaxUserWatch ? (Microsoft.Azure.PowerShell.Cmdlets.Aks.Runtime.Json.JsonNode)new Microsoft.Azure.PowerShell.Cmdlets.Aks.Runtime.Json.JsonNumber((int)this._fsInotifyMaxUserWatch) : null, "fsInotifyMaxUserWatches" ,container.Add );
            AddIf( null != this._fsFileMax ? (Microsoft.Azure.PowerShell.Cmdlets.Aks.Runtime.Json.JsonNode)new Microsoft.Azure.PowerShell.Cmdlets.Aks.Runtime.Json.JsonNumber((int)this._fsFileMax) : null, "fsFileMax" ,container.Add );
            AddIf( null != this._fsAioMaxNr ? (Microsoft.Azure.PowerShell.Cmdlets.Aks.Runtime.Json.JsonNode)new Microsoft.Azure.PowerShell.Cmdlets.Aks.Runtime.Json.JsonNumber((int)this._fsAioMaxNr) : null, "fsAioMaxNr" ,container.Add );
            AddIf( null != this._fsNrOpen ? (Microsoft.Azure.PowerShell.Cmdlets.Aks.Runtime.Json.JsonNode)new Microsoft.Azure.PowerShell.Cmdlets.Aks.Runtime.Json.JsonNumber((int)this._fsNrOpen) : null, "fsNrOpen" ,container.Add );
            AddIf( null != this._kernelThreadsMax ? (Microsoft.Azure.PowerShell.Cmdlets.Aks.Runtime.Json.JsonNode)new Microsoft.Azure.PowerShell.Cmdlets.Aks.Runtime.Json.JsonNumber((int)this._kernelThreadsMax) : null, "kernelThreadsMax" ,container.Add );
            AddIf( null != this._vMMaxMapCount ? (Microsoft.Azure.PowerShell.Cmdlets.Aks.Runtime.Json.JsonNode)new Microsoft.Azure.PowerShell.Cmdlets.Aks.Runtime.Json.JsonNumber((int)this._vMMaxMapCount) : null, "vmMaxMapCount" ,container.Add );
            AddIf( null != this._vMSwappiness ? (Microsoft.Azure.PowerShell.Cmdlets.Aks.Runtime.Json.JsonNode)new Microsoft.Azure.PowerShell.Cmdlets.Aks.Runtime.Json.JsonNumber((int)this._vMSwappiness) : null, "vmSwappiness" ,container.Add );
            AddIf( null != this._vMVfsCachePressure ? (Microsoft.Azure.PowerShell.Cmdlets.Aks.Runtime.Json.JsonNode)new Microsoft.Azure.PowerShell.Cmdlets.Aks.Runtime.Json.JsonNumber((int)this._vMVfsCachePressure) : null, "vmVfsCachePressure" ,container.Add );
            AfterToJson(ref container);
            return container;
        }
    }
}