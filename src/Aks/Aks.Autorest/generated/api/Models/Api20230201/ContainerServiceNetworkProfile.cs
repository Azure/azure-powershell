// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.Api20230201
{
    using static Microsoft.Azure.PowerShell.Cmdlets.Aks.Runtime.Extensions;

    /// <summary>Profile of network configuration.</summary>
    public partial class ContainerServiceNetworkProfile :
        Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.Api20230201.IContainerServiceNetworkProfile,
        Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.Api20230201.IContainerServiceNetworkProfileInternal
    {

        /// <summary>Backing field for <see cref="DnsServiceIP" /> property.</summary>
        private string _dnsServiceIP;

        /// <summary>
        /// An IP address assigned to the Kubernetes DNS service. It must be within the Kubernetes service address range specified
        /// in serviceCidr.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Aks.Origin(Microsoft.Azure.PowerShell.Cmdlets.Aks.PropertyOrigin.Owned)]
        public string DnsServiceIP { get => this._dnsServiceIP; set => this._dnsServiceIP = value; }

        /// <summary>Backing field for <see cref="DockerBridgeCidr" /> property.</summary>
        private string _dockerBridgeCidr;

        /// <summary>
        /// A CIDR notation IP range assigned to the Docker bridge network. It must not overlap with any Subnet IP ranges or the Kubernetes
        /// service address range.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Aks.Origin(Microsoft.Azure.PowerShell.Cmdlets.Aks.PropertyOrigin.Owned)]
        public string DockerBridgeCidr { get => this._dockerBridgeCidr; set => this._dockerBridgeCidr = value; }

        /// <summary>Backing field for <see cref="IPFamily" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Aks.Support.IPFamily[] _iPFamily;

        /// <summary>
        /// IP families are used to determine single-stack or dual-stack clusters. For single-stack, the expected value is IPv4. For
        /// dual-stack, the expected values are IPv4 and IPv6.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Aks.Origin(Microsoft.Azure.PowerShell.Cmdlets.Aks.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.Aks.Support.IPFamily[] IPFamily { get => this._iPFamily; set => this._iPFamily = value; }

        /// <summary>Backing field for <see cref="LoadBalancerProfile" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.Api20230201.IManagedClusterLoadBalancerProfile _loadBalancerProfile;

        /// <summary>Profile of the cluster load balancer.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Aks.Origin(Microsoft.Azure.PowerShell.Cmdlets.Aks.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.Api20230201.IManagedClusterLoadBalancerProfile LoadBalancerProfile { get => (this._loadBalancerProfile = this._loadBalancerProfile ?? new Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.Api20230201.ManagedClusterLoadBalancerProfile()); set => this._loadBalancerProfile = value; }

        /// <summary>
        /// The desired number of allocated SNAT ports per VM. Allowed values are in the range of 0 to 64000 (inclusive). The default
        /// value is 0 which results in Azure dynamically allocating ports.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Aks.Origin(Microsoft.Azure.PowerShell.Cmdlets.Aks.PropertyOrigin.Inlined)]
        public int? LoadBalancerProfileAllocatedOutboundPort { get => ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.Api20230201.IManagedClusterLoadBalancerProfileInternal)LoadBalancerProfile).AllocatedOutboundPort; set => ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.Api20230201.IManagedClusterLoadBalancerProfileInternal)LoadBalancerProfile).AllocatedOutboundPort = value ?? default(int); }

        /// <summary>The effective outbound IP resources of the cluster load balancer.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Aks.Origin(Microsoft.Azure.PowerShell.Cmdlets.Aks.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.Api20230201.IResourceReference[] LoadBalancerProfileEffectiveOutboundIP { get => ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.Api20230201.IManagedClusterLoadBalancerProfileInternal)LoadBalancerProfile).EffectiveOutboundIP; set => ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.Api20230201.IManagedClusterLoadBalancerProfileInternal)LoadBalancerProfile).EffectiveOutboundIP = value ?? null /* arrayOf */; }

        /// <summary>Enable multiple standard load balancers per AKS cluster or not.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Aks.Origin(Microsoft.Azure.PowerShell.Cmdlets.Aks.PropertyOrigin.Inlined)]
        public bool? LoadBalancerProfileEnableMultipleStandardLoadBalancer { get => ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.Api20230201.IManagedClusterLoadBalancerProfileInternal)LoadBalancerProfile).EnableMultipleStandardLoadBalancer; set => ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.Api20230201.IManagedClusterLoadBalancerProfileInternal)LoadBalancerProfile).EnableMultipleStandardLoadBalancer = value ?? default(bool); }

        /// <summary>
        /// Desired outbound flow idle timeout in minutes. Allowed values are in the range of 4 to 120 (inclusive). The default value
        /// is 30 minutes.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Aks.Origin(Microsoft.Azure.PowerShell.Cmdlets.Aks.PropertyOrigin.Inlined)]
        public int? LoadBalancerProfileIdleTimeoutInMinute { get => ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.Api20230201.IManagedClusterLoadBalancerProfileInternal)LoadBalancerProfile).IdleTimeoutInMinute; set => ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.Api20230201.IManagedClusterLoadBalancerProfileInternal)LoadBalancerProfile).IdleTimeoutInMinute = value ?? default(int); }

        /// <summary>Backing field for <see cref="LoadBalancerSku" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Aks.Support.LoadBalancerSku? _loadBalancerSku;

        /// <summary>
        /// The default is 'standard'. See [Azure Load Balancer SKUs](https://docs.microsoft.com/azure/load-balancer/skus) for more
        /// information about the differences between load balancer SKUs.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Aks.Origin(Microsoft.Azure.PowerShell.Cmdlets.Aks.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.Aks.Support.LoadBalancerSku? LoadBalancerSku { get => this._loadBalancerSku; set => this._loadBalancerSku = value; }

        /// <summary>
        /// The desired number of IPv4 outbound IPs created/managed by Azure for the cluster load balancer. Allowed values must be
        /// in the range of 1 to 100 (inclusive). The default value is 1.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Aks.Origin(Microsoft.Azure.PowerShell.Cmdlets.Aks.PropertyOrigin.Inlined)]
        public int? ManagedOutboundIPCount { get => ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.Api20230201.IManagedClusterLoadBalancerProfileInternal)LoadBalancerProfile).ManagedOutboundIPCount; set => ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.Api20230201.IManagedClusterLoadBalancerProfileInternal)LoadBalancerProfile).ManagedOutboundIPCount = value ?? default(int); }

        /// <summary>
        /// The desired number of IPv6 outbound IPs created/managed by Azure for the cluster load balancer. Allowed values must be
        /// in the range of 1 to 100 (inclusive). The default value is 0 for single-stack and 1 for dual-stack.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Aks.Origin(Microsoft.Azure.PowerShell.Cmdlets.Aks.PropertyOrigin.Inlined)]
        public int? ManagedOutboundIPCountIpv6 { get => ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.Api20230201.IManagedClusterLoadBalancerProfileInternal)LoadBalancerProfile).ManagedOutboundIPCountIpv6; set => ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.Api20230201.IManagedClusterLoadBalancerProfileInternal)LoadBalancerProfile).ManagedOutboundIPCountIpv6 = value ?? default(int); }

        /// <summary>
        /// The desired number of outbound IPs created/managed by Azure. Allowed values must be in the range of 1 to 16 (inclusive).
        /// The default value is 1.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Aks.Origin(Microsoft.Azure.PowerShell.Cmdlets.Aks.PropertyOrigin.Inlined)]
        public int? ManagedOutboundIPProfileCount { get => ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.Api20230201.IManagedClusterNatGatewayProfileInternal)NatGatewayProfile).ManagedOutboundIPProfileCount; set => ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.Api20230201.IManagedClusterNatGatewayProfileInternal)NatGatewayProfile).ManagedOutboundIPProfileCount = value ?? default(int); }

        /// <summary>Internal Acessors for LoadBalancerProfile</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.Api20230201.IManagedClusterLoadBalancerProfile Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.Api20230201.IContainerServiceNetworkProfileInternal.LoadBalancerProfile { get => (this._loadBalancerProfile = this._loadBalancerProfile ?? new Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.Api20230201.ManagedClusterLoadBalancerProfile()); set { {_loadBalancerProfile = value;} } }

        /// <summary>Internal Acessors for LoadBalancerProfileManagedOutboundIP</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.Api20230201.IManagedClusterLoadBalancerProfileManagedOutboundIPs Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.Api20230201.IContainerServiceNetworkProfileInternal.LoadBalancerProfileManagedOutboundIP { get => ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.Api20230201.IManagedClusterLoadBalancerProfileInternal)LoadBalancerProfile).ManagedOutboundIP; set => ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.Api20230201.IManagedClusterLoadBalancerProfileInternal)LoadBalancerProfile).ManagedOutboundIP = value; }

        /// <summary>Internal Acessors for LoadBalancerProfileOutboundIP</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.Api20230201.IManagedClusterLoadBalancerProfileOutboundIPs Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.Api20230201.IContainerServiceNetworkProfileInternal.LoadBalancerProfileOutboundIP { get => ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.Api20230201.IManagedClusterLoadBalancerProfileInternal)LoadBalancerProfile).OutboundIP; set => ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.Api20230201.IManagedClusterLoadBalancerProfileInternal)LoadBalancerProfile).OutboundIP = value; }

        /// <summary>Internal Acessors for LoadBalancerProfileOutboundIPPrefix</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.Api20230201.IManagedClusterLoadBalancerProfileOutboundIPPrefixes Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.Api20230201.IContainerServiceNetworkProfileInternal.LoadBalancerProfileOutboundIPPrefix { get => ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.Api20230201.IManagedClusterLoadBalancerProfileInternal)LoadBalancerProfile).OutboundIPPrefix; set => ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.Api20230201.IManagedClusterLoadBalancerProfileInternal)LoadBalancerProfile).OutboundIPPrefix = value; }

        /// <summary>Internal Acessors for NatGatewayProfile</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.Api20230201.IManagedClusterNatGatewayProfile Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.Api20230201.IContainerServiceNetworkProfileInternal.NatGatewayProfile { get => (this._natGatewayProfile = this._natGatewayProfile ?? new Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.Api20230201.ManagedClusterNatGatewayProfile()); set { {_natGatewayProfile = value;} } }

        /// <summary>Internal Acessors for NatGatewayProfileManagedOutboundIPProfile</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.Api20230201.IManagedClusterManagedOutboundIPProfile Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.Api20230201.IContainerServiceNetworkProfileInternal.NatGatewayProfileManagedOutboundIPProfile { get => ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.Api20230201.IManagedClusterNatGatewayProfileInternal)NatGatewayProfile).ManagedOutboundIPProfile; set => ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.Api20230201.IManagedClusterNatGatewayProfileInternal)NatGatewayProfile).ManagedOutboundIPProfile = value; }

        /// <summary>Backing field for <see cref="NatGatewayProfile" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.Api20230201.IManagedClusterNatGatewayProfile _natGatewayProfile;

        /// <summary>Profile of the cluster NAT gateway.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Aks.Origin(Microsoft.Azure.PowerShell.Cmdlets.Aks.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.Api20230201.IManagedClusterNatGatewayProfile NatGatewayProfile { get => (this._natGatewayProfile = this._natGatewayProfile ?? new Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.Api20230201.ManagedClusterNatGatewayProfile()); set => this._natGatewayProfile = value; }

        /// <summary>The effective outbound IP resources of the cluster NAT gateway.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Aks.Origin(Microsoft.Azure.PowerShell.Cmdlets.Aks.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.Api20230201.IResourceReference[] NatGatewayProfileEffectiveOutboundIP { get => ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.Api20230201.IManagedClusterNatGatewayProfileInternal)NatGatewayProfile).EffectiveOutboundIP; set => ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.Api20230201.IManagedClusterNatGatewayProfileInternal)NatGatewayProfile).EffectiveOutboundIP = value ?? null /* arrayOf */; }

        /// <summary>
        /// Desired outbound flow idle timeout in minutes. Allowed values are in the range of 4 to 120 (inclusive). The default value
        /// is 4 minutes.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Aks.Origin(Microsoft.Azure.PowerShell.Cmdlets.Aks.PropertyOrigin.Inlined)]
        public int? NatGatewayProfileIdleTimeoutInMinute { get => ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.Api20230201.IManagedClusterNatGatewayProfileInternal)NatGatewayProfile).IdleTimeoutInMinute; set => ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.Api20230201.IManagedClusterNatGatewayProfileInternal)NatGatewayProfile).IdleTimeoutInMinute = value ?? default(int); }

        /// <summary>Backing field for <see cref="NetworkDataplane" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Aks.Support.NetworkDataplane? _networkDataplane;

        /// <summary>Network dataplane used in the Kubernetes cluster.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Aks.Origin(Microsoft.Azure.PowerShell.Cmdlets.Aks.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.Aks.Support.NetworkDataplane? NetworkDataplane { get => this._networkDataplane; set => this._networkDataplane = value; }

        /// <summary>Backing field for <see cref="NetworkMode" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Aks.Support.NetworkMode? _networkMode;

        /// <summary>This cannot be specified if networkPlugin is anything other than 'azure'.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Aks.Origin(Microsoft.Azure.PowerShell.Cmdlets.Aks.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.Aks.Support.NetworkMode? NetworkMode { get => this._networkMode; set => this._networkMode = value; }

        /// <summary>Backing field for <see cref="NetworkPlugin" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Aks.Support.NetworkPlugin? _networkPlugin;

        /// <summary>Network plugin used for building the Kubernetes network.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Aks.Origin(Microsoft.Azure.PowerShell.Cmdlets.Aks.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.Aks.Support.NetworkPlugin? NetworkPlugin { get => this._networkPlugin; set => this._networkPlugin = value; }

        /// <summary>Backing field for <see cref="NetworkPluginMode" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Aks.Support.NetworkPluginMode? _networkPluginMode;

        /// <summary>The mode the network plugin should use.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Aks.Origin(Microsoft.Azure.PowerShell.Cmdlets.Aks.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.Aks.Support.NetworkPluginMode? NetworkPluginMode { get => this._networkPluginMode; set => this._networkPluginMode = value; }

        /// <summary>Backing field for <see cref="NetworkPolicy" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Aks.Support.NetworkPolicy? _networkPolicy;

        /// <summary>Network policy used for building the Kubernetes network.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Aks.Origin(Microsoft.Azure.PowerShell.Cmdlets.Aks.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.Aks.Support.NetworkPolicy? NetworkPolicy { get => this._networkPolicy; set => this._networkPolicy = value; }

        /// <summary>A list of public IP prefix resources.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Aks.Origin(Microsoft.Azure.PowerShell.Cmdlets.Aks.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.Api20230201.IResourceReference[] OutboundIPPrefixPublicIpprefix { get => ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.Api20230201.IManagedClusterLoadBalancerProfileInternal)LoadBalancerProfile).OutboundIPPrefixPublicIpprefix; set => ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.Api20230201.IManagedClusterLoadBalancerProfileInternal)LoadBalancerProfile).OutboundIPPrefixPublicIpprefix = value ?? null /* arrayOf */; }

        /// <summary>A list of public IP resources.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Aks.Origin(Microsoft.Azure.PowerShell.Cmdlets.Aks.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.Api20230201.IResourceReference[] OutboundIPPublicIP { get => ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.Api20230201.IManagedClusterLoadBalancerProfileInternal)LoadBalancerProfile).OutboundIPPublicIP; set => ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.Api20230201.IManagedClusterLoadBalancerProfileInternal)LoadBalancerProfile).OutboundIPPublicIP = value ?? null /* arrayOf */; }

        /// <summary>Backing field for <see cref="OutboundType" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Aks.Support.OutboundType? _outboundType;

        /// <summary>
        /// This can only be set at cluster creation time and cannot be changed later. For more information see [egress outbound type](https://docs.microsoft.com/azure/aks/egress-outboundtype).
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Aks.Origin(Microsoft.Azure.PowerShell.Cmdlets.Aks.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.Aks.Support.OutboundType? OutboundType { get => this._outboundType; set => this._outboundType = value; }

        /// <summary>Backing field for <see cref="PodCidr" /> property.</summary>
        private string _podCidr;

        /// <summary>A CIDR notation IP range from which to assign pod IPs when kubenet is used.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Aks.Origin(Microsoft.Azure.PowerShell.Cmdlets.Aks.PropertyOrigin.Owned)]
        public string PodCidr { get => this._podCidr; set => this._podCidr = value; }

        /// <summary>Backing field for <see cref="PodCidrs" /> property.</summary>
        private string[] _podCidrs;

        /// <summary>
        /// One IPv4 CIDR is expected for single-stack networking. Two CIDRs, one for each IP family (IPv4/IPv6), is expected for
        /// dual-stack networking.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Aks.Origin(Microsoft.Azure.PowerShell.Cmdlets.Aks.PropertyOrigin.Owned)]
        public string[] PodCidrs { get => this._podCidrs; set => this._podCidrs = value; }

        /// <summary>Backing field for <see cref="ServiceCidr" /> property.</summary>
        private string _serviceCidr;

        /// <summary>
        /// A CIDR notation IP range from which to assign service cluster IPs. It must not overlap with any Subnet IP ranges.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Aks.Origin(Microsoft.Azure.PowerShell.Cmdlets.Aks.PropertyOrigin.Owned)]
        public string ServiceCidr { get => this._serviceCidr; set => this._serviceCidr = value; }

        /// <summary>Backing field for <see cref="ServiceCidrs" /> property.</summary>
        private string[] _serviceCidrs;

        /// <summary>
        /// One IPv4 CIDR is expected for single-stack networking. Two CIDRs, one for each IP family (IPv4/IPv6), is expected for
        /// dual-stack networking. They must not overlap with any Subnet IP ranges.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Aks.Origin(Microsoft.Azure.PowerShell.Cmdlets.Aks.PropertyOrigin.Owned)]
        public string[] ServiceCidrs { get => this._serviceCidrs; set => this._serviceCidrs = value; }

        /// <summary>Creates an new <see cref="ContainerServiceNetworkProfile" /> instance.</summary>
        public ContainerServiceNetworkProfile()
        {

        }
    }
    /// Profile of network configuration.
    public partial interface IContainerServiceNetworkProfile :
        Microsoft.Azure.PowerShell.Cmdlets.Aks.Runtime.IJsonSerializable
    {
        /// <summary>
        /// An IP address assigned to the Kubernetes DNS service. It must be within the Kubernetes service address range specified
        /// in serviceCidr.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Aks.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"An IP address assigned to the Kubernetes DNS service. It must be within the Kubernetes service address range specified in serviceCidr.",
        SerializedName = @"dnsServiceIP",
        PossibleTypes = new [] { typeof(string) })]
        string DnsServiceIP { get; set; }
        /// <summary>
        /// A CIDR notation IP range assigned to the Docker bridge network. It must not overlap with any Subnet IP ranges or the Kubernetes
        /// service address range.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Aks.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"A CIDR notation IP range assigned to the Docker bridge network. It must not overlap with any Subnet IP ranges or the Kubernetes service address range.",
        SerializedName = @"dockerBridgeCidr",
        PossibleTypes = new [] { typeof(string) })]
        string DockerBridgeCidr { get; set; }
        /// <summary>
        /// IP families are used to determine single-stack or dual-stack clusters. For single-stack, the expected value is IPv4. For
        /// dual-stack, the expected values are IPv4 and IPv6.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Aks.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"IP families are used to determine single-stack or dual-stack clusters. For single-stack, the expected value is IPv4. For dual-stack, the expected values are IPv4 and IPv6.",
        SerializedName = @"ipFamilies",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Aks.Support.IPFamily) })]
        Microsoft.Azure.PowerShell.Cmdlets.Aks.Support.IPFamily[] IPFamily { get; set; }
        /// <summary>
        /// The desired number of allocated SNAT ports per VM. Allowed values are in the range of 0 to 64000 (inclusive). The default
        /// value is 0 which results in Azure dynamically allocating ports.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Aks.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The desired number of allocated SNAT ports per VM. Allowed values are in the range of 0 to 64000 (inclusive). The default value is 0 which results in Azure dynamically allocating ports.",
        SerializedName = @"allocatedOutboundPorts",
        PossibleTypes = new [] { typeof(int) })]
        int? LoadBalancerProfileAllocatedOutboundPort { get; set; }
        /// <summary>The effective outbound IP resources of the cluster load balancer.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Aks.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The effective outbound IP resources of the cluster load balancer.",
        SerializedName = @"effectiveOutboundIPs",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.Api20230201.IResourceReference) })]
        Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.Api20230201.IResourceReference[] LoadBalancerProfileEffectiveOutboundIP { get; set; }
        /// <summary>Enable multiple standard load balancers per AKS cluster or not.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Aks.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Enable multiple standard load balancers per AKS cluster or not.",
        SerializedName = @"enableMultipleStandardLoadBalancers",
        PossibleTypes = new [] { typeof(bool) })]
        bool? LoadBalancerProfileEnableMultipleStandardLoadBalancer { get; set; }
        /// <summary>
        /// Desired outbound flow idle timeout in minutes. Allowed values are in the range of 4 to 120 (inclusive). The default value
        /// is 30 minutes.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Aks.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Desired outbound flow idle timeout in minutes. Allowed values are in the range of 4 to 120 (inclusive). The default value is 30 minutes.",
        SerializedName = @"idleTimeoutInMinutes",
        PossibleTypes = new [] { typeof(int) })]
        int? LoadBalancerProfileIdleTimeoutInMinute { get; set; }
        /// <summary>
        /// The default is 'standard'. See [Azure Load Balancer SKUs](https://docs.microsoft.com/azure/load-balancer/skus) for more
        /// information about the differences between load balancer SKUs.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Aks.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The default is 'standard'. See [Azure Load Balancer SKUs](https://docs.microsoft.com/azure/load-balancer/skus) for more information about the differences between load balancer SKUs.",
        SerializedName = @"loadBalancerSku",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Aks.Support.LoadBalancerSku) })]
        Microsoft.Azure.PowerShell.Cmdlets.Aks.Support.LoadBalancerSku? LoadBalancerSku { get; set; }
        /// <summary>
        /// The desired number of IPv4 outbound IPs created/managed by Azure for the cluster load balancer. Allowed values must be
        /// in the range of 1 to 100 (inclusive). The default value is 1.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Aks.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The desired number of IPv4 outbound IPs created/managed by Azure for the cluster load balancer. Allowed values must be in the range of 1 to 100 (inclusive). The default value is 1. ",
        SerializedName = @"count",
        PossibleTypes = new [] { typeof(int) })]
        int? ManagedOutboundIPCount { get; set; }
        /// <summary>
        /// The desired number of IPv6 outbound IPs created/managed by Azure for the cluster load balancer. Allowed values must be
        /// in the range of 1 to 100 (inclusive). The default value is 0 for single-stack and 1 for dual-stack.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Aks.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The desired number of IPv6 outbound IPs created/managed by Azure for the cluster load balancer. Allowed values must be in the range of 1 to 100 (inclusive). The default value is 0 for single-stack and 1 for dual-stack. ",
        SerializedName = @"countIPv6",
        PossibleTypes = new [] { typeof(int) })]
        int? ManagedOutboundIPCountIpv6 { get; set; }
        /// <summary>
        /// The desired number of outbound IPs created/managed by Azure. Allowed values must be in the range of 1 to 16 (inclusive).
        /// The default value is 1.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Aks.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The desired number of outbound IPs created/managed by Azure. Allowed values must be in the range of 1 to 16 (inclusive). The default value is 1. ",
        SerializedName = @"count",
        PossibleTypes = new [] { typeof(int) })]
        int? ManagedOutboundIPProfileCount { get; set; }
        /// <summary>The effective outbound IP resources of the cluster NAT gateway.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Aks.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The effective outbound IP resources of the cluster NAT gateway.",
        SerializedName = @"effectiveOutboundIPs",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.Api20230201.IResourceReference) })]
        Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.Api20230201.IResourceReference[] NatGatewayProfileEffectiveOutboundIP { get; set; }
        /// <summary>
        /// Desired outbound flow idle timeout in minutes. Allowed values are in the range of 4 to 120 (inclusive). The default value
        /// is 4 minutes.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Aks.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Desired outbound flow idle timeout in minutes. Allowed values are in the range of 4 to 120 (inclusive). The default value is 4 minutes.",
        SerializedName = @"idleTimeoutInMinutes",
        PossibleTypes = new [] { typeof(int) })]
        int? NatGatewayProfileIdleTimeoutInMinute { get; set; }
        /// <summary>Network dataplane used in the Kubernetes cluster.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Aks.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Network dataplane used in the Kubernetes cluster.",
        SerializedName = @"networkDataplane",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Aks.Support.NetworkDataplane) })]
        Microsoft.Azure.PowerShell.Cmdlets.Aks.Support.NetworkDataplane? NetworkDataplane { get; set; }
        /// <summary>This cannot be specified if networkPlugin is anything other than 'azure'.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Aks.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"This cannot be specified if networkPlugin is anything other than 'azure'.",
        SerializedName = @"networkMode",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Aks.Support.NetworkMode) })]
        Microsoft.Azure.PowerShell.Cmdlets.Aks.Support.NetworkMode? NetworkMode { get; set; }
        /// <summary>Network plugin used for building the Kubernetes network.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Aks.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Network plugin used for building the Kubernetes network.",
        SerializedName = @"networkPlugin",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Aks.Support.NetworkPlugin) })]
        Microsoft.Azure.PowerShell.Cmdlets.Aks.Support.NetworkPlugin? NetworkPlugin { get; set; }
        /// <summary>The mode the network plugin should use.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Aks.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The mode the network plugin should use.",
        SerializedName = @"networkPluginMode",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Aks.Support.NetworkPluginMode) })]
        Microsoft.Azure.PowerShell.Cmdlets.Aks.Support.NetworkPluginMode? NetworkPluginMode { get; set; }
        /// <summary>Network policy used for building the Kubernetes network.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Aks.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Network policy used for building the Kubernetes network.",
        SerializedName = @"networkPolicy",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Aks.Support.NetworkPolicy) })]
        Microsoft.Azure.PowerShell.Cmdlets.Aks.Support.NetworkPolicy? NetworkPolicy { get; set; }
        /// <summary>A list of public IP prefix resources.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Aks.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"A list of public IP prefix resources.",
        SerializedName = @"publicIPPrefixes",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.Api20230201.IResourceReference) })]
        Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.Api20230201.IResourceReference[] OutboundIPPrefixPublicIpprefix { get; set; }
        /// <summary>A list of public IP resources.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Aks.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"A list of public IP resources.",
        SerializedName = @"publicIPs",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.Api20230201.IResourceReference) })]
        Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.Api20230201.IResourceReference[] OutboundIPPublicIP { get; set; }
        /// <summary>
        /// This can only be set at cluster creation time and cannot be changed later. For more information see [egress outbound type](https://docs.microsoft.com/azure/aks/egress-outboundtype).
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Aks.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"This can only be set at cluster creation time and cannot be changed later. For more information see [egress outbound type](https://docs.microsoft.com/azure/aks/egress-outboundtype).",
        SerializedName = @"outboundType",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Aks.Support.OutboundType) })]
        Microsoft.Azure.PowerShell.Cmdlets.Aks.Support.OutboundType? OutboundType { get; set; }
        /// <summary>A CIDR notation IP range from which to assign pod IPs when kubenet is used.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Aks.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"A CIDR notation IP range from which to assign pod IPs when kubenet is used.",
        SerializedName = @"podCidr",
        PossibleTypes = new [] { typeof(string) })]
        string PodCidr { get; set; }
        /// <summary>
        /// One IPv4 CIDR is expected for single-stack networking. Two CIDRs, one for each IP family (IPv4/IPv6), is expected for
        /// dual-stack networking.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Aks.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"One IPv4 CIDR is expected for single-stack networking. Two CIDRs, one for each IP family (IPv4/IPv6), is expected for dual-stack networking.",
        SerializedName = @"podCidrs",
        PossibleTypes = new [] { typeof(string) })]
        string[] PodCidrs { get; set; }
        /// <summary>
        /// A CIDR notation IP range from which to assign service cluster IPs. It must not overlap with any Subnet IP ranges.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Aks.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"A CIDR notation IP range from which to assign service cluster IPs. It must not overlap with any Subnet IP ranges.",
        SerializedName = @"serviceCidr",
        PossibleTypes = new [] { typeof(string) })]
        string ServiceCidr { get; set; }
        /// <summary>
        /// One IPv4 CIDR is expected for single-stack networking. Two CIDRs, one for each IP family (IPv4/IPv6), is expected for
        /// dual-stack networking. They must not overlap with any Subnet IP ranges.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Aks.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"One IPv4 CIDR is expected for single-stack networking. Two CIDRs, one for each IP family (IPv4/IPv6), is expected for dual-stack networking. They must not overlap with any Subnet IP ranges.",
        SerializedName = @"serviceCidrs",
        PossibleTypes = new [] { typeof(string) })]
        string[] ServiceCidrs { get; set; }

    }
    /// Profile of network configuration.
    internal partial interface IContainerServiceNetworkProfileInternal

    {
        /// <summary>
        /// An IP address assigned to the Kubernetes DNS service. It must be within the Kubernetes service address range specified
        /// in serviceCidr.
        /// </summary>
        string DnsServiceIP { get; set; }
        /// <summary>
        /// A CIDR notation IP range assigned to the Docker bridge network. It must not overlap with any Subnet IP ranges or the Kubernetes
        /// service address range.
        /// </summary>
        string DockerBridgeCidr { get; set; }
        /// <summary>
        /// IP families are used to determine single-stack or dual-stack clusters. For single-stack, the expected value is IPv4. For
        /// dual-stack, the expected values are IPv4 and IPv6.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Aks.Support.IPFamily[] IPFamily { get; set; }
        /// <summary>Profile of the cluster load balancer.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.Api20230201.IManagedClusterLoadBalancerProfile LoadBalancerProfile { get; set; }
        /// <summary>
        /// The desired number of allocated SNAT ports per VM. Allowed values are in the range of 0 to 64000 (inclusive). The default
        /// value is 0 which results in Azure dynamically allocating ports.
        /// </summary>
        int? LoadBalancerProfileAllocatedOutboundPort { get; set; }
        /// <summary>The effective outbound IP resources of the cluster load balancer.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.Api20230201.IResourceReference[] LoadBalancerProfileEffectiveOutboundIP { get; set; }
        /// <summary>Enable multiple standard load balancers per AKS cluster or not.</summary>
        bool? LoadBalancerProfileEnableMultipleStandardLoadBalancer { get; set; }
        /// <summary>
        /// Desired outbound flow idle timeout in minutes. Allowed values are in the range of 4 to 120 (inclusive). The default value
        /// is 30 minutes.
        /// </summary>
        int? LoadBalancerProfileIdleTimeoutInMinute { get; set; }
        /// <summary>Desired managed outbound IPs for the cluster load balancer.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.Api20230201.IManagedClusterLoadBalancerProfileManagedOutboundIPs LoadBalancerProfileManagedOutboundIP { get; set; }
        /// <summary>Desired outbound IP resources for the cluster load balancer.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.Api20230201.IManagedClusterLoadBalancerProfileOutboundIPs LoadBalancerProfileOutboundIP { get; set; }
        /// <summary>Desired outbound IP Prefix resources for the cluster load balancer.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.Api20230201.IManagedClusterLoadBalancerProfileOutboundIPPrefixes LoadBalancerProfileOutboundIPPrefix { get; set; }
        /// <summary>
        /// The default is 'standard'. See [Azure Load Balancer SKUs](https://docs.microsoft.com/azure/load-balancer/skus) for more
        /// information about the differences between load balancer SKUs.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Aks.Support.LoadBalancerSku? LoadBalancerSku { get; set; }
        /// <summary>
        /// The desired number of IPv4 outbound IPs created/managed by Azure for the cluster load balancer. Allowed values must be
        /// in the range of 1 to 100 (inclusive). The default value is 1.
        /// </summary>
        int? ManagedOutboundIPCount { get; set; }
        /// <summary>
        /// The desired number of IPv6 outbound IPs created/managed by Azure for the cluster load balancer. Allowed values must be
        /// in the range of 1 to 100 (inclusive). The default value is 0 for single-stack and 1 for dual-stack.
        /// </summary>
        int? ManagedOutboundIPCountIpv6 { get; set; }
        /// <summary>
        /// The desired number of outbound IPs created/managed by Azure. Allowed values must be in the range of 1 to 16 (inclusive).
        /// The default value is 1.
        /// </summary>
        int? ManagedOutboundIPProfileCount { get; set; }
        /// <summary>Profile of the cluster NAT gateway.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.Api20230201.IManagedClusterNatGatewayProfile NatGatewayProfile { get; set; }
        /// <summary>The effective outbound IP resources of the cluster NAT gateway.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.Api20230201.IResourceReference[] NatGatewayProfileEffectiveOutboundIP { get; set; }
        /// <summary>
        /// Desired outbound flow idle timeout in minutes. Allowed values are in the range of 4 to 120 (inclusive). The default value
        /// is 4 minutes.
        /// </summary>
        int? NatGatewayProfileIdleTimeoutInMinute { get; set; }
        /// <summary>Profile of the managed outbound IP resources of the cluster NAT gateway.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.Api20230201.IManagedClusterManagedOutboundIPProfile NatGatewayProfileManagedOutboundIPProfile { get; set; }
        /// <summary>Network dataplane used in the Kubernetes cluster.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Aks.Support.NetworkDataplane? NetworkDataplane { get; set; }
        /// <summary>This cannot be specified if networkPlugin is anything other than 'azure'.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Aks.Support.NetworkMode? NetworkMode { get; set; }
        /// <summary>Network plugin used for building the Kubernetes network.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Aks.Support.NetworkPlugin? NetworkPlugin { get; set; }
        /// <summary>The mode the network plugin should use.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Aks.Support.NetworkPluginMode? NetworkPluginMode { get; set; }
        /// <summary>Network policy used for building the Kubernetes network.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Aks.Support.NetworkPolicy? NetworkPolicy { get; set; }
        /// <summary>A list of public IP prefix resources.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.Api20230201.IResourceReference[] OutboundIPPrefixPublicIpprefix { get; set; }
        /// <summary>A list of public IP resources.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.Api20230201.IResourceReference[] OutboundIPPublicIP { get; set; }
        /// <summary>
        /// This can only be set at cluster creation time and cannot be changed later. For more information see [egress outbound type](https://docs.microsoft.com/azure/aks/egress-outboundtype).
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Aks.Support.OutboundType? OutboundType { get; set; }
        /// <summary>A CIDR notation IP range from which to assign pod IPs when kubenet is used.</summary>
        string PodCidr { get; set; }
        /// <summary>
        /// One IPv4 CIDR is expected for single-stack networking. Two CIDRs, one for each IP family (IPv4/IPv6), is expected for
        /// dual-stack networking.
        /// </summary>
        string[] PodCidrs { get; set; }
        /// <summary>
        /// A CIDR notation IP range from which to assign service cluster IPs. It must not overlap with any Subnet IP ranges.
        /// </summary>
        string ServiceCidr { get; set; }
        /// <summary>
        /// One IPv4 CIDR is expected for single-stack networking. Two CIDRs, one for each IP family (IPv4/IPv6), is expected for
        /// dual-stack networking. They must not overlap with any Subnet IP ranges.
        /// </summary>
        string[] ServiceCidrs { get; set; }

    }
}