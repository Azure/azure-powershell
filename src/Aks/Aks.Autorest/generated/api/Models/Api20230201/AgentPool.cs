// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.Api20230201
{
    using static Microsoft.Azure.PowerShell.Cmdlets.Aks.Runtime.Extensions;

    /// <summary>Agent Pool.</summary>
    public partial class AgentPool :
        Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.Api20230201.IAgentPool,
        Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.Api20230201.IAgentPoolInternal,
        Microsoft.Azure.PowerShell.Cmdlets.Aks.Runtime.IValidates,
        Microsoft.Azure.PowerShell.Cmdlets.Aks.Runtime.IHeaderSerializable
    {
        /// <summary>
        /// Backing field for Inherited model <see cref= "Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.Api20230201.ISubResource"
        /// />
        /// </summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.Api20230201.ISubResource __subResource = new Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.Api20230201.SubResource();

        /// <summary>
        /// The list of Availability zones to use for nodes. This can only be specified if the AgentPoolType property is 'VirtualMachineScaleSets'.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Aks.Origin(Microsoft.Azure.PowerShell.Cmdlets.Aks.PropertyOrigin.Inlined)]
        public string[] AvailabilityZone { get => ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.Api20230201.IManagedClusterAgentPoolProfilePropertiesInternal)Property).AvailabilityZone; set => ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.Api20230201.IManagedClusterAgentPoolProfilePropertiesInternal)Property).AvailabilityZone = value ?? null /* arrayOf */; }

        /// <summary>Backing field for <see cref="AzureAsyncOperation" /> property.</summary>
        private string _azureAsyncOperation;

        [Microsoft.Azure.PowerShell.Cmdlets.Aks.Origin(Microsoft.Azure.PowerShell.Cmdlets.Aks.PropertyOrigin.Owned)]
        public string AzureAsyncOperation { get => this._azureAsyncOperation; set => this._azureAsyncOperation = value; }

        /// <summary>
        /// Number of agents (VMs) to host docker containers. Allowed values must be in the range of 0 to 1000 (inclusive) for user
        /// pools and in the range of 1 to 1000 (inclusive) for system pools. The default value is 1.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Aks.Origin(Microsoft.Azure.PowerShell.Cmdlets.Aks.PropertyOrigin.Inlined)]
        public int? Count { get => ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.Api20230201.IManagedClusterAgentPoolProfilePropertiesInternal)Property).Count; set => ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.Api20230201.IManagedClusterAgentPoolProfilePropertiesInternal)Property).Count = value ?? default(int); }

        /// <summary>This is the ARM ID of the source object to be used to create the target object.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Aks.Origin(Microsoft.Azure.PowerShell.Cmdlets.Aks.PropertyOrigin.Inlined)]
        public string CreationDataSourceResourceId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.Api20230201.IManagedClusterAgentPoolProfilePropertiesInternal)Property).CreationDataSourceResourceId; set => ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.Api20230201.IManagedClusterAgentPoolProfilePropertiesInternal)Property).CreationDataSourceResourceId = value ?? null; }

        /// <summary>
        /// If orchestratorVersion is a fully specified version <major.minor.patch>, this field will be exactly equal to it. If orchestratorVersion
        /// is <major.minor>, this field will contain the full <major.minor.patch> version being used.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Aks.Origin(Microsoft.Azure.PowerShell.Cmdlets.Aks.PropertyOrigin.Inlined)]
        public string CurrentOrchestratorVersion { get => ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.Api20230201.IManagedClusterAgentPoolProfilePropertiesInternal)Property).CurrentOrchestratorVersion; }

        /// <summary>Whether to enable auto-scaler</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Aks.Origin(Microsoft.Azure.PowerShell.Cmdlets.Aks.PropertyOrigin.Inlined)]
        public bool? EnableAutoScaling { get => ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.Api20230201.IManagedClusterAgentPoolProfilePropertiesInternal)Property).EnableAutoScaling; set => ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.Api20230201.IManagedClusterAgentPoolProfilePropertiesInternal)Property).EnableAutoScaling = value ?? default(bool); }

        /// <summary>
        /// This is only supported on certain VM sizes and in certain Azure regions. For more information, see: https://docs.microsoft.com/azure/aks/enable-host-encryption
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Aks.Origin(Microsoft.Azure.PowerShell.Cmdlets.Aks.PropertyOrigin.Inlined)]
        public bool? EnableEncryptionAtHost { get => ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.Api20230201.IManagedClusterAgentPoolProfilePropertiesInternal)Property).EnableEncryptionAtHost; set => ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.Api20230201.IManagedClusterAgentPoolProfilePropertiesInternal)Property).EnableEncryptionAtHost = value ?? default(bool); }

        /// <summary>
        /// See [Add a FIPS-enabled node pool](https://docs.microsoft.com/azure/aks/use-multiple-node-pools#add-a-fips-enabled-node-pool-preview)
        /// for more details.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Aks.Origin(Microsoft.Azure.PowerShell.Cmdlets.Aks.PropertyOrigin.Inlined)]
        public bool? EnableFips { get => ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.Api20230201.IManagedClusterAgentPoolProfilePropertiesInternal)Property).EnableFips; set => ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.Api20230201.IManagedClusterAgentPoolProfilePropertiesInternal)Property).EnableFips = value ?? default(bool); }

        /// <summary>
        /// Some scenarios may require nodes in a node pool to receive their own dedicated public IP addresses. A common scenario
        /// is for gaming workloads, where a console needs to make a direct connection to a cloud virtual machine to minimize hops.
        /// For more information see [assigning a public IP per node](https://docs.microsoft.com/azure/aks/use-multiple-node-pools#assign-a-public-ip-per-node-for-your-node-pools).
        /// The default is false.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Aks.Origin(Microsoft.Azure.PowerShell.Cmdlets.Aks.PropertyOrigin.Inlined)]
        public bool? EnableNodePublicIP { get => ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.Api20230201.IManagedClusterAgentPoolProfilePropertiesInternal)Property).EnableNodePublicIP; set => ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.Api20230201.IManagedClusterAgentPoolProfilePropertiesInternal)Property).EnableNodePublicIP = value ?? default(bool); }

        /// <summary>Whether to enable UltraSSD</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Aks.Origin(Microsoft.Azure.PowerShell.Cmdlets.Aks.PropertyOrigin.Inlined)]
        public bool? EnableUltraSsd { get => ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.Api20230201.IManagedClusterAgentPoolProfilePropertiesInternal)Property).EnableUltraSsd; set => ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.Api20230201.IManagedClusterAgentPoolProfilePropertiesInternal)Property).EnableUltraSsd = value ?? default(bool); }

        /// <summary>
        /// GPUInstanceProfile to be used to specify GPU MIG instance profile for supported GPU VM SKU.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Aks.Origin(Microsoft.Azure.PowerShell.Cmdlets.Aks.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Aks.Support.GpuInstanceProfile? GpuInstanceProfile { get => ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.Api20230201.IManagedClusterAgentPoolProfilePropertiesInternal)Property).GpuInstanceProfile; set => ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.Api20230201.IManagedClusterAgentPoolProfilePropertiesInternal)Property).GpuInstanceProfile = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Support.GpuInstanceProfile)""); }

        /// <summary>
        /// This is of the form: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/hostGroups/{hostGroupName}.
        /// For more information see [Azure dedicated hosts](https://docs.microsoft.com/azure/virtual-machines/dedicated-hosts).
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Aks.Origin(Microsoft.Azure.PowerShell.Cmdlets.Aks.PropertyOrigin.Inlined)]
        public string HostGroupId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.Api20230201.IManagedClusterAgentPoolProfilePropertiesInternal)Property).HostGroupId; set => ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.Api20230201.IManagedClusterAgentPoolProfilePropertiesInternal)Property).HostGroupId = value ?? null; }

        /// <summary>Resource ID.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Aks.Origin(Microsoft.Azure.PowerShell.Cmdlets.Aks.PropertyOrigin.Inherited)]
        public string Id { get => ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.Api20230201.ISubResourceInternal)__subResource).Id; }

        /// <summary>Allowed list of unsafe sysctls or unsafe sysctl patterns (ending in `*`).</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Aks.Origin(Microsoft.Azure.PowerShell.Cmdlets.Aks.PropertyOrigin.Inlined)]
        public string[] KubeletConfigAllowedUnsafeSysctl { get => ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.Api20230201.IManagedClusterAgentPoolProfilePropertiesInternal)Property).KubeletConfigAllowedUnsafeSysctl; set => ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.Api20230201.IManagedClusterAgentPoolProfilePropertiesInternal)Property).KubeletConfigAllowedUnsafeSysctl = value ?? null /* arrayOf */; }

        /// <summary>
        /// The maximum number of container log files that can be present for a container. The number must be ≥ 2.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Aks.Origin(Microsoft.Azure.PowerShell.Cmdlets.Aks.PropertyOrigin.Inlined)]
        public int? KubeletConfigContainerLogMaxFile { get => ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.Api20230201.IManagedClusterAgentPoolProfilePropertiesInternal)Property).KubeletConfigContainerLogMaxFile; set => ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.Api20230201.IManagedClusterAgentPoolProfilePropertiesInternal)Property).KubeletConfigContainerLogMaxFile = value ?? default(int); }

        /// <summary>The maximum size (e.g. 10Mi) of container log file before it is rotated.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Aks.Origin(Microsoft.Azure.PowerShell.Cmdlets.Aks.PropertyOrigin.Inlined)]
        public int? KubeletConfigContainerLogMaxSizeMb { get => ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.Api20230201.IManagedClusterAgentPoolProfilePropertiesInternal)Property).KubeletConfigContainerLogMaxSizeMb; set => ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.Api20230201.IManagedClusterAgentPoolProfilePropertiesInternal)Property).KubeletConfigContainerLogMaxSizeMb = value ?? default(int); }

        /// <summary>The default is true.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Aks.Origin(Microsoft.Azure.PowerShell.Cmdlets.Aks.PropertyOrigin.Inlined)]
        public bool? KubeletConfigCpuCfsQuota { get => ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.Api20230201.IManagedClusterAgentPoolProfilePropertiesInternal)Property).KubeletConfigCpuCfsQuota; set => ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.Api20230201.IManagedClusterAgentPoolProfilePropertiesInternal)Property).KubeletConfigCpuCfsQuota = value ?? default(bool); }

        /// <summary>
        /// The default is '100ms.' Valid values are a sequence of decimal numbers with an optional fraction and a unit suffix. For
        /// example: '300ms', '2h45m'. Supported units are 'ns', 'us', 'ms', 's', 'm', and 'h'.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Aks.Origin(Microsoft.Azure.PowerShell.Cmdlets.Aks.PropertyOrigin.Inlined)]
        public string KubeletConfigCpuCfsQuotaPeriod { get => ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.Api20230201.IManagedClusterAgentPoolProfilePropertiesInternal)Property).KubeletConfigCpuCfsQuotaPeriod; set => ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.Api20230201.IManagedClusterAgentPoolProfilePropertiesInternal)Property).KubeletConfigCpuCfsQuotaPeriod = value ?? null; }

        /// <summary>
        /// The default is 'none'. See [Kubernetes CPU management policies](https://kubernetes.io/docs/tasks/administer-cluster/cpu-management-policies/#cpu-management-policies)
        /// for more information. Allowed values are 'none' and 'static'.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Aks.Origin(Microsoft.Azure.PowerShell.Cmdlets.Aks.PropertyOrigin.Inlined)]
        public string KubeletConfigCpuManagerPolicy { get => ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.Api20230201.IManagedClusterAgentPoolProfilePropertiesInternal)Property).KubeletConfigCpuManagerPolicy; set => ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.Api20230201.IManagedClusterAgentPoolProfilePropertiesInternal)Property).KubeletConfigCpuManagerPolicy = value ?? null; }

        /// <summary>
        /// If set to true it will make the Kubelet fail to start if swap is enabled on the node.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Aks.Origin(Microsoft.Azure.PowerShell.Cmdlets.Aks.PropertyOrigin.Inlined)]
        public bool? KubeletConfigFailSwapOn { get => ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.Api20230201.IManagedClusterAgentPoolProfilePropertiesInternal)Property).KubeletConfigFailSwapOn; set => ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.Api20230201.IManagedClusterAgentPoolProfilePropertiesInternal)Property).KubeletConfigFailSwapOn = value ?? default(bool); }

        /// <summary>To disable image garbage collection, set to 100. The default is 85%</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Aks.Origin(Microsoft.Azure.PowerShell.Cmdlets.Aks.PropertyOrigin.Inlined)]
        public int? KubeletConfigImageGcHighThreshold { get => ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.Api20230201.IManagedClusterAgentPoolProfilePropertiesInternal)Property).KubeletConfigImageGcHighThreshold; set => ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.Api20230201.IManagedClusterAgentPoolProfilePropertiesInternal)Property).KubeletConfigImageGcHighThreshold = value ?? default(int); }

        /// <summary>This cannot be set higher than imageGcHighThreshold. The default is 80%</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Aks.Origin(Microsoft.Azure.PowerShell.Cmdlets.Aks.PropertyOrigin.Inlined)]
        public int? KubeletConfigImageGcLowThreshold { get => ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.Api20230201.IManagedClusterAgentPoolProfilePropertiesInternal)Property).KubeletConfigImageGcLowThreshold; set => ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.Api20230201.IManagedClusterAgentPoolProfilePropertiesInternal)Property).KubeletConfigImageGcLowThreshold = value ?? default(int); }

        /// <summary>The maximum number of processes per pod.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Aks.Origin(Microsoft.Azure.PowerShell.Cmdlets.Aks.PropertyOrigin.Inlined)]
        public int? KubeletConfigPodMaxPid { get => ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.Api20230201.IManagedClusterAgentPoolProfilePropertiesInternal)Property).KubeletConfigPodMaxPid; set => ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.Api20230201.IManagedClusterAgentPoolProfilePropertiesInternal)Property).KubeletConfigPodMaxPid = value ?? default(int); }

        /// <summary>
        /// For more information see [Kubernetes Topology Manager](https://kubernetes.io/docs/tasks/administer-cluster/topology-manager).
        /// The default is 'none'. Allowed values are 'none', 'best-effort', 'restricted', and 'single-numa-node'.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Aks.Origin(Microsoft.Azure.PowerShell.Cmdlets.Aks.PropertyOrigin.Inlined)]
        public string KubeletConfigTopologyManagerPolicy { get => ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.Api20230201.IManagedClusterAgentPoolProfilePropertiesInternal)Property).KubeletConfigTopologyManagerPolicy; set => ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.Api20230201.IManagedClusterAgentPoolProfilePropertiesInternal)Property).KubeletConfigTopologyManagerPolicy = value ?? null; }

        /// <summary>
        /// Determines the placement of emptyDir volumes, container runtime data root, and Kubelet ephemeral storage.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Aks.Origin(Microsoft.Azure.PowerShell.Cmdlets.Aks.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Aks.Support.KubeletDiskType? KubeletDiskType { get => ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.Api20230201.IManagedClusterAgentPoolProfilePropertiesInternal)Property).KubeletDiskType; set => ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.Api20230201.IManagedClusterAgentPoolProfilePropertiesInternal)Property).KubeletDiskType = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Support.KubeletDiskType)""); }

        /// <summary>The size in MB of a swap file that will be created on each node.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Aks.Origin(Microsoft.Azure.PowerShell.Cmdlets.Aks.PropertyOrigin.Inlined)]
        public int? LinuxOSConfigSwapFileSizeMb { get => ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.Api20230201.IManagedClusterAgentPoolProfilePropertiesInternal)Property).LinuxOSConfigSwapFileSizeMb; set => ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.Api20230201.IManagedClusterAgentPoolProfilePropertiesInternal)Property).LinuxOSConfigSwapFileSizeMb = value ?? default(int); }

        /// <summary>Sysctl settings for Linux agent nodes.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Aks.Origin(Microsoft.Azure.PowerShell.Cmdlets.Aks.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.Api20230201.ISysctlConfig LinuxOSConfigSysctl { get => ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.Api20230201.IManagedClusterAgentPoolProfilePropertiesInternal)Property).LinuxOSConfigSysctl; set => ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.Api20230201.IManagedClusterAgentPoolProfilePropertiesInternal)Property).LinuxOSConfigSysctl = value ?? null /* model class */; }

        /// <summary>
        /// Valid values are 'always', 'defer', 'defer+madvise', 'madvise' and 'never'. The default is 'madvise'. For more information
        /// see [Transparent Hugepages](https://www.kernel.org/doc/html/latest/admin-guide/mm/transhuge.html#admin-guide-transhuge).
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Aks.Origin(Microsoft.Azure.PowerShell.Cmdlets.Aks.PropertyOrigin.Inlined)]
        public string LinuxOSConfigTransparentHugePageDefrag { get => ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.Api20230201.IManagedClusterAgentPoolProfilePropertiesInternal)Property).LinuxOSConfigTransparentHugePageDefrag; set => ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.Api20230201.IManagedClusterAgentPoolProfilePropertiesInternal)Property).LinuxOSConfigTransparentHugePageDefrag = value ?? null; }

        /// <summary>
        /// Valid values are 'always', 'madvise', and 'never'. The default is 'always'. For more information see [Transparent Hugepages](https://www.kernel.org/doc/html/latest/admin-guide/mm/transhuge.html#admin-guide-transhuge).
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Aks.Origin(Microsoft.Azure.PowerShell.Cmdlets.Aks.PropertyOrigin.Inlined)]
        public string LinuxOSConfigTransparentHugePageEnabled { get => ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.Api20230201.IManagedClusterAgentPoolProfilePropertiesInternal)Property).LinuxOSConfigTransparentHugePageEnabled; set => ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.Api20230201.IManagedClusterAgentPoolProfilePropertiesInternal)Property).LinuxOSConfigTransparentHugePageEnabled = value ?? null; }

        /// <summary>The maximum number of nodes for auto-scaling</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Aks.Origin(Microsoft.Azure.PowerShell.Cmdlets.Aks.PropertyOrigin.Inlined)]
        public int? MaxCount { get => ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.Api20230201.IManagedClusterAgentPoolProfilePropertiesInternal)Property).MaxCount; set => ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.Api20230201.IManagedClusterAgentPoolProfilePropertiesInternal)Property).MaxCount = value ?? default(int); }

        /// <summary>The maximum number of pods that can run on a node.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Aks.Origin(Microsoft.Azure.PowerShell.Cmdlets.Aks.PropertyOrigin.Inlined)]
        public int? MaxPod { get => ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.Api20230201.IManagedClusterAgentPoolProfilePropertiesInternal)Property).MaxPod; set => ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.Api20230201.IManagedClusterAgentPoolProfilePropertiesInternal)Property).MaxPod = value ?? default(int); }

        /// <summary>Internal Acessors for CreationData</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.Api20230201.ICreationData Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.Api20230201.IAgentPoolInternal.CreationData { get => ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.Api20230201.IManagedClusterAgentPoolProfilePropertiesInternal)Property).CreationData; set => ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.Api20230201.IManagedClusterAgentPoolProfilePropertiesInternal)Property).CreationData = value; }

        /// <summary>Internal Acessors for CurrentOrchestratorVersion</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.Api20230201.IAgentPoolInternal.CurrentOrchestratorVersion { get => ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.Api20230201.IManagedClusterAgentPoolProfilePropertiesInternal)Property).CurrentOrchestratorVersion; set => ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.Api20230201.IManagedClusterAgentPoolProfilePropertiesInternal)Property).CurrentOrchestratorVersion = value; }

        /// <summary>Internal Acessors for KubeletConfig</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.Api20230201.IKubeletConfig Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.Api20230201.IAgentPoolInternal.KubeletConfig { get => ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.Api20230201.IManagedClusterAgentPoolProfilePropertiesInternal)Property).KubeletConfig; set => ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.Api20230201.IManagedClusterAgentPoolProfilePropertiesInternal)Property).KubeletConfig = value; }

        /// <summary>Internal Acessors for LinuxOSConfig</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.Api20230201.ILinuxOSConfig Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.Api20230201.IAgentPoolInternal.LinuxOSConfig { get => ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.Api20230201.IManagedClusterAgentPoolProfilePropertiesInternal)Property).LinuxOSConfig; set => ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.Api20230201.IManagedClusterAgentPoolProfilePropertiesInternal)Property).LinuxOSConfig = value; }

        /// <summary>Internal Acessors for NodeImageVersion</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.Api20230201.IAgentPoolInternal.NodeImageVersion { get => ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.Api20230201.IManagedClusterAgentPoolProfilePropertiesInternal)Property).NodeImageVersion; set => ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.Api20230201.IManagedClusterAgentPoolProfilePropertiesInternal)Property).NodeImageVersion = value; }

        /// <summary>Internal Acessors for PowerState</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.Api20230201.IPowerState Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.Api20230201.IAgentPoolInternal.PowerState { get => ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.Api20230201.IManagedClusterAgentPoolProfilePropertiesInternal)Property).PowerState; set => ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.Api20230201.IManagedClusterAgentPoolProfilePropertiesInternal)Property).PowerState = value; }

        /// <summary>Internal Acessors for Property</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.Api20230201.IManagedClusterAgentPoolProfileProperties Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.Api20230201.IAgentPoolInternal.Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.Api20230201.ManagedClusterAgentPoolProfileProperties()); set { {_property = value;} } }

        /// <summary>Internal Acessors for ProvisioningState</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.Api20230201.IAgentPoolInternal.ProvisioningState { get => ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.Api20230201.IManagedClusterAgentPoolProfilePropertiesInternal)Property).ProvisioningState; set => ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.Api20230201.IManagedClusterAgentPoolProfilePropertiesInternal)Property).ProvisioningState = value; }

        /// <summary>Internal Acessors for UpgradeSetting</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.Api20230201.IAgentPoolUpgradeSettings Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.Api20230201.IAgentPoolInternal.UpgradeSetting { get => ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.Api20230201.IManagedClusterAgentPoolProfilePropertiesInternal)Property).UpgradeSetting; set => ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.Api20230201.IManagedClusterAgentPoolProfilePropertiesInternal)Property).UpgradeSetting = value; }

        /// <summary>Internal Acessors for Id</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.Api20230201.ISubResourceInternal.Id { get => ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.Api20230201.ISubResourceInternal)__subResource).Id; set => ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.Api20230201.ISubResourceInternal)__subResource).Id = value; }

        /// <summary>Internal Acessors for Name</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.Api20230201.ISubResourceInternal.Name { get => ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.Api20230201.ISubResourceInternal)__subResource).Name; set => ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.Api20230201.ISubResourceInternal)__subResource).Name = value; }

        /// <summary>Internal Acessors for Type</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.Api20230201.ISubResourceInternal.Type { get => ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.Api20230201.ISubResourceInternal)__subResource).Type; set => ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.Api20230201.ISubResourceInternal)__subResource).Type = value; }

        /// <summary>The minimum number of nodes for auto-scaling</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Aks.Origin(Microsoft.Azure.PowerShell.Cmdlets.Aks.PropertyOrigin.Inlined)]
        public int? MinCount { get => ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.Api20230201.IManagedClusterAgentPoolProfilePropertiesInternal)Property).MinCount; set => ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.Api20230201.IManagedClusterAgentPoolProfilePropertiesInternal)Property).MinCount = value ?? default(int); }

        /// <summary>
        /// A cluster must have at least one 'System' Agent Pool at all times. For additional information on agent pool restrictions
        /// and best practices, see: https://docs.microsoft.com/azure/aks/use-system-pools
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Aks.Origin(Microsoft.Azure.PowerShell.Cmdlets.Aks.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Aks.Support.AgentPoolMode? Mode { get => ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.Api20230201.IManagedClusterAgentPoolProfilePropertiesInternal)Property).Mode; set => ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.Api20230201.IManagedClusterAgentPoolProfilePropertiesInternal)Property).Mode = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Support.AgentPoolMode)""); }

        /// <summary>
        /// The name of the resource that is unique within a resource group. This name can be used to access the resource.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Aks.Origin(Microsoft.Azure.PowerShell.Cmdlets.Aks.PropertyOrigin.Inherited)]
        public string Name { get => ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.Api20230201.ISubResourceInternal)__subResource).Name; }

        /// <summary>The version of node image</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Aks.Origin(Microsoft.Azure.PowerShell.Cmdlets.Aks.PropertyOrigin.Inlined)]
        public string NodeImageVersion { get => ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.Api20230201.IManagedClusterAgentPoolProfilePropertiesInternal)Property).NodeImageVersion; }

        /// <summary>The node labels to be persisted across all nodes in agent pool.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Aks.Origin(Microsoft.Azure.PowerShell.Cmdlets.Aks.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.Api20230201.IManagedClusterAgentPoolProfilePropertiesNodeLabels NodeLabel { get => ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.Api20230201.IManagedClusterAgentPoolProfilePropertiesInternal)Property).NodeLabel; set => ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.Api20230201.IManagedClusterAgentPoolProfilePropertiesInternal)Property).NodeLabel = value ?? null /* model class */; }

        /// <summary>
        /// This is of the form: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/publicIPPrefixes/{publicIPPrefixName}
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Aks.Origin(Microsoft.Azure.PowerShell.Cmdlets.Aks.PropertyOrigin.Inlined)]
        public string NodePublicIPPrefixId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.Api20230201.IManagedClusterAgentPoolProfilePropertiesInternal)Property).NodePublicIPPrefixId; set => ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.Api20230201.IManagedClusterAgentPoolProfilePropertiesInternal)Property).NodePublicIPPrefixId = value ?? null; }

        /// <summary>
        /// The taints added to new nodes during node pool create and scale. For example, key=value:NoSchedule.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Aks.Origin(Microsoft.Azure.PowerShell.Cmdlets.Aks.PropertyOrigin.Inlined)]
        public string[] NodeTaint { get => ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.Api20230201.IManagedClusterAgentPoolProfilePropertiesInternal)Property).NodeTaint; set => ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.Api20230201.IManagedClusterAgentPoolProfilePropertiesInternal)Property).NodeTaint = value ?? null /* arrayOf */; }

        /// <summary>
        /// OS Disk Size in GB to be used to specify the disk size for every machine in the master/agent pool. If you specify 0, it
        /// will apply the default osDisk size according to the vmSize specified.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Aks.Origin(Microsoft.Azure.PowerShell.Cmdlets.Aks.PropertyOrigin.Inlined)]
        public int? OSDiskSizeGb { get => ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.Api20230201.IManagedClusterAgentPoolProfilePropertiesInternal)Property).OSDiskSizeGb; set => ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.Api20230201.IManagedClusterAgentPoolProfilePropertiesInternal)Property).OSDiskSizeGb = value ?? default(int); }

        /// <summary>
        /// The default is 'Ephemeral' if the VM supports it and has a cache disk larger than the requested OSDiskSizeGB. Otherwise,
        /// defaults to 'Managed'. May not be changed after creation. For more information see [Ephemeral OS](https://docs.microsoft.com/azure/aks/cluster-configuration#ephemeral-os).
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Aks.Origin(Microsoft.Azure.PowerShell.Cmdlets.Aks.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Aks.Support.OSDiskType? OSDiskType { get => ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.Api20230201.IManagedClusterAgentPoolProfilePropertiesInternal)Property).OSDiskType; set => ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.Api20230201.IManagedClusterAgentPoolProfilePropertiesInternal)Property).OSDiskType = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Support.OSDiskType)""); }

        /// <summary>
        /// Specifies the OS SKU used by the agent pool. The default is Ubuntu if OSType is Linux. The default is Windows2019 when
        /// Kubernetes <= 1.24 or Windows2022 when Kubernetes >= 1.25 if OSType is Windows.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Aks.Origin(Microsoft.Azure.PowerShell.Cmdlets.Aks.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Aks.Support.Ossku? OSSku { get => ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.Api20230201.IManagedClusterAgentPoolProfilePropertiesInternal)Property).OSSku; set => ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.Api20230201.IManagedClusterAgentPoolProfilePropertiesInternal)Property).OSSku = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Support.Ossku)""); }

        /// <summary>The operating system type. The default is Linux.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Aks.Origin(Microsoft.Azure.PowerShell.Cmdlets.Aks.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Aks.Support.OSType? OSType { get => ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.Api20230201.IManagedClusterAgentPoolProfilePropertiesInternal)Property).OSType; set => ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.Api20230201.IManagedClusterAgentPoolProfilePropertiesInternal)Property).OSType = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Support.OSType)""); }

        /// <summary>
        /// Both patch version <major.minor.patch> (e.g. 1.20.13) and <major.minor> (e.g. 1.20) are supported. When <major.minor>
        /// is specified, the latest supported GA patch version is chosen automatically. Updating the cluster with the same <major.minor>
        /// once it has been created (e.g. 1.14.x -> 1.14) will not trigger an upgrade, even if a newer patch version is available.
        /// As a best practice, you should upgrade all node pools in an AKS cluster to the same Kubernetes version. The node pool
        /// version must have the same major version as the control plane. The node pool minor version must be within two minor versions
        /// of the control plane version. The node pool version cannot be greater than the control plane version. For more information
        /// see [upgrading a node pool](https://docs.microsoft.com/azure/aks/use-multiple-node-pools#upgrade-a-node-pool).
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Aks.Origin(Microsoft.Azure.PowerShell.Cmdlets.Aks.PropertyOrigin.Inlined)]
        public string OrchestratorVersion { get => ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.Api20230201.IManagedClusterAgentPoolProfilePropertiesInternal)Property).OrchestratorVersion; set => ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.Api20230201.IManagedClusterAgentPoolProfilePropertiesInternal)Property).OrchestratorVersion = value ?? null; }

        /// <summary>
        /// If omitted, pod IPs are statically assigned on the node subnet (see vnetSubnetID for more details). This is of the form:
        /// /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworks/{virtualNetworkName}/subnets/{subnetName}
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Aks.Origin(Microsoft.Azure.PowerShell.Cmdlets.Aks.PropertyOrigin.Inlined)]
        public string PodSubnetId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.Api20230201.IManagedClusterAgentPoolProfilePropertiesInternal)Property).PodSubnetId; set => ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.Api20230201.IManagedClusterAgentPoolProfilePropertiesInternal)Property).PodSubnetId = value ?? null; }

        /// <summary>Tells whether the cluster is Running or Stopped</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Aks.Origin(Microsoft.Azure.PowerShell.Cmdlets.Aks.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Aks.Support.Code? PowerStateCode { get => ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.Api20230201.IManagedClusterAgentPoolProfilePropertiesInternal)Property).PowerStateCode; set => ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.Api20230201.IManagedClusterAgentPoolProfilePropertiesInternal)Property).PowerStateCode = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Support.Code)""); }

        /// <summary>The type of Agent Pool.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Aks.Origin(Microsoft.Azure.PowerShell.Cmdlets.Aks.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Aks.Support.AgentPoolType? PropertiesType { get => ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.Api20230201.IManagedClusterAgentPoolProfilePropertiesInternal)Property).Type; set => ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.Api20230201.IManagedClusterAgentPoolProfilePropertiesInternal)Property).Type = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Support.AgentPoolType)""); }

        /// <summary>Backing field for <see cref="Property" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.Api20230201.IManagedClusterAgentPoolProfileProperties _property;

        /// <summary>Properties of an agent pool.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Aks.Origin(Microsoft.Azure.PowerShell.Cmdlets.Aks.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.Api20230201.IManagedClusterAgentPoolProfileProperties Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.Api20230201.ManagedClusterAgentPoolProfileProperties()); set => this._property = value; }

        /// <summary>The current deployment or provisioning state.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Aks.Origin(Microsoft.Azure.PowerShell.Cmdlets.Aks.PropertyOrigin.Inlined)]
        public string ProvisioningState { get => ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.Api20230201.IManagedClusterAgentPoolProfilePropertiesInternal)Property).ProvisioningState; }

        /// <summary>The ID for Proximity Placement Group.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Aks.Origin(Microsoft.Azure.PowerShell.Cmdlets.Aks.PropertyOrigin.Inlined)]
        public string ProximityPlacementGroupId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.Api20230201.IManagedClusterAgentPoolProfilePropertiesInternal)Property).ProximityPlacementGroupId; set => ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.Api20230201.IManagedClusterAgentPoolProfilePropertiesInternal)Property).ProximityPlacementGroupId = value ?? null; }

        /// <summary>
        /// This also effects the cluster autoscaler behavior. If not specified, it defaults to Delete.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Aks.Origin(Microsoft.Azure.PowerShell.Cmdlets.Aks.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Aks.Support.ScaleDownMode? ScaleDownMode { get => ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.Api20230201.IManagedClusterAgentPoolProfilePropertiesInternal)Property).ScaleDownMode; set => ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.Api20230201.IManagedClusterAgentPoolProfilePropertiesInternal)Property).ScaleDownMode = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Support.ScaleDownMode)""); }

        /// <summary>
        /// This cannot be specified unless the scaleSetPriority is 'Spot'. If not specified, the default is 'Delete'.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Aks.Origin(Microsoft.Azure.PowerShell.Cmdlets.Aks.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Aks.Support.ScaleSetEvictionPolicy? ScaleSetEvictionPolicy { get => ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.Api20230201.IManagedClusterAgentPoolProfilePropertiesInternal)Property).ScaleSetEvictionPolicy; set => ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.Api20230201.IManagedClusterAgentPoolProfilePropertiesInternal)Property).ScaleSetEvictionPolicy = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Support.ScaleSetEvictionPolicy)""); }

        /// <summary>
        /// The Virtual Machine Scale Set priority. If not specified, the default is 'Regular'.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Aks.Origin(Microsoft.Azure.PowerShell.Cmdlets.Aks.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Aks.Support.ScaleSetPriority? ScaleSetPriority { get => ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.Api20230201.IManagedClusterAgentPoolProfilePropertiesInternal)Property).ScaleSetPriority; set => ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.Api20230201.IManagedClusterAgentPoolProfilePropertiesInternal)Property).ScaleSetPriority = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Support.ScaleSetPriority)""); }

        /// <summary>
        /// Possible values are any decimal value greater than zero or -1 which indicates the willingness to pay any on-demand price.
        /// For more details on spot pricing, see [spot VMs pricing](https://docs.microsoft.com/azure/virtual-machines/spot-vms#pricing)
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Aks.Origin(Microsoft.Azure.PowerShell.Cmdlets.Aks.PropertyOrigin.Inlined)]
        public float? SpotMaxPrice { get => ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.Api20230201.IManagedClusterAgentPoolProfilePropertiesInternal)Property).SpotMaxPrice; set => ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.Api20230201.IManagedClusterAgentPoolProfilePropertiesInternal)Property).SpotMaxPrice = value ?? default(float); }

        /// <summary>The tags to be persisted on the agent pool virtual machine scale set.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Aks.Origin(Microsoft.Azure.PowerShell.Cmdlets.Aks.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.Api20230201.IManagedClusterAgentPoolProfilePropertiesTags Tag { get => ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.Api20230201.IManagedClusterAgentPoolProfilePropertiesInternal)Property).Tag; set => ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.Api20230201.IManagedClusterAgentPoolProfilePropertiesInternal)Property).Tag = value ?? null /* model class */; }

        /// <summary>Resource type</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Aks.Origin(Microsoft.Azure.PowerShell.Cmdlets.Aks.PropertyOrigin.Inherited)]
        public string Type { get => ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.Api20230201.ISubResourceInternal)__subResource).Type; }

        /// <summary>
        /// This can either be set to an integer (e.g. '5') or a percentage (e.g. '50%'). If a percentage is specified, it is the
        /// percentage of the total agent pool size at the time of the upgrade. For percentages, fractional nodes are rounded up.
        /// If not specified, the default is 1. For more information, including best practices, see: https://docs.microsoft.com/azure/aks/upgrade-cluster#customize-node-surge-upgrade
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Aks.Origin(Microsoft.Azure.PowerShell.Cmdlets.Aks.PropertyOrigin.Inlined)]
        public string UpgradeSettingMaxSurge { get => ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.Api20230201.IManagedClusterAgentPoolProfilePropertiesInternal)Property).UpgradeSettingMaxSurge; set => ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.Api20230201.IManagedClusterAgentPoolProfilePropertiesInternal)Property).UpgradeSettingMaxSurge = value ?? null; }

        /// <summary>
        /// VM size availability varies by region. If a node contains insufficient compute resources (memory, cpu, etc) pods might
        /// fail to run correctly. For more details on restricted VM sizes, see: https://docs.microsoft.com/azure/aks/quotas-skus-regions
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Aks.Origin(Microsoft.Azure.PowerShell.Cmdlets.Aks.PropertyOrigin.Inlined)]
        public string VMSize { get => ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.Api20230201.IManagedClusterAgentPoolProfilePropertiesInternal)Property).VMSize; set => ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.Api20230201.IManagedClusterAgentPoolProfilePropertiesInternal)Property).VMSize = value ?? null; }

        /// <summary>
        /// If this is not specified, a VNET and subnet will be generated and used. If no podSubnetID is specified, this applies to
        /// nodes and pods, otherwise it applies to just nodes. This is of the form: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworks/{virtualNetworkName}/subnets/{subnetName}
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Aks.Origin(Microsoft.Azure.PowerShell.Cmdlets.Aks.PropertyOrigin.Inlined)]
        public string VnetSubnetId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.Api20230201.IManagedClusterAgentPoolProfilePropertiesInternal)Property).VnetSubnetId; set => ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.Api20230201.IManagedClusterAgentPoolProfilePropertiesInternal)Property).VnetSubnetId = value ?? null; }

        /// <summary>Determines the type of workload a node can run.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Aks.Origin(Microsoft.Azure.PowerShell.Cmdlets.Aks.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Aks.Support.WorkloadRuntime? WorkloadRuntime { get => ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.Api20230201.IManagedClusterAgentPoolProfilePropertiesInternal)Property).WorkloadRuntime; set => ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.Api20230201.IManagedClusterAgentPoolProfilePropertiesInternal)Property).WorkloadRuntime = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Support.WorkloadRuntime)""); }

        /// <summary>Creates an new <see cref="AgentPool" /> instance.</summary>
        public AgentPool()
        {

        }

        /// <param name="headers"></param>
        void Microsoft.Azure.PowerShell.Cmdlets.Aks.Runtime.IHeaderSerializable.ReadHeaders(global::System.Net.Http.Headers.HttpResponseHeaders headers)
        {
            if (headers.TryGetValues("Azure-AsyncOperation", out var __azureAsyncOperationHeader0))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.Api20230201.IAgentPoolInternal)this).AzureAsyncOperation = System.Linq.Enumerable.FirstOrDefault(__azureAsyncOperationHeader0) is string __headerAzureAsyncOperationHeader0 ? __headerAzureAsyncOperationHeader0 : (string)null;
            }
        }

        /// <summary>Validates that this object meets the validation criteria.</summary>
        /// <param name="eventListener">an <see cref="Microsoft.Azure.PowerShell.Cmdlets.Aks.Runtime.IEventListener" /> instance that will receive validation
        /// events.</param>
        /// <returns>
        /// A <see cref = "global::System.Threading.Tasks.Task" /> that will be complete when validation is completed.
        /// </returns>
        public async global::System.Threading.Tasks.Task Validate(Microsoft.Azure.PowerShell.Cmdlets.Aks.Runtime.IEventListener eventListener)
        {
            await eventListener.AssertNotNull(nameof(__subResource), __subResource);
            await eventListener.AssertObjectIsValid(nameof(__subResource), __subResource);
        }
    }
    /// Agent Pool.
    public partial interface IAgentPool :
        Microsoft.Azure.PowerShell.Cmdlets.Aks.Runtime.IJsonSerializable,
        Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.Api20230201.ISubResource
    {
        /// <summary>
        /// The list of Availability zones to use for nodes. This can only be specified if the AgentPoolType property is 'VirtualMachineScaleSets'.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Aks.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The list of Availability zones to use for nodes. This can only be specified if the AgentPoolType property is 'VirtualMachineScaleSets'.",
        SerializedName = @"availabilityZones",
        PossibleTypes = new [] { typeof(string) })]
        string[] AvailabilityZone { get; set; }

        [Microsoft.Azure.PowerShell.Cmdlets.Aks.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"",
        SerializedName = @"Azure-AsyncOperation",
        PossibleTypes = new [] { typeof(string) })]
        string AzureAsyncOperation { get; set; }
        /// <summary>
        /// Number of agents (VMs) to host docker containers. Allowed values must be in the range of 0 to 1000 (inclusive) for user
        /// pools and in the range of 1 to 1000 (inclusive) for system pools. The default value is 1.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Aks.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Number of agents (VMs) to host docker containers. Allowed values must be in the range of 0 to 1000 (inclusive) for user pools and in the range of 1 to 1000 (inclusive) for system pools. The default value is 1.",
        SerializedName = @"count",
        PossibleTypes = new [] { typeof(int) })]
        int? Count { get; set; }
        /// <summary>This is the ARM ID of the source object to be used to create the target object.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Aks.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"This is the ARM ID of the source object to be used to create the target object.",
        SerializedName = @"sourceResourceId",
        PossibleTypes = new [] { typeof(string) })]
        string CreationDataSourceResourceId { get; set; }
        /// <summary>
        /// If orchestratorVersion is a fully specified version <major.minor.patch>, this field will be exactly equal to it. If orchestratorVersion
        /// is <major.minor>, this field will contain the full <major.minor.patch> version being used.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Aks.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"If orchestratorVersion is a fully specified version <major.minor.patch>, this field will be exactly equal to it. If orchestratorVersion is <major.minor>, this field will contain the full <major.minor.patch> version being used.",
        SerializedName = @"currentOrchestratorVersion",
        PossibleTypes = new [] { typeof(string) })]
        string CurrentOrchestratorVersion { get;  }
        /// <summary>Whether to enable auto-scaler</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Aks.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Whether to enable auto-scaler",
        SerializedName = @"enableAutoScaling",
        PossibleTypes = new [] { typeof(bool) })]
        bool? EnableAutoScaling { get; set; }
        /// <summary>
        /// This is only supported on certain VM sizes and in certain Azure regions. For more information, see: https://docs.microsoft.com/azure/aks/enable-host-encryption
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Aks.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"This is only supported on certain VM sizes and in certain Azure regions. For more information, see: https://docs.microsoft.com/azure/aks/enable-host-encryption",
        SerializedName = @"enableEncryptionAtHost",
        PossibleTypes = new [] { typeof(bool) })]
        bool? EnableEncryptionAtHost { get; set; }
        /// <summary>
        /// See [Add a FIPS-enabled node pool](https://docs.microsoft.com/azure/aks/use-multiple-node-pools#add-a-fips-enabled-node-pool-preview)
        /// for more details.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Aks.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"See [Add a FIPS-enabled node pool](https://docs.microsoft.com/azure/aks/use-multiple-node-pools#add-a-fips-enabled-node-pool-preview) for more details.",
        SerializedName = @"enableFIPS",
        PossibleTypes = new [] { typeof(bool) })]
        bool? EnableFips { get; set; }
        /// <summary>
        /// Some scenarios may require nodes in a node pool to receive their own dedicated public IP addresses. A common scenario
        /// is for gaming workloads, where a console needs to make a direct connection to a cloud virtual machine to minimize hops.
        /// For more information see [assigning a public IP per node](https://docs.microsoft.com/azure/aks/use-multiple-node-pools#assign-a-public-ip-per-node-for-your-node-pools).
        /// The default is false.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Aks.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Some scenarios may require nodes in a node pool to receive their own dedicated public IP addresses. A common scenario is for gaming workloads, where a console needs to make a direct connection to a cloud virtual machine to minimize hops. For more information see [assigning a public IP per node](https://docs.microsoft.com/azure/aks/use-multiple-node-pools#assign-a-public-ip-per-node-for-your-node-pools). The default is false.",
        SerializedName = @"enableNodePublicIP",
        PossibleTypes = new [] { typeof(bool) })]
        bool? EnableNodePublicIP { get; set; }
        /// <summary>Whether to enable UltraSSD</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Aks.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Whether to enable UltraSSD",
        SerializedName = @"enableUltraSSD",
        PossibleTypes = new [] { typeof(bool) })]
        bool? EnableUltraSsd { get; set; }
        /// <summary>
        /// GPUInstanceProfile to be used to specify GPU MIG instance profile for supported GPU VM SKU.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Aks.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"GPUInstanceProfile to be used to specify GPU MIG instance profile for supported GPU VM SKU.",
        SerializedName = @"gpuInstanceProfile",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Aks.Support.GpuInstanceProfile) })]
        Microsoft.Azure.PowerShell.Cmdlets.Aks.Support.GpuInstanceProfile? GpuInstanceProfile { get; set; }
        /// <summary>
        /// This is of the form: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/hostGroups/{hostGroupName}.
        /// For more information see [Azure dedicated hosts](https://docs.microsoft.com/azure/virtual-machines/dedicated-hosts).
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Aks.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"This is of the form: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/hostGroups/{hostGroupName}. For more information see [Azure dedicated hosts](https://docs.microsoft.com/azure/virtual-machines/dedicated-hosts).",
        SerializedName = @"hostGroupID",
        PossibleTypes = new [] { typeof(string) })]
        string HostGroupId { get; set; }
        /// <summary>Allowed list of unsafe sysctls or unsafe sysctl patterns (ending in `*`).</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Aks.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Allowed list of unsafe sysctls or unsafe sysctl patterns (ending in `*`).",
        SerializedName = @"allowedUnsafeSysctls",
        PossibleTypes = new [] { typeof(string) })]
        string[] KubeletConfigAllowedUnsafeSysctl { get; set; }
        /// <summary>
        /// The maximum number of container log files that can be present for a container. The number must be ≥ 2.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Aks.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The maximum number of container log files that can be present for a container. The number must be ≥ 2.",
        SerializedName = @"containerLogMaxFiles",
        PossibleTypes = new [] { typeof(int) })]
        int? KubeletConfigContainerLogMaxFile { get; set; }
        /// <summary>The maximum size (e.g. 10Mi) of container log file before it is rotated.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Aks.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The maximum size (e.g. 10Mi) of container log file before it is rotated.",
        SerializedName = @"containerLogMaxSizeMB",
        PossibleTypes = new [] { typeof(int) })]
        int? KubeletConfigContainerLogMaxSizeMb { get; set; }
        /// <summary>The default is true.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Aks.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The default is true.",
        SerializedName = @"cpuCfsQuota",
        PossibleTypes = new [] { typeof(bool) })]
        bool? KubeletConfigCpuCfsQuota { get; set; }
        /// <summary>
        /// The default is '100ms.' Valid values are a sequence of decimal numbers with an optional fraction and a unit suffix. For
        /// example: '300ms', '2h45m'. Supported units are 'ns', 'us', 'ms', 's', 'm', and 'h'.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Aks.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The default is '100ms.' Valid values are a sequence of decimal numbers with an optional fraction and a unit suffix. For example: '300ms', '2h45m'. Supported units are 'ns', 'us', 'ms', 's', 'm', and 'h'.",
        SerializedName = @"cpuCfsQuotaPeriod",
        PossibleTypes = new [] { typeof(string) })]
        string KubeletConfigCpuCfsQuotaPeriod { get; set; }
        /// <summary>
        /// The default is 'none'. See [Kubernetes CPU management policies](https://kubernetes.io/docs/tasks/administer-cluster/cpu-management-policies/#cpu-management-policies)
        /// for more information. Allowed values are 'none' and 'static'.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Aks.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The default is 'none'. See [Kubernetes CPU management policies](https://kubernetes.io/docs/tasks/administer-cluster/cpu-management-policies/#cpu-management-policies) for more information. Allowed values are 'none' and 'static'.",
        SerializedName = @"cpuManagerPolicy",
        PossibleTypes = new [] { typeof(string) })]
        string KubeletConfigCpuManagerPolicy { get; set; }
        /// <summary>
        /// If set to true it will make the Kubelet fail to start if swap is enabled on the node.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Aks.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"If set to true it will make the Kubelet fail to start if swap is enabled on the node.",
        SerializedName = @"failSwapOn",
        PossibleTypes = new [] { typeof(bool) })]
        bool? KubeletConfigFailSwapOn { get; set; }
        /// <summary>To disable image garbage collection, set to 100. The default is 85%</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Aks.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"To disable image garbage collection, set to 100. The default is 85%",
        SerializedName = @"imageGcHighThreshold",
        PossibleTypes = new [] { typeof(int) })]
        int? KubeletConfigImageGcHighThreshold { get; set; }
        /// <summary>This cannot be set higher than imageGcHighThreshold. The default is 80%</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Aks.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"This cannot be set higher than imageGcHighThreshold. The default is 80%",
        SerializedName = @"imageGcLowThreshold",
        PossibleTypes = new [] { typeof(int) })]
        int? KubeletConfigImageGcLowThreshold { get; set; }
        /// <summary>The maximum number of processes per pod.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Aks.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The maximum number of processes per pod.",
        SerializedName = @"podMaxPids",
        PossibleTypes = new [] { typeof(int) })]
        int? KubeletConfigPodMaxPid { get; set; }
        /// <summary>
        /// For more information see [Kubernetes Topology Manager](https://kubernetes.io/docs/tasks/administer-cluster/topology-manager).
        /// The default is 'none'. Allowed values are 'none', 'best-effort', 'restricted', and 'single-numa-node'.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Aks.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"For more information see [Kubernetes Topology Manager](https://kubernetes.io/docs/tasks/administer-cluster/topology-manager). The default is 'none'. Allowed values are 'none', 'best-effort', 'restricted', and 'single-numa-node'.",
        SerializedName = @"topologyManagerPolicy",
        PossibleTypes = new [] { typeof(string) })]
        string KubeletConfigTopologyManagerPolicy { get; set; }
        /// <summary>
        /// Determines the placement of emptyDir volumes, container runtime data root, and Kubelet ephemeral storage.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Aks.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Determines the placement of emptyDir volumes, container runtime data root, and Kubelet ephemeral storage.",
        SerializedName = @"kubeletDiskType",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Aks.Support.KubeletDiskType) })]
        Microsoft.Azure.PowerShell.Cmdlets.Aks.Support.KubeletDiskType? KubeletDiskType { get; set; }
        /// <summary>The size in MB of a swap file that will be created on each node.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Aks.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The size in MB of a swap file that will be created on each node.",
        SerializedName = @"swapFileSizeMB",
        PossibleTypes = new [] { typeof(int) })]
        int? LinuxOSConfigSwapFileSizeMb { get; set; }
        /// <summary>Sysctl settings for Linux agent nodes.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Aks.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Sysctl settings for Linux agent nodes.",
        SerializedName = @"sysctls",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.Api20230201.ISysctlConfig) })]
        Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.Api20230201.ISysctlConfig LinuxOSConfigSysctl { get; set; }
        /// <summary>
        /// Valid values are 'always', 'defer', 'defer+madvise', 'madvise' and 'never'. The default is 'madvise'. For more information
        /// see [Transparent Hugepages](https://www.kernel.org/doc/html/latest/admin-guide/mm/transhuge.html#admin-guide-transhuge).
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Aks.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Valid values are 'always', 'defer', 'defer+madvise', 'madvise' and 'never'. The default is 'madvise'. For more information see [Transparent Hugepages](https://www.kernel.org/doc/html/latest/admin-guide/mm/transhuge.html#admin-guide-transhuge).",
        SerializedName = @"transparentHugePageDefrag",
        PossibleTypes = new [] { typeof(string) })]
        string LinuxOSConfigTransparentHugePageDefrag { get; set; }
        /// <summary>
        /// Valid values are 'always', 'madvise', and 'never'. The default is 'always'. For more information see [Transparent Hugepages](https://www.kernel.org/doc/html/latest/admin-guide/mm/transhuge.html#admin-guide-transhuge).
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Aks.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Valid values are 'always', 'madvise', and 'never'. The default is 'always'. For more information see [Transparent Hugepages](https://www.kernel.org/doc/html/latest/admin-guide/mm/transhuge.html#admin-guide-transhuge).",
        SerializedName = @"transparentHugePageEnabled",
        PossibleTypes = new [] { typeof(string) })]
        string LinuxOSConfigTransparentHugePageEnabled { get; set; }
        /// <summary>The maximum number of nodes for auto-scaling</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Aks.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The maximum number of nodes for auto-scaling",
        SerializedName = @"maxCount",
        PossibleTypes = new [] { typeof(int) })]
        int? MaxCount { get; set; }
        /// <summary>The maximum number of pods that can run on a node.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Aks.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The maximum number of pods that can run on a node.",
        SerializedName = @"maxPods",
        PossibleTypes = new [] { typeof(int) })]
        int? MaxPod { get; set; }
        /// <summary>The minimum number of nodes for auto-scaling</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Aks.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The minimum number of nodes for auto-scaling",
        SerializedName = @"minCount",
        PossibleTypes = new [] { typeof(int) })]
        int? MinCount { get; set; }
        /// <summary>
        /// A cluster must have at least one 'System' Agent Pool at all times. For additional information on agent pool restrictions
        /// and best practices, see: https://docs.microsoft.com/azure/aks/use-system-pools
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Aks.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"A cluster must have at least one 'System' Agent Pool at all times. For additional information on agent pool restrictions and best practices, see: https://docs.microsoft.com/azure/aks/use-system-pools",
        SerializedName = @"mode",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Aks.Support.AgentPoolMode) })]
        Microsoft.Azure.PowerShell.Cmdlets.Aks.Support.AgentPoolMode? Mode { get; set; }
        /// <summary>The version of node image</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Aks.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The version of node image",
        SerializedName = @"nodeImageVersion",
        PossibleTypes = new [] { typeof(string) })]
        string NodeImageVersion { get;  }
        /// <summary>The node labels to be persisted across all nodes in agent pool.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Aks.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The node labels to be persisted across all nodes in agent pool.",
        SerializedName = @"nodeLabels",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.Api20230201.IManagedClusterAgentPoolProfilePropertiesNodeLabels) })]
        Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.Api20230201.IManagedClusterAgentPoolProfilePropertiesNodeLabels NodeLabel { get; set; }
        /// <summary>
        /// This is of the form: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/publicIPPrefixes/{publicIPPrefixName}
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Aks.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"This is of the form: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/publicIPPrefixes/{publicIPPrefixName}",
        SerializedName = @"nodePublicIPPrefixID",
        PossibleTypes = new [] { typeof(string) })]
        string NodePublicIPPrefixId { get; set; }
        /// <summary>
        /// The taints added to new nodes during node pool create and scale. For example, key=value:NoSchedule.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Aks.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The taints added to new nodes during node pool create and scale. For example, key=value:NoSchedule.",
        SerializedName = @"nodeTaints",
        PossibleTypes = new [] { typeof(string) })]
        string[] NodeTaint { get; set; }
        /// <summary>
        /// OS Disk Size in GB to be used to specify the disk size for every machine in the master/agent pool. If you specify 0, it
        /// will apply the default osDisk size according to the vmSize specified.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Aks.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"OS Disk Size in GB to be used to specify the disk size for every machine in the master/agent pool. If you specify 0, it will apply the default osDisk size according to the vmSize specified.",
        SerializedName = @"osDiskSizeGB",
        PossibleTypes = new [] { typeof(int) })]
        int? OSDiskSizeGb { get; set; }
        /// <summary>
        /// The default is 'Ephemeral' if the VM supports it and has a cache disk larger than the requested OSDiskSizeGB. Otherwise,
        /// defaults to 'Managed'. May not be changed after creation. For more information see [Ephemeral OS](https://docs.microsoft.com/azure/aks/cluster-configuration#ephemeral-os).
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Aks.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The default is 'Ephemeral' if the VM supports it and has a cache disk larger than the requested OSDiskSizeGB. Otherwise, defaults to 'Managed'. May not be changed after creation. For more information see [Ephemeral OS](https://docs.microsoft.com/azure/aks/cluster-configuration#ephemeral-os).",
        SerializedName = @"osDiskType",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Aks.Support.OSDiskType) })]
        Microsoft.Azure.PowerShell.Cmdlets.Aks.Support.OSDiskType? OSDiskType { get; set; }
        /// <summary>
        /// Specifies the OS SKU used by the agent pool. The default is Ubuntu if OSType is Linux. The default is Windows2019 when
        /// Kubernetes <= 1.24 or Windows2022 when Kubernetes >= 1.25 if OSType is Windows.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Aks.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Specifies the OS SKU used by the agent pool. The default is Ubuntu if OSType is Linux. The default is Windows2019 when Kubernetes <= 1.24 or Windows2022 when Kubernetes >= 1.25 if OSType is Windows.",
        SerializedName = @"osSKU",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Aks.Support.Ossku) })]
        Microsoft.Azure.PowerShell.Cmdlets.Aks.Support.Ossku? OSSku { get; set; }
        /// <summary>The operating system type. The default is Linux.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Aks.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The operating system type. The default is Linux.",
        SerializedName = @"osType",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Aks.Support.OSType) })]
        Microsoft.Azure.PowerShell.Cmdlets.Aks.Support.OSType? OSType { get; set; }
        /// <summary>
        /// Both patch version <major.minor.patch> (e.g. 1.20.13) and <major.minor> (e.g. 1.20) are supported. When <major.minor>
        /// is specified, the latest supported GA patch version is chosen automatically. Updating the cluster with the same <major.minor>
        /// once it has been created (e.g. 1.14.x -> 1.14) will not trigger an upgrade, even if a newer patch version is available.
        /// As a best practice, you should upgrade all node pools in an AKS cluster to the same Kubernetes version. The node pool
        /// version must have the same major version as the control plane. The node pool minor version must be within two minor versions
        /// of the control plane version. The node pool version cannot be greater than the control plane version. For more information
        /// see [upgrading a node pool](https://docs.microsoft.com/azure/aks/use-multiple-node-pools#upgrade-a-node-pool).
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Aks.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Both patch version <major.minor.patch> (e.g. 1.20.13) and <major.minor> (e.g. 1.20) are supported. When <major.minor> is specified, the latest supported GA patch version is chosen automatically. Updating the cluster with the same <major.minor> once it has been created (e.g. 1.14.x -> 1.14) will not trigger an upgrade, even if a newer patch version is available. As a best practice, you should upgrade all node pools in an AKS cluster to the same Kubernetes version. The node pool version must have the same major version as the control plane. The node pool minor version must be within two minor versions of the control plane version. The node pool version cannot be greater than the control plane version. For more information see [upgrading a node pool](https://docs.microsoft.com/azure/aks/use-multiple-node-pools#upgrade-a-node-pool).",
        SerializedName = @"orchestratorVersion",
        PossibleTypes = new [] { typeof(string) })]
        string OrchestratorVersion { get; set; }
        /// <summary>
        /// If omitted, pod IPs are statically assigned on the node subnet (see vnetSubnetID for more details). This is of the form:
        /// /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworks/{virtualNetworkName}/subnets/{subnetName}
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Aks.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"If omitted, pod IPs are statically assigned on the node subnet (see vnetSubnetID for more details). This is of the form: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworks/{virtualNetworkName}/subnets/{subnetName}",
        SerializedName = @"podSubnetID",
        PossibleTypes = new [] { typeof(string) })]
        string PodSubnetId { get; set; }
        /// <summary>Tells whether the cluster is Running or Stopped</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Aks.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Tells whether the cluster is Running or Stopped",
        SerializedName = @"code",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Aks.Support.Code) })]
        Microsoft.Azure.PowerShell.Cmdlets.Aks.Support.Code? PowerStateCode { get; set; }
        /// <summary>The type of Agent Pool.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Aks.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The type of Agent Pool.",
        SerializedName = @"type",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Aks.Support.AgentPoolType) })]
        Microsoft.Azure.PowerShell.Cmdlets.Aks.Support.AgentPoolType? PropertiesType { get; set; }
        /// <summary>The current deployment or provisioning state.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Aks.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The current deployment or provisioning state.",
        SerializedName = @"provisioningState",
        PossibleTypes = new [] { typeof(string) })]
        string ProvisioningState { get;  }
        /// <summary>The ID for Proximity Placement Group.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Aks.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The ID for Proximity Placement Group.",
        SerializedName = @"proximityPlacementGroupID",
        PossibleTypes = new [] { typeof(string) })]
        string ProximityPlacementGroupId { get; set; }
        /// <summary>
        /// This also effects the cluster autoscaler behavior. If not specified, it defaults to Delete.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Aks.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"This also effects the cluster autoscaler behavior. If not specified, it defaults to Delete.",
        SerializedName = @"scaleDownMode",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Aks.Support.ScaleDownMode) })]
        Microsoft.Azure.PowerShell.Cmdlets.Aks.Support.ScaleDownMode? ScaleDownMode { get; set; }
        /// <summary>
        /// This cannot be specified unless the scaleSetPriority is 'Spot'. If not specified, the default is 'Delete'.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Aks.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"This cannot be specified unless the scaleSetPriority is 'Spot'. If not specified, the default is 'Delete'.",
        SerializedName = @"scaleSetEvictionPolicy",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Aks.Support.ScaleSetEvictionPolicy) })]
        Microsoft.Azure.PowerShell.Cmdlets.Aks.Support.ScaleSetEvictionPolicy? ScaleSetEvictionPolicy { get; set; }
        /// <summary>
        /// The Virtual Machine Scale Set priority. If not specified, the default is 'Regular'.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Aks.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The Virtual Machine Scale Set priority. If not specified, the default is 'Regular'.",
        SerializedName = @"scaleSetPriority",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Aks.Support.ScaleSetPriority) })]
        Microsoft.Azure.PowerShell.Cmdlets.Aks.Support.ScaleSetPriority? ScaleSetPriority { get; set; }
        /// <summary>
        /// Possible values are any decimal value greater than zero or -1 which indicates the willingness to pay any on-demand price.
        /// For more details on spot pricing, see [spot VMs pricing](https://docs.microsoft.com/azure/virtual-machines/spot-vms#pricing)
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Aks.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Possible values are any decimal value greater than zero or -1 which indicates the willingness to pay any on-demand price. For more details on spot pricing, see [spot VMs pricing](https://docs.microsoft.com/azure/virtual-machines/spot-vms#pricing)",
        SerializedName = @"spotMaxPrice",
        PossibleTypes = new [] { typeof(float) })]
        float? SpotMaxPrice { get; set; }
        /// <summary>The tags to be persisted on the agent pool virtual machine scale set.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Aks.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The tags to be persisted on the agent pool virtual machine scale set.",
        SerializedName = @"tags",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.Api20230201.IManagedClusterAgentPoolProfilePropertiesTags) })]
        Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.Api20230201.IManagedClusterAgentPoolProfilePropertiesTags Tag { get; set; }
        /// <summary>
        /// This can either be set to an integer (e.g. '5') or a percentage (e.g. '50%'). If a percentage is specified, it is the
        /// percentage of the total agent pool size at the time of the upgrade. For percentages, fractional nodes are rounded up.
        /// If not specified, the default is 1. For more information, including best practices, see: https://docs.microsoft.com/azure/aks/upgrade-cluster#customize-node-surge-upgrade
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Aks.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"This can either be set to an integer (e.g. '5') or a percentage (e.g. '50%'). If a percentage is specified, it is the percentage of the total agent pool size at the time of the upgrade. For percentages, fractional nodes are rounded up. If not specified, the default is 1. For more information, including best practices, see: https://docs.microsoft.com/azure/aks/upgrade-cluster#customize-node-surge-upgrade",
        SerializedName = @"maxSurge",
        PossibleTypes = new [] { typeof(string) })]
        string UpgradeSettingMaxSurge { get; set; }
        /// <summary>
        /// VM size availability varies by region. If a node contains insufficient compute resources (memory, cpu, etc) pods might
        /// fail to run correctly. For more details on restricted VM sizes, see: https://docs.microsoft.com/azure/aks/quotas-skus-regions
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Aks.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"VM size availability varies by region. If a node contains insufficient compute resources (memory, cpu, etc) pods might fail to run correctly. For more details on restricted VM sizes, see: https://docs.microsoft.com/azure/aks/quotas-skus-regions",
        SerializedName = @"vmSize",
        PossibleTypes = new [] { typeof(string) })]
        string VMSize { get; set; }
        /// <summary>
        /// If this is not specified, a VNET and subnet will be generated and used. If no podSubnetID is specified, this applies to
        /// nodes and pods, otherwise it applies to just nodes. This is of the form: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworks/{virtualNetworkName}/subnets/{subnetName}
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Aks.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"If this is not specified, a VNET and subnet will be generated and used. If no podSubnetID is specified, this applies to nodes and pods, otherwise it applies to just nodes. This is of the form: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworks/{virtualNetworkName}/subnets/{subnetName}",
        SerializedName = @"vnetSubnetID",
        PossibleTypes = new [] { typeof(string) })]
        string VnetSubnetId { get; set; }
        /// <summary>Determines the type of workload a node can run.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Aks.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Determines the type of workload a node can run.",
        SerializedName = @"workloadRuntime",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Aks.Support.WorkloadRuntime) })]
        Microsoft.Azure.PowerShell.Cmdlets.Aks.Support.WorkloadRuntime? WorkloadRuntime { get; set; }

    }
    /// Agent Pool.
    internal partial interface IAgentPoolInternal :
        Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.Api20230201.ISubResourceInternal
    {
        /// <summary>
        /// The list of Availability zones to use for nodes. This can only be specified if the AgentPoolType property is 'VirtualMachineScaleSets'.
        /// </summary>
        string[] AvailabilityZone { get; set; }

        string AzureAsyncOperation { get; set; }
        /// <summary>
        /// Number of agents (VMs) to host docker containers. Allowed values must be in the range of 0 to 1000 (inclusive) for user
        /// pools and in the range of 1 to 1000 (inclusive) for system pools. The default value is 1.
        /// </summary>
        int? Count { get; set; }
        /// <summary>
        /// CreationData to be used to specify the source Snapshot ID if the node pool will be created/upgraded using a snapshot.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.Api20230201.ICreationData CreationData { get; set; }
        /// <summary>This is the ARM ID of the source object to be used to create the target object.</summary>
        string CreationDataSourceResourceId { get; set; }
        /// <summary>
        /// If orchestratorVersion is a fully specified version <major.minor.patch>, this field will be exactly equal to it. If orchestratorVersion
        /// is <major.minor>, this field will contain the full <major.minor.patch> version being used.
        /// </summary>
        string CurrentOrchestratorVersion { get; set; }
        /// <summary>Whether to enable auto-scaler</summary>
        bool? EnableAutoScaling { get; set; }
        /// <summary>
        /// This is only supported on certain VM sizes and in certain Azure regions. For more information, see: https://docs.microsoft.com/azure/aks/enable-host-encryption
        /// </summary>
        bool? EnableEncryptionAtHost { get; set; }
        /// <summary>
        /// See [Add a FIPS-enabled node pool](https://docs.microsoft.com/azure/aks/use-multiple-node-pools#add-a-fips-enabled-node-pool-preview)
        /// for more details.
        /// </summary>
        bool? EnableFips { get; set; }
        /// <summary>
        /// Some scenarios may require nodes in a node pool to receive their own dedicated public IP addresses. A common scenario
        /// is for gaming workloads, where a console needs to make a direct connection to a cloud virtual machine to minimize hops.
        /// For more information see [assigning a public IP per node](https://docs.microsoft.com/azure/aks/use-multiple-node-pools#assign-a-public-ip-per-node-for-your-node-pools).
        /// The default is false.
        /// </summary>
        bool? EnableNodePublicIP { get; set; }
        /// <summary>Whether to enable UltraSSD</summary>
        bool? EnableUltraSsd { get; set; }
        /// <summary>
        /// GPUInstanceProfile to be used to specify GPU MIG instance profile for supported GPU VM SKU.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Aks.Support.GpuInstanceProfile? GpuInstanceProfile { get; set; }
        /// <summary>
        /// This is of the form: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/hostGroups/{hostGroupName}.
        /// For more information see [Azure dedicated hosts](https://docs.microsoft.com/azure/virtual-machines/dedicated-hosts).
        /// </summary>
        string HostGroupId { get; set; }
        /// <summary>The Kubelet configuration on the agent pool nodes.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.Api20230201.IKubeletConfig KubeletConfig { get; set; }
        /// <summary>Allowed list of unsafe sysctls or unsafe sysctl patterns (ending in `*`).</summary>
        string[] KubeletConfigAllowedUnsafeSysctl { get; set; }
        /// <summary>
        /// The maximum number of container log files that can be present for a container. The number must be ≥ 2.
        /// </summary>
        int? KubeletConfigContainerLogMaxFile { get; set; }
        /// <summary>The maximum size (e.g. 10Mi) of container log file before it is rotated.</summary>
        int? KubeletConfigContainerLogMaxSizeMb { get; set; }
        /// <summary>The default is true.</summary>
        bool? KubeletConfigCpuCfsQuota { get; set; }
        /// <summary>
        /// The default is '100ms.' Valid values are a sequence of decimal numbers with an optional fraction and a unit suffix. For
        /// example: '300ms', '2h45m'. Supported units are 'ns', 'us', 'ms', 's', 'm', and 'h'.
        /// </summary>
        string KubeletConfigCpuCfsQuotaPeriod { get; set; }
        /// <summary>
        /// The default is 'none'. See [Kubernetes CPU management policies](https://kubernetes.io/docs/tasks/administer-cluster/cpu-management-policies/#cpu-management-policies)
        /// for more information. Allowed values are 'none' and 'static'.
        /// </summary>
        string KubeletConfigCpuManagerPolicy { get; set; }
        /// <summary>
        /// If set to true it will make the Kubelet fail to start if swap is enabled on the node.
        /// </summary>
        bool? KubeletConfigFailSwapOn { get; set; }
        /// <summary>To disable image garbage collection, set to 100. The default is 85%</summary>
        int? KubeletConfigImageGcHighThreshold { get; set; }
        /// <summary>This cannot be set higher than imageGcHighThreshold. The default is 80%</summary>
        int? KubeletConfigImageGcLowThreshold { get; set; }
        /// <summary>The maximum number of processes per pod.</summary>
        int? KubeletConfigPodMaxPid { get; set; }
        /// <summary>
        /// For more information see [Kubernetes Topology Manager](https://kubernetes.io/docs/tasks/administer-cluster/topology-manager).
        /// The default is 'none'. Allowed values are 'none', 'best-effort', 'restricted', and 'single-numa-node'.
        /// </summary>
        string KubeletConfigTopologyManagerPolicy { get; set; }
        /// <summary>
        /// Determines the placement of emptyDir volumes, container runtime data root, and Kubelet ephemeral storage.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Aks.Support.KubeletDiskType? KubeletDiskType { get; set; }
        /// <summary>The OS configuration of Linux agent nodes.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.Api20230201.ILinuxOSConfig LinuxOSConfig { get; set; }
        /// <summary>The size in MB of a swap file that will be created on each node.</summary>
        int? LinuxOSConfigSwapFileSizeMb { get; set; }
        /// <summary>Sysctl settings for Linux agent nodes.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.Api20230201.ISysctlConfig LinuxOSConfigSysctl { get; set; }
        /// <summary>
        /// Valid values are 'always', 'defer', 'defer+madvise', 'madvise' and 'never'. The default is 'madvise'. For more information
        /// see [Transparent Hugepages](https://www.kernel.org/doc/html/latest/admin-guide/mm/transhuge.html#admin-guide-transhuge).
        /// </summary>
        string LinuxOSConfigTransparentHugePageDefrag { get; set; }
        /// <summary>
        /// Valid values are 'always', 'madvise', and 'never'. The default is 'always'. For more information see [Transparent Hugepages](https://www.kernel.org/doc/html/latest/admin-guide/mm/transhuge.html#admin-guide-transhuge).
        /// </summary>
        string LinuxOSConfigTransparentHugePageEnabled { get; set; }
        /// <summary>The maximum number of nodes for auto-scaling</summary>
        int? MaxCount { get; set; }
        /// <summary>The maximum number of pods that can run on a node.</summary>
        int? MaxPod { get; set; }
        /// <summary>The minimum number of nodes for auto-scaling</summary>
        int? MinCount { get; set; }
        /// <summary>
        /// A cluster must have at least one 'System' Agent Pool at all times. For additional information on agent pool restrictions
        /// and best practices, see: https://docs.microsoft.com/azure/aks/use-system-pools
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Aks.Support.AgentPoolMode? Mode { get; set; }
        /// <summary>The version of node image</summary>
        string NodeImageVersion { get; set; }
        /// <summary>The node labels to be persisted across all nodes in agent pool.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.Api20230201.IManagedClusterAgentPoolProfilePropertiesNodeLabels NodeLabel { get; set; }
        /// <summary>
        /// This is of the form: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/publicIPPrefixes/{publicIPPrefixName}
        /// </summary>
        string NodePublicIPPrefixId { get; set; }
        /// <summary>
        /// The taints added to new nodes during node pool create and scale. For example, key=value:NoSchedule.
        /// </summary>
        string[] NodeTaint { get; set; }
        /// <summary>
        /// OS Disk Size in GB to be used to specify the disk size for every machine in the master/agent pool. If you specify 0, it
        /// will apply the default osDisk size according to the vmSize specified.
        /// </summary>
        int? OSDiskSizeGb { get; set; }
        /// <summary>
        /// The default is 'Ephemeral' if the VM supports it and has a cache disk larger than the requested OSDiskSizeGB. Otherwise,
        /// defaults to 'Managed'. May not be changed after creation. For more information see [Ephemeral OS](https://docs.microsoft.com/azure/aks/cluster-configuration#ephemeral-os).
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Aks.Support.OSDiskType? OSDiskType { get; set; }
        /// <summary>
        /// Specifies the OS SKU used by the agent pool. The default is Ubuntu if OSType is Linux. The default is Windows2019 when
        /// Kubernetes <= 1.24 or Windows2022 when Kubernetes >= 1.25 if OSType is Windows.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Aks.Support.Ossku? OSSku { get; set; }
        /// <summary>The operating system type. The default is Linux.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Aks.Support.OSType? OSType { get; set; }
        /// <summary>
        /// Both patch version <major.minor.patch> (e.g. 1.20.13) and <major.minor> (e.g. 1.20) are supported. When <major.minor>
        /// is specified, the latest supported GA patch version is chosen automatically. Updating the cluster with the same <major.minor>
        /// once it has been created (e.g. 1.14.x -> 1.14) will not trigger an upgrade, even if a newer patch version is available.
        /// As a best practice, you should upgrade all node pools in an AKS cluster to the same Kubernetes version. The node pool
        /// version must have the same major version as the control plane. The node pool minor version must be within two minor versions
        /// of the control plane version. The node pool version cannot be greater than the control plane version. For more information
        /// see [upgrading a node pool](https://docs.microsoft.com/azure/aks/use-multiple-node-pools#upgrade-a-node-pool).
        /// </summary>
        string OrchestratorVersion { get; set; }
        /// <summary>
        /// If omitted, pod IPs are statically assigned on the node subnet (see vnetSubnetID for more details). This is of the form:
        /// /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworks/{virtualNetworkName}/subnets/{subnetName}
        /// </summary>
        string PodSubnetId { get; set; }
        /// <summary>
        /// When an Agent Pool is first created it is initially Running. The Agent Pool can be stopped by setting this field to Stopped.
        /// A stopped Agent Pool stops all of its VMs and does not accrue billing charges. An Agent Pool can only be stopped if it
        /// is Running and provisioning state is Succeeded
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.Api20230201.IPowerState PowerState { get; set; }
        /// <summary>Tells whether the cluster is Running or Stopped</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Aks.Support.Code? PowerStateCode { get; set; }
        /// <summary>The type of Agent Pool.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Aks.Support.AgentPoolType? PropertiesType { get; set; }
        /// <summary>Properties of an agent pool.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.Api20230201.IManagedClusterAgentPoolProfileProperties Property { get; set; }
        /// <summary>The current deployment or provisioning state.</summary>
        string ProvisioningState { get; set; }
        /// <summary>The ID for Proximity Placement Group.</summary>
        string ProximityPlacementGroupId { get; set; }
        /// <summary>
        /// This also effects the cluster autoscaler behavior. If not specified, it defaults to Delete.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Aks.Support.ScaleDownMode? ScaleDownMode { get; set; }
        /// <summary>
        /// This cannot be specified unless the scaleSetPriority is 'Spot'. If not specified, the default is 'Delete'.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Aks.Support.ScaleSetEvictionPolicy? ScaleSetEvictionPolicy { get; set; }
        /// <summary>
        /// The Virtual Machine Scale Set priority. If not specified, the default is 'Regular'.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Aks.Support.ScaleSetPriority? ScaleSetPriority { get; set; }
        /// <summary>
        /// Possible values are any decimal value greater than zero or -1 which indicates the willingness to pay any on-demand price.
        /// For more details on spot pricing, see [spot VMs pricing](https://docs.microsoft.com/azure/virtual-machines/spot-vms#pricing)
        /// </summary>
        float? SpotMaxPrice { get; set; }
        /// <summary>The tags to be persisted on the agent pool virtual machine scale set.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.Api20230201.IManagedClusterAgentPoolProfilePropertiesTags Tag { get; set; }
        /// <summary>Settings for upgrading the agentpool</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.Api20230201.IAgentPoolUpgradeSettings UpgradeSetting { get; set; }
        /// <summary>
        /// This can either be set to an integer (e.g. '5') or a percentage (e.g. '50%'). If a percentage is specified, it is the
        /// percentage of the total agent pool size at the time of the upgrade. For percentages, fractional nodes are rounded up.
        /// If not specified, the default is 1. For more information, including best practices, see: https://docs.microsoft.com/azure/aks/upgrade-cluster#customize-node-surge-upgrade
        /// </summary>
        string UpgradeSettingMaxSurge { get; set; }
        /// <summary>
        /// VM size availability varies by region. If a node contains insufficient compute resources (memory, cpu, etc) pods might
        /// fail to run correctly. For more details on restricted VM sizes, see: https://docs.microsoft.com/azure/aks/quotas-skus-regions
        /// </summary>
        string VMSize { get; set; }
        /// <summary>
        /// If this is not specified, a VNET and subnet will be generated and used. If no podSubnetID is specified, this applies to
        /// nodes and pods, otherwise it applies to just nodes. This is of the form: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworks/{virtualNetworkName}/subnets/{subnetName}
        /// </summary>
        string VnetSubnetId { get; set; }
        /// <summary>Determines the type of workload a node can run.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Aks.Support.WorkloadRuntime? WorkloadRuntime { get; set; }

    }
}