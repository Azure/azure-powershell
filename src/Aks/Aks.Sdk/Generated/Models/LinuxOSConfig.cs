// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.ContainerService.Models
{
    using System.Linq;

    /// <summary>
    /// See [AKS custom node
    /// configuration](https://docs.microsoft.com/azure/aks/custom-node-configuration)
    /// for more details.
    /// </summary>
    /// <remarks>
    /// See [AKS custom node
    /// configuration](https://docs.microsoft.com/azure/aks/custom-node-configuration)
    /// for more details.
    /// </remarks>
    public partial class LinuxOSConfig
    {
        /// <summary>
        /// Initializes a new instance of the LinuxOSConfig class.
        /// </summary>
        public LinuxOSConfig()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the LinuxOSConfig class.
        /// </summary>

        /// <param name="sysctls">Sysctl settings for Linux agent nodes.
        /// </param>

        /// <param name="transparentHugePageEnabled">Valid values are &#39;always&#39;, &#39;madvise&#39;, and &#39;never&#39;. The default is &#39;always&#39;.
        /// For more information see [Transparent
        /// Hugepages](https://www.kernel.org/doc/html/latest/admin-guide/mm/transhuge.html#admin-guide-transhuge).
        /// </param>

        /// <param name="transparentHugePageDefrag">Valid values are &#39;always&#39;, &#39;defer&#39;, &#39;defer+madvise&#39;, &#39;madvise&#39; and &#39;never&#39;.
        /// The default is &#39;madvise&#39;. For more information see [Transparent
        /// Hugepages](https://www.kernel.org/doc/html/latest/admin-guide/mm/transhuge.html#admin-guide-transhuge).
        /// </param>

        /// <param name="swapFileSizeMb">The size in MB of a swap file that will be created on each node.
        /// </param>
        public LinuxOSConfig(SysctlConfig sysctls = default(SysctlConfig), string transparentHugePageEnabled = default(string), string transparentHugePageDefrag = default(string), int? swapFileSizeMb = default(int?))

        {
            this.Sysctls = sysctls;
            this.TransparentHugePageEnabled = transparentHugePageEnabled;
            this.TransparentHugePageDefrag = transparentHugePageDefrag;
            this.SwapFileSizeMb = swapFileSizeMb;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets or sets sysctl settings for Linux agent nodes.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "sysctls")]
        public SysctlConfig Sysctls {get; set; }

        /// <summary>
        /// Gets or sets valid values are &#39;always&#39;, &#39;madvise&#39;, and &#39;never&#39;. The default
        /// is &#39;always&#39;. For more information see [Transparent
        /// Hugepages](https://www.kernel.org/doc/html/latest/admin-guide/mm/transhuge.html#admin-guide-transhuge).
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "transparentHugePageEnabled")]
        public string TransparentHugePageEnabled {get; set; }

        /// <summary>
        /// Gets or sets valid values are &#39;always&#39;, &#39;defer&#39;, &#39;defer+madvise&#39;, &#39;madvise&#39;
        /// and &#39;never&#39;. The default is &#39;madvise&#39;. For more information see
        /// [Transparent
        /// Hugepages](https://www.kernel.org/doc/html/latest/admin-guide/mm/transhuge.html#admin-guide-transhuge).
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "transparentHugePageDefrag")]
        public string TransparentHugePageDefrag {get; set; }

        /// <summary>
        /// Gets or sets the size in MB of a swap file that will be created on each
        /// node.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "swapFileSizeMB")]
        public int? SwapFileSizeMb {get; set; }
    }
}