// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.ContainerService.Models
{
    using System.Linq;

    /// <summary>
    /// Image Cleaner removes unused images from nodes, freeing up disk space and
    /// helping to reduce attack surface area. Here are settings for the security
    /// profile.
    /// </summary>
    public partial class ManagedClusterSecurityProfileImageCleaner
    {
        /// <summary>
        /// Initializes a new instance of the ManagedClusterSecurityProfileImageCleaner class.
        /// </summary>
        public ManagedClusterSecurityProfileImageCleaner()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the ManagedClusterSecurityProfileImageCleaner class.
        /// </summary>

        /// <param name="enabled">Whether to enable Image Cleaner on AKS cluster.
        /// </param>

        /// <param name="intervalHours">Image Cleaner scanning interval in hours.
        /// </param>
        public ManagedClusterSecurityProfileImageCleaner(bool? enabled = default(bool?), int? intervalHours = default(int?))

        {
            this.Enabled = enabled;
            this.IntervalHours = intervalHours;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets or sets whether to enable Image Cleaner on AKS cluster.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "enabled")]
        public bool? Enabled {get; set; }

        /// <summary>
        /// Gets or sets image Cleaner scanning interval in hours.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "intervalHours")]
        public int? IntervalHours {get; set; }
    }
}