// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.ContainerService.Models
{
    using System.Linq;

    /// <summary>
    /// Profile of the managed cluster NAT gateway.
    /// </summary>
    public partial class ManagedClusterNATGatewayProfile
    {
        /// <summary>
        /// Initializes a new instance of the ManagedClusterNATGatewayProfile class.
        /// </summary>
        public ManagedClusterNATGatewayProfile()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the ManagedClusterNATGatewayProfile class.
        /// </summary>

        /// <param name="managedOutboundIPProfile">Profile of the managed outbound IP resources of the cluster NAT gateway.
        /// </param>

        /// <param name="effectiveOutboundIPs">The effective outbound IP resources of the cluster NAT gateway.
        /// </param>

        /// <param name="idleTimeoutInMinutes">Desired outbound flow idle timeout in minutes. Allowed values are in the
        /// range of 4 to 120 (inclusive). The default value is 4 minutes.
        /// </param>
        public ManagedClusterNATGatewayProfile(ManagedClusterManagedOutboundIPProfile managedOutboundIPProfile = default(ManagedClusterManagedOutboundIPProfile), System.Collections.Generic.IList<ResourceReference> effectiveOutboundIPs = default(System.Collections.Generic.IList<ResourceReference>), int? idleTimeoutInMinutes = default(int?))

        {
            this.ManagedOutboundIPProfile = managedOutboundIPProfile;
            this.EffectiveOutboundIPs = effectiveOutboundIPs;
            this.IdleTimeoutInMinutes = idleTimeoutInMinutes;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets or sets profile of the managed outbound IP resources of the cluster
        /// NAT gateway.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "managedOutboundIPProfile")]
        public ManagedClusterManagedOutboundIPProfile ManagedOutboundIPProfile {get; set; }

        /// <summary>
        /// Gets or sets the effective outbound IP resources of the cluster NAT
        /// gateway.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "effectiveOutboundIPs")]
        public System.Collections.Generic.IList<ResourceReference> EffectiveOutboundIPs {get; set; }

        /// <summary>
        /// Gets or sets desired outbound flow idle timeout in minutes. Allowed values
        /// are in the range of 4 to 120 (inclusive). The default value is 4 minutes.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "idleTimeoutInMinutes")]
        public int? IdleTimeoutInMinutes {get; set; }
        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (this.ManagedOutboundIPProfile != null)
            {
                this.ManagedOutboundIPProfile.Validate();
            }

            if (this.IdleTimeoutInMinutes != null)
            {
                if (this.IdleTimeoutInMinutes > 120)
                {
                    throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.InclusiveMaximum, "IdleTimeoutInMinutes", 120);
                }
                if (this.IdleTimeoutInMinutes < 4)
                {
                    throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.InclusiveMinimum, "IdleTimeoutInMinutes", 4);
                }
            }
        }
    }
}