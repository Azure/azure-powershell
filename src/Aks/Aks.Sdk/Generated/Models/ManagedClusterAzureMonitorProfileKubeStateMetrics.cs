// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.ContainerService.Models
{
    using System.Linq;

    /// <summary>
    /// Kube State Metrics profile for the Azure Managed Prometheus addon. These
    /// optional settings are for the kube-state-metrics pod that is deployed with
    /// the addon. See aka.ms/AzureManagedPrometheus-optional-parameters for
    /// details.
    /// </summary>
    public partial class ManagedClusterAzureMonitorProfileKubeStateMetrics
    {
        /// <summary>
        /// Initializes a new instance of the ManagedClusterAzureMonitorProfileKubeStateMetrics class.
        /// </summary>
        public ManagedClusterAzureMonitorProfileKubeStateMetrics()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the ManagedClusterAzureMonitorProfileKubeStateMetrics class.
        /// </summary>

        /// <param name="metricLabelsAllowlist">Comma-separated list of additional Kubernetes label keys that will be used
        /// in the resource&#39;s labels metric (Example:
        /// &#39;namespaces=[k8s-label-1,k8s-label-n,...],pods=[app],...&#39;). By default the
        /// metric contains only resource name and namespace labels.
        /// </param>

        /// <param name="metricAnnotationsAllowList">Comma-separated list of Kubernetes annotation keys that will be used in the
        /// resource&#39;s labels metric (Example:
        /// &#39;namespaces=[kubernetes.io/team,...],pods=[kubernetes.io/team],...&#39;). By
        /// default the metric contains only resource name and namespace labels.
        /// </param>
        public ManagedClusterAzureMonitorProfileKubeStateMetrics(string metricLabelsAllowlist = default(string), string metricAnnotationsAllowList = default(string))

        {
            this.MetricLabelsAllowlist = metricLabelsAllowlist;
            this.MetricAnnotationsAllowList = metricAnnotationsAllowList;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets or sets comma-separated list of additional Kubernetes label keys that
        /// will be used in the resource&#39;s labels metric (Example:
        /// &#39;namespaces=[k8s-label-1,k8s-label-n,...],pods=[app],...&#39;). By default the
        /// metric contains only resource name and namespace labels.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "metricLabelsAllowlist")]
        public string MetricLabelsAllowlist {get; set; }

        /// <summary>
        /// Gets or sets comma-separated list of Kubernetes annotation keys that will
        /// be used in the resource&#39;s labels metric (Example:
        /// &#39;namespaces=[kubernetes.io/team,...],pods=[kubernetes.io/team],...&#39;). By
        /// default the metric contains only resource name and namespace labels.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "metricAnnotationsAllowList")]
        public string MetricAnnotationsAllowList {get; set; }
    }
}