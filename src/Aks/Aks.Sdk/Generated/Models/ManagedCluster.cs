// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.ContainerService.Models
{
    using System.Linq;

    /// <summary>
    /// Managed cluster.
    /// </summary>
    [Microsoft.Rest.Serialization.JsonTransformation]
    public partial class ManagedCluster : TrackedResource
    {
        /// <summary>
        /// Initializes a new instance of the ManagedCluster class.
        /// </summary>
        public ManagedCluster()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the ManagedCluster class.
        /// </summary>

        /// <param name="id">Fully qualified resource ID for the resource. Ex -
        /// /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        /// </param>

        /// <param name="name">The name of the resource
        /// </param>

        /// <param name="type">The type of the resource. E.g. &#34;Microsoft.Compute/virtualMachines&#34; or
        /// &#34;Microsoft.Storage/storageAccounts&#34;
        /// </param>

        /// <param name="systemData">Azure Resource Manager metadata containing createdBy and modifiedBy
        /// information.
        /// </param>

        /// <param name="tags">Resource tags.
        /// </param>

        /// <param name="location">The geo-location where the resource lives
        /// </param>

        /// <param name="sku">The managed cluster SKU.
        /// </param>

        /// <param name="extendedLocation">The extended location of the Virtual Machine.
        /// </param>

        /// <param name="identity">The identity of the managed cluster, if configured.
        /// </param>

        /// <param name="powerState">The Power State of the cluster.
        /// </param>

        /// <param name="provisioningState">The current provisioning state.
        /// </param>

        /// <param name="maxAgentPools">The max number of agent pools for the managed cluster.
        /// </param>

        /// <param name="kubernetesVersion">Both patch version (major.minor.patch) (e.g. 1.20.13) and (major.minor)
        /// (e.g. 1.20) are supported. When (major.minor) is specified, the latest
        /// supported GA patch version is chosen automatically. Updating the cluster
        /// with the same (major.minor) once it has been created (e.g. 1.14.x -) 1.14)
        /// will not trigger an upgrade, even if a newer patch version is available.
        /// When you upgrade a supported AKS cluster, Kubernetes minor versions cannot
        /// be skipped. All upgrades must be performed sequentially by major version
        /// number. For example, upgrades between 1.14.x -) 1.15.x or 1.15.x -) 1.16.x
        /// are allowed, however 1.14.x -) 1.16.x is not allowed. See [upgrading an AKS
        /// cluster](https://docs.microsoft.com/azure/aks/upgrade-cluster) for more
        /// details.
        /// </param>

        /// <param name="currentKubernetesVersion">If kubernetesVersion was a fully specified version (major.minor.patch),
        /// this field will be exactly equal to it. If kubernetesVersion was
        /// (major.minor), this field will contain the full (major.minor.patch) version
        /// being used.
        /// </param>

        /// <param name="dnsPrefix">This cannot be updated once the Managed Cluster has been created.
        /// </param>

        /// <param name="fqdnSubdomain">This cannot be updated once the Managed Cluster has been created.
        /// </param>

        /// <param name="fqdn">The FQDN of the master pool.
        /// </param>

        /// <param name="privateFqdn">The FQDN of private cluster.
        /// </param>

        /// <param name="azurePortalFqdn">The Azure Portal requires certain Cross-Origin Resource Sharing (CORS)
        /// headers to be sent in some responses, which Kubernetes APIServer doesn&#39;t
        /// handle by default. This special FQDN supports CORS, allowing the Azure
        /// Portal to function properly.
        /// </param>

        /// <param name="agentPoolProfiles">The agent pool properties.
        /// </param>

        /// <param name="linuxProfile">The profile for Linux VMs in the Managed Cluster.
        /// </param>

        /// <param name="windowsProfile">The profile for Windows VMs in the Managed Cluster.
        /// </param>

        /// <param name="servicePrincipalProfile">Information about a service principal identity for the cluster to use for
        /// manipulating Azure APIs.
        /// </param>

        /// <param name="addonProfiles">The profile of managed cluster add-on.
        /// </param>

        /// <param name="podIdentityProfile">See [use AAD pod
        /// identity](https://docs.microsoft.com/azure/aks/use-azure-ad-pod-identity)
        /// for more details on AAD pod identity integration.
        /// </param>

        /// <param name="oidcIssuerProfile">The OIDC issuer profile of the Managed Cluster.
        /// </param>

        /// <param name="nodeResourceGroup">The name of the resource group containing agent pool nodes.
        /// </param>

        /// <param name="enableRbac">Whether to enable Kubernetes Role-Based Access Control.
        /// </param>

        /// <param name="supportPlan">The support plan for the Managed Cluster. If unspecified, the default is
        /// &#39;KubernetesOfficial&#39;.
        /// Possible values include: 'KubernetesOfficial', 'AKSLongTermSupport'</param>

        /// <param name="enablePodSecurityPolicy">(DEPRECATED) Whether to enable Kubernetes pod security policy (preview).
        /// PodSecurityPolicy was deprecated in Kubernetes v1.21, and removed from
        /// Kubernetes in v1.25. Learn more at https://aka.ms/k8s/psp and
        /// https://aka.ms/aks/psp.
        /// </param>

        /// <param name="networkProfile">The network configuration profile.
        /// </param>

        /// <param name="aadProfile">The Azure Active Directory configuration.
        /// </param>

        /// <param name="autoUpgradeProfile">The auto upgrade configuration.
        /// </param>

        /// <param name="autoScalerProfile">Parameters to be applied to the cluster-autoscaler when enabled
        /// </param>

        /// <param name="apiServerAccessProfile">The access profile for managed cluster API server.
        /// </param>

        /// <param name="diskEncryptionSetId">This is of the form:
        /// &#39;/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/diskEncryptionSets/{encryptionSetName}&#39;
        /// </param>

        /// <param name="identityProfile">Identities associated with the cluster.
        /// </param>

        /// <param name="privateLinkResources">Private link resources associated with the cluster.
        /// </param>

        /// <param name="disableLocalAccounts">If set to true, getting static credentials will be disabled for this
        /// cluster. This must only be used on Managed Clusters that are AAD enabled.
        /// For more details see [disable local
        /// accounts](https://docs.microsoft.com/azure/aks/managed-aad#disable-local-accounts-preview).
        /// </param>

        /// <param name="httpProxyConfig">Configurations for provisioning the cluster with HTTP proxy servers.
        /// </param>

        /// <param name="securityProfile">Security profile for the managed cluster.
        /// </param>

        /// <param name="storageProfile">Storage profile for the managed cluster.
        /// </param>

        /// <param name="publicNetworkAccess">Allow or deny public network access for AKS
        /// Possible values include: 'Enabled', 'Disabled'</param>

        /// <param name="workloadAutoScalerProfile">Workload Auto-scaler profile for the managed cluster.
        /// </param>

        /// <param name="azureMonitorProfile">Azure Monitor addon profiles for monitoring the managed cluster.
        /// </param>
        public ManagedCluster(string location, string id = default(string), string name = default(string), string type = default(string), SystemData systemData = default(SystemData), System.Collections.Generic.IDictionary<string, string> tags = default(System.Collections.Generic.IDictionary<string, string>), ManagedClusterSKU sku = default(ManagedClusterSKU), ExtendedLocation extendedLocation = default(ExtendedLocation), ManagedClusterIdentity identity = default(ManagedClusterIdentity), PowerState powerState = default(PowerState), string provisioningState = default(string), int? maxAgentPools = default(int?), string kubernetesVersion = default(string), string currentKubernetesVersion = default(string), string dnsPrefix = default(string), string fqdnSubdomain = default(string), string fqdn = default(string), string privateFqdn = default(string), string azurePortalFqdn = default(string), System.Collections.Generic.IList<ManagedClusterAgentPoolProfile> agentPoolProfiles = default(System.Collections.Generic.IList<ManagedClusterAgentPoolProfile>), ContainerServiceLinuxProfile linuxProfile = default(ContainerServiceLinuxProfile), ManagedClusterWindowsProfile windowsProfile = default(ManagedClusterWindowsProfile), ManagedClusterServicePrincipalProfile servicePrincipalProfile = default(ManagedClusterServicePrincipalProfile), System.Collections.Generic.IDictionary<string, ManagedClusterAddonProfile> addonProfiles = default(System.Collections.Generic.IDictionary<string, ManagedClusterAddonProfile>), ManagedClusterPodIdentityProfile podIdentityProfile = default(ManagedClusterPodIdentityProfile), ManagedClusterOidcIssuerProfile oidcIssuerProfile = default(ManagedClusterOidcIssuerProfile), string nodeResourceGroup = default(string), bool? enableRbac = default(bool?), string supportPlan = default(string), bool? enablePodSecurityPolicy = default(bool?), ContainerServiceNetworkProfile networkProfile = default(ContainerServiceNetworkProfile), ManagedClusterAADProfile aadProfile = default(ManagedClusterAADProfile), ManagedClusterAutoUpgradeProfile autoUpgradeProfile = default(ManagedClusterAutoUpgradeProfile), ManagedClusterPropertiesAutoScalerProfile autoScalerProfile = default(ManagedClusterPropertiesAutoScalerProfile), ManagedClusterAPIServerAccessProfile apiServerAccessProfile = default(ManagedClusterAPIServerAccessProfile), string diskEncryptionSetId = default(string), System.Collections.Generic.IDictionary<string, UserAssignedIdentity> identityProfile = default(System.Collections.Generic.IDictionary<string, UserAssignedIdentity>), System.Collections.Generic.IList<PrivateLinkResource> privateLinkResources = default(System.Collections.Generic.IList<PrivateLinkResource>), bool? disableLocalAccounts = default(bool?), ManagedClusterHttpProxyConfig httpProxyConfig = default(ManagedClusterHttpProxyConfig), ManagedClusterSecurityProfile securityProfile = default(ManagedClusterSecurityProfile), ManagedClusterStorageProfile storageProfile = default(ManagedClusterStorageProfile), string publicNetworkAccess = default(string), ManagedClusterWorkloadAutoScalerProfile workloadAutoScalerProfile = default(ManagedClusterWorkloadAutoScalerProfile), ManagedClusterAzureMonitorProfile azureMonitorProfile = default(ManagedClusterAzureMonitorProfile))

        : base(location, id, name, type, systemData, tags)
        {
            this.Sku = sku;
            this.ExtendedLocation = extendedLocation;
            this.Identity = identity;
            this.PowerState = powerState;
            this.ProvisioningState = provisioningState;
            this.MaxAgentPools = maxAgentPools;
            this.KubernetesVersion = kubernetesVersion;
            this.CurrentKubernetesVersion = currentKubernetesVersion;
            this.DnsPrefix = dnsPrefix;
            this.FqdnSubdomain = fqdnSubdomain;
            this.Fqdn = fqdn;
            this.PrivateFqdn = privateFqdn;
            this.AzurePortalFqdn = azurePortalFqdn;
            this.AgentPoolProfiles = agentPoolProfiles;
            this.LinuxProfile = linuxProfile;
            this.WindowsProfile = windowsProfile;
            this.ServicePrincipalProfile = servicePrincipalProfile;
            this.AddonProfiles = addonProfiles;
            this.PodIdentityProfile = podIdentityProfile;
            this.OidcIssuerProfile = oidcIssuerProfile;
            this.NodeResourceGroup = nodeResourceGroup;
            this.EnableRbac = enableRbac;
            this.SupportPlan = supportPlan;
            this.EnablePodSecurityPolicy = enablePodSecurityPolicy;
            this.NetworkProfile = networkProfile;
            this.AadProfile = aadProfile;
            this.AutoUpgradeProfile = autoUpgradeProfile;
            this.AutoScalerProfile = autoScalerProfile;
            this.ApiServerAccessProfile = apiServerAccessProfile;
            this.DiskEncryptionSetId = diskEncryptionSetId;
            this.IdentityProfile = identityProfile;
            this.PrivateLinkResources = privateLinkResources;
            this.DisableLocalAccounts = disableLocalAccounts;
            this.HttpProxyConfig = httpProxyConfig;
            this.SecurityProfile = securityProfile;
            this.StorageProfile = storageProfile;
            this.PublicNetworkAccess = publicNetworkAccess;
            this.WorkloadAutoScalerProfile = workloadAutoScalerProfile;
            this.AzureMonitorProfile = azureMonitorProfile;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets or sets the managed cluster SKU.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "sku")]
        public ManagedClusterSKU Sku {get; set; }

        /// <summary>
        /// Gets or sets the extended location of the Virtual Machine.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "extendedLocation")]
        public ExtendedLocation ExtendedLocation {get; set; }

        /// <summary>
        /// Gets or sets the identity of the managed cluster, if configured.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "identity")]
        public ManagedClusterIdentity Identity {get; set; }

        /// <summary>
        /// Gets the Power State of the cluster.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.powerState")]
        public PowerState PowerState {get; private set; }

        /// <summary>
        /// Gets the current provisioning state.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.provisioningState")]
        public string ProvisioningState {get; private set; }

        /// <summary>
        /// Gets the max number of agent pools for the managed cluster.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.maxAgentPools")]
        public int? MaxAgentPools {get; private set; }

        /// <summary>
        /// Gets or sets both patch version (major.minor.patch) (e.g. 1.20.13) and
        /// (major.minor) (e.g. 1.20) are supported. When (major.minor) is specified,
        /// the latest supported GA patch version is chosen automatically. Updating the
        /// cluster with the same (major.minor) once it has been created (e.g. 1.14.x
        /// -) 1.14) will not trigger an upgrade, even if a newer patch version is
        /// available. When you upgrade a supported AKS cluster, Kubernetes minor
        /// versions cannot be skipped. All upgrades must be performed sequentially by
        /// major version number. For example, upgrades between 1.14.x -) 1.15.x or
        /// 1.15.x -) 1.16.x are allowed, however 1.14.x -) 1.16.x is not allowed. See
        /// [upgrading an AKS
        /// cluster](https://docs.microsoft.com/azure/aks/upgrade-cluster) for more
        /// details.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.kubernetesVersion")]
        public string KubernetesVersion {get; set; }

        /// <summary>
        /// Gets if kubernetesVersion was a fully specified version
        /// (major.minor.patch), this field will be exactly equal to it. If
        /// kubernetesVersion was (major.minor), this field will contain the full
        /// (major.minor.patch) version being used.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.currentKubernetesVersion")]
        public string CurrentKubernetesVersion {get; private set; }

        /// <summary>
        /// Gets or sets this cannot be updated once the Managed Cluster has been
        /// created.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.dnsPrefix")]
        public string DnsPrefix {get; set; }

        /// <summary>
        /// Gets or sets this cannot be updated once the Managed Cluster has been
        /// created.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.fqdnSubdomain")]
        public string FqdnSubdomain {get; set; }

        /// <summary>
        /// Gets the FQDN of the master pool.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.fqdn")]
        public string Fqdn {get; private set; }

        /// <summary>
        /// Gets the FQDN of private cluster.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.privateFQDN")]
        public string PrivateFqdn {get; private set; }

        /// <summary>
        /// Gets the Azure Portal requires certain Cross-Origin Resource Sharing (CORS)
        /// headers to be sent in some responses, which Kubernetes APIServer doesn&#39;t
        /// handle by default. This special FQDN supports CORS, allowing the Azure
        /// Portal to function properly.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.azurePortalFQDN")]
        public string AzurePortalFqdn {get; private set; }

        /// <summary>
        /// Gets or sets the agent pool properties.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.agentPoolProfiles")]
        public System.Collections.Generic.IList<ManagedClusterAgentPoolProfile> AgentPoolProfiles {get; set; }

        /// <summary>
        /// Gets or sets the profile for Linux VMs in the Managed Cluster.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.linuxProfile")]
        public ContainerServiceLinuxProfile LinuxProfile {get; set; }

        /// <summary>
        /// Gets or sets the profile for Windows VMs in the Managed Cluster.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.windowsProfile")]
        public ManagedClusterWindowsProfile WindowsProfile {get; set; }

        /// <summary>
        /// Gets or sets information about a service principal identity for the cluster
        /// to use for manipulating Azure APIs.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.servicePrincipalProfile")]
        public ManagedClusterServicePrincipalProfile ServicePrincipalProfile {get; set; }

        /// <summary>
        /// Gets or sets the profile of managed cluster add-on.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.addonProfiles")]
        public System.Collections.Generic.IDictionary<string, ManagedClusterAddonProfile> AddonProfiles {get; set; }

        /// <summary>
        /// Gets or sets see [use AAD pod
        /// identity](https://docs.microsoft.com/azure/aks/use-azure-ad-pod-identity)
        /// for more details on AAD pod identity integration.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.podIdentityProfile")]
        public ManagedClusterPodIdentityProfile PodIdentityProfile {get; set; }

        /// <summary>
        /// Gets or sets the OIDC issuer profile of the Managed Cluster.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.oidcIssuerProfile")]
        public ManagedClusterOidcIssuerProfile OidcIssuerProfile {get; set; }

        /// <summary>
        /// Gets or sets the name of the resource group containing agent pool nodes.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.nodeResourceGroup")]
        public string NodeResourceGroup {get; set; }

        /// <summary>
        /// Gets or sets whether to enable Kubernetes Role-Based Access Control.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.enableRBAC")]
        public bool? EnableRbac {get; set; }

        /// <summary>
        /// Gets or sets the support plan for the Managed Cluster. If unspecified, the
        /// default is &#39;KubernetesOfficial&#39;. Possible values include: &#39;KubernetesOfficial&#39;, &#39;AKSLongTermSupport&#39;
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.supportPlan")]
        public string SupportPlan {get; set; }

        /// <summary>
        /// Gets or sets (DEPRECATED) Whether to enable Kubernetes pod security policy
        /// (preview). PodSecurityPolicy was deprecated in Kubernetes v1.21, and
        /// removed from Kubernetes in v1.25. Learn more at https://aka.ms/k8s/psp and
        /// https://aka.ms/aks/psp.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.enablePodSecurityPolicy")]
        public bool? EnablePodSecurityPolicy {get; set; }

        /// <summary>
        /// Gets or sets the network configuration profile.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.networkProfile")]
        public ContainerServiceNetworkProfile NetworkProfile {get; set; }

        /// <summary>
        /// Gets or sets the Azure Active Directory configuration.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.aadProfile")]
        public ManagedClusterAADProfile AadProfile {get; set; }

        /// <summary>
        /// Gets or sets the auto upgrade configuration.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.autoUpgradeProfile")]
        public ManagedClusterAutoUpgradeProfile AutoUpgradeProfile {get; set; }

        /// <summary>
        /// Gets or sets parameters to be applied to the cluster-autoscaler when
        /// enabled
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.autoScalerProfile")]
        public ManagedClusterPropertiesAutoScalerProfile AutoScalerProfile {get; set; }

        /// <summary>
        /// Gets or sets the access profile for managed cluster API server.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.apiServerAccessProfile")]
        public ManagedClusterAPIServerAccessProfile ApiServerAccessProfile {get; set; }

        /// <summary>
        /// Gets or sets this is of the form:
        /// &#39;/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/diskEncryptionSets/{encryptionSetName}&#39;
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.diskEncryptionSetID")]
        public string DiskEncryptionSetId {get; set; }

        /// <summary>
        /// Gets or sets identities associated with the cluster.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.identityProfile")]
        public System.Collections.Generic.IDictionary<string, UserAssignedIdentity> IdentityProfile {get; set; }

        /// <summary>
        /// Gets or sets private link resources associated with the cluster.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.privateLinkResources")]
        public System.Collections.Generic.IList<PrivateLinkResource> PrivateLinkResources {get; set; }

        /// <summary>
        /// Gets or sets if set to true, getting static credentials will be disabled
        /// for this cluster. This must only be used on Managed Clusters that are AAD
        /// enabled. For more details see [disable local
        /// accounts](https://docs.microsoft.com/azure/aks/managed-aad#disable-local-accounts-preview).
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.disableLocalAccounts")]
        public bool? DisableLocalAccounts {get; set; }

        /// <summary>
        /// Gets or sets configurations for provisioning the cluster with HTTP proxy
        /// servers.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.httpProxyConfig")]
        public ManagedClusterHttpProxyConfig HttpProxyConfig {get; set; }

        /// <summary>
        /// Gets or sets security profile for the managed cluster.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.securityProfile")]
        public ManagedClusterSecurityProfile SecurityProfile {get; set; }

        /// <summary>
        /// Gets or sets storage profile for the managed cluster.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.storageProfile")]
        public ManagedClusterStorageProfile StorageProfile {get; set; }

        /// <summary>
        /// Gets or sets allow or deny public network access for AKS Possible values include: &#39;Enabled&#39;, &#39;Disabled&#39;
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.publicNetworkAccess")]
        public string PublicNetworkAccess {get; set; }

        /// <summary>
        /// Gets or sets workload Auto-scaler profile for the managed cluster.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.workloadAutoScalerProfile")]
        public ManagedClusterWorkloadAutoScalerProfile WorkloadAutoScalerProfile {get; set; }

        /// <summary>
        /// Gets or sets azure Monitor addon profiles for monitoring the managed
        /// cluster.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.azureMonitorProfile")]
        public ManagedClusterAzureMonitorProfile AzureMonitorProfile {get; set; }
        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public override void Validate()
        {
            base.Validate();












            if (this.AgentPoolProfiles != null)
            {
                foreach (var element in this.AgentPoolProfiles)
                {
                    if (element != null)
                    {
                        element.Validate();
                    }
                }
            }
            if (this.LinuxProfile != null)
            {
                this.LinuxProfile.Validate();
            }
            if (this.WindowsProfile != null)
            {
                this.WindowsProfile.Validate();
            }
            if (this.ServicePrincipalProfile != null)
            {
                this.ServicePrincipalProfile.Validate();
            }
            if (this.AddonProfiles != null)
            {
                foreach (var valueElement in this.AddonProfiles.Values)
                {
                    if (valueElement != null)
                    {
                        valueElement.Validate();
                    }
                }
            }




            if (this.NetworkProfile != null)
            {
                this.NetworkProfile.Validate();
            }











            if (this.WorkloadAutoScalerProfile != null)
            {
                this.WorkloadAutoScalerProfile.Validate();
            }
            if (this.AzureMonitorProfile != null)
            {
                this.AzureMonitorProfile.Validate();
            }
        }
    }
}