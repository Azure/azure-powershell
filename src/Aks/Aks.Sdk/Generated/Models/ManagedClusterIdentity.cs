// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.ContainerService.Models
{
    using System.Linq;

    /// <summary>
    /// Identity for the managed cluster.
    /// </summary>
    public partial class ManagedClusterIdentity
    {
        /// <summary>
        /// Initializes a new instance of the ManagedClusterIdentity class.
        /// </summary>
        public ManagedClusterIdentity()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the ManagedClusterIdentity class.
        /// </summary>

        /// <param name="principalId">The principal id of the system assigned identity which is used by master
        /// components.
        /// </param>

        /// <param name="tenantId">The tenant id of the system assigned identity which is used by master
        /// components.
        /// </param>

        /// <param name="type">For more information see [use managed identities in
        /// AKS](https://docs.microsoft.com/azure/aks/use-managed-identity).
        /// Possible values include: 'SystemAssigned', 'UserAssigned', 'None'</param>

        /// <param name="userAssignedIdentities">The keys must be ARM resource IDs in the form:
        /// &#39;/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}&#39;.
        /// </param>
        public ManagedClusterIdentity(string principalId = default(string), string tenantId = default(string), ResourceIdentityType? type = default(ResourceIdentityType?), System.Collections.Generic.IDictionary<string, ManagedServiceIdentityUserAssignedIdentitiesValue> userAssignedIdentities = default(System.Collections.Generic.IDictionary<string, ManagedServiceIdentityUserAssignedIdentitiesValue>))

        {
            this.PrincipalId = principalId;
            this.TenantId = tenantId;
            this.Type = type;
            this.UserAssignedIdentities = userAssignedIdentities;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets the principal id of the system assigned identity which is used by
        /// master components.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "principalId")]
        public string PrincipalId {get; private set; }

        /// <summary>
        /// Gets the tenant id of the system assigned identity which is used by master
        /// components.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "tenantId")]
        public string TenantId {get; private set; }

        /// <summary>
        /// Gets or sets for more information see [use managed identities in
        /// AKS](https://docs.microsoft.com/azure/aks/use-managed-identity). Possible values include: &#39;SystemAssigned&#39;, &#39;UserAssigned&#39;, &#39;None&#39;
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "type")]
        public ResourceIdentityType? Type {get; set; }

        /// <summary>
        /// Gets or sets the keys must be ARM resource IDs in the form:
        /// &#39;/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}&#39;.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "userAssignedIdentities")]
        public System.Collections.Generic.IDictionary<string, ManagedServiceIdentityUserAssignedIdentitiesValue> UserAssignedIdentities {get; set; }
    }
}