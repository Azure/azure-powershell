// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.
namespace Microsoft.Azure.Management.ContainerService
{
    using Microsoft.Rest.Azure;
    using Models;

    /// <summary>
    /// Extension methods for MaintenanceConfigurationsOperations
    /// </summary>
    public static partial class MaintenanceConfigurationsOperationsExtensions
    {
        /// <summary>
        /// Gets a list of maintenance configurations in the specified managed cluster.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='resourceGroupName'>
        /// The name of the resource group. The name is case insensitive.
        /// </param>
        /// <param name='resourceName'>
        /// The name of the managed cluster resource.
        /// </param>
        public static Microsoft.Rest.Azure.IPage<MaintenanceConfiguration> ListByManagedCluster(this IMaintenanceConfigurationsOperations operations, string resourceGroupName, string resourceName)
        {
                return ((IMaintenanceConfigurationsOperations)operations).ListByManagedClusterAsync(resourceGroupName, resourceName).GetAwaiter().GetResult();
        }

        /// <summary>
        /// Gets a list of maintenance configurations in the specified managed cluster.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='resourceGroupName'>
        /// The name of the resource group. The name is case insensitive.
        /// </param>
        /// <param name='resourceName'>
        /// The name of the managed cluster resource.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        public static async System.Threading.Tasks.Task<Microsoft.Rest.Azure.IPage<MaintenanceConfiguration>> ListByManagedClusterAsync(this IMaintenanceConfigurationsOperations operations, string resourceGroupName, string resourceName, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            using (var _result = await operations.ListByManagedClusterWithHttpMessagesAsync(resourceGroupName, resourceName, null, cancellationToken).ConfigureAwait(false))
            {
                return _result.Body;
            }
        }
        /// <summary>
        /// Gets the specified maintenance configuration of a managed cluster.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='resourceGroupName'>
        /// The name of the resource group. The name is case insensitive.
        /// </param>
        /// <param name='resourceName'>
        /// The name of the managed cluster resource.
        /// </param>
        /// <param name='configName'>
        /// The name of the maintenance configuration.
        /// </param>
        public static MaintenanceConfiguration Get(this IMaintenanceConfigurationsOperations operations, string resourceGroupName, string resourceName, string configName)
        {
                return ((IMaintenanceConfigurationsOperations)operations).GetAsync(resourceGroupName, resourceName, configName).GetAwaiter().GetResult();
        }

        /// <summary>
        /// Gets the specified maintenance configuration of a managed cluster.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='resourceGroupName'>
        /// The name of the resource group. The name is case insensitive.
        /// </param>
        /// <param name='resourceName'>
        /// The name of the managed cluster resource.
        /// </param>
        /// <param name='configName'>
        /// The name of the maintenance configuration.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        public static async System.Threading.Tasks.Task<MaintenanceConfiguration> GetAsync(this IMaintenanceConfigurationsOperations operations, string resourceGroupName, string resourceName, string configName, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            using (var _result = await operations.GetWithHttpMessagesAsync(resourceGroupName, resourceName, configName, null, cancellationToken).ConfigureAwait(false))
            {
                return _result.Body;
            }
        }
        /// <summary>
        /// Creates or updates a maintenance configuration in the specified managed cluster.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='resourceGroupName'>
        /// The name of the resource group. The name is case insensitive.
        /// </param>
        /// <param name='resourceName'>
        /// The name of the managed cluster resource.
        /// </param>
        /// <param name='configName'>
        /// The name of the maintenance configuration.
        /// </param>
        public static MaintenanceConfiguration CreateOrUpdate(this IMaintenanceConfigurationsOperations operations, string resourceGroupName, string resourceName, string configName, MaintenanceConfiguration parameters)
        {
                return ((IMaintenanceConfigurationsOperations)operations).CreateOrUpdateAsync(resourceGroupName, resourceName, configName, parameters).GetAwaiter().GetResult();
        }

        /// <summary>
        /// Creates or updates a maintenance configuration in the specified managed cluster.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='resourceGroupName'>
        /// The name of the resource group. The name is case insensitive.
        /// </param>
        /// <param name='resourceName'>
        /// The name of the managed cluster resource.
        /// </param>
        /// <param name='configName'>
        /// The name of the maintenance configuration.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        public static async System.Threading.Tasks.Task<MaintenanceConfiguration> CreateOrUpdateAsync(this IMaintenanceConfigurationsOperations operations, string resourceGroupName, string resourceName, string configName, MaintenanceConfiguration parameters, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            using (var _result = await operations.CreateOrUpdateWithHttpMessagesAsync(resourceGroupName, resourceName, configName, parameters, null, cancellationToken).ConfigureAwait(false))
            {
                return _result.Body;
            }
        }
        /// <summary>
        /// Deletes a maintenance configuration.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='resourceGroupName'>
        /// The name of the resource group. The name is case insensitive.
        /// </param>
        /// <param name='resourceName'>
        /// The name of the managed cluster resource.
        /// </param>
        /// <param name='configName'>
        /// The name of the maintenance configuration.
        /// </param>
        public static void Delete(this IMaintenanceConfigurationsOperations operations, string resourceGroupName, string resourceName, string configName)
        {
                ((IMaintenanceConfigurationsOperations)operations).DeleteAsync(resourceGroupName, resourceName, configName).GetAwaiter().GetResult();
        }

        /// <summary>
        /// Deletes a maintenance configuration.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='resourceGroupName'>
        /// The name of the resource group. The name is case insensitive.
        /// </param>
        /// <param name='resourceName'>
        /// The name of the managed cluster resource.
        /// </param>
        /// <param name='configName'>
        /// The name of the maintenance configuration.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        public static async System.Threading.Tasks.Task DeleteAsync(this IMaintenanceConfigurationsOperations operations, string resourceGroupName, string resourceName, string configName, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            (await operations.DeleteWithHttpMessagesAsync(resourceGroupName, resourceName, configName, null, cancellationToken).ConfigureAwait(false)).Dispose();
        }
        /// <summary>
        /// Gets a list of maintenance configurations in the specified managed cluster.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='nextPageLink'>
        /// The NextLink from the previous successful call to List operation.
        /// </param>
        public static Microsoft.Rest.Azure.IPage<MaintenanceConfiguration> ListByManagedClusterNext(this IMaintenanceConfigurationsOperations operations, string nextPageLink)
        {
                return ((IMaintenanceConfigurationsOperations)operations).ListByManagedClusterNextAsync(nextPageLink).GetAwaiter().GetResult();
        }

        /// <summary>
        /// Gets a list of maintenance configurations in the specified managed cluster.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='nextPageLink'>
        /// The NextLink from the previous successful call to List operation.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        public static async System.Threading.Tasks.Task<Microsoft.Rest.Azure.IPage<MaintenanceConfiguration>> ListByManagedClusterNextAsync(this IMaintenanceConfigurationsOperations operations, string nextPageLink, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            using (var _result = await operations.ListByManagedClusterNextWithHttpMessagesAsync(nextPageLink, null, cancellationToken).ConfigureAwait(false))
            {
                return _result.Body;
            }
        }
    }
}
