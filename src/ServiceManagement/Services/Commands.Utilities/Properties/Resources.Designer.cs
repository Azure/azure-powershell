//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34014
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Microsoft.WindowsAzure.Commands.Utilities.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Microsoft.WindowsAzure.Commands.Utilities.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The remote server returned an error: (401) Unauthorized..
        /// </summary>
        public static string AccessDeniedExceptionMessage {
            get {
                return ResourceManager.GetString("AccessDeniedExceptionMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Account &quot;{0}&quot; has been added..
        /// </summary>
        public static string AddAccountAdded {
            get {
                return ResourceManager.GetString("AddAccountAdded", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to To switch to a different subscription, please use Select-AzureSubscription..
        /// </summary>
        public static string AddAccountChangeSubscription {
            get {
                return ResourceManager.GetString("AddAccountChangeSubscription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Subscription &quot;{0}&quot; is selected as the default subscription..
        /// </summary>
        public static string AddAccountShowDefaultSubscription {
            get {
                return ResourceManager.GetString("AddAccountShowDefaultSubscription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to To view all the subscriptions, please use Get-AzureSubscription..
        /// </summary>
        public static string AddAccountViewSubscriptions {
            get {
                return ResourceManager.GetString("AddAccountViewSubscriptions", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Add-On {0} is created successfully..
        /// </summary>
        public static string AddOnCreatedMessage {
            get {
                return ResourceManager.GetString("AddOnCreatedMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Add-on name {0} is already used..
        /// </summary>
        public static string AddOnNameAlreadyUsed {
            get {
                return ResourceManager.GetString("AddOnNameAlreadyUsed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Add-On {0} not found..
        /// </summary>
        public static string AddOnNotFound {
            get {
                return ResourceManager.GetString("AddOnNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Add-on {0} is removed successfully..
        /// </summary>
        public static string AddOnRemovedMessage {
            get {
                return ResourceManager.GetString("AddOnRemovedMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Add-On {0} is updated successfully..
        /// </summary>
        public static string AddOnUpdatedMessage {
            get {
                return ResourceManager.GetString("AddOnUpdatedMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to http://www.windowsazure.com/en-us/store/service/?id={0}.
        /// </summary>
        public static string AddOnUrl {
            get {
                return ResourceManager.GetString("AddOnUrl", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Role has been created at {0}\{1}..
        /// </summary>
        public static string AddRoleMessageCreate {
            get {
                return ResourceManager.GetString("AddRoleMessageCreate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Role has been created at {0}\{1}. For easy access to Microsoft Azure services from your application code, install the Microsoft Azure client library for Node.js by running ‘npm install azure’..
        /// </summary>
        public static string AddRoleMessageCreateNode {
            get {
                return ResourceManager.GetString("AddRoleMessageCreateNode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Role has been created at {0}\{1}. For easy access to Microsoft Azure services from your application code, install the Microsoft Azure client library for PHP by running &quot;pear WindowsAzure/WindowsAzure&quot;..
        /// </summary>
        public static string AddRoleMessageCreatePHP {
            get {
                return ResourceManager.GetString("AddRoleMessageCreatePHP", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to set role permissions. Please give the &apos;Network Service&apos; user &apos;Read &amp; execute&apos; and &apos;Modify&apos; permissions to the role folder, or run PowerShell as an Administrator.
        /// </summary>
        public static string AddRoleMessageInsufficientPermissions {
            get {
                return ResourceManager.GetString("AddRoleMessageInsufficientPermissions", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A role name &apos;{0}&apos; already exists.
        /// </summary>
        public static string AddRoleMessageRoleExists {
            get {
                return ResourceManager.GetString("AddRoleMessageRoleExists", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Please provide webspace name as well..
        /// </summary>
        public static string Argument_WebSpaceMissing {
            get {
                return ResourceManager.GetString("Argument_WebSpaceMissing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Windows Azure Powershell\.
        /// </summary>
        public static string AzureDirectory {
            get {
                return ResourceManager.GetString("AzureDirectory", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Windows Azure Powershell.
        /// </summary>
        public static string AzureDirectoryName {
            get {
                return ResourceManager.GetString("AzureDirectoryName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Emulator.
        /// </summary>
        public static string AzureEmulatorDirectory {
            get {
                return ResourceManager.GetString("AzureEmulatorDirectory", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Azure Emulator is not installed and is required.
        /// </summary>
        public static string AzureEmulatorNotInstalledMessage {
            get {
                return ResourceManager.GetString("AzureEmulatorNotInstalledMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You must run PowerShell from an elevated PowerShell window to use the Azure Emulator. Please restart your PowerShell window as an administrator..
        /// </summary>
        public static string AzureEmulatorNotRunningElevetaed {
            get {
                return ResourceManager.GetString("AzureEmulatorNotRunningElevetaed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SOFTWARE\Microsoft\Windows Azure Emulator.
        /// </summary>
        public static string AzureEmulatorRegistryKey {
            get {
                return ResourceManager.GetString("AzureEmulatorRegistryKey", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to https://manage.windowsazure.com.
        /// </summary>
        public static string AzurePortalUrl {
            get {
                return ResourceManager.GetString("AzurePortalUrl", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to AZURE_PORTAL_URL.
        /// </summary>
        public static string AzurePortalUrlEnv {
            get {
                return ResourceManager.GetString("AzurePortalUrlEnv", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Azure SDK\{0}\.
        /// </summary>
        public static string AzureSdkDirectory {
            get {
                return ResourceManager.GetString("AzureSdkDirectory", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Azure SDK Deployment Cmdlets.
        /// </summary>
        public static string AzureSdkDirectoryName {
            get {
                return ResourceManager.GetString("AzureSdkDirectoryName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to InstallPath.
        /// </summary>
        public static string AzureSdkInstallPathRegistryKeyValue {
            get {
                return ResourceManager.GetString("AzureSdkInstallPathRegistryKeyValue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SOFTWARE\Microsoft\Microsoft SDKs\ServiceHosting.
        /// </summary>
        public static string AzureSdkRegistryKeyName {
            get {
                return ResourceManager.GetString("AzureSdkRegistryKeyName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The installed Azure SDK version is not supported. Make sure you version is {0}.
        /// </summary>
        public static string AzureSdkVersionNotSupported {
            get {
                return ResourceManager.GetString("AzureSdkVersionNotSupported", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Azure Authoring Tools are not installed and are required.
        /// </summary>
        public static string AzureToolsNotInstalledMessage {
            get {
                return ResourceManager.GetString("AzureToolsNotInstalledMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Base Uri was empty..
        /// </summary>
        public static string BaseUriEmpty {
            get {
                return ResourceManager.GetString("BaseUriEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} begin processing without ParameterSet..
        /// </summary>
        public static string BeginProcessingWithoutParameterSetLog {
            get {
                return ResourceManager.GetString("BeginProcessingWithoutParameterSetLog", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} begin processing with ParameterSet &apos;{1}&apos;..
        /// </summary>
        public static string BeginProcessingWithParameterSetLog {
            get {
                return ResourceManager.GetString("BeginProcessingWithParameterSetLog", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Blob with the name {0} already exists in the account..
        /// </summary>
        public static string BlobAlreadyExistsInTheAccount {
            get {
                return ResourceManager.GetString("BlobAlreadyExistsInTheAccount", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to https://{0}.blob.core.windows.net/.
        /// </summary>
        public static string BlobEndpointUri {
            get {
                return ResourceManager.GetString("BlobEndpointUri", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to AZURE_BLOBSTORAGE_TEMPLATE.
        /// </summary>
        public static string BlobEndpointUriEnv {
            get {
                return ResourceManager.GetString("BlobEndpointUriEnv", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Your ServiceDefinition.csdef uses the cache runtime of role &apos;{0}&apos; which might not work correctly with &apos;{1}&apos; .
        /// </summary>
        public static string CacheMismatchMessage {
            get {
                return ResourceManager.GetString("CacheMismatchMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to CACHERUNTIMEURL.
        /// </summary>
        public static string CacheRuntimeUrl {
            get {
                return ResourceManager.GetString("CacheRuntimeUrl", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to cache.
        /// </summary>
        public static string CacheRuntimeValue {
            get {
                return ResourceManager.GetString("CacheRuntimeValue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to CacheRuntimeVersion.
        /// </summary>
        public static string CacheRuntimeVersionKey {
            get {
                return ResourceManager.GetString("CacheRuntimeVersionKey", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Scaffolding for Cache Role is not supported any more..
        /// </summary>
        public static string CacheScaffoldingIsNotSupport {
            get {
                return ResourceManager.GetString("CacheScaffoldingIsNotSupport", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Installing caching version {0} for Role &apos;{1}&apos; (the caching version locally installed is: {2}).
        /// </summary>
        public static string CacheVersionWarningText {
            get {
                return ResourceManager.GetString("CacheVersionWarningText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Microsoft.WindowsAzure.Plugins.Caching.ConfigStoreConnectionString.
        /// </summary>
        public static string CachingConfigStoreConnectionStringSettingName {
            get {
                return ResourceManager.GetString("CachingConfigStoreConnectionStringSettingName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot find {0} with name {1}..
        /// </summary>
        public static string CannotFind {
            get {
                return ResourceManager.GetString("CannotFind", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Deployment for service {0} with {1} slot doesn&apos;t exist.
        /// </summary>
        public static string CannotFindDeployment {
            get {
                return ResourceManager.GetString("CannotFindDeployment", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Can&apos;t find valid Microsoft Azure role in current directory {0}.
        /// </summary>
        public static string CannotFindRole {
            get {
                return ResourceManager.GetString("CannotFindRole", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to service {0} configuration file (ServiceConfiguration.Cloud.cscfg) is either null or doesn&apos;t exist.
        /// </summary>
        public static string CannotFindServiceConfigurationFile {
            get {
                return ResourceManager.GetString("CannotFindServiceConfigurationFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid service path! Cannot locate ServiceDefinition.csdef in current folder or parent folders..
        /// </summary>
        public static string CannotFindServiceRoot {
            get {
                return ResourceManager.GetString("CannotFindServiceRoot", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The subscription named {0} with id {1} is not currently imported. You must import this subscription before it can be updated..
        /// </summary>
        public static string CannotUpdateUnknownSubscription {
            get {
                return ResourceManager.GetString("CannotUpdateUnknownSubscription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ManagementCertificate.
        /// </summary>
        public static string CertificateElementName {
            get {
                return ResourceManager.GetString("CertificateElementName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to certificate.pfx.
        /// </summary>
        public static string CertificateFileName {
            get {
                return ResourceManager.GetString("CertificateFileName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Certificate imported into CurrentUser\My\{0}.
        /// </summary>
        public static string CertificateImportedMessage {
            get {
                return ResourceManager.GetString("CertificateImportedMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No certificate was found in the certificate store with thumbprint {0}.
        /// </summary>
        public static string CertificateNotFoundInStore {
            get {
                return ResourceManager.GetString("CertificateNotFoundInStore", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No certificate was found in the certificate store with thumbprint {0}.
        /// </summary>
        public static string CertificateNotFoundInStore1 {
            get {
                return ResourceManager.GetString("CertificateNotFoundInStore1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Your account does not have access to the private key for certificate {0}.
        /// </summary>
        public static string CertificatePrivateKeyAccessError {
            get {
                return ResourceManager.GetString("CertificatePrivateKeyAccessError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} {1} deployment for {2} service.
        /// </summary>
        public static string ChangeDeploymentStateWaitMessage {
            get {
                return ResourceManager.GetString("ChangeDeploymentStateWaitMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cloud service {0} is in {1} state..
        /// </summary>
        public static string ChangeDeploymentStatusCompleteMessage {
            get {
                return ResourceManager.GetString("ChangeDeploymentStatusCompleteMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Changing/Removing public environment &apos;{0}&apos; is not allowed..
        /// </summary>
        public static string ChangePublicEnvironmentMessage {
            get {
                return ResourceManager.GetString("ChangePublicEnvironmentMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Service {0} is set to value {1}.
        /// </summary>
        public static string ChangeSettingsElementMessage {
            get {
                return ResourceManager.GetString("ChangeSettingsElementMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Choose which publish settings file to use:.
        /// </summary>
        public static string ChoosePublishSettingsFile {
            get {
                return ResourceManager.GetString("ChoosePublishSettingsFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Microsoft.WindowsAzure.Plugins.Caching.ClientDiagnosticLevel.
        /// </summary>
        public static string ClientDiagnosticLevelName {
            get {
                return ResourceManager.GetString("ClientDiagnosticLevelName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 1.
        /// </summary>
        public static string ClientDiagnosticLevelValue {
            get {
                return ResourceManager.GetString("ClientDiagnosticLevelValue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to cloud_package.cspkg.
        /// </summary>
        public static string CloudPackageFileName {
            get {
                return ResourceManager.GetString("CloudPackageFileName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ServiceConfiguration.Cloud.cscfg.
        /// </summary>
        public static string CloudServiceConfigurationFileName {
            get {
                return ResourceManager.GetString("CloudServiceConfigurationFileName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Add-ons for {0}.
        /// </summary>
        public static string CloudServiceDescription {
            get {
                return ResourceManager.GetString("CloudServiceDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Communication could not be established. This could be due to an invalid subscription ID. Note that subscription IDs are case sensitive..
        /// </summary>
        public static string CommunicationCouldNotBeEstablished {
            get {
                return ResourceManager.GetString("CommunicationCouldNotBeEstablished", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Complete.
        /// </summary>
        public static string CompleteMessage {
            get {
                return ResourceManager.GetString("CompleteMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Complete.
        /// </summary>
        public static string CompleteMessage1 {
            get {
                return ResourceManager.GetString("CompleteMessage1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to config.json.
        /// </summary>
        public static string ConfigurationFileName {
            get {
                return ResourceManager.GetString("ConfigurationFileName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to VirtualMachine creation failed..
        /// </summary>
        public static string CreateFailedErrorMessage {
            get {
                return ResourceManager.GetString("CreateFailedErrorMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Creating the website failed. If this is the first website for this subscription, please create it using the management portal instead..
        /// </summary>
        public static string CreateWebsiteFailed {
            get {
                return ResourceManager.GetString("CreateWebsiteFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Creating {0} package....
        /// </summary>
        public static string CreatingPackageMessage {
            get {
                return ResourceManager.GetString("CreatingPackageMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to CsEncrypt.exe failed to generate a certificate ({0}).
        /// </summary>
        public static string CsEncrypt_CreateCertificate_CreationFailed {
            get {
                return ResourceManager.GetString("CsEncrypt_CreateCertificate_CreationFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to New-PasswordEncryptionCertificate -FriendlyName &quot;Microsoft Azure Certificate&quot;.
        /// </summary>
        public static string CsEncryptCreateCertificateArg {
            get {
                return ResourceManager.GetString("CsEncryptCreateCertificateArg", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to csencrypt.exe.
        /// </summary>
        public static string CsEncryptExe {
            get {
                return ResourceManager.GetString("CsEncryptExe", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &quot;{0}\ServiceDefinition.csdef&quot; /out:&quot;{0}\cloud_package.cspkg&quot; {1} {2}.
        /// </summary>
        public static string CsPackCloudArg {
            get {
                return ResourceManager.GetString("CsPackCloudArg", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to cspack.exe.
        /// </summary>
        public static string CsPackExe {
            get {
                return ResourceManager.GetString("CsPackExe", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to cspack.exe failed with no detail error information..
        /// </summary>
        public static string CsPackExeGenericFailure {
            get {
                return ResourceManager.GetString("CsPackExeGenericFailure", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &quot;{0}\ServiceDefinition.csdef&quot; /out:&quot;{0}\local_package.csx&quot; {1} {2} /copyOnly.
        /// </summary>
        public static string CsPackLocalArg {
            get {
                return ResourceManager.GetString("CsPackLocalArg", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An unexpected failure occurred.  Details:
        ///{0}.
        /// </summary>
        public static string CsRun_StartCsRunProcess_UnexpectedFailure {
            get {
                return ResourceManager.GetString("CsRun_StartCsRunProcess_UnexpectedFailure", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to csrun.exe.
        /// </summary>
        public static string CsRunExe {
            get {
                return ResourceManager.GetString("CsRunExe", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to /usefullemulator.
        /// </summary>
        public static string CsRunFullEmulatorArg {
            get {
                return ResourceManager.GetString("CsRunFullEmulatorArg", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to /launchbrowser.
        /// </summary>
        public static string CsRunLanuchBrowserArg {
            get {
                return ResourceManager.GetString("CsRunLanuchBrowserArg", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to /removeall.
        /// </summary>
        public static string CsRunRemoveAllDeploymentsArg {
            get {
                return ResourceManager.GetString("CsRunRemoveAllDeploymentsArg", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to /remove:{0}.
        /// </summary>
        public static string CsRunRemoveDeploymentArg {
            get {
                return ResourceManager.GetString("CsRunRemoveDeploymentArg", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to /devfabric.
        /// </summary>
        public static string CsRunStartComputeEmulatorArg {
            get {
                return ResourceManager.GetString("CsRunStartComputeEmulatorArg", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to /devstore.
        /// </summary>
        public static string CsRunStartStorageEmulatorArg {
            get {
                return ResourceManager.GetString("CsRunStartStorageEmulatorArg", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to /devfabric:shutdown.
        /// </summary>
        public static string CsRunStopEmulatorArg {
            get {
                return ResourceManager.GetString("CsRunStopEmulatorArg", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to /update:{0};{1}.
        /// </summary>
        public static string CsRunUpdateDeploymentArg {
            get {
                return ResourceManager.GetString("CsRunUpdateDeploymentArg", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Microsoft.ApplicationServer.Caching.DataCacheClientsSection, Microsoft.ApplicationServer.Caching.Core.
        /// </summary>
        public static string DataCacheClientsType {
            get {
                return ResourceManager.GetString("DataCacheClientsType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to //blobcontainer[@datacenter=&apos;{0}&apos;].
        /// </summary>
        public static string DatacenterBlobQuery {
            get {
                return ResourceManager.GetString("DatacenterBlobQuery", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Setting: {0} as the default and current subscription. To view other subscriptions use Get-AzureSubscription.
        /// </summary>
        public static string DefaultAndCurrentContext_Subscription {
            get {
                return ResourceManager.GetString("DefaultAndCurrentContext.Subscription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to none.
        /// </summary>
        public static string DefaultFileVersion {
            get {
                return ResourceManager.GetString("DefaultFileVersion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to There are no hostnames which could be used for validation..
        /// </summary>
        public static string DefaultHostnamesValidation {
            get {
                return ResourceManager.GetString("DefaultHostnamesValidation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 8080.
        /// </summary>
        public static string DefaultPort {
            get {
                return ResourceManager.GetString("DefaultPort", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 1000.
        /// </summary>
        public static string DefaultRoleCachingInMB {
            get {
                return ResourceManager.GetString("DefaultRoleCachingInMB", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Auto.
        /// </summary>
        public static string DefaultUpgradeMode {
            get {
                return ResourceManager.GetString("DefaultUpgradeMode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 80.
        /// </summary>
        public static string DefaultWebPort {
            get {
                return ResourceManager.GetString("DefaultWebPort", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Delete.
        /// </summary>
        public static string Delete {
            get {
                return ResourceManager.GetString("Delete", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The {0} slot for service {1} is already in {2} state.
        /// </summary>
        public static string DeploymentAlreadyInState {
            get {
                return ResourceManager.GetString("DeploymentAlreadyInState", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The deployment in {0} slot for service {1} is removed.
        /// </summary>
        public static string DeploymentRemovedMessage {
            get {
                return ResourceManager.GetString("DeploymentRemovedMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Microsoft.WindowsAzure.Plugins.Caching.DiagnosticLevel.
        /// </summary>
        public static string DiagnosticLevelName {
            get {
                return ResourceManager.GetString("DiagnosticLevelName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 1.
        /// </summary>
        public static string DiagnosticLevelValue {
            get {
                return ResourceManager.GetString("DiagnosticLevelValue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The key to add already exists in the dictionary..
        /// </summary>
        public static string DictionaryAddAlreadyContainsKey {
            get {
                return ResourceManager.GetString("DictionaryAddAlreadyContainsKey", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The array index cannot be less than zero..
        /// </summary>
        public static string DictionaryCopyToArrayIndexLessThanZero {
            get {
                return ResourceManager.GetString("DictionaryCopyToArrayIndexLessThanZero", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The supplied array does not have enough room to contain the copied elements..
        /// </summary>
        public static string DictionaryCopyToArrayTooShort {
            get {
                return ResourceManager.GetString("DictionaryCopyToArrayTooShort", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The provided dns {0} doesn&apos;t exist.
        /// </summary>
        public static string DnsDoesNotExist {
            get {
                return ResourceManager.GetString("DnsDoesNotExist", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to EMULATED.
        /// </summary>
        public static string EmulatedKey {
            get {
                return ResourceManager.GetString("EmulatedKey", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to UseDevelopmentStorage=true.
        /// </summary>
        public static string EmulatorConnectionString {
            get {
                return ResourceManager.GetString("EmulatorConnectionString", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ((http|tcp)://[0-9.:/]*).
        /// </summary>
        public static string EmulatorOutputSitesRegex {
            get {
                return ResourceManager.GetString("EmulatorOutputSitesRegex", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Role is running at {0}.
        /// </summary>
        public static string EmulatorRoleRunningMessage {
            get {
                return ResourceManager.GetString("EmulatorRoleRunningMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot enable Remote Desktop because there are no roles.
        /// </summary>
        public static string EnableAzureRemoteDesktop_Enable_NoRoles {
            get {
                return ResourceManager.GetString("EnableAzureRemoteDesktop_Enable_NoRoles", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Password is not complex enough. The password should include at least three different kinds of characters (uppercase, lowercase, digits, and other symbols) and be at least six characters long..
        /// </summary>
        public static string EnableAzureRemoteDesktopCommand_Enable_NeedComplexPassword {
            get {
                return ResourceManager.GetString("EnableAzureRemoteDesktopCommand_Enable_NeedComplexPassword", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Memcache is enabled for role &apos;{0}&apos; using cache role &apos;{1}&apos; to connect use server name &apos;localhost_{0}&apos; with port {2}..
        /// </summary>
        public static string EnableMemcacheMessage {
            get {
                return ResourceManager.GetString("EnableMemcacheMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Microsoft Azure Certificate.
        /// </summary>
        public static string EnableRemoteDesktop_FriendlyCertificateName {
            get {
                return ResourceManager.GetString("EnableRemoteDesktop_FriendlyCertificateName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Endpoint can&apos;t be retrieved for storage account.
        /// </summary>
        public static string EndPointNotFoundForBlobStorage {
            get {
                return ResourceManager.GetString("EndPointNotFoundForBlobStorage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} end processing..
        /// </summary>
        public static string EndProcessingLog {
            get {
                return ResourceManager.GetString("EndProcessingLog", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The environment &apos;{0}&apos; already exists..
        /// </summary>
        public static string EnvironmentExists {
            get {
                return ResourceManager.GetString("EnvironmentExists", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The environment name &apos;{0}&apos; is not found..
        /// </summary>
        public static string EnvironmentNotFound {
            get {
                return ResourceManager.GetString("EnvironmentNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to environments.xml.
        /// </summary>
        public static string EnvironmentsFileName {
            get {
                return ResourceManager.GetString("EnvironmentsFileName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error creating CloudService.
        /// </summary>
        public static string ErrorCreatingCloudService {
            get {
                return ResourceManager.GetString("ErrorCreatingCloudService", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error creating StaticIPAddressPool.
        /// </summary>
        public static string ErrorCreatingStaticIPAddressPool {
            get {
                return ResourceManager.GetString("ErrorCreatingStaticIPAddressPool", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error creating VirtualMachine.
        /// </summary>
        public static string ErrorCreatingVirtualMachine {
            get {
                return ResourceManager.GetString("ErrorCreatingVirtualMachine", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error creating VMNetwork.
        /// </summary>
        public static string ErrorCreatingVMNetwork {
            get {
                return ResourceManager.GetString("ErrorCreatingVMNetwork", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error creating VMRole.
        /// </summary>
        public static string ErrorCreatingVMRole {
            get {
                return ResourceManager.GetString("ErrorCreatingVMRole", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error creating VMSubnet.
        /// </summary>
        public static string ErrorCreatingVMSubnet {
            get {
                return ResourceManager.GetString("ErrorCreatingVMSubnet", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to download available runtimes for location &apos;{0}&apos;.
        /// </summary>
        public static string ErrorRetrievingRuntimesForLocation {
            get {
                return ResourceManager.GetString("ErrorRetrievingRuntimesForLocation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error updating VirtualMachine.
        /// </summary>
        public static string ErrorUpdatingVirtualMachine {
            get {
                return ResourceManager.GetString("ErrorUpdatingVirtualMachine", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Your Microsoft Azure credential in the Windows PowerShell session has expired. Please use Add-AzureAccount to login again..
        /// </summary>
        public static string ExpiredRefreshToken {
            get {
                return ResourceManager.GetString("ExpiredRefreshToken", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Job Id {0} failed. Error: {1}, ExceptionDetails: {2}.
        /// </summary>
        public static string FailedJobErrorMessage {
            get {
                return ResourceManager.GetString("FailedJobErrorMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Could not delete emulator package &apos;{0}&apos; for the service. Please ensure that no files or folders in the package are open in other programs.
        /// </summary>
        public static string FailedToCleanUpLocalPackage {
            get {
                return ResourceManager.GetString("FailedToCleanUpLocalPackage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to generate package. Error: {0}.&quot;.
        /// </summary>
        public static string FailedToCreatePackage {
            get {
                return ResourceManager.GetString("FailedToCreatePackage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The HTTP request was forbidden with client authentication scheme &apos;Anonymous&apos;..
        /// </summary>
        public static string FirstPurchaseErrorMessage {
            get {
                return ResourceManager.GetString("FirstPurchaseErrorMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This add-on requires you to purchase the first instance through the Microsoft Azure Portal. Subsequent purchases can be performed through PowerShell..
        /// </summary>
        public static string FirstPurchaseMessage {
            get {
                return ResourceManager.GetString("FirstPurchaseMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Operation Status:.
        /// </summary>
        public static string GatewayOperationStatus {
            get {
                return ResourceManager.GetString("GatewayOperationStatus", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Resources\Scaffolding\General.
        /// </summary>
        public static string GeneralScaffolding {
            get {
                return ResourceManager.GetString("GeneralScaffolding", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Getting all available Microsoft Azure Add-Ons, this may take few minutes....
        /// </summary>
        public static string GetAllAddOnsWaitMessage {
            get {
                return ResourceManager.GetString("GetAllAddOnsWaitMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Name{0}Primary Key{0}Seconday Key.
        /// </summary>
        public static string GetStorageKeysHeader {
            get {
                return ResourceManager.GetString("GetStorageKeysHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Git not found. Please install git and place it in your command line path..
        /// </summary>
        public static string GitNotFound {
            get {
                return ResourceManager.GetString("GitNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Could not find publish settings. Please run Import-AzurePublishSettingsFile..
        /// </summary>
        public static string GlobalSettingsManager_Load_PublishSettingsNotFound {
            get {
                return ResourceManager.GetString("GlobalSettingsManager_Load_PublishSettingsNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Could not find publish settings. Please run Import-AzurePublishSettingsFile..
        /// </summary>
        public static string GlobalSettingsManager_Load_PublishSettingsNotFound1 {
            get {
                return ResourceManager.GetString("GlobalSettingsManager_Load_PublishSettingsNotFound1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to iisnode.dll.
        /// </summary>
        public static string IISNodeDll {
            get {
                return ResourceManager.GetString("IISNodeDll", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to iisnode.
        /// </summary>
        public static string IISNodeEngineKey {
            get {
                return ResourceManager.GetString("IISNodeEngineKey", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to iisnode-dev\\release\\x64.
        /// </summary>
        public static string IISNodePath {
            get {
                return ResourceManager.GetString("IISNodePath", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to iisnode.
        /// </summary>
        public static string IISNodeRuntimeValue {
            get {
                return ResourceManager.GetString("IISNodeRuntimeValue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Installing IISNode version {0} in Azure for WebRole &apos;{1}&apos; (the version locally installed is: {2}).
        /// </summary>
        public static string IISNodeVersionWarningText {
            get {
                return ResourceManager.GetString("IISNodeVersionWarningText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Illegal characters in path..
        /// </summary>
        public static string IllegalPath {
            get {
                return ResourceManager.GetString("IllegalPath", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Illegal characters in path..
        /// </summary>
        public static string IllegalPath1 {
            get {
                return ResourceManager.GetString("IllegalPath1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Internal Server Error.
        /// </summary>
        public static string InternalServerErrorMessage {
            get {
                return ResourceManager.GetString("InternalServerErrorMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot enable memcach protocol on a cache worker role {0}..
        /// </summary>
        public static string InvalidCacheRoleName {
            get {
                return ResourceManager.GetString("InvalidCacheRoleName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid certificate format. Publish settings may be corrupted. Use Get-AzurePublishSettingsFile to download updated settings.
        /// </summary>
        public static string InvalidCertificate {
            get {
                return ResourceManager.GetString("InvalidCertificate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid certificate format. Publish settings may be corrupted. Use Get-AzurePublishSettingsFile to download updated settings.
        /// </summary>
        public static string InvalidCertificate1 {
            get {
                return ResourceManager.GetString("InvalidCertificate1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid certificate format..
        /// </summary>
        public static string InvalidCertificateSingle {
            get {
                return ResourceManager.GetString("InvalidCertificateSingle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The provided configuration path is invalid or doesn&apos;t exist.
        /// </summary>
        public static string InvalidConfigPath {
            get {
                return ResourceManager.GetString("InvalidConfigPath", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The country name is invalid, please use a valid two character country code, as described in ISO 3166-1 alpha-2..
        /// </summary>
        public static string InvalidCountryNameMessage {
            get {
                return ResourceManager.GetString("InvalidCountryNameMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The management certificate of the current subscription is invalid. Use Set-AzureSubscription to fix the management certificate or use Select-AzureSubscription to use a different subscription..
        /// </summary>
        public static string InvalidCurrentSuscriptionCertificate {
            get {
                return ResourceManager.GetString("InvalidCurrentSuscriptionCertificate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No default subscription has been designated. Use Select-AzureSubscription -Default &lt;subscriptionName&gt; to set the default subscription..
        /// </summary>
        public static string InvalidDefaultSubscription {
            get {
                return ResourceManager.GetString("InvalidDefaultSubscription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Deployment with {0} does not exist.
        /// </summary>
        public static string InvalidDeployment {
            get {
                return ResourceManager.GetString("InvalidDeployment", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The deployment slot name {0} is invalid. Slot name must be either &quot;Staging&quot; or &quot;Production&quot;..
        /// </summary>
        public static string InvalidDeploymentSlot {
            get {
                return ResourceManager.GetString("InvalidDeploymentSlot", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &quot;{0}&quot; is an invalid DNS name for {1}.
        /// </summary>
        public static string InvalidDnsName {
            get {
                return ResourceManager.GetString("InvalidDnsName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid service endpoint..
        /// </summary>
        public static string InvalidEndpoint {
            get {
                return ResourceManager.GetString("InvalidEndpoint", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The provided file in {0} must be have {1} extension.
        /// </summary>
        public static string InvalidFileExtension {
            get {
                return ResourceManager.GetString("InvalidFileExtension", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to File {0} has invalid characters.
        /// </summary>
        public static string InvalidFileName {
            get {
                return ResourceManager.GetString("InvalidFileName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You must create your git publishing credentials using the Microsoft Azure portal.
        ///Please follow these steps in the portal:
        ///1. On the left side open &quot;Web Sites&quot;
        ///2. Click on any website
        ///3. Choose &quot;Setup Git Publishing&quot; or &quot;Reset deployment credentials&quot;
        ///4. Back in the PowerShell window, rerun this command by typing &quot;New-AzureWebSite {site name} -Git -PublishingUsername {username}.
        /// </summary>
        public static string InvalidGitCredentials {
            get {
                return ResourceManager.GetString("InvalidGitCredentials", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The value {0} provided is not a valid GUID. Please provide a valid GUID..
        /// </summary>
        public static string InvalidGuid {
            get {
                return ResourceManager.GetString("InvalidGuid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified hostname does not exist. Please specify a valid hostname for the site..
        /// </summary>
        public static string InvalidHostnameValidation {
            get {
                return ResourceManager.GetString("InvalidHostnameValidation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Role {0} instances must be greater than or equal 0 and less than or equal 20.
        /// </summary>
        public static string InvalidInstancesCount {
            get {
                return ResourceManager.GetString("InvalidInstancesCount", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to There was an error creating your webjob. Please make sure that the script is in the root folder of the zip file..
        /// </summary>
        public static string InvalidJobFile {
            get {
                return ResourceManager.GetString("InvalidJobFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot create instance of management client type {0}. It does not have the expected constructor..
        /// </summary>
        public static string InvalidManagementClientType {
            get {
                return ResourceManager.GetString("InvalidManagementClientType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Could not download a valid runtime manifest, Please check your internet connection and try again..
        /// </summary>
        public static string InvalidManifestError {
            get {
                return ResourceManager.GetString("InvalidManifestError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The account {0} was not found. Please specify a valid account name..
        /// </summary>
        public static string InvalidMediaServicesAccount {
            get {
                return ResourceManager.GetString("InvalidMediaServicesAccount", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The provided name &quot;{0}&quot; does not match the service bus namespace naming rules..
        /// </summary>
        public static string InvalidNamespaceName {
            get {
                return ResourceManager.GetString("InvalidNamespaceName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Value cannot be null. Parameter name: &apos;{0}&apos;.
        /// </summary>
        public static string InvalidNullArgument {
            get {
                return ResourceManager.GetString("InvalidNullArgument", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} is invalid or empty.
        /// </summary>
        public static string InvalidOrEmptyArgumentMessage {
            get {
                return ResourceManager.GetString("InvalidOrEmptyArgumentMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The provided package path is invalid or doesn&apos;t exist.
        /// </summary>
        public static string InvalidPackagePath {
            get {
                return ResourceManager.GetString("InvalidPackagePath", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;{0}&apos; is an invalid parameter set name..
        /// </summary>
        public static string InvalidParameterSetName {
            get {
                return ResourceManager.GetString("InvalidParameterSetName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} doesn&apos;t exist in {1} or you&apos;ve not passed valid value for it.
        /// </summary>
        public static string InvalidPath {
            get {
                return ResourceManager.GetString("InvalidPath", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Path {0} has invalid characters.
        /// </summary>
        public static string InvalidPathName {
            get {
                return ResourceManager.GetString("InvalidPathName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The provided publish settings file {0} has invalid content. Please get valid by running cmdlet Get-AzurePublishSettingsFile.
        /// </summary>
        public static string InvalidPublishSettingsSchema {
            get {
                return ResourceManager.GetString("InvalidPublishSettingsSchema", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The provided publish settings file {0} has invalid content. Please get valid by running cmdlet Get-AzurePublishSettingsFile.
        /// </summary>
        public static string InvalidPublishSettingsSchema1 {
            get {
                return ResourceManager.GetString("InvalidPublishSettingsSchema1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The provided role name &quot;{0}&quot; has invalid characters.
        /// </summary>
        public static string InvalidRoleNameMessage {
            get {
                return ResourceManager.GetString("InvalidRoleNameMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A valid name for the service root folder is required.
        /// </summary>
        public static string InvalidRootNameMessage {
            get {
                return ResourceManager.GetString("InvalidRootNameMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} is not a recognized runtime type.
        /// </summary>
        public static string InvalidRuntimeError {
            get {
                return ResourceManager.GetString("InvalidRuntimeError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A valid language is required.
        /// </summary>
        public static string InvalidScaffoldingLanguageArg {
            get {
                return ResourceManager.GetString("InvalidScaffoldingLanguageArg", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No subscription is currently selected. Use Select-Subscription to activate a subscription..
        /// </summary>
        public static string InvalidSelectedSubscription {
            get {
                return ResourceManager.GetString("InvalidSelectedSubscription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The provided location &quot;{0}&quot; does not exist in the available locations use Get-AzureSBLocation for listing available locations..
        /// </summary>
        public static string InvalidServiceBusLocation {
            get {
                return ResourceManager.GetString("InvalidServiceBusLocation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Please provide a service name or run this command from inside a service project directory..
        /// </summary>
        public static string InvalidServiceName {
            get {
                return ResourceManager.GetString("InvalidServiceName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You must provide valid value for {0}.
        /// </summary>
        public static string InvalidServiceSettingElement {
            get {
                return ResourceManager.GetString("InvalidServiceSettingElement", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You must provide valid value for {0}.
        /// </summary>
        public static string InvalidServiceSettingElement1 {
            get {
                return ResourceManager.GetString("InvalidServiceSettingElement1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to settings.json is invalid or doesn&apos;t exist.
        /// </summary>
        public static string InvalidServiceSettingMessage {
            get {
                return ResourceManager.GetString("InvalidServiceSettingMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The subscription named &apos;{0}&apos; cannot be found. Use Set-AzureSubscription to initialize the subscription data..
        /// </summary>
        public static string InvalidSubscription {
            get {
                return ResourceManager.GetString("InvalidSubscription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The provided subscription if {0} is not valid.
        /// </summary>
        public static string InvalidSubscriptionId {
            get {
                return ResourceManager.GetString("InvalidSubscriptionId", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Must specify a non-null subscription name..
        /// </summary>
        public static string InvalidSubscriptionName {
            get {
                return ResourceManager.GetString("InvalidSubscriptionName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A valid subscription name is required. This can be provided using the  -Subscription parameter or by setting the subscription via the Set-AzureSubscription cmdlet.
        /// </summary>
        public static string InvalidSubscriptionNameMessage {
            get {
                return ResourceManager.GetString("InvalidSubscriptionNameMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The provided subscriptions file {0} has invalid content..
        /// </summary>
        public static string InvalidSubscriptionsDataSchema {
            get {
                return ResourceManager.GetString("InvalidSubscriptionsDataSchema", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Please run Add-AzureAccount to finish setting up the subscription..
        /// </summary>
        public static string InvalidSubscriptionState {
            get {
                return ResourceManager.GetString("InvalidSubscriptionState", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Role {0} VM size should be ExtraSmall, Small, Medium, Large or ExtraLarge..
        /// </summary>
        public static string InvalidVMSize {
            get {
                return ResourceManager.GetString("InvalidVMSize", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The web job file must have *.zip extension.
        /// </summary>
        public static string InvalidWebJobFile {
            get {
                return ResourceManager.GetString("InvalidWebJobFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Singleton option works for continuous jobs only..
        /// </summary>
        public static string InvalidWebJobSingleton {
            get {
                return ResourceManager.GetString("InvalidWebJobSingleton", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The website {0} was not found. Please specify a valid website name..
        /// </summary>
        public static string InvalidWebsite {
            get {
                return ResourceManager.GetString("InvalidWebsite", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No job for id: {0} was found..
        /// </summary>
        public static string JobNotFound {
            get {
                return ResourceManager.GetString("JobNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to engines.
        /// </summary>
        public static string JsonEnginesSectionName {
            get {
                return ResourceManager.GetString("JsonEnginesSectionName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Scaffolding for this language is not yet supported.
        /// </summary>
        public static string LanguageScaffoldingIsNotSupported {
            get {
                return ResourceManager.GetString("LanguageScaffoldingIsNotSupported", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Link already established.
        /// </summary>
        public static string LinkAlreadyEstablished {
            get {
                return ResourceManager.GetString("LinkAlreadyEstablished", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to local_package.csx.
        /// </summary>
        public static string LocalPackageFileName {
            get {
                return ResourceManager.GetString("LocalPackageFileName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ServiceConfiguration.Local.cscfg.
        /// </summary>
        public static string LocalServiceConfigurationFileName {
            get {
                return ResourceManager.GetString("LocalServiceConfigurationFileName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Looking for {0} deployment for {1} cloud service....
        /// </summary>
        public static string LookingForDeploymentMessage {
            get {
                return ResourceManager.GetString("LookingForDeploymentMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Looking for cloud service {0}....
        /// </summary>
        public static string LookingForServiceMessage {
            get {
                return ResourceManager.GetString("LookingForServiceMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to managementCertificate.pem.
        /// </summary>
        public static string ManagementCertificateFileName {
            get {
                return ResourceManager.GetString("ManagementCertificateFileName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ?whr={0}.
        /// </summary>
        public static string ManagementPortalRealmFormat {
            get {
                return ResourceManager.GetString("ManagementPortalRealmFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to //baseuri.
        /// </summary>
        public static string ManifestBaseUriQuery {
            get {
                return ResourceManager.GetString("ManifestBaseUriQuery", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to uri.
        /// </summary>
        public static string ManifestBlobUriKey {
            get {
                return ResourceManager.GetString("ManifestBlobUriKey", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to http://api.datamarket.azure.com/CatalogService.svc.
        /// </summary>
        public static string MarketplaceEndpoint {
            get {
                return ResourceManager.GetString("MarketplaceEndpoint", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Multiple Add-Ons found holding name {0}.
        /// </summary>
        public static string MultipleAddOnsFoundMessage {
            get {
                return ResourceManager.GetString("MultipleAddOnsFoundMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Multiple possible publishing users. Please go to the Portal and use the listed deployment user, or click &apos;set/reset deployment credentials&apos; to set up a new user account, then reurn this cmdlet and specify PublishingUsername..
        /// </summary>
        public static string MultiplePublishingUsernames {
            get {
                return ResourceManager.GetString("MultiplePublishingUsernames", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The first publish settings file &quot;{0}&quot; is used. If you want to use another file specify the file name..
        /// </summary>
        public static string MultiplePublishSettingsFilesFoundMessage {
            get {
                return ResourceManager.GetString("MultiplePublishSettingsFilesFoundMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Microsoft.WindowsAzure.Plugins.Caching.NamedCaches.
        /// </summary>
        public static string NamedCacheSettingName {
            get {
                return ResourceManager.GetString("NamedCacheSettingName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {&quot;caches&quot;:[{&quot;name&quot;:&quot;default&quot;,&quot;policy&quot;:{&quot;eviction&quot;:{&quot;type&quot;:0},&quot;expiration&quot;:{&quot;defaultTTL&quot;:10,&quot;isExpirable&quot;:true,&quot;type&quot;:1},&quot;serverNotification&quot;:{&quot;isEnabled&quot;:false}},&quot;secondaries&quot;:0}]}.
        /// </summary>
        public static string NamedCacheSettingValue {
            get {
                return ResourceManager.GetString("NamedCacheSettingValue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A publishing username is required. Please specify one using the argument PublishingUsername..
        /// </summary>
        public static string NeedPublishingUsernames {
            get {
                return ResourceManager.GetString("NeedPublishingUsernames", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to New Add-On Confirmation.
        /// </summary>
        public static string NewAddOnConformation {
            get {
                return ResourceManager.GetString("NewAddOnConformation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to By typing &quot;Yes&quot;, I (a) authorize Microsoft to charge my current payment method on a monthly basis 
        ///for the amount indicated at {0} for {1} until my service is cancelled or terminated, and (b) 
        ///agree to the {2}&apos;s terms of user and privacy statement at {0} and (c) agree to sharing my 
        ///contact information with {2}..
        /// </summary>
        public static string NewMicrosoftAddOnMessage {
            get {
                return ResourceManager.GetString("NewMicrosoftAddOnMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Internal Server Error. This could happen because the namespace name is already used or due to an incorrect location name. Use Get-AzureSBLocation cmdlet to list valid names..
        /// </summary>
        public static string NewNamespaceErrorMessage {
            get {
                return ResourceManager.GetString("NewNamespaceErrorMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to By typing &quot;Yes&quot;, I (a) authorize Microsoft to charge my current payment method on a monthly basis 
        ///for the amount indicated at {0} for {1} until my service is cancelled or terminated, and (b) 
        ///acknowledge the offering is provided by {2}, not Microsoft, and agree to {2}&apos;s terms of 
        ///use and privacy statement at {0} and (c) agree to sharing my contact information with {2}..
        /// </summary>
        public static string NewNonMicrosoftAddOnMessage {
            get {
                return ResourceManager.GetString("NewNonMicrosoftAddOnMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Service has been created at {0}.
        /// </summary>
        public static string NewServiceCreatedMessage {
            get {
                return ResourceManager.GetString("NewServiceCreatedMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No.
        /// </summary>
        public static string No {
            get {
                return ResourceManager.GetString("No", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to There is no access token cached for subscription {0}, user id {1}. Use the Add-AzureAccount cmdlet to log in again and get a token for this subscription..
        /// </summary>
        public static string NoCachedToken {
            get {
                return ResourceManager.GetString("NoCachedToken", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The service does not have any cache worker roles, add one first by running cmdlet Add-AzureCacheWorkerRole..
        /// </summary>
        public static string NoCacheWorkerRoles {
            get {
                return ResourceManager.GetString("NoCacheWorkerRoles", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No clouds available.
        /// </summary>
        public static string NoCloudsAvailable {
            get {
                return ResourceManager.GetString("NoCloudsAvailable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to nodejs.
        /// </summary>
        public static string NodeDirectory {
            get {
                return ResourceManager.GetString("NodeDirectory", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to node.
        /// </summary>
        public static string NodeEngineKey {
            get {
                return ResourceManager.GetString("NodeEngineKey", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to node.exe.
        /// </summary>
        public static string NodeExe {
            get {
                return ResourceManager.GetString("NodeExe", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to There is no default subscription set, please set a default subscription by running Set-AzureSubscription -Default &lt;subscription name&gt;.
        /// </summary>
        public static string NoDefaultSubscriptionMessage {
            get {
                return ResourceManager.GetString("NoDefaultSubscriptionMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Microsoft SDKs\Azure\Nodejs\Nov2011.
        /// </summary>
        public static string NodeModulesPath {
            get {
                return ResourceManager.GetString("NodeModulesPath", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to nodejs.
        /// </summary>
        public static string NodeProgramFilesFolderName {
            get {
                return ResourceManager.GetString("NodeProgramFilesFolderName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to node.
        /// </summary>
        public static string NodeRuntimeValue {
            get {
                return ResourceManager.GetString("NodeRuntimeValue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Resources\Scaffolding\Node.
        /// </summary>
        public static string NodeScaffolding {
            get {
                return ResourceManager.GetString("NodeScaffolding", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Microsoft.WindowsAzure.Commands.CloudService.ScaffoldingResources.Node.
        /// </summary>
        public static string NodeScaffoldingResources {
            get {
                return ResourceManager.GetString("NodeScaffoldingResources", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Installing Node version {0} in Azure for Role &apos;{1}&apos; (the Node version locally installed is: {2}).
        /// </summary>
        public static string NodeVersionWarningText {
            get {
                return ResourceManager.GetString("NodeVersionWarningText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No, I do not agree.
        /// </summary>
        public static string NoHint {
            get {
                return ResourceManager.GetString("NoHint", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Please connect to internet before executing this cmdlet.
        /// </summary>
        public static string NoInternetConnection {
            get {
                return ResourceManager.GetString("NoInternetConnection", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Please connect to internet before executing this cmdlet.
        /// </summary>
        public static string NoInternetConnection1 {
            get {
                return ResourceManager.GetString("NoInternetConnection1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No publish settings files with extension *.publishsettings are found in the directory &quot;{0}&quot;..
        /// </summary>
        public static string NoPublishSettingsFilesFoundMessage {
            get {
                return ResourceManager.GetString("NoPublishSettingsFilesFoundMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;{0}&apos; must be a cache worker role. Verify that it has proper cache worker role configuration..
        /// </summary>
        public static string NotCacheWorkerRole {
            get {
                return ResourceManager.GetString("NotCacheWorkerRole", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Certificate can&apos;t be null..
        /// </summary>
        public static string NullCertificateMessage {
            get {
                return ResourceManager.GetString("NullCertificateMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} could not be null or empty.
        /// </summary>
        public static string NullObjectMessage {
            get {
                return ResourceManager.GetString("NullObjectMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to add a null RoleSettings to {0}.
        /// </summary>
        public static string NullRoleSettingsMessage {
            get {
                return ResourceManager.GetString("NullRoleSettingsMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to add new role to null service definition.
        /// </summary>
        public static string NullServiceDefinitionMessage {
            get {
                return ResourceManager.GetString("NullServiceDefinitionMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The request offer &apos;{0}&apos; is not found..
        /// </summary>
        public static string OfferNotFoundMessage {
            get {
                return ResourceManager.GetString("OfferNotFoundMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Operation &quot;{0}&quot; failed on VM with ID: {1}.
        /// </summary>
        public static string OperationFailedErrorMessage {
            get {
                return ResourceManager.GetString("OperationFailedErrorMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The REST operation failed with message &apos;{0}&apos; and error code &apos;{1}&apos;.
        /// </summary>
        public static string OperationFailedMessage {
            get {
                return ResourceManager.GetString("OperationFailedMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Job Id {0} did not complete within expected time or it is in Failed/Canceled/Invalid state..
        /// </summary>
        public static string OperationTimedOutOrError {
            get {
                return ResourceManager.GetString("OperationTimedOutOrError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to package.
        /// </summary>
        public static string Package {
            get {
                return ResourceManager.GetString("Package", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Package is created at service root path {0}..
        /// </summary>
        public static string PackageCreated {
            get {
                return ResourceManager.GetString("PackageCreated", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {{
        ///  &quot;author&quot;: &quot;&quot;,
        ///
        ///  &quot;name&quot;: &quot;{0}&quot;,
        ///  &quot;version&quot;: &quot;0.0.0&quot;,
        ///  &quot;dependencies&quot;:{{}},
        ///  &quot;devDependencies&quot;:{{}},
        ///  &quot;optionalDependencies&quot;: {{}},
        ///  &quot;engines&quot;: {{
        ///    &quot;node&quot;: &quot;*&quot;,
        ///    &quot;iisnode&quot;: &quot;*&quot;
        ///  }}
        ///
        ///}}
        ///.
        /// </summary>
        public static string PackageJsonDefaultFile {
            get {
                return ResourceManager.GetString("PackageJsonDefaultFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to package.json.
        /// </summary>
        public static string PackageJsonFileName {
            get {
                return ResourceManager.GetString("PackageJsonFileName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Path {0} doesn&apos;t exist..
        /// </summary>
        public static string PathDoesNotExist {
            get {
                return ResourceManager.GetString("PathDoesNotExist", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Path for {0} doesn&apos;t exist in {1}..
        /// </summary>
        public static string PathDoesNotExistForElement {
            get {
                return ResourceManager.GetString("PathDoesNotExistForElement", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 5.4.0.
        /// </summary>
        public static string PHPDefaultRuntimeVersion {
            get {
                return ResourceManager.GetString("PHPDefaultRuntimeVersion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to php.
        /// </summary>
        public static string PhpRuntimeValue {
            get {
                return ResourceManager.GetString("PhpRuntimeValue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Resources\Scaffolding\PHP.
        /// </summary>
        public static string PHPScaffolding {
            get {
                return ResourceManager.GetString("PHPScaffolding", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Microsoft.WindowsAzure.Commands.CloudService.ScaffoldingResources.PHP.
        /// </summary>
        public static string PHPScaffoldingResources {
            get {
                return ResourceManager.GetString("PHPScaffoldingResources", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Installing PHP version {0} for Role &apos;{1}&apos; (the PHP version locally installed is: {2}).
        /// </summary>
        public static string PHPVersionWarningText {
            get {
                return ResourceManager.GetString("PHPVersionWarningText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You must create your first web site using the Microsoft Azure portal.
        ///Please follow these steps in the portal:
        ///1. At the bottom of the page, click on New &gt; Web Site &gt; Quick Create
        ///2. Type {0} in the URL field
        ///3. Click on &quot;Create Web Site&quot;
        ///4. Once the site has been created, click on the site name
        ///5. Click on &quot;Set up Git publishing&quot; or &quot;Reset deployment credentials&quot; and setup a publishing username and password. Use those credentials for all new websites you create..
        /// </summary>
        public static string PortalInstructions {
            get {
                return ResourceManager.GetString("PortalInstructions", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 6. Back in the console window, rerun this command by typing &quot;New-AzureWebsite &lt;site name&gt; -Git&quot;.
        /// </summary>
        public static string PortalInstructionsGit {
            get {
                return ResourceManager.GetString("PortalInstructionsGit", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Promotion code can be used only when updating to a new plan..
        /// </summary>
        public static string PromotionCodeWithCurrentPlanMessage {
            get {
                return ResourceManager.GetString("PromotionCodeWithCurrentPlanMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Service not published at user request..
        /// </summary>
        public static string PublishAbortedAtUserRequest {
            get {
                return ResourceManager.GetString("PublishAbortedAtUserRequest", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Complete..
        /// </summary>
        public static string PublishCompleteMessage {
            get {
                return ResourceManager.GetString("PublishCompleteMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Connecting....
        /// </summary>
        public static string PublishConnectingMessage {
            get {
                return ResourceManager.GetString("PublishConnectingMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Created Deployment ID: {0}..
        /// </summary>
        public static string PublishCreatedDeploymentMessage {
            get {
                return ResourceManager.GetString("PublishCreatedDeploymentMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Created hosted service &apos;{0}&apos;..
        /// </summary>
        public static string PublishCreatedServiceMessage {
            get {
                return ResourceManager.GetString("PublishCreatedServiceMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Created Website URL: {0}..
        /// </summary>
        public static string PublishCreatedWebsiteMessage {
            get {
                return ResourceManager.GetString("PublishCreatedWebsiteMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Creating....
        /// </summary>
        public static string PublishCreatingServiceMessage {
            get {
                return ResourceManager.GetString("PublishCreatingServiceMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Initializing....
        /// </summary>
        public static string PublishInitializingMessage {
            get {
                return ResourceManager.GetString("PublishInitializingMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to busy.
        /// </summary>
        public static string PublishInstanceStatusBusy {
            get {
                return ResourceManager.GetString("PublishInstanceStatusBusy", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to creating the virtual machine.
        /// </summary>
        public static string PublishInstanceStatusCreating {
            get {
                return ResourceManager.GetString("PublishInstanceStatusCreating", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Instance {0} of role {1} is {2}..
        /// </summary>
        public static string PublishInstanceStatusMessage {
            get {
                return ResourceManager.GetString("PublishInstanceStatusMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ready.
        /// </summary>
        public static string PublishInstanceStatusReady {
            get {
                return ResourceManager.GetString("PublishInstanceStatusReady", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Preparing deployment for {0} with Subscription ID: {1}....
        /// </summary>
        public static string PublishPreparingDeploymentMessage {
            get {
                return ResourceManager.GetString("PublishPreparingDeploymentMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Publishing {0} to Microsoft Azure. This may take several minutes....
        /// </summary>
        public static string PublishServiceStartMessage {
            get {
                return ResourceManager.GetString("PublishServiceStartMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to publish settings.
        /// </summary>
        public static string PublishSettings {
            get {
                return ResourceManager.GetString("PublishSettings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Azure.
        /// </summary>
        public static string PublishSettingsElementName {
            get {
                return ResourceManager.GetString("PublishSettingsElementName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to .PublishSettings.
        /// </summary>
        public static string PublishSettingsFileExtention {
            get {
                return ResourceManager.GetString("PublishSettingsFileExtention", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to publishSettings.xml.
        /// </summary>
        public static string PublishSettingsFileName {
            get {
                return ResourceManager.GetString("PublishSettingsFileName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &amp;whr={0}.
        /// </summary>
        public static string PublishSettingsFileRealmFormat {
            get {
                return ResourceManager.GetString("PublishSettingsFileRealmFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Publish settings imported.
        /// </summary>
        public static string PublishSettingsSetSuccessfully {
            get {
                return ResourceManager.GetString("PublishSettingsSetSuccessfully", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to AZURE_PUBLISHINGPROFILE_URL.
        /// </summary>
        public static string PublishSettingsUrlEnv {
            get {
                return ResourceManager.GetString("PublishSettingsUrlEnv", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Starting....
        /// </summary>
        public static string PublishStartingMessage {
            get {
                return ResourceManager.GetString("PublishStartingMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Upgrading....
        /// </summary>
        public static string PublishUpgradingMessage {
            get {
                return ResourceManager.GetString("PublishUpgradingMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Uploading Package to storage service {0}....
        /// </summary>
        public static string PublishUploadingPackageMessage {
            get {
                return ResourceManager.GetString("PublishUploadingPackageMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Verifying storage account &apos;{0}&apos;....
        /// </summary>
        public static string PublishVerifyingStorageMessage {
            get {
                return ResourceManager.GetString("PublishVerifyingStorageMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Replace current deployment with &apos;{0}&apos; Id ?.
        /// </summary>
        public static string RedeployCommit {
            get {
                return ResourceManager.GetString("RedeployCommit", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Are you sure you want to regenerate key?.
        /// </summary>
        public static string RegenerateKeyWarning {
            get {
                return ResourceManager.GetString("RegenerateKeyWarning", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Generate new key..
        /// </summary>
        public static string RegenerateKeyWhatIfMessage {
            get {
                return ResourceManager.GetString("RegenerateKeyWhatIfMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Are you sure you want to remove account &apos;{0}&apos;?.
        /// </summary>
        public static string RemoveAccountConfirmation {
            get {
                return ResourceManager.GetString("RemoveAccountConfirmation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Removing account.
        /// </summary>
        public static string RemoveAccountMessage {
            get {
                return ResourceManager.GetString("RemoveAccountMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Remove Add-On Confirmation.
        /// </summary>
        public static string RemoveAddOnConformation {
            get {
                return ResourceManager.GetString("RemoveAddOnConformation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If you delete this add-on, your data may be deleted and the operation may not be undone.  You may have to purchase it again from the Microsoft Azure Store to use it. The price of the add-on  may not be refunded. Are you sure you want to delete this add-on? Enter “Yes” to confirm..
        /// </summary>
        public static string RemoveAddOnMessage {
            get {
                return ResourceManager.GetString("RemoveAddOnMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Removing cloud service {0}....
        /// </summary>
        public static string RemoveAzureServiceWaitMessage {
            get {
                return ResourceManager.GetString("RemoveAzureServiceWaitMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Are you sure you want to delete the CloudService &apos;{0}&apos;?.
        /// </summary>
        public static string RemoveCloudServiceConfirmationMessage {
            get {
                return ResourceManager.GetString("RemoveCloudServiceConfirmationMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Deleting CloudService..
        /// </summary>
        public static string RemoveCloudServiceMessage {
            get {
                return ResourceManager.GetString("RemoveCloudServiceMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The current subscription is being removed. Use Select-Subscription &lt;subscriptionName&gt; to select a new current subscription..
        /// </summary>
        public static string RemoveCurrentContext_Subscription {
            get {
                return ResourceManager.GetString("RemoveCurrentContext.Subscription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The default subscription is being removed. Use Select-Subscription &lt;subscriptionName&gt; to select a new default subscription..
        /// </summary>
        public static string RemoveDefaultSubscription {
            get {
                return ResourceManager.GetString("RemoveDefaultSubscription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Removing {0} deployment for {1} service.
        /// </summary>
        public static string RemoveDeploymentWaitMessage {
            get {
                return ResourceManager.GetString("RemoveDeploymentWaitMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Removing job collection.
        /// </summary>
        public static string RemoveJobCollectionMessage {
            get {
                return ResourceManager.GetString("RemoveJobCollectionMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Are you sure you want to remove the job collection &quot;{0}&quot;.
        /// </summary>
        public static string RemoveJobCollectionWarning {
            get {
                return ResourceManager.GetString("RemoveJobCollectionWarning", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Removing job.
        /// </summary>
        public static string RemoveJobMessage {
            get {
                return ResourceManager.GetString("RemoveJobMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Are you sure you want to remove the job &quot;{0}&quot;.
        /// </summary>
        public static string RemoveJobWarning {
            get {
                return ResourceManager.GetString("RemoveJobWarning", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Are you sure you want to remove the account?.
        /// </summary>
        public static string RemoveMediaAccountWarning {
            get {
                return ResourceManager.GetString("RemoveMediaAccountWarning", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Account removed..
        /// </summary>
        public static string RemoveMediaAccountWhatIfMessage {
            get {
                return ResourceManager.GetString("RemoveMediaAccountWhatIfMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Internal Server Error. This could happen because the namespace does not exist or it does not exist under your subscription..
        /// </summary>
        public static string RemoveNamespaceErrorMessage {
            get {
                return ResourceManager.GetString("RemoveNamespaceErrorMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Removing old package {0}....
        /// </summary>
        public static string RemovePackage {
            get {
                return ResourceManager.GetString("RemovePackage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Are you sure you want to delete the namespace &apos;{0}&apos;?.
        /// </summary>
        public static string RemoveServiceBusNamespaceConfirmation {
            get {
                return ResourceManager.GetString("RemoveServiceBusNamespaceConfirmation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Are you sure you want to remove cloud service?.
        /// </summary>
        public static string RemoveServiceWarning {
            get {
                return ResourceManager.GetString("RemoveServiceWarning", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Remove cloud service and all it&apos;s deployments.
        /// </summary>
        public static string RemoveServiceWhatIfMessage {
            get {
                return ResourceManager.GetString("RemoveServiceWhatIfMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Are you sure you want to delete the StaticIPAddressPool &apos;{0}&apos;?.
        /// </summary>
        public static string RemoveStaticIPAddressPoolConfirmationMessage {
            get {
                return ResourceManager.GetString("RemoveStaticIPAddressPoolConfirmationMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Deleting StaticIPAddressPool..
        /// </summary>
        public static string RemoveStaticIPAddressPoolMessage {
            get {
                return ResourceManager.GetString("RemoveStaticIPAddressPoolMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Are you sure you want to remove subscription &apos;{0}&apos;?.
        /// </summary>
        public static string RemoveSubscriptionConfirmation {
            get {
                return ResourceManager.GetString("RemoveSubscriptionConfirmation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Removing subscription.
        /// </summary>
        public static string RemoveSubscriptionMessage {
            get {
                return ResourceManager.GetString("RemoveSubscriptionMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Are you sure you want to delete the VM &apos;{0}&apos;?.
        /// </summary>
        public static string RemoveVMConfirmationMessage {
            get {
                return ResourceManager.GetString("RemoveVMConfirmationMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Deleting VM..
        /// </summary>
        public static string RemoveVMMessage {
            get {
                return ResourceManager.GetString("RemoveVMMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Are you sure you want to delete the VMNetwork &apos;{0}&apos;?.
        /// </summary>
        public static string RemoveVMNetworkConfirmationMessage {
            get {
                return ResourceManager.GetString("RemoveVMNetworkConfirmationMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Deleting VMNetwork.
        /// </summary>
        public static string RemoveVMNetworkMessage {
            get {
                return ResourceManager.GetString("RemoveVMNetworkMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Are you sure you want to delete the VMRole &apos;{0}&apos;?.
        /// </summary>
        public static string RemoveVMRoleConfirmationMessage {
            get {
                return ResourceManager.GetString("RemoveVMRoleConfirmationMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Deleting VMRole..
        /// </summary>
        public static string RemoveVMRoleMessage {
            get {
                return ResourceManager.GetString("RemoveVMRoleMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Are you sure you want to remove the VMSubnet &apos;{0}&apos;?.
        /// </summary>
        public static string RemoveVMSubnetConfirmationMessage {
            get {
                return ResourceManager.GetString("RemoveVMSubnetConfirmationMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Deleting VMSubnet..
        /// </summary>
        public static string RemoveVMSubnetMessage {
            get {
                return ResourceManager.GetString("RemoveVMSubnetMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Removing WebJob....
        /// </summary>
        public static string RemoveWebJobMessage {
            get {
                return ResourceManager.GetString("RemoveWebJobMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Are you sure you want to remove job &apos;{0}&apos;?.
        /// </summary>
        public static string RemoveWebJobWarning {
            get {
                return ResourceManager.GetString("RemoveWebJobWarning", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Removing website.
        /// </summary>
        public static string RemoveWebsiteMessage {
            get {
                return ResourceManager.GetString("RemoveWebsiteMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Are you sure you want to remove the website &quot;{0}&quot;.
        /// </summary>
        public static string RemoveWebsiteWarning {
            get {
                return ResourceManager.GetString("RemoveWebsiteWarning", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Deleting namespace.
        /// </summary>
        public static string RemovingNamespaceMessage {
            get {
                return ResourceManager.GetString("RemovingNamespaceMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Repository is not setup. You need to pass a valid site name..
        /// </summary>
        public static string RepositoryNotSetup {
            get {
                return ResourceManager.GetString("RepositoryNotSetup", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Reserved IP with the Name:&apos;{0}&apos; will no longer be in use after the deployment is deleted, and it is still reserved for later use..
        /// </summary>
        public static string ReservedIPNameNoLongerInUseButStillBeingReserved {
            get {
                return ResourceManager.GetString("ReservedIPNameNoLongerInUseButStillBeingReserved", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Resource with ID : {0} does not exist..
        /// </summary>
        public static string ResourceNotFound {
            get {
                return ResourceManager.GetString("ResourceNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Restart.
        /// </summary>
        public static string Restart {
            get {
                return ResourceManager.GetString("Restart", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Resume.
        /// </summary>
        public static string Resume {
            get {
                return ResourceManager.GetString("Resume", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to /role:{0};&quot;{1}/{0}&quot; .
        /// </summary>
        public static string RoleArgTemplate {
            get {
                return ResourceManager.GetString("RoleArgTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to bin.
        /// </summary>
        public static string RoleBinFolderName {
            get {
                return ResourceManager.GetString("RoleBinFolderName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Role {0} is {1}.
        /// </summary>
        public static string RoleInstanceWaitMsg {
            get {
                return ResourceManager.GetString("RoleInstanceWaitMsg", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 20.
        /// </summary>
        public static string RoleMaxInstances {
            get {
                return ResourceManager.GetString("RoleMaxInstances", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to role name.
        /// </summary>
        public static string RoleName {
            get {
                return ResourceManager.GetString("RoleName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The provided role name {0} doesn&apos;t exist.
        /// </summary>
        public static string RoleNotFoundMessage {
            get {
                return ResourceManager.GetString("RoleNotFoundMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to RoleSettings.xml.
        /// </summary>
        public static string RoleSettingsTemplateFileName {
            get {
                return ResourceManager.GetString("RoleSettingsTemplateFileName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Role type {0} doesn&apos;t exist.
        /// </summary>
        public static string RoleTypeDoesNotExist {
            get {
                return ResourceManager.GetString("RoleTypeDoesNotExist", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to /run:&quot;{0}&quot;;&quot;{1}&quot; {2} /useiisexpress.
        /// </summary>
        public static string RunInEmulatorArguments {
            get {
                return ResourceManager.GetString("RunInEmulatorArguments", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to public static Dictionary&lt;string, Location&gt; ReverseLocations { get; private set; }.
        /// </summary>
        public static string RuntimeDeploymentLocationError {
            get {
                return ResourceManager.GetString("RuntimeDeploymentLocationError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Preparing runtime deployment for service &apos;{0}&apos;.
        /// </summary>
        public static string RuntimeDeploymentStart {
            get {
                return ResourceManager.GetString("RuntimeDeploymentStart", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to WARNING Runtime Mismatch: Are you sure that you want to publish service &apos;{0}&apos; using an Azure runtime version that does not match your local runtime version?.
        /// </summary>
        public static string RuntimeMismatchWarning {
            get {
                return ResourceManager.GetString("RuntimeMismatchWarning", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to RUNTIMEOVERRIDEURL.
        /// </summary>
        public static string RuntimeOverrideKey {
            get {
                return ResourceManager.GetString("RuntimeOverrideKey", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to /runtimemanifest/runtimes/runtime.
        /// </summary>
        public static string RuntimeQuery {
            get {
                return ResourceManager.GetString("RuntimeQuery", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to RUNTIMEID.
        /// </summary>
        public static string RuntimeTypeKey {
            get {
                return ResourceManager.GetString("RuntimeTypeKey", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to RUNTIMEURL.
        /// </summary>
        public static string RuntimeUrlKey {
            get {
                return ResourceManager.GetString("RuntimeUrlKey", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to RUNTIMEVERSIONPRIMARYKEY.
        /// </summary>
        public static string RuntimeVersionPrimaryKey {
            get {
                return ResourceManager.GetString("RuntimeVersionPrimaryKey", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to scaffold.xml.
        /// </summary>
        public static string ScaffoldXml {
            get {
                return ResourceManager.GetString("ScaffoldXml", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A job collection with name &quot;{0}&quot; already exists in {1}. Please specify a different name..
        /// </summary>
        public static string SchedulerExistingJobCollection {
            get {
                return ResourceManager.GetString("SchedulerExistingJobCollection", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A valid value for Tenant, Secret, Audience and Clientid parameters are required for Http scheduler jobs with ActiveDirectoryOAuth authentication type..
        /// </summary>
        public static string SchedulerInvalidAADOAuthRequest {
            get {
                return ResourceManager.GetString("SchedulerInvalidAADOAuthRequest", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A valid value for Username and Password parameters are required for Http scheduler jobs with Basic authentication type..
        /// </summary>
        public static string SchedulerInvalidBasicAuthRequest {
            get {
                return ResourceManager.GetString("SchedulerInvalidBasicAuthRequest", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A valid value for ClientCertificatePfx and ClientCertificatePassword parameters are required for Http scheduler jobs with ClientCertificate authentication type..
        /// </summary>
        public static string SchedulerInvalidClientCertAuthRequest {
            get {
                return ResourceManager.GetString("SchedulerInvalidClientCertAuthRequest", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid location entered. Pick one of the locations from Get-AzureSchedulerLocation.
        /// </summary>
        public static string SchedulerInvalidLocation {
            get {
                return ResourceManager.GetString("SchedulerInvalidLocation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to For None authentication type, all authentication related parameters should be null.
        /// </summary>
        public static string SchedulerInvalidNoneAuthRequest {
            get {
                return ResourceManager.GetString("SchedulerInvalidNoneAuthRequest", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The subscription already has a free job collection. Only one free job collection can be created per subscription..
        /// </summary>
        public static string SchedulerNoMoreFreeJobCollection {
            get {
                return ResourceManager.GetString("SchedulerNoMoreFreeJobCollection", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Service {0} already exists on disk in location {1}.
        /// </summary>
        public static string ServiceAlreadyExistsOnDisk {
            get {
                return ResourceManager.GetString("ServiceAlreadyExistsOnDisk", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No ServiceBus authorization rule with the given characteristics was found.
        /// </summary>
        public static string ServiceBusAuthorizationRuleNotFound {
            get {
                return ResourceManager.GetString("ServiceBusAuthorizationRuleNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The service bus entity &apos;{0}&apos; is not found..
        /// </summary>
        public static string ServiceBusEntityTypeNotFound {
            get {
                return ResourceManager.GetString("ServiceBusEntityTypeNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Internal Server Error. This could happen due to an incorrect/missing namespace.
        /// </summary>
        public static string ServiceBusNamespaceMissingMessage {
            get {
                return ResourceManager.GetString("ServiceBusNamespaceMissingMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to service configuration.
        /// </summary>
        public static string ServiceConfiguration {
            get {
                return ResourceManager.GetString("ServiceConfiguration", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to service definition.
        /// </summary>
        public static string ServiceDefinition {
            get {
                return ResourceManager.GetString("ServiceDefinition", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ServiceDefinition.csdef.
        /// </summary>
        public static string ServiceDefinitionFileName {
            get {
                return ResourceManager.GetString("ServiceDefinitionFileName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ServiceDefinition.csdef.
        /// </summary>
        public static string ServiceDefinitionFileName1 {
            get {
                return ResourceManager.GetString("ServiceDefinitionFileName1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0}Deploy.
        /// </summary>
        public static string ServiceDeploymentName {
            get {
                return ResourceManager.GetString("ServiceDeploymentName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified cloud service &quot;{0}&quot; does not exist..
        /// </summary>
        public static string ServiceDoesNotExist {
            get {
                return ResourceManager.GetString("ServiceDoesNotExist", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} slot for service {1} is in {2} state, please wait until it finish and update it&apos;s status.
        /// </summary>
        public static string ServiceIsInTransitionState {
            get {
                return ResourceManager.GetString("ServiceIsInTransitionState", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Begin Operation: {0}.
        /// </summary>
        public static string ServiceManagementExecuteClientActionBeginOperation {
            get {
                return ResourceManager.GetString("ServiceManagementExecuteClientActionBeginOperation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Completed Operation: {0}.
        /// </summary>
        public static string ServiceManagementExecuteClientActionCompletedOperation {
            get {
                return ResourceManager.GetString("ServiceManagementExecuteClientActionCompletedOperation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Begin Operation: {0}.
        /// </summary>
        public static string ServiceManagementExecuteClientActionInOCSBeginOperation {
            get {
                return ResourceManager.GetString("ServiceManagementExecuteClientActionInOCSBeginOperation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Completed Operation: {0}.
        /// </summary>
        public static string ServiceManagementExecuteClientActionInOCSCompletedOperation {
            get {
                return ResourceManager.GetString("ServiceManagementExecuteClientActionInOCSCompletedOperation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to service name.
        /// </summary>
        public static string ServiceName {
            get {
                return ResourceManager.GetString("ServiceName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The provided service name {0} already exists, please pick another name.
        /// </summary>
        public static string ServiceNameExists {
            get {
                return ResourceManager.GetString("ServiceNameExists", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The provided service name {0} already exists, please pick another name.
        /// </summary>
        public static string ServiceNameExists1 {
            get {
                return ResourceManager.GetString("ServiceNameExists1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Please provide name for the hosted service.
        /// </summary>
        public static string ServiceNameMissingMessage {
            get {
                return ResourceManager.GetString("ServiceNameMissingMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to service parent directory.
        /// </summary>
        public static string ServiceParentDirectory {
            get {
                return ResourceManager.GetString("ServiceParentDirectory", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Service {0} removed successfully.
        /// </summary>
        public static string ServiceRemovedMessage {
            get {
                return ResourceManager.GetString("ServiceRemovedMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to service directory.
        /// </summary>
        public static string ServiceRoot {
            get {
                return ResourceManager.GetString("ServiceRoot", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to service settings.
        /// </summary>
        public static string ServiceSettings {
            get {
                return ResourceManager.GetString("ServiceSettings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The storage account name &apos;{0}&apos; is invalid.  Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only..
        /// </summary>
        public static string ServiceSettings_ValidateStorageAccountName_InvalidName {
            get {
                return ResourceManager.GetString("ServiceSettings_ValidateStorageAccountName_InvalidName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The storage account name &apos;{0}&apos; is invalid.  Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only..
        /// </summary>
        public static string ServiceSettings_ValidateStorageAccountName_InvalidName1 {
            get {
                return ResourceManager.GetString("ServiceSettings_ValidateStorageAccountName_InvalidName1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to service settings.
        /// </summary>
        public static string ServiceSettings1 {
            get {
                return ResourceManager.GetString("ServiceSettings1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The {0} slot for cloud service {1} doesn&apos;t exist..
        /// </summary>
        public static string ServiceSlotDoesNotExist {
            get {
                return ResourceManager.GetString("ServiceSlotDoesNotExist", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} slot for service {1} is {2}.
        /// </summary>
        public static string ServiceStatusChanged {
            get {
                return ResourceManager.GetString("ServiceStatusChanged", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Set Add-On Confirmation.
        /// </summary>
        public static string SetAddOnConformation {
            get {
                return ResourceManager.GetString("SetAddOnConformation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Note - You will be charged the amount for the new plan, without being refunded for time remaining 
        ///in the existing plan.
        ///By typing &quot;Yes&quot;, I (a) authorize Microsoft to charge my current payment method on a monthly basis 
        ///for the amount indicated at {0} for {1} until my service is cancelled or terminated, and (b) 
        ///agree to the {2}&apos;s terms of user and privacy statement at {0} and (c) agree to sharing my 
        ///contact information with {2}..
        /// </summary>
        public static string SetMicrosoftAddOnMessage {
            get {
                return ResourceManager.GetString("SetMicrosoftAddOnMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Note - You will be charged the amount for the new plan, without being refunded for time remaining 
        ///in the existing plan.
        ///By typing &quot;Yes&quot;, I (a) authorize Microsoft to charge my current payment method on a monthly basis 
        ///for the amount indicated at {0} for {1} until my service is cancelled or terminated, and (b) 
        ///acknowledge the offering is provided by {2}, not Microsoft, and agree to {2}&apos;s terms of 
        ///use and privacy statement at &lt;url&gt; and (c) agree to sharing my contact information with {2}..
        /// </summary>
        public static string SetNonMicrosoftAddOnMessage {
            get {
                return ResourceManager.GetString("SetNonMicrosoftAddOnMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Role {0} instances are set to {1}.
        /// </summary>
        public static string SetRoleInstancesMessage {
            get {
                return ResourceManager.GetString("SetRoleInstancesMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {&quot;Slot&quot;:&quot;&quot;,&quot;Location&quot;:&quot;&quot;,&quot;Subscription&quot;:&quot;&quot;,&quot;StorageAccountName&quot;:&quot;&quot;}.
        /// </summary>
        public static string SettingsFileEmptyContent {
            get {
                return ResourceManager.GetString("SettingsFileEmptyContent", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to deploymentSettings.json.
        /// </summary>
        public static string SettingsFileName {
            get {
                return ResourceManager.GetString("SettingsFileName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to deploymentSettings.json.
        /// </summary>
        public static string SettingsFileName1 {
            get {
                return ResourceManager.GetString("SettingsFileName1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Confirm.
        /// </summary>
        public static string ShouldProcessCaption {
            get {
                return ResourceManager.GetString("ShouldProcessCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Confirm.
        /// </summary>
        public static string ShouldProcessCaption1 {
            get {
                return ResourceManager.GetString("ShouldProcessCaption1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Shutdown.
        /// </summary>
        public static string Shutdown {
            get {
                return ResourceManager.GetString("Shutdown", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to /sites:{0};{1};&quot;{2}/{0}&quot; .
        /// </summary>
        public static string SitesArgTemplate {
            get {
                return ResourceManager.GetString("SitesArgTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Please specify CreateACSNamespace as true or false for better future compatibility..
        /// </summary>
        public static string SpecifyCreateACSNamespace {
            get {
                return ResourceManager.GetString("SpecifyCreateACSNamespace", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 1000.
        /// </summary>
        public static string StandardRetryDelayInMs {
            get {
                return ResourceManager.GetString("StandardRetryDelayInMs", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Start.
        /// </summary>
        public static string Start {
            get {
                return ResourceManager.GetString("Start", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Started.
        /// </summary>
        public static string StartedEmulator {
            get {
                return ResourceManager.GetString("StartedEmulator", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Starting Emulator....
        /// </summary>
        public static string StartingEmulator {
            get {
                return ResourceManager.GetString("StartingEmulator", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to start.
        /// </summary>
        public static string StartStorageEmulatorCommandArgument {
            get {
                return ResourceManager.GetString("StartStorageEmulatorCommandArgument", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Stop.
        /// </summary>
        public static string Stop {
            get {
                return ResourceManager.GetString("Stop", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Stopping emulator....
        /// </summary>
        public static string StopEmulatorMessage {
            get {
                return ResourceManager.GetString("StopEmulatorMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Stopped.
        /// </summary>
        public static string StoppedEmulatorMessage {
            get {
                return ResourceManager.GetString("StoppedEmulatorMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to stop.
        /// </summary>
        public static string StopStorageEmulatorCommandArgument {
            get {
                return ResourceManager.GetString("StopStorageEmulatorCommandArgument", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Account Name:.
        /// </summary>
        public static string StorageAccountName {
            get {
                return ResourceManager.GetString("StorageAccountName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot find storage account &apos;{0}&apos; please type the name of an existing storage account..
        /// </summary>
        public static string StorageAccountNotFound {
            get {
                return ResourceManager.GetString("StorageAccountNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to AzureStorageEmulator.exe.
        /// </summary>
        public static string StorageEmulatorExe {
            get {
                return ResourceManager.GetString("StorageEmulatorExe", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to InstallPath.
        /// </summary>
        public static string StorageEmulatorInstallPathRegistryKeyValue {
            get {
                return ResourceManager.GetString("StorageEmulatorInstallPathRegistryKeyValue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SOFTWARE\Microsoft\Windows Azure Storage Emulator.
        /// </summary>
        public static string StorageEmulatorRegistryKey {
            get {
                return ResourceManager.GetString("StorageEmulatorRegistryKey", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Primary Key:.
        /// </summary>
        public static string StoragePrimaryKey {
            get {
                return ResourceManager.GetString("StoragePrimaryKey", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Secondary Key:.
        /// </summary>
        public static string StorageSecondaryKey {
            get {
                return ResourceManager.GetString("StorageSecondaryKey", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The subscription named {0} already exists..
        /// </summary>
        public static string SubscriptionAlreadyExists {
            get {
                return ResourceManager.GetString("SubscriptionAlreadyExists", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to DefaultSubscriptionData.xml.
        /// </summary>
        public static string SubscriptionDataFileName {
            get {
                return ResourceManager.GetString("SubscriptionDataFileName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The subscription data file {0} does not exist..
        /// </summary>
        public static string SubscriptionDataFileNotFound {
            get {
                return ResourceManager.GetString("SubscriptionDataFileNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The provided subscription name doesn&apos;t exist in the imported publish profile. If subscriptions have changed for the hosted service, retrieve an updated profile by using Get-AzurePublishSettingsFile then import the profile using Import-AzurePublishSettingsFile.
        /// </summary>
        public static string SubscriptionIdNotFoundMessage {
            get {
                return ResourceManager.GetString("SubscriptionIdNotFoundMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The provided subscription name doesn&apos;t exist in the imported publish profile. If subscriptions have changed for the hosted service, retrieve an updated profile by using Get-AzurePublishSettingsFile then import the profile using Import-AzurePublishSettingsFile.
        /// </summary>
        public static string SubscriptionIdNotFoundMessage1 {
            get {
                return ResourceManager.GetString("SubscriptionIdNotFoundMessage1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Subscription must not be null.
        /// </summary>
        public static string SubscriptionMustNotBeNull {
            get {
                return ResourceManager.GetString("SubscriptionMustNotBeNull", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Suspend.
        /// </summary>
        public static string Suspend {
            get {
                return ResourceManager.GetString("Suspend", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Swapping website production slot ....
        /// </summary>
        public static string SwappingWebsite {
            get {
                return ResourceManager.GetString("SwappingWebsite", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The website does not contain a slot named: {0}.
        /// </summary>
        public static string SwapWebsiteSlotInvalidSlotWarning {
            get {
                return ResourceManager.GetString("SwapWebsiteSlotInvalidSlotWarning", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The website must have at least two slots to apply swap.
        /// </summary>
        public static string SwapWebsiteSlotRequire2SlotsWarning {
            get {
                return ResourceManager.GetString("SwapWebsiteSlotRequire2SlotsWarning", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The website has more than 2 slots you must specify which ones to swap.
        /// </summary>
        public static string SwapWebsiteSlotSpecifySlotsWarning {
            get {
                return ResourceManager.GetString("SwapWebsiteSlotSpecifySlotsWarning", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Are you sure you want to swap the website &apos;{0}&apos; slot &apos;{1}&apos; with slot &apos;{2}&apos;?.
        /// </summary>
        public static string SwapWebsiteSlotWarning {
            get {
                return ResourceManager.GetString("SwapWebsiteSlotWarning", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to update mismatching Json structured: {0} {1}..
        /// </summary>
        public static string UnableToPatchJson {
            get {
                return ResourceManager.GetString("UnableToPatchJson", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The provider {0} is unknown..
        /// </summary>
        public static string UnknownProviderMessage {
            get {
                return ResourceManager.GetString("UnknownProviderMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Update.
        /// </summary>
        public static string Update {
            get {
                return ResourceManager.GetString("Update", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Updated settings for subscription &apos;{0}&apos;. Current subscription is &apos;{1}&apos;..
        /// </summary>
        public static string UpdatedSettings {
            get {
                return ResourceManager.GetString("UpdatedSettings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Please wait....
        /// </summary>
        public static string WaitMessage {
            get {
                return ResourceManager.GetString("WaitMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The azure storage emulator is not installed, skip launching....
        /// </summary>
        public static string WarningWhenStorageEmulatorIsMissing {
            get {
                return ResourceManager.GetString("WarningWhenStorageEmulatorIsMissing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Web.cloud.config.
        /// </summary>
        public static string WebCloudConfig {
            get {
                return ResourceManager.GetString("WebCloudConfig", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to web.config.
        /// </summary>
        public static string WebConfigTemplateFileName {
            get {
                return ResourceManager.GetString("WebConfigTemplateFileName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to MSDeploy.
        /// </summary>
        public static string WebDeployKeywordInWebSitePublishProfile {
            get {
                return ResourceManager.GetString("WebDeployKeywordInWebSitePublishProfile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot build the project successfully. Please see logs in {0}..
        /// </summary>
        public static string WebProjectBuildFailTemplate {
            get {
                return ResourceManager.GetString("WebProjectBuildFailTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to WebRole.
        /// </summary>
        public static string WebRole {
            get {
                return ResourceManager.GetString("WebRole", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to setup_web.cmd &gt; log.txt.
        /// </summary>
        public static string WebRoleStartupTaskCommandLine {
            get {
                return ResourceManager.GetString("WebRoleStartupTaskCommandLine", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to WebRole.xml.
        /// </summary>
        public static string WebRoleTemplateFileName {
            get {
                return ResourceManager.GetString("WebRoleTemplateFileName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to WebSite with given name {0} already exists in the specified Subscription and Webspace..
        /// </summary>
        public static string WebsiteAlreadyExists {
            get {
                return ResourceManager.GetString("WebsiteAlreadyExists", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to WebSite with given name {0} already exists in the specified Subscription and Location..
        /// </summary>
        public static string WebsiteAlreadyExistsReplacement {
            get {
                return ResourceManager.GetString("WebsiteAlreadyExistsReplacement", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Site {0} already has repository created for it..
        /// </summary>
        public static string WebsiteRepositoryAlreadyExists {
            get {
                return ResourceManager.GetString("WebsiteRepositoryAlreadyExists", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Workspaces/WebsiteExtension/Website/{0}/dashboard/.
        /// </summary>
        public static string WebsiteSufixUrl {
            get {
                return ResourceManager.GetString("WebsiteSufixUrl", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to https://{0}/msdeploy.axd?site={1}.
        /// </summary>
        public static string WebSiteWebDeployUriTemplate {
            get {
                return ResourceManager.GetString("WebSiteWebDeployUriTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to WorkerRole.
        /// </summary>
        public static string WorkerRole {
            get {
                return ResourceManager.GetString("WorkerRole", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to setup_worker.cmd &gt; log.txt.
        /// </summary>
        public static string WorkerRoleStartupTaskCommandLine {
            get {
                return ResourceManager.GetString("WorkerRoleStartupTaskCommandLine", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to WorkerRole.xml.
        /// </summary>
        public static string WorkerRoleTemplateFileName {
            get {
                return ResourceManager.GetString("WorkerRoleTemplateFileName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  (x86).
        /// </summary>
        public static string x86InProgramFiles {
            get {
                return ResourceManager.GetString("x86InProgramFiles", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Yes.
        /// </summary>
        public static string Yes {
            get {
                return ResourceManager.GetString("Yes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Yes, I agree.
        /// </summary>
        public static string YesHint {
            get {
                return ResourceManager.GetString("YesHint", resourceCulture);
            }
        }
    }
}
