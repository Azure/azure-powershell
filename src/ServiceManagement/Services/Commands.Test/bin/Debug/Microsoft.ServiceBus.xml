<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>Microsoft.ServiceBus</name>
  </assembly>
  <members>
    <member name="T:Microsoft.ServiceBus.AuthorizationFailedException">
      <summary>The exception that occurs when an authorization attempt fails. </summary>
    </member>
    <member name="P:Microsoft.ServiceBus.AuthorizationFailedException.ErrorCode">
      <summary>Gets or sets the error code that describes the cause of authorization attempt failure.</summary>
      <returns>One of the values of the<see cref="T:Microsoft.ServiceBus.AuthorizationFailedException.FailureCode" /> enumeration.</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.AuthorizationFailedException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Populates a <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object with the data needed to serialize the target object.</summary>
      <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object to populate with data.</param>
      <param name="context">The destination (see <see cref="T:System.Runtime.Serialization.StreamingContext" />) for this serialization.</param>
    </member>
    <member name="T:Microsoft.ServiceBus.AuthorizationFailedException.FailureCode">
      <summary>Enumerates the possible causes of failure during authorization attempts.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.AuthorizationFailedException.FailureCode.ExpiredToken">
      <summary>Specifies that the token has expired.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.AuthorizationFailedException.FailureCode.Generic">
      <summary>Specifies that the error is generic.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.AuthorizationFailedException.FailureCode.InvalidAudience">
      <summary>Specifies that the audience is invalid.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.AuthorizationFailedException.FailureCode.InvalidClaim">
      <summary>Specifies that the claim is invalid.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.AuthorizationFailedException.FailureCode.InvalidSignature">
      <summary>Specifies that the signature is invalid.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.AuthorizationFailedException.FailureCode.MalformedToken">
      <summary>Specifies that the token is malformed.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.AuthorizationFailedException.FailureCode.MissingAudience">
      <summary>Specifies that the audience is missing.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.AuthorizationFailedException.FailureCode.MissingExpiresOn">
      <summary>Specifies that the ‘expires on’ date is missing.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.AuthorizationFailedException.FailureCode.MissingIssuer">
      <summary>Specifies that the issuer is missing.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.AuthorizationFailedException.FailureCode.MissingSignature">
      <summary>Specifies that the signature is missing.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.AuthorizationFailedException.FailureCode.MissingToken">
      <summary>Specifies that the token is missing.</summary>
    </member>
    <member name="T:Microsoft.ServiceBus.BasicHttpRelayBinding">
      <summary>Represents a binding that a client can use to configure endpoints that can communicate with ASMX-based Web services and other services that conform to the WS-I Basic Profile 1.1. </summary>
    </member>
    <member name="M:Microsoft.ServiceBus.BasicHttpRelayBinding.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.BasicHttpRelayBinding" /> class.</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.BasicHttpRelayBinding.#ctor(Microsoft.ServiceBus.EndToEndBasicHttpSecurityMode,Microsoft.ServiceBus.RelayClientAuthenticationType)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.BasicHttpRelayBinding" /> class with a specified type of security used by the binding and the authentication type used by the client.</summary>
      <param name="securityMode">The type of security used with the SOAP message and for the client. </param>
      <param name="relayClientAuthenticationType">The type of authentication used by the client. </param>
    </member>
    <member name="M:Microsoft.ServiceBus.BasicHttpRelayBinding.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.BasicHttpRelayBinding" /> class using the specified configuration.</summary>
      <param name="configurationName">The configuration to use. </param>
    </member>
    <member name="P:Microsoft.ServiceBus.BasicHttpRelayBinding.AllowCookies">
      <summary>Gets or sets a value that determines if the client allows cookies.</summary>
      <returns>Returns <see cref="T:System.Boolean" />.true to allow cookies; otherwise, false. The default value is false. </returns>
    </member>
    <member name="M:Microsoft.ServiceBus.BasicHttpRelayBinding.CreateBindingElements">
      <summary>Returns an ordered collection of binding elements contained in the current binding.</summary>
      <returns>Returns <see cref="T:System.ServiceModel.Channels.BindingElementCollection" />.Contains the ordered stack of binding elements described by the <see cref="T:Microsoft.ServiceBus.BasicHttpRelayBinding" />. The order of the binding elements starting from the bottom is transport, encoding, and security.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.BasicHttpRelayBinding.EnvelopeVersion">
      <summary>Gets the version of SOAP that is used for messages that are processed by this binding. </summary>
      <returns>Returns <see cref="T:System.ServiceModel.EnvelopeVersion" />.The value that is used with this binding. </returns>
    </member>
    <member name="P:Microsoft.ServiceBus.BasicHttpRelayBinding.HostNameComparisonMode">
      <summary>Gets or sets how the host name should be compared.</summary>
      <returns>The comparison method used in the host name.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.BasicHttpRelayBinding.IsDynamic">
      <summary>Gets or sets whether the binding element is dynamic.</summary>
      <returns>true if the binding element is dynamic; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.BasicHttpRelayBinding.MaxBufferPoolSize">
      <summary>Gets or sets the maximum size allowed for a buffer pool that stores TCP messages processed by the binding.</summary>
      <returns>The maximum size allowed for a buffer pool that stores TCP messages processed by the binding.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.BasicHttpRelayBinding.MaxBufferSize">
      <summary>Gets or sets the maximum size for a buffer that receives messages from the channel.</summary>
      <returns>Returns <see cref="T:System.Int32" />.The maximum size, in bytes, of a buffer that stores messages while they are processed for an endpoint configured with this binding. The default value is 65,536 bytes.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.BasicHttpRelayBinding.MaxReceivedMessageSize">
      <summary>Gets or sets the maximum size for a message that can be received on a channel configured with this binding.</summary>
      <returns>Returns <see cref="T:System.Int64" />.The maximum size, in bytes, for a message that is processed by the binding. The default value is 65,536 bytes.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.BasicHttpRelayBinding.MessageEncoding">
      <summary>Gets or sets the type of message encoding.</summary>
      <returns>Returns a <see cref="T:System.ServiceModel.WSMessageEncoding" /> that contains the type of message encoding. The default value is Text. </returns>
    </member>
    <member name="P:Microsoft.ServiceBus.BasicHttpRelayBinding.ProxyAddress">
      <summary>Gets or sets the proxy address.</summary>
      <returns>Returns a <see cref="T:System.Uri" /> that  contains the proxy address. The default value is null.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.BasicHttpRelayBinding.ReaderQuotas">
      <summary>Gets or sets the reader quotas.</summary>
      <returns>Returns a <see cref="T:System.Xml.XmlDictionaryReaderQuotas" /> that specifies the complexity constraints on SOAP messages exchanged. The default values for these constraints are provided in the following Remarks section.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.BasicHttpRelayBinding.Scheme">
      <summary>Gets the URI transport scheme for the channels and listeners that are configured with this binding.</summary>
      <returns>The URI transport scheme for the channels and listeners that are configured with this binding.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.BasicHttpRelayBinding.Security">
      <summary>Gets the collection of security bindings used with this binding.</summary>
      <returns>Returns a <see cref="T:Microsoft.ServiceBus.BasicHttpRelaySecurity" /> that contains the  security settings used in the binding. The default value has EndToEndBasicSecurityMode set to Transport, RelayClientAuthenticationType set to RelayAccessToken, HttpRelayTransportSecurity with HttypProxyCredentialType of None, and BasicHttpRelayMessageSecurity with ClientCredentialType of BasicHttpMessageCredentialType.UserName and an AlgorithmSuite of SecurityAlgorithmSuite.Basic256. </returns>
    </member>
    <member name="P:Microsoft.ServiceBus.BasicHttpRelayBinding.System#ServiceModel#Channels#IBindingRuntimePreferences#ReceiveSynchronously">
      <summary>Gets a value that indicates whether incoming requests are handled synchronously or asynchronously.</summary>
      <returns>Returns <see cref="T:System.Boolean" />.true if incoming requests are handled synchronously; false if incoming requests are handled asynchronously. The default value is false.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.BasicHttpRelayBinding.TextEncoding">
      <summary>Gets or sets the character encoding that is used for the message text.</summary>
      <returns>Returns a <see cref="T:System.Text.Encoding" /> that indicates the character encoding that is used. The default is UTF8Encoding.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.BasicHttpRelayBinding.TransferMode">
      <summary>Gets or sets the transfer mode.</summary>
      <returns>Returns a <see cref="T:System.ServiceModel.TransferMode" /> that indicates whether the service configured with the binding uses streamed or buffered (or both) modes of message transfer. By default, the HTTP, TCP/IP, and named pipe transports use buffered message transfers. The default value is buffered.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.BasicHttpRelayBinding.UseDefaultWebProxy">
      <summary>Gets or sets a value that determines if the client uses the default web proxy.</summary>
      <returns>Returns true if the client uses the default web proxy; otherwise, false. The default is true.</returns>
    </member>
    <member name="T:Microsoft.ServiceBus.BasicHttpRelayMessageSecurity">
      <summary>Provides properties used to configure message-level security settings for <see cref="T:Microsoft.ServiceBus.BasicHttpRelayBinding" />.
</summary>
    </member>
    <member name="P:Microsoft.ServiceBus.BasicHttpRelayMessageSecurity.AlgorithmSuite">
      <summary>Specifies the algorithm suite to use with <see cref="T:Microsoft.ServiceBus.BasicHttpRelayMessageSecurity" />.</summary>
      <returns>Returns a <see cref="T:System.ServiceModel.Security.SecurityAlgorithmSuite" />, which specifies 256-bit Advanced Encryption Standard (AES) as the symmetric encryption algorithm. The default value is Base256. This property cannot be null.</returns>
      <exception cref="ArgumentNullException">The value of <see cref="T:System.ServiceModel.Security.SecurityAlgorithmSuite" /> is null.</exception>
    </member>
    <member name="P:Microsoft.ServiceBus.BasicHttpRelayMessageSecurity.ClientCredentialType">
      <summary>Specifies the type of credential with which the client authenticates.</summary>
      <returns>Returns a <see cref="T:System.ServiceModel.BasicHttpMessageCredentialType" /> that contains a member of the <see cref="T:System.ServiceModel.BasicHttpMessageCredentialType" /> enumeration. The default value is UserName..</returns>
    </member>
    <member name="T:Microsoft.ServiceBus.BasicHttpRelaySecurity">
      <summary>Provides properties used to configure the security settings of a <see cref="T:Microsoft.ServiceBus.BasicHttpRelayBinding" /> binding.</summary>
    </member>
    <member name="P:Microsoft.ServiceBus.BasicHttpRelaySecurity.Message">
      <summary>Gets the message-level security settings for a <see cref="T:Microsoft.ServiceBus.BasicHttpRelayBinding" /> binding.</summary>
      <returns>Returns a <see cref="T:Microsoft.ServiceBus.BasicHttpRelayMessageSecurity" />, which represents the message-level security settings for this binding.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.BasicHttpRelaySecurity.Mode">
      <summary>Gets or sets the security mode for a <see cref="T:Microsoft.ServiceBus.BasicHttpRelayBinding" /> binding.</summary>
      <returns>One of the values of <see cref="T:Microsoft.ServiceBus.EndToEndBasicHttpSecurityMode" /> enumeration. The default value is None.</returns>
      <exception cref="ArgumentOutOfRangeException">The value is not a legal value for <see cref="T:Microsoft.ServiceBus.EndToEndBasicHttpSecurityMode" />.</exception>
    </member>
    <member name="P:Microsoft.ServiceBus.BasicHttpRelaySecurity.RelayClientAuthenticationType">
      <summary>Gets or sets the type of authentication used by the Windows Azure Service Bus service.</summary>
      <returns>Returns a <see cref="T:Microsoft.ServiceBus.RelayClientAuthenticationType" /> that contains the type of authentication used by the service.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.BasicHttpRelaySecurity.Transport">
      <summary>Gets the transport-level security settings for a <see cref="T:Microsoft.ServiceBus.BasicHttpRelayBinding" /> binding.</summary>
      <returns>Returns a <see cref="T:Microsoft.ServiceBus.HttpRelayTransportSecurity" /> that contains the security settings.</returns>
    </member>
    <member name="T:Microsoft.ServiceBus.ConnectionStatusBehavior">
      <summary>An endpoint behavior that provides access to the connection status of service listening on the Windows Azure Service Bus.</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.ConnectionStatusBehavior.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.ConnectionStatusBehavior" /> class.</summary>
    </member>
    <member name="E:Microsoft.ServiceBus.ConnectionStatusBehavior.Connecting">
      <summary>Occurs when the connection is connecting.</summary>
    </member>
    <member name="P:Microsoft.ServiceBus.ConnectionStatusBehavior.IsOnline">
      <summary>Gets a value that determines if the connection is online.</summary>
      <returns>true if the connection is online; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.ConnectionStatusBehavior.LastError">
      <summary>Gets the last error.</summary>
      <returns>Returns a <see cref="T:System.Exception" /> that contains the last error.</returns>
    </member>
    <member name="E:Microsoft.ServiceBus.ConnectionStatusBehavior.Offline">
      <summary>Occurs when the connection is offline.</summary>
    </member>
    <member name="E:Microsoft.ServiceBus.ConnectionStatusBehavior.Online">
      <summary>Occurs when the connection is online.</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.ConnectionStatusBehavior.Retry">
      <summary>Retries the connection.</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.ConnectionStatusBehavior.System#ServiceModel#Description#IEndpointBehavior#AddBindingParameters(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Channels.BindingParameterCollection)">
      <summary>Adds the specified binding parameters to the endpoint.</summary>
      <param name="serviceEndpoint">The endpoint to update.</param>
      <param name="bindingParameters">The binding parameters to add.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.ConnectionStatusBehavior.System#ServiceModel#Description#IEndpointBehavior#ApplyClientBehavior(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.ClientRuntime)">
      <summary>Applies the specified client behaviors to the specified endpoint.</summary>
      <param name="serviceEndpoint">The endpoint to update.</param>
      <param name="behavior">The behaviors to add.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.ConnectionStatusBehavior.System#ServiceModel#Description#IEndpointBehavior#ApplyDispatchBehavior(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.EndpointDispatcher)">
      <summary>Applies the specified dispatch behavior to the service endpoint.</summary>
      <param name="serviceEndpoint">The endpoint to update.</param>
      <param name="endpointDispatcher">The endpoint dispatcher.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.ConnectionStatusBehavior.System#ServiceModel#Description#IEndpointBehavior#Validate(System.ServiceModel.Description.ServiceEndpoint)">
      <summary>Validates the specified endpoint.</summary>
      <param name="serviceEndpoint">The endpoint to validate.</param>
    </member>
    <member name="T:Microsoft.ServiceBus.ConnectivityMode">
      <summary>Describes the connectivity mode. </summary>
    </member>
    <member name="F:Microsoft.ServiceBus.ConnectivityMode.AutoDetect">
      <summary>Auto-detect mode. Automatically selects between the TCP, HTTP and HTTPS modes based on an auto-detection mechanism that probes whether either connectivity option is available for the current network environment. If both are available, the system will choose TCP by default.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.ConnectivityMode.Http">
      <summary>HTTP mode. Listeners attempt an HTTP connection followed by an HTTPS connection with the Windows Azure Service Bus service and poll for messages. This might allow you to more easily work around TCP port constraints.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.ConnectivityMode.Tcp">
      <summary>TCP mode (default). Listeners create TCP connections to the Windows Azure Service Bus service to a destination port in the range 9350 to 9354.</summary>
    </member>
    <member name="T:Microsoft.ServiceBus.ConnectivitySettings">
      <summary>Holds the connectivity settings effective for all Windows Azure Service Bus-based endpoints that are active in the current application domain. </summary>
    </member>
    <member name="M:Microsoft.ServiceBus.ConnectivitySettings.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.ConnectivitySettings" /> class. </summary>
    </member>
    <member name="F:Microsoft.ServiceBus.ConnectivitySettings.connectivityMode">
      <summary>Contains the <see cref="T:Microsoft.ServiceBus.ConnectivityMode" /> for the current instance. </summary>
    </member>
    <member name="P:Microsoft.ServiceBus.ConnectivitySettings.IsReadOnly">
      <summary>Gets a value that determines if the connectivity settings are read-only. </summary>
      <returns>true if the connectivity settings are read-only; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.ConnectivitySettings.Mode">
      <summary>Gets or sets the connectivity mode for the current application domain. </summary>
      <returns>Returns <see cref="T:Microsoft.ServiceBus.ConnectivityMode" />.Contains the connectivity mode. </returns>
    </member>
    <member name="T:Microsoft.ServiceBus.DiscoveryType">
      <summary>Describes the publishing behavior of a service in the Service Registry.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.DiscoveryType.Private">
      <summary>The service will not be published in the Service Registry.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.DiscoveryType.Public">
      <summary>The Service will be published in the Service Registry.</summary>
    </member>
    <member name="T:Microsoft.ServiceBus.EndToEndBasicHttpSecurityMode">
      <summary>An enumeration type that specifies the modes of security that can be used with <see cref="T:Microsoft.ServiceBus.BasicHttpRelayBinding" />. </summary>
    </member>
    <member name="F:Microsoft.ServiceBus.EndToEndBasicHttpSecurityMode.Message">
      <summary>Security is provided using WS-Security SOAP message security. For the <see cref="T:Microsoft.ServiceBus.BasicHttpRelayBinding" />, the system requires that the server certificate be provided to the client separately. The valid client credential types for this binding are UserName and Certificate.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.EndToEndBasicHttpSecurityMode.None">
      <summary>Messages are not secured during transfer. </summary>
    </member>
    <member name="F:Microsoft.ServiceBus.EndToEndBasicHttpSecurityMode.Transport">
      <summary>Security is provided using HTTPS. The service must be configured with SSL certificates. The SOAP message is protected as a whole using HTTPS. The service is authenticated by the client using the service’s SSL certificate. The client authentication is controlled through the ClientCredentialType.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.EndToEndBasicHttpSecurityMode.TransportWithMessageCredential">
      <summary>Integrity, confidentiality and server authentication are provided by HTTPS. The service must be configured with a certificate. Client authentication is provided by means of SOAP message security. This mode is applicable when the user is authenticating with a UserName or Certificate credential and there is an existing HTTPS deployment for securing message transfer.</summary>
    </member>
    <member name="T:Microsoft.ServiceBus.EndToEndSecurityMode">
      <summary>Determines the security settings for an Windows Azure Service Bus binding and describes the security relationship between the client and the service endpoint.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.EndToEndSecurityMode.Message">
      <summary>Security is provided using SOAP message security.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.EndToEndSecurityMode.None">
      <summary>Security is disabled.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.EndToEndSecurityMode.Transport">
      <summary>Security is provided using a transport security, typically SSL.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.EndToEndSecurityMode.TransportWithMessageCredential">
      <summary>A secure transport (for example, HTTPS) provides integrity, confidentiality, and authentication while SOAP message security provides client authentication.</summary>
    </member>
    <member name="T:Microsoft.ServiceBus.EndToEndWebHttpSecurityMode">
      <summary>Specifies the types of security that can be used with the <see cref="T:Microsoft.ServiceBus.WebHttpRelayBinding" />.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.EndToEndWebHttpSecurityMode.None">
      <summary>Indicates that no security is used with HTTP requests.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.EndToEndWebHttpSecurityMode.Transport">
      <summary>Indicates that transport-level security is required; clients must use HTTPS to communicate with the service endpoint.</summary>
    </member>
    <member name="T:Microsoft.ServiceBus.ExceptionErrorCodes">
      <summary>Specifies the error codes of the exceptions.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.ExceptionErrorCodes.AudienceNotFound">
      <summary>The audience is not found.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.ExceptionErrorCodes.BadGatewayFailure">
      <summary>The error is caused by bad gateway.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.ExceptionErrorCodes.BadRequest">
      <summary>A parse error encountered while processing a request.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.ExceptionErrorCodes.ConflictGeneric">
      <summary>A generic conflict error.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.ExceptionErrorCodes.ConflictOperationInProgress">
      <summary>An operation is in progress.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.ExceptionErrorCodes.CorrelationFiltersExceeded">
      <summary>The correlation filters exceeded its allowable maximum number.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.ExceptionErrorCodes.DataCommunicationError">
      <summary>The error of data communication.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.ExceptionErrorCodes.EndpointNotFound">
      <summary>The endpoint is not found.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.ExceptionErrorCodes.EntityGone">
      <summary>The entity is not found.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.ExceptionErrorCodes.EventHubAtFullCapacity">
      <summary>The Event Hub is at full capacity.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.ExceptionErrorCodes.ExpiredToken">
      <summary>The token had expired.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.ExceptionErrorCodes.ExpiresOnNotFound">
      <summary>The expiry date not found.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.ExceptionErrorCodes.ForbiddenGeneric">
      <summary>A generic forbidden error.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.ExceptionErrorCodes.GatewayTimeoutFailure">
      <summary>The gateway did not receive a timely response from the upstream server.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.ExceptionErrorCodes.InternalFailure">
      <summary>An internal error.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.ExceptionErrorCodes.InvalidAudience">
      <summary>The audience is invalid.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.ExceptionErrorCodes.InvalidDestination">
      <summary>The destination is invalid.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.ExceptionErrorCodes.InvalidSignature">
      <summary>The signature is invalid.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.ExceptionErrorCodes.IssuerNotFound">
      <summary>The issuer cannot be found.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.ExceptionErrorCodes.MalformedToken">
      <summary>A malformed token.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.ExceptionErrorCodes.MissingToken">
      <summary>The token is missing.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.ExceptionErrorCodes.NamespaceNotFound">
      <summary>The namespace is not found.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.ExceptionErrorCodes.NoTransportSecurity">
      <summary>The service bus has no transport security.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.ExceptionErrorCodes.ProviderUnreachable">
      <summary>The provider is unreachable.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.ExceptionErrorCodes.ServerBusy">
      <summary>The server is busy.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.ExceptionErrorCodes.SignatureNotFound">
      <summary>The signature cannot be found.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.ExceptionErrorCodes.SqlFiltersExceeded">
      <summary>The SQL filters exceeded its allowable maximum number.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.ExceptionErrorCodes.StoreLockLost">
      <summary>The store lock is lost.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.ExceptionErrorCodes.SubscriptionsExceeded">
      <summary>The subscriptions exceeded its allowable maximum number.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.ExceptionErrorCodes.UnauthorizedGeneric">
      <summary>A generic unauthorized error.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.ExceptionErrorCodes.UnknownExceptionDetail">
      <summary>The detail of an unknown exception.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.ExceptionErrorCodes.UnspecifiedInternalError">
      <summary>An internal error that is not specified.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.ExceptionErrorCodes.UpdateConflict">
      <summary>A conflict during updating occurred.</summary>
    </member>
    <member name="T:Microsoft.ServiceBus.HttpRelayTransportBindingElement">
      <summary>Represents the binding element used to specify an HTTP transport for transmitting messages on the Windows Azure Service Bus. </summary>
    </member>
    <member name="M:Microsoft.ServiceBus.HttpRelayTransportBindingElement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.HttpRelayTransportBindingElement" /> class.</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.HttpRelayTransportBindingElement.#ctor(Microsoft.ServiceBus.HttpRelayTransportBindingElement)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.HttpRelayTransportBindingElement" /> class, using the specified element to be cloned.</summary>
      <param name="elementToBeCloned">The element to be cloned.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.HttpRelayTransportBindingElement.#ctor(Microsoft.ServiceBus.RelayClientAuthenticationType)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.HttpRelayTransportBindingElement" /> class using the specified client authentication type.</summary>
      <param name="relayClientAuthenticationType">The client authentication type.</param>
    </member>
    <member name="P:Microsoft.ServiceBus.HttpRelayTransportBindingElement.AllowCookies">
      <summary>Gets or sets a value that indicates whether the client accepts cookies and propagates them on future requests.</summary>
      <returns>true if cookies are allowed; otherwise, false. The default is false.</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.HttpRelayTransportBindingElement.BuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Creates a channel factory that can be used to create a channel.</summary>
      <returns>The channel factory of the specified type.</returns>
      <param name="context">The binding context for the channel.</param>
      <typeparam name="TChannel">Type of channel factory.</typeparam>
    </member>
    <member name="M:Microsoft.ServiceBus.HttpRelayTransportBindingElement.BuildChannelListener``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Creates a channel listener for channels of the specified generic type.</summary>
      <returns>A channel listener.</returns>
      <param name="context">The binding context.</param>
      <typeparam name="TChannel">The type of channels to listen to.</typeparam>
    </member>
    <member name="M:Microsoft.ServiceBus.HttpRelayTransportBindingElement.CanBuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Determines whether a channel factory of the specified type can be built.</summary>
      <returns>true if a channel factory can be built; otherwise, false.</returns>
      <param name="context">The binding context for the channel.</param>
      <typeparam name="TChannel">The type of channel to check.</typeparam>
    </member>
    <member name="M:Microsoft.ServiceBus.HttpRelayTransportBindingElement.CanBuildChannelListener``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Returns a value that indicates whether the binding element can build a listener for a specific type of channel.</summary>
      <returns>true if the IChannelListener&lt;TChannel&gt; of type IChannel can be built by the binding element; otherwise, false.</returns>
      <param name="context">The binding context that provides context for the binding element.</param>
      <typeparam name="TChannel">The type of channel the listener accepts.</typeparam>
      <exception cref="ArgumentNullException">context is null.</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.HttpRelayTransportBindingElement.Clone">
      <summary>Returns a copy of the binding element object.</summary>
      <returns>Returns a <see cref="T:System.ServiceModel.Channels.BindingElement" /> that contains a deep clone of the original.</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.HttpRelayTransportBindingElement.CreateInnerChannelBindingElement">
      <summary>Creates a <see cref="T:System.ServiceModel.Channels.HttpTransportBindingElement" /> for the inner channel.</summary>
      <returns>A <see cref="T:System.ServiceModel.Channels.HttpTransportBindingElement" /> for the inner channel.</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.HttpRelayTransportBindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Gets the specified property from the specified binding context.</summary>
      <returns>The property from the specified binding context.</returns>
      <param name="context">The binding context.</param>
      <typeparam name="T">The type of the property to get.</typeparam>
    </member>
    <member name="M:Microsoft.ServiceBus.HttpRelayTransportBindingElement.GetTransportTokenAssertion">
      <summary>Gets the XML element that represents the transport token used in the security binding.</summary>
      <returns>The transport token used in the security binding.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.HttpRelayTransportBindingElement.HostNameComparisonMode">
      <summary>Gets or sets the comparison mode use in the host name.</summary>
      <returns>The comparison mode use in the host name.</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.HttpRelayTransportBindingElement.InitializeInnerChannelBindingElement(System.ServiceModel.Channels.HttpTransportBindingElement)">
      <summary>Initializes the specified binding element with the settings from the current instance of the <see cref="T:Microsoft.ServiceBus.HttpRelayTransportBindingElement" /> binding element.</summary>
      <param name="httpTransportElement">The binding element to initialize.</param>
    </member>
    <member name="P:Microsoft.ServiceBus.HttpRelayTransportBindingElement.IsDynamic">
      <summary>Gets or sets whether the binding element is dynamic.</summary>
      <returns>true if the binding element is dynamic; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.HttpRelayTransportBindingElement.KeepAliveEnabled">
      <summary>Gets or sets a value that indicates whether to make a persistent connection to a service endpoint. </summary>
      <returns>true if the request to the service endpoint should contain a Connection HTTP header with the value Keep-alive; otherwise, false. The default is true.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.HttpRelayTransportBindingElement.MaxBufferSize">
      <summary>Gets or sets the maximum size of the buffer to use.</summary>
      <returns>Returns the maximum size, in bytes, of the buffer.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.HttpRelayTransportBindingElement.ProxyAddress">
      <summary>Gets or sets a URI that contains the address of the proxy to use for HTTP requests.</summary>
      <returns>Returns a <see cref="T:System.Uri" /> that contains the address for the proxy. The default value is null.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.HttpRelayTransportBindingElement.ProxyAuthenticationScheme">
      <summary>Gets or sets the authentication scheme used to authenticate client requests being processed by an HTTP proxy.</summary>
      <returns>One of the values of the <see cref="T:System.Net.AuthenticationSchemes" /> enumeration that specifies the protocols used for client authentication on the proxy. The default is Anonymous. </returns>
    </member>
    <member name="P:Microsoft.ServiceBus.HttpRelayTransportBindingElement.RelayClientAuthenticationType">
      <summary>Gets or sets the relay client authentication type. </summary>
      <returns>Returns <see cref="T:Microsoft.ServiceBus.RelayClientAuthenticationType" />.Contains the authentication type. The default value is RelayClientAuthenticationType.RelayAccessToken</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.HttpRelayTransportBindingElement.Scheme">
      <summary>Gets the URI scheme for the transport.</summary>
      <returns>Returns the URI scheme.</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.HttpRelayTransportBindingElement.System#ServiceModel#Description#IPolicyExportExtension#ExportPolicy(System.ServiceModel.Description.MetadataExporter,System.ServiceModel.Description.PolicyConversionContext)">
      <summary>Exports a custom policy assertion about bindings.</summary>
      <param name="exporter">The metadata exporter you can use to modify the exporting process.</param>
      <param name="context">The policy conversion context you can use to insert your custom policy assertion.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.HttpRelayTransportBindingElement.System#ServiceModel#Description#IWsdlExportExtension#ExportContract(System.ServiceModel.Description.WsdlExporter,System.ServiceModel.Description.WsdlContractConversionContext)">
      <summary>Writes custom Web Services Description Language (WSDL) elements into the generated WSDL for a contract.</summary>
      <param name="exporter">The WSDL explorer that exports the contract information.</param>
      <param name="context">Provides mappings from exported WSDL elements to the contract description.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.HttpRelayTransportBindingElement.System#ServiceModel#Description#IWsdlExportExtension#ExportEndpoint(System.ServiceModel.Description.WsdlExporter,System.ServiceModel.Description.WsdlEndpointConversionContext)">
      <summary>Writes custom Web Services Description Language (WSDL) elements into the generated WSDL for an endpoint.</summary>
      <param name="exporter">The WSDL explorer that exports the contract information.</param>
      <param name="context">Provides mappings from exported WSDL elements to the endpoint description.</param>
    </member>
    <member name="P:Microsoft.ServiceBus.HttpRelayTransportBindingElement.TransferMode">
      <summary>Gets or sets the transfer mode.</summary>
      <returns>Returns a <see cref="T:System.ServiceModel.TransferMode" /> that contains the transfer mode.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.HttpRelayTransportBindingElement.UseDefaultWebProxy">
      <summary>Gets or sets a value that indicates whether the machine-wide proxy settings are used rather than the user specific settings.</summary>
      <returns>true if the machine-wide proxy settings are used; otherwise, false. The default is true.</returns>
    </member>
    <member name="T:Microsoft.ServiceBus.HttpRelayTransportSecurity">
      <summary>Represents the transport-level security settings for the <see cref="T:Microsoft.ServiceBus.WSHttpRelayBinding" />.</summary>
    </member>
    <member name="P:Microsoft.ServiceBus.HttpRelayTransportSecurity.ProxyCredentialType">
      <summary>Gets or sets the type of client credential to be used for authentication against the proxy.</summary>
      <returns>Returns a <see cref="T:System.ServiceModel.HttpProxyCredentialType" /> that contains the client credential.</returns>
      <exception cref="ArgumentOutOfRangeException">Setting the property to an undefined value.</exception>
    </member>
    <member name="T:Microsoft.ServiceBus.HttpsRelayTransportBindingElement">
      <summary>Represents the binding element used to specify an HTTPS relay transport for transmitting messages.</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.HttpsRelayTransportBindingElement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.HttpsRelayTransportBindingElement" /> class, using the default settings.</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.HttpsRelayTransportBindingElement.#ctor(Microsoft.ServiceBus.HttpsRelayTransportBindingElement)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.HttpsRelayTransportBindingElement" /> class, using the specified element.</summary>
      <param name="elementToBeCloned">The element to be cloned.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.HttpsRelayTransportBindingElement.#ctor(Microsoft.ServiceBus.RelayClientAuthenticationType)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.HttpsRelayTransportBindingElement" /> class, using the specified type of client authentication.</summary>
      <param name="relayClientAuthenticationType">The relay client authentication type.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.HttpsRelayTransportBindingElement.Clone">
      <summary>Creates a deep copy of the current binding element.</summary>
      <returns>A deep copy of the current binding element.</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.HttpsRelayTransportBindingElement.CreateInnerChannelBindingElement">
      <summary>Creates a <see cref="T:System.ServiceModel.Channels.HttpTransportBindingElement" /> binding element for the inner channel.</summary>
      <returns>A binding element for the inner channel.</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.HttpsRelayTransportBindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Gets the specified property from the specified binding context.</summary>
      <returns>A binding element that contains the property.</returns>
      <param name="context">The binding context.</param>
      <typeparam name="T">The type of the property to get.</typeparam>
    </member>
    <member name="M:Microsoft.ServiceBus.HttpsRelayTransportBindingElement.InitializeInnerChannelBindingElement(System.ServiceModel.Channels.HttpTransportBindingElement)">
      <summary>Initializes the specified binding element with the settings from the current instance of the <see cref="T:Microsoft.ServiceBus.HttpsRelayTransportBindingElement" /> binding element.</summary>
      <param name="httpTransportElement">The binding element to initialize.</param>
    </member>
    <member name="P:Microsoft.ServiceBus.HttpsRelayTransportBindingElement.Scheme">
      <summary>Gets the URI scheme for the transport.</summary>
      <returns>The URI scheme for the transport, which is “HTTPS”.</returns>
    </member>
    <member name="T:Microsoft.ServiceBus.HybridConnectionState">
      <summary>Describes the current connection state for a hybrid connection.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.HybridConnectionState.Direct">
      <summary>A direct connection. The communicating parties connect using a socket routed on the most direct network path, rather than through the Windows Azure Service Bus infrastructure. </summary>
    </member>
    <member name="F:Microsoft.ServiceBus.HybridConnectionState.Relayed">
      <summary>A relayed connection. The communicating parties connect through a relayed socket and the Windows Azure Service Bus infrastructure. </summary>
    </member>
    <member name="T:Microsoft.ServiceBus.HybridConnectionStateChangedArgs">
      <summary>Represents the arguments to the hybrid connection state change.</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.HybridConnectionStateChangedArgs.#ctor(Microsoft.ServiceBus.HybridConnectionState)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.HybridConnectionStateChangedArgs" /> class.</summary>
      <param name="state">The state of the hybrid connection.</param>
    </member>
    <member name="P:Microsoft.ServiceBus.HybridConnectionStateChangedArgs.ConnectionState">
      <summary>Gets the current connection state of the hybrid connection.</summary>
      <returns>Returns <see cref="T:Microsoft.ServiceBus.HybridConnectionState" />.Contains the connection state. </returns>
    </member>
    <member name="T:Microsoft.ServiceBus.IConnectionStatus">
      <summary>Describes the current status of a one-way connection.</summary>
    </member>
    <member name="E:Microsoft.ServiceBus.IConnectionStatus.Connecting">
      <summary>Occurs when the connection is being established.</summary>
    </member>
    <member name="P:Microsoft.ServiceBus.IConnectionStatus.IsOnline">
      <summary>Gets a value that determines whether the connection is online.</summary>
      <returns>true if the connection is alive and online; false if there is no connectivity towards the Windows Azure Service Bus from the current network location.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.IConnectionStatus.LastError">
      <summary>Retrieves the last error encountered when trying to reestablish the connection from the offline state.</summary>
      <returns>Returns a <see cref="T:System.Exception" /> that contains the last error.</returns>
    </member>
    <member name="E:Microsoft.ServiceBus.IConnectionStatus.Offline">
      <summary>Occurs when the connection becomes offline.</summary>
    </member>
    <member name="E:Microsoft.ServiceBus.IConnectionStatus.Online">
      <summary>Occurs when the connection becomes online.</summary>
    </member>
    <member name="T:Microsoft.ServiceBus.IHybridConnectionStatus">
      <summary>Provides access to the current connection state of a hybrid connection channel.</summary>
    </member>
    <member name="P:Microsoft.ServiceBus.IHybridConnectionStatus.ConnectionState">
      <summary>Gets the current connection state of the hybrid connection. </summary>
      <returns>Returns <see cref="T:Microsoft.ServiceBus.HybridConnectionState" />.Contains the connection state. </returns>
    </member>
    <member name="E:Microsoft.ServiceBus.IHybridConnectionStatus.ConnectionStateChanged">
      <summary>Occurs when the connection state changes. </summary>
    </member>
    <member name="T:Microsoft.ServiceBus.InvalidRequestException">
      <summary>The exception that is thrown when an invalid request occurs.</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.InvalidRequestException.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.InvalidRequestException" /> class. </summary>
    </member>
    <member name="M:Microsoft.ServiceBus.InvalidRequestException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.InvalidRequestException" /> class using the specified information and context.</summary>
      <param name="info">Holds the serialized object data about the exception being thrown.</param>
      <param name="context">Contains contextual information about the source or destination.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.InvalidRequestException.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.InvalidRequestException" /> class using the specified message.</summary>
      <param name="message">The message that describes the error.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.InvalidRequestException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.InvalidRequestException" /> class using the specified message and inner exception.</summary>
      <param name="message">The error message that explains the reason for the exception.</param>
      <param name="innerException">The exception that is the cause of the current exception, or null if no inner exception is specified.</param>
    </member>
    <member name="T:Microsoft.ServiceBus.MessageSecurityOverRelayConnection">
      <summary>Describes the message security on a relay connection for a binding.</summary>
    </member>
    <member name="P:Microsoft.ServiceBus.MessageSecurityOverRelayConnection.AlgorithmSuite">
      <summary>Sets or gets the algorithm suite used for Message Security at the SOAP level. </summary>
      <returns>Returns a <see cref="T:System.ServiceModel.Security.SecurityAlgorithmSuite" /> that contains the algorithm suite. The default value is Base256.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.MessageSecurityOverRelayConnection.ClientCredentialType">
      <summary>Gets or sets the type of client credential used for client authentication.</summary>
      <returns>Returns a <see cref="T:System.ServiceModel.MessageCredentialType" /> that contains the credentials. The default is Windows.</returns>
    </member>
    <member name="T:Microsoft.ServiceBus.MessageSecurityOverRelayHttp">
      <summary>Enables setting message-level security properties on the <see cref="T:Microsoft.ServiceBus.WSHttpRelayBinding" /> binding.</summary>
    </member>
    <member name="P:Microsoft.ServiceBus.MessageSecurityOverRelayHttp.AlgorithmSuite">
      <summary>Specifies the algorithm suite used for security messages at the SOAP level. </summary>
      <returns>Returns <see cref="T:System.ServiceModel.Security.SecurityAlgorithmSuite" />.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.MessageSecurityOverRelayHttp.ClientCredentialType">
      <summary>Specifies the type of client credential used for client authentication.</summary>
      <returns>Returns a <see cref="T:System.ServiceModel.MessageCredentialType" /> that contains the algorithm suite. The default is Basic256.</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.MessageSecurityOverRelayHttp.IsSecureConversationEnabled">
      <summary>Only used in extensibility scenarios to indicate whether an instance of a class derived from <see cref="T:Microsoft.ServiceBus.MessageSecurityOverRelayHttp" /> is configured to perform secure conversation.</summary>
      <returns>Always returns true, unless overridden in a derived class.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.MessageSecurityOverRelayHttp.NegotiateServiceCredential">
      <summary>Gets or sets a value that indicates whether the service credential is provisioned at the client out of band or is obtained from the service through a process of negotiation.</summary>
      <returns>Returns true if service credential is obtained through a process of negotiation; otherwise, false. The default is true.</returns>
    </member>
    <member name="T:Microsoft.ServiceBus.MessageSecurityOverRelayOneway">
      <summary>The message security on a one-way connection over the Windows Azure Service Bus relay.</summary>
    </member>
    <member name="P:Microsoft.ServiceBus.MessageSecurityOverRelayOneway.AlgorithmSuite">
      <summary>Gets or sets the algorithm suite to be used for securing messages at the SOAP level.</summary>
      <returns>Returns an <see cref="T:System.ServiceModel.Security.SecurityAlgorithmSuite" /> containing the algorithm suite. The default is Basic256, which specifies 256-bit Advanced Encryption Standard (AES) as the symmetric encryption algorithm.</returns>
      <exception cref="T:System.ArgumentNullException">The value of the <see cref="T:System.ServiceModel.Security.SecurityAlgorithmSuite" /> is null.</exception>
    </member>
    <member name="P:Microsoft.ServiceBus.MessageSecurityOverRelayOneway.ClientCredentialType">
      <summary>Gets or sets the type of client credential the client uses to authenticate itself to the service at the SOAP level.</summary>
      <returns>Returns a <see cref="T:System.ServiceModel.MessageCredentialType" /> that contains the credential type. The default is Certificate.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The value of <see cref="P:Microsoft.ServiceBus.MessageSecurityOverRelayOneway.ClientCredentialType" /> is not a valid <see cref="T:System.ServiceModel.MessageCredentialType" />.</exception>
    </member>
    <member name="T:Microsoft.ServiceBus.NamespaceManager">
      <summary>Represents an anchor class used in managing entities, such as queues, topics, subscriptions, and rules, in your service namespace. You must provide service namespace address and access credentials in order to manage your service namespace.</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.#ctor(System.Collections.Generic.IEnumerable{System.String})">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.NamespaceManager" /> class with the given addresses.</summary>
      <param name="addresses">The full addresses of the service namespace.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.#ctor(System.Collections.Generic.IEnumerable{System.String},Microsoft.ServiceBus.NamespaceManagerSettings)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.NamespaceManager" /> class with the given addresses and settings.</summary>
      <param name="addresses">The full addresses of the service namespace.</param>
      <param name="settings">A <see cref="T:Microsoft.ServiceBus.NamespaceManagerSettings" /> object, which contains the <see cref="P:Microsoft.ServiceBus.NamespaceManagerSettings.Credential" /> and <see cref="P:Microsoft.ServiceBus.NamespaceManagerSettings.OperationTimeout" /> properties.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.#ctor(System.Collections.Generic.IEnumerable{System.String},Microsoft.ServiceBus.TokenProvider)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.NamespaceManager" /> class with the given addresses and token provider.</summary>
      <param name="addresses">The full addresses of the service namespace.</param>
      <param name="tokenProvider">The security token provider.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.#ctor(System.Collections.Generic.IEnumerable{System.Uri})">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.NamespaceManager" /> class with the given service namespace URI base addresses.</summary>
      <param name="addresses">The full URI addresses of the service namespace.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.#ctor(System.Collections.Generic.IEnumerable{System.Uri},Microsoft.ServiceBus.NamespaceManagerSettings)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.NamespaceManager" /> class with the given service namespace URI base addresses and settings.</summary>
      <param name="addresses">The full URI addresses of the service namespace.</param>
      <param name="settings">A <see cref="T:Microsoft.ServiceBus.NamespaceManagerSettings" /> object, which contains the <see cref="P:Microsoft.ServiceBus.NamespaceManagerSettings.Credential" /> and <see cref="P:Microsoft.ServiceBus.NamespaceManagerSettings.OperationTimeout" /> properties.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.#ctor(System.Collections.Generic.IEnumerable{System.Uri},Microsoft.ServiceBus.TokenProvider)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.NamespaceManager" /> class with the given service namespace URI base addresses and token provider.</summary>
      <param name="addresses">The full URI addresses of the service namespace.</param>
      <param name="tokenProvider">The security token provider.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.NamespaceManager" /> class with the given service namespace address.</summary>
      <param name="address">The full address of the service namespace.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.#ctor(System.String,Microsoft.ServiceBus.NamespaceManagerSettings)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.NamespaceManager" /> class with the given service namespace base address and <see cref="T:Microsoft.ServiceBus.NamespaceManagerSettings" /> object.</summary>
      <param name="address">The full address of the service namespace.</param>
      <param name="settings">A <see cref="T:Microsoft.ServiceBus.NamespaceManagerSettings" /> object, which contains the <see cref="P:Microsoft.ServiceBus.NamespaceManagerSettings.Credential" /> and <see cref="P:Microsoft.ServiceBus.NamespaceManagerSettings.OperationTimeout" /> properties.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="address" /> contains a path appended to the full address of the service namespace.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="address" /> or <paramref name="settings" /> is null.</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.#ctor(System.String,Microsoft.ServiceBus.TokenProvider)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.NamespaceManager" /> class with the given service namespace base address and token provider.</summary>
      <param name="address">The full address of the service namespace.</param>
      <param name="tokenProvider">The security token provider.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="address" /> contains a path appended to the full address of the service namespace.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="address" /> or <paramref name="token provider" /> is null.</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.#ctor(System.Uri)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.NamespaceManager" /> class with the given service namespace URI base address. </summary>
      <param name="address">The full URI address of the service namespace.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.#ctor(System.Uri,Microsoft.ServiceBus.NamespaceManagerSettings)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.NamespaceManager" /> class with the given service namespace URI base address and <see cref="T:Microsoft.ServiceBus.NamespaceManagerSettings" /> object.</summary>
      <param name="address">The full URI address of the service namespace.</param>
      <param name="settings">A <see cref="T:Microsoft.ServiceBus.NamespaceManagerSettings" /> object, which contains the <see cref="P:Microsoft.ServiceBus.NamespaceManagerSettings.Credential" /> and <see cref="P:Microsoft.ServiceBus.NamespaceManagerSettings.OperationTimeout" /> properties.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="address" /> contains a path appended to the full address of the service namespace.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="address" /> or <paramref name="settings" /> is null.</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.#ctor(System.Uri,Microsoft.ServiceBus.TokenProvider)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.NamespaceManager" /> class with the given service namespace URI base address and <see cref="T:Microsoft.ServiceBus.TokenProvider" /> object.</summary>
      <param name="address">The full URI address of the service namespace.</param>
      <param name="tokenProvider">The security token provider object.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="address" /> contains a path appended to the full address of the service namespace.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="address" /> or <paramref name="token provider" /> is null.</exception>
    </member>
    <member name="P:Microsoft.ServiceBus.NamespaceManager.Address">
      <summary>Gets the service namespace base address.</summary>
      <returns>A <see cref="T:System.Uri" /> that represents the service namespace base address.</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.BeginCreateQueue(Microsoft.ServiceBus.Messaging.QueueDescription,System.AsyncCallback,System.Object)">
      <summary>Asynchronous version of <see cref="M:Microsoft.ServiceBus.NamespaceManager.CreateQueue(Microsoft.ServiceBus.Messaging.QueueDescription)" />.</summary>
      <returns>An <see cref="T:System.IAsyncResult" /> object that references the asynchronous operation to create a queue.</returns>
      <param name="description">The queue description object.</param>
      <param name="callback">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</param>
      <param name="state">A user-defined object that contains state information about the asynchronous operation. This object is passed to the <see cref="M:Microsoft.ServiceBus.NamespaceManager.EndCreateQueue(System.IAsyncResult)" /> delegate when the operation is complete.</param>
      <exception cref="T:System.TimeoutException">The operation times out. The timeout period is initialized through the <see cref="T:Microsoft.ServiceBus.NamespaceManagerSettings" /> class. You may need to increase the value of the <see cref="P:Microsoft.ServiceBus.NamespaceManagerSettings.OperationTimeout" /> property to avoid this exception if the timeout value is relatively low.</exception>
      <exception cref="T:Microsoft.ServiceBus.Messaging.MessagingEntityAlreadyExistsException">A queue with the same name and path exists under the same service namespace.</exception>
      <exception cref="T:System.UnauthorizedAccessException">The <see cref="T:Microsoft.ServiceBus.NamespaceManager" /> object does not have sufficient permission to perform this operation. You should check to ensure that your <see cref="T:Microsoft.ServiceBus.NamespaceManager" /> has the correct <see cref="P:Microsoft.ServiceBus.NamespaceManagerSettings.Credential" /> credentials to perform this operation.</exception>
      <exception cref="T:Microsoft.ServiceBus.Messaging.QuotaExceededException">Either the specified size in the description is not supported or the maximum allowable quota has been reached. You must specify one of the supported size values, delete existing entities, or increase your quota size.</exception>
      <exception cref="T:Microsoft.ServiceBus.Messaging.MessagingException">An internal error or unexpected exception occurs.</exception>
      <exception cref="T:Microsoft.ServiceBus.Messaging.ServerBusyException">The server is overloaded with logical operations. You can consider any of the following actions:Wait and retry calling this function.Remove entities before retry (for example, receive messages before sending any more).</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.BeginCreateQueue(System.String,System.AsyncCallback,System.Object)">
      <summary>Asynchronous version of <see cref="M:Microsoft.ServiceBus.NamespaceManager.CreateQueue(System.String)" />.</summary>
      <returns>An <see cref="T:System.IAsyncResult" /> object that references the asynchronous operation to create a queue.</returns>
      <param name="path">The path of the queue relative to the service namespace base address.</param>
      <param name="callback">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</param>
      <param name="state">A user-defined object that contains state information about the asynchronous operation. This object is passed to the <see cref="M:Microsoft.ServiceBus.NamespaceManager.EndCreateQueue(System.IAsyncResult)" /> delegate when the operation is complete.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" /> is null or empty.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">The length of <paramref name="path" /> is greater than <see cref="F:Microsoft.ServiceBus.Messaging.Constants.QueueNameMaximumLength" />.</exception>
      <exception cref="T:System.TimeoutException">The operation times out. The timeout period is initialized through the <see cref="T:Microsoft.ServiceBus.NamespaceManagerSettings" /> class. You may need to increase the value of the <see cref="P:Microsoft.ServiceBus.NamespaceManagerSettings.OperationTimeout" /> property to avoid this exception if the timeout value is relatively low.</exception>
      <exception cref="T:Microsoft.ServiceBus.Messaging.MessagingEntityAlreadyExistsException">A queue with the same name and path exists under the same service namespace.</exception>
      <exception cref="T:System.UnauthorizedAccessException">The <see cref="T:Microsoft.ServiceBus.NamespaceManager" /> object does not have sufficient permission to perform this operation. You should check to ensure that your <see cref="T:Microsoft.ServiceBus.NamespaceManager" /> has the correct <see cref="P:Microsoft.ServiceBus.NamespaceManagerSettings.Credential" /> credentials to perform this operation.</exception>
      <exception cref="T:Microsoft.ServiceBus.Messaging.QuotaExceededException">Either the specified size in the description is not supported or the maximum allowable quota has been reached. You must specify one of the supported size values, delete existing entities, or increase your quota size.</exception>
      <exception cref="T:Microsoft.ServiceBus.Messaging.MessagingException">An internal error or unexpected exception occurs.</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.BeginCreateSubscription(Microsoft.ServiceBus.Messaging.SubscriptionDescription,Microsoft.ServiceBus.Messaging.Filter,System.AsyncCallback,System.Object)">
      <summary>Asynchronous version of <see cref="M:Microsoft.ServiceBus.NamespaceManager.CreateSubscription(Microsoft.ServiceBus.Messaging.SubscriptionDescription,Microsoft.ServiceBus.Messaging.Filters.FilterExpression)" /> method.</summary>
      <returns>An <see cref="T:System.IAsyncResult" /> object that represents the status of the asynchronous create subscription action.</returns>
      <param name="description">The subscription description object.</param>
      <param name="filter">The filter expression used to capture messages satisfying the filtering expression value.</param>
      <param name="callback">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</param>
      <param name="state">A user-defined object that contains state information about the asynchronous operation. This object is passed to the <see cref="M:Microsoft.ServiceBus.NamespaceManager.EndCreateSubscription(System.IAsyncResult)" /> delegate when the operation is complete.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.BeginCreateSubscription(Microsoft.ServiceBus.Messaging.SubscriptionDescription,Microsoft.ServiceBus.Messaging.RuleDescription,System.AsyncCallback,System.Object)">
      <summary>Asynchronous version of <see cref="M:Microsoft.ServiceBus.NamespaceManager.CreateSubscription(Microsoft.ServiceBus.Messaging.SubscriptionDescription,Microsoft.ServiceBus.Messaging.RuleDescription)" /> method.</summary>
      <returns>An <see cref="T:System.IAsyncResult" /> object that represents the status of the asynchronous create subscription action.</returns>
      <param name="description">The subscription description object.</param>
      <param name="ruleDescription">The rule description object.</param>
      <param name="callback">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</param>
      <param name="state">A user-defined object that contains state information about the asynchronous operation. This object is passed to the <see cref="M:Microsoft.ServiceBus.NamespaceManager.EndCreateSubscription(System.IAsyncResult)" /> delegate when the operation is complete.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.BeginCreateSubscription(Microsoft.ServiceBus.Messaging.SubscriptionDescription,System.AsyncCallback,System.Object)">
      <summary>Asynchronous version of <see cref="M:Microsoft.ServiceBus.NamespaceManager.CreateSubscription(Microsoft.ServiceBus.Messaging.SubscriptionDescription)" /> method.</summary>
      <returns>An <see cref="T:System.IAsyncResult" /> object that represents the status of the asynchronous create subscription action.</returns>
      <param name="description">The subscription description object.</param>
      <param name="callback">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</param>
      <param name="state">A user-defined object that contains state information about the asynchronous operation. This object is passed to the <see cref="M:Microsoft.ServiceBus.NamespaceManager.EndCreateSubscription(System.IAsyncResult)" /> delegate when the operation is complete.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.BeginCreateSubscription(System.String,System.String,Microsoft.ServiceBus.Messaging.Filter,System.AsyncCallback,System.Object)">
      <summary>Asynchronous version of <see cref="M:Microsoft.ServiceBus.NamespaceManager.CreateSubscription(System.String,System.String,Microsoft.ServiceBus.Messaging.Filters.FilterExpression)" /> method.</summary>
      <returns>An <see cref="T:System.IAsyncResult" /> object that represents the status of the asynchronous create subscription action.</returns>
      <param name="topicPath">The topic path relative to the service namespace base address.</param>
      <param name="name">The name of the subscription.</param>
      <param name="filter">The filter expression used to capture messages satisfying the filtering expression value.</param>
      <param name="callback">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</param>
      <param name="state">A user-defined object that contains state information about the asynchronous operation. This object is passed to the <see cref="M:Microsoft.ServiceBus.NamespaceManager.EndCreateSubscription(System.IAsyncResult)" /> delegate when the operation is complete.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.BeginCreateSubscription(System.String,System.String,Microsoft.ServiceBus.Messaging.RuleDescription,System.AsyncCallback,System.Object)">
      <summary>Asynchronous version of <see cref="M:Microsoft.ServiceBus.NamespaceManager.CreateSubscription(System.String,System.String,Microsoft.ServiceBus.Messaging.RuleDescription)" /> method.</summary>
      <returns>An <see cref="T:System.IAsyncResult" /> object that represents the status of the asynchronous create subscription action.</returns>
      <param name="topicPath">The topic path relative to the service namespace base address.</param>
      <param name="name">The name of the subscription.</param>
      <param name="ruleDescription">The rule description object.</param>
      <param name="callback">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</param>
      <param name="state">A user-defined object that contains state information about the asynchronous operation. This object is passed to the <see cref="M:Microsoft.ServiceBus.NamespaceManager.EndCreateSubscription(System.IAsyncResult)" /> delegate when the operation is complete.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.BeginCreateSubscription(System.String,System.String,System.AsyncCallback,System.Object)">
      <summary>Asynchronous version of <see cref="M:Microsoft.ServiceBus.NamespaceManager.CreateSubscription(System.String,System.String)" /> method.</summary>
      <returns>An <see cref="T:System.IAsyncResult" /> object that represents the status of the asynchronous create subscription action.</returns>
      <param name="topicPath">The topic path relative to the service namespace base address.</param>
      <param name="name">The name of the subscription.</param>
      <param name="callback">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</param>
      <param name="state">A user-defined object that contains state information about the asynchronous operation. This object is passed to the <see cref="M:Microsoft.ServiceBus.NamespaceManager.EndCreateSubscription(System.IAsyncResult)" /> delegate when the operation is complete.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.BeginCreateTopic(Microsoft.ServiceBus.Messaging.TopicDescription,System.AsyncCallback,System.Object)">
      <summary>Asynchronous version of <see cref="M:Microsoft.ServiceBus.NamespaceManager.CreateTopic(Microsoft.ServiceBus.Messaging.TopicDescription)" /> method.</summary>
      <returns>An <see cref="T:System.IAsyncResult" /> object that represents the status of the asynchronous create topic action.</returns>
      <param name="description">The topic description object.</param>
      <param name="callback">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</param>
      <param name="state">A user-defined object that contains state information about the asynchronous operation. This object is passed to the <see cref="M:Microsoft.ServiceBus.NamespaceManager.EndCreateTopic(System.IAsyncResult)" /> delegate when the operation is complete.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.BeginCreateTopic(System.String,System.AsyncCallback,System.Object)">
      <summary>Asynchronous version of <see cref="M:Microsoft.ServiceBus.NamespaceManager.CreateTopic(System.String)" /> method.</summary>
      <returns>An <see cref="T:System.IAsyncResult" /> object that represents the status of the asynchronous create topic action.</returns>
      <param name="path">The path of the topic relative to the service namespace base address.</param>
      <param name="callback">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</param>
      <param name="state">A user-defined object that contains state information about the asynchronous operation. This object is passed to the <see cref="M:Microsoft.ServiceBus.NamespaceManager.EndCreateTopic(System.IAsyncResult)" /> delegate when the operation is complete.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" /> is null or empty.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">The length of <paramref name="path" /> is greater than <see cref="F:Microsoft.ServiceBus.Messaging.Constants.QueueNameMaximumLength" />.</exception>
      <exception cref="T:System.TimeoutException">The operation times out. The timeout period is initialized through the <see cref="T:Microsoft.ServiceBus.NamespaceManagerSettings" /> class. You may need to increase the value of the <see cref="P:Microsoft.ServiceBus.NamespaceManagerSettings.OperationTimeout" /> property to avoid this exception if the timeout value is relatively low.</exception>
      <exception cref="T:Microsoft.ServiceBus.Messaging.MessagingEntityAlreadyExistsException">A queue with the same name and path exists under the same service namespace.</exception>
      <exception cref="T:System.UnauthorizedAccessException">The <see cref="T:Microsoft.ServiceBus.NamespaceManager" /> object does not have sufficient permission to perform this operation. You should check to ensure that your <see cref="T:Microsoft.ServiceBus.NamespaceManager" /> has the correct <see cref="P:Microsoft.ServiceBus.NamespaceManagerSettings.Credential" /> credentials to perform this operation.</exception>
      <exception cref="T:Microsoft.ServiceBus.Messaging.QuotaExceededException">Either the specified size in the description is not supported or the maximum allowable quota has been reached. You must specify one of the supported size values, delete existing entities, or increase your quota size.</exception>
      <exception cref="T:Microsoft.ServiceBus.Messaging.MessagingException">An internal error or unexpected exception occurs.</exception>
      <exception cref="T:Microsoft.ServiceBus.Messaging.ServerBusyException">The server is overloaded with logical operations. You can consider any of the following actions:Wait and retry calling this function.Remove entities before retry (for example, receive messages before sending any more).</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.BeginDeleteQueue(System.String,System.AsyncCallback,System.Object)">
      <summary>Asynchronous version of <see cref="M:Microsoft.ServiceBus.NamespaceManager.DeleteQueue(System.String)" /> method.</summary>
      <returns>An <see cref="T:System.IAsyncResult" /> that references the asynchronous operation to delete a queue.</returns>
      <param name="path">The path of the queue relative to the service namespace base address.</param>
      <param name="callback">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</param>
      <param name="state">A user-defined object that contains state information about the asynchronous operation. This object is passed to the <see cref="M:Microsoft.ServiceBus.NamespaceManager.EndDeleteQueue(System.IAsyncResult)" /> delegate when the operation is complete.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" /> is empty or null, or <paramref name="path" /> starts or ends with "/".</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">The length of <paramref name="path" /> is greater than <see cref="F:Microsoft.ServiceBus.Messaging.Constants.QueueNameMaximumLength" />.</exception>
      <exception cref="T:System.TimeoutException">The operation times out. The timeout period is initialized through the <see cref="T:Microsoft.ServiceBus.NamespaceManagerSettings" /> class. You may need to increase the value of the <see cref="P:Microsoft.ServiceBus.NamespaceManagerSettings.OperationTimeout" /> property to avoid this exception if the timeout value is relatively low.</exception>
      <exception cref="T:Microsoft.ServiceBus.Messaging.MessagingEntityNotFoundException">The queue does not exist under this path.</exception>
      <exception cref="T:System.UnauthorizedAccessException">The <see cref="T:Microsoft.ServiceBus.NamespaceManager" /> object does not have sufficient permission to perform this operation. You should check to ensure that your <see cref="T:Microsoft.ServiceBus.NamespaceManager" /> has the correct <see cref="P:Microsoft.ServiceBus.NamespaceManagerSettings.Credential" /> credentials to perform this operation.</exception>
      <exception cref="T:Microsoft.ServiceBus.Messaging.MessagingException">An internal error or unexpected exception occurs.</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.BeginDeleteSubscription(System.String,System.String,System.AsyncCallback,System.Object)">
      <summary>Asynchronous version of <see cref="M:Microsoft.ServiceBus.NamespaceManager.DeleteSubscription(System.String,System.String)" /> method.</summary>
      <returns>An <see cref="T:System.IAsyncResult" /> that references the asynchronous operation to delete a subscription.</returns>
      <param name="topicPath">The path of the queue relative to the service namespace base address.</param>
      <param name="name">The name of the subscription.</param>
      <param name="callback">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</param>
      <param name="state">A user-defined object that contains state information about the asynchronous operation. This object is passed to the <see cref="M:Microsoft.ServiceBus.NamespaceManager.EndDeleteSubscription(System.IAsyncResult)" /> delegate when the operation is complete.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.BeginDeleteTopic(System.String,System.AsyncCallback,System.Object)">
      <summary>Asynchronous version of <see cref="M:Microsoft.ServiceBus.NamespaceManager.DeleteTopic(System.String)" /> method.</summary>
      <returns>An <see cref="T:System.IAsyncResult" /> object that references the asynchronous operation to delete a topic.</returns>
      <param name="path">The path of the topic relative to the service namespace base address.</param>
      <param name="callback">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</param>
      <param name="state">A user-defined object that contains state information about the asynchronous operation. This object is passed to the <see cref="M:Microsoft.ServiceBus.NamespaceManager.EndDeleteTopic(System.IAsyncResult)" /> delegate when the operation is complete.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" /> is empty or null, or <paramref name="path" /> starts or ends with "/".</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.BeginGetQueue(System.String,System.AsyncCallback,System.Object)">
      <summary>Asynchronous version of <see cref="M:Microsoft.ServiceBus.NamespaceManager.GetQueue(System.String)" /> method.</summary>
      <returns>An <see cref="T:System.IAsyncResult" /> that references the asynchronous operation to get a queue.</returns>
      <param name="path">The path of the queue relative to the service namespace base address.</param>
      <param name="callback">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</param>
      <param name="state">A user-defined object that contains state information about the asynchronous operation. This object is passed to the <see cref="M:Microsoft.ServiceBus.NamespaceManager.EndGetQueue(System.IAsyncResult)" /> delegate when the operation is complete.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" /> is empty or null.</exception>
      <exception cref="T:System.TimeoutException">The operation times out. The timeout period is initialized through the <see cref="T:Microsoft.ServiceBus.NamespaceManagerSettings" /> class. You may need to increase the value of the <see cref="P:Microsoft.ServiceBus.NamespaceManagerSettings.OperationTimeout" /> property to avoid this exception if the timeout value is relatively low.</exception>
      <exception cref="T:System.UnauthorizedAccessException">The <see cref="T:Microsoft.ServiceBus.NamespaceManager" /> object does not have sufficient permission to perform this operation. You should check to ensure that your <see cref="T:Microsoft.ServiceBus.NamespaceManager" /> has the correct <see cref="P:Microsoft.ServiceBus.NamespaceManagerSettings.Credential" /> credentials to perform this operation.</exception>
      <exception cref="T:Microsoft.ServiceBus.Messaging.MessagingException">An internal error or unexpected exception occurs.</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.BeginGetQueues(System.AsyncCallback,System.Object)">
      <summary>Asynchronous version of <see cref="M:Microsoft.ServiceBus.NamespaceManager.GetQueues" />.</summary>
      <returns>An <see cref="T:System.IAsyncResult" /> that references the asynchronous operation to get a queue collection.</returns>
      <param name="callback">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</param>
      <param name="state">A user-defined object that contains state information about the asynchronous operation. This object is passed to the <see cref="M:Microsoft.ServiceBus.NamespaceManager.EndGetQueues(System.IAsyncResult)" /> delegate when the operation is complete.</param>
      <exception cref="T:System.TimeoutException">The operation times out. The timeout period is initialized through the <see cref="T:Microsoft.ServiceBus.NamespaceManagerSettings" /> class. You may need to increase the value of the <see cref="P:Microsoft.ServiceBus.NamespaceManagerSettings.OperationTimeout" /> property to avoid this exception if the timeout value is relatively low.</exception>
      <exception cref="T:System.UnauthorizedAccessException">The <see cref="T:Microsoft.ServiceBus.NamespaceManager" /> object does not have sufficient permission to perform this operation. You should check to ensure that your <see cref="T:Microsoft.ServiceBus.NamespaceManager" /> has the correct <see cref="P:Microsoft.ServiceBus.NamespaceManagerSettings.Credential" /> credentials to perform this operation.</exception>
      <exception cref="T:Microsoft.ServiceBus.Messaging.MessagingException">An internal error or unexpected exception occurs.</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.BeginGetQueues(System.String,System.AsyncCallback,System.Object)">
      <summary>Asynchronous version of <see cref="M:Microsoft.ServiceBus.NamespaceManager.GetQueues(System.String)" /> method.</summary>
      <returns>An <see cref="T:System.IAsyncResult" /> that references the asynchronous operation to get a queue collection.</returns>
      <param name="filter">The sting used to filter the queues.</param>
      <param name="callback">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</param>
      <param name="state">A user-defined object that contains state information about the asynchronous operation. This object is passed to the <see cref="M:Microsoft.ServiceBus.NamespaceManager.EndGetQueues(System.IAsyncResult)" /> delegate when the operation is complete.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.BeginGetRules(System.String,System.String,System.AsyncCallback,System.Object)">
      <summary>Asynchronous version of <see cref="M:Microsoft.ServiceBus.NamespaceManager.GetRules(System.String,System.String)" /> method.</summary>
      <returns>An <see cref="T:System.IAsyncResult" /> that references the asynchronous operation to get all rules in the service namespace.</returns>
      <param name="topicPath">The path of the topic relative to the service namespace base address.</param>
      <param name="subscriptionName">The name of the subscription.</param>
      <param name="callback">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</param>
      <param name="state">A user-defined object that contains state information about the asynchronous operation. This object is passed to the <see cref="M:Microsoft.ServiceBus.NamespaceManager.EndGetRules(System.IAsyncResult)" /> delegate when the operation is complete.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.BeginGetRules(System.String,System.String,System.String,System.AsyncCallback,System.Object)">
      <summary>Asynchronous version of <see cref="M:Microsoft.ServiceBus.NamespaceManager.GetRules(System.String,System.String,System.String)" /> method.</summary>
      <returns>An <see cref="T:System.IAsyncResult" /> that references the asynchronous operation to get all rules in the service namespace.</returns>
      <param name="topicPath">The path of the topic relative to the service namespace base address.</param>
      <param name="subscriptionName">The name of the subscription.</param>
      <param name="filter">The string used to filter the rules.</param>
      <param name="callback">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</param>
      <param name="state">A user-defined object that contains state information about the asynchronous operation. This object is passed to the <see cref="M:Microsoft.ServiceBus.NamespaceManager.EndGetRules(System.IAsyncResult)" /> delegate when the operation is complete.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.BeginGetSubscription(System.String,System.String,System.AsyncCallback,System.Object)">
      <summary>Asynchronous version of <see cref="M:Microsoft.ServiceBus.NamespaceManager.GetSubscription(System.String,System.String)" /> method.</summary>
      <returns>An <see cref="T:System.IAsyncResult" /> that references the asynchronous operation to get a subscription.</returns>
      <param name="topicPath">The path of the topic relative to the service namespace base address.</param>
      <param name="name">The name of the subscription.</param>
      <param name="callback">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</param>
      <param name="state">A user-defined object that contains state information about the asynchronous operation. This object is passed to the <see cref="M:Microsoft.ServiceBus.NamespaceManager.EndGetSubscription(System.IAsyncResult)" /> delegate when the operation is complete.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.BeginGetSubscriptions(System.String,System.AsyncCallback,System.Object)">
      <summary>Asynchronous version of <see cref="M:Microsoft.ServiceBus.NamespaceManager.GetSubscriptions(System.String)" /> method.</summary>
      <returns>An <see cref="T:System.IAsyncResult" /> that references the asynchronous operation to get all subscriptions in the service namespace.</returns>
      <param name="topicPath">The path of the topic relative to the service namespace base address.</param>
      <param name="callback">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</param>
      <param name="state">A user-defined object that contains state information about the asynchronous operation. This object is passed to the <see cref="M:Microsoft.ServiceBus.NamespaceManager.EndGetSubscriptions(System.IAsyncResult)" /> delegate when the operation is complete.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.BeginGetSubscriptions(System.String,System.String,System.AsyncCallback,System.Object)">
      <summary>Asynchronous version of <see cref="M:Microsoft.ServiceBus.NamespaceManager.GetSubscriptions(System.String,System.String)" />.</summary>
      <returns>An <see cref="T:System.IAsyncResult" /> that references the asynchronous operation to get all subscriptions in the service namespace.</returns>
      <param name="topicPath">The path of the topic relative to the service namespace base address.</param>
      <param name="filter">The string used to filter the subscriptions.</param>
      <param name="callback">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</param>
      <param name="state">A user-defined object that contains state information about the asynchronous operation. This object is passed to the <see cref="M:Microsoft.ServiceBus.NamespaceManager.EndGetSubscriptions(System.IAsyncResult)" /> delegate when the operation is complete.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.BeginGetTopic(System.String,System.AsyncCallback,System.Object)">
      <summary>Asynchronous version of <see cref="M:Microsoft.ServiceBus.NamespaceManager.GetTopic(System.String)" /> method.</summary>
      <returns>An <see cref="T:System.IAsyncResult" /> object that references the asynchronous operation to get a topic.</returns>
      <param name="path">The path of the topic relative to the service namespace base address.</param>
      <param name="callback">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</param>
      <param name="state">A user-defined object that contains state information about the asynchronous operation. This object is passed to the <see cref="M:Microsoft.ServiceBus.NamespaceManager.EndGetTopic(System.IAsyncResult)" /> delegate when the operation is complete.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" /> is empty or null, or <paramref name="path" /> starts or ends with "/".</exception>
      <exception cref="T:System.TimeoutException">The operation times out. The timeout period is initialized through the <see cref="T:Microsoft.ServiceBus.NamespaceManagerSettings" /> class. You may need to increase the value of the <see cref="P:Microsoft.ServiceBus.NamespaceManagerSettings.OperationTimeout" /> property to avoid this exception if the timeout value is relatively low.</exception>
      <exception cref="T:System.UnauthorizedAccessException">The <see cref="T:Microsoft.ServiceBus.NamespaceManager" /> object does not have sufficient permission to perform this operation. You should check to ensure that your <see cref="T:Microsoft.ServiceBus.NamespaceManager" /> has the correct <see cref="P:Microsoft.ServiceBus.NamespaceManagerSettings.Credential" /> credentials to perform this operation.</exception>
      <exception cref="T:Microsoft.ServiceBus.Messaging.MessagingException">An internal error or unexpected exception occurs.</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.BeginGetTopics(System.AsyncCallback,System.Object)">
      <summary>Asynchronous version of <see cref="M:Microsoft.ServiceBus.NamespaceManager.GetTopics" /> method.</summary>
      <returns>An <see cref="T:System.IAsyncResult" /> object that references the asynchronous operation to get all topics in the service namespace.</returns>
      <param name="callback">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</param>
      <param name="state">A user-defined object that contains state information about the asynchronous operation. This object is passed to the <see cref="M:Microsoft.ServiceBus.NamespaceManager.EndGetTopics(System.IAsyncResult)" /> delegate when the operation is complete.</param>
      <exception cref="T:System.TimeoutException">The operation times out. The timeout period is initialized through the <see cref="T:Microsoft.ServiceBus.NamespaceManagerSettings" /> class. You may need to increase the value of the <see cref="P:Microsoft.ServiceBus.NamespaceManagerSettings.OperationTimeout" /> property to avoid this exception if the timeout value is relatively low.</exception>
      <exception cref="T:System.UnauthorizedAccessException">The <see cref="T:Microsoft.ServiceBus.NamespaceManager" /> object does not have sufficient permission to perform this operation. You should check to ensure that your <see cref="T:Microsoft.ServiceBus.NamespaceManager" /> has the correct <see cref="P:Microsoft.ServiceBus.NamespaceManagerSettings.Credential" /> credentials to perform this operation.</exception>
      <exception cref="T:Microsoft.ServiceBus.Messaging.MessagingException">An internal error or unexpected exception occurs.</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.BeginGetTopics(System.String,System.AsyncCallback,System.Object)">
      <summary>Asynchronous version of <see cref="M:Microsoft.ServiceBus.NamespaceManager.GetTopics(System.String)" /> method.</summary>
      <returns>An <see cref="T:System.IAsyncResult" /> object that references the asynchronous operation to get all topics in the service namespace.</returns>
      <param name="filter">The string used to filter the topics to be retrieved.</param>
      <param name="callback">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</param>
      <param name="state">A user-defined object that contains state information about the asynchronous operation. This object is passed to the <see cref="M:Microsoft.ServiceBus.NamespaceManager.EndGetTopics(System.IAsyncResult)" /> delegate when the operation is complete.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.BeginGetVersionInfo(System.AsyncCallback,System.Object)">
      <summary>Asynchronous version of <see cref="M:Microsoft.ServiceBus.NamespaceManager.GetVersionInfo(System.String)" /> method.</summary>
      <returns>An <see cref="T:System.IAsyncResult" /> object that references the asynchronous operation to get the version information.</returns>
      <param name="callback">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</param>
      <param name="state">A user-defined object that contains state information about the asynchronous operation. This object is passed to the <see cref="M:Microsoft.ServiceBus.NamespaceManager.EndGetVersioninfo(System.IAsyncResult)" /> delegate when the operation is complete.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.BeginQueueExists(System.String,System.AsyncCallback,System.Object)">
      <summary>Asynchronous version of <see cref="M:Microsoft.ServiceBus.NamespaceManager.QueueExists(System.String)" /> method.</summary>
      <returns>An <see cref="T:System.IAsyncResult" /> object that references the asynchronous operation to check the existence of a queue in the service namespace.</returns>
      <param name="path">The path of the queue relative to the service namespace base address.</param>
      <param name="callback">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</param>
      <param name="state">A user-defined object that contains state information about the asynchronous operation. This object is passed to the <see cref="M:Microsoft.ServiceBus.NamespaceManager.EndQueueExists(System.IAsyncResult)" /> delegate when the operation is complete.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.BeginRenameQueue(System.String,System.String,System.AsyncCallback,System.Object)">
      <summary>Asynchronously renames a queue inside a namespace.</summary>
      <returns>Returns <see cref="T:System.IAsyncResult" />.</returns>
      <param name="path">The path to an existing queue.</param>
      <param name="newPath">The new path to the renamed queue.</param>
      <param name="callback">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</param>
      <param name="state">A user-defined object that contains information about the operation. This object is passed to the <see cref="M:Microsoft.ServiceBus.NamespaceManager.EndRenameQueue(System.IAsyncResult)" /> delegate when the operation is complete.</param>
      <exception cref="T:System.ArgumentException">Thrown when <paramref name="path" /> is null or empty.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Thrown when the length of <paramref name="path" /> is more than 290 characters.</exception>
      <exception cref="T:System.TimeoutException">Thrown when the operation times out. The timeout period is initialized through the <see cref="T:Microsoft.ServiceBus.NamespaceManagerSettings" /> class. You can increase the value of the <see cref="P:Microsoft.ServiceBus.NamespaceManagerSettings.OperationTimeout" /> property to avoid this exception if the timeout value is relatively low.</exception>
      <exception cref="T:Microsoft.ServiceBus.Messaging.MessagingEntityNotFoundException">Thrown when the source queue with the specified path does not exist.</exception>
      <exception cref="T:Microsoft.ServiceBus.Messaging.MessagingEntityAlreadyExistsException">Thrown when the target queue with the same path exists within the same namespace.</exception>
      <exception cref="T:System.UnauthorizedAccessException">Thrown when the client does not have credentials to perform the operation.</exception>
      <exception cref="T:Microsoft.ServiceBus.Messaging.MessagingException">Thrown when an internal error or unexpected exception occurs.</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.BeginRenameTopic(System.String,System.String,System.AsyncCallback,System.Object)">
      <summary>Asynchronously renames a topic inside a namespace.</summary>
      <returns>Returns <see cref="T:System.IAsyncResult" />.</returns>
      <param name="path">The path to an existing topic.</param>
      <param name="newPath">The new path to the renamed topic.</param>
      <param name="callback">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</param>
      <param name="state">A user-defined object that contains information about the operation. This object is passed to the <see cref="M:Microsoft.ServiceBus.NamespaceManager.EndRenameQueue(System.IAsyncResult)" /> delegate when the operation is complete.</param>
      <exception cref="T:System.ArgumentException">Thrown when <paramref name="path" /> is null or empty.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Thrown when the length of <paramref name="path" /> is more than 290 characters.</exception>
      <exception cref="T:System.TimeoutException">Thrown when the operation times out. The timeout period is initialized through the <see cref="T:Microsoft.ServiceBus.NamespaceManagerSettings" /> class. You can increase the value of the <see cref="P:Microsoft.ServiceBus.NamespaceManagerSettings.OperationTimeout" /> property to avoid this exception if the timeout value is relatively low.</exception>
      <exception cref="T:Microsoft.ServiceBus.Messaging.MessagingEntityNotFoundException">Thrown when the source queue with the specified path does not exist.</exception>
      <exception cref="T:Microsoft.ServiceBus.Messaging.MessagingEntityAlreadyExistsException">Thrown when the target queue with the same path exists within the same namespace.</exception>
      <exception cref="T:System.UnauthorizedAccessException">Thrown when the client does not have credentials to perform the operation.</exception>
      <exception cref="T:Microsoft.ServiceBus.Messaging.MessagingException">Thrown when an internal error or unexpected exception occurs.</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.BeginSubscriptionExists(System.String,System.String,System.AsyncCallback,System.Object)">
      <summary>Asynchronous version of <see cref="M:Microsoft.ServiceBus.NamespaceManager.SubscriptionExists(System.String,System.String)" /> method.</summary>
      <returns>An <see cref="T:System.IAsyncResult" /> object that references the asynchronous operation to check the existence of a subscription in the service namespace.</returns>
      <param name="topicPath">The path of the topic relative to the service namespace base address.</param>
      <param name="name">The name of the subscription.</param>
      <param name="callback">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</param>
      <param name="state">A user-defined object that contains state information about the asynchronous operation. This object is passed to the <see cref="M:Microsoft.ServiceBus.NamespaceManager.EndSubscriptionExists(System.IAsyncResult)" /> delegate when the operation is complete.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.BeginTopicExists(System.String,System.AsyncCallback,System.Object)">
      <summary>Asynchronous version of <see cref="M:Microsoft.ServiceBus.NamespaceManager.TopicExists(System.String)" /> method.</summary>
      <returns>An <see cref="T:System.IAsyncResult" /> object that references the asynchronous operation to check the existence of a topic in the service namespace.</returns>
      <param name="path">The path of the topic relative to the service namespace base address.</param>
      <param name="callback">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</param>
      <param name="state">A user-defined object that contains state information about the asynchronous operation. This object is passed to the <see cref="M:Microsoft.ServiceBus.NamespaceManager.EndTopicExists(System.IAsyncResult)" /> delegate when the operation is complete.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.BeginUpdateQueue(Microsoft.ServiceBus.Messaging.QueueDescription,System.AsyncCallback,System.Object)">
      <summary>Asynchronous version of <see cref="M:Microsoft.ServiceBus.NamespaceManager.UpdateQueue(System.String)" /> method.</summary>
      <returns>An <see cref="T:System.IAsyncResult" /> object that references the asynchronous operation to update a queue.</returns>
      <param name="description">The queue description.</param>
      <param name="callback">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</param>
      <param name="state">A user-defined object that contains state information about the asynchronous operation. This object is passed to the <see cref="M:Microsoft.ServiceBus.NamespaceManager.EndUpdateQueue(System.IAsyncResult)" /> delegate when the operation is complete.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.BeginUpdateSubscription(Microsoft.ServiceBus.Messaging.SubscriptionDescription,System.AsyncCallback,System.Object)">
      <summary>Asynchronous version of <see cref="M:Microsoft.ServiceBus.NamespaceManager.UpdateSubscription(System.String)" /> method.</summary>
      <returns>An <see cref="T:System.IAsyncResult" /> object that references the asynchronous operation to update a subscription.</returns>
      <param name="description">The subscription description.</param>
      <param name="callback">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</param>
      <param name="state">A user-defined object that contains state information about the asynchronous operation. This object is passed to the <see cref="M:Microsoft.ServiceBus.NamespaceManager.EndUpdateSubscription(System.IAsyncResult)" /> delegate when the operation is complete.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.BeginUpdateTopic(Microsoft.ServiceBus.Messaging.TopicDescription,System.AsyncCallback,System.Object)">
      <summary>Asynchronous version of <see cref="M:Microsoft.ServiceBus.NamespaceManager.UpdateTopic(System.String)" /> method.</summary>
      <returns>An <see cref="T:System.IAsyncResult" /> object that references the asynchronous operation to update a topic.</returns>
      <param name="description">The topic description.</param>
      <param name="callback">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</param>
      <param name="state">A user-defined object that contains state information about the asynchronous operation. This object is passed to the <see cref="M:Microsoft.ServiceBus.NamespaceManager.EndUpdateTopic(System.IAsyncResult)" /> delegate when the operation is complete.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.Create">
      <summary>Creates a new instance of <see cref="T:Microsoft.ServiceBus.NamespaceManager" />.</summary>
      <returns>A new instance of <see cref="T:Microsoft.ServiceBus.NamespaceManager" />.</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.CreateConsumerGroup(Microsoft.ServiceBus.Messaging.ConsumerGroupDescription)">
      <summary>Creates an Event Hubs consumer group using the specified <see cref="T:Microsoft.ServiceBus.Messaging.ConsumerGroupDescription" />.</summary>
      <returns>Returns <see cref="T:Microsoft.ServiceBus.Messaging.ConsumerGroupDescription" />.</returns>
      <param name="description">The <see cref="T:Microsoft.ServiceBus.Messaging.ConsumerGroupDescription" />.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.CreateConsumerGroup(System.String,System.String)">
      <summary>Creates an Event Hubs consumer group using default values, with the specified Event Hubs path and a name for the consumer group.</summary>
      <returns>Returns <see cref="T:Microsoft.ServiceBus.Messaging.ConsumerGroupDescription" />.</returns>
      <param name="eventHubPath">The path to the Event Hub.</param>
      <param name="name">The name of the consumer group.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.CreateConsumerGroupAsync(Microsoft.ServiceBus.Messaging.ConsumerGroupDescription)">
      <summary>Asynchronous version of <see cref="M:Microsoft.ServiceBus.NamespaceManager.CreateConsumerGroup(Microsoft.ServiceBus.Messaging.ConsumerGroupDescription)" />.</summary>
      <returns>The task that completes the asynchronous operation.</returns>
      <param name="description">The <see cref="T:Microsoft.ServiceBus.Messaging.ConsumerGroupDescription" />.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.CreateConsumerGroupAsync(System.String,System.String)">
      <summary>Asynchronous version of <see cref="M:Microsoft.ServiceBus.NamespaceManager.CreateConsumerGroup(System.String,System.String)" />.</summary>
      <returns>The task that completes the asynchronous operation.</returns>
      <param name="eventHubPath">The path to the Event Hub.</param>
      <param name="name">The name of the consumer group.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.CreateConsumerGroupIfNotExists(Microsoft.ServiceBus.Messaging.ConsumerGroupDescription)">
      <summary>Creates a consumer group if it does not already exist, using the specified <see cref="T:Microsoft.ServiceBus.Messaging.ConsumerGroupDescription" /> as metadata. If the group already exists, then return the stored <see cref="T:Microsoft.ServiceBus.Messaging.ConsumerGroupDescription" />.</summary>
      <returns>Returns the newly-created <see cref="T:Microsoft.ServiceBus.Messaging.ConsumerGroupDescription" />. If the consumer group already exists, returns the existing <see cref="T:Microsoft.ServiceBus.Messaging.ConsumerGroupDescription" />.</returns>
      <param name="description">A <see cref="T:Microsoft.ServiceBus.Messaging.ConsumerGroupDescription" /> object.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.CreateConsumerGroupIfNotExists(System.String,System.String)">
      <summary>Creates a consumer group if it does not already exist, using the specified Event Hubs path and group name. If the group already exists, then return the stored <see cref="T:Microsoft.ServiceBus.Messaging.ConsumerGroupDescription" />.</summary>
      <returns>Returns the newly-created <see cref="T:Microsoft.ServiceBus.Messaging.ConsumerGroupDescription" />. If the consumer group already exists, returns the existing <see cref="T:Microsoft.ServiceBus.Messaging.ConsumerGroupDescription" />.</returns>
      <param name="eventHubPath">Path to the Event Hub.</param>
      <param name="name">The name of the consumer group to create.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.CreateConsumerGroupIfNotExistsAsync(Microsoft.ServiceBus.Messaging.ConsumerGroupDescription)">
      <summary>Asynchronous version of <see cref="M:Microsoft.ServiceBus.NamespaceManager.CreateConsumerGroupIfNotExists(Microsoft.ServiceBus.Messaging.ConsumerGroupDescription)" />.</summary>
      <returns>The task that completes the asynchronous operation.</returns>
      <param name="description">The consumer group description.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.CreateConsumerGroupIfNotExistsAsync(System.String,System.String)">
      <summary>Asynchronous version of <see cref="M:Microsoft.ServiceBus.NamespaceManager.CreateConsumerGroupIfNotExists(System.String,System.String)" />.</summary>
      <returns>The task that completes the asynchronous operation.</returns>
      <param name="eventHubPath">The path to the Event Hub.</param>
      <param name="name">The name of the consumer group.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.CreateEventHub(Microsoft.ServiceBus.Messaging.EventHubDescription)">
      <summary>Creates a new Event Hub using the specified <see cref="T:Microsoft.ServiceBus.Messaging.EventHubDescription" />.</summary>
      <returns>Returns the <see cref="T:Microsoft.ServiceBus.Messaging.EventHubDescription" />.</returns>
      <param name="description">The <see cref="T:Microsoft.ServiceBus.Messaging.EventHubDescription" />.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.CreateEventHub(System.String)">
      <summary>Creates a new Event Hub using default values, for the given input path.</summary>
      <returns>Returns the <see cref="T:Microsoft.ServiceBus.Messaging.EventHubDescription" />.</returns>
      <param name="path">The path to the Event Hub.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.CreateEventHubAsync(Microsoft.ServiceBus.Messaging.EventHubDescription)">
      <summary>Asynchronously creates an event hub.</summary>
      <returns>The task that completes the asynchronous operation.</returns>
      <param name="description">An <see cref="T:Microsoft.ServiceBus.Messaging.EventHubDescription" /> object that describes the Event Hub to create.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.CreateEventHubAsync(System.String)">
      <summary>Asynchronously creates an event hub.</summary>
      <returns>The task that completes the asynchronous operation.</returns>
      <param name="path">The path to the Event Hub.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.CreateEventHubIfNotExists(Microsoft.ServiceBus.Messaging.EventHubDescription)">
      <summary>Creates an Event Hub if it does not exist.</summary>
      <returns>Returns an<see cref="T:Microsoft.ServiceBus.Messaging.EventHubDescription" /> object.</returns>
      <param name="description">An <see cref="T:Microsoft.ServiceBus.Messaging.EventHubDescription" /> object that describes the Event Hub to create.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.CreateEventHubIfNotExists(System.String)">
      <summary>Creates an Event Hub if it does not exist.</summary>
      <returns>Returns an <see cref="T:Microsoft.ServiceBus.Messaging.EventHubDescription" /> object.</returns>
      <param name="path">The path to the Event Hub.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.CreateEventHubIfNotExistsAsync(Microsoft.ServiceBus.Messaging.EventHubDescription)">
      <summary>Asynchronously creates an Event Hub if it does not exist.</summary>
      <returns>The task that completes the asynchronous operation.</returns>
      <param name="description">The event hub description.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.CreateEventHubIfNotExistsAsync(System.String)">
      <summary>Asynchronously creates an Event Hub if it does not exist.</summary>
      <returns>The task that completes the asynchronous operation.</returns>
      <param name="path">The path of the event hub.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.CreateFromConnectionString(System.String)">
      <summary>Creates a new instance of <see cref="T:Microsoft.ServiceBus.NamespaceManager" /> using a specified connection string.</summary>
      <returns>A new instance of <see cref="T:Microsoft.ServiceBus.NamespaceManager" />.</returns>
      <param name="connectionString">The connection sting used.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.CreateNotificationHub(Microsoft.ServiceBus.Notifications.NotificationHubDescription)">
      <summary>Creates a new notification hub with the properties specified in the <paramref name="description" /> parameter.</summary>
      <returns>A <see cref="T:Microsoft.ServiceBus.Notifications.NotificationHubDescription" /> object with the description of the newly created notification hub.</returns>
      <param name="description">The description object describing the attributes with which the new notification hub will be created.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.CreateNotificationHubAsync(Microsoft.ServiceBus.Notifications.NotificationHubDescription)">
      <summary>Asynchronously creates a new notification hub with the properties specified in the <paramref name="description" /> parameter.</summary>
      <returns>A <see cref="T:Microsoft.ServiceBus.Notifications.NotificationHubDescription" /> object with the description of the newly created notification hub.</returns>
      <param name="description">The description object describing the attributes with which the new notification hub will be created.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.CreateQueue(Microsoft.ServiceBus.Messaging.QueueDescription)">
      <summary>Creates a new queue in the service namespace with the specified queue description.</summary>
      <returns>The <see cref="T:Microsoft.ServiceBus.Messaging.QueueDescription" /> of the newly created queue.</returns>
      <param name="description">A <see cref="T:Microsoft.ServiceBus.Messaging.QueueDescription" /> object describing the attributes with which the new queue will be created.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.CreateQueue(System.String)">
      <summary>Creates a new queue in the service namespace with the given path.</summary>
      <returns>The <see cref="T:Microsoft.ServiceBus.Messaging.QueueDescription" /> of the newly created queue.</returns>
      <param name="path">The path of the queue relative to the service namespace base address.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" /> is null or empty.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">The length of <paramref name="path" /> is greater than 290 characters.</exception>
      <exception cref="T:System.TimeoutException">The operation times out. The timeout period is initialized through the <see cref="T:Microsoft.ServiceBus.NamespaceManagerSettings" /> class. You may need to increase the value of the <see cref="P:Microsoft.ServiceBus.NamespaceManagerSettings.OperationTimeout" /> property to avoid this exception if the timeout value is relatively low.</exception>
      <exception cref="T:Microsoft.ServiceBus.Messaging.MessagingEntityAlreadyExistsException">A queue or a topic with the same name and path exists under the same service namespace.</exception>
      <exception cref="T:System.UnauthorizedAccessException">The <see cref="T:Microsoft.ServiceBus.NamespaceManager" /> object does not have sufficient permission to perform this operation. You should check to ensure that your <see cref="T:Microsoft.ServiceBus.NamespaceManager" /> has the correct <see cref="P:Microsoft.ServiceBus.NamespaceManagerSettings.Credential" /> credentials to perform this operation.</exception>
      <exception cref="T:Microsoft.ServiceBus.Messaging.QuotaExceededException">Either the specified size in the description is not supported or the maximum allowable quota has been reached. You must specify one of the supported size values, delete existing entities, or increase your quota size.</exception>
      <exception cref="T:Microsoft.ServiceBus.Messaging.MessagingException">An internal error or unexpected exception occurs.</exception>
      <exception cref="T:Microsoft.ServiceBus.Messaging.ServerBusyException">The server is overloaded with logical operations. You can consider any of the following actions:Wait and retry calling this function.Remove entities before retry (for example, receive messages before sending any more).</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.CreateQueueAsync(Microsoft.ServiceBus.Messaging.QueueDescription)">
      <summary>Asynchronously creates a new queue in the service namespace with the specified queue description.</summary>
      <returns>The <see cref="T:Microsoft.ServiceBus.Messaging.QueueDescription" /> of the newly created queue.</returns>
      <param name="description">A <see cref="T:Microsoft.ServiceBus.Messaging.QueueDescription" /> object describing the attributes with which the new queue will be created.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.CreateQueueAsync(System.String)">
      <summary>Asynchronously creates a new queue in the service namespace with the given path.</summary>
      <returns>The <see cref="T:Microsoft.ServiceBus.Messaging.QueueDescription" /> of the newly created queue.</returns>
      <param name="path">The path of the queue relative to the service namespace base address.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.CreateRelayAsync(Microsoft.ServiceBus.Messaging.RelayDescription)">
      <summary>Asynchronously creates a new relay in the service namespace with the specified queue description.</summary>
      <returns>The <see cref="T:Microsoft.ServiceBus.Messaging.RelayDescription" /> object for the newly created relay.</returns>
      <param name="description">The description object describing the attributes with which the new relay will be created.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.CreateRelayAsync(System.String,Microsoft.ServiceBus.RelayType)">
      <summary>Asynchronously creates a new queue in the service namespace with the given path and type.</summary>
      <returns>The <see cref="T:Microsoft.ServiceBus.Messaging.RelayDescription" /> object for the newly created relay.</returns>
      <param name="path">The path of the queue relative to the service namespace base address.</param>
      <param name="type">The relay type.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.CreateSubscription(Microsoft.ServiceBus.Messaging.SubscriptionDescription)">
      <summary>Creates a new subscription in the service namespace with the specified subscription description.</summary>
      <returns>The <see cref="T:Microsoft.ServiceBus.Messaging.SubscriptionDescription" /> of the newly created subscription.</returns>
      <param name="description">A <see cref="T:Microsoft.ServiceBus.Messaging.SubscriptionDescription" /> object describing the attributes with which the new subscription will be created.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.CreateSubscription(Microsoft.ServiceBus.Messaging.SubscriptionDescription,Microsoft.ServiceBus.Messaging.Filter)">
      <summary>Creates a new subscription in the service namespace with the specified subscription description and filter expression.</summary>
      <returns>The <see cref="T:Microsoft.ServiceBus.Messaging.SubscriptionDescription" /> of the newly created subscription.</returns>
      <param name="description">A <see cref="T:Microsoft.ServiceBus.Messaging.SubscriptionDescription" /> object describing the attributes with which the new subscription will be created.</param>
      <param name="filter">The filter expression used to capture messages satisfying the filtering expression value.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.CreateSubscription(Microsoft.ServiceBus.Messaging.SubscriptionDescription,Microsoft.ServiceBus.Messaging.RuleDescription)">
      <summary>Creates a new subscription in the service namespace with the specified subscription description and rule description.</summary>
      <returns>The <see cref="T:Microsoft.ServiceBus.Messaging.SubscriptionDescription" /> of the newly created subscription.</returns>
      <param name="description">A <see cref="T:Microsoft.ServiceBus.Messaging.SubscriptionDescription" /> object describing the attributes with which the new subscription will be created.</param>
      <param name="ruleDescription">A <see cref="T:Microsoft.ServiceBus.Messaging.RuleDescription" /> object describing the attributes with which the messages are matched and acted upon.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.CreateSubscription(System.String,System.String)">
      <summary>Creates a new subscription in the service namespace with the specified topic path and subscription name.</summary>
      <returns>The <see cref="T:Microsoft.ServiceBus.Messaging.SubscriptionDescription" /> of the newly created subscription.</returns>
      <param name="topicPath">The topic path relative to the service namespace base address.</param>
      <param name="name">The name of the subscription.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.CreateSubscription(System.String,System.String,Microsoft.ServiceBus.Messaging.Filter)">
      <summary>Creates a new subscription in the service namespace with the specified topic path, subscription name, and filter expression.</summary>
      <returns>The <see cref="T:Microsoft.ServiceBus.Messaging.SubscriptionDescription" /> of the newly created subscription.</returns>
      <param name="topicPath">The topic path relative to the service namespace base address.</param>
      <param name="name">The name of the subscription.</param>
      <param name="filter">The filter expression used to capture messages satisfying the filtering expression value.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.CreateSubscription(System.String,System.String,Microsoft.ServiceBus.Messaging.RuleDescription)">
      <summary>Creates a new subscription in the service namespace with the specified topic path, subscription name, and rule description.</summary>
      <returns>The <see cref="T:Microsoft.ServiceBus.Messaging.SubscriptionDescription" /> of the newly created subscription.</returns>
      <param name="topicPath">The topic path relative to the service namespace base address.</param>
      <param name="name">The name of the subscription.</param>
      <param name="ruleDescription">A <see cref="T:Microsoft.ServiceBus.Messaging.RuleDescription" /> object describing the attributes with which the messages are matched and acted upon.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.CreateSubscriptionAsync(Microsoft.ServiceBus.Messaging.SubscriptionDescription)">
      <summary>Asynchronously creates a new subscription in the service namespace with the specified subscription description.</summary>
      <returns>The asynchronously created subscription.</returns>
      <param name="description">A <see cref="T:Microsoft.ServiceBus.Messaging.SubscriptionDescription" /> object describing the attributes with which the new subscription will be created.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.CreateSubscriptionAsync(Microsoft.ServiceBus.Messaging.SubscriptionDescription,Microsoft.ServiceBus.Messaging.Filter)">
      <summary>Asynchronously creates a new subscription in the service namespace with the specified subscription description and filter expression.</summary>
      <returns>The asynchronously created subscription.</returns>
      <param name="description">A <see cref="T:Microsoft.ServiceBus.Messaging.SubscriptionDescription" /> object describing the attributes with which the new subscription will be created.</param>
      <param name="filter">The filter expression used to capture messages satisfying the filtering expression value.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.CreateSubscriptionAsync(Microsoft.ServiceBus.Messaging.SubscriptionDescription,Microsoft.ServiceBus.Messaging.RuleDescription)">
      <summary>Asynchronously creates a new subscription in the service namespace with the specified subscription description and rule description.</summary>
      <returns>The asynchronously created subscription.</returns>
      <param name="description">A <see cref="T:Microsoft.ServiceBus.Messaging.SubscriptionDescription" /> object describing the attributes with which the new subscription will be created.</param>
      <param name="ruleDescription">A <see cref="T:Microsoft.ServiceBus.Messaging.RuleDescription" /> object describing the attributes with which the messages are matched and acted upon.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.CreateSubscriptionAsync(System.String,System.String)">
      <summary>Asynchronously creates a new subscription in the service namespace with the specified topic path and subscription name.</summary>
      <returns>The asynchronously created subscription.</returns>
      <param name="topicPath">The topic path relative to the service namespace base address.</param>
      <param name="name">The name of the subscription.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.CreateSubscriptionAsync(System.String,System.String,Microsoft.ServiceBus.Messaging.Filter)">
      <summary>Asynchronously creates a new subscription in the service namespace with the specified topic path, subscription name, and filter expression.</summary>
      <returns>The asynchronously created subscription.</returns>
      <param name="topicPath">The topic path relative to the service namespace base address.</param>
      <param name="name">The name of the subscription.</param>
      <param name="filter">The filter expression used to capture messages satisfying the filtering expression value.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.CreateSubscriptionAsync(System.String,System.String,Microsoft.ServiceBus.Messaging.RuleDescription)">
      <summary>Asynchronously creates a new subscription in the service namespace with the specified topic path, subscription name, and rule description.</summary>
      <returns>The asynchronously created subscription.</returns>
      <param name="topicPath">The topic path relative to the service namespace base address.</param>
      <param name="name">The name of the subscription.</param>
      <param name="ruleDescription">A <see cref="T:Microsoft.ServiceBus.Messaging.RuleDescription" /> object describing the attributes with which the messages are matched and acted upon.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.CreateTopic(Microsoft.ServiceBus.Messaging.TopicDescription)">
      <summary>Creates a new topic inside the service namespace with the specified topic description.</summary>
      <returns>The <see cref="T:Microsoft.ServiceBus.Messaging.TopicDescription" /> of the newly created topic.</returns>
      <param name="description">A <see cref="T:Microsoft.ServiceBus.Messaging.TopicDescription" /> object describing the attributes with which the new topic will be created.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.CreateTopic(System.String)">
      <summary>Creates a new topic inside the service namespace with the given service namespace path.</summary>
      <returns>The <see cref="T:Microsoft.ServiceBus.Messaging.TopicDescription" /> of the newly created topic.</returns>
      <param name="path">The path of the topic relative to the service namespace base address.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" /> is null or empty, or <paramref name="path" /> begins or ends with “/”.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Length of <paramref name="path" /> is greater than <see cref="F:Microsoft.ServiceBus.Messaging.Constants.QueueNameMaximumLength" />.</exception>
      <exception cref="T:System.TimeoutException">The operation times out. The timeout period is initialized through the <see cref="T:Microsoft.ServiceBus.NamespaceManagerSettings" /> class. You may need to increase the value of the <see cref="P:Microsoft.ServiceBus.NamespaceManagerSettings.OperationTimeout" /> property to avoid this exception if the timeout value is relatively low.</exception>
      <exception cref="T:Microsoft.ServiceBus.Messaging.MessagingEntityAlreadyExistsException">A queue or a topic with the same name and path exists under the same service namespace.</exception>
      <exception cref="T:System.UnauthorizedAccessException">The <see cref="T:Microsoft.ServiceBus.NamespaceManager" /> object does not have sufficient permission to perform this operation. You should check to ensure that your <see cref="T:Microsoft.ServiceBus.NamespaceManager" /> has the correct <see cref="P:Microsoft.ServiceBus.NamespaceManagerSettings.Credential" /> credentials to perform this operation.</exception>
      <exception cref="T:Microsoft.ServiceBus.Messaging.QuotaExceededException">Either the specified size in the description is not supported or the maximum allowable quota has been reached. You must specify one of the supported size values, delete existing entities, or increase your quota size.</exception>
      <exception cref="T:Microsoft.ServiceBus.Messaging.MessagingException">An internal error or unexpected exception occurs.</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.CreateTopicAsync(Microsoft.ServiceBus.Messaging.TopicDescription)">
      <summary>Asynchronously creates a new topic inside the service namespace with the specified topic description.</summary>
      <returns>The asynchronous operation.</returns>
      <param name="description">A <see cref="T:Microsoft.ServiceBus.Messaging.TopicDescription" /> object describing the attributes with which the new topic will be created.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.CreateTopicAsync(System.String)">
      <summary>Asynchronously creates a new topic inside the service namespace with the given service namespace path.</summary>
      <returns>The asynchronous operation.</returns>
      <param name="path">The path of the topic relative to the service namespace base address.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.DeleteConsumerGroup(System.String,System.String)">
      <summary>Deletes a consumer group.</summary>
      <param name="eventHubPath">The path to the Event Hub.</param>
      <param name="name">The name of the consumer group to delete.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.DeleteConsumerGroupAsync(System.String,System.String)">
      <summary>Asynchronously deletes a consumer group.</summary>
      <returns>The task that represents the asynchronous operation.</returns>
      <param name="eventHubPath">The path to the Event Hub.</param>
      <param name="name">The name of the consumer group to delete.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.DeleteEventHub(System.String)">
      <summary>Deletes an Event Hub.</summary>
      <param name="path">The path to the Event Hub.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.DeleteEventHubAsync(System.String)">
      <summary>Asynchronously deletes an Event Hub.</summary>
      <returns>The task that represents the asynchronous operation.</returns>
      <param name="path">The path to the Event Hub.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.DeleteNotificationHub(System.String)">
      <summary>Deletes a notification hub at the provided <paramref name="path" />.</summary>
      <param name="path">The path to the notification hub.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.DeleteNotificationHubAsync(System.String)">
      <summary>Asynchronously deletes a notification hub at the provided <paramref name="path" />.</summary>
      <returns>The asynchronous operation.</returns>
      <param name="path">The path to the notification hub.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.DeleteQueue(System.String)">
      <summary>Deletes the queue described by the path relative to the service namespace base address.</summary>
      <param name="path">The path of the queue relative to the service namespace base address.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" /> is empty or null, or <paramref name="path" /> starts or ends with "/".</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">The length of <paramref name="path" /> is greater than <see cref="F:Microsoft.ServiceBus.Messaging.Constants.QueueNameMaximumLength" />.</exception>
      <exception cref="T:System.TimeoutException">The operation times out. The timeout period is initialized through the <see cref="T:Microsoft.ServiceBus.NamespaceManagerSettings" /> class. You may need to increase the value of the <see cref="P:Microsoft.ServiceBus.NamespaceManagerSettings.OperationTimeout" /> property to avoid this exception if the timeout value is relatively low.</exception>
      <exception cref="T:Microsoft.ServiceBus.Messaging.MessagingEntityNotFoundException">Queue does not exist under this path.</exception>
      <exception cref="T:System.UnauthorizedAccessException">The <see cref="T:Microsoft.ServiceBus.NamespaceManager" /> object does not have sufficient permission to perform this operation. You should check to ensure that your <see cref="T:Microsoft.ServiceBus.NamespaceManager" /> has the correct <see cref="P:Microsoft.ServiceBus.NamespaceManagerSettings.Credential" /> credentials to perform this operation.</exception>
      <exception cref="T:Microsoft.ServiceBus.Messaging.MessagingException">An internal error or unexpected exception occurs.</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.DeleteQueueAsync(System.String)">
      <summary>Asynchronously deletes the queue described by the path relative to the service namespace base address.</summary>
      <returns>The asynchronous delete queue operation.</returns>
      <param name="path">The path of the queue relative to the service namespace base address.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.DeleteRelayAsync(System.String)">
      <summary>Asynchronously deletes the relay described by the path relative to the service namespace base address.</summary>
      <returns>The asynchronous delete relay operation.</returns>
      <param name="path">The path of the relay relative to the service namespace base address.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.DeleteSubscription(System.String,System.String)">
      <summary>Deletes the subscription with the specified topic path and subscription name.</summary>
      <param name="topicPath">The topic path relative to the service namespace base address.</param>
      <param name="name">The name of the subscription to delete.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.DeleteSubscriptionAsync(System.String,System.String)">
      <summary>Asynchronously deletes the subscription with the specified topic path and subscription name.</summary>
      <returns>The asynchronous delete subscription operation.</returns>
      <param name="topicPath">The topic path relative to the service namespace base address.</param>
      <param name="name">The name of the subscription to delete.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.DeleteTopic(System.String)">
      <summary>Deletes the topic described by path relative to the service namespace base address.</summary>
      <param name="path">The path of the topic relative to the service namespace base address.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" /> is null or empty, or <paramref name="path" /> starts or ends with "/".</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.DeleteTopicAsync(System.String)">
      <summary>Asynchronously deletes the topic described by path relative to the service namespace base address.</summary>
      <returns>The asynchronous deleted topic operation.</returns>
      <param name="path">The path of the topic relative to the service namespace base address.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.EndCreateQueue(System.IAsyncResult)">
      <summary>Ends an asynchronous request to create a queue.</summary>
      <returns>The <see cref="T:Microsoft.ServiceBus.Messaging.QueueDescription" /> of the newly created queue.</returns>
      <param name="result">An <see cref="T:System.IAsyncResult" /> object that represents the result of the queue creation operation.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.EndCreateSubscription(System.IAsyncResult)">
      <summary>Ends an asynchronous request to create a subscription.</summary>
      <returns>The <see cref="T:Microsoft.ServiceBus.Messaging.SubscriptionDescription" /> of the newly created subscription.</returns>
      <param name="result">An <see cref="T:System.IAsyncResult" /> object that represents the result of the subscription creation operation.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.EndCreateTopic(System.IAsyncResult)">
      <summary>Ends an asynchronous request to create a topic.</summary>
      <returns>The <see cref="T:Microsoft.ServiceBus.Messaging.TopicDescription" /> of the newly created topic.</returns>
      <param name="result">An <see cref="T:System.IAsyncResult" /> object that represents the result of the topic creation operation.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="result" /> is null.</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.EndDeleteInstallation(System.IAsyncResult)"></member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.EndDeleteQueue(System.IAsyncResult)">
      <summary>Ends an asynchronous request to delete a queue.</summary>
      <param name="result">An <see cref="T:System.IAsyncResult" /> object that represents the result of the queue deletion operation.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" /> is empty or null, or <paramref name="path" /> starts or ends with "/".</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">The length of <paramref name="path" /> is greater than <see cref="F:Microsoft.ServiceBus.Messaging.Constants.QueueNameMaximumLength" />.</exception>
      <exception cref="T:System.TimeoutException">The operation times out. The timeout period is initialized through the <see cref="T:Microsoft.ServiceBus.NamespaceManagerSettings" /> class. You may need to increase the value of the <see cref="P:Microsoft.ServiceBus.NamespaceManagerSettings.OperationTimeout" /> property to avoid this exception if the timeout value is relatively low.</exception>
      <exception cref="T:Microsoft.ServiceBus.Messaging.MessagingEntityNotFoundException">Queue does not exist under this path.</exception>
      <exception cref="T:System.UnauthorizedAccessException">The <see cref="T:Microsoft.ServiceBus.NamespaceManager" /> object does not have sufficient permission to perform this operation. You should check to ensure that your <see cref="T:Microsoft.ServiceBus.NamespaceManager" /> has the correct <see cref="P:Microsoft.ServiceBus.NamespaceManagerSettings.Credential" /> credentials to perform this operation.</exception>
      <exception cref="T:Microsoft.ServiceBus.Messaging.MessagingException">An internal error or unexpected exception occurs.</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.EndDeleteRegistration(System.IAsyncResult)">
      <summary>Ends an asynchronous request to delete a registration.</summary>
      <param name="result">An <see cref="T:System.IAsyncResult" /> object that represents the result of the registration deletion operation.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.EndDeleteSubscription(System.IAsyncResult)">
      <summary>Ends an asynchronous request to delete a subscription.</summary>
      <param name="result">An <see cref="T:System.IAsyncResult" /> object that represents the result of the subscription deletion operation.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.EndDeleteTopic(System.IAsyncResult)">
      <summary>Ends an asynchronous request to delete a topic.</summary>
      <param name="result">An <see cref="T:System.IAsyncResult" /> object that represents the result of the topic deletion operation.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">The length of <paramref name="path" /> is greater than <see cref="F:Microsoft.ServiceBus.Messaging.Constants.QueueNameMaximumLength" />.</exception>
      <exception cref="T:System.TimeoutException">The operation times out. The timeout period is initialized through the <see cref="T:Microsoft.ServiceBus.NamespaceManagerSettings" /> class. You may need to increase the value of the <see cref="P:Microsoft.ServiceBus.NamespaceManagerSettings.OperationTimeout" /> property to avoid this exception if the timeout value is relatively low.</exception>
      <exception cref="T:Microsoft.ServiceBus.Messaging.MessagingEntityNotFoundException">Queue does not exist under this path.</exception>
      <exception cref="T:System.UnauthorizedAccessException">The <see cref="T:Microsoft.ServiceBus.NamespaceManager" /> object does not have sufficient permission to perform this operation. You should check to ensure that your <see cref="T:Microsoft.ServiceBus.NamespaceManager" /> has the correct <see cref="P:Microsoft.ServiceBus.NamespaceManagerSettings.Credential" /> credentials to perform this operation.</exception>
      <exception cref="T:Microsoft.ServiceBus.Messaging.MessagingException">An internal error or unexpected exception occurs.</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.EndGetQueue(System.IAsyncResult)">
      <summary>Ends an asynchronous request to get a queue.</summary>
      <returns>A <see cref="T:Microsoft.ServiceBus.Messaging.QueueDescription" /> handle to the queue, or null if the queue does not exist in the service namespace.</returns>
      <param name="result">An <see cref="T:System.IAsyncResult" /> object that represents the result of the get queue operation.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.EndGetQueues(System.IAsyncResult)">
      <summary>Ends an asynchronous request to retrieve all queues from the service namespace.</summary>
      <returns>An <see cref="T:System.Collections.Generic.IEnumerable`1" /> object that represents the collection of all queues in the service namespace. Returns an empty collection if no queue exists in this service namespace.</returns>
      <param name="result">An <see cref="T:System.IAsyncResult" /> object that references the outstanding asynchronous request to retrieve all queues from the service namespace.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.EndGetRules(System.IAsyncResult)">
      <summary>Ends an asynchronous request to retrieve all rules from the service namespace.</summary>
      <returns>An <see cref="T:System.Collections.Generic.IEnumerable`1" /> object that represents the collection of all rules in the service namespace. Returns an empty collection if no rule exists in this service namespace.</returns>
      <param name="result">An <see cref="T:System.IAsyncResult" /> object that represents the result of the get rules operation.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.EndGetSubscription(System.IAsyncResult)">
      <summary>Ends an asynchronous request to get a subscription.</summary>
      <returns>The <see cref="T:Microsoft.ServiceBus.Messaging.SubscriptionDescription" /> handle to the subscription, or null if the subscription does not exist in the service namespace.</returns>
      <param name="result">An <see cref="T:System.IAsyncResult" /> object that represents the result of the get subscription operation.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.EndGetSubscriptions(System.IAsyncResult)">
      <summary>Ends an asynchronous request to retrieve all subscriptions from the service namespace.</summary>
      <returns>The <see cref="T:System.Collections.Generic.IEnumerable`1" /> object that represents the collection of all subscriptions in the service namespace. Returns an empty collection if no subscription exists in this service namespace.</returns>
      <param name="result">An <see cref="T:System.IAsyncResult" /> object that references the outstanding asynchronous request to retrieve all subscriptions from the service namespace.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.EndGetTopic(System.IAsyncResult)">
      <summary>Ends an asynchronous request to get a topic.</summary>
      <returns>A <see cref="T:Microsoft.ServiceBus.Messaging.TopicDescription" /> handle to the topic, or null  if the topic does not exist in the service namespace.</returns>
      <param name="result">An <see cref="T:System.IAsyncResult" /> object that represents the result of the get topic operation.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="result" /> is null.</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.EndGetTopics(System.IAsyncResult)">
      <summary>Ends an asynchronous request to retrieve all topics from the service namespace.</summary>
      <returns>An <see cref="T:System.Collections.Generic.IEnumerable`1" /> object that represents the collection of topics in this service namespace. Returns an empty collection if no topic exists in this service namespace.</returns>
      <param name="result">An <see cref="T:System.IAsyncResult" /> object that references the outstanding asynchronous request to retrieve all topics from the service namespace.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.EndGetVersionInfo(System.IAsyncResult)">
      <summary>Ends an asynchronous request to get version information.</summary>
      <returns>The version information.</returns>
      <param name="result">An <see cref="T:System.IAsyncResult" /> object that represents the result of the get version information.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.EndQueueExists(System.IAsyncResult)">
      <summary>Ends an asynchronous request to determine whether a queue exists from the service namespace.</summary>
      <returns>true if a queue exists in the service namespace; otherwise, false.</returns>
      <param name="result">An <see cref="T:System.IAsyncResult" /> object that represents the result of the queue existence checking operation.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.EndRenameQueue(System.IAsyncResult)">
      <summary>Ends an asynchronous request to rename a queue.</summary>
      <returns>Returns <see cref="T:Microsoft.ServiceBus.Messaging.QueueDescription" />.</returns>
      <param name="result">An IAsyncResult that references the renamed queue.</param>
      <exception cref="T:System.ArgumentNullException">Thrown when the result is null.</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.EndRenameTopic(System.IAsyncResult)">
      <summary>Ends an asynchronous request to rename a topic.</summary>
      <returns>Returns <see cref="T:Microsoft.ServiceBus.Messaging.TopicDescription" />.</returns>
      <param name="result">An IAsyncResult that references the renamed topic.</param>
      <exception cref="T:System.ArgumentNullException">Thrown when the result is null.</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.EndSubscriptionExists(System.IAsyncResult)">
      <summary>Ends an asynchronous request to determine whether a subscription exists from the service namespace.</summary>
      <returns>true if a subscription exists in the service namespace; otherwise, false.</returns>
      <param name="result">An <see cref="T:System.IAsyncResult" /> object that represents the result of the subscription existence checking operation.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.EndTopicExists(System.IAsyncResult)">
      <summary>Ends an asynchronous request to determine whether a topic exists from the service namespace.</summary>
      <returns>true if a subscription exists in the service namespace; otherwise, false.</returns>
      <param name="result">An <see cref="T:System.IAsyncResult" /> object that represents the result of the topic existence checking operation.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.EndUpdateQueue(System.IAsyncResult)">
      <summary>Ends an asynchronous request to update queue.</summary>
      <returns>A <see cref="T:Microsoft.ServiceBus.Messaging.QueueDescription" /> handle to the queue, or null if the queue does not exist in the service namespace.</returns>
      <param name="result">An <see cref="T:System.IAsyncResult" /> object that represents the result of the update queue operation.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.EndUpdateSubscription(System.IAsyncResult)">
      <summary>Ends an asynchronous request to update subscription.</summary>
      <returns>A <see cref="T:Microsoft.ServiceBus.Messaging.SubscriptionDescription" /> handle to the subscription, or null if the subscription does not exist in the service namespace.</returns>
      <param name="result">An <see cref="T:System.IAsyncResult" /> object that represents the result of the update subscription operation.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.EndUpdateTopic(System.IAsyncResult)">
      <summary>Ends an asynchronous request to update topic.</summary>
      <returns>A <see cref="T:Microsoft.ServiceBus.Messaging.TopicDescription" /> handle to the topic, or null if the topic does not exist in the service namespace.</returns>
      <param name="result">An <see cref="T:System.IAsyncResult" /> object that represents the result of the update topic operation.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.EventHubExists(System.String)">
      <summary>Indicates whether or not an Event Hub exists.</summary>
      <returns>Returns true if the Event Hub exists; otherwise, false.</returns>
      <param name="path">The path to the Event Hub.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.EventHubExistsAsync(System.String)">
      <summary>Asynchronously determines whether the event hub exists from the service namespace. </summary>
      <returns>The task representing the asynchronous operation.</returns>
      <param name="path">The path of the event hub.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.GetConsumerGroup(System.String,System.String)">
      <summary>Gets an Event Hubs consumer group.</summary>
      <returns>Returns <see cref="T:Microsoft.ServiceBus.Messaging.ConsumerGroupDescription" />.</returns>
      <param name="eventHubPath">The path to the Event Hub.</param>
      <param name="name">The name of the consumer group.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.GetConsumerGroupAsync(System.String,System.String)">
      <summary>Asynchronously gets a consumer group.</summary>
      <returns>The task representing the asynchronous operation.</returns>
      <param name="eventHubPath">The path to the Event Hub.</param>
      <param name="name">The name of the consumer group.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.GetConsumerGroups(System.String)">
      <summary>Gets a collection representing a set of consumer groups.</summary>
      <returns>Returns an <see cref="T:System.Collections.Generic.IEnumerable`1" /> object representing the set of consumer groups.</returns>
      <param name="eventHubPath">The path to the Event Hub.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.GetConsumerGroupsAsync(System.String)">
      <summary>Asynchronously gets a set of consumer groups.</summary>
      <returns>The task representing the asynchronous operation.</returns>
      <param name="eventHubPath">The path to the Event Hub.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.GetEventHub(System.String)">
      <summary>Gets information about an Event Hub.</summary>
      <returns>Returns an <see cref="T:Microsoft.ServiceBus.Messaging.EventHubDescription" /> object that contains the Event Hub description.</returns>
      <param name="path">The path to the Event Hub.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.GetEventHubAsync(System.String)">
      <summary>Asynchronously gets information about an Event Hub.</summary>
      <returns>The task representing the asynchronous operation.</returns>
      <param name="path">The path to the Event Hub.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.GetEventHubPartition(System.String,System.String)">
      <summary>Returns information about the specified Event Hub partition. This method assumes that you want partition information for the partition specified by the <paramref name="name" /> parameter that belongs to the default consumer group pointed to by <paramref name="eventHubPath" />.</summary>
      <returns>Returns <see cref="T:Microsoft.ServiceBus.Messaging.PartitionDescription" />.</returns>
      <param name="eventHubPath">The path to the Event Hub.</param>
      <param name="name">The ID of the Event Hub partition.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.GetEventHubPartitionAsync(System.String,System.String)">
      <summary>Asynchronous version of <see cref="M:Microsoft.ServiceBus.NamespaceManager.GetEventHubPartition(System.String,System.String)" />.</summary>
      <returns>Returns <see cref="T:System.Threading.Tasks.Task`1" />.</returns>
      <param name="eventHubPath">The path to the Event Hub.</param>
      <param name="name">The ID of the Event Hub partition.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.GetEventHubPartitionAsync(System.String,System.String,System.String)">
      <summary>Asynchronous version of <see cref="M:Microsoft.ServiceBus.NamespaceManager.GetEventHubPartition(System.String,System.String)" />.</summary>
      <returns>Returns <see cref="T:System.Threading.Tasks.Task`1" />.</returns>
      <param name="eventHubPath">The path to the Event Hub.</param>
      <param name="consumerGroupName">The name of the Event Hubs consumer group.</param>
      <param name="name">The ID of the Event Hubs partition.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.GetEventHubs">
      <summary>Gets a collection representing a set of Event Hubs.</summary>
      <returns>Returns an <see cref="T:System.Collections.Generic.IEnumerable`1" /> object representing the set of Event Hubs.</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.GetEventHubsAsync">
      <summary>Asynchronously gets a list of Event Hubs.</summary>
      <returns>The task representing the asynchronous operation.</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.GetNotificationHub(System.String)">
      <summary>Retrieves the description of a notification hub from the service namespace.</summary>
      <returns>The <see cref="T:Microsoft.ServiceBus.Notifications.NotificationHubDescription" /> from the service namespace.</returns>
      <param name="path">The path to the service namespace.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.GetNotificationHubAsync(System.String)">
      <summary>Asynchronously retrieves the description of a notification hub from the service namespace.</summary>
      <returns>The asynchronous operation that retrieves the description of a notification hub from the service namespace.</returns>
      <param name="path">The path to the service namespace.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.GetNotificationHubJobAsync(System.String,System.String)">
      <summary>Asynchronously gets a specified notification hubs job.</summary>
      <returns>Returns <see cref="T:System.Threading.Tasks.Task`1" />.</returns>
      <param name="jobId">The ID of the job.</param>
      <param name="notificationHubPath">The path to the notification hub.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.GetNotificationHubJobsAsync(System.String)">
      <summary>Asynchronously gets a set of all notification hubs jobs.</summary>
      <returns>Returns <see cref="T:System.Threading.Tasks.Task`1" />.</returns>
      <param name="notificationHubPath">The path to the notification hub.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.GetNotificationHubs">
      <summary>Retrieves the description of a notification hub from the service namespace.</summary>
      <returns>The list of description of a notification hub from the service namespace.</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.GetNotificationHubsAsync">
      <summary>Asynchronously retrieves the description of a notification hub from the service namespace.</summary>
      <returns>The asynchronous operation.</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.GetQueue(System.String)">
      <summary>Retrieves a queue from the service namespace.</summary>
      <returns>A <see cref="T:Microsoft.ServiceBus.Messaging.QueueDescription" /> handle to the queue, or a <see cref="T:Microsoft.ServiceBus.Messaging.MessagingEntityNotFoundException" /> exception if the queue does not exist in the service namespace.</returns>
      <param name="path">The path of the queue relative to the service namespace base address.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" /> is empty or null, or <paramref name="path" /> starts or ends with "/".</exception>
      <exception cref="T:System.TimeoutException">The operation times out. The timeout period is initialized through the <see cref="T:Microsoft.ServiceBus.NamespaceManagerSettings" /> class. You may need to increase the value of the <see cref="P:Microsoft.ServiceBus.NamespaceManagerSettings.OperationTimeout" /> property to avoid this exception if the timeout value is relatively low.</exception>
      <exception cref="T:System.UnauthorizedAccessException">The <see cref="T:Microsoft.ServiceBus.NamespaceManager" /> object does not have sufficient permission to perform this operation. You should check to ensure that your <see cref="T:Microsoft.ServiceBus.NamespaceManager" /> has the correct <see cref="P:Microsoft.ServiceBus.NamespaceManagerSettings.Credential" /> credentials to perform this operation.</exception>
      <exception cref="T:Microsoft.ServiceBus.Messaging.MessagingEntityNotFoundException">The queue does not exist in the service namespace.</exception>
      <exception cref="T:Microsoft.ServiceBus.Messaging.MessagingException">An internal error or unexpected exception occurs.</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.GetQueueAsync(System.String)">
      <summary>Asynchronously retrieves a queue from the service namespace.</summary>
      <returns>The asynchronous operation.</returns>
      <param name="path">The path of the queue relative to the service namespace base address.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.GetQueues">
      <summary>Retrieves an enumerable collection of all queues in the service namespace.</summary>
      <returns>An <see cref="T:System.Collections.Generic.IEnumerable`1" /> object that represents the collection of all queues in the service namespace or returns an empty collection if no queue exists. </returns>
      <exception cref="T:System.TimeoutException">The operation times out. The timeout period is initialized through the <see cref="T:Microsoft.ServiceBus.NamespaceManagerSettings" /> class. You may need to increase the value of the <see cref="P:Microsoft.ServiceBus.NamespaceManagerSettings.OperationTimeout" /> property to avoid this exception if the timeout value is relatively low.</exception>
      <exception cref="T:System.UnauthorizedAccessException">The <see cref="T:Microsoft.ServiceBus.NamespaceManager" /> object does not have sufficient permission to perform this operation. You should check to ensure that your <see cref="T:Microsoft.ServiceBus.NamespaceManager" /> has the correct <see cref="P:Microsoft.ServiceBus.NamespaceManagerSettings.Credential" /> credentials to perform this operation.</exception>
      <exception cref="T:Microsoft.ServiceBus.Messaging.MessagingException">An internal error or unexpected exception occurs.</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.GetQueues(System.String)">
      <summary>Retrieves an enumerable collection of all queues in the service namespace with the specified filter. You can filter by a combination of entity name (including starts with), entity length (Gt or Lt), created, updated, and accessed time (Gt or Lt).</summary>
      <returns>An <see cref="T:System.Collections.Generic.IEnumerable`1" /> object that represents the collection of all queues in the service namespace or returns an empty collection if no queue exists.</returns>
      <param name="filter">A string used to filter the queues to be retrieved.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.GetQueuesAsync">
      <summary>Asynchronously retrieves an enumerable collection of all queues in the service namespace.</summary>
      <returns>The asynchronous operation.</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.GetQueuesAsync(System.String)">
      <summary>Asynchronously retrieves an enumerable collection of all queues in the service namespace with specified filter.</summary>
      <returns>The asynchronous operation.</returns>
      <param name="filter">The string used to filter the queues to be retrieved.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.GetRelayAsync(System.String)">
      <summary>Asynchronously retrieves an enumerable collection of all relays in the service namespace with specified path.</summary>
      <returns>The asynchronous operation.</returns>
      <param name="path">The relay path.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.GetRelaysAsync">
      <summary>Asynchronously retrieves an enumerable collection of all relays in the service namespace.</summary>
      <returns>The asynchronous operation.</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.GetRevokedPublishers(System.String)">
      <summary>Returns all revoked publishers in an Event Hub.</summary>
      <returns>Returns an <see cref="T:System.Collections.Generic.IEnumerable`1" /> collection containing the revoked publishers.</returns>
      <param name="entityPath">Path to the Event Hub. See <see cref="P:Microsoft.ServiceBus.Messaging.EventHubDescription.Path" />.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.GetRevokedPublishersAsync(System.String)">
      <summary>Asynchronous version of <see cref="M:Microsoft.ServiceBus.NamespaceManager.GetRevokedPublishers(System.String)" />.</summary>
      <returns>Returns a <see cref="T:System.Threading.Tasks.Task`1" /> containing the revoked publishers.</returns>
      <param name="entityPath">Path to the Event Hub. See <see cref="P:Microsoft.ServiceBus.Messaging.EventHubDescription.Path" />.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.GetRules(System.String,System.String)">
      <summary>Retrieves an enumerable collection of all rules in the service namespace.</summary>
      <returns>An <see cref="T:System.Collections.Generic.IEnumerable`1" /> object that represents the collection of all rules in the service namespace or returns an empty collection if no rule exists.</returns>
      <param name="topicPath">The path of the topic relative to the service namespace base address.</param>
      <param name="subscriptionName">The name of the subscription.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.GetRules(System.String,System.String,System.String)">
      <summary>Retrieves an enumerable collection of all rules in the service namespace with specified topic path, subscription name and filter.</summary>
      <returns>An <see cref="T:System.Collections.Generic.IEnumerable`1" /> object that represents the collection of all rules in the service namespace or returns an empty collection if no rule exists.</returns>
      <param name="topicPath">The topic path relative to the service namespace base address.</param>
      <param name="subscriptionName">The name of the subscription.</param>
      <param name="filter">The string used to filter the rules to be retrieved.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.GetRulesAsync(System.String,System.String)">
      <summary>Asynchronously retrieves an enumerable collection of all rules in the service namespace.</summary>
      <returns>The asynchronous operation.</returns>
      <param name="topicPath">The topic path relative to the service namespace base address.</param>
      <param name="subscriptionName">The name of the subscription.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.GetRulesAsync(System.String,System.String,System.String)">
      <summary>Asynchronously retrieves an enumerable collection of all rules in the service namespace with specified topic path, subscription name and filter.</summary>
      <returns>The asynchronous operation.</returns>
      <param name="topicPath">The topic path relative to the service namespace base address.</param>
      <param name="subscriptionName">The name of the subscription.</param>
      <param name="filter">The string used to filter the rules to be retrieved.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.GetSubscription(System.String,System.String)">
      <summary>Retrieves the topic from the service namespace.</summary>
      <returns>A <see cref="T:Microsoft.ServiceBus.Messaging.SubscriptionDescription" /> handle to the subscription, or a <see cref="T:Microsoft.ServiceBus.Messaging.MessagingEntityNotFoundException" /> exception if the subscription does not exist in the service namespace.</returns>
      <param name="topicPath">The path of the topic relative to the service namespace base address.</param>
      <param name="name">The name of the subscription.</param>
      <exception cref="T:Microsoft.ServiceBus.Messaging.MessagingEntityNotFoundException">The subscription does not exist in the service namespace.</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.GetSubscriptionAsync(System.String,System.String)">
      <summary>Asynchronously retrieves the topic from the service namespace.</summary>
      <returns>The asynchronous operation.</returns>
      <param name="topicPath">The path of the topic relative to the service namespace base address.</param>
      <param name="name">The name of the subscription.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.GetSubscriptions(System.String)">
      <summary>Retrieves an enumerable collection of all subscriptions in the service namespace.</summary>
      <returns>An <see cref="T:System.Collections.Generic.IEnumerable`1" /> object that represents the collection of all subscriptions in the service namespace or returns an empty collection if no subscription exists.</returns>
      <param name="topicPath">The path of the topic relative to the service namespace base address.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.GetSubscriptions(System.String,System.String)">
      <summary>Retrieves an enumerable collection of all subscriptions in the service namespace with specified topic path and filter.</summary>
      <returns>An <see cref="T:System.Collections.Generic.IEnumerable`1" /> object that represents the collection of all subscriptions in the service namespace or returns an empty collection if no subscription exists.</returns>
      <param name="topicPath">The path of the topic relative to the service namespace base address.</param>
      <param name="filter">The string used to filter the subscriptions to be retrieved.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.GetSubscriptionsAsync(System.String)">
      <summary>Asynchronously retrieves an enumerable collection of all subscriptions in the service namespace.</summary>
      <returns>The asynchronous operation.</returns>
      <param name="topicPath">The path of the topic relative to the service namespace base address.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.GetSubscriptionsAsync(System.String,System.String)">
      <summary>Asynchronously retrieves an enumerable collection of all subscriptions in the service namespace.</summary>
      <returns>The asynchronous operation.</returns>
      <param name="topicPath">The path of the topic relative to the service namespace base address.</param>
      <param name="filter">The string used to filter the subscriptions to be retrieved.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.GetTopic(System.String)">
      <summary>Retrieves the topic from the service namespace.</summary>
      <returns>A <see cref="T:Microsoft.ServiceBus.Messaging.TopicDescription" /> reference to the topic, or a <see cref="T:Microsoft.ServiceBus.Messaging.MessagingEntityNotFoundException" /> exception if the topic does not exist in the service namespace.</returns>
      <param name="path">The path of the topic relative to the service namespace base address.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" /> is empty or null.</exception>
      <exception cref="T:System.TimeoutException">The operation times out. The timeout period is initialized through the <see cref="T:Microsoft.ServiceBus.NamespaceManagerSettings" /> class. You may need to increase the value of the <see cref="P:Microsoft.ServiceBus.NamespaceManagerSettings.OperationTimeout" /> property to avoid this exception if the timeout value is relatively low.</exception>
      <exception cref="T:System.UnauthorizedAccessException">The <see cref="T:Microsoft.ServiceBus.NamespaceManager" /> object does not have sufficient permission to perform this operation. You should check to ensure that your <see cref="T:Microsoft.ServiceBus.NamespaceManager" /> has the correct <see cref="P:Microsoft.ServiceBus.NamespaceManagerSettings.Credential" /> credentials to perform this operation.</exception>
      <exception cref="T:Microsoft.ServiceBus.Messaging.MessagingEntityNotFoundException">The topic does not exist in the service namespace.</exception>
      <exception cref="T:Microsoft.ServiceBus.Messaging.MessagingException">An internal error or unexpected exception occurs.</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.GetTopicAsync(System.String)">
      <summary>Asynchronously retrieves the topic from the service namespace.</summary>
      <returns>The asynchronous operation.</returns>
      <param name="path">The path of the topic relative to the service namespace base address.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.GetTopics">
      <summary>Retrieves a collection of topics in a service namespace.</summary>
      <returns>An <see cref="T:System.Collections.Generic.IEnumerable`1" /> object that represents the collection of topics under the current namespace, or returns an empty collection if no topic exists.</returns>
      <exception cref="T:System.TimeoutException">The operation times out. The timeout period is initialized through the <see cref="T:Microsoft.ServiceBus.NamespaceManagerSettings" /> class. You may need to increase the value of the <see cref="P:Microsoft.ServiceBus.NamespaceManagerSettings.OperationTimeout" /> property to avoid this exception if the timeout value is relatively low.</exception>
      <exception cref="T:System.UnauthorizedAccessException">The <see cref="T:Microsoft.ServiceBus.NamespaceManager" /> object does not have sufficient permission to perform this operation. You should check to ensure that your <see cref="T:Microsoft.ServiceBus.NamespaceManager" /> has the correct <see cref="P:Microsoft.ServiceBus.NamespaceManagerSettings.Credential" /> credentials to perform this operation.</exception>
      <exception cref="T:Microsoft.ServiceBus.Messaging.MessagingException">An internal error or unexpected exception occurs.</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.GetTopics(System.String)">
      <summary>Retrieves a collection of topics in a service namespace with the specified filter. You can filter by a combination of entity name (including starts with), entity length (Gt or Lt), created, updated, and accessed time (Gt or Lt).</summary>
      <returns>An <see cref="T:System.Collections.Generic.IEnumerable`1" /> object that represents the collection of topics under the current namespace, or returns an empty collection if no topic exists.</returns>
      <param name="filter">The string used to filter the topics to be retrieved.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.GetTopicsAsync">
      <summary>Asynchronously retrieves a collection of topics in a service namespace.</summary>
      <returns>The asynchronous operation.</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.GetTopicsAsync(System.String)">
      <summary>Asynchronously retrieves a collection of topics in a service namespace.</summary>
      <returns>The asynchronous operation.</returns>
      <param name="filter">The string used to filter the topics to be retrieved.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.GetVersionInfo">
      <summary>Retrieves a string of the format "YYYY-MM" that indicates the maximum supported protocol version that the server or service can handle.</summary>
      <returns>A string that indicates the maximum supported protocol version that the server or service can handle.</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.GetVersionInfoAsync">
      <summary>Asynchronously retrieves a string of the format "YYYY-MM" that indicates the maximum supported protocol version that the server or service can handle.</summary>
      <returns>The asynchronous operation.</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.NotificationHubExists(System.String)">
      <summary>Determines whether there is a notification hub at the specified <paramref name="path" /> in the service namespace.</summary>
      <returns>true if there is a notification hub at the specified <paramref name="path" /> in the service namespace; otherwise, false.</returns>
      <param name="path">The path to the notification hub.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.NotificationHubExistsAsync(System.String)">
      <summary>Asynchronously determines whether there is a notification hub at the specified <paramref name="path" /> in the service namespace.</summary>
      <returns>The asynchronous operation.</returns>
      <param name="path">The path to the notification hub.</param>
    </member>
    <member name="F:Microsoft.ServiceBus.NamespaceManager.ProtocolVersion">
      <summary>Specifies the string of the format "YYYY-MM" that indicates the client's protocol version.</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.QueueExists(System.String)">
      <summary>Determines whether a queue exists in the service namespace.</summary>
      <returns>true if a queue exists in the service namespace; otherwise, false.</returns>
      <param name="path">The path of the queue relative to the service namespace base address.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.QueueExistsAsync(System.String)">
      <summary>Asynchronously determines whether a queue exists in the service namespace.</summary>
      <returns>The asynchronous operation.</returns>
      <param name="path">The path of the queue relative to the service namespace base address.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.RelayExistsAsync(System.String)">
      <summary>Asynchronously determines whether a relay exists in the service namespace.</summary>
      <returns>The asynchronous operation.</returns>
      <param name="path">The path of the relay relative to the service namespace base address.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.RenameQueue(System.String,System.String)">
      <summary>Renames a queue inside a namespace.</summary>
      <returns>Returns <see cref="T:Microsoft.ServiceBus.Messaging.QueueDescription" />.</returns>
      <param name="path">The path to an existing queue.</param>
      <param name="newPath">The new path to the renamed queue.</param>
      <exception cref="T:System.ArgumentException">Thrown when <paramref name="path" /> is null or empty.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Thrown when the length of <paramref name="path" /> is more than 290 characters.</exception>
      <exception cref="T:System.TimeoutException">Thrown when the operation times out. The timeout period is initialized through the <see cref="T:Microsoft.ServiceBus.NamespaceManagerSettings" /> class. You can increase the value of the <see cref="P:Microsoft.ServiceBus.NamespaceManagerSettings.OperationTimeout" /> property to avoid this exception if the timeout value is relatively low.</exception>
      <exception cref="T:Microsoft.ServiceBus.Messaging.MessagingEntityNotFoundException">Thrown when the source queue with the specified path does not exist.</exception>
      <exception cref="T:Microsoft.ServiceBus.Messaging.MessagingEntityAlreadyExistsException">Thrown when the target queue with the same path exists within the same namespace.</exception>
      <exception cref="T:System.UnauthorizedAccessException">Thrown when the client does not have credentials to perform the operation.</exception>
      <exception cref="T:Microsoft.ServiceBus.Messaging.MessagingException">Thrown when an internal error or unexpected exception occurs.</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.RenameQueueAsync(System.String,System.String)">
      <summary>Asynchronous version of <see cref="M:Microsoft.ServiceBus.NamespaceManager.RenameQueue(System.String,System.String)" />.</summary>
      <returns>Returns <see cref="T:System.Threading.Tasks.Task`1" />.</returns>
      <param name="path">The path to an existing queue.</param>
      <param name="newPath">The new path to the renamed queue.</param>
      <exception cref="T:System.ArgumentException">Thrown when <paramref name="path" /> is null or empty.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Thrown when the length of <paramref name="path" /> is more than 290 characters.</exception>
      <exception cref="T:System.TimeoutException">Thrown when the operation times out. The timeout period is initialized through the <see cref="T:Microsoft.ServiceBus.NamespaceManagerSettings" /> class. You can increase the value of the <see cref="P:Microsoft.ServiceBus.NamespaceManagerSettings.OperationTimeout" /> property to avoid this exception if the timeout value is relatively low.</exception>
      <exception cref="T:Microsoft.ServiceBus.Messaging.MessagingEntityNotFoundException">Thrown when the source queue with the specified path does not exist.</exception>
      <exception cref="T:Microsoft.ServiceBus.Messaging.MessagingEntityAlreadyExistsException">Thrown when the target queue with the same path exists within the same namespace.</exception>
      <exception cref="T:System.UnauthorizedAccessException">Thrown when the client does not have credentials to perform the operation.</exception>
      <exception cref="T:Microsoft.ServiceBus.Messaging.MessagingException">Thrown when an internal error or unexpected exception occurs.</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.RenameTopic(System.String,System.String)">
      <summary>Renames a topic inside a namespace.</summary>
      <returns>Returns <see cref="T:Microsoft.ServiceBus.Messaging.TopicDescription" />.</returns>
      <param name="path">The path to an existing topic.</param>
      <param name="newPath">The new path to the renamed topic.</param>
      <exception cref="T:System.ArgumentException">Thrown when <paramref name="path" /> is null or empty.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Thrown when the length of <paramref name="path" /> is more than 290 characters.</exception>
      <exception cref="T:System.TimeoutException">Thrown when the operation times out. The timeout period is initialized through the <see cref="T:Microsoft.ServiceBus.NamespaceManagerSettings" /> class. You can increase the value of the <see cref="P:Microsoft.ServiceBus.NamespaceManagerSettings.OperationTimeout" /> property to avoid this exception if the timeout value is relatively low.</exception>
      <exception cref="T:Microsoft.ServiceBus.Messaging.MessagingEntityNotFoundException">Thrown when the source topic with the specified path does not exist.</exception>
      <exception cref="T:Microsoft.ServiceBus.Messaging.MessagingEntityAlreadyExistsException">Thrown when the target topic with the same path exists within the same namespace.</exception>
      <exception cref="T:System.UnauthorizedAccessException">Thrown when the client does not have credentials to perform the operation.</exception>
      <exception cref="T:Microsoft.ServiceBus.Messaging.MessagingException">Thrown when an internal error or unexpected exception occurs.</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.RenameTopicAsync(System.String,System.String)">
      <summary>Asynchronous version of <see cref="M:Microsoft.ServiceBus.NamespaceManager.RenameTopic(System.String,System.String)" />.</summary>
      <returns>Returns <see cref="T:System.Threading.Tasks.Task`1" />.</returns>
      <param name="path">The path to an existing topic.</param>
      <param name="newPath">The new path to the renamed topic.</param>
      <exception cref="T:System.ArgumentException">Thrown when <paramref name="path" /> is null or empty.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Thrown when the length of <paramref name="path" /> is more than 290 characters.</exception>
      <exception cref="T:System.TimeoutException">Thrown when the operation times out. The timeout period is initialized through the <see cref="T:Microsoft.ServiceBus.NamespaceManagerSettings" /> class. You can increase the value of the <see cref="P:Microsoft.ServiceBus.NamespaceManagerSettings.OperationTimeout" /> property to avoid this exception if the timeout value is relatively low.</exception>
      <exception cref="T:Microsoft.ServiceBus.Messaging.MessagingEntityNotFoundException">Thrown when the source topic with the specified path does not exist.</exception>
      <exception cref="T:Microsoft.ServiceBus.Messaging.MessagingEntityAlreadyExistsException">Thrown when the target topic with the same path exists within the same namespace.</exception>
      <exception cref="T:System.UnauthorizedAccessException">Thrown when the client does not have credentials to perform the operation.</exception>
      <exception cref="T:Microsoft.ServiceBus.Messaging.MessagingException">Thrown when an internal error or unexpected exception occurs.</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.RestorePublisher(System.String,System.String)">
      <summary>Removes the publisher from the Event Hubs revocation list.</summary>
      <param name="entityPath">Event Hub path under which the publisher was revoked and must be restored. See <see cref="T:Microsoft.ServiceBus.Messaging.EventHubDescription" />.</param>
      <param name="publisher">The revoked publisher.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.RestorePublisherAsync(System.String,System.String)">
      <summary>Asynchronous version of <see cref="M:Microsoft.ServiceBus.NamespaceManager.RestorePublisher(System.String,System.String)" />.</summary>
      <returns>Returns <see cref="T:System.Threading.Tasks.Task" />.</returns>
      <param name="entityPath">Event Hub path under which the publisher was revoked and must be restored. See <see cref="T:Microsoft.ServiceBus.Messaging.EventHubDescription" />.</param>
      <param name="publisher">The revoked publisher.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.RevokePublisher(System.String,System.String)">
      <summary>Adds the publisher to the Event Hubs revocation list.</summary>
      <returns>Returns <see cref="T:Microsoft.ServiceBus.Messaging.RevokedPublisherDescription" />.</returns>
      <param name="entityPath">Event Hub path under which the publisher must be revoked. See <see cref="T:Microsoft.ServiceBus.Messaging.EventHubDescription" />.</param>
      <param name="publisher">The publisher to revoke.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.RevokePublisherAsync(System.String,System.String)">
      <summary>Asynchronous version of <see cref="M:Microsoft.ServiceBus.NamespaceManager.RevokePublisher(System.String,System.String)" />.</summary>
      <returns>Returns <see cref="T:System.Threading.Tasks.Task`1" />.</returns>
      <param name="entityPath">Event Hub path under which the publisher must be revoked. See <see cref="T:Microsoft.ServiceBus.Messaging.EventHubDescription" />.</param>
      <param name="publisher">The publisher to revoke.</param>
    </member>
    <member name="P:Microsoft.ServiceBus.NamespaceManager.Settings">
      <summary>Gets the service namespace client settings.</summary>
      <returns>A <see cref="T:Microsoft.ServiceBus.NamespaceManagerSettings" /> object that represents the service namespace client settings.</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.SubmitNotificationHubJobAsync(Microsoft.ServiceBus.Notifications.NotificationHubJob,System.String)">
      <summary>Submits a notification hub job for processing.</summary>
      <returns>Returns <see cref="T:System.Threading.Tasks.Task`1" />.</returns>
      <param name="job">A <see cref="T:Microsoft.ServiceBus.Notifications.NotificationHubJob" /> object representing the job to submit.</param>
      <param name="notificationHubPath">The path to the notification hub.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.SubscriptionExists(System.String,System.String)">
      <summary>Determines whether a subscription exists in the service namespace.</summary>
      <returns>true if a subscription exists in the service namespace; otherwise, false.</returns>
      <param name="topicPath">The path of the topic relative to the service namespace base address.</param>
      <param name="name">The name of the subscription.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.SubscriptionExistsAsync(System.String,System.String)">
      <summary>Asynchronously determines whether a subscription exists in the service namespace.</summary>
      <returns>The asynchronous operation.</returns>
      <param name="topicPath">The path of the topic relative to the service namespace base address.</param>
      <param name="name">The name of the subscription.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.TopicExists(System.String)">
      <summary>Determines whether a topic exists in the service namespace.</summary>
      <returns>true if a topic exists in the service namespace; otherwise, false.</returns>
      <param name="path">The path of the topic relative to the service namespace base address.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.TopicExistsAsync(System.String)">
      <summary>Asynchronously determines whether a topic exists in the service namespace.</summary>
      <returns>The asynchronous operation.</returns>
      <param name="path">The path of the topic relative to the service namespace base address.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.UpdateConsumerGroup(Microsoft.ServiceBus.Messaging.ConsumerGroupDescription)">
      <summary>Updates an Event Hubs consumer group.</summary>
      <returns>Returns <see cref="T:Microsoft.ServiceBus.Messaging.ConsumerGroupDescription" />.</returns>
      <param name="description">A <see cref="T:Microsoft.ServiceBus.Messaging.ConsumerGroupDescription" /> object containing the updated information.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.UpdateConsumerGroupAsync(Microsoft.ServiceBus.Messaging.ConsumerGroupDescription)">
      <summary>Asynchronously updates the consumer group.</summary>
      <returns>The task representing the asynchronous operation.</returns>
      <param name="description">The consumer group description.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.UpdateEventHub(Microsoft.ServiceBus.Messaging.EventHubDescription)">
      <summary>Updates an Event Hub.</summary>
      <returns>Returns <see cref="T:Microsoft.ServiceBus.Messaging.EventHubDescription" />.</returns>
      <param name="description">An <see cref="T:Microsoft.ServiceBus.Messaging.EventHubDescription" /> object containing the updated information.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.UpdateEventHubAsync(Microsoft.ServiceBus.Messaging.EventHubDescription)">
      <summary>Asynchronously updates the event hub.</summary>
      <returns>The task representing the asynchronous operation.</returns>
      <param name="description">The event hub description.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.UpdateNotificationHub(Microsoft.ServiceBus.Notifications.NotificationHubDescription)">
      <summary>Updates an existing notification hub at the path specified in the <paramref name="description" /> parameter. All the notification hub properties are overwritten with the ones specified in the <paramref name="description" /> parameter. </summary>
      <returns>A <see cref="T:Microsoft.ServiceBus.Notifications.NotificationHubDescription" /> object containing a description of the updated notification hub.</returns>
      <param name="description">The description object describing the attributes with which the notification hub will be updated.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.UpdateNotificationHubAsync(Microsoft.ServiceBus.Notifications.NotificationHubDescription)">
      <summary>Asynchronously updates an existing notification hub at the path specified in the <paramref name="description" /> parameter. All the notification hub properties are overwritten with the ones specified in the <paramref name="description" /> parameter.</summary>
      <returns>A <see cref="T:Microsoft.ServiceBus.Notifications.NotificationHubDescription" /> object containing a description of the updated notification hub.</returns>
      <param name="description">The description object describing the attributes with which the notification hub will be updated.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.UpdateQueue(Microsoft.ServiceBus.Messaging.QueueDescription)">
      <summary>Enables you to update the queue.</summary>
      <returns>The <see cref="T:Microsoft.ServiceBus.Messaging.QueueDescription" /> of the updated queue.</returns>
      <param name="description">A <see cref="T:Microsoft.ServiceBus.Messaging.QueueDescription" /> object describing the queue to be updated.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.UpdateQueueAsync(Microsoft.ServiceBus.Messaging.QueueDescription)">
      <summary>Asynchronously enables you to update the queue.</summary>
      <returns>The asynchronous operation.</returns>
      <param name="description">A <see cref="T:Microsoft.ServiceBus.Messaging.QueueDescription" /> object describing the queue to be updated.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.UpdateRelayAsync(Microsoft.ServiceBus.Messaging.RelayDescription)">
      <summary>Asynchronously enables you to update the relay.</summary>
      <returns>The asynchronous operation.</returns>
      <param name="description">A <see cref="T:Microsoft.ServiceBus.Messaging.RelayDescription" /> object describing the relay to be updated.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.UpdateSubscription(Microsoft.ServiceBus.Messaging.SubscriptionDescription)">
      <summary>Enables you to update the subscription.</summary>
      <returns>The <see cref="T:Microsoft.ServiceBus.Messaging.SubscriptionDescription" /> of the updated subscription.</returns>
      <param name="description">A <see cref="T:Microsoft.ServiceBus.Messaging.SubscriptionDescription" /> object describing the subscription to be updated.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.UpdateSubscriptionAsync(Microsoft.ServiceBus.Messaging.SubscriptionDescription)">
      <summary>Asynchronously enables you to update the subscription.</summary>
      <returns>The asynchronous operation.</returns>
      <param name="description">A <see cref="T:Microsoft.ServiceBus.Messaging.SubscriptionDescription" /> object describing the subscription to be updated.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.UpdateTopic(Microsoft.ServiceBus.Messaging.TopicDescription)">
      <summary>Enables you to update the topic.</summary>
      <returns>The <see cref="T:Microsoft.ServiceBus.Messaging.TopicDescription" /> of the updated topic.</returns>
      <param name="description">A <see cref="T:Microsoft.ServiceBus.Messaging.TopicDescription" /> object describing the topic to be updated.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.UpdateTopicAsync(Microsoft.ServiceBus.Messaging.TopicDescription)">
      <summary>Asynchronously enables you to update the topic.</summary>
      <returns>The asynchronous operation.</returns>
      <param name="description">A <see cref="T:Microsoft.ServiceBus.Messaging.TopicDescription" /> object describing the topic to be updated.</param>
    </member>
    <member name="T:Microsoft.ServiceBus.NamespaceManagerSettings">
      <summary>Contains the settings for the namespace manager.</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManagerSettings.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.NamespaceManagerSettings" /> class.</summary>
    </member>
    <member name="P:Microsoft.ServiceBus.NamespaceManagerSettings.OperationTimeout">
      <summary>Gets or sets the operation timeout period for all service namespace management operations, such as GetQueue, CreateQueue, and so on.</summary>
      <returns>A <see cref="T:System.TimeSpan" /> object that represents the timeout period.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.NamespaceManagerSettings.RetryPolicy">
      <summary>Gets or sets the base implementation of the retry mechanism for unreliable actions and transient conditions associated with the namespace manager.</summary>
      <returns>The base implementation of the retry mechanism for unreliable actions and transient conditions associated with the namespace manager.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.NamespaceManagerSettings.TokenProvider">
      <summary>Gets or sets the security token provider.</summary>
      <returns>The security token provider.</returns>
    </member>
    <member name="T:Microsoft.ServiceBus.NetEventRelayBinding">
      <summary>Represents a binding that supports one-way event multicasting and allows any number of event publishers and event consumers to rendezvous at the same endpoint. </summary>
    </member>
    <member name="M:Microsoft.ServiceBus.NetEventRelayBinding.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.NetEventRelayBinding" /> class.</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.NetEventRelayBinding.#ctor(Microsoft.ServiceBus.EndToEndSecurityMode,Microsoft.ServiceBus.RelayEventSubscriberAuthenticationType)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.NetEventRelayBinding" /> class, using the specified security mode and relay client authentication type.</summary>
      <param name="securityMode">The type of security used with the SOAP message and for the client. </param>
      <param name="relayClientAuthenticationType">The type of authentication used by the client.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NetEventRelayBinding.#ctor(Microsoft.ServiceBus.RelayedOnewayTransportBindingElement,System.ServiceModel.Channels.BinaryMessageEncodingBindingElement,Microsoft.ServiceBus.NetOnewayRelaySecurity)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.NetEventRelayBinding" /> class, using the specified transport, encoding, and security elements. </summary>
      <param name="transport">The transport to use. </param>
      <param name="encoding">The encoding to use. </param>
      <param name="security">The type of security used with the SOAP message and for the client. </param>
    </member>
    <member name="M:Microsoft.ServiceBus.NetEventRelayBinding.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.NetEventRelayBinding" /> class, using the specified configuration. </summary>
      <param name="configurationName">The name of the configuration to use.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NetEventRelayBinding.ApplyConfiguration(System.String)">
      <summary>Applies the settings from the configuration element that corresponds to the specified name to the current instance of this binding element.</summary>
      <param name="configurationName">The name of the configuration element to take the settings from.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NetEventRelayBinding.IsBindingElementsMatch(Microsoft.ServiceBus.RelayedOnewayTransportBindingElement,System.ServiceModel.Channels.BinaryMessageEncodingBindingElement,System.ServiceModel.Channels.ReliableSessionBindingElement)">
      <summary>Retrieves a value that determines if the specified binding elements match the current instance. </summary>
      <returns>Returns true if the bindings match; otherwise, false. </returns>
      <param name="transport">The transport to check against the current instance. </param>
      <param name="encoding">The encoding to check against the current instance. </param>
      <param name="session">The session to check against the current instance.</param>
    </member>
    <member name="T:Microsoft.ServiceBus.NetOnewayRelayBinding">
      <summary>Represents a binding for a secure, one-way connection through the cloud. </summary>
    </member>
    <member name="M:Microsoft.ServiceBus.NetOnewayRelayBinding.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.NetOnewayRelayBinding" /> class.</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.NetOnewayRelayBinding.#ctor(Microsoft.ServiceBus.EndToEndSecurityMode,Microsoft.ServiceBus.RelayClientAuthenticationType)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.NetOnewayRelayBinding" /> class, using the specified security mode and authentication type.</summary>
      <param name="securityMode">The security mode. </param>
      <param name="relayClientAuthenticationType">The authentication type. </param>
    </member>
    <member name="M:Microsoft.ServiceBus.NetOnewayRelayBinding.#ctor(Microsoft.ServiceBus.NetOnewayRelaySecurity)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.NetOnewayRelayBinding" /> class, using the specified security settings.</summary>
      <param name="security">The security settings.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NetOnewayRelayBinding.#ctor(Microsoft.ServiceBus.RelayedOnewayConnectionMode,Microsoft.ServiceBus.EndToEndSecurityMode,Microsoft.ServiceBus.RelayClientAuthenticationType)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.NetOnewayRelayBinding" /> class, using the specified connection and security modes, as well as the authentication type.</summary>
      <param name="connectionMode">The connection mode. </param>
      <param name="securityMode">The type of security used with the SOAP message and for the client. </param>
      <param name="relayClientAuthenticationType">The type of authentication used by the client. </param>
    </member>
    <member name="M:Microsoft.ServiceBus.NetOnewayRelayBinding.#ctor(Microsoft.ServiceBus.RelayedOnewayTransportBindingElement,System.ServiceModel.Channels.BinaryMessageEncodingBindingElement,Microsoft.ServiceBus.NetOnewayRelaySecurity)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.NetOnewayRelayBinding" /> class, using the specified transport, encoding, and security.</summary>
      <param name="transport">The transport element containing the core transport settings .</param>
      <param name="encoding">The encoding element.</param>
      <param name="security">The security settings.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NetOnewayRelayBinding.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.NetOnewayRelayBinding" /> class using the specified configuration.</summary>
      <param name="configurationName">The name of the configuration to use.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NetOnewayRelayBinding.ApplyConfiguration(System.String)">
      <summary>Applies the settings from the configuration element that corresponds to the specified name to the current instance of this binding element.</summary>
      <param name="configurationName">The name of the configuration element to take the settings from.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NetOnewayRelayBinding.CreateBindingElements">
      <summary>Creates a set of binding elements.</summary>
      <returns>Returns a <see cref="T:System.ServiceModel.Channels.BindingElementCollection" /> that contains the binding elements.</returns>
    </member>
    <member name="F:Microsoft.ServiceBus.NetOnewayRelayBinding.encoding">
      <summary>Represents the encoding for the binding. Along with the security settings and transport type, the encoding represents the three core properties of a binding.</summary>
    </member>
    <member name="P:Microsoft.ServiceBus.NetOnewayRelayBinding.EnvelopeVersion">
      <summary>Gets the version of SOAP that is used for messages processed by this binding.</summary>
      <returns>Returns a <see cref="T:System.ServiceModel.EnvelopeVersion" /> that contains the envelope version.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.NetOnewayRelayBinding.ListenBacklog">
      <summary>Gets or sets the maximum number of queued connection requests that can be pending.</summary>
      <returns>Returns the maximum number of queued connection requests that can be pending. The default is 10.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.NetOnewayRelayBinding.MaxBufferPoolSize">
      <summary>Gets or sets the maximum size allowed for a buffer pool that stores messages processed by the binding.</summary>
      <returns>Returns the maximum size allowed for a buffer pool that stores messages processed by the binding. The default value is 65,536 bytes.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.NetOnewayRelayBinding.MaxBufferSize">
      <summary>Gets or sets a value that specifies the maximum size, in bytes, of the buffer used to store messages in memory.</summary>
      <returns>Returns the maximum size, in bytes, of the buffer used to store messages in memory. The default value is 65,536 bytes.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.NetOnewayRelayBinding.MaxConnections">
      <summary>Gets or sets a value that controls the maximum number of connections to be pooled for subsequent reuse on the client and the maximum number of connections allowed to be pending dispatch on the server.</summary>
      <returns>On the client, returns the maximum number of connections to be pooled for subsequent reuse; on the server, returns the maximum number of connections allowed to be pending dispatch.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.NetOnewayRelayBinding.MaxReceivedMessageSize">
      <summary>Gets or sets the maximum size for a received message that is processed by the binding.</summary>
      <returns>Returns the maximum size, in bytes, for a received message that is processed by the binding. The default value is 65,536 bytes.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.NetOnewayRelayBinding.MessageSecurityVersion">
      <summary>Gets the message security version.</summary>
      <returns>Returns a <see cref="T:System.ServiceModel.MessageSecurityVersion" /> that contains the message security version. This currently returns MessageSecurityVersion..::.WSSecurity11WSTrustFebruary2005WSSecureConversationFebruary2005WSSecurityPolicy11.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.NetOnewayRelayBinding.ReaderQuotas">
      <summary>Gets or sets constraints on the complexity of SOAP messages that can be processed by endpoints configured with this binding.</summary>
      <returns>Returns a <see cref="T:System.Xml.XmlDictionaryReaderQuotas" /> instance that specifies the complexity constraints on SOAP messages exchanged. The default values for these constraints are provided in the following Remarks section.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.NetOnewayRelayBinding.Scheme">
      <summary>Gets the URI scheme for the transport.</summary>
      <returns>Returns the URI scheme for the transport. The default value is “sb”, indicating the Windows Azure Service Bus.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.NetOnewayRelayBinding.Security">
      <summary>Gets an object that specifies the type of security used with services configured with this binding.</summary>
      <returns>Returns a <see cref="T:Microsoft.ServiceBus.NetOnewayRelaySecurity" /> instance that contains the types of security used with this binding. This type contains the message security, the end-to-end security mode, relay client authentication type, and transport security settings.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.NetOnewayRelayBinding.System#ServiceModel#Channels#IBindingRuntimePreferences#ReceiveSynchronously">
      <summary>Gets a value that indicates whether incoming requests can be handled more efficiently synchronously or asynchronously.</summary>
      <returns>Returns true if requests can be handled more efficiently synchronously; otherwise, false. The default is false, to handle requests asynchronously.</returns>
    </member>
    <member name="F:Microsoft.ServiceBus.NetOnewayRelayBinding.transport">
      <summary>Specifies the transport type for the binding. Along with the encoding and security settings, the transport type represents the three core properties of a binding.</summary>
    </member>
    <member name="T:Microsoft.ServiceBus.NetOnewayRelaySecurity">
      <summary>The collection of security settings for a <see cref="T:Microsoft.ServiceBus.NetOnewayRelayBinding" /> binding.</summary>
    </member>
    <member name="P:Microsoft.ServiceBus.NetOnewayRelaySecurity.Message">
      <summary>Gets the type of message-level security requirements for a service configured with a <see cref="T:Microsoft.ServiceBus.NetOnewayRelayBinding" />.</summary>
      <returns>Returns a <see cref="T:Microsoft.ServiceBus.MessageSecurityOverRelayOneway" /> that indicates the type of message-level security requirements for an endpoint. The default AlgorithmSuite is Basic256, and the default ClientCredentialType is Windows.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.NetOnewayRelaySecurity.Mode">
      <summary>Gets or sets whether message-level and transport-level security are used by an endpoint configured with a <see cref="T:Microsoft.ServiceBus.NetOnewayRelayBinding" />.</summary>
      <returns>Returns a <see cref="T:Microsoft.ServiceBus.EndToEndSecurityMode" /> that indicates whether message-level or transport-level security are used by an endpoint. The default value is Transport.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The security mode value is not valid.</exception>
    </member>
    <member name="P:Microsoft.ServiceBus.NetOnewayRelaySecurity.RelayClientAuthenticationType">
      <summary>Gets or sets the authentication type for the relay client.</summary>
      <returns>Returns a <see cref="T:Microsoft.ServiceBus.RelayClientAuthenticationType" /> that contains the authentication type. The default value is <see cref="F:Microsoft.ServiceBus.RelayClientAuthenticationType.RelayAccessToken" />.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The value is not a valid <see cref="T:Microsoft.ServiceBus.RelayClientAuthenticationType" /> field.</exception>
    </member>
    <member name="P:Microsoft.ServiceBus.NetOnewayRelaySecurity.Transport">
      <summary>Gets the type of transport-level security requirements for an endpoint configured with a <see cref="T:Microsoft.ServiceBus.NetOnewayRelayBinding" />. The default value is EncryptAndSign.</summary>
      <returns>Returns a <see cref="T:Microsoft.ServiceBus.OnewayRelayTransportSecurity" /> that indicates the type of transport-level security requirements for an endpoint.</returns>
    </member>
    <member name="T:Microsoft.ServiceBus.NetTcpRelayBinding">
      <summary>Provides a secure, reliable binding suitable for cross-computer communication.</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.NetTcpRelayBinding.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.NetTcpRelayBinding" /> class.</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.NetTcpRelayBinding.#ctor(Microsoft.ServiceBus.EndToEndSecurityMode,Microsoft.ServiceBus.RelayClientAuthenticationType)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.NetTcpRelayBinding" /> class with the type of security used and relay client authentication specified.
</summary>
      <param name="securityMode">The type of security used with the binding. </param>
      <param name="relayClientAuthenticationType">The type of client authentication used on the relay. </param>
    </member>
    <member name="M:Microsoft.ServiceBus.NetTcpRelayBinding.#ctor(Microsoft.ServiceBus.EndToEndSecurityMode,Microsoft.ServiceBus.RelayClientAuthenticationType,System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.NetTcpRelayBinding" /> class with the type of security used, the type of client authentication, and a value that indicates whether reliable sessions are explicitly enabled. </summary>
      <param name="securityMode">The type of security used with the Windows Azure Service Bus binding.</param>
      <param name="relayClientAuthenticationType">The type of client authentication used on the relay. </param>
      <param name="reliableSessionEnabled">true if reliable sessions are enabled; otherwise, false.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NetTcpRelayBinding.#ctor(Microsoft.ServiceBus.TcpRelayTransportBindingElement,System.ServiceModel.Channels.BinaryMessageEncodingBindingElement,System.ServiceModel.Channels.ReliableSessionBindingElement,Microsoft.ServiceBus.NetTcpRelaySecurity)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.NetTcpRelayBinding" /> class using the specified transport, encoding, session information, and security settings. </summary>
      <param name="transport">The transport. </param>
      <param name="encoding">The encoding to use. </param>
      <param name="session">The session. </param>
      <param name="security">Security settings. </param>
    </member>
    <member name="M:Microsoft.ServiceBus.NetTcpRelayBinding.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.NetTcpRelayBinding" /> class with a specified XML configuration. </summary>
      <param name="configurationName">The configuration to use.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NetTcpRelayBinding.ApplyConfiguration(System.String)">
      <summary>Applies the settings from the configuration element that corresponds to the specified name to the current instance of this binding element.</summary>
      <param name="configurationName">The name of the configuration element to take the settings from.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NetTcpRelayBinding.CreateBindingElements">
      <summary>Creates a collection with the binding elements for the binding. </summary>
      <returns>Returns a <see cref="T:System.ServiceModel.Channels.BindingElementCollection" /> that contains the ordered stack of binding elements.</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.NetTcpRelayBinding.CreateMessageSecurity">
      <summary>Creates the message security token for the current instance. </summary>
      <returns>Returns <see cref="T:System.ServiceModel.Channels.SecurityBindingElement" />.Contains the message security token. </returns>
    </member>
    <member name="M:Microsoft.ServiceBus.NetTcpRelayBinding.IsBindingElementsMatch(Microsoft.ServiceBus.TcpRelayTransportBindingElement,System.ServiceModel.Channels.BinaryMessageEncodingBindingElement,System.ServiceModel.Channels.ReliableSessionBindingElement)">
      <summary>Returns a value that determines whether the specified objects have matching binding elements. </summary>
      <returns>Returns <see cref="T:System.Boolean" />.true if the objects match; otherwise, false. </returns>
      <param name="transport">The transport to match. </param>
      <param name="encoding">The encoding to match. </param>
      <param name="session">The session to match. </param>
    </member>
    <member name="P:Microsoft.ServiceBus.NetTcpRelayBinding.ReliableSession">
      <summary>Gets an object that indicates whether a reliable session is established between Windows Azure Service Bus channel endpoints. </summary>
      <returns>Returns <see cref="T:System.ServiceModel.OptionalReliableSession" />.Indicates whether a WS-RM reliable session is established between channel endpoints. The default is false.</returns>
    </member>
    <member name="T:Microsoft.ServiceBus.NetTcpRelayBindingBase">
      <summary>The base class for common methods for the <see cref="T:Microsoft.ServiceBus.NetTcpRelayBinding" /> binding.</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.NetTcpRelayBindingBase.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.NetTcpRelayBindingBase" /> class.</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.NetTcpRelayBindingBase.#ctor(Microsoft.ServiceBus.EndToEndSecurityMode,Microsoft.ServiceBus.RelayClientAuthenticationType)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.NetTcpRelayBindingBase" /> class, using the specified security mode and relay authentication type.</summary>
      <param name="securityMode">The type of security used with the binding.</param>
      <param name="relayClientAuthenticationType">The type of relay authentication used.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NetTcpRelayBindingBase.#ctor(Microsoft.ServiceBus.TcpRelayTransportBindingElement,System.ServiceModel.Channels.BinaryMessageEncodingBindingElement,Microsoft.ServiceBus.NetTcpRelaySecurity)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.NetTcpRelayBindingBase" /> class, using the specified transport, encoding, and security.</summary>
      <param name="transport">The transport.</param>
      <param name="encoding">The encoding.</param>
      <param name="security">The security.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NetTcpRelayBindingBase.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.NetTcpRelayBindingBase" /> class, using the specified configuration name.</summary>
      <param name="configurationName">The binding configuration name.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NetTcpRelayBindingBase.ApplyConfiguration(System.String)">
      <summary>Applies the settings from the configuration element that corresponds to the specified name to the current instance of this binding element.</summary>
      <param name="configurationName">The name of the configuration element to take the settings from.</param>
      <exception cref="ConfigurationErrorsException">Did not find the binding element specified by the input configuration name in the configuration.</exception>
    </member>
    <member name="P:Microsoft.ServiceBus.NetTcpRelayBindingBase.ConnectionMode">
      <summary>Gets or sets the connection mode: <see cref="F:Microsoft.ServiceBus.TcpRelayConnectionMode.Hybrid" /> or <see cref="F:Microsoft.ServiceBus.TcpRelayConnectionMode.Relayed" />.</summary>
      <returns>Returns a <see cref="T:Microsoft.ServiceBus.TcpRelayConnectionMode" /> that contains the connection mode; either <see cref="F:Microsoft.ServiceBus.TcpRelayConnectionMode.Hybrid" /> or <see cref="F:Microsoft.ServiceBus.TcpRelayConnectionMode.Relayed" />. The default is Relayed.</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.NetTcpRelayBindingBase.CreateBindingElements">
      <summary>Retrieves an ordered collection of binding elements contained in the current binding.</summary>
      <returns>Returns a <see cref="T:System.ServiceModel.Channels.BindingElementCollection" /> that makes up the binding.</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.NetTcpRelayBindingBase.CreateMessageSecurity">
      <summary>Creates the security binding element for the current instance.</summary>
      <returns>Returns a <see cref="T:System.ServiceModel.Channels.SecurityBindingElement" /> that contains the security binding element.</returns>
    </member>
    <member name="F:Microsoft.ServiceBus.NetTcpRelayBindingBase.encoding">
      <summary>The encoding element for the current instance. Along with the security and transport settings, the encoding forms the three core properties of a binding.</summary>
    </member>
    <member name="P:Microsoft.ServiceBus.NetTcpRelayBindingBase.EnvelopeVersion">
      <summary>Gets the version of SOAP that is used for messages processed by this binding.</summary>
      <returns>Returns a <see cref="T:System.ServiceModel.EnvelopeVersion" /> that contains the envelope version used for this binding.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.NetTcpRelayBindingBase.HostNameComparisonMode">
      <summary>Gets or sets the comparison mode used on the hostname.</summary>
      <returns>The comparison mode used on the hostname.</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.NetTcpRelayBindingBase.IsBindingElementsMatch(Microsoft.ServiceBus.TcpRelayTransportBindingElement,System.ServiceModel.Channels.BinaryMessageEncodingBindingElement)">
      <summary>Determines whether the specified binding elements match the default values of the binding elements in the current instance.</summary>
      <returns>true if the elements match; otherwise, false.</returns>
      <param name="transport">The transport binding element.</param>
      <param name="encoding">The encoding binding element.</param>
    </member>
    <member name="P:Microsoft.ServiceBus.NetTcpRelayBindingBase.IsDynamic">
      <summary>Gets or sets whether the relay binding is dynamic.</summary>
      <returns>true if the relay binding is dynamic; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.NetTcpRelayBindingBase.ListenBacklog">
      <summary>Gets or sets the maximum number of queued connection requests that can be pending.</summary>
      <returns>Returns the maximum number of queued connection requests that can be pending. The default is 10.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.NetTcpRelayBindingBase.MaxBufferPoolSize">
      <summary>Gets or sets the maximum size allowed for a buffer pool that stores messages processed by the binding.</summary>
      <returns>Returns the maximum size, in bytes, allowed for a buffer pool that stores messages processed by the binding. The default value is 65,536.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.NetTcpRelayBindingBase.MaxBufferSize">
      <summary>Gets or sets a value that specifies the maximum size of the buffer used to store messages in memory.</summary>
      <returns>Returns the maximum size, in bytes, of the buffer used to store messages in memory. The default value is 65,536.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.NetTcpRelayBindingBase.MaxConnections">
      <summary>Gets or sets a value that controls the maximum number of connections to be pooled for subsequent reuse on the client and the maximum number of connections allowed to be pending dispatch on the server.</summary>
      <returns>On the client, returns the maximum number of connections to be pooled for subsequent reuse; on the server, returns the maximum number of connections allowed to be pending dispatch.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.NetTcpRelayBindingBase.MaxReceivedMessageSize">
      <summary>Gets or sets the maximum size for a received message that is processed by the binding.</summary>
      <returns>Returns the maximum size, in bytes, for a received message that is processed by the binding. The default value is 65,536.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.NetTcpRelayBindingBase.MessageSecurityVersion">
      <summary>Gets the message security version.</summary>
      <returns>Returns a <see cref="T:System.ServiceModel.MessageSecurityVersion" /> that contains the message security version. This currently always returns MessageSecurityVersion..::.WSSecurity11WSTrustFebruary2005WSSecureConversationFebruary2005WSSecurityPolicy11. </returns>
    </member>
    <member name="P:Microsoft.ServiceBus.NetTcpRelayBindingBase.ReaderQuotas">
      <summary>Gets or sets constraints on the complexity of SOAP messages that can be processed by endpoints configured with this binding. This property cannot be null.</summary>
      <returns>Returns a <see cref="T:System.Xml.XmlDictionaryReaderQuotas" /> that specifies the complexity constraints on soap messages exchanged. The default values for these constraints are provided in the following Remarks section.</returns>
      <exception cref="ArgumentNullException">
        <paramref name="ReaderQuotas" /> is null.</exception>
    </member>
    <member name="P:Microsoft.ServiceBus.NetTcpRelayBindingBase.Scheme">
      <summary>Gets the URI scheme for the transport.</summary>
      <returns>Returns the URI scheme for the transport. The default is “sb”.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.NetTcpRelayBindingBase.Security">
      <summary>Gets an object that specifies the type of security used with services configured with this binding.</summary>
      <returns>Returns <see cref="T:Microsoft.ServiceBus.NetTcpRelaySecurity" />, which contains the types of security used with this binding. The default mode of security is Transport.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.NetTcpRelayBindingBase.System#ServiceModel#Channels#IBindingRuntimePreferences#ReceiveSynchronously">
      <summary>Gets a value that indicates whether incoming requests are handled synchronously or asynchronously.</summary>
      <returns>true if requests are handled synchronously; false if handled asynchronously. The default is false, to handle requests asynchronously.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.NetTcpRelayBindingBase.TransferMode">
      <summary>Gets or sets a value that indicates whether the service configured with the binding uses streamed or buffered (or both) modes of message transfer.</summary>
      <returns>Returns a <see cref="T:System.ServiceModel.TransferMode" />  that indicates whether the service configured with the binding uses streamed or buffered (or both) modes of message transfer. By default, the HTTP, TCP/IP, and named pipe transports use buffered message transfers.</returns>
    </member>
    <member name="F:Microsoft.ServiceBus.NetTcpRelayBindingBase.transport">
      <summary>The transport element for the current instance. Along with the encoding and security, the transport setting forms the core properties of a binding.</summary>
    </member>
    <member name="T:Microsoft.ServiceBus.NetTcpRelaySecurity">
      <summary>Specifies the types of transport-level and message-level security used by an endpoint configured with a <see cref="T:Microsoft.ServiceBus.NetTcpRelayBinding" />.</summary>
    </member>
    <member name="P:Microsoft.ServiceBus.NetTcpRelaySecurity.Message">
      <summary>Gets the type of message-level security requirements for a service configured with a <see cref="T:Microsoft.ServiceBus.NetTcpRelayBinding" />. </summary>
      <returns>Returns a <see cref="T:Microsoft.ServiceBus.MessageSecurityOverRelayConnection" /> that indicates the type of message-level security requirements for an endpoint. The default security settings are: a ClientCredentialType of UserName; and an AlgorithmSuite of Basic256.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.NetTcpRelaySecurity.Mode">
      <summary>Gets or sets whether message-level and transport-level security are used by an endpoint configured with a <see cref="T:Microsoft.ServiceBus.NetTcpRelayBinding" />.</summary>
      <returns>Returns an <see cref="T:Microsoft.ServiceBus.EndToEndSecurityMode" /> that indicates whether message-level or transport-level security is used by an endpoint. The default value is Transport.</returns>
      <exception cref="ArgumentOutOfRangeException">The value is not a valid <see cref="T:Microsoft.ServiceBus.EndToEndSecurityMode" /> field.</exception>
    </member>
    <member name="P:Microsoft.ServiceBus.NetTcpRelaySecurity.RelayClientAuthenticationType">
      <summary>Gets or sets the relay client authentication type.</summary>
      <returns>Returns a <see cref="T:Microsoft.ServiceBus.RelayClientAuthenticationType" /> that contains the relay client authentication type.</returns>
      <exception cref="ArgumentOutOfRangeException">The value is not a valid <see cref="T:Microsoft.ServiceBus.RelayClientAuthenticationType" /> field.</exception>
    </member>
    <member name="P:Microsoft.ServiceBus.NetTcpRelaySecurity.Transport">
      <summary>Gets the type of message-level security requirements for an endpoint configured with a <see cref="T:Microsoft.ServiceBus.NetTcpRelayBinding" />.</summary>
      <returns>Returns a <see cref="T:Microsoft.ServiceBus.TcpRelayTransportSecurity" /> that indicates the type of transport-level security requirements for an endpoint.</returns>
    </member>
    <member name="T:Microsoft.ServiceBus.NonDualMessageSecurityOverRelayHttp">
      <summary>Enables setting message-level security properties for a WS-Http relay binding.</summary>
    </member>
    <member name="P:Microsoft.ServiceBus.NonDualMessageSecurityOverRelayHttp.EstablishSecurityContext">
      <summary>Gets or sets a value that specifies whether a security context token is established.</summary>
      <returns>true if the security context token is established; otherwise, false.</returns>
    </member>
    <member name="T:Microsoft.ServiceBus.NoRetry">
      <summary>Represents a retry policy that performs no retries.</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.NoRetry.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.NoRetry" /> class.</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.NoRetry.Clone">
      <summary>Creates a copy of this instance.</summary>
      <returns>The created copy of this instance.</returns>
    </member>
    <member name="T:Microsoft.ServiceBus.OAuthTokenProvider">
      <summary>Provides authentication token for the service bus.</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.OAuthTokenProvider.BuildKey(System.String,System.String)">
      <summary>Builds a key for the provider.</summary>
      <returns>A Key.</returns>
      <param name="appliesTo">The provider in which the key will be applied.</param>
      <param name="action">The action.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.OAuthTokenProvider.NormalizeAppliesTo(System.String)">
      <summary>Applies normalization into the token provider.</summary>
      <returns>The normalized token provider.</returns>
      <param name="appliesTo">The token provider where the normalization will be applied.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.OAuthTokenProvider.OnBeginGetToken(System.String,System.String,System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Retrieves a token when the provider begins.</summary>
      <returns>The asynchronous result of the operation.</returns>
      <param name="appliesTo">The provider in which the token will be applied.</param>
      <param name="action">The action.</param>
      <param name="timeout">The duration.</param>
      <param name="callback">The callback.</param>
      <param name="state">The state of the operation.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.OAuthTokenProvider.OnBeginGetWebToken(System.String,System.String,System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Retrieves a web token when the provider begins.</summary>
      <returns>The asynchronous result of the operation.</returns>
      <param name="appliesTo">The provider in which the web token will be applied.</param>
      <param name="action">The action.</param>
      <param name="timeout">The duration.</param>
      <param name="callback">The callback.</param>
      <param name="state">The state of the operation.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.OAuthTokenProvider.OnEndGetToken(System.IAsyncResult,System.DateTime@)">
      <summary>Retrieves a token when the provider ends.</summary>
      <returns>The retrieved token.</returns>
      <param name="result">The result of the operation.</param>
      <param name="cacheUntil">The duration for the provider to store data.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.OAuthTokenProvider.OnEndGetWebToken(System.IAsyncResult,System.DateTime@)">
      <summary>Retrieves a web token when the provider ends.</summary>
      <returns>The retrieved token.</returns>
      <param name="result">The result of the operation.</param>
      <param name="cacheUntil">The duration for the provider to store data.</param>
    </member>
    <member name="T:Microsoft.ServiceBus.RelayClientAuthenticationType">
      <summary>Describes whether clients of a service are required to present a security token issued by Windows Azure Access Control to the Windows Azure Service Bus when sending messages.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.RelayClientAuthenticationType.None">
      <summary>If specified by a listener, the client will not be required to provide a security token. This represents an opt-out mechanism with which listeners can waive the Windows Azure Access Control protection on the endpoint.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.RelayClientAuthenticationType.RelayAccessToken">
      <summary>If specified by a listener, the client is required to provide a security token. </summary>
    </member>
    <member name="T:Microsoft.ServiceBus.RelayedOnewayConnectionMode">
      <summary>Represents the different types of one-way connections available through the Windows Azure Access Control.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.RelayedOnewayConnectionMode.Multicast">
      <summary>Specifies that multiple service applications may listen on a given endpoint. Used by <see cref="T:Microsoft.ServiceBus.NetEventRelayBinding" />. </summary>
    </member>
    <member name="F:Microsoft.ServiceBus.RelayedOnewayConnectionMode.Unicast">
      <summary>Specifies that only one service application can listen on a given endpoint. Used by <see cref="T:Microsoft.ServiceBus.NetOnewayRelayBinding" />.</summary>
    </member>
    <member name="T:Microsoft.ServiceBus.RelayedOnewayTransportBindingElement">
      <summary>Represents the transport binding element used for one-way communication.</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.RelayedOnewayTransportBindingElement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.RelayedOnewayTransportBindingElement" /> class.</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.RelayedOnewayTransportBindingElement.#ctor(Microsoft.ServiceBus.RelayClientAuthenticationType)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.RelayedOnewayTransportBindingElement" /> class, using the specified authentication type.</summary>
      <param name="relayClientAuthenticationType">The relay client authentication type. This can be either <see cref="F:Microsoft.ServiceBus.RelayClientAuthenticationType.RelayAccessToken" /> or <see cref="F:Microsoft.ServiceBus.RelayClientAuthenticationType.None" />.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.RelayedOnewayTransportBindingElement.#ctor(Microsoft.ServiceBus.RelayClientAuthenticationType,Microsoft.ServiceBus.RelayedOnewayConnectionMode)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.RelayedOnewayTransportBindingElement" /> class, using the specified authentication type and connection mode.</summary>
      <param name="relayClientAuthenticationType">The relay client authentication type. This can be either <see cref="F:Microsoft.ServiceBus.RelayClientAuthenticationType.RelayAccessToken" /> or <see cref="F:Microsoft.ServiceBus.RelayClientAuthenticationType.None" />.</param>
      <param name="connectionMode">The connection mode. This can be either <see cref="F:Microsoft.ServiceBus.RelayedOnewayConnectionMode.Unicast" /> or <see cref="F:Microsoft.ServiceBus.RelayedOnewayConnectionMode.Multicast" />.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.RelayedOnewayTransportBindingElement.#ctor(Microsoft.ServiceBus.RelayedOnewayTransportBindingElement)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.RelayedOnewayTransportBindingElement" /> class, using the specified element.</summary>
      <param name="elementToClone">The element to clone.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.RelayedOnewayTransportBindingElement.BuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Creates a channel factory for creating channels of the specified type and that is initialized from the specified binding context.</summary>
      <returns>A channel factory for creating channels of the specified type and that is initialized from the specified binding context.</returns>
      <param name="context">The binding context that provides context for the binding element.</param>
      <typeparam name="TChannel">The type of channel that the factory builds.</typeparam>
    </member>
    <member name="M:Microsoft.ServiceBus.RelayedOnewayTransportBindingElement.BuildChannelListener``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Creates a channel listener that accepts channels of the specified type and that is initialized from the specified binding context.</summary>
      <returns>A channel listener that accepts channels of the specified type and that is initialized from the specified binding context.</returns>
      <param name="context">The binding context that provides context for the binding element.</param>
      <typeparam name="TChannel">The type of channel the listener is built to accept.</typeparam>
    </member>
    <member name="M:Microsoft.ServiceBus.RelayedOnewayTransportBindingElement.CanBuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Returns a value that indicates whether this binding element can build a channel factory of the specified type.</summary>
      <returns>true if a channel factory can be built; otherwise false.</returns>
      <param name="context">The binding context that provides context for this binding element.</param>
      <typeparam name="TChannel">The type of channel the channel factory is built.</typeparam>
    </member>
    <member name="M:Microsoft.ServiceBus.RelayedOnewayTransportBindingElement.CanBuildChannelListener``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Returns a value that indicates whether the binding element can build a channel listener for the specified type of channel.</summary>
      <returns>true if a channel listener can be built for the specified type of channel; otherwise, false.</returns>
      <param name="context">The binding context that provides context for this binding element.</param>
      <typeparam name="TChannel">The type of channel the listener accepts.</typeparam>
    </member>
    <member name="P:Microsoft.ServiceBus.RelayedOnewayTransportBindingElement.ChannelInitializationTimeout">
      <summary>Gets or sets the maximum time a channel can be in the initialization status before being disconnected.</summary>
      <returns>The maximum time a channel can be in the initialization status before being disconnected.</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.RelayedOnewayTransportBindingElement.Clone">
      <summary>Returns a copy of this instance of the <see cref="T:Microsoft.ServiceBus.RelayedOnewayTransportBindingElement" /> binding element.</summary>
      <returns>A binding element that contains a deep clone of this binding element.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.RelayedOnewayTransportBindingElement.ConnectionBufferSize">
      <summary>Gets or sets the size of the buffer used to transmit a part of the serialized message on the wire from the client or service.</summary>
      <returns>The size of the buffer used to transmit a part of the serialized message on the wire from the client or service.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.RelayedOnewayTransportBindingElement.ConnectionMode">
      <summary>Gets the connection mode used in this binding element. The connection mode can be one of the <see cref="T:Microsoft.ServiceBus.RelayedOnewayConnectionMode" /> enumeration values.</summary>
      <returns>The connection mode used in this binding element.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.RelayedOnewayTransportBindingElement.ConnectionPoolSettings">
      <summary>Gets the connection pool settings for the current instance.</summary>
      <returns>The connection pool settings for the current instance.</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.RelayedOnewayTransportBindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Returns an object of the requested type, if present, from the appropriate layer in the binding stack.</summary>
      <returns>The object of the requested type if found; otherwise, returns null.</returns>
      <param name="context">The binding context that provides context for this binding element.</param>
      <typeparam name="T">The type of the property to get.</typeparam>
    </member>
    <member name="P:Microsoft.ServiceBus.RelayedOnewayTransportBindingElement.ListenBacklog">
      <summary>Gets or sets the maximum number of queued connection requests that can be pending.</summary>
      <returns>The maximum number of queued connection.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.RelayedOnewayTransportBindingElement.MaxBufferSize">
      <summary>Gets or sets the maximum size in bytes of the buffer that holds incoming messages that are processed by this binding.</summary>
      <returns>The maximum size in bytes of the buffer that holds incoming messages that are processed by this binding.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.RelayedOnewayTransportBindingElement.MaxOutputDelay">
      <summary>Gets or sets the maximum interval of time that a message or a portion of a message can remain buffered in memory before being sent out.</summary>
      <returns>The maximum interval of time that a message or a portion of a message can remain buffered in memory before being sent out.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.RelayedOnewayTransportBindingElement.MaxPendingAccepts">
      <summary>Gets or sets the maximum number of pending asynchronous accept threads that are available for processing incoming connections on the service.</summary>
      <returns>The maximum number of pending asynchronous accept threads that are available for processing incoming connections on the service.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.RelayedOnewayTransportBindingElement.MaxPendingConnections">
      <summary>Gets or sets the maximum number of pending connections.</summary>
      <returns>The maximum number of pending connections.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.RelayedOnewayTransportBindingElement.RelayClientAuthenticationType">
      <summary>Gets or sets the type of Windows Azure Access Control authentication used by this binding element.</summary>
      <returns>Returns a <see cref="T:Microsoft.ServiceBus.RelayClientAuthenticationType" /> that represents the type of authentication used by this binding element.The default value is <see cref="F:Microsoft.ServiceBus.RelayClientAuthenticationType.RelayAccessToken" />.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.RelayedOnewayTransportBindingElement.Scheme">
      <summary>Gets the URI scheme used by this binding element.</summary>
      <returns>The URI scheme used by this binding element. The value returned is “sb”.</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.RelayedOnewayTransportBindingElement.System#ServiceModel#Description#IPolicyExportExtension#ExportPolicy(System.ServiceModel.Description.MetadataExporter,System.ServiceModel.Description.PolicyConversionContext)">
      <summary>Includes a custom policy assertion about bindings for exporting.</summary>
      <param name="exporter">A metadata exporter that can be used to modify the exporting process.</param>
      <param name="context">The policy conversion context to insert your custom policy assertion.</param>
    </member>
    <member name="T:Microsoft.ServiceBus.RelayedOnewayTransportSecurity">
      <summary>Represents the transport security settings of a one-way binding.</summary>
    </member>
    <member name="P:Microsoft.ServiceBus.RelayedOnewayTransportSecurity.ProtectionLevel">
      <summary>Gets or sets the transport security protection level.</summary>
      <returns>Returns a <see cref="T:System.Net.Security.ProtectionLevel" /> that contains the transport security protection level.</returns>
    </member>
    <member name="T:Microsoft.ServiceBus.RelayEventSubscriberAuthenticationType">
      <summary>Describes whether subscribers to a <see cref="T:Microsoft.ServiceBus.NetEventRelayBinding" /> are required to present a security token issued by the Windows Azure Access Control service to the Windows Azure Service Bus service when sending messages.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.RelayEventSubscriberAuthenticationType.None">
      <summary>If specified by a NetEventRelay subscriber, the client will not be required to provide a relay access token. This represents an opt-out mechanism with which listeners can waive the Windows Azure Access Control protection on the endpoint and perform their own access control.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.RelayEventSubscriberAuthenticationType.RelayAccessToken">
      <summary>If specified by a NetEventRelay listener, the client is required to provide a relay access token. </summary>
    </member>
    <member name="T:Microsoft.ServiceBus.RelayNotFoundException">
      <summary>The exception that is thrown when the ServiceBus relay is not found.</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.RelayNotFoundException.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.RelayNotFoundException" /> class.</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.RelayNotFoundException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.RelayNotFoundException" /> class.</summary>
      <param name="info">The serialization information.</param>
      <param name="context">The streaming context.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.RelayNotFoundException.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.RelayNotFoundException" /> class.</summary>
      <param name="message">The error message.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.RelayNotFoundException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.RelayNotFoundException" /> class.</summary>
      <param name="message">The error message.</param>
      <param name="innerException">The inner exception.</param>
    </member>
    <member name="T:Microsoft.ServiceBus.RelayTransportProtectionMode">
      <summary>Describes the types of protection on a transport relay. </summary>
    </member>
    <member name="F:Microsoft.ServiceBus.RelayTransportProtectionMode.EndToEnd">
      <summary>Both the service application and client application must have security. </summary>
    </member>
    <member name="F:Microsoft.ServiceBus.RelayTransportProtectionMode.ListenerOnly">
      <summary>The service application must have security; a client application is not required to have any. </summary>
    </member>
    <member name="F:Microsoft.ServiceBus.RelayTransportProtectionMode.None">
      <summary>Security is disabled.</summary>
    </member>
    <member name="T:Microsoft.ServiceBus.RelayType">
      <summary>Specifies an enumeration of relay type.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.RelayType.Http">
      <summary>The HTTP relay.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.RelayType.NetEvent">
      <summary>The NetEvent relay.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.RelayType.NetOneway">
      <summary>The NetOneway relay.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.RelayType.NetTcp">
      <summary>The NetTcp relay.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.RelayType.None">
      <summary>The relay is None.</summary>
    </member>
    <member name="T:Microsoft.ServiceBus.RetryExponential">
      <summary>Represents an implementation of a retry policy. For each time the messaging operation must be retried, the delay between retries grows in a staggered, exponential manner.</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.RetryExponential.#ctor(System.TimeSpan,System.TimeSpan,System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.RetryExponential" /> class.</summary>
      <param name="minBackoff">The minimum back off value to wait. This value must not be greater than or equal to <see cref="P:Microsoft.ServiceBus.RetryExponential.MaximumBackoff" />, otherwise operations might not be able to retry.</param>
      <param name="maxBackoff">The maximum back off value to wait. This value must not be greater than or equal to the <see cref="P:Microsoft.ServiceBus.Messaging.MessagingFactorySettings.OperationTimeout" /> value, otherwise operations might not be able to retry.</param>
      <param name="maxRetryCount">The maximum number of times the retry policy instance calculates the retry time interval. If the number of retries exceeds this value, the retry terminates, even if there is some remaining operation time.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.RetryExponential.#ctor(System.TimeSpan,System.TimeSpan,System.TimeSpan,System.TimeSpan,System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.RetryExponential" /> class.</summary>
      <param name="minBackoff">The minimum back off value to wait. This value must not be greater than or equal to <see cref="P:Microsoft.ServiceBus.RetryExponential.MaximumBackoff" />, otherwise operations might not be able to retry.</param>
      <param name="maxBackoff">The maximum back off value to wait. This value must not be greater than or equal to the <see cref="P:Microsoft.ServiceBus.Messaging.MessagingFactorySettings.OperationTimeout" /> value, otherwise operations might not be able to retry.</param>
      <param name="deltaBackoff">The backoff interval associated with the retry.</param>
      <param name="terminationTimeBuffer">The termination time buffer associated with the retry.</param>
      <param name="maxRetryCount">The maximum number of times the retry policy instance calculates the retry time interval. If the number of retries exceeds this value, the retry terminates, even if there is some remaining operation time.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.RetryExponential.Clone">
      <summary>Creates a new copy of this instance.</summary>
      <returns>The created new copy of this instance.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.RetryExponential.DeltaBackoff">
      <summary>Gets or sets the backoff interval associated with the retry.</summary>
      <returns>The backoff interval associated with the retry.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.RetryExponential.MaximumBackoff">
      <summary>Gets or sets the maximum backoff interval.</summary>
      <returns>The maximum backoff interval.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.RetryExponential.MaxRetryCount">
      <summary>Gets or sets the maximum number of allowed retries.</summary>
      <returns>The maximum number of allowed retries.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.RetryExponential.MinimalBackoff">
      <summary>Gets or sets the minimum backoff interval.</summary>
      <returns>The minimum backoff interval.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.RetryExponential.TerminationTimeBuffer">
      <summary>Gets or sets the termination time buffer associated with the retry.</summary>
      <returns>The termination time buffer associated with the retry.</returns>
    </member>
    <member name="T:Microsoft.ServiceBus.RetryPolicy">
      <summary>Represents an abstraction for retrying messaging operations. Users should not implement this class, and instead should use one of the provided implementations.</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.RetryPolicy.Clone">
      <summary>Creates a new copy of the current <see cref="T:Microsoft.ServiceBus.RetryPolicy" /> and clones it into a new instance.</summary>
      <returns>A new copy of <see cref="T:Microsoft.ServiceBus.RetryPolicy" />.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.RetryPolicy.Default">
      <summary>Gets an instance of the <see cref="T:Microsoft.ServiceBus.RetryExponential" /> retry policy, which provides a default setup of exponentially increasing retry intervals for messaging operations. Each time this property is accessed, a new instance is created.</summary>
      <returns>The default policy associated with the policy.</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.RetryPolicy.IsRetryableException(System.Exception)">
      <summary>Determines whether it is permissible to retry after the specified exception.</summary>
      <returns>If this method returns false, no retry occurs. Otherwise, the <see cref="M:Microsoft.ServiceBus.RetryPolicy.OnShouldRetry(System.TimeSpan,System.Int32,System.TimeSpan@)" /> method determines when to retry.</returns>
      <param name="lastException">The latest occurred exception.</param>
    </member>
    <member name="P:Microsoft.ServiceBus.RetryPolicy.NoRetry">
      <summary>Gets an instance of the <see cref="P:Microsoft.ServiceBus.RetryPolicy.NoRetry" /> retry policy, which effectively disables retries. Each time this property is accessed, a new instance is returned.</summary>
      <returns>A retry policy that performs no retries.</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.RetryPolicy.OnShouldRetry(System.TimeSpan,System.Int32,System.TimeSpan@)">
      <summary>Calculates the retry interval for the retry policy.</summary>
      <returns>If this method returns true, the retry operation occurs after the thread becomes idle for an amount of time equal to <paramref name="retryInterval" />.</returns>
      <param name="remainingTime">The remaining time.</param>
      <param name="currentRetryCount">The total number of retries.</param>
      <param name="retryInterval">The retry interval.</param>
    </member>
    <member name="T:Microsoft.ServiceBus.SamlTokenProvider">
      <summary>Provides a set of methods that execute asynchronous SAML token retrieval operations.</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.SamlTokenProvider.BuildKey(System.String,System.String)">
      <summary>Generates a key for the token provider.</summary>
      <returns>A generated key for the token provider.</returns>
      <param name="appliesTo">The URI which the access token applies to.</param>
      <param name="action">The request action.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.SamlTokenProvider.OnBeginGetToken(System.String,System.String,System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Executes the begin get token action.</summary>
      <returns>An <see cref="T:System.IAsyncResult" /> object that references the asynchronous operation to get a token.</returns>
      <param name="appliesTo">The URI which the access token applies to.</param>
      <param name="action">The request action.</param>
      <param name="timeout">The time span that specifies the timeout value for the message that gets the security token.</param>
      <param name="callback">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</param>
      <param name="state">A user-defined object that contains state information about the asynchronous operation.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.SamlTokenProvider.OnBeginGetWebToken(System.String,System.String,System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Executes the begin get web token action.</summary>
      <returns>An <see cref="T:System.IAsyncResult" /> object that references the asynchronous operation to get a web token.</returns>
      <param name="appliesTo">The URI which the access token applies to.</param>
      <param name="action">The request action.</param>
      <param name="timeout">The time span that specifies the timeout value for the message that gets the security token.</param>
      <param name="callback">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</param>
      <param name="state">A user-defined object that contains state information about the asynchronous operation.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.SamlTokenProvider.OnEndGetToken(System.IAsyncResult,System.DateTime@)">
      <summary>Executes the end get token action.</summary>
      <returns>The security token.</returns>
      <param name="result">An <see cref="T:System.IAsyncResult" /> object that references the asynchronous operation to get a token.</param>
      <param name="cacheUntil">When this method returns, contains the expiration date and time of the token information in the cache.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.SamlTokenProvider.OnEndGetWebToken(System.IAsyncResult,System.DateTime@)">
      <summary>Executes the end get web token action.</summary>
      <returns>The web token.</returns>
      <param name="result">An <see cref="T:System.IAsyncResult" /> object that references the asynchronous operation to get a web token.</param>
      <param name="cacheUntil">When this method returns, contains the expiration date and time of the token information in the cache.</param>
    </member>
    <member name="T:Microsoft.ServiceBus.ServerErrorException">
      <summary>An exception that is thrown by the Windows Azure Service Bus when an error occurs while processing a request.</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.ServerErrorException.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.ServerErrorException" /> class.</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.ServerErrorException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.ServerErrorException" /> class with the specified serialization information and streaming context.</summary>
      <param name="info">Holds the serialized object data about the exception being thrown.</param>
      <param name="context">The contextual information about the source or destination.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.ServerErrorException.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.ServerErrorException" /> class with the specified error message.</summary>
      <param name="message">The error message that describes this exception.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.ServerErrorException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.ServerErrorException" /> class with the specified error message and inner exception.</summary>
      <param name="message">The error message that describes this exception.</param>
      <param name="innerException">The exception that caused the current exception to be thrown.</param>
    </member>
    <member name="T:Microsoft.ServiceBus.ServiceBusConnectionStringBuilder">
      <summary>Creates and manages the contents of connection strings. You can use this class to construct a connection string for creating client messaging entities. It can also be used to perform basic validation on an existing connection string.</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.ServiceBusConnectionStringBuilder.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.ServiceBusConnectionStringBuilder" /> class.</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.ServiceBusConnectionStringBuilder.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.ServiceBusConnectionStringBuilder" /> class with a specified existing connection string.</summary>
      <param name="connectionString">The connection string, which you can obtain from the Azure Management Portal.</param>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">Throws if The connection string is missing endpoints.The connection string does not have enough information to form a token provider. For example, this can happen if you supplied a SasIssuer name but not a SasIssuer key.The <see cref="P:Microsoft.ServiceBus.ServiceBusConnectionStringBuilder.OperationTimeout" /> value is not in a valid <see cref="T:System.TimeSpan" /> format.The <see cref="P:Microsoft.ServiceBus.ServiceBusConnectionStringBuilder.RuntimePort" /> or <see cref="P:Microsoft.ServiceBus.ServiceBusConnectionStringBuilder.ManagementPort" /> values are not in an integer format.</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.ServiceBusConnectionStringBuilder.CreateUsingOAuthCredential(System.Collections.Generic.IEnumerable{System.Uri},System.Collections.Generic.IEnumerable{System.Uri},System.Int32,System.Int32,System.String,System.String,System.Security.SecureString)">
      <summary>Creates a connection string using authentication credentials.</summary>
      <returns>The created service bus connection string.</returns>
      <param name="endpoints">The set of endpoints.</param>
      <param name="stsEndpoints">The set of security token service endpoints.</param>
      <param name="runtimePort">The runtime port.</param>
      <param name="managementPort">The management port.</param>
      <param name="domain">The domain where the connection will be established.</param>
      <param name="user">The authentication user.</param>
      <param name="password">The authentication password.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.ServiceBusConnectionStringBuilder.CreateUsingSharedAccessKey(System.Collections.Generic.IEnumerable{System.Uri},System.Int32,System.Int32,System.String,System.String)">
      <summary>Create a connection string using the shared access key.</summary>
      <returns>The created connection using the shared access key.</returns>
      <param name="endpoints">The set of endpoints.</param>
      <param name="runtimePort">The runtime port.</param>
      <param name="managementPort">The management port.</param>
      <param name="keyName">The name of the shared access key.</param>
      <param name="key">The shared access key</param>
    </member>
    <member name="M:Microsoft.ServiceBus.ServiceBusConnectionStringBuilder.CreateUsingSharedAccessKey(System.Uri,System.String,System.String)">
      <summary>Create a connection string using the shared access key.</summary>
      <returns>The created connection using the shared access key.</returns>
      <param name="endpoint">The endpoint.</param>
      <param name="keyName">The name of the shared access key.</param>
      <param name="key">The shared access key.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.ServiceBusConnectionStringBuilder.CreateUsingSharedAccessSignature(System.Uri,System.String,System.String,System.String)"></member>
    <member name="M:Microsoft.ServiceBus.ServiceBusConnectionStringBuilder.CreateUsingSharedSecret(System.Collections.Generic.IEnumerable{System.Uri},System.Collections.Generic.IEnumerable{System.Uri},System.Int32,System.Int32,System.String,System.String)">
      <summary>Creates a connection string using the shared secret credentials.</summary>
      <returns>The created connection using the shared secret credentials.</returns>
      <param name="endpoints">The endpoints.</param>
      <param name="stsEndpoints">The set of security token service endpoints.</param>
      <param name="runtimePort">The runtime port.</param>
      <param name="managementPort">The management port.</param>
      <param name="issuer">The issuer.</param>
      <param name="issuerSecret">The issuer secret.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.ServiceBusConnectionStringBuilder.CreateUsingSharedSecret(System.Uri,System.String,System.String)">
      <summary>Creates a connection string using the shared secret credentials.</summary>
      <returns>The created connection using the shared secret credentials.</returns>
      <param name="endpoint">The endpoint.</param>
      <param name="issuer">The issuer</param>
      <param name="issuerSecret">The issuer secret.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.ServiceBusConnectionStringBuilder.CreateUsingWindowsCredential(System.Collections.Generic.IEnumerable{System.Uri},System.Collections.Generic.IEnumerable{System.Uri},System.Int32,System.Int32,System.String,System.String,System.Security.SecureString)">
      <summary>Creates a connection string using Windows credentials.</summary>
      <returns>The created connection string.</returns>
      <param name="endpoints">The set of endpoints</param>
      <param name="stsEndpoints">The set of security token service endpoints.</param>
      <param name="runtimePort">The runtime port.</param>
      <param name="managementPort">The management port.</param>
      <param name="domain">The domain where the connection will be established.</param>
      <param name="user">The user.</param>
      <param name="password">The windows password.</param>
    </member>
    <member name="P:Microsoft.ServiceBus.ServiceBusConnectionStringBuilder.Endpoints">
      <summary>Gets a collection of service endpoints. Each endpoint must reference the same Service Bus namespace.</summary>
      <returns>A set of endpoints.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.ServiceBusConnectionStringBuilder.EntityPath"></member>
    <member name="M:Microsoft.ServiceBus.ServiceBusConnectionStringBuilder.GetAbsoluteManagementEndpoints">
      <summary>Retrieves the absolute management endpoints.</summary>
      <returns>The absolute management endpoints</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.ServiceBusConnectionStringBuilder.GetAbsoluteRuntimeEndpoints">
      <summary>Retrieves the absolute runtime endpoints.</summary>
      <returns>The absolute runtime endpoints.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.ServiceBusConnectionStringBuilder.ManagementPort">
      <summary>Gets or sets the TCP port number for management operations.</summary>
      <returns>The management port.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.ServiceBusConnectionStringBuilder.OAuthDomain">
      <summary>Gets or sets the authentication domain for the connection.</summary>
      <returns>The authentication domain for the connection.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.ServiceBusConnectionStringBuilder.OAuthPassword">
      <summary>Gets or sets the authentication password for the connection.</summary>
      <returns>The authentication password for the connection.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.ServiceBusConnectionStringBuilder.OAuthUsername">
      <summary>Gets or sets the authentication user name for the connection.</summary>
      <returns>The authentication user name for the connection.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.ServiceBusConnectionStringBuilder.OperationTimeout">
      <summary>Gets or sets the <see cref="T:System.TimeSpan" /> that specifies how long the messaging operation has to complete before timing out.</summary>
      <returns>The <see cref="T:System.TimeSpan" /> that specifies how long the messaging operation has to complete before timing out. The default value is one minute.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.ServiceBusConnectionStringBuilder.Publisher"></member>
    <member name="P:Microsoft.ServiceBus.ServiceBusConnectionStringBuilder.RuntimePort">
      <summary>Gets or sets the TCP port number for runtime operation.</summary>
      <returns>The runtime port.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.ServiceBusConnectionStringBuilder.SharedAccessKey">
      <summary>Gets or sets the shared access key for the connection authentication.</summary>
      <returns>The shared access key for the connection authentication.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.ServiceBusConnectionStringBuilder.SharedAccessKeyName">
      <summary>Gets or sets the name of the shared access key.</summary>
      <returns>The name of the shared access key.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.ServiceBusConnectionStringBuilder.SharedAccessSignature"></member>
    <member name="P:Microsoft.ServiceBus.ServiceBusConnectionStringBuilder.SharedSecretIssuerName">
      <summary>Gets or sets the shared secret issuer name.</summary>
      <returns>The shared secret issuer name.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.ServiceBusConnectionStringBuilder.SharedSecretIssuerSecret">
      <summary>Gets or sets the shared secret issuer secret.</summary>
      <returns>The shared secret issuer secret.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.ServiceBusConnectionStringBuilder.StsEndpoints">
      <summary>Gets a set of STS endpoints.</summary>
      <returns>A set of STS endpoints.</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.ServiceBusConnectionStringBuilder.ToString">
      <summary>Returns a string that represents the current object.</summary>
      <returns>A string that represents the current object.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.ServiceBusConnectionStringBuilder.TransportType">
      <summary>Gets or sets the transport type to be used for client messaging entities.</summary>
      <returns>The transport type associated with the connection.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.ServiceBusConnectionStringBuilder.WindowsCredentialDomain">
      <summary>Gets or sets the Windows credential domain.</summary>
      <returns>The Windows credential domain.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.ServiceBusConnectionStringBuilder.WindowsCredentialPassword">
      <summary>Gets or sets the Windows credential password.</summary>
      <returns>The Windows credential password.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.ServiceBusConnectionStringBuilder.WindowsCredentialUsername">
      <summary>Gets or sets the Windows credential user name.</summary>
      <returns>The Windows credential user name.</returns>
    </member>
    <member name="T:Microsoft.ServiceBus.ServiceBusEnvironment">
      <summary>Describes the Windows Azure Service Bus environment. </summary>
    </member>
    <member name="M:Microsoft.ServiceBus.ServiceBusEnvironment.CreateAccessControlUri(System.String)">
      <summary>Creates a URI string to use with access control for the specified .</summary>
      <returns>Returns a <see cref="T:System.Uri" /> that contains the specified URI.</returns>
      <param name="serviceNamespace">The  to create the URI for.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.ServiceBusEnvironment.CreateServiceUri(System.String,System.String,System.String)">
      <summary>Constructs the Windows Azure Service Bus URI for an application, using the specified scheme,  name, and service path.</summary>
      <returns>Returns a <see cref="T:System.Uri" /> that contains the new URI.</returns>
      <param name="scheme">The scheme of the URI.</param>
      <param name="serviceNamespace">The  name used by the application.</param>
      <param name="servicePath">The service path that follows the host name section of the URI.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.ServiceBusEnvironment.CreateServiceUri(System.String,System.String,System.String,System.Boolean)">
      <summary>Constructs the Windows Azure Service Bus URI for an application, using the specified scheme,  name, service path, and relayed path prefix.</summary>
      <returns>Returns a <see cref="T:System.Uri" /> that contains the new URI.</returns>
      <param name="scheme">The scheme of the URI.</param>
      <param name="serviceNamespace">The  name used by the application.</param>
      <param name="servicePath">The service path that follows the host name section of the URI.</param>
      <param name="suppressRelayPathPrefix">True if the relay path prefix is suppressed; otherwise, false.</param>
    </member>
    <member name="P:Microsoft.ServiceBus.ServiceBusEnvironment.DefaultIdentityHostName">
      <summary>Gets the default host name for the Windows Azure Access Control Service.</summary>
      <returns>Returns the default identity host name. </returns>
    </member>
    <member name="P:Microsoft.ServiceBus.ServiceBusEnvironment.SystemConnectivity">
      <summary>Gets the singleton <see cref="T:Microsoft.ServiceBus.ConnectivitySettings" /> instance that holds the connectivity settings for TCP and HTTP-based endpoints.</summary>
      <returns>Returns a <see cref="T:Microsoft.ServiceBus.ConnectivitySettings" /> that contains the connectivity settings.</returns>
    </member>
    <member name="T:Microsoft.ServiceBus.ServiceBusErrorData">
      <summary>Represents the data associated with the service bus error.</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.ServiceBusErrorData.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.ServiceBusErrorData" /> class.</summary>
    </member>
    <member name="P:Microsoft.ServiceBus.ServiceBusErrorData.Code">
      <summary>Gets or sets the error code.</summary>
      <returns>The error code.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.ServiceBusErrorData.Detail">
      <summary>Gets or sets the error details.</summary>
      <returns>The error details.</returns>
    </member>
    <member name="F:Microsoft.ServiceBus.ServiceBusErrorData.DetailTag">
      <summary>The tags for the error detail.</summary>
    </member>
    <member name="P:Microsoft.ServiceBus.ServiceBusErrorData.ExtensionData">
      <summary>Gets or sets the extension data objects for the error.</summary>
      <returns>The extension data objects for the error.</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.ServiceBusErrorData.GetServiceBusErrorData(System.Net.HttpWebResponse)">
      <summary>Gets the value of the service bus error data.</summary>
      <returns>The value of the service bus error data.</returns>
      <param name="webResponse">The HTTP web response.</param>
    </member>
    <member name="F:Microsoft.ServiceBus.ServiceBusErrorData.HttpStatusCodeTag">
      <summary>The tag for the HTTP status code.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.ServiceBusErrorData.RootTag">
      <summary>The tag root.</summary>
    </member>
    <member name="T:Microsoft.ServiceBus.ServiceRegistrySettings">
      <summary>Contains the settings for the Windows Azure Service Bus registry.</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.ServiceRegistrySettings.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.ServiceRegistrySettings" /> class.</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.ServiceRegistrySettings.#ctor(Microsoft.ServiceBus.DiscoveryType)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.ServiceRegistrySettings" /> class using the specified discovery type.</summary>
      <param name="discoveryType">The discovery type that indicates whether the endpoint is public or private. </param>
    </member>
    <member name="F:Microsoft.ServiceBus.ServiceRegistrySettings.allowUnauthenticatedAccess">
      <summary>true if your endpoint allows for unauthenticated access; otherwise, false. The default value is false.</summary>
    </member>
    <member name="P:Microsoft.ServiceBus.ServiceRegistrySettings.DiscoveryMode">
      <summary>Gets or sets how the service is discovered. </summary>
      <returns>Returns <see cref="T:Microsoft.ServiceBus.DiscoveryType" />.DiscoveryType.Public for discovery to be public; DiscoveryType.Private for discovery to be private. The default value is DiscoveryType.Private.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.ServiceRegistrySettings.DisplayName">
      <summary>Gets or sets the display name for the endpoint.</summary>
      <returns>Returns <see cref="T:System.String" />.Contains the display name. </returns>
    </member>
    <member name="M:Microsoft.ServiceBus.ServiceRegistrySettings.System#ServiceModel#Description#IEndpointBehavior#AddBindingParameters(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Channels.BindingParameterCollection)">
      <summary>Adds the specified binding parameters to the specified endpoint. </summary>
      <param name="endpoint">The endpoint. </param>
      <param name="bindingParameters">The bindings to add. </param>
    </member>
    <member name="M:Microsoft.ServiceBus.ServiceRegistrySettings.System#ServiceModel#Description#IEndpointBehavior#ApplyClientBehavior(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.ClientRuntime)">
      <summary>Implements or modifies the specified client across the specified runtime. </summary>
      <param name="endpoint">The endpoint. </param>
      <param name="clientRuntime">The client.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.ServiceRegistrySettings.System#ServiceModel#Description#IEndpointBehavior#ApplyDispatchBehavior(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.EndpointDispatcher)">
      <summary>Implements a modification or extension of the service across an endpoint. </summary>
      <param name="endpoint">The endpoint that exposes the contract.</param>
      <param name="endpointDispatcher">The endpoint dispatcher to be modified or extended.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.ServiceRegistrySettings.System#ServiceModel#Description#IEndpointBehavior#Validate(System.ServiceModel.Description.ServiceEndpoint)">
      <summary>Confirms that the endpoint meets some intended criteria.</summary>
      <param name="endpoint">The endpoint to validate.</param>
    </member>
    <member name="F:Microsoft.ServiceBus.ServiceRegistrySettings.transportProtectionEnabled">
      <summary>true if transport protection is enabled; otherwise, false. The default value is true.</summary>
    </member>
    <member name="T:Microsoft.ServiceBus.SharedAccessSignatureToken">
      <summary>Represents the shared access signature token.</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.SharedAccessSignatureToken.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.SharedAccessSignatureToken" /> class with specified token string.</summary>
      <param name="tokenString">The token string.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.SharedAccessSignatureToken.#ctor(System.String,System.DateTime)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.SharedAccessSignatureToken" /> class with specified token string and expiry.</summary>
      <param name="tokenString">The token string.</param>
      <param name="expiry">The token expiry.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.SharedAccessSignatureToken.#ctor(System.String,System.DateTime,System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.SharedAccessSignatureToken" /> class with specified token string, expiry and audience.</summary>
      <param name="tokenString">The token string.</param>
      <param name="expiry">The token expiry.</param>
      <param name="audience">The token audience.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.SharedAccessSignatureToken.#ctor(System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.SharedAccessSignatureToken" /> class with specified identifier and token string. </summary>
      <param name="id">The token identifier.</param>
      <param name="tokenString">The token string.</param>
    </member>
    <member name="P:Microsoft.ServiceBus.SharedAccessSignatureToken.AudienceFieldName">
      <summary>Gets the audience field name.</summary>
      <returns>The audience field name.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.SharedAccessSignatureToken.ExpiresOnFieldName">
      <summary>Gets the value that expires on field name.</summary>
      <returns>The value that expires on field name.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.SharedAccessSignatureToken.KeyValueSeparator">
      <summary>Gets the key value separator.</summary>
      <returns>The key value separator.</returns>
    </member>
    <member name="F:Microsoft.ServiceBus.SharedAccessSignatureToken.MaxKeyLength">
      <summary>Specifies the maximum length of the key.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.SharedAccessSignatureToken.MaxKeyNameLength">
      <summary>Specifies the maximum length of the key name.</summary>
    </member>
    <member name="P:Microsoft.ServiceBus.SharedAccessSignatureToken.PairSeparator">
      <summary>Gets the pair separator associated with the token.</summary>
      <returns>The pair separator associated with the token.</returns>
    </member>
    <member name="F:Microsoft.ServiceBus.SharedAccessSignatureToken.SasKeyValueSeparator">
      <summary>Specifies the key value separator for shared access signature token.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.SharedAccessSignatureToken.SasPairSeparator">
      <summary>Specifies the pair separator for shared access signature token.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.SharedAccessSignatureToken.SharedAccessSignature">
      <summary>Specifies the shared access signature.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.SharedAccessSignatureToken.Signature">
      <summary>Specifies the signature token.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.SharedAccessSignatureToken.SignedExpiry">
      <summary>Specifies the signed expiry of the token.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.SharedAccessSignatureToken.SignedKeyName">
      <summary>Specifies the signed key name.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.SharedAccessSignatureToken.SignedResource">
      <summary>Specifies the signed resource.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.SharedAccessSignatureToken.SignedResourceFullFieldName">
      <summary>Specifies the full field name of the signed resource.</summary>
    </member>
    <member name="T:Microsoft.ServiceBus.SharedAccessSignatureTokenProvider">
      <summary>Represents the shared access signature associated with the token provider.</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.SharedAccessSignatureTokenProvider.BuildKey(System.String,System.String)">
      <summary>Generates a key for the token provider.</summary>
      <returns>A generated key for the token provider.</returns>
      <param name="appliesTo">The URI which the access token applies to.</param>
      <param name="action">The request action.</param>
    </member>
    <member name="F:Microsoft.ServiceBus.SharedAccessSignatureTokenProvider.EpochTime">
      <summary>The epoch time.</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.SharedAccessSignatureTokenProvider.GetPublisherSharedAccessSignature(System.Uri,System.String,System.String,System.String,System.String,System.TimeSpan)"></member>
    <member name="M:Microsoft.ServiceBus.SharedAccessSignatureTokenProvider.GetSharedAccessSignature(System.String,System.String,System.String,System.TimeSpan)">
      <summary>Returns the shared access signature associated with the specified key name, SAS key, resource, and token time-to-live.</summary>
      <returns>Returns <see cref="T:System.String" />.</returns>
      <param name="keyName">The key name.</param>
      <param name="sharedAccessKey">The SAS key name.</param>
      <param name="resource">The resource.</param>
      <param name="tokenTimeToLive">The TTL value for the token.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.SharedAccessSignatureTokenProvider.OnBeginGetToken(System.String,System.String,System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Executes upon calling the BeginGetToken method.</summary>
      <returns>The result of the operation.</returns>
      <param name="appliesTo">The URI which the access token applies to.</param>
      <param name="action">The request action.</param>
      <param name="timeout">The time span that specifies the timeout value for the message that gets the security token.</param>
      <param name="callback">An AsyncCallback delegate that references the method to invoke when the operation is complete.</param>
      <param name="state">A user-defined object that contains state information about the asynchronous operation.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.SharedAccessSignatureTokenProvider.OnBeginGetWebToken(System.String,System.String,System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Executes upon calling the BeginGetWebToken method.</summary>
      <returns>The result of the operation.</returns>
      <param name="appliesTo">The URI which the access token applies to.</param>
      <param name="action">The request action.</param>
      <param name="timeout">The time span that specifies the timeout value for the message that gets the security token.</param>
      <param name="callback">An AsyncCallback delegate that references the method to invoke when the operation is complete.</param>
      <param name="state">A user-defined object that contains state information about the asynchronous operation.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.SharedAccessSignatureTokenProvider.OnEndGetToken(System.IAsyncResult,System.DateTime@)">
      <summary>Executes upon calling the EndGetToken method.</summary>
      <returns>The <see cref="T:System.IdentityModel.Tokens.SecurityToken" /> object.</returns>
      <param name="result">An IAsyncResult object that references the asynchronous operation to get a token.</param>
      <param name="cacheUntil">When this method returns, contains the expiration date and time of the token information in the cache.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.SharedAccessSignatureTokenProvider.OnEndGetWebToken(System.IAsyncResult,System.DateTime@)">
      <summary>Executes upon calling the EndGetWebToken method.</summary>
      <returns>The String that represents the web token.</returns>
      <param name="result">An IAsyncResult object that references the asynchronous operation to get a web token.</param>
      <param name="cacheUntil">When this method returns, contains the expiration date and time of the token information in the cache.</param>
    </member>
    <member name="P:Microsoft.ServiceBus.SharedAccessSignatureTokenProvider.StripQueryParameters">
      <summary>Gets whether the token provider strips query parameters.</summary>
      <returns>true if the token provider strips query parameters; otherwise, false.</returns>
    </member>
    <member name="T:Microsoft.ServiceBus.SharedSecretTokenProvider">
      <summary>Provides methods that return name/value pairs for web token assertions, and that execute asynchronous shared secret token retrieval operations.</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.SharedSecretTokenProvider.BuildKey(System.String,System.String)">
      <summary>Generates a key for the token provider.</summary>
      <returns>A generated key for the token provider.</returns>
      <param name="appliesTo">The URI which the access token applies to.</param>
      <param name="action">The request action.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.SharedSecretTokenProvider.ComputeSimpleWebTokenString(System.String,System.Byte[])">
      <summary>Returns a string of URL encoded name/value pairs for a simple web token assertion using the specified issuer name and issuer secret.</summary>
      <returns>A URL encoded name/value pairs for a simple web token assertion.</returns>
      <param name="issuerName">The issuer name.</param>
      <param name="issuerSecret">The issuer secret.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.SharedSecretTokenProvider.ComputeSimpleWebTokenString(System.String,System.String)">
      <summary>Returns a string of URL encoded name/value pairs for a simple web token assertion using the specified issuer name and issuer secret.</summary>
      <returns>A URL encoded name/value pairs for a simple web token assertion.</returns>
      <param name="issuerName">The issuer name.</param>
      <param name="issuerSecret">The issuer secret.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.SharedSecretTokenProvider.OnBeginGetToken(System.String,System.String,System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Executes the begin get token action.</summary>
      <returns>An <see cref="T:System.IAsyncResult" /> object that references the asynchronous operation to get a token.</returns>
      <param name="appliesTo">The URI which the access token applies to.</param>
      <param name="action">The request action.</param>
      <param name="timeout">The time span that specifies the timeout value for the message that gets the security token.</param>
      <param name="callback">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</param>
      <param name="state">A user-defined object that contains state information about the asynchronous operation.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.SharedSecretTokenProvider.OnBeginGetWebToken(System.String,System.String,System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Executes the begin get web token action.</summary>
      <returns>An <see cref="T:System.IAsyncResult" /> object that references the asynchronous operation to get a web token.</returns>
      <param name="appliesTo">The URI which the access token applies to.</param>
      <param name="action">The request action.</param>
      <param name="timeout">The time span that specifies the timeout value for the message that gets the security token.</param>
      <param name="callback">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</param>
      <param name="state">A user-defined object that contains state information about the asynchronous operation.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.SharedSecretTokenProvider.OnEndGetToken(System.IAsyncResult,System.DateTime@)">
      <summary>Executes the end get token action.</summary>
      <returns>The security token.</returns>
      <param name="result">An <see cref="T:System.IAsyncResult" /> object that references the asynchronous operation to get a token.</param>
      <param name="cacheUntil">When this method returns, contains the expiration date and time of the token information in the cache.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.SharedSecretTokenProvider.OnEndGetWebToken(System.IAsyncResult,System.DateTime@)">
      <summary>Executes the end get web token action.</summary>
      <returns>The web token.</returns>
      <param name="result">An <see cref="T:System.IAsyncResult" /> object that references the asynchronous operation to get a web token.</param>
      <param name="cacheUntil">When this method returns, contains the expiration date and time of the token information in the cache.</param>
    </member>
    <member name="T:Microsoft.ServiceBus.SimpleWebSecurityToken">
      <summary>A security token that wraps a Simple Web Token.</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.SimpleWebSecurityToken.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.SimpleWebSecurityToken" /> class with the specified Simple Web Token.</summary>
      <param name="tokenString">A string that represents the Simple Web Token.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.SimpleWebSecurityToken.#ctor(System.String,System.DateTime)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.SimpleWebSecurityToken" /> class with the specified Simple Web Token and expiry date.</summary>
      <param name="tokenString">A string that represents the Simple Web Token.</param>
      <param name="expiry">The expiry date of the simple web token.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.SimpleWebSecurityToken.#ctor(System.String,System.DateTime,System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.SimpleWebSecurityToken" /> class.</summary>
      <param name="tokenString">A string that represents the Simple Web Token.</param>
      <param name="expiry">The expiry date of the simple web token.</param>
      <param name="audience">The audience for the simple web token.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.SimpleWebSecurityToken.#ctor(System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.SimpleWebSecurityToken" /> class with the specified token ID and Simple Web Token.</summary>
      <param name="id">A unique identifier for the Simple Web Token.</param>
      <param name="tokenString">A string that represents the Simple Web Token.</param>
      <exception cref="T:System.NullReferenceException">The <paramref name="id" /> parameter or <paramref name="tokenString" /> parameter is null.</exception>
    </member>
    <member name="P:Microsoft.ServiceBus.SimpleWebSecurityToken.Audience">
      <summary>Gets the audience for the simple web token.</summary>
      <returns>The audience for the simple web token.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.SimpleWebSecurityToken.AudienceFieldName">
      <summary>Gets the audience field name.</summary>
      <returns>The audience field name.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.SimpleWebSecurityToken.ExpiresOn">
      <summary>Gets the date and time the security token will expire.</summary>
      <returns>The date and time the security token will expire.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.SimpleWebSecurityToken.ExpiresOnFieldName">
      <summary>Gets the field name associated with the token expiration.</summary>
      <returns>The field name associated with the token expiration.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.SimpleWebSecurityToken.Id">
      <summary>Gets the ID associated with the Simple Web Token.</summary>
      <returns>The ID associated with the Simple Web Token.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.SimpleWebSecurityToken.KeyValueSeparator">
      <summary>Gets the key value separator associated with the token.</summary>
      <returns>The key value separator associated with the token.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.SimpleWebSecurityToken.PairSeparator">
      <summary>Gets the pair separator associated with the token.</summary>
      <returns>The pair separator associated with the token.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.SimpleWebSecurityToken.SecurityKeys">
      <summary>Gets the cryptographic keys associated with the security token.</summary>
      <returns>A <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> of type <see cref="T:System.IdentityModel.Tokens.SecurityKey" /> that contains the set of keys associated with the Simple Web Token.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.SimpleWebSecurityToken.Token">
      <summary>Gets the Simple Web Token.</summary>
      <returns>The Simple Web Token.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.SimpleWebSecurityToken.ValidFrom">
      <summary>Not implemented. </summary>
      <returns>Throws a <see cref="T:System.NotImplementedException" />.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.SimpleWebSecurityToken.ValidTo">
      <summary>Not implemented.</summary>
      <returns>Throws a <see cref="T:System.NotImplementedException" />.</returns>
    </member>
    <member name="T:Microsoft.ServiceBus.SimpleWebSecurityTokenSerializer">
      <summary>Represents a class to use to read and to write <see cref="T:Microsoft.ServiceBus.SimpleWebSecurityToken" />, <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" />, and <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifier" /> objects as XML.</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.SimpleWebSecurityTokenSerializer.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.SimpleWebSecurityTokenSerializer" /> class.</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.SimpleWebSecurityTokenSerializer.#ctor(System.IdentityModel.Selectors.SecurityTokenSerializer)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.SimpleWebSecurityTokenSerializer" /> class with the specified security token serializer.</summary>
      <param name="innerSerializer">The security token serializer to use as the inner serializer.</param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="innerSerializer" /> parameter is null.</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.SimpleWebSecurityTokenSerializer.CanReadKeyIdentifierClauseCore(System.Xml.XmlReader)">
      <summary>Determines whether this serializer can read the &lt;KeyIdentifier&gt; element referred  by the specified XML reader.</summary>
      <returns>true when the specified &lt;KeyIdentifier&gt; element can be read; otherwise, false.</returns>
      <param name="reader">An <see cref="T:System.Xml.XmlReader" /> to read the key identifier clause.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.SimpleWebSecurityTokenSerializer.CanReadKeyIdentifierCore(System.Xml.XmlReader)">
      <summary>Determines whether this serializer can read the &lt;KeyIdentifier&gt; element referred  by the specified XML reader.</summary>
      <returns>true when the specified &lt;KeyIdentifier&gt; element can be read; otherwise, false.</returns>
      <param name="reader">An <see cref="T:System.Xml.XmlReader" /> to read the key identifier.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.SimpleWebSecurityTokenSerializer.CanReadTokenCore(System.Xml.XmlReader)">
      <summary>Determines whether this serializer can read the security token pointed at by the specified XML reader.</summary>
      <returns>true when the security token can be read; otherwise, false.</returns>
      <param name="reader">An <see cref="T:System.Xml.XmlReader" /> to read the security token.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.SimpleWebSecurityTokenSerializer.CanWriteKeyIdentifierClauseCore(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)">
      <summary>Determines whether this serializer can write the specified key identifier clause.</summary>
      <returns>true when this serializer can write the specified key identifier clause; otherwise, false.</returns>
      <param name="keyIdentifierClause">A <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" /> that represents the key identifier clause to write.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.SimpleWebSecurityTokenSerializer.CanWriteKeyIdentifierCore(System.IdentityModel.Tokens.SecurityKeyIdentifier)">
      <summary>Determines whether this serializer can write the specified key identifier.</summary>
      <returns>true when this serializer can write the specified key identifier; otherwise, false.</returns>
      <param name="keyIdentifier">A <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifier" /> that represents the key identifier to write.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.SimpleWebSecurityTokenSerializer.CanWriteTokenCore(System.IdentityModel.Tokens.SecurityToken)">
      <summary>Determines whether this serializer can write the specified security token to XML.</summary>
      <returns>true when the security token can be written; otherwise, false.</returns>
      <param name="token">The <see cref="T:System.IdentityModel.Tokens.SecurityToken" /> to convert to XML.</param>
    </member>
    <member name="F:Microsoft.ServiceBus.SimpleWebSecurityTokenSerializer.DefaultInstance">
      <summary>Specifies an instance of the <see cref="T:Microsoft.ServiceBus.SimpleWebSecurityTokenSerializer" /> class.</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.SimpleWebSecurityTokenSerializer.ReadKeyIdentifierClauseCore(System.Xml.XmlReader)">
      <summary>Reads the key identifier clause using the specified XML reader.</summary>
      <returns>A <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" /> that represents the key identifier that is read.</returns>
      <param name="reader">An <see cref="T:System.Xml.XmlReader" /> to read the key identifier clause.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.SimpleWebSecurityTokenSerializer.ReadKeyIdentifierCore(System.Xml.XmlReader)">
      <summary>Reads the key identifier using the specified XML reader.</summary>
      <returns>A <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifier" /> that represents the key identifier that is read.</returns>
      <param name="reader">An <see cref="T:System.Xml.XmlReader" /> to read the key identifier.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.SimpleWebSecurityTokenSerializer.ReadTokenCore(System.Xml.XmlReader,System.IdentityModel.Selectors.SecurityTokenResolver)">
      <summary>Reads the <see cref="T:Microsoft.ServiceBus.SimpleWebSecurityToken" /> or the security token pointed at by the specified XML reader.</summary>
      <returns>A <see cref="T:System.IdentityModel.Tokens.SecurityToken" /> that represents the SimpleWebSecurityToken or the security token that is read.</returns>
      <param name="reader">An <see cref="T:System.Xml.XmlReader" /> to read the SimpleWebSecurityToken or the security token.</param>
      <param name="tokenResolver">A <see cref="T:System.IdentityModel.Selectors.SecurityTokenResolver" /> that determines the security token type.</param>
      <exception cref="T:System.NotSupportedException">The encoding of the XML element is not base64Binary.</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.SimpleWebSecurityTokenSerializer.WriteKeyIdentifierClauseCore(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityKeyIdentifierClause)">
      <summary>Writes the specified key identifier clause using the specified XML writer.</summary>
      <param name="writer">An <see cref="T:System.Xml.XmlWriter" /> used to write the key identifier clause.</param>
      <param name="keyIdentifierClause">A <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" /> that represents the key identifier clause to write.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.SimpleWebSecurityTokenSerializer.WriteKeyIdentifierCore(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityKeyIdentifier)">
      <summary>Writes the specified key identifier using the specified XML writer.</summary>
      <param name="writer">An <see cref="T:System.Xml.XmlWriter" /> used to write the key identifier.</param>
      <param name="keyIdentifier">A <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifier" /> that represents the key identifier to write.</param>
      <exception cref="T:System.InvalidOperationException">The binary token content is null.</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.SimpleWebSecurityTokenSerializer.WriteTokenCore(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityToken)">
      <summary>Writes the specified <see cref="T:Microsoft.ServiceBus.SimpleWebSecurityToken" /> or security token using the specified XML writer.</summary>
      <param name="writer">An <see cref="T:System.Xml.XmlWriter" /> used to write the SimpleWebSecurityToken or security token.</param>
      <param name="token">The SimpleWebSecurityToken or security token to write.</param>
    </member>
    <member name="T:Microsoft.ServiceBus.SimpleWebTokenProvider">
      <summary>Provides a set of methods that execute asynchronous simple Web token (SWT) retrieval operations.</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.SimpleWebTokenProvider.BuildKey(System.String,System.String)">
      <summary>Generates a key for the simple web token provider.</summary>
      <returns>A generated key for the simple web token provider.</returns>
      <param name="appliesTo">The URI which the access token applies to.</param>
      <param name="action">The request action.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.SimpleWebTokenProvider.OnBeginGetToken(System.String,System.String,System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Executes the begin get token action.</summary>
      <returns>An <see cref="T:System.IAsyncResult" /> object that references the asynchronous operation to get a token.</returns>
      <param name="appliesTo">The URI which the access token applies to.</param>
      <param name="action">The request action.</param>
      <param name="timeout">The time span that specifies the timeout value for the message that gets the security token.</param>
      <param name="callback">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</param>
      <param name="state">A user-defined object that contains state information about the asynchronous operation.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.SimpleWebTokenProvider.OnBeginGetWebToken(System.String,System.String,System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Executes the begin get web token action.</summary>
      <returns>An <see cref="T:System.IAsyncResult" /> object that references the asynchronous operation to get a web token.</returns>
      <param name="appliesTo">The URI which the access token applies to.</param>
      <param name="action">The request action.</param>
      <param name="timeout">The time span that specifies the timeout value for the message that gets the security token.</param>
      <param name="callback">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</param>
      <param name="state">A user-defined object that contains state information about the asynchronous operation.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.SimpleWebTokenProvider.OnEndGetToken(System.IAsyncResult,System.DateTime@)">
      <summary>Executes the end get token action.</summary>
      <returns>The security token.</returns>
      <param name="result">An <see cref="T:System.IAsyncResult" /> object that references the asynchronous operation to get a token.</param>
      <param name="cacheUntil">When this method returns, contains the expiration date and time of the token information in the cache.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.SimpleWebTokenProvider.OnEndGetWebToken(System.IAsyncResult,System.DateTime@)">
      <summary>Executes the end get web token action.</summary>
      <returns>The web token.</returns>
      <param name="result">An <see cref="T:System.IAsyncResult" /> object that references the asynchronous operation to get a web token.</param>
      <param name="cacheUntil">When this method returns, contains the expiration date and time of the token information in the cache.</param>
    </member>
    <member name="T:Microsoft.ServiceBus.SocketConnectionPoolSettings">
      <summary>Represents the properties that control the behavior of the socket connection pool.</summary>
    </member>
    <member name="P:Microsoft.ServiceBus.SocketConnectionPoolSettings.GroupName">
      <summary>Gets or sets the group name of the socket connection pool.</summary>
      <returns>The group name of the socket connection pool.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.SocketConnectionPoolSettings.IdleTimeout">
      <summary>Gets or sets the maximum time the connection can be idle in the connection pool before being disconnected.</summary>
      <returns>The maximum time the connection can be idle in the connection pool before being disconnected.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.SocketConnectionPoolSettings.LeaseTimeout">
      <summary>Gets or sets the time span after which an active connection is closed.</summary>
      <returns>The duration after which the socket connection is closed.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.SocketConnectionPoolSettings.MaxOutboundConnectionsPerEndpoint">
      <summary>Gets or sets the maximum number of outbound connections for each endpoint that is cached in the connection pool.</summary>
      <returns>The maximum number of outbound connections for each endpoint that is cached in the connection pool.</returns>
    </member>
    <member name="T:Microsoft.ServiceBus.SocketSecurityRole">
      <summary>Describes the role for socket security. </summary>
    </member>
    <member name="F:Microsoft.ServiceBus.SocketSecurityRole.None">
      <summary>When set on a client, the application will send unencrypted messages. When set on a server, the application will accept both encrypted and unencrypted messages.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.SocketSecurityRole.SslClient">
      <summary>The application is identified as an SSL client, meaning the application will attempt to connect and send messages using an encrypted channel. </summary>
    </member>
    <member name="F:Microsoft.ServiceBus.SocketSecurityRole.SslServer">
      <summary>Identifies the application as an SSL server, meaning that the application will accept only a secure transport connection.</summary>
    </member>
    <member name="T:Microsoft.ServiceBus.TcpClientTransportTokenAssertionProviderBindingElement">
      <summary>Represents the transport binding element that supports channel security over an SSL stream for use in policy exports.</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.TcpClientTransportTokenAssertionProviderBindingElement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.TcpClientTransportTokenAssertionProviderBindingElement" /> class.</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.TcpClientTransportTokenAssertionProviderBindingElement.Clone">
      <summary>Returns a copy of this binding element instance.</summary>
      <returns>A copy of this binding element instance.</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.TcpClientTransportTokenAssertionProviderBindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Returns an object of the requested type, if present, from the appropriate layer in the binding stack.</summary>
      <returns>The object of the requested type if found; otherwise, returns null.</returns>
      <param name="context">The binding context that provides context for this binding element.</param>
      <typeparam name="T">The type of the property to get.</typeparam>
    </member>
    <member name="M:Microsoft.ServiceBus.TcpClientTransportTokenAssertionProviderBindingElement.GetTransportTokenAssertion">
      <summary>Gets the <see cref="T:System.Xml.XmlElement" /> that represents the transport token used in the security binding.</summary>
      <returns>An <see cref="T:System.Xml.XmlElement" /> that represents the transport token used in the security binding.</returns>
    </member>
    <member name="T:Microsoft.ServiceBus.TcpRelayConnectionMode">
      <summary>Describes the connection mode for the <see cref="T:Microsoft.ServiceBus.NetTcpRelayBinding" />. </summary>
    </member>
    <member name="F:Microsoft.ServiceBus.TcpRelayConnectionMode.Hybrid">
      <summary>Communication is relayed through the Windows Azure Service Bus infrastructure while the Client and Service endpoints negotiate a direct socket connection to each other. The coordination of this direct connection is governed by the Windows Azure Service Bus cloud service. The direct socket connection algorithm is capable of establishing direct connections between two parties that sit behind opposing Firewalls and NAT devices. The algorithm uses only outbound connections for Firewall traversal and relies on a mutual port prediction algorithm for NAT traversal. Since the NAT traversal algorithm is dependent on a very narrowly timed coordination and a best-guess prediction about the expected NAT behavior, the algorithm tends to have a very high success rate for Home and Small Business scenarios with a small number of clients and degrades in its success rate with larger NATs. If a direct connection can be established, the relayed connection is automatically upgraded to the direct connection without message or data loss. If the direct connection cannot be established, data will continue to flow through the Windows Azure Service Bus Relay.

This mode additionally requires outbound port 819 for the NAT prediction algorithm. With most personal firewall products, the outbound socket connection that is being established by the direct connect mode will also require a one-time policy exception to be granted by the user (the Windows Personal Firewall and other products will typically prompt the user) to the hosting application.
</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.TcpRelayConnectionMode.Relayed">
      <summary>All communication is relayed through the Windows Azure Service Bus cloud. The SSL-protected control connection is used to negotiate a relayed end-to-end socket connection that all Client-Service communication flows through. After the connection is established, the Windows Azure Service Bus infrastructure acts much like a socket forwarder proxy relaying a bidirectional byte stream. This mode additionally requires outbound port 819 for the NAT prediction algorithm. With most personal firewall products, the outbound socket connection that is being established by the direct connect mode will also require a one-time policy exception to be granted by the user (the Windows Personal Firewall and other products will typically prompt the user) to the hosting application.</summary>
    </member>
    <member name="T:Microsoft.ServiceBus.TcpRelayTransportBindingElement">
      <summary>Represents the binding element for the TCP transport relay. </summary>
    </member>
    <member name="M:Microsoft.ServiceBus.TcpRelayTransportBindingElement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.TcpRelayTransportBindingElement" /> class. </summary>
    </member>
    <member name="M:Microsoft.ServiceBus.TcpRelayTransportBindingElement.#ctor(Microsoft.ServiceBus.RelayClientAuthenticationType)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.TcpRelayTransportBindingElement" /> class using the specified relay client authentication type. </summary>
      <param name="relayClientAuthenticationType">The relay client authentication type.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.TcpRelayTransportBindingElement.#ctor(Microsoft.ServiceBus.TcpRelayTransportBindingElement)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.TcpRelayTransportBindingElement" /> class using the specified relay binding element. </summary>
      <param name="elementToBeCloned">The element to be cloned.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.TcpRelayTransportBindingElement.BuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Creates a channel factory that can be used to create a channel.</summary>
      <returns>A channel factory of the specified type.</returns>
      <param name="context">Describes the bindings, behaviors, contracts, and other information required to create the channel factory.</param>
      <typeparam name="TChannel">The type of channel factory. </typeparam>
      <exception cref="InvalidOperationException">When Transport protection is enabled and the Connection Mode is set to either Hybrid or Direct.This member is unlikely to be used directly, but may be used when creating a custom binding. For more information, see Creating a Custom AppFabric Service Bus Binding.</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.TcpRelayTransportBindingElement.BuildChannelListener``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Creates a channel listener of the specified type.</summary>
      <returns>A channel listener of the specified type.</returns>
      <param name="context">Describes the bindings, behaviors, contracts, and other information required to create the channel factory.</param>
      <typeparam name="TChannel">The type of channel factory. </typeparam>
      <exception cref="InvalidOperationException">When Transport protection is enabled and the Connection Mode is set to either Hybrid or Direct.</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.TcpRelayTransportBindingElement.Clone">
      <summary>Creates a copy of the current binding element.</summary>
      <returns>Returns a <see cref="T:System.ServiceModel.Channels.BindingElement" /> that contains a copy of the binding element.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.TcpRelayTransportBindingElement.ConnectionMode">
      <summary>Gets or sets the connection mode.</summary>
      <returns>Returns a <see cref="T:Microsoft.ServiceBus.TcpRelayConnectionMode" /> that contains the connection mode.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.TcpRelayTransportBindingElement.ConnectionPoolSettings">
      <summary>Gets the connection pool settings for the current instance.</summary>
      <returns>The connection pool settings for the current instance.</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.TcpRelayTransportBindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Returns a specified object from the binding context.</summary>
      <returns>A binding element that contains the specified object, or null if not found.</returns>
      <param name="context">The context. </param>
      <typeparam name="T">The type of object to get. </typeparam>
    </member>
    <member name="P:Microsoft.ServiceBus.TcpRelayTransportBindingElement.IsDynamic">
      <summary>Gets or sets whether the binding element is dynamic.</summary>
      <returns>true if the binding element is dynamic; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.TcpRelayTransportBindingElement.RelayClientAuthenticationType">
      <summary>Gets or sets the type of authentication used by the service client.</summary>
      <returns>Returns <see cref="T:Microsoft.ServiceBus.RelayClientAuthenticationType" />.Contains the authentication type. The default value is RelayAccessToken.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.TcpRelayTransportBindingElement.Scheme">
      <summary>Gets the URI scheme for the transport.</summary>
      <returns>Returns the URI scheme for the transport, which is “TCP”.</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.TcpRelayTransportBindingElement.System#ServiceModel#Description#IPolicyExportExtension#ExportPolicy(System.ServiceModel.Description.MetadataExporter,System.ServiceModel.Description.PolicyConversionContext)">
      <summary> Exports a custom policy assertion about bindings.</summary>
      <param name="exporter">A metadata exporter that can be used to modify the exporting process.</param>
      <param name="context">The policy conversion context to insert your custom policy assertion.</param>
    </member>
    <member name="T:Microsoft.ServiceBus.TcpRelayTransportSecurity">
      <summary>Provides properties that control authentication parameters and protection level for the TCP transport relay binding. </summary>
    </member>
    <member name="P:Microsoft.ServiceBus.TcpRelayTransportSecurity.ProtectionLevel">
      <summary>Gets or sets the transport protection level. </summary>
      <returns>Returns a <see cref="T:System.Net.Security.ProtectionLevel" /> that contains the protection level. The default is EncryptAndSign.</returns>
    </member>
    <member name="T:Microsoft.ServiceBus.TokenConstants">
      <summary>Provides constants that represent parameter names, field names, method names, and delimiters that are used in authentication requests.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.TokenConstants.DefaultCompoundClaimDelimiter">
      <summary>The character used to delimit the list of values for a compound token.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.TokenConstants.HttpAuthParameterSeparator">
      <summary>The character used to separate parameters sent in HTTP authentication requests.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.TokenConstants.HttpMethodGet">
      <summary>The string used to represent the GET verb in an HTTP request.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.TokenConstants.HttpMethodHead">
      <summary>The string used to represent the HEAD verb in an HTTP request.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.TokenConstants.HttpMethodPost">
      <summary>The string used to represent the POST verb in an HTTP request.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.TokenConstants.HttpMethodTrace">
      <summary>The string used to represent the TRACE verb in an HTTP request.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.TokenConstants.KeyValueSeparator">
      <summary>A character designating the separation between a key and a value.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.TokenConstants.ManagementIssuerName">
      <summary>The default issuer name string value used to gain access to the Windows Azure Access Control management service.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.TokenConstants.MaxIssuerNameSize">
      <summary>The maximum size of the issuer name.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.TokenConstants.MaxIssuerSecretSize">
      <summary>The maximum size of the issuer secret key.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.TokenConstants.OutputClaimIssuerId">
      <summary>The issuer ID for all output claims from the Windows Azure Access Control service.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.TokenConstants.Saml11ConfirmationMethodBearerToken">
      <summary>The value of the ConfirmationMethod attribute used in a Security Assertion Markup Language (SAML) bearer assertion.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.TokenConstants.ServiceBusIssuerName">
      <summary>The default issuer name string value used to gain access to the Windows Azure Service Bus.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.TokenConstants.TokenAudience">
      <summary>The token audience attribute name that is used in a Simple Web Token (SWT). The token audience is the SWT processor that the SWT is intended for.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.TokenConstants.TokenDigest256">
      <summary>The attribute name of the hash-based message authentication code used in a Simple Web Token.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.TokenConstants.TokenExpiresOn">
      <summary>The attribute name for the token expiration (measured in seconds) used in a Simple Web Token.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.TokenConstants.TokenIssuer">
      <summary>The attribute name for the Simple Web Token (SWT) issuer.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.TokenConstants.TrackingIdHeaderName">
      <summary>The attribute name for the tracking ID in the returned token response.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.TokenConstants.UrlParameterSeparator">
      <summary>The character used to separate parameters in a token request.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.TokenConstants.WrapAccessToken">
      <summary>The parameter name for the access token that is returned in the response by the Security Token Service using the WRAP protocol.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.TokenConstants.WrapAppliesTo">
      <summary>The name of the AppliesTo field that is in the token request body that is sent to the Windows Azure Access Control service.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.TokenConstants.WrapAssertion">
      <summary>The parameter name for the WRAP assertion that is sent in the token request using the WRAP protocol.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.TokenConstants.WrapAssertionFormat">
      <summary>The parameter name for the assertion format that is sent in the token request using the WRAP protocol.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.TokenConstants.WrapAuthenticationType">
      <summary>The WRAP authentication protocol type name.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.TokenConstants.WrapAuthorizationHeaderKey">
      <summary>The parameter name of the access token that is sent in the authorization header of a request to the Windows Azure Service Bus.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.TokenConstants.WrapBaseTime">
      <summary>The base date and time used in the WRAP protocol.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.TokenConstants.WrapContentType">
      <summary>The content type used for formatting token request parameters when using the WRAP protocol.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.TokenConstants.WrapName">
      <summary>The parameter name for the account name that is sent in the token request using the WRAP protocol.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.TokenConstants.WrapPassword">
      <summary>The parameter name for the account password that is sent in the token request using the WRAP protocol.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.TokenConstants.WrapRequestedLifetime">
      <summary>The parameter name for the requested token lifetime (measured in seconds) that is sent in the token request using the WRAP protocol.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.TokenConstants.WrapSamlAssertionFormat">
      <summary>Specifies the Security Assertion Markup Language format.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.TokenConstants.WrapSwtAssertionFormat">
      <summary>Specifies the Simple Web Token format.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.TokenConstants.WrapTokenExpiresIn">
      <summary>The parameter name for the token expiration (measured in seconds) that is returned in the token response by the token issuer using the WRAP protocol.</summary>
    </member>
    <member name="T:Microsoft.ServiceBus.TokenProvider">
      <summary>Represents a security token provider with built-in factory methods returning some well-known token providers.</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.TokenProvider.#ctor(System.Boolean,System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.TokenProvider" /> class.</summary>
      <param name="cacheTokens">true if new security tokens are being cached; otherwise, false.</param>
      <param name="supportHttpAuthToken">true if web token is supported by this provider; otherwise, false.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.TokenProvider.#ctor(System.Boolean,System.Boolean,Microsoft.ServiceBus.TokenScope)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.TokenProvider" /> class.</summary>
      <param name="cacheTokens">true if new security tokens are being cached; otherwise, false.</param>
      <param name="supportHttpAuthToken">true if web token is supported by this provider; otherwise, false.</param>
      <param name="tokenScope">The token scope associated with the provider.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.TokenProvider.#ctor(System.Boolean,System.Boolean,System.Int32,Microsoft.ServiceBus.TokenScope)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.TokenProvider" /> class.</summary>
      <param name="cacheTokens">true if new security tokens are being cached; otherwise, false.</param>
      <param name="supportHttpAuthToken">true if web token is supported by this provider; otherwise, false.</param>
      <param name="cacheSize">The size of the cache.</param>
      <param name="tokenScope">The token scope associated with the provider.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.TokenProvider.BeginGetToken(System.String,System.String,System.Boolean,System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Begins an asynchronous operation to get a security token.</summary>
      <returns>An <see cref="T:System.IAsyncResult" /> object that references the asynchronous operation to get a token.</returns>
      <param name="appliesTo">The URI which the access token applies to.</param>
      <param name="action">The request action.</param>
      <param name="bypassCache">true to ignore existing token information in the cache; false to use the token information in the cache.</param>
      <param name="timeout">The time span that specifies the timeout value for the message that gets the security token.</param>
      <param name="callback">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</param>
      <param name="state">A user-defined object that contains state information about the asynchronous operation. </param>
    </member>
    <member name="M:Microsoft.ServiceBus.TokenProvider.BeginGetWebToken(System.String,System.String,System.Boolean,System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Begins an asynchronous operation to get a web token.</summary>
      <returns>An <see cref="T:System.IAsyncResult" /> object that references the asynchronous operation to get a web token.</returns>
      <param name="appliesTo">The URI which the token applies to.</param>
      <param name="action">The request action.</param>
      <param name="bypassCache">true to ignore existing token information in the cache; false to use the token information in the cache.</param>
      <param name="timeout">The time span that specifies the timeout value for the message that gets the security token.</param>
      <param name="callback">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</param>
      <param name="state">A user-defined object that contains state information about the asynchronous operation. </param>
    </member>
    <member name="M:Microsoft.ServiceBus.TokenProvider.BuildKey(System.String,System.String)">
      <summary>Generates a key for the token provider.</summary>
      <returns>A generated key for the token provider.</returns>
      <param name="appliesTo">The URI which the access token applies to.</param>
      <param name="action">The request action.</param>
    </member>
    <member name="P:Microsoft.ServiceBus.TokenProvider.CacheSize">
      <summary>Gets or sets the size of the cache.</summary>
      <returns>The size of the cache.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.TokenProvider.CacheTokens">
      <summary>Gets or sets a value that indicates whether new security tokens are being cached.</summary>
      <returns>true if new security tokens are being cached; otherwise, false.</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.TokenProvider.Clear">
      <summary>Clears the token provider.</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.TokenProvider.CreateOAuthTokenProvider(System.Collections.Generic.IEnumerable{System.Uri},System.Net.NetworkCredential)">
      <summary>Creates an OAuth (open standard for authorization) token provider.</summary>
      <returns>The <see cref="T:Microsoft.ServiceBus.TokenProvider" /> for returning OAuth token.</returns>
      <param name="stsUris">The URIs of the Security Token Service (STS).</param>
      <param name="credential">The user credential.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.TokenProvider.CreateSamlTokenProvider(System.String)">
      <summary>Creates a SAML token provider with the specified SAML token.</summary>
      <returns>The <see cref="T:Microsoft.ServiceBus.TokenProvider" /> for returning SAML token.</returns>
      <param name="samlToken">The string that represents the SAML token.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.TokenProvider.CreateSamlTokenProvider(System.String,Microsoft.ServiceBus.TokenScope)">
      <summary>Creates a SAML token provider with the specified SAML token and scope.</summary>
      <returns>The <see cref="T:Microsoft.ServiceBus.TokenProvider" /> for returning SAML token.</returns>
      <param name="samlToken">The string that represents the SAML token.</param>
      <param name="tokenScope">The token scope associated with the provider.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.TokenProvider.CreateSamlTokenProvider(System.String,System.Uri)">
      <summary>Creates a SAML token provider with the specified SAML token and URI of the Security Token Service (STS).</summary>
      <returns>The <see cref="T:Microsoft.ServiceBus.TokenProvider" /> for returning SAML token.</returns>
      <param name="samlToken">The string that represents the SAML token.</param>
      <param name="stsUri">The URI of the Security Token Service (STS).</param>
    </member>
    <member name="M:Microsoft.ServiceBus.TokenProvider.CreateSamlTokenProvider(System.String,System.Uri,Microsoft.ServiceBus.TokenScope)">
      <summary>Creates a SAML token provider with the specified SAML token, URI of the Security Token Service (STS) and token scope.</summary>
      <returns>The <see cref="T:Microsoft.ServiceBus.TokenProvider" /> for returning SAML token.</returns>
      <param name="samlToken">The string that represents the SAML token.</param>
      <param name="stsUri">The URI of the Security Token Service (STS).</param>
      <param name="tokenScope">The token scope associated with the provider.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.TokenProvider.CreateSamlTokenProvider(System.String,System.Uri,System.Int32)">
      <summary>Creates a SAML token provider with the specified SAML token, URI of the Security Token Service (STS) and cache size.</summary>
      <returns>The <see cref="T:Microsoft.ServiceBus.TokenProvider" /> for returning SAML token.</returns>
      <param name="samlToken">The string that represents the SAML token.</param>
      <param name="stsUri">The URI of the Security Token Service (STS).</param>
      <param name="cacheSize">The size of the cache.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.TokenProvider.CreateSamlTokenProvider(System.String,System.Uri,System.Int32,Microsoft.ServiceBus.TokenScope)">
      <summary>Creates a SAML token provider with the specified SAML token, URI of the Security Token Service (STS), cache size and token scope.</summary>
      <returns>The <see cref="T:Microsoft.ServiceBus.TokenProvider" /> for returning SAML token.</returns>
      <param name="samlToken">The string that represents the SAML token.</param>
      <param name="stsUri">The URI of the Security Token Service (STS).</param>
      <param name="cacheSize">The size of the cache.</param>
      <param name="tokenScope">The token scope associated with the provider.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.TokenProvider.CreateSharedAccessSignatureTokenProvider(System.String)">
      <summary>Creates a URL that grants access to the token provider with the specified shared access signature.</summary>
      <returns>Returns <see cref="T:Microsoft.ServiceBus.TokenProvider" />.</returns>
      <param name="sharedAccessSignature">The shared access signature.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.TokenProvider.CreateSharedAccessSignatureTokenProvider(System.String,System.String)">
      <summary>Creates a URL that grants access to the token provider with the specified key name and shared access key.</summary>
      <returns>The created URL that grants access to token provider.</returns>
      <param name="keyName">The key name.</param>
      <param name="sharedAccessKey">The shared access key.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.TokenProvider.CreateSharedAccessSignatureTokenProvider(System.String,System.String,Microsoft.ServiceBus.TokenScope)">
      <summary>Creates a URL that grants access to the token provider with the specified key name, shared access key and token scope.</summary>
      <returns>The created URL that grants access to token provider.</returns>
      <param name="keyName">The key name.</param>
      <param name="sharedAccessKey">The shared access key.</param>
      <param name="tokenScope">The token scope associated with the provider.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.TokenProvider.CreateSharedAccessSignatureTokenProvider(System.String,System.String,System.TimeSpan)">
      <summary>Creates a URL that grants access to the token provider with the specified key name, shared access key and token time to live.</summary>
      <returns>The created URL that grants access to token provider.</returns>
      <param name="keyName">The key name.</param>
      <param name="sharedAccessKey">The shared access key.</param>
      <param name="tokenTimeToLive">The time for which the operation remains valid.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.TokenProvider.CreateSharedAccessSignatureTokenProvider(System.String,System.String,System.TimeSpan,Microsoft.ServiceBus.TokenScope)">
      <summary>Creates a URL that grants access to the token provider.</summary>
      <returns>The created URL that grants access to token provider.</returns>
      <param name="keyName">The key name.</param>
      <param name="sharedAccessKey">The shared access key.</param>
      <param name="tokenTimeToLive">The time for which the operation remains valid.</param>
      <param name="tokenScope">The token scope associated with the provider.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.TokenProvider.CreateSharedSecretTokenProvider(System.String,System.Byte[])">
      <summary>Creates a shared secret token provider.</summary>
      <returns>The <see cref="T:Microsoft.ServiceBus.TokenProvider" /> for returning shared secret token.</returns>
      <param name="issuerName">The issuer name.</param>
      <param name="issuerSecret">The issuer secret.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.TokenProvider.CreateSharedSecretTokenProvider(System.String,System.Byte[],Microsoft.ServiceBus.TokenScope)">
      <summary>Creates a shared secret token provider.</summary>
      <returns>The created token provider.</returns>
      <param name="issuerName">The name of the issuer.</param>
      <param name="issuerSecret">The set of issuer secret.</param>
      <param name="tokenScope">The token scope associated with the provider.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.TokenProvider.CreateSharedSecretTokenProvider(System.String,System.Byte[],System.Uri)">
      <summary>Creates a shared secret token provider.</summary>
      <returns>The <see cref="T:Microsoft.ServiceBus.TokenProvider" /> for returning shared secret token.</returns>
      <param name="issuerName">The issuer name.</param>
      <param name="issuerSecret">The set of issuer secret.</param>
      <param name="stsUri">The URI of the Security Token Service (STS).</param>
    </member>
    <member name="M:Microsoft.ServiceBus.TokenProvider.CreateSharedSecretTokenProvider(System.String,System.Byte[],System.Uri,Microsoft.ServiceBus.TokenScope)">
      <summary>Creates a shared secret token provider.</summary>
      <returns>The created token provider.</returns>
      <param name="issuerName">The issuer name.</param>
      <param name="issuerSecret">The set of issuer secret.</param>
      <param name="stsUri">The Security Token Service's endpoint Uri.</param>
      <param name="tokenScope">The token scope associated with the provider.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.TokenProvider.CreateSharedSecretTokenProvider(System.String,System.String)">
      <summary>Creates a shared secret token provider.</summary>
      <returns>The <see cref="T:Microsoft.ServiceBus.TokenProvider" /> for returning shared secret token.</returns>
      <param name="issuerName">The issuer name.</param>
      <param name="issuerSecret">The issuer secret.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.TokenProvider.CreateSharedSecretTokenProvider(System.String,System.String,Microsoft.ServiceBus.TokenScope)">
      <summary>Creates a shared secret token provider.</summary>
      <returns>The created token provider.</returns>
      <param name="issuerName">The issuer name.</param>
      <param name="issuerSecret">The issuer secret.</param>
      <param name="tokenScope">The token scope associated with the provider.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.TokenProvider.CreateSharedSecretTokenProvider(System.String,System.String,System.Uri)">
      <summary>Creates a shared secret token provider.</summary>
      <returns>The <see cref="T:Microsoft.ServiceBus.TokenProvider" /> for returning shared secret token.</returns>
      <param name="issuerName">The issuer name.</param>
      <param name="issuerSecret">The issuer secret.</param>
      <param name="stsUri">The URI of the Security Token Service (STS).</param>
    </member>
    <member name="M:Microsoft.ServiceBus.TokenProvider.CreateSharedSecretTokenProvider(System.String,System.String,System.Uri,Microsoft.ServiceBus.TokenScope)">
      <summary>Creates a shared secret token provider.</summary>
      <returns>The created token provider.</returns>
      <param name="issuerName">The issuer name.</param>
      <param name="issuerSecret">The issuer secret.</param>
      <param name="stsUri">The URI of the Security Token Service (STS).</param>
      <param name="tokenScope">The token scope associated with the provider.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.TokenProvider.CreateSimpleWebTokenProvider(System.String)">
      <summary>Creates a simple web token provider.</summary>
      <returns>The <see cref="T:Microsoft.ServiceBus.TokenProvider" /> for returning simple web token.</returns>
      <param name="token">The string that represents the simple web token.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.TokenProvider.CreateSimpleWebTokenProvider(System.String,Microsoft.ServiceBus.TokenScope)">
      <summary>Creates a simple web token provider.</summary>
      <returns>The created simple web token provider.</returns>
      <param name="token">The string that represents the simple web token.</param>
      <param name="tokenScope">The token scope associated with the provider.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.TokenProvider.CreateSimpleWebTokenProvider(System.String,System.Uri)">
      <summary>Creates a simple web token provider.</summary>
      <returns>The <see cref="T:Microsoft.ServiceBus.TokenProvider" /> for returning simple web token.</returns>
      <param name="token">The string that represents the simple web token.</param>
      <param name="stsUri">The URI of the Security Token Service (STS).</param>
    </member>
    <member name="M:Microsoft.ServiceBus.TokenProvider.CreateSimpleWebTokenProvider(System.String,System.Uri,Microsoft.ServiceBus.TokenScope)">
      <summary>Creates a simple web token provider.</summary>
      <returns>The created simple web token provider.</returns>
      <param name="token">The string that represents the simple web token.</param>
      <param name="stsUri">The URI of the Security Token Service (STS).</param>
      <param name="tokenScope">The token scope associated with the provider.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.TokenProvider.CreateWindowsTokenProvider(System.Collections.Generic.IEnumerable{System.Uri})">
      <summary>Creates a windows token provider.</summary>
      <returns>The <see cref="T:Microsoft.ServiceBus.TokenProvider" /> for returning the windows token.</returns>
      <param name="stsUris">The URIs of the Security Token Service (STS).</param>
    </member>
    <member name="M:Microsoft.ServiceBus.TokenProvider.CreateWindowsTokenProvider(System.Collections.Generic.IEnumerable{System.Uri},System.Net.NetworkCredential)">
      <summary>Creates a windows token provider.</summary>
      <returns>The <see cref="T:Microsoft.ServiceBus.TokenProvider" /> for returning the windows token.</returns>
      <param name="stsUris">The URIs of the Security Token Service (STS).</param>
      <param name="credential">The user credential.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.TokenProvider.EndGetToken(System.IAsyncResult)">
      <summary>Completes an asynchronous operation to get a security token.</summary>
      <returns>The <see cref="T:System.IdentityModel.Tokens.SecurityToken" /> object.</returns>
      <param name="result">An <see cref="T:System.IAsyncResult" /> object that references the asynchronous operation to get a token.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.TokenProvider.EndGetWebToken(System.IAsyncResult)">
      <summary>Completes an asynchronous operation to get a web token.</summary>
      <returns>The <see cref="T:System.String" /> that represents the web token.</returns>
      <param name="result">An <see cref="T:System.IAsyncResult" /> object that references the asynchronous operation to get a web token.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.TokenProvider.GetTokenAsync(System.String,System.String,System.Boolean,System.TimeSpan)">
      <summary>Asynchronously retrieves the token for the provider.</summary>
      <returns>The result of the asynchronous operation.</returns>
      <param name="appliesTo">The URI which the access token applies to.</param>
      <param name="action">The request action.</param>
      <param name="bypassCache">true to ignore existing token information in the cache; false to use the token information in the cache.</param>
      <param name="timeout">The time span that specifies the timeout value for the message that gets the security token.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.TokenProvider.GetWebTokenAsync(System.String,System.String,System.Boolean,System.TimeSpan)">
      <summary>Asynchronously retrieves the web token for the provider.</summary>
      <returns>The result of the asynchronous operation.</returns>
      <param name="appliesTo">The URI which the access token applies to.</param>
      <param name="action">The request action.</param>
      <param name="bypassCache">true to ignore existing token information in the cache; false to use the token information in the cache.</param>
      <param name="timeout">The time span that specifies the timeout value for the message that gets the security token.</param>
    </member>
    <member name="P:Microsoft.ServiceBus.TokenProvider.IsWebTokenSupported">
      <summary>Gets or sets a value that indicates whether web token is supported by this provider.</summary>
      <returns>true if web token is supported by this provider; otherwise, false.</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.TokenProvider.NormalizeAppliesTo(System.String)">
      <summary>Returns an object whose value is the same as the token provider.</summary>
      <returns>The returned object.</returns>
      <param name="appliesTo">The URI which the access token applies to.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.TokenProvider.OnBeginGetToken(System.String,System.String,System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Executes upon calling the BeginGetToken method.</summary>
      <returns>An <see cref="T:System.IAsyncResult" /> object that references the asynchronous operation to get a token.</returns>
      <param name="appliesTo">The URI which the access token applies to.</param>
      <param name="action">The request action.</param>
      <param name="timeout">The time span that specifies the timeout value for the message that gets the security token.</param>
      <param name="callback">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</param>
      <param name="state">A user-defined object that contains state information about the asynchronous operation. </param>
    </member>
    <member name="M:Microsoft.ServiceBus.TokenProvider.OnBeginGetWebToken(System.String,System.String,System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Executes upon calling the BeginGetWebToken method.</summary>
      <returns>An <see cref="T:System.IAsyncResult" /> object that references the asynchronous operation to get a web token.</returns>
      <param name="appliesTo">The URI which the access token applies to.</param>
      <param name="action">The request action.</param>
      <param name="timeout">The time span that specifies the timeout value for the message that gets the security token.</param>
      <param name="callback">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</param>
      <param name="state">A user-defined object that contains state information about the asynchronous operation. </param>
    </member>
    <member name="M:Microsoft.ServiceBus.TokenProvider.OnEndGetToken(System.IAsyncResult,System.DateTime@)">
      <summary>Executes upon calling the EndGetToken method.</summary>
      <returns>The <see cref="T:System.IdentityModel.Tokens.SecurityToken" /> object.</returns>
      <param name="result">An <see cref="T:System.IAsyncResult" /> object that references the asynchronous operation to get a token.</param>
      <param name="cacheUntil">When this method returns, contains the expiration date and time of the token information in the cache.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.TokenProvider.OnEndGetWebToken(System.IAsyncResult,System.DateTime@)">
      <summary>Executes upon calling the EndGetWebToken method.</summary>
      <returns>The <see cref="T:System.String" /> that represents the web token.</returns>
      <param name="result">An <see cref="T:System.IAsyncResult" /> object that references the asynchronous operation to get a web token.</param>
      <param name="cacheUntil">When this method returns, contains the expiration date and time of the token information in the cache.</param>
    </member>
    <member name="P:Microsoft.ServiceBus.TokenProvider.StripQueryParameters">
      <summary>Gets whether the token provider strips query parameters.</summary>
      <returns>true if the token provider strips query parameters; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.TokenProvider.TokenScope">
      <summary>Gets or sets the token scope associated with the provider.</summary>
      <returns>The token scope associated with the provider.</returns>
    </member>
    <member name="T:Microsoft.ServiceBus.TokenProvider.Key">
      <summary>Represents a key associated with the token.</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.TokenProvider.Key.#ctor(System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.TokenProvider.Key" /> class.</summary>
      <param name="appliesTo">Specifies the address where the key applies to.</param>
      <param name="claim">Specifies a specific user, application, computer, or other entity</param>
    </member>
    <member name="M:Microsoft.ServiceBus.TokenProvider.Key.Equals(Microsoft.ServiceBus.TokenProvider.Key)">
      <summary>Determines whether the specified key is equal to the current object.</summary>
      <returns>true if the specified object is equal to the current object; otherwise, false.</returns>
      <param name="other">The key to compare with the current object.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.TokenProvider.Key.Equals(System.Object)">
      <summary>Determines whether the specified object is equal to the current object.</summary>
      <returns>true if the specified object is equal to the current object; otherwise, false.</returns>
      <param name="obj">The object to compare with the current object.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.TokenProvider.Key.GetHashCode">
      <summary>Returns the hash code for the key.</summary>
      <returns>The hash code for the key.</returns>
    </member>
    <member name="T:Microsoft.ServiceBus.TokenProviderException">
      <summary>Represents an exception regarding the token provider for the Service Bus.</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.TokenProviderException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.TokenProviderException" /> class.</summary>
      <param name="message">The exception message.</param>
      <param name="innerException">The error that caused the exception.</param>
    </member>
    <member name="T:Microsoft.ServiceBus.TokenScope">
      <summary>Enumerates the token scope for the service bus.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.TokenScope.Entity">
      <summary>The entity.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.TokenScope.Namespace">
      <summary>The namespace.</summary>
    </member>
    <member name="T:Microsoft.ServiceBus.TransportClientEndpointBehavior">
      <summary>Describes the WCF endpoint behavior that is used to specify the Service Bus credentials for a particular endpoint.</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.TransportClientEndpointBehavior.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.TransportClientEndpointBehavior" /> class.</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.TransportClientEndpointBehavior.#ctor(Microsoft.ServiceBus.TokenProvider)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.TransportClientEndpointBehavior" /> class.</summary>
      <param name="tokenProvider">The token provider used as a binding parameter.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.TransportClientEndpointBehavior.System#ServiceModel#Description#IEndpointBehavior#AddBindingParameters(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Channels.BindingParameterCollection)">
      <summary>Passes the specified data at runtime to the specified binding to support Service Bus credential behavior.</summary>
      <param name="endpoint">The endpoint to modify.</param>
      <param name="bindingParameters">The objects that binding elements require to support the behavior.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.TransportClientEndpointBehavior.System#ServiceModel#Description#IEndpointBehavior#ApplyClientBehavior(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.ClientRuntime)">
      <summary>Implements a modification or extension of the client across an endpoint.</summary>
      <param name="endpoint">The endpoint that is to be customized.</param>
      <param name="clientRuntime">The client runtime to be customized.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.TransportClientEndpointBehavior.System#ServiceModel#Description#IEndpointBehavior#ApplyDispatchBehavior(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.EndpointDispatcher)">
      <summary>Implements a modification or extension of the service across an endpoint.</summary>
      <param name="endpoint">The endpoint that exposes the contract.</param>
      <param name="endpointDispatcher">The endpoint dispatcher to be modified or extended.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.TransportClientEndpointBehavior.System#ServiceModel#Description#IEndpointBehavior#Validate(System.ServiceModel.Description.ServiceEndpoint)">
      <summary>Confirms that the endpoint is a valid Windows Azure Service Bus endpoint that can be modified by the behavior of this instance.</summary>
      <param name="endpoint">The endpoint to validate.</param>
    </member>
    <member name="P:Microsoft.ServiceBus.TransportClientEndpointBehavior.TokenProvider">
      <summary>Gets or sets the token provider that is used as a binding parameter.</summary>
      <returns>The token provider used as a binding parameter.</returns>
    </member>
    <member name="T:Microsoft.ServiceBus.WebHttpRelayBinding">
      <summary>A binding used to configure endpoints for Web services that are exposed through HTTP requests instead of SOAP messages. </summary>
    </member>
    <member name="M:Microsoft.ServiceBus.WebHttpRelayBinding.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.WebHttpRelayBinding" /> class. </summary>
    </member>
    <member name="M:Microsoft.ServiceBus.WebHttpRelayBinding.#ctor(Microsoft.ServiceBus.EndToEndWebHttpSecurityMode,Microsoft.ServiceBus.RelayClientAuthenticationType)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.WebHttpRelayBinding" /> class using the specified type of security and relay client authentication. </summary>
      <param name="securityMode">The type of security used with the binding.</param>
      <param name="relayClientAuthenticationType">The type of client authentication used on the relay. </param>
    </member>
    <member name="M:Microsoft.ServiceBus.WebHttpRelayBinding.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.WebHttpRelayBinding" /> class using the specified configuration name.</summary>
      <param name="configurationName">The configuration to use.</param>
    </member>
    <member name="P:Microsoft.ServiceBus.WebHttpRelayBinding.AllowCookies">
      <summary>Gets or sets a value that specifies whether cookies are allowed in the messages sent via the <see cref="T:Microsoft.ServiceBus.WebHttpRelayBinding" />.</summary>
      <returns>Returns true if cookies are allowed; otherwise, false. The default value is false.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.WebHttpRelayBinding.ContentTypeMapper">
      <summary>Gets or sets the content type mapper.</summary>
      <returns>The content type mapper.</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.WebHttpRelayBinding.CreateBindingElements">
      <summary>Creates a collection with the binding elements for the binding.</summary>
      <returns>Returns a <see cref="T:System.ServiceModel.Channels.BindingElementCollection" /> that contains the ordered stack of binding elements used by the <see cref="T:Microsoft.ServiceBus.WebHttpRelayBinding" />.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.WebHttpRelayBinding.EnvelopeVersion">
      <summary>Gets the SOAP envelope version. </summary>
      <returns>Returns a <see cref="T:System.ServiceModel.EnvelopeVersion" />. Since the <see cref="T:Microsoft.ServiceBus.WebHttpRelayBinding" /> does not use SOAP, this always returns EnvelopeVersion.None.<see cref="T:Microsoft.ServiceBus.WebHttpRelayBinding" /> is not likely the binding you should be using for SOAP messaging. However, Windows Azure Service Bus does support SOAP. </returns>
    </member>
    <member name="P:Microsoft.ServiceBus.WebHttpRelayBinding.HostNameComparisonMode">
      <summary>Gets or sets the comparison mode used on the host name.</summary>
      <returns>The comparison mode used on the host name.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.WebHttpRelayBinding.IsDynamic">
      <summary>Gets or sets whether the relay binding is dynamic.</summary>
      <returns>true if the relay binding is dynamic; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.WebHttpRelayBinding.MaxBufferPoolSize">
      <summary>Gets or sets the maximum buffer pool size used by the transport.</summary>
      <returns>Returns the maximum buffer pool size. The default is 524288 bytes.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.WebHttpRelayBinding.MaxBufferSize">
      <summary>Gets or sets the maximum buffer size supported by the transport. </summary>
      <returns>Returns the max buffer size.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.WebHttpRelayBinding.MaxReceivedMessageSize">
      <summary>Gets or sets the maximum allowable message size that can be received.</summary>
      <returns>Returns the maximum allowable message size. The default size is 65,536 bytes.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.WebHttpRelayBinding.ProxyAddress">
      <summary>Gets or sets a URI that contains the address of the proxy to use for HTTP requests.</summary>
      <returns>Returns a <see cref="T:System.Uri" /> that contains the address of the proxy to use for HTTP requests. The default value is null.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.WebHttpRelayBinding.ReaderQuotas">
      <summary>Gets or sets xml reader quotas on the messages processed.</summary>
      <returns>Returns a <see cref="T:System.Xml.XmlDictionaryReaderQuotas" /> that contains the reader quotas.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.WebHttpRelayBinding.Scheme">
      <summary>Gets the scheme for the endpoints used with the binding.</summary>
      <returns>Returns the scheme.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.WebHttpRelayBinding.Security">
      <summary>Gets the security settings for the current instance.</summary>
      <returns>Returns a <see cref="T:Microsoft.ServiceBus.WebHttpRelaySecurity" /> that contains the security settings.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.WebHttpRelayBinding.System#ServiceModel#Channels#IBindingRuntimePreferences#ReceiveSynchronously">
      <summary>Gets a value that indicates whether incoming requests are handled synchronously or asynchronously.</summary>
      <returns>true if requests are handled synchronously; false if handled asynchronously. The default is false, to handle requests asynchronously.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.WebHttpRelayBinding.TransferMode">
      <summary>Gets or sets the transfer mode.</summary>
      <returns>Returns a <see cref="T:System.ServiceModel.TransferMode" /> that contains the transfer mode. The default is Buffered.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.WebHttpRelayBinding.UseDefaultWebProxy">
      <summary>Gets or sets a value that indicates whether the machine-wide proxy settings are used rather than the user specific settings.</summary>
      <returns>true if machine-wide proxy settings are used. Otherwise false. The default setting is true.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.WebHttpRelayBinding.WriteEncoding">
      <summary>Gets or sets the character encoding that is used to write the message text.</summary>
      <returns>Returns a <see cref="T:System.Text.Encoding" /> that contains the encoding. The default value is utf8encoding.</returns>
    </member>
    <member name="T:Microsoft.ServiceBus.WebHttpRelaySecurity">
      <summary>Specifies the types of security available to a service endpoint configured to receive HTTP requests. </summary>
    </member>
    <member name="P:Microsoft.ServiceBus.WebHttpRelaySecurity.Mode">
      <summary>Gets or sets the mode of security that is used by an endpoint configured to receive HTTP requests with a <see cref="T:Microsoft.ServiceBus.WebHttpRelayBinding" />.</summary>
      <returns>Returns a <see cref="T:Microsoft.ServiceBus.EndToEndWebHttpSecurityMode" /> that indicates whether transport-level security, credential only, or no security is used by an endpoint. The default value is None.</returns>
      <exception cref="ArgumentOutOfRangeException">The value is not a valid EndToEndWebHttpSecurityMode.</exception>
    </member>
    <member name="P:Microsoft.ServiceBus.WebHttpRelaySecurity.RelayClientAuthenticationType">
      <summary>Gets or sets the relay client authentication type used by the service client.</summary>
      <returns>Returns a <see cref="T:Microsoft.ServiceBus.RelayClientAuthenticationType" /> that contains the relay client authentication type. The default value is RelayClientAuthenticationType.RelayAccessToken. </returns>
    </member>
    <member name="P:Microsoft.ServiceBus.WebHttpRelaySecurity.Transport">
      <summary>Gets or sets the Transport-level security settings for a binding.</summary>
      <returns>Returns a <see cref="T:Microsoft.ServiceBus.HttpRelayTransportSecurity" /> that contains the binding. The default values set are a ClientCredentialType of None, a ProxyCredentialType of None, and Realm = "".</returns>
    </member>
    <member name="T:Microsoft.ServiceBus.WindowsTokenProvider">
      <summary>Represents the token provider for the service bus.</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.WindowsTokenProvider.BuildKey(System.String,System.String)">
      <summary>Generates a key for the token provider.</summary>
      <returns>A generated key.</returns>
      <param name="appliesTo">The URI which the access token applies to.</param>
      <param name="action">The request action.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.WindowsTokenProvider.NormalizeAppliesTo(System.String)">
      <summary>Returns the normalize URI form of the target address.</summary>
      <returns>The normalize URI form for the target address.</returns>
      <param name="appliesTo">The URI which the normalization applies to.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.WindowsTokenProvider.OnBeginGetToken(System.String,System.String,System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Retrieves a token when the provider service was started.</summary>
      <returns>The result of the operation.</returns>
      <param name="appliesTo">The object where the token will be applied.</param>
      <param name="action">The action.</param>
      <param name="timeout">The duration of the operation.</param>
      <param name="callback">The argument fir the provider.</param>
      <param name="state">The state of the provider.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.WindowsTokenProvider.OnBeginGetWebToken(System.String,System.String,System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Retrieves a web token when the provider service was started.</summary>
      <returns>The result of the operation.</returns>
      <param name="appliesTo">The object where the token will be applied.</param>
      <param name="action">The action.</param>
      <param name="timeout">The duration of the operation.</param>
      <param name="callback">The argument fir the provider.</param>
      <param name="state">The state of the provider.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.WindowsTokenProvider.OnEndGetToken(System.IAsyncResult,System.DateTime@)">
      <summary>Retrieves a token when the provider service was stopped.</summary>
      <returns>The retrieved token.</returns>
      <param name="result">The result of the operation.</param>
      <param name="cacheUntil">The specified duration of time for the provider to store data.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.WindowsTokenProvider.OnEndGetWebToken(System.IAsyncResult,System.DateTime@)">
      <summary>Retrieves a web token when the provider service was stopped.</summary>
      <returns>The retrieved web token.</returns>
      <param name="result">The result of the operation.</param>
      <param name="cacheUntil">The specified duration of time for the provider to store data.</param>
    </member>
    <member name="T:Microsoft.ServiceBus.WS2007HttpRelayBinding">
      <summary>Represents an interoperable binding that derives from <see cref="T:Microsoft.ServiceBus.WSHttpRelayBinding" /> and provides support for the updated versions of the Security, ReliableSession, and TransactionFlow binding elements. </summary>
    </member>
    <member name="M:Microsoft.ServiceBus.WS2007HttpRelayBinding.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.WS2007HttpRelayBinding" /> class with a specified type of security used by the binding. </summary>
    </member>
    <member name="M:Microsoft.ServiceBus.WS2007HttpRelayBinding.#ctor(Microsoft.ServiceBus.EndToEndSecurityMode,Microsoft.ServiceBus.RelayClientAuthenticationType)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.WS2007HttpRelayBinding" /> class with a specified type of security and relay client authentication used by the binding. </summary>
      <param name="securityMode">The security mode that specifies the type of security that is used with the SOAP message and for the client.</param>
      <param name="relayClientAuthenticationType">The type of authentication used by the client. </param>
    </member>
    <member name="M:Microsoft.ServiceBus.WS2007HttpRelayBinding.#ctor(Microsoft.ServiceBus.EndToEndSecurityMode,Microsoft.ServiceBus.RelayClientAuthenticationType,System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.WS2007HttpRelayBinding" /> class with a specified type of security used by the binding, the specified authentication for the client relay, and a value that indicates whether a reliable session is enabled. </summary>
      <param name="securityMode">Specifies the type of security that is used with the SOAP message and for the client.</param>
      <param name="relayClientAuthenticationType">The type of authentication used by the client. </param>
      <param name="reliableSessionEnabled">true if a reliable session is enabled; otherwise, false.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.WS2007HttpRelayBinding.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.WS2007HttpRelayBinding" /> class with a binding specified by its configuration name.</summary>
      <param name="configName">The binding configuration name for the <see cref="T:Microsoft.ServiceBus.Configuration.WS2007HttpRelayBindingElement" /></param>
    </member>
    <member name="M:Microsoft.ServiceBus.WS2007HttpRelayBinding.CreateMessageSecurity">
      <summary>Retrieves the security binding element from the current binding.</summary>
      <returns>Returns a <see cref="T:System.ServiceModel.Channels.SecurityBindingElement" /> that contains the current security binding element. </returns>
    </member>
    <member name="T:Microsoft.ServiceBus.WSHttpRelayBinding">
      <summary>Represents an interoperable binding that supports distributed transactions and secure, reliable sessions through the cloud. </summary>
    </member>
    <member name="P:Microsoft.ServiceBus.WSHttpRelayBinding.AllowCookies">
      <summary>Gets or sets a value that indicates whether the client accepts cookies and propagates them on future requests. </summary>
      <returns>Returns <see cref="T:System.Boolean" />.true if the binding allows cookies; otherwise, false. The default is false. </returns>
    </member>
    <member name="M:Microsoft.ServiceBus.WSHttpRelayBinding.CreateMessageSecurity">
      <summary>Returns the security binding element from the current binding.</summary>
      <returns>Returns a <see cref="T:System.ServiceModel.Channels.SecurityBindingElement" /> that contains the current binding. </returns>
    </member>
    <member name="M:Microsoft.ServiceBus.WSHttpRelayBinding.GetTransport">
      <summary>Returns the transport binding element from the current binding. </summary>
      <returns>Returns <see cref="T:System.ServiceModel.Channels.TransportBindingElement" />.Contains the transport binding element from the current binding.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.WSHttpRelayBinding.Security">
      <summary>Gets the security settings used with this binding. </summary>
      <returns>Returns a <see cref="T:Microsoft.ServiceBus.WSHttpRelaySecurity" /> that contains the security used with this binding. The default value Mode property is Message.</returns>
    </member>
    <member name="T:Microsoft.ServiceBus.WSHttpRelayBindingBase">
      <summary>Provides the base class with members common to the <see cref="T:Microsoft.ServiceBus.WSHttpRelayBinding" /> and the <see cref="T:Microsoft.ServiceBus.WS2007FederationHttpRelayBinding" />.
</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.WSHttpRelayBindingBase.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.WSHttpRelayBindingBase" /> class. </summary>
    </member>
    <member name="M:Microsoft.ServiceBus.WSHttpRelayBindingBase.#ctor(System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.WSHttpRelayBindingBase" /> class with a value that indicates whether a reliable session is enabled. </summary>
      <param name="reliableSessionEnabled">true, if a reliable session is enabled; otherwise, false.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.WSHttpRelayBindingBase.CreateBindingElements">
      <summary>Returns an ordered collection of binding elements contained in the current Windows Azure Service Bus binding. </summary>
      <returns>Returns <see cref="T:System.ServiceModel.Channels.BindingElementCollection" />.Contains the objects for the binding.</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.WSHttpRelayBindingBase.CreateMessageSecurity">
      <summary>When implemented in a derived class, returns the security binding element from the current Windows Azure Service Bus binding. </summary>
      <returns>Returns <see cref="T:System.ServiceModel.Channels.SecurityBindingElement" />.Contains the security binding element from the current Windows Azure Service Bus binding.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.WSHttpRelayBindingBase.EnvelopeVersion">
      <summary>Gets the version of SOAP that is used for messages that are processed by this binding. </summary>
      <returns>Returns <see cref="T:System.ServiceModel.EnvelopeVersion" />.The value of the envelope version that is used with this Windows Azure Service Bus binding. The value is always SOAP 1.2.</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.WSHttpRelayBindingBase.GetTransport">
      <summary>When implemented in a derived class, returns the transport binding element from the current Windows Azure Service Bus binding. </summary>
      <returns>Returns <see cref="T:System.ServiceModel.Channels.TransportBindingElement" />.Contains the transport binding element from the current Windows Azure Service Bus binding. </returns>
    </member>
    <member name="P:Microsoft.ServiceBus.WSHttpRelayBindingBase.HostNameComparisonMode">
      <summary>Gets or sets the comparison mode used on the host name.</summary>
      <returns>The comparison mode used on the host name.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.WSHttpRelayBindingBase.IsDynamic">
      <summary>Gets or sets whether the relay binding is dynamic.</summary>
      <returns>true if the relay binding is dynamic; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.WSHttpRelayBindingBase.MaxBufferPoolSize">
      <summary>Gets or sets the maximum amount of memory allocated for the buffer manager that manages the buffers required by endpoints using this Windows Azure Service Bus binding. </summary>
      <returns>Returns <see cref="T:System.Int64" />.The maximum size, in bytes, for the pool of buffers used by an endpoint configured with this binding. The default value is 65,536 bytes.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.WSHttpRelayBindingBase.MaxReceivedMessageSize">
      <summary>Gets or sets the maximum size for a message that can be processed by the Windows Azure Service Bus binding. </summary>
      <returns>Returns <see cref="T:System.Int64" />.The maximum size, in bytes, for a message that is processed by the Windows Azure Service Bus binding. The default value is 65,536 bytes.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.WSHttpRelayBindingBase.MessageEncoding">
      <summary>Gets or sets whether MTOM or Text/XML is used to encode SOAP messages. </summary>
      <returns>Returns <see cref="T:System.ServiceModel.WSMessageEncoding" />.Indicates whether MTOM or Text/XML is used to encode SOAP messages. The default value is Text/XML.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.WSHttpRelayBindingBase.ProxyAddress">
      <summary>Gets or sets the URI address of the HTTP proxy. </summary>
      <returns>Returns <see cref="T:System.Uri" />.Serves as the address of the HTTP proxy. The default value is null.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.WSHttpRelayBindingBase.ReaderQuotas">
      <summary>Gets or sets constraints on the complexity of SOAP messages that can be processed by endpoints configured with this Security Bus binding. </summary>
      <returns>Returns <see cref="T:System.Xml.XmlDictionaryReaderQuotas" />.Specifies the complexity constraints.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.WSHttpRelayBindingBase.ReliableSession">
      <summary>Gets an object that provides convenient access to the properties of a reliable Windows Azure Service Bus session binding element that are available when using one of the system-provided bindings. </summary>
      <returns>Returns <see cref="T:System.ServiceModel.OptionalReliableSession" />.Provides convenient access to the properties of a reliable Windows Azure Service Bus session binding element that are available when using one of the system-provided bindings.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.WSHttpRelayBindingBase.Scheme">
      <summary>Gets the URI transport scheme for the channels and listeners that are configured with this binding. </summary>
      <returns>Returns <see cref="T:System.String" /> that represents the URI transport scheme.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.WSHttpRelayBindingBase.System#ServiceModel#Channels#IBindingRuntimePreferences#ReceiveSynchronously">
      <summary>Gets a value that indicates whether incoming requests can be handled more efficiently synchronously or asynchronously.</summary>
      <returns>true if requests can be handled more efficiently synchronously; otherwise false. The default is false, to handle requests asynchronously.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.WSHttpRelayBindingBase.TextEncoding">
      <summary>Gets or sets the character encoding that is used for the message text.</summary>
      <returns>The character encoding that is used for the message text.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.WSHttpRelayBindingBase.UseDefaultWebProxy">
      <summary>Gets or sets a value that indicates whether the auto-configured HTTP proxy of the system should be used, if available.</summary>
      <returns>true if the auto-configured HTTP proxy of the system should be used, if available; otherwise, false.</returns>
    </member>
    <member name="T:Microsoft.ServiceBus.WSHttpRelaySecurity">
      <summary>Represents the security settings for the <see cref="T:Microsoft.ServiceBus.WSHttpRelayBinding" />.
</summary>
    </member>
    <member name="P:Microsoft.ServiceBus.WSHttpRelaySecurity.Message">
      <summary>Gets the message-level security settings for this Windows Azure Service Bus binding.</summary>
      <returns>Returns <see cref="T:Microsoft.ServiceBus.NonDualMessageSecurityOverRelayHttp" />.Contains the security settings. The default value includes: EstablishSecurityContext with default set to true, ClientCredentialType is Windows, AlgorithmSuite is Basic256, and NegotiateServiceCredential is true.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.WSHttpRelaySecurity.Mode">
      <summary>Specifies the message security mode for this Windows Azure Service Bus binding. </summary>
      <returns>Returns <see cref="T:Microsoft.ServiceBus.EndToEndSecurityMode" />.Contains the security mode for this Windows Azure Service Bus binding. The default is Transport.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.WSHttpRelaySecurity.RelayClientAuthenticationType">
      <summary>Gets or sets the authentication type required for the service application or client application to provide to the Windows Azure Service Bus.</summary>
      <returns>The authentication type required for the service application or client application to provide to the Windows Azure Service Bus. The default is <see cref="F:Microsoft.ServiceBus.RelayClientAuthenticationType.RelayAccessToken" />.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.WSHttpRelaySecurity.Transport">
      <summary>Gets an object that contains the transport-level security settings for this Windows Azure Service Bus binding. </summary>
      <returns>Returns <see cref="T:Microsoft.ServiceBus.HttpRelayTransportSecurity" />.Contains the transport security for this item. The default value includes a ClientCredentialType of None and a ProxyCredentialType of None.</returns>
    </member>
    <member name="T:Microsoft.ServiceBus.Channels.ConnectionOrientedTransportBindingElement">
      <summary>An abstract class that supplements the base <see cref="T:System.ServiceModel.Channels.TransportBindingElement" /> with additional properties that are common to connection-oriented transports such as TCP and named pipes. 
</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Channels.ConnectionOrientedTransportBindingElement.CanBuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Indicates whether a channel factory of the specified type can be built. </summary>
      <returns>true if a channel factory can be built; otherwise false.</returns>
      <param name="context">The binding context for the channel.</param>
      <typeparam name="TChannel">The type of channel to check.</typeparam>
      <exception cref="ArgumentNullException">
        <paramref name="context" /> is null.</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.Channels.ConnectionOrientedTransportBindingElement.CanBuildChannelListener``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Returns a value that indicates whether the binding element can build a listener for a specific type of channel. </summary>
      <returns>true if the IChannelListener&lt;TChannel&gt; of type IChannel can be built by the binding element; otherwise, false.</returns>
      <param name="context">The binding context that provides context for the binding element.</param>
      <typeparam name="TChannel">The type of channel to check.</typeparam>
      <exception cref="ArgumentNullException">
        <paramref name="context" /> is null.</exception>
    </member>
    <member name="P:Microsoft.ServiceBus.Channels.ConnectionOrientedTransportBindingElement.ChannelInitializationTimeout">
      <summary>Gets or sets the timespan that specifies how long the channel initialization has to complete before timing out.</summary>
      <returns>Returns a <see cref="T:System.TimeSpan" /> after which the initialization times out.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Channels.ConnectionOrientedTransportBindingElement.ConnectionBufferSize">
      <summary>Gets and sets the size of the buffer used to transmit a chunk of the serialized message on the wire from the client or service. </summary>
      <returns>The size of the connection buffer. The default value is 8192 bytes.</returns>
      <exception cref="ArguementOutOfRangeException">The value is less than zero.</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.Channels.ConnectionOrientedTransportBindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Retrieves properties from the binding stack, if present.</summary>
      <returns>An object from the binding stack, if present, or null if not found.</returns>
      <param name="context">The binding context.</param>
      <typeparam name="T">The type of property.</typeparam>
    </member>
    <member name="P:Microsoft.ServiceBus.Channels.ConnectionOrientedTransportBindingElement.HostNameComparisonMode">
      <summary>Gets or sets a value that indicates whether the hostname is used to reach the service when matching on the URI.</summary>
      <returns>Returns a <see cref="T:System.ServiceModel.HostNameComparisonMode" /> that determines whether the hostname is used to reach the service. The default value is StrongWildCard, which ignores the hostname and port number in the comparison.</returns>
      <exception cref="ArguementOutOfRangeException">The value is not a valid HostnameComparisonMode. </exception>
    </member>
    <member name="P:Microsoft.ServiceBus.Channels.ConnectionOrientedTransportBindingElement.MaxBufferSize">
      <summary>Gets or sets the maximum size of the buffer to use.</summary>
      <returns>The maximum number of bytes that are used to buffer incoming messages in memory. The default value is 65,536 bytes.</returns>
      <exception cref="ArguementOutOfRangeException">The value is less than or equal to zero.</exception>
    </member>
    <member name="P:Microsoft.ServiceBus.Channels.ConnectionOrientedTransportBindingElement.MaxOutputDelay">
      <summary>Gets or sets the maximum interval of time that a chunk of a message or a full message can remain buffered in memory before being sent out.</summary>
      <returns>Returns a <see cref="T:System.TimeSpan" /> that specifies the maximum interval of time that a chunk of a message or a full message can remain buffered in memory before being sent out. The default value is 2 seconds. This property is only meaningful if the AllowedOutputBatching property of an outgoing message is set to true. Otherwise, this value is ignored and messages are sent immediately.</returns>
      <exception cref="ArguementOutOfRangeException">The value is less than zero.</exception>
    </member>
    <member name="P:Microsoft.ServiceBus.Channels.ConnectionOrientedTransportBindingElement.MaxPendingAccepts">
      <summary>Gets or sets the maximum number of pending asynchronous accept operations that are available for processing incoming connections to the service.</summary>
      <returns>The maximum number of connections the service can accept simultaneously. The default value is 1.</returns>
      <exception cref="ArguementOutOfRangeException">The value is less than or equal to zero.</exception>
    </member>
    <member name="P:Microsoft.ServiceBus.Channels.ConnectionOrientedTransportBindingElement.MaxPendingConnections">
      <summary>Gets or sets the maximum number of connections awaiting dispatch on the service.</summary>
      <returns>The maximum number of inbound connections awaiting dispatch on the service. The default value is 10.</returns>
      <exception cref="ArguementOutOfRangeException">The value is less than or equal to zero.</exception>
    </member>
    <member name="P:Microsoft.ServiceBus.Channels.ConnectionOrientedTransportBindingElement.TransferMode">
      <summary>Gets or sets a value that specifies whether the messages are buffered or streamed with the connection-oriented transport.</summary>
      <returns>Returns a <see cref="T:System.ServiceModel.TransferMode" /> which indicates whether a channel uses streamed or buffered modes of message transfer. The default is Buffered.</returns>
      <exception cref="ArguementOutOfRangeException">The value is not a valid TransferMode.</exception>
    </member>
    <member name="T:Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2">
      <typeparam name="TKey"></typeparam>
      <typeparam name="TValue"></typeparam>
    </member>
    <member name="M:Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2.#ctor(System.Collections.Generic.IDictionary{`0,`1})"></member>
    <member name="M:Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2.ContainsKey(`0)"></member>
    <member name="P:Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2.Count"></member>
    <member name="P:Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2.Dictionary"></member>
    <member name="M:Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2.GetEnumerator"></member>
    <member name="P:Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2.Item(`0)"></member>
    <member name="P:Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2.Keys"></member>
    <member name="M:Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2.System#Collections#Generic#ICollection{T}#Add(System.Collections.Generic.KeyValuePair{`0,`1})"></member>
    <member name="M:Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2.System#Collections#Generic#ICollection{T}#Clear"></member>
    <member name="M:Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2.System#Collections#Generic#ICollection{T}#Contains(System.Collections.Generic.KeyValuePair{`0,`1})"></member>
    <member name="M:Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2.System#Collections#Generic#ICollection{T}#CopyTo(System.Collections.Generic.KeyValuePair{`0,`1}[],System.Int32)"></member>
    <member name="P:Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2.System#Collections#Generic#ICollection{T}#IsReadOnly"></member>
    <member name="M:Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2.System#Collections#Generic#ICollection{T}#Remove(System.Collections.Generic.KeyValuePair{`0,`1})"></member>
    <member name="M:Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2.System#Collections#Generic#IDictionary{TKey@TValue}#Add(`0,`1)"></member>
    <member name="P:Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2.System#Collections#Generic#IDictionary{TKey@TValue}#Item(`0)"></member>
    <member name="P:Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2.System#Collections#Generic#IDictionary{TKey@TValue}#Keys"></member>
    <member name="M:Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2.System#Collections#Generic#IDictionary{TKey@TValue}#Remove(`0)"></member>
    <member name="P:Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2.System#Collections#Generic#IDictionary{TKey@TValue}#Values"></member>
    <member name="M:Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2.System#Collections#ICollection#CopyTo(System.Array,System.Int32)"></member>
    <member name="P:Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2.System#Collections#ICollection#IsSynchronized"></member>
    <member name="P:Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2.System#Collections#ICollection#SyncRoot"></member>
    <member name="M:Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2.System#Collections#IDictionary#Add(System.Object,System.Object)"></member>
    <member name="M:Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2.System#Collections#IDictionary#Clear"></member>
    <member name="M:Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2.System#Collections#IDictionary#Contains(System.Object)"></member>
    <member name="M:Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2.System#Collections#IDictionary#GetEnumerator"></member>
    <member name="P:Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2.System#Collections#IDictionary#IsFixedSize"></member>
    <member name="P:Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2.System#Collections#IDictionary#IsReadOnly"></member>
    <member name="P:Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2.System#Collections#IDictionary#Item(System.Object)"></member>
    <member name="P:Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2.System#Collections#IDictionary#Keys"></member>
    <member name="M:Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2.System#Collections#IDictionary#Remove(System.Object)"></member>
    <member name="P:Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2.System#Collections#IDictionary#Values"></member>
    <member name="M:Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2.System#Collections#IEnumerable#GetEnumerator"></member>
    <member name="M:Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2.TryGetValue(`0,`1@)"></member>
    <member name="P:Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2.Values"></member>
    <member name="T:Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2.KeyCollection"></member>
    <member name="M:Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2.KeyCollection.CopyTo(`0[],System.Int32)"></member>
    <member name="P:Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2.KeyCollection.Count"></member>
    <member name="M:Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2.KeyCollection.GetEnumerator"></member>
    <member name="M:Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2.KeyCollection.System#Collections#Generic#ICollection{T}#Add(`0)"></member>
    <member name="M:Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2.KeyCollection.System#Collections#Generic#ICollection{T}#Clear"></member>
    <member name="M:Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2.KeyCollection.System#Collections#Generic#ICollection{T}#Contains(`0)"></member>
    <member name="P:Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2.KeyCollection.System#Collections#Generic#ICollection{T}#IsReadOnly"></member>
    <member name="M:Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2.KeyCollection.System#Collections#Generic#ICollection{T}#Remove(`0)"></member>
    <member name="M:Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2.KeyCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)"></member>
    <member name="P:Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2.KeyCollection.System#Collections#ICollection#IsSynchronized"></member>
    <member name="P:Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2.KeyCollection.System#Collections#ICollection#SyncRoot"></member>
    <member name="M:Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2.KeyCollection.System#Collections#IEnumerable#GetEnumerator"></member>
    <member name="T:Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2.ValueCollection"></member>
    <member name="M:Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2.ValueCollection.CopyTo(`1[],System.Int32)"></member>
    <member name="P:Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2.ValueCollection.Count"></member>
    <member name="M:Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2.ValueCollection.GetEnumerator"></member>
    <member name="M:Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2.ValueCollection.System#Collections#Generic#ICollection{T}#Add(`1)"></member>
    <member name="M:Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2.ValueCollection.System#Collections#Generic#ICollection{T}#Clear"></member>
    <member name="M:Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2.ValueCollection.System#Collections#Generic#ICollection{T}#Contains(`1)"></member>
    <member name="P:Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2.ValueCollection.System#Collections#Generic#ICollection{T}#IsReadOnly"></member>
    <member name="M:Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2.ValueCollection.System#Collections#Generic#ICollection{T}#Remove(`1)"></member>
    <member name="M:Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2.ValueCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)"></member>
    <member name="P:Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2.ValueCollection.System#Collections#ICollection#IsSynchronized"></member>
    <member name="P:Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2.ValueCollection.System#Collections#ICollection#SyncRoot"></member>
    <member name="M:Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2.ValueCollection.System#Collections#IEnumerable#GetEnumerator"></member>
    <member name="T:Microsoft.ServiceBus.Configuration.AddressConfigurationElement">
      <summary>Represents an address configuration.</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Configuration.AddressConfigurationElement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.Configuration.AddressConfigurationElement" /> class.</summary>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.AddressConfigurationElement.Value">
      <summary>Gets or sets the URI of the address.</summary>
      <returns>The URI of the address.</returns>
    </member>
    <member name="T:Microsoft.ServiceBus.Configuration.AddressConfigurationElementCollection">
      <summary>Represents a collection of elements in address configuration.</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Configuration.AddressConfigurationElementCollection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.Configuration.AddressConfigurationElementCollection" /> class.</summary>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.AddressConfigurationElementCollection.Addresses">
      <summary>Gets the addresses of the elements in the collection.</summary>
      <returns>The addresses of the elements in the collection.</returns>
    </member>
    <member name="T:Microsoft.ServiceBus.Configuration.BasicHttpRelayBindingCollectionElement">
      <summary>Represents a configuration section that holds a collection of <see cref="T:Microsoft.ServiceBus.Configuration.BasicHttpRelayBindingElement" /> instances.</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Configuration.BasicHttpRelayBindingCollectionElement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.Configuration.BasicHttpRelayBindingCollectionElement" /> class.</summary>
    </member>
    <member name="T:Microsoft.ServiceBus.Configuration.BasicHttpRelayBindingElement">
      <summary>Represents a configuration element that specifies a binding used to communicate with WS-I Basic Profile 1.1-conformant Web Services like ASMX-based services or to accept messages from ASMX-based clients through the Windows Azure Service Bus.</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Configuration.BasicHttpRelayBindingElement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.Configuration.BasicHttpRelayBindingElement" /> class.</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Configuration.BasicHttpRelayBindingElement.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.Configuration.BasicHttpRelayBindingElement" /> class using the specified name.</summary>
      <param name="name">The name of the binding element.</param>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.BasicHttpRelayBindingElement.AllowCookies">
      <summary>Gets or sets a Boolean value that indicates whether the client accepts cookies and propagates them on future requests.</summary>
      <returns>true if the client accepts cookies and propagates them on future requests; otherwise, false. The default value is false.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.BasicHttpRelayBindingElement.BindingElementType">
      <summary>Gets the type of this binding element.</summary>
      <returns>Returns a <see cref="T:System.Type" /> that contains the binding element type.</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.Configuration.BasicHttpRelayBindingElement.InitializeFrom(System.ServiceModel.Channels.Binding)">
      <summary>Initializes this binding configuration element with the content of the specified binding collection.</summary>
      <param name="binding">A collection of binding elements.</param>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.BasicHttpRelayBindingElement.IsDynamic">
      <summary>Gets or sets whether the binding element is dynamic.</summary>
      <returns>true if the binding element is dynamic; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.BasicHttpRelayBindingElement.MaxBufferPoolSize">
      <summary>Gets or sets the maximum size for a buffer pool that stores messages processed by the binding.</summary>
      <returns>Returns an <see cref="T:System.Int64" /> that contains the buffer pool size. The default value is 512*1024 bytes. The minimum value is 0.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.BasicHttpRelayBindingElement.MaxBufferSize">
      <summary>Gets or sets the maximum size of a buffer that stores messages while they are processed for an endpoint configured with this binding.</summary>
      <returns>Returns the maximum buffer size. The default value is 65,536 bytes. The minimum value is 1 byte.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.BasicHttpRelayBindingElement.MaxReceivedMessageSize">
      <summary>Gets or sets the maximum message size, in bytes, including headers, for a message that can be received on a channel configured with this binding.</summary>
      <returns>The maximum received message size. The default value is 65,536 bytes. The minimum value is 1 byte.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.BasicHttpRelayBindingElement.MessageEncoding">
      <summary>Gets or sets the messaging encoding that indicates whether MTOM or text/XML is used to encode the SOAP message.</summary>
      <returns>Returns a <see cref="T:System.ServiceModel.WSMessageEncoding" /> that contains either Text/XML or MTOM. The default value is Text.</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.Configuration.BasicHttpRelayBindingElement.OnApplyConfiguration(System.ServiceModel.Channels.Binding)">
      <summary>Applies the settings of this configuration element to the specified binding.</summary>
      <param name="binding">The binding to update the settings of.</param>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.BasicHttpRelayBindingElement.Properties">
      <summary>Gets a collection of objects that can be attributes or configuration element objects of this binding configuration element.</summary>
      <returns>Returns a <see cref="T:System.Configuration.ConfigurationPropertyCollection" /> that contains the properties of the current instance.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.BasicHttpRelayBindingElement.ProxyAddress">
      <summary>Gets or sets the URI that describes the address of the HTTP proxy.</summary>
      <returns>Returns a <see cref="T:System.Uri" /> that contains the URI. The default is null.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.BasicHttpRelayBindingElement.ReaderQuotas">
      <summary>Gets or sets an XML value that places constraints on the complexity of SOAP messages that can be processed by endpoints configured with this binding.</summary>
      <returns>Returns a <see cref="T:Microsoft.ServiceBus.Configuration.XmlDictionaryReaderQuotasElement" /> that contains the reader quotas.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.BasicHttpRelayBindingElement.Security">
      <summary>Gets the type of security to be used for the binding.</summary>
      <returns>Returns a <see cref="T:Microsoft.ServiceBus.Configuration.BasicHttpRelaySecurityElement" /> that specifies the type of security to be used with the binding. The default value is None.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.BasicHttpRelayBindingElement.TextEncoding">
      <summary>Gets or sets the character set encoding to be used for emitting messages on the binding.</summary>
      <returns>Returns a <see cref="T:System.Text.Encoding" /> that contains the text encoding. The default value is UTF8.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.BasicHttpRelayBindingElement.TransferMode">
      <summary>Gets or sets whether messages are buffered or streamed on a request or response.</summary>
      <returns>Returns a <see cref="T:System.ServiceModel.TransferMode" /> that contains the transfer mode. The default value is TransferMode.Buffered.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.BasicHttpRelayBindingElement.UseDefaultWebProxy">
      <summary>Gets or sets a value that indicates whether the auto-configured HTTP proxy of the system should be used, if available.</summary>
      <returns>true to use the http proxy; otherwise, false. The default value is true.</returns>
    </member>
    <member name="T:Microsoft.ServiceBus.Configuration.BasicHttpRelayMessageSecurityElement">
      <summary>A configuration element that configures SOAP message security.</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Configuration.BasicHttpRelayMessageSecurityElement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.Configuration.BasicHttpRelayMessageSecurityElement" /> class.</summary>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.BasicHttpRelayMessageSecurityElement.AlgorithmSuite">
      <summary>Gets or sets the security algorithm to use with the <see cref="T:Microsoft.ServiceBus.Configuration.BasicHttpRelayMessageSecurityElement" /> class.</summary>
      <returns>Returns a <see cref="T:System.ServiceModel.Security.SecurityAlgorithmSuite" /> that contains the security algorithm. The default is Basic256.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.BasicHttpRelayMessageSecurityElement.ClientCredentialType">
      <summary>Gets or sets the type of client credential used for client authentication.</summary>
      <returns>Returns a <see cref="T:System.ServiceModel.BasicHttpMessageCredentialType" /> that contains the credentials. The default is UserName.</returns>
    </member>
    <member name="T:Microsoft.ServiceBus.Configuration.BasicHttpRelaySecurityElement">
      <summary>Represents a configuration element that configures the security for a basic HTTP relay binding.</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Configuration.BasicHttpRelaySecurityElement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.Configuration.BasicHttpRelaySecurityElement" /> class.</summary>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.BasicHttpRelaySecurityElement.Message">
      <summary>Gets a Configuration element that specifies the message-level security settings for a <see cref="T:Microsoft.ServiceBus.BasicHttpRelayBinding" />.</summary>
      <returns>Returns a <see cref="T:Microsoft.ServiceBus.Configuration.BasicHttpRelayMessageSecurityElement" /> that contains the security settings.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.BasicHttpRelaySecurityElement.Mode">
      <summary>Gets or sets the security mode for a <see cref="T:Microsoft.ServiceBus.BasicHttpRelayBinding" />.</summary>
      <returns>Returns a value from the <see cref="T:Microsoft.ServiceBus.EndToEndBasicHttpSecurityMode" /> enumeration. The default value is none.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.BasicHttpRelaySecurityElement.RelayClientAuthenticationType">
      <summary>Gets or sets the authentication type specified in this configuration element.</summary>
      <returns>Returns a value from <see cref="T:Microsoft.ServiceBus.RelayClientAuthenticationType" /> that contains the type of authentication to be used by binding elements the current instance is applied to.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.BasicHttpRelaySecurityElement.Transport">
      <summary>Gets a configuration element that specifies the transport-level security settings for a <see cref="T:Microsoft.ServiceBus.BasicHttpRelayBinding" /> binding.</summary>
      <returns>Returns a <see cref="T:Microsoft.ServiceBus.Configuration.HttpRelayTransportSecurityElement" /> that contains properties that control authentication parameters for the HTTP transport.</returns>
    </member>
    <member name="T:Microsoft.ServiceBus.Configuration.ConnectionOrientedTransportElement">
      <summary>Represents the configuration element that provides additional configuration settings to connection-oriented transport binding elements, such as TCP and named pipes.</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Configuration.ConnectionOrientedTransportElement.ApplyConfiguration(System.ServiceModel.Channels.BindingElement)">
      <summary>Applies the settings of this configuration element to the specified <see cref="T:System.ServiceModel.Channels.BindingElement" />.</summary>
      <param name="bindingElement">The binding element to update the settings of.</param>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.ConnectionOrientedTransportElement.ChannelInitializationTimeout">
      <summary>Gets or sets the maximum time the channel can be in the initialization status before being disconnected.</summary>
      <returns>The maximum time the channel can be in the initialization status before being disconnected.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.ConnectionOrientedTransportElement.ConnectionBufferSize">
      <summary>Gets or sets the size of the buffer used to transmit a part of the serialized message on the wire from the client or service.</summary>
      <returns>Returns a <see cref="T:System.Int32" /> that contains the size of the buffer used to transmit a part of the serialized message on the wire from the client or service. The default value is 8K.</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.Configuration.ConnectionOrientedTransportElement.CopyFrom(System.ServiceModel.Configuration.ServiceModelExtensionElement)">
      <summary>Copies the content of the specified configuration element to this configuration element.</summary>
      <param name="from">The configuration element to be copied.</param>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.ConnectionOrientedTransportElement.HostNameComparisonMode">
      <summary>Gets or sets a value that indicates whether the hostname is used to reach the service when matching on the URI.</summary>
      <returns>A valid HostnameComparisonMode value that indicates whether the hostname is included when routing incoming requests to an endpoint URI. The default value is StrongWildcard, which ignores the hostname in the match.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.ConnectionOrientedTransportElement.MaxBufferSize">
      <summary>Gets or sets the maximum size of the buffer to use.</summary>
      <returns>The maximum number of bytes that are used to buffer incoming messages in memory. The default value is 65,536 bytes.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.ConnectionOrientedTransportElement.MaxOutputDelay">
      <summary>Gets or sets the maximum interval of time that a part of a message or a full message can remain buffered in memory before being sent out.</summary>
      <returns>The maximum interval of time that a part of a message or a full message can remain buffered in memory before being sent out. The default value is 2 seconds.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.ConnectionOrientedTransportElement.MaxPendingAccepts">
      <summary>Gets or sets the maximum number of pending asynchronous accept threads that are available for processing incoming connections on the service.</summary>
      <returns>The maximum number of pending messages the service can accept. The default value is 1.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.ConnectionOrientedTransportElement.MaxPendingConnections">
      <summary>Gets or sets the maximum number of pending connections.</summary>
      <returns>The maximum number of pending connections.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.ConnectionOrientedTransportElement.Properties">
      <summary>Gets a ConfigurationPropertyCollection instance that contains a collection of ConfigurationProperty objects that can be attributes or ConfigurationElement objects of this configuration element.</summary>
      <returns>Returns a <see cref="T:System.Configuration.ConfigurationPropertyCollection" /> instance that contains a collection of ConfigurationProperty objects that can be attributes or ConfigurationElement objects of this configuration element.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.ConnectionOrientedTransportElement.TransferMode">
      <summary>Gets or sets a value that specifies whether the messages are buffered or streamed with the connection-oriented transport.</summary>
      <returns>Returns a valid <see cref="T:System.ServiceModel.TransferMode" /> value that specifies whether a channel uses streamed or buffered modes of message transfer. The default is Buffered.</returns>
    </member>
    <member name="T:Microsoft.ServiceBus.Configuration.ConnectionStatusElement">
      <summary>Reads a configuration element that describes the connection status.</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Configuration.ConnectionStatusElement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.Configuration.ConnectionStatusElement" /> class.</summary>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.ConnectionStatusElement.BehaviorType">
      <summary>Gets the type of behavior.</summary>
      <returns>Returns a <see cref="T:System.Type" /> that contains the behavior type.</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.Configuration.ConnectionStatusElement.CreateBehavior">
      <summary>Creates a behavior extension based on the current configuration settings.</summary>
      <returns>Returns an <see cref="T:System.Object" /> that contains the behavior extension.</returns>
    </member>
    <member name="T:Microsoft.ServiceBus.Configuration.HttpRelayTransportElement">
      <summary>Represents a configuration element that specifies an HTTP transport for transmitting SOAP messages.</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Configuration.HttpRelayTransportElement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.Configuration.HttpRelayTransportElement" /> class.</summary>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.HttpRelayTransportElement.AllowCookies">
      <summary>Gets or sets a value from the configuration file that indicates whether the client accepts cookies and propagates them on future requests.</summary>
      <returns>true if cookies are allowed; otherwise, false. The default is false.</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.Configuration.HttpRelayTransportElement.ApplyConfiguration(System.ServiceModel.Channels.BindingElement)">
      <summary>Applies the settings of this configuration element to the specified binding element.</summary>
      <param name="bindingElement">The binding element to update the settings of.</param>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.HttpRelayTransportElement.BindingElementType">
      <summary>Gets the type of binding. (Overrides BindingElementExtensionElement.BindingElementType.)</summary>
      <returns>Returns a <see cref="T:System.Type" /> that contains the binding type.</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.Configuration.HttpRelayTransportElement.CopyFrom(System.ServiceModel.Configuration.ServiceModelExtensionElement)">
      <summary>Copies the properties of the specified extension element to this configuration element.</summary>
      <param name="from">The extension element whose properties to copy.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Configuration.HttpRelayTransportElement.CreateDefaultBindingElement">
      <summary>Creates a binding element from the settings in this configuration element.</summary>
      <returns>Returns a <see cref="T:System.ServiceModel.Channels.TransportBindingElement" /> that contains the default binding element.</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.Configuration.HttpRelayTransportElement.InitializeFrom(System.ServiceModel.Channels.BindingElement)">
      <summary>Initializes this binding configuration element with the content of the specified binding element.</summary>
      <param name="bindingElement">The binding element to initialize from.</param>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.HttpRelayTransportElement.IsDynamic">
      <summary>Gets or sets whether the relay binding is dynamic.</summary>
      <returns>true if the relay binding is dynamic; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.HttpRelayTransportElement.KeepAliveEnabled">
      <summary>Gets or sets a Boolean value from the configuration file that indicates whether to make a persistent connection to the internet resource.</summary>
      <returns>true if a persistent connection to the internet resource is maintained; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.HttpRelayTransportElement.MaxBufferSize">
      <summary>Gets or sets the maximum size of the buffer pool from the configuration file.</summary>
      <returns>Returns the maximum buffer size. The default value is 65,536.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.HttpRelayTransportElement.Properties">
      <summary>Gets a <see cref="T:System.Configuration.ConfigurationPropertyCollection" /> instance that contains a collection of ConfigurationProperty objects that can be attributes or ConfigurationElement objects of this configuration element. (Overrides TransportElement.Properties.)</summary>
      <returns>Returns a <see cref="T:System.Configuration.ConfigurationPropertyCollection" /> that contains the properties of the current instance.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.HttpRelayTransportElement.ProxyAddress">
      <summary>Gets or sets a URI in the configuration file that contains the address of the proxy to use for HTTP requests.</summary>
      <returns>Returns a <see cref="T:System.Uri" /> that contains the URI. The default is null.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.HttpRelayTransportElement.ProxyAuthenticationScheme">
      <summary>Gets or sets the authentication scheme used to authenticate client requests that are processed by the HTTP proxy.</summary>
      <returns>The authentication scheme used to authenticate client requests that are processed by the HTTP proxy.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.HttpRelayTransportElement.RelayClientAuthenticationType">
      <summary>Gets or sets the relay client authentication type stored in the configuration file.</summary>
      <returns>Returns a <see cref="T:Microsoft.ServiceBus.RelayClientAuthenticationType" />.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.HttpRelayTransportElement.TransferMode">
      <summary>Gets or sets a value from the configuration file that specifies whether messages are buffered or streamed on a request or response.</summary>
      <returns>Returns a <see cref="T:System.ServiceModel.TransferMode" /> that specifies whether messages are buffered or streamed on a request or response. By default, the HTTP, TCP/IP, and named pipe transports use buffered message transfers.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.HttpRelayTransportElement.UseDefaultWebProxy">
      <summary>Gets or sets a value from the configuration file that indicates whether the machine-wide proxy settings are used rather than the user-specific settings.</summary>
      <returns>true if the System.Net default proxy settings are used; otherwise, false. The default is true.</returns>
    </member>
    <member name="T:Microsoft.ServiceBus.Configuration.HttpRelayTransportSecurityElement">
      <summary>Represents a configuration element that controls authentication parameters for the HTTP transport. This class cannot be inherited.</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Configuration.HttpRelayTransportSecurityElement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.Configuration.HttpRelayTransportSecurityElement" /> class.</summary>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.HttpRelayTransportSecurityElement.ProxyCredentialType">
      <summary>Gets or sets from the configuration file the type of client credential to be used for authentication against the proxy.</summary>
      <returns>Returns a <see cref="T:System.ServiceModel.HttpProxyCredentialType" /> that contains the proxy type.</returns>
    </member>
    <member name="T:Microsoft.ServiceBus.Configuration.HttpsRelayTransportElement">
      <summary>Represents the configuration element that specifies an HTTPS transport for transmitting SOAP messages through the Windows Azure Service Bus.</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Configuration.HttpsRelayTransportElement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.Configuration.HttpsRelayTransportElement" /> class.</summary>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.HttpsRelayTransportElement.BindingElementType">
      <summary>Gets the type of the binding element.</summary>
      <returns>The type of the binding element.</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.Configuration.HttpsRelayTransportElement.CreateDefaultBindingElement">
      <summary>Creates a binding element from settings in this configuration element.</summary>
      <returns>Returns a <see cref="T:System.ServiceModel.Channels.TransportBindingElement" /> whose properties are copied from the settings in this configuration element.</returns>
    </member>
    <member name="T:Microsoft.ServiceBus.Configuration.IssuerElement">
      <summary>A configuration element that describes an issuer of a token for the Windows Azure Service Bus.</summary>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.IssuerElement.Address">
      <summary>Gets or sets the URI address of the token issuer.</summary>
      <returns>The URI address of the token issuer.</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.Configuration.IssuerElement.CopyFrom(System.Configuration.ConfigurationElement)">
      <summary>Copies the contents of the specified configuration element to this configuration element.</summary>
      <param name="from">The configuration element to copy the contents from.</param>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.IssuerElement.Properties">
      <summary>Gets the collection of properties contained in this configuration element.</summary>
      <returns>The collection of properties contained in this configuration element.</returns>
    </member>
    <member name="T:Microsoft.ServiceBus.Configuration.MessageSecurityOverRelayConnectionElement">
      <summary>A configuration element that describes message security options over a relayed connection through the Windows Azure Service Bus.</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Configuration.MessageSecurityOverRelayConnectionElement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.Configuration.MessageSecurityOverRelayConnectionElement" /> class.</summary>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.MessageSecurityOverRelayConnectionElement.AlgorithmSuite">
      <summary>Gets or sets from the configuration file the message encryption and key-wrap algorithms used to secure messages.</summary>
      <returns>Returns a <see cref="T:System.ServiceModel.Security.SecurityAlgorithmSuite" /> that contains the message encryption and key-wrap algorithms. The default is Basic256, which specifies 256-bit Advanced Encryption Standard (AES) as the symmetric encryption algorithm.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.MessageSecurityOverRelayConnectionElement.ClientCredentialType">
      <summary>Gets or sets from the configuration file the type of credential to be used when performing client authentication using message-based security or TransportWithMessageCredential.</summary>
      <returns>Returns a <see cref="T:System.ServiceModel.MessageCredentialType" /> that contains the type of credential. The default is Windows.</returns>
    </member>
    <member name="T:Microsoft.ServiceBus.Configuration.MessageSecurityOverRelayHttpElement">
      <summary>A configuration element that describes the message security over the Windows Azure Service Bus relay, using an HTTP transport mechanism.</summary>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.MessageSecurityOverRelayHttpElement.AlgorithmSuite">
      <summary>Gets or sets from the configuration file the message encryption and key-wrap algorithms used to secure an HTTP message.</summary>
      <returns>The message encryption and key-wrap algorithms used to secure an HTTP message.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.MessageSecurityOverRelayHttpElement.ClientCredentialType">
      <summary>Gets or sets from the configuration file the type of credential to be used when performing client authentication using message-based security or TransportWithMessageCredential.</summary>
      <returns>Returns a <see cref="T:System.ServiceModel.MessageCredentialType" /> that contains the message credential type.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.MessageSecurityOverRelayHttpElement.NegotiateServiceCredential">
      <summary>Gets or sets from the configuration file a Boolean value that specifies whether the service credential is provisioned at the client out-of-band, or is obtained from the service to the client through a process of negotiation.</summary>
      <returns>true if the service credential is provisioned at the client out-of-band, or is obtained from the service to the client through a process of negotiation; otherwise, false.</returns>
    </member>
    <member name="T:Microsoft.ServiceBus.Configuration.MessageSecurityOverRelayOnewayElement">
      <summary>A configuration element that describes the message security for a one-way message to the Windows Azure Service Bus relay.</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Configuration.MessageSecurityOverRelayOnewayElement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.Configuration.MessageSecurityOverRelayOnewayElement" /> class.</summary>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.MessageSecurityOverRelayOnewayElement.AlgorithmSuite">
      <summary>Gets or sets from the configuration file the message encryption and key-wrap algorithms used to secure a one-way message.</summary>
      <returns>Returns a <see cref="T:System.ServiceModel.Security.SecurityAlgorithmSuite" /> that contains the algorithm suite. The default is Base256.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.MessageSecurityOverRelayOnewayElement.ClientCredentialType">
      <summary>Gets or sets from the configuration file the type of credential to be used when performing client authentication using message-based security or TransportWithMessageCredential.</summary>
      <returns>Returns a <see cref="T:System.ServiceModel.MessageCredentialType" /> that contains the message credential type. The default is Windows.</returns>
    </member>
    <member name="T:Microsoft.ServiceBus.Configuration.NetEventRelayBindingCollectionElement">
      <summary>Represents a configuration element that holds a collection of <see cref="T:Microsoft.ServiceBus.Configuration.NetEventRelayBindingElement" /> instances.</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Configuration.NetEventRelayBindingCollectionElement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.Configuration.NetEventRelayBindingCollectionElement" /> class.</summary>
    </member>
    <member name="T:Microsoft.ServiceBus.Configuration.NetEventRelayBindingElement">
      <summary>A configuration element that describes configuration settings for the <see cref="T:Microsoft.ServiceBus.NetEventRelayBinding" />.</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Configuration.NetEventRelayBindingElement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.Configuration.NetEventRelayBindingElement" /> class.</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Configuration.NetEventRelayBindingElement.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.Configuration.NetEventRelayBindingElement" /> class, using the specified name.</summary>
      <param name="name">The binding name set in the configuration.</param>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.NetEventRelayBindingElement.BindingElementType">
      <summary>Gets the type of binding that this configuration element represents.</summary>
      <returns>Returns a <see cref="T:System.Type" /> that contains the binding type, which is the type of <see cref="T:Microsoft.ServiceBus.NetEventRelayBinding" />.</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.Configuration.NetEventRelayBindingElement.InitializeFrom(System.ServiceModel.Channels.Binding)">
      <summary>Initializes the contents of this XML configuration element from the property values of a specified binding.</summary>
      <param name="binding">The binding to copy the settings from.</param>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.NetEventRelayBindingElement.ListenBacklog">
      <summary>Gets or sets the maximum number of queued connection requests that can be pending.</summary>
      <returns>Returns the maximum number of queued connection requests that can be pending. The default is 10.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.NetEventRelayBindingElement.MaxBufferPoolSize">
      <summary>Gets or sets the maximum size allowed for a buffer pool that stores messages processed by the binding.</summary>
      <returns>Returns the maximum size allowed for a buffer pool that stores messages processed by the binding. The default value is 65,536 bytes.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.NetEventRelayBindingElement.MaxBufferSize">
      <summary>Gets or sets the maximum size, in bytes, of the buffer used to store messages in memory.</summary>
      <returns>Returns the maximum size, in bytes, of the buffer used to store messages in memory. The default value is 65,536 bytes.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.NetEventRelayBindingElement.MaxConnections">
      <summary>Gets or sets the maximum number of connections to be pooled for subsequent reuse on the client and the maximum number of connections allowed to be pending dispatch on the server.</summary>
      <returns>On the client, returns the maximum number of connections to be pooled for subsequent reuse; on the server, returns the maximum number of connections allowed to be pending dispatch.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.NetEventRelayBindingElement.MaxReceivedMessageSize">
      <summary>Gets or sets the maximum size for a received message that is processed by the binding.</summary>
      <returns>Returns the maximum size, in bytes, for a received message that is processed by the binding. The default value is 65,536 bytes.</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.Configuration.NetEventRelayBindingElement.OnApplyConfiguration(System.ServiceModel.Channels.Binding)">
      <summary>Applies the settings of this configuration element to the specified binding.</summary>
      <param name="binding">The binding to update the settings of.</param>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.NetEventRelayBindingElement.Properties">
      <summary>Gets a collection that contains objects that can be attributes or configuration element objects of this binding configuration element.</summary>
      <returns>Returns a <see cref="T:System.Configuration.ConfigurationPropertyCollection" /> instance that contains a collection of ConfigurationProperty objects that can be attributes or ConfigurationElement objects of this configuration element.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.NetEventRelayBindingElement.ReaderQuotas">
      <summary>Gets or sets an XML element that contains the constraints on the complexity of SOAP messages that can be processed by endpoints configured with this binding.</summary>
      <returns>Returns a <see cref="T:Microsoft.ServiceBus.Configuration.XmlDictionaryReaderQuotasElement" /> that specifies the complexity constraints on SOAP messages.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.NetEventRelayBindingElement.Security">
      <summary>Gets a configuration element that contains the security options for an Windows Azure Service Bus net event relay binding.</summary>
      <returns>Returns a <see cref="T:Microsoft.ServiceBus.Configuration.NetOnewayRelaySecurityElement" /> that describes the security options. The default is Transport.</returns>
    </member>
    <member name="T:Microsoft.ServiceBus.Configuration.NetOnewayRelayBindingCollectionElement">
      <summary>Represents a configuration section that holds a collection of <see cref="T:Microsoft.ServiceBus.Configuration.NetOnewayRelayBindingElement" /> instances.</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Configuration.NetOnewayRelayBindingCollectionElement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.Configuration.NetOnewayRelayBindingCollectionElement" /> class.</summary>
    </member>
    <member name="T:Microsoft.ServiceBus.Configuration.NetOnewayRelayBindingElement">
      <summary>Represents a configuration element that specifies a binding for peer channel-specific TCP messaging over the Service Bus.</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Configuration.NetOnewayRelayBindingElement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.Configuration.NetOnewayRelayBindingElement" /> class.</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Configuration.NetOnewayRelayBindingElement.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.Configuration.NetOnewayRelayBindingElement" /> class using the specified name.</summary>
      <param name="name">A name that uniquely identifies this configuration element.</param>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.NetOnewayRelayBindingElement.BindingElementType">
      <summary>Gets or sets an XML value that contains the type of binding element of the current instance.</summary>
      <returns>Returns a <see cref="T:System.Type" /> that contains the type of the current instance.</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.Configuration.NetOnewayRelayBindingElement.InitializeFrom(System.ServiceModel.Channels.Binding)">
      <summary>Initializes the current instance using the content of the specified binding.</summary>
      <param name="binding">The binding.</param>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.NetOnewayRelayBindingElement.ListenBacklog">
      <summary>Gets or sets an XML value that contains the maximum number of queued connection requests that can be pending.</summary>
      <returns>Returns the maximum number of queued connection requests that can be pending. The default is 10.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.NetOnewayRelayBindingElement.MaxBufferPoolSize">
      <summary>Gets or sets an XML value that contains the maximum size allowed for a buffer pool that stores messages processed by the binding.</summary>
      <returns>Returns the maximum size allowed for a buffer pool that stores messages processed by the binding. The default value is 65,536.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.NetOnewayRelayBindingElement.MaxBufferSize">
      <summary>Gets or sets an XML value that contains the maximum size, in bytes, of the buffer used to store messages in memory.</summary>
      <returns>Returns the maximum size, in bytes, of the buffer used to store messages in memory. The default value is 65,536 bytes.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.NetOnewayRelayBindingElement.MaxConnections">
      <summary>Gets or sets an XML value that specifies the maximum number of outbound and inbound connections the service creates and accepts respectively.</summary>
      <returns>On the client, returns the maximum number of connections to be pooled for subsequent reuse; on the server, returns the maximum number of connections allowed to be pending dispatch.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.NetOnewayRelayBindingElement.MaxReceivedMessageSize">
      <summary>Gets or sets an XML value that contains the maximum size of a message that can be received on a channel configured with this binding.</summary>
      <returns>Returns maximum size, in bytes, for a message that is processed by the binding. The default value is 65,536 bytes.</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.Configuration.NetOnewayRelayBindingElement.OnApplyConfiguration(System.ServiceModel.Channels.Binding)">
      <summary>Applies the settings of this configuration element to the specified binding.</summary>
      <param name="binding">The binding to update the settings of.</param>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.NetOnewayRelayBindingElement.Properties">
      <summary>Gets a ConfigurationPropertyCollection instance that contains a collection of ConfigurationProperty objects that can be attributes or ConfigurationElement objects of this configuration element.</summary>
      <returns>Returns a <see cref="T:System.Configuration.ConfigurationPropertyCollection" /> that contains a collection of ConfigurationProperty objects that can be attributes or ConfigurationElement objects of this configuration element.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.NetOnewayRelayBindingElement.ReaderQuotas">
      <summary>Gets or sets an XML value that places a constraint on the complexity of SOAP messages that can be processed by endpoints configured with this binding.</summary>
      <returns>Returns a <see cref="T:Microsoft.ServiceBus.Configuration.XmlDictionaryReaderQuotasElement" /> that specifies the complexity constraints on SOAP messages.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.NetOnewayRelayBindingElement.Security">
      <summary>Gets an XML value that contains security elements for a Service Bus one-way TCP relay binding.</summary>
      <returns>Returns a <see cref="T:Microsoft.ServiceBus.Configuration.NetOnewayRelaySecurityElement" /> that describes the security elements.</returns>
    </member>
    <member name="T:Microsoft.ServiceBus.Configuration.NetOnewayRelaySecurityElement">
      <summary>Defines the security settings for the <see cref="T:System.ServiceModel.NetTcpBinding" /> binding in an App.config file. This class cannot be inherited.</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Configuration.NetOnewayRelaySecurityElement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.Configuration.NetOnewayRelaySecurityElement" /> class.</summary>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.NetOnewayRelaySecurityElement.Message">
      <summary>Gets the security settings for the message.</summary>
      <returns>Returns a <see cref="T:Microsoft.ServiceBus.Configuration.MessageSecurityOverRelayOnewayElement" /> that contains the message.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.NetOnewayRelaySecurityElement.Mode">
      <summary>Gets or sets the type of security that is applied.</summary>
      <returns>Returns an <see cref="T:Microsoft.ServiceBus.EndToEndSecurityMode" /> instance that contains the security mode.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.NetOnewayRelaySecurityElement.RelayClientAuthenticationType">
      <summary>Gets a value that describes whether clients of a service are required to present a security token issued by the Windows Azure Service Bus service to the Windows Azure Service Bus service when sending messages.</summary>
      <returns>Returns a <see cref="T:Microsoft.ServiceBus.RelayClientAuthenticationType" /> that contains the relay client authentication type.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.NetOnewayRelaySecurityElement.Transport">
      <summary>Gets the security settings for the transport.</summary>
      <returns>Returns a <see cref="T:Microsoft.ServiceBus.Configuration.OnewayRelayTransportSecurityElement" /> that contains the security settings.</returns>
    </member>
    <member name="T:Microsoft.ServiceBus.Configuration.NetTcpRelayBindingCollectionElement">
      <summary>Represents a configuration section that holds a collection of <see cref="T:Microsoft.ServiceBus.Configuration.NetTcpRelayBindingElement" /> instances.</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Configuration.NetTcpRelayBindingCollectionElement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.Configuration.NetTcpRelayBindingCollectionElement" /> class.</summary>
    </member>
    <member name="T:Microsoft.ServiceBus.Configuration.NetTcpRelayBindingElement">
      <summary>A configuration element that describes a secure, reliable binding suitable for cross-machine communication through the Windows Azure Service Bus relay.</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Configuration.NetTcpRelayBindingElement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.Configuration.NetTcpRelayBindingElement" /> class.</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Configuration.NetTcpRelayBindingElement.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.Configuration.NetTcpRelayBindingElement" /> class with a specified configuration name.</summary>
      <param name="name">The binding configuration name.</param>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.NetTcpRelayBindingElement.BindingElementType">
      <summary>Gets the type of this configuration element. (Overrides StandardBindingElement.BindingElementType.)</summary>
      <returns>Returns a <see cref="T:System.Type" /> that contains the configuration element type.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.NetTcpRelayBindingElement.ConnectionMode">
      <summary>Gets or sets the connection mode stored in the App.config file for this configuration.</summary>
      <returns>Returns a <see cref="T:Microsoft.ServiceBus.TcpRelayConnectionMode" /> that contains the connection mode The default is Relayed.</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.Configuration.NetTcpRelayBindingElement.InitializeFrom(System.ServiceModel.Channels.Binding)">
      <summary>Initializes the contents of this binding configuration element from the property values of a specified binding.</summary>
      <param name="binding">The binding to initialize from.</param>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.NetTcpRelayBindingElement.IsDynamic">
      <summary>Gets or sets whether the relay binding is dynamic.</summary>
      <returns>true if the relay binding is dynamic; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.NetTcpRelayBindingElement.ListenBacklog">
      <summary>Gets or sets a value in the App.config file that specifies the maximum number of channels that can wait to be accepted on the listener.</summary>
      <returns>Returns the maximum number of queued connection requests that can be pending. The default is 10.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.NetTcpRelayBindingElement.MaxBufferPoolSize">
      <summary>Gets or sets a value from the App.config file that contains the maximum size for a buffer pool that stores TCP messages processed by the binding.</summary>
      <returns>Returns the maximum size allowed for a buffer pool that stores messages processed by the binding. The default value is 65,536 bytes.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.NetTcpRelayBindingElement.MaxBufferSize">
      <summary>Gets or sets a value from the App.config file that specifies the maximum size, in bytes, of the buffer used to store messages in memory.</summary>
      <returns>The maximum size, in bytes, of the buffer used to store messages in memory.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.NetTcpRelayBindingElement.MaxConnections">
      <summary>Gets or sets a value from the App.config file that specifies the maximum number of outbound and inbound connections the service creates and accepts respectively.</summary>
      <returns>On the client, returns the maximum number of connections to be pooled for subsequent reuse; on the server, returns the maximum number of connections allowed to be pending dispatch.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.NetTcpRelayBindingElement.MaxReceivedMessageSize">
      <summary>Gets or sets a value from the App.config file that contains the maximum size of a message that can be received on a channel configured with this binding.</summary>
      <returns>Returns maximum size, in bytes, for a message that is processed by the binding. The default value is 65,536 bytes.</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.Configuration.NetTcpRelayBindingElement.OnApplyConfiguration(System.ServiceModel.Channels.Binding)">
      <summary>Applies the settings of this configuration element to the specified binding element.</summary>
      <param name="binding">The binding to update the settings of.</param>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.NetTcpRelayBindingElement.Properties">
      <summary>Gets a ConfigurationPropertyCollection instance that contains a collection of ConfigurationProperty objects that can be attributes or ConfigurationElement objects of this configuration element. (Overrides StandardBindingElement.Properties.)</summary>
      <returns>A collection of ConfigurationProperty objects that can be attributes or ConfigurationElement objects of this configuration element.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.NetTcpRelayBindingElement.ReaderQuotas">
      <summary>Gets a value from the App.config file that puts constraints on the complexity of SOAP messages that can be processed by endpoints configured with this binding.</summary>
      <returns>Returns a <see cref="T:Microsoft.ServiceBus.Configuration.XmlDictionaryReaderQuotasElement" /> that specifies the complexity constraints on SOAP messages exchanged. The default values for these constraints are provided in the following Remarks section.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.NetTcpRelayBindingElement.ReliableSession">
      <summary>Gets a configuration element that specifies whether reliable sessions are established between channel endpoints.</summary>
      <returns>Returns a <see cref="T:System.ServiceModel.Configuration.StandardBindingOptionalReliableSessionElement" /> that indicates whether a WS-RM reliable session is established between channel endpoints. The default value is false.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.NetTcpRelayBindingElement.Security">
      <summary>Gets a value from the App.config file that determines the type of security to be used with this binding.</summary>
      <returns>Returns a <see cref="T:Microsoft.ServiceBus.Configuration.NetTcpRelaySecurityElement" /> that contains the security settings for the associated binding. The default value is none.The <see cref="T:Microsoft.ServiceBus.Configuration.NetTcpRelaySecurityElement" /> you retrieve from the associated binding is created indirectly with a NetTcpRelayBinding. As such, after the binding is created, you cannot replace this object with a new object unless you also create a new binding. However, many members of WebHttpRelaySecurity can be set through security property. For more information on binding security, see the Security and Protection section. Along with the type of transport and encoding, the Security settings represent one of the three main properties that define this binding.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.NetTcpRelayBindingElement.TransferMode">
      <summary>Gets or sets a value from the App.config file that specifies whether messages are buffered or streamed or a request or response.</summary>
      <returns>Returns a <see cref="T:System.ServiceModel.TransferMode" /> that contains indicates whether the service configured with the binding uses streamed or buffered (or both) modes of message transfer. The possible values are as follows: BufferedStreamedStreamedRequestStreamedResponseThe default value is Buffered.Specifying <see cref="P:Microsoft.ServiceBus.Configuration.NetTcpRelayBindingElement.TransferMode" /> to Streamed implies both StreamedRequest and StreamedResponse.</returns>
    </member>
    <member name="T:Microsoft.ServiceBus.Configuration.NetTcpRelaySecurityElement">
      <summary>Represents a configuration element that configures the security for a net TCP service through the Windows Azure Service Bus relay.</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Configuration.NetTcpRelaySecurityElement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.Configuration.NetTcpRelaySecurityElement" /> class.</summary>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.NetTcpRelaySecurityElement.Message">
      <summary>Gets a configuration element that represents the message security settings for the <see cref="T:Microsoft.ServiceBus.NetTcpRelayBinding" />.</summary>
      <returns>Returns a <see cref="T:Microsoft.ServiceBus.Configuration.MessageSecurityOverRelayConnectionElement" /> that contains the message.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.NetTcpRelaySecurityElement.Mode">
      <summary>Gets or sets an XML value that describes whether message-level or transport-level security is used by an endpoint configured with <see cref="T:Microsoft.ServiceBus.NetTcpRelayBinding" />.</summary>
      <returns>Returns a <see cref="T:Microsoft.ServiceBus.EndToEndSecurityMode" /> that contains the security mode. The default value is Transport.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.NetTcpRelaySecurityElement.RelayClientAuthenticationType">
      <summary>Gets or sets the authentication type required for the client to present to the Windows Azure Service Bus when sending messages.</summary>
      <returns>Returns a <see cref="T:Microsoft.ServiceBus.RelayClientAuthenticationType" /> that contains the authentication type.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.NetTcpRelaySecurityElement.Transport">
      <summary>Gets the transport security setting for the <see cref="T:Microsoft.ServiceBus.NetTcpRelayBinding" />.</summary>
      <returns>Returns a <see cref="T:Microsoft.ServiceBus.Configuration.TcpRelayTransportSecurityElement" /> that contains the relay binding.</returns>
    </member>
    <member name="T:Microsoft.ServiceBus.Configuration.NonDualMessageSecurityOverRelayHttpElement">
      <summary>Represents the configuration settings for the security of a message sent using HTTP for non-duplex service contracts. This class cannot be inherited.</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Configuration.NonDualMessageSecurityOverRelayHttpElement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.Configuration.NonDualMessageSecurityOverRelayHttpElement" /> class.</summary>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.NonDualMessageSecurityOverRelayHttpElement.EstablishSecurityContext">
      <summary>Gets or sets an XML value that defines whether a Security Context was established.</summary>
      <returns>true if the context is established; otherwise, false.</returns>
    </member>
    <member name="T:Microsoft.ServiceBus.Configuration.RelayedOnewayTransportElement">
      <summary>Represents a configuration element that, when included in a custom binding, specifies a channel to transfer one-way messages through the Windows Azure Service Bus. This class cannot be inherited.</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Configuration.RelayedOnewayTransportElement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.Configuration.RelayedOnewayTransportElement" /> class.</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Configuration.RelayedOnewayTransportElement.ApplyConfiguration(System.ServiceModel.Channels.BindingElement)">
      <summary>Applies the settings from this configuration element to the specified binding element.</summary>
      <param name="bindingElement">The binding element to update the settings of.</param>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.RelayedOnewayTransportElement.BindingElementType">
      <summary>Gets the type of the current instance.</summary>
      <returns>Returns a <see cref="T:System.Type" /> that contains the type of the current instance, which is the type of <see cref="T:Microsoft.ServiceBus.RelayedOnewayTransportBindingElement" />.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.RelayedOnewayTransportElement.ConnectionMode">
      <summary>Gets or sets an XML value that describes the one-way connection mode.</summary>
      <returns>Returns a <see cref="T:Microsoft.ServiceBus.RelayedOnewayConnectionMode" /> that contains the connection mode.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.RelayedOnewayTransportElement.ConnectionPoolSettings">
      <summary>Gets or sets an XML value that describes the connection pool settings for the current instance.</summary>
      <returns>Returns a <see cref="T:Microsoft.ServiceBus.Configuration.SocketConnectionPoolSettingsElement" /> that contains the connection pool settings used by the binding element that the current instance is applied to.</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.Configuration.RelayedOnewayTransportElement.CopyFrom(System.ServiceModel.Configuration.ServiceModelExtensionElement)">
      <summary>Copies the settings from the specified configuration element to the current instance.</summary>
      <param name="from">The configuration element to copy from.</param>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.RelayedOnewayTransportElement.ListenBacklog">
      <summary>Gets or sets the maximum number of queued connection requests that can be pending.</summary>
      <returns>The maximum number of queued connection requests that can be pending.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.RelayedOnewayTransportElement.RelayClientAuthenticationType">
      <summary>Gets or sets an XML value that describes the authentication type specified in this configuration element.</summary>
      <returns>Returns a <see cref="T:Microsoft.ServiceBus.RelayClientAuthenticationType" /> that contains the type of authentication to be used by binding elements that the current instance is applied to.</returns>
    </member>
    <member name="T:Microsoft.ServiceBus.Configuration.RelayedOnewayTransportSecurityElement">
      <summary>A configuration element that controls transport security settings for the <see cref="T:Microsoft.ServiceBus.NetOnewayRelayBinding" /> and <see cref="T:Microsoft.ServiceBus.NetEventRelayBinding" /> types. This class cannot be inherited.</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Configuration.RelayedOnewayTransportSecurityElement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.Configuration.RelayedOnewayTransportSecurityElement" /> class.</summary>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.RelayedOnewayTransportSecurityElement.ProtectionLevel">
      <summary>Gets or sets the transport security protection level that is applied to messages transmitted through bindings configured with this configuration element.</summary>
      <returns>Returns a <see cref="T:System.Net.Security.ProtectionLevel" /> that contains the transport security protection level specified in this configuration element.</returns>
    </member>
    <member name="T:Microsoft.ServiceBus.Configuration.ServiceBusSectionType">
      <summary>Enumerates the service bus section type.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Configuration.ServiceBusSectionType.All">
      <summary>The All section type.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Configuration.ServiceBusSectionType.MessagingFactory">
      <summary>The Messaging Factory section type.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Configuration.ServiceBusSectionType.NamespaceManager">
      <summary>The Namespace Manager section type.</summary>
    </member>
    <member name="T:Microsoft.ServiceBus.Configuration.ServiceRegistrySettingsElement">
      <summary>Contains the settings for the AppFabric Service Bus registry.</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Configuration.ServiceRegistrySettingsElement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.Configuration.ServiceRegistrySettingsElement" /> class.</summary>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.ServiceRegistrySettingsElement.BehaviorType">
      <summary>Gets the behavior type for the service registry settings.</summary>
      <returns>The behavior type for the service registry settings.</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.Configuration.ServiceRegistrySettingsElement.CreateBehavior">
      <summary>Creates a behavior extension based on the current registry settings.</summary>
      <returns>The behavior extension based on the current registry settings.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.ServiceRegistrySettingsElement.DiscoveryMode">
      <summary>Gets or sets how the service is discovered.</summary>
      <returns>The discovery type.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.ServiceRegistrySettingsElement.DisplayName">
      <summary>Gets or sets the display name for the endpoint.</summary>
      <returns>The display name.</returns>
    </member>
    <member name="T:Microsoft.ServiceBus.Configuration.SharedAccessSignatureElement">
      <summary>Represents a shared access signature element.</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Configuration.SharedAccessSignatureElement.CopyFrom(Microsoft.ServiceBus.Configuration.SharedAccessSignatureElement)">
      <summary>Copies the specified element from this configuration element.</summary>
      <param name="source">The source to copy the contents from.</param>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.SharedAccessSignatureElement.Key">
      <summary>Gets or sets the shared access key.</summary>
      <returns>The shared access key.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.SharedAccessSignatureElement.KeyName">
      <summary>Gets or sets the shared access key name.</summary>
      <returns>The shared access key name.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.SharedAccessSignatureElement.Properties">
      <summary>Gets the collection of configuration properties.</summary>
      <returns>The collection of configuration properties.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.SharedAccessSignatureElement.TokenScope">
      <summary>Gets or sets the token scope associated with the element.</summary>
      <returns>The token scope associated with the element.</returns>
    </member>
    <member name="T:Microsoft.ServiceBus.Configuration.SharedSecretElement">
      <summary>A configuration element that specifies the credentials for a service or client endpoint that is configured to use the <see cref="F:Microsoft.ServiceBus.TransportClientCredentialType.SharedSecret" /> credential type.</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Configuration.SharedSecretElement.CopyFrom(Microsoft.ServiceBus.Configuration.SharedSecretElement)">
      <summary>Copies the contents of the specified shared secret configuration element to this configuration element.</summary>
      <param name="source">The shared secret configuration element to be copied.</param>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.SharedSecretElement.IssuerName">
      <summary>Gets or sets the issuer name.</summary>
      <returns>The issuer name.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.SharedSecretElement.IssuerSecret">
      <summary>Gets or sets the issuer secret key.</summary>
      <returns>The issuer secret key.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.SharedSecretElement.Properties">
      <summary>Gets the properties of this configuration element that contain the issuer name and the issuer secret key.</summary>
      <returns>The properties of this configuration element that contain the issuer name and the issuer secret key.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.SharedSecretElement.TokenScope">
      <summary>Gets or sets the token scope.</summary>
      <returns>The token scope.</returns>
    </member>
    <member name="T:Microsoft.ServiceBus.Configuration.SocketConnectionPoolSettingsElement">
      <summary>Represents a configuration element that specifies additional connection pool settings for a TCP transport. This class cannot be inherited.</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Configuration.SocketConnectionPoolSettingsElement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.Configuration.SocketConnectionPoolSettingsElement" /> class.</summary>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.SocketConnectionPoolSettingsElement.GroupName">
      <summary>Gets or sets the name of the connection pool used for outgoing channels.</summary>
      <returns>Returns the name of the connection pool used for outgoing channels.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.SocketConnectionPoolSettingsElement.IdleTimeout">
      <summary>Gets or sets the maximum time that the connection can be idle before being disconnected.</summary>
      <returns>Returns a positive <see cref="T:System.TimeSpan" /> that specifies the maximum time that the connection can be idle before being disconnected. The default is 00:02:00.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.SocketConnectionPoolSettingsElement.LeaseTimeout">
      <summary>Gets or sets the time span after which an active connection is closed.</summary>
      <returns>Returns a <see cref="T:System.TimeSpan" /> that indicates the duration after which the TCP connection is closed.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.SocketConnectionPoolSettingsElement.MaxOutboundConnectionsPerEndpoint">
      <summary>Gets or sets the maximum number of connections to a remote endpoint initiated by the service.</summary>
      <returns>Returns the maximum number of connections to a remote endpoint initiated by the service. The default is 10.</returns>
    </member>
    <member name="T:Microsoft.ServiceBus.Configuration.StsUriElement">
      <summary>Represents the security token service of the URI element.</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Configuration.StsUriElement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.Configuration.StsUriElement" /> class.</summary>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.StsUriElement.Value">
      <summary>Gets or sets the value of the element.</summary>
      <returns>The value of the element.</returns>
    </member>
    <member name="T:Microsoft.ServiceBus.Configuration.StsUriElementCollection">
      <summary>Represents a URI element collection for the Security Token Service.</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Configuration.StsUriElementCollection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.Configuration.StsUriElementCollection" /> class.</summary>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.StsUriElementCollection.Addresses">
      <summary>Gets the addresses of the element in the collection.</summary>
      <returns>The addresses of the element in the collection.</returns>
    </member>
    <member name="T:Microsoft.ServiceBus.Configuration.TcpRelayTransportElement">
      <summary>Specifies a configuration element that causes a channel to transfer messages on the TCP transport when it is included in a custom binding. This class cannot be inherited.</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Configuration.TcpRelayTransportElement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.Configuration.TcpRelayTransportElement" /> class.</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Configuration.TcpRelayTransportElement.ApplyConfiguration(System.ServiceModel.Channels.BindingElement)">
      <summary>Applies the settings of this configuration element to the specified binding element.</summary>
      <param name="bindingElement">The binding element to update the settings of.</param>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.TcpRelayTransportElement.BindingElementType">
      <summary>Gets the type of this binding element.</summary>
      <returns>Returns a <see cref="T:System.Type" /> containing a binding element type.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.TcpRelayTransportElement.ConnectionMode">
      <summary>Gets or sets the connection mode stored in the App.config file for this configuration.</summary>
      <returns>Returns a <see cref="T:Microsoft.ServiceBus.TcpRelayConnectionMode" /> that contains the connection mode. The default setting is Relayed.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.TcpRelayTransportElement.ConnectionPoolSettings">
      <summary>Gets or sets an XML value that describes the connection pool settings for the current instance.</summary>
      <returns>Returns a <see cref="T:Microsoft.ServiceBus.Configuration.SocketConnectionPoolSettingsElement" /> that contains the connection pool settings used by the binding element that the current instance is applied to.</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.Configuration.TcpRelayTransportElement.CopyFrom(System.ServiceModel.Configuration.ServiceModelExtensionElement)">
      <summary>Copies the content of the specified configuration element to this configuration element.</summary>
      <param name="from">The configuration elements to be copied.</param>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.TcpRelayTransportElement.IsDynamic">
      <summary>Gets or sets whether the relay binding is dynamic.</summary>
      <returns>true if the relay binding is dynamic; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.TcpRelayTransportElement.ListenBacklog">
      <summary>Gets or sets an XML value containing the maximum number of queued connection requests that can be pending.</summary>
      <returns>Returns the maximum number of queued connection requests that can be pending. The default is 10.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.TcpRelayTransportElement.RelayClientAuthenticationType">
      <summary>Gets or sets an XML value that contains the relay client authentication type.</summary>
      <returns>Returns a <see cref="T:Microsoft.ServiceBus.RelayClientAuthenticationType" /> that contains the relay client authentication type. The default is RelayClientAuthenticationType.RelayAccessToken.</returns>
    </member>
    <member name="T:Microsoft.ServiceBus.Configuration.TcpRelayTransportSecurityElement">
      <summary>Represents a configuration element that configures the security for a TCP transport service through the Windows Azure Service Bus relay.</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Configuration.TcpRelayTransportSecurityElement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.Configuration.TcpRelayTransportSecurityElement" /> class.</summary>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.TcpRelayTransportSecurityElement.ProtectionLevel">
      <summary>Gets or sets an XML value containing the transport security level for a TCP relay.</summary>
      <returns>Returns a <see cref="T:System.Net.Security.ProtectionLevel" /> that contains the transport security level. The default value is EncryptAndSign.</returns>
    </member>
    <member name="T:Microsoft.ServiceBus.Configuration.TokenProviderElement">
      <summary>Represents the configuration element that specifies the token provider for the Service Bus.</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Configuration.TokenProviderElement.CopyFrom(System.ServiceModel.Configuration.ServiceModelExtensionElement)">
      <summary>Copies the contents of the specified configuration element to this configuration element.</summary>
      <param name="from">The configuration element to copy the contents from.</param>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.TokenProviderElement.Name">
      <summary>Gets the name of the specified <see cref="T:Microsoft.ServiceBus.Configuration.TokenProviderElement" /> object.</summary>
      <returns>The specified <see cref="T:Microsoft.ServiceBus.Configuration.TokenProviderElement" /> object.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.TokenProviderElement.Properties">
      <summary>Gets the collection of properties contained in the configuration element.</summary>
      <returns>The collection of properties contained in the configuration element.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.TokenProviderElement.SharedAccessSignature">
      <summary>Gets the shared access signature element.</summary>
      <returns>The shared access signature element.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.TokenProviderElement.SharedSecret">
      <summary>Gets the shared secret element contained in the token provider element.</summary>
      <returns>The shared secret element contained in the token provider element.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.TokenProviderElement.WindowsAuthentication">
      <summary>Gets the Windows authentication settings for this element.</summary>
      <returns>The Windows authentication settings for this element.</returns>
    </member>
    <member name="T:Microsoft.ServiceBus.Configuration.TokenProviderElementCollection">
      <summary>Represents a collection of elements for the token provider.</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Configuration.TokenProviderElementCollection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.Configuration.TokenProviderElementCollection" /> class.</summary>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.TokenProviderElementCollection.Item(System.String)">
      <summary>Gets an item in the collection.</summary>
      <returns>An item in the collection.</returns>
      <param name="name">The name of the item.</param>
    </member>
    <member name="T:Microsoft.ServiceBus.Configuration.TransportClientEndpointBehaviorElement">
      <summary>Represents a configuration element that specifies the behavior of a service or client endpoint for a transport on the Windows Azure Service Bus relay.</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Configuration.TransportClientEndpointBehaviorElement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.Configuration.TransportClientEndpointBehaviorElement" /> class.</summary>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.TransportClientEndpointBehaviorElement.BehaviorType">
      <summary>Gets or sets the behavior type for the transport client endpoint.</summary>
      <returns>The behavior type for the transport client endpoint.</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.Configuration.TransportClientEndpointBehaviorElement.CopyFrom(System.ServiceModel.Configuration.ServiceModelExtensionElement)">
      <summary>Copies the contents of the specified configuration element to this configuration element.</summary>
      <param name="from">The configuration element to copy the contents from.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Configuration.TransportClientEndpointBehaviorElement.CreateBehavior">
      <summary>Returns a new <see cref="T:Microsoft.ServiceBus.TransportClientEndpointBehavior" /> object with the same settings as this configuration element.</summary>
      <returns>A new <see cref="T:Microsoft.ServiceBus.TransportClientEndpointBehavior" /> object with the same settings as this configuration element.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.TransportClientEndpointBehaviorElement.Properties">
      <summary>Gets the collection of properties contained in this configuration element.</summary>
      <returns>The collection of properties contained in this configuration element.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.TransportClientEndpointBehaviorElement.TokenProvider">
      <summary>Gets or sets the token provider that is used as a binding parameter.</summary>
      <returns>The token provider used as a binding parameter.</returns>
    </member>
    <member name="T:Microsoft.ServiceBus.Configuration.WebHttpRelayBindingCollectionElement">
      <summary>Represents a configuration element that contains sub-elements that specify settings for using the <see cref="T:Microsoft.ServiceBus.WebHttpRelayBinding" /> binding.</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Configuration.WebHttpRelayBindingCollectionElement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.Configuration.WebHttpRelayBindingCollectionElement" /> class.</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Configuration.WebHttpRelayBindingCollectionElement.GetDefault">
      <summary>Gets the default binding used.</summary>
      <returns>Returns a <see cref="T:System.ServiceModel.Channels.Binding" /> that represents the default binding.</returns>
    </member>
    <member name="T:Microsoft.ServiceBus.Configuration.WebHttpRelayBindingElement">
      <summary>A binding element used to configure endpoints for an Windows Azure Service Bus relay service that responds to HTTP requests instead of SOAP messages. </summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Configuration.WebHttpRelayBindingElement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.Configuration.WebHttpRelayBindingElement" /> class.</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Configuration.WebHttpRelayBindingElement.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.Configuration.WebHttpRelayBindingElement" /> class using the specified name.</summary>
      <param name="name">The name of the new binding element.</param>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.WebHttpRelayBindingElement.AllowCookies">
      <summary>Gets or sets a value that indicates whether the client accepts cookies and propagates them on future requests.</summary>
      <returns>true if cookies are allowed; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.WebHttpRelayBindingElement.BindingElementType">
      <summary>Gets the type of binding that this configuration element represents.</summary>
      <returns>Returns a <see cref="T:System.Type" /> that contains the binding type.</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.Configuration.WebHttpRelayBindingElement.InitializeFrom(System.ServiceModel.Channels.Binding)">
      <summary>Initializes the contents of this binding configuration element from the property values of a specified binding.</summary>
      <param name="binding">The binding to update this configuration element from.</param>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.WebHttpRelayBindingElement.IsDynamic">
      <summary>Gets or sets whether the binding element is dynamic.</summary>
      <returns>true if the binding element is dynamic; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.WebHttpRelayBindingElement.MaxBufferPoolSize">
      <summary>Gets or sets the maximum amount of memory allocated for the buffer manager that manages the buffers required by endpoints that use this binding.</summary>
      <returns>Returns the maximum size, in bytes, for the pool of buffers used by an endpoint configured with this binding. The default value is 65,536 bytes.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.WebHttpRelayBindingElement.MaxBufferSize">
      <summary>Gets or sets the maximum amount of memory that is allocated for use by the manager of the message buffers that receive messages from the channel.</summary>
      <returns>Returns the maximum amount of memory, in bytes, available for use by the message buffer manager. The default value is 524,288 (0x80000) bytes.</returns>
      <exception cref="ArgumentOutOfRangeException">The value set is less than or equal to zero.</exception>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.WebHttpRelayBindingElement.MaxReceivedMessageSize">
      <summary>Gets or sets the maximum size for a message that can be processed by the binding.</summary>
      <returns>Returns the maximum size, in bytes, for a message that is processed by the binding. The default value is 65,536 bytes.</returns>
      <exception cref="ArgumentOutOfRangeException">The value is less than zero.</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.Configuration.WebHttpRelayBindingElement.OnApplyConfiguration(System.ServiceModel.Channels.Binding)">
      <summary>Applies the settings of this configuration element to the specified binding.</summary>
      <param name="binding">The binding to update the settings of.</param>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.WebHttpRelayBindingElement.Properties">
      <summary>Gets a collection of objects that can be attributes or configuration element objects of this configuration element.</summary>
      <returns>Returns a <see cref="T:System.Configuration.ConfigurationPropertyCollection" /> that contains a collection of ConfigurationProperty objects that can be attributes or ConfigurationElement objects on this configuration element.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.WebHttpRelayBindingElement.ProxyAddress">
      <summary>Gets or sets the URI address of the HTTP proxy.</summary>
      <returns>Returns a <see cref="T:System.Uri" /> that serves as the address of the HTTP proxy. The default value is null.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.WebHttpRelayBindingElement.ReaderQuotas">
      <summary>Gets or sets the configuration element that contains the constraints on the complexity of SOAP messages that can be processed by endpoints configured with this binding.</summary>
      <returns>Returns an <see cref="T:Microsoft.ServiceBus.Configuration.XmlDictionaryReaderQuotasElement" /> that contains the complexity restraints.</returns>
      <exception cref="ArgumentNullException">The valueset is null.</exception>
      <exception cref="ArgumentOutOfRangeException">The quota values of XmlDictionaryReaderQuotas are read only.</exception>
      <exception cref="ArgumentException">The quotas set must be positive.</exception>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.WebHttpRelayBindingElement.Security">
      <summary>Gets the configuration element that contains the security settings used with this binding.</summary>
      <returns>Returns a <see cref="T:Microsoft.ServiceBus.Configuration.WebHttpRelaySecurityElement" /> that contains the security settings for this binding. The default value is none.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.WebHttpRelayBindingElement.TransferMode">
      <summary>Gets or sets a value that indicates whether the service configured with the associated binding uses streamed or buffered (or both) modes of message transfer.</summary>
      <returns>Returns a <see cref="T:System.ServiceModel.TransferMode" /> that contains indicates whether the service configured with the binding uses streamed or buffered (or both) modes of message transfer. The default value is Buffered.</returns>
      <exception cref="InvalidEnumArgumentException">The value set is not a valid TransferMode value.</exception>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.WebHttpRelayBindingElement.UseDefaultWebProxy">
      <summary>Gets or sets a value that indicates whether the auto-configured HTTP proxy of the system should be used with the associated binding, if available.</summary>
      <returns>true if the auto-configured HTTP proxy of the system should be used, if available; otherwise, false. The default value is true.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.WebHttpRelayBindingElement.WriteEncoding">
      <summary>Gets or sets the character encoding that is used for the message text in the associated binding.</summary>
      <returns>Returns a <see cref="T:System.Text.Encoding" /> that indicates the character encoding that is used. The default is UTF8Encoding.</returns>
      <exception cref="ArgumentNullException">The value set is null.</exception>
    </member>
    <member name="T:Microsoft.ServiceBus.Configuration.WebHttpRelaySecurityElement">
      <summary>Represents a configuration element that configures the security for a Web HTTP service through the Windows Azure Service Bus relay.</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Configuration.WebHttpRelaySecurityElement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.Configuration.WebHttpRelaySecurityElement" /> class. </summary>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.WebHttpRelaySecurityElement.Mode">
      <summary>Gets or sets the security mode used by the binding.</summary>
      <returns>Returns a <see cref="T:Microsoft.ServiceBus.EndToEndWebHttpSecurityMode" /> that contains the end-to-end HTTP security mode used by the service endpoint.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.WebHttpRelaySecurityElement.RelayClientAuthenticationType">
      <summary>Gets or sets the relay client authentication type used by the service client.</summary>
      <returns>Returns a <see cref="T:Microsoft.ServiceBus.RelayClientAuthenticationType" /> that contains the authentication type.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.WebHttpRelaySecurityElement.Transport">
      <summary>Gets a configuration element that indicates the transport-level security settings for a service endpoint configured to receive HTTP requests.</summary>
      <returns>Returns a <see cref="T:Microsoft.ServiceBus.Configuration.HttpRelayTransportSecurityElement" /> that contains the security settings.</returns>
    </member>
    <member name="T:Microsoft.ServiceBus.Configuration.WindowsElement">
      <summary>Represents the windows element for the configuration of the service bus.</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Configuration.WindowsElement.CopyFrom(Microsoft.ServiceBus.Configuration.WindowsElement)">
      <summary>Copies the specified windows element into the current instance.</summary>
      <param name="source">The windows element to copy.</param>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.WindowsElement.Domain">
      <summary>Gets or sets the domain.</summary>
      <returns>The domain.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.WindowsElement.Password">
      <summary>Gets or sets the password.</summary>
      <returns>The password.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.WindowsElement.Properties">
      <summary>Gets or sets the collection of configuration properties.</summary>
      <returns>The collection of configuration properties.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.WindowsElement.StsUris">
      <summary>Gets or sets the collection of security token service (STS) URI.</summary>
      <returns>The collection of security token service (STS) URI.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.WindowsElement.UseDefaultCredentials">
      <summary>Gets or sets a value that indicates whether to use default credentials.</summary>
      <returns>true if to use default credentials; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.WindowsElement.UserName">
      <summary>Gets or sets the username.</summary>
      <returns>The username.</returns>
    </member>
    <member name="T:Microsoft.ServiceBus.Configuration.WS2007HttpRelayBindingCollectionElement">
      <summary>Represents a configuration section that holds a collection of <see cref="T:Microsoft.ServiceBus.Configuration.WS2007HttpRelayBindingElement" /> instances.</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Configuration.WS2007HttpRelayBindingCollectionElement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.Configuration.WS2007HttpRelayBindingCollectionElement" /> class.</summary>
    </member>
    <member name="T:Microsoft.ServiceBus.Configuration.WS2007HttpRelayBindingElement">
      <summary>Represents a configuration element that contains the settings for a binding that provides support for the updated versions of the Security, ReliableSession, and TransactionFlow binding elements.</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Configuration.WS2007HttpRelayBindingElement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.Configuration.WS2007HttpRelayBindingElement" /> class.</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Configuration.WS2007HttpRelayBindingElement.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.Configuration.WS2007HttpRelayBindingElement" /> using the specified name.</summary>
      <param name="name">The name of the binding. This value should be unique because it is used as identification for the binding.</param>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.WS2007HttpRelayBindingElement.BindingElementType">
      <summary>Gets the type of the binding element of the current instance.</summary>
      <returns>Returns a <see cref="T:System.Type" /> that contains the binding element type.</returns>
    </member>
    <member name="T:Microsoft.ServiceBus.Configuration.WSHttpRelayBindingBaseElement">
      <summary>Provides a base class for the <see cref="T:Microsoft.ServiceBus.Configuration.WSHttpRelayBindingElement" /> configuration element that specifies a binding that supports distributed transactions and secure, reliable sessions.</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Configuration.WSHttpRelayBindingBaseElement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.Configuration.WSHttpRelayBindingBaseElement" /> class.</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Configuration.WSHttpRelayBindingBaseElement.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.Configuration.WSHttpRelayBindingBaseElement" /> class with the specified name.</summary>
      <param name="name">A name that uniquely identifies this configuration element.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Configuration.WSHttpRelayBindingBaseElement.InitializeFrom(System.ServiceModel.Channels.Binding)">
      <summary>Initializes this binding configuration element with the content of the specified binding.</summary>
      <param name="binding">A binding.</param>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.WSHttpRelayBindingBaseElement.IsDynamic">
      <summary>Gets or sets whether the binding base element is dynamic.</summary>
      <returns>true if the binding base element is dynamic; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.WSHttpRelayBindingBaseElement.MaxBufferPoolSize">
      <summary>Gets or sets the maximum size of the buffer pool that stores messages processed by the <see cref="T:Microsoft.ServiceBus.WSHttpRelayBinding" /> binding.</summary>
      <returns>The maximum size of the buffer pool that stores messages processed by the <see cref="T:Microsoft.ServiceBus.WSHttpRelayBinding" /> binding. The default is 524288 bytes.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.WSHttpRelayBindingBaseElement.MaxReceivedMessageSize">
      <summary>Gets or sets the maximum size for messages received on a channel configured with the <see cref="T:Microsoft.ServiceBus.WSHttpRelayBinding" /> binding.</summary>
      <returns>The maximum size for messages received on a channel configured with the <see cref="T:Microsoft.ServiceBus.WSHttpRelayBinding" /> binding. The default is 65536 bytes.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.WSHttpRelayBindingBaseElement.MessageEncoding">
      <summary>Gets or sets whether MTOM or Text/XML is used to encode SOAP messages.</summary>
      <returns>Indicates whether MTOM or Text/XML is used to encode SOAP messages. The default is Text/XML.</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.Configuration.WSHttpRelayBindingBaseElement.OnApplyConfiguration(System.ServiceModel.Channels.Binding)">
      <summary>Applies the settings of this configuration element to the specified binding.</summary>
      <param name="binding">The binding to update the settings of.</param>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.WSHttpRelayBindingBaseElement.Properties">
      <summary>Gets a collection of properties of this binding configuration element.</summary>
      <returns>A collection of properties of this binding configuration element.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.WSHttpRelayBindingBaseElement.ProxyAddress">
      <summary>Gets or sets the URI address of the HTTP proxy.</summary>
      <returns>The URI address of the HTTP proxy. The default is null.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.WSHttpRelayBindingBaseElement.ReaderQuotas">
      <summary>Gets constraints on the complexity of SOAP messages that can be processed by endpoints configured with the <see cref="T:Microsoft.ServiceBus.WSHttpRelayBinding" /> binding.</summary>
      <returns>Constraints on the complexity of SOAP messages that can be processed by endpoints configured with the <see cref="T:Microsoft.ServiceBus.WSHttpRelayBinding" /> binding.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.WSHttpRelayBindingBaseElement.ReliableSession">
      <summary>Gets a <see cref="T:System.ServiceModel.Configuration.StandardBindingOptionalReliableSessionElement" /> configuration element that represents an optional configuration setting for WS-Reliable messaging defined in the <see cref="T:Microsoft.ServiceBus.WSHttpRelayBinding" /> binding.</summary>
      <returns>A <see cref="T:System.ServiceModel.Configuration.StandardBindingOptionalReliableSessionElement" /> configuration element that represents an optional configuration setting for WS-Reliable messaging defined in the <see cref="T:Microsoft.ServiceBus.WSHttpRelayBinding" /> binding.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.WSHttpRelayBindingBaseElement.TextEncoding">
      <summary>Gets or sets the character encoding that is used for the message text.</summary>
      <returns>The character encoding that is used for the message text.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.WSHttpRelayBindingBaseElement.UseDefaultWebProxy">
      <summary>Gets or sets a value that indicates whether the auto-configured HTTP proxy of the system should be used, if available.</summary>
      <returns>true if the auto-configured HTTP proxy of the system should be used, if available; otherwise, false.</returns>
    </member>
    <member name="T:Microsoft.ServiceBus.Configuration.WSHttpRelayBindingElement">
      <summary>A configuration element that represents an interoperable binding that supports distributed transactions and secure, reliable sessions.</summary>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.WSHttpRelayBindingElement.AllowCookies">
      <summary>Gets or sets a value that indicates whether the service or client accepts cookies and propagates them on future requests.</summary>
      <returns>true if the service or client accepts cookies and propagates them on future requests; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.WSHttpRelayBindingElement.BindingElementType">
      <summary>Gets the type of the <see cref="T:Microsoft.ServiceBus.WSHttpRelayBinding" /> binding.</summary>
      <returns>The type of the <see cref="T:Microsoft.ServiceBus.WSHttpRelayBinding" /> binding.</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.Configuration.WSHttpRelayBindingElement.InitializeFrom(System.ServiceModel.Channels.Binding)">
      <summary>Initializes this binding configuration element with the content of the specified binding.</summary>
      <param name="binding">The binding to initialize this configuration element from.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Configuration.WSHttpRelayBindingElement.OnApplyConfiguration(System.ServiceModel.Channels.Binding)">
      <summary>Applies the settings of this configuration element to the specified binding.</summary>
      <param name="binding">The binding to update the settings of.</param>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.WSHttpRelayBindingElement.Properties">
      <summary>Gets a collection of properties of this binding configuration element.</summary>
      <returns>A collection of properties of this binding configuration element.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.WSHttpRelayBindingElement.Security">
      <summary>Gets the <see cref="T:Microsoft.ServiceBus.Configuration.WSHttpRelaySecurityElement" /> configuration element that contains the security settings for the <see cref="T:Microsoft.ServiceBus.WSHttpRelayBinding" /> binding.</summary>
      <returns>The <see cref="T:Microsoft.ServiceBus.Configuration.WSHttpRelaySecurityElement" /> configuration element that contains the security settings for the <see cref="T:Microsoft.ServiceBus.WSHttpRelayBinding" /> binding.</returns>
    </member>
    <member name="T:Microsoft.ServiceBus.Configuration.WSHttpRelaySecurityElement">
      <summary>Represents a configuration element that configures the security for a WS-HTTP service through the Windows Azure Service Bus relay.</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Configuration.WSHttpRelaySecurityElement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.Configuration.WSHttpRelaySecurityElement" /> class.</summary>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.WSHttpRelaySecurityElement.Message">
      <summary>Gets the security settings for the message.</summary>
      <returns>Returns a <see cref="T:Microsoft.ServiceBus.Configuration.NonDualMessageSecurityOverRelayHttpElement" /> that specifies the security settings for the message.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.WSHttpRelaySecurityElement.Mode">
      <summary>Gets or sets the mode of security that is used by an endpoint configured to receive HTTP requests.</summary>
      <returns>Returns a <see cref="T:Microsoft.ServiceBus.EndToEndSecurityMode" /> that specifies the type of security that is applied. The default value is Message.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.WSHttpRelaySecurityElement.RelayClientAuthenticationType">
      <summary>Gets or sets the relay client authentication type used by the service client.</summary>
      <returns>Returns a <see cref="T:Microsoft.ServiceBus.RelayClientAuthenticationType" /> that contains the authentication type.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.WSHttpRelaySecurityElement.Transport">
      <summary>Gets the security settings for the transport.</summary>
      <returns>Returns a <see cref="T:Microsoft.ServiceBus.Configuration.WSHttpRelayTransportSecurityElement" /> that specifies the security settings for the transport.Use the <see cref="T:Microsoft.ServiceBus.Configuration.WSHttpRelayTransportSecurityElement" /> object returned by this property to set the transport security parameters for the <see cref="T:Microsoft.ServiceBus.WSHttpRelayBinding" />. If the TransportCredentialOnly value is specified by <see cref="M:Microsoft.ServiceBus.WSHttpRelayBinding.#ctor(Microsoft.ServiceBus.EndToEndSecurityMode,Microsoft.ServiceBus.RelayClientAuthenticationType,System.Boolean)" />, then the settings provided by the Transport property become effective for the service endpoint. The value of this property can set only in the constructor it as an explicit parameter and its value cannot be set again after the binding instance is created.</returns>
    </member>
    <member name="T:Microsoft.ServiceBus.Configuration.WSHttpRelayTransportSecurityElement">
      <summary>A configuration element that describes the security on an HTTP transport over the Windows Azure Service Bus relay.</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Configuration.WSHttpRelayTransportSecurityElement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.Configuration.WSHttpRelayTransportSecurityElement" /> class.</summary>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.WSHttpRelayTransportSecurityElement.ProxyCredentialType">
      <summary>Gets or sets the type of credential to be used by the service or client endpoint for authentication against the proxy.</summary>
      <returns>The type of client credential to be used by the service or client endpoint for authentication against the proxy.</returns>
    </member>
    <member name="T:Microsoft.ServiceBus.Configuration.XmlDictionaryReaderQuotasElement">
      <summary>A configuration element that defines the constraints on the complexity of SOAP messages that can be processed by endpoints configured with a binding. This class cannot be inherited.</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Configuration.XmlDictionaryReaderQuotasElement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.Configuration.XmlDictionaryReaderQuotasElement" /> class.</summary>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.XmlDictionaryReaderQuotasElement.MaxArrayLength">
      <summary>Gets or sets the maximum allowed array length.</summary>
      <returns>The maximum allowed array length.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.XmlDictionaryReaderQuotasElement.MaxBytesPerRead">
      <summary>Gets or sets the maximum allowed number of bytes returned for each read.</summary>
      <returns>The maximum allowed number of bytes returned for each read.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.XmlDictionaryReaderQuotasElement.MaxDepth">
      <summary>Gets or sets the maximum nested node depth for each read.</summary>
      <returns>The maximum nested node depth for each read.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.XmlDictionaryReaderQuotasElement.MaxNameTableCharCount">
      <summary>Gets or sets the maximum number of characters allowed in a table name.</summary>
      <returns>The maximum number of characters allowed in a table name.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.XmlDictionaryReaderQuotasElement.MaxStringContentLength">
      <summary>Gets or sets the maximum number of characters allowed in XML element content.</summary>
      <returns>The maximum number of characters allowed in XML element content.</returns>
    </member>
    <member name="T:Microsoft.ServiceBus.Description.HttpRelayTransportBindingElementImporter">
      <summary>Maps WSDL contracts and policy assertions into Windows Azure Service Bus HttpRelayTransport bindings.</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Description.HttpRelayTransportBindingElementImporter.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.Description.HttpRelayTransportBindingElementImporter" /> class.</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Description.HttpRelayTransportBindingElementImporter.System#ServiceModel#Description#IPolicyImportExtension#ImportPolicy(System.ServiceModel.Description.MetadataImporter,System.ServiceModel.Description.PolicyConversionContext)">
      <summary>Imports a custom policy assertion about bindings.</summary>
      <param name="importer">A metadata importer that can be used to modify the import process.</param>
      <param name="context">The policy conversion context to insert your custom policy assertion.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Description.HttpRelayTransportBindingElementImporter.System#ServiceModel#Description#IWsdlImportExtension#BeforeImport(System.Web.Services.Description.ServiceDescriptionCollection,System.Xml.Schema.XmlSchemaSet,System.Collections.Generic.ICollection{System.Xml.XmlElement})">
      <summary>Called prior to importing the metadata documents associated with the HttpRelayTransport binding.</summary>
      <param name="wsdlDocuments">Describes the service</param>
      <param name="xmlSchemas">Describes the <paramref name="wsdlDocuments" />.</param>
      <param name="policy">Contains the policy elements.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Description.HttpRelayTransportBindingElementImporter.System#ServiceModel#Description#IWsdlImportExtension#ImportContract(System.ServiceModel.Description.WsdlImporter,System.ServiceModel.Description.WsdlContractConversionContext)">
      <summary>Imports WSDL contract information for Windows Azure Service Bus HttpRelayTransport bindings.</summary>
      <param name="importer">The WSDL importer for importing and resolving WSDL metadata.</param>
      <param name="context">The context for the conversion from WSDL to the service description.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Description.HttpRelayTransportBindingElementImporter.System#ServiceModel#Description#IWsdlImportExtension#ImportEndpoint(System.ServiceModel.Description.WsdlImporter,System.ServiceModel.Description.WsdlEndpointConversionContext)">
      <summary>Maps endpoints defined in WSDL into the service description.</summary>
      <param name="importer">The WSDL importer for importing and resolving WSDL metadata.</param>
      <param name="context">The context for the conversion.</param>
    </member>
    <member name="T:Microsoft.ServiceBus.Description.OnewayRelayTransportBindingElementImporter">
      <summary>Maps WSDL contracts and policy assertions into Windows Azure Service Bus OnewayRelayTransport bindings.</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Description.OnewayRelayTransportBindingElementImporter.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.Description.OnewayRelayTransportBindingElementImporter" /> class.</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Description.OnewayRelayTransportBindingElementImporter.System#ServiceModel#Description#IPolicyImportExtension#ImportPolicy(System.ServiceModel.Description.MetadataImporter,System.ServiceModel.Description.PolicyConversionContext)">
      <summary>Imports a custom policy assertion about bindings.</summary>
      <param name="importer">A metadata importer that can be used to modify the import process.</param>
      <param name="context">The policy conversion context to insert your custom policy assertion.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Description.OnewayRelayTransportBindingElementImporter.System#ServiceModel#Description#IWsdlImportExtension#BeforeImport(System.Web.Services.Description.ServiceDescriptionCollection,System.Xml.Schema.XmlSchemaSet,System.Collections.Generic.ICollection{System.Xml.XmlElement})">
      <summary>Called prior to importing the metadata documents associated with the OnewayRelayTransport binding.</summary>
      <param name="wsdlDocuments">Describes the service</param>
      <param name="xmlSchemas">Describes the <paramref name="wsdlDocuments" />.</param>
      <param name="policy">Contains the policy elements.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Description.OnewayRelayTransportBindingElementImporter.System#ServiceModel#Description#IWsdlImportExtension#ImportContract(System.ServiceModel.Description.WsdlImporter,System.ServiceModel.Description.WsdlContractConversionContext)">
      <summary>Imports WSDL contract information for Windows Azure Service Bus OnewayRelayTransport bindings.</summary>
      <param name="importer">The WSDL importer for importing and resolving WSDL metadata.</param>
      <param name="context">The context for the conversion from WSDL to the service description.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Description.OnewayRelayTransportBindingElementImporter.System#ServiceModel#Description#IWsdlImportExtension#ImportEndpoint(System.ServiceModel.Description.WsdlImporter,System.ServiceModel.Description.WsdlEndpointConversionContext)">
      <summary>Maps endpoints defined in WSDL into the service description.</summary>
      <param name="importer">The WSDL importer for importing and resolving WSDL metadata.</param>
      <param name="context">The context for the conversion.</param>
    </member>
    <member name="T:Microsoft.ServiceBus.Description.StandardRelayBindingImporter">
      <summary>Maps WSDL contracts and policy assertions into Windows Azure Service Bus standard bindings.</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Description.StandardRelayBindingImporter.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.Description.StandardRelayBindingImporter" /> class.</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Description.StandardRelayBindingImporter.BeforeImport(System.Web.Services.Description.ServiceDescriptionCollection,System.Xml.Schema.XmlSchemaSet,System.Collections.Generic.ICollection{System.Xml.XmlElement})">
      <summary>Called prior to importing the metadata documents associated with the standard binding.</summary>
      <param name="wsdlDocuments">Describes the service.</param>
      <param name="xmlSchemas">Describes the <paramref name="wsdlDocuments" />.</param>
      <param name="policy">Contains the policy elements.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Description.StandardRelayBindingImporter.ImportContract(System.ServiceModel.Description.WsdlImporter,System.ServiceModel.Description.WsdlContractConversionContext)">
      <summary>Imports WSDL contract information for standard bindings.</summary>
      <param name="importer">The WSDL importer for importing and resolving WSDL metadata.</param>
      <param name="context">Provides the context for the conversion from WSDL to the service description.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Description.StandardRelayBindingImporter.ImportEndpoint(System.ServiceModel.Description.WsdlImporter,System.ServiceModel.Description.WsdlEndpointConversionContext)">
      <summary>Maps endpoints defined in WSDL into the service description.</summary>
      <param name="importer">The WSDL importer for importing and resolving WSDL metadata.</param>
      <param name="endpointContext">The context for the conversion.</param>
    </member>
    <member name="T:Microsoft.ServiceBus.Description.TcpRelayTransportBindingElementImporter">
      <summary>Maps WSDL contracts and policy assertions into Windows Azure Service Bus TcpRelayTransport bindings.</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Description.TcpRelayTransportBindingElementImporter.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.Description.TcpRelayTransportBindingElementImporter" /> class.</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Description.TcpRelayTransportBindingElementImporter.System#ServiceModel#Description#IPolicyImportExtension#ImportPolicy(System.ServiceModel.Description.MetadataImporter,System.ServiceModel.Description.PolicyConversionContext)">
      <summary>Imports a custom policy assertion about bindings.</summary>
      <param name="importer">A metadata importer that can be used to modify the import process.</param>
      <param name="context">The policy conversion context to insert your custom policy assertion.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Description.TcpRelayTransportBindingElementImporter.System#ServiceModel#Description#IWsdlImportExtension#BeforeImport(System.Web.Services.Description.ServiceDescriptionCollection,System.Xml.Schema.XmlSchemaSet,System.Collections.Generic.ICollection{System.Xml.XmlElement})">
      <summary>Called prior to importing the metadata documents associated with the TcpRelayTransport binding.</summary>
      <param name="wsdlDocuments">Describes the service.</param>
      <param name="xmlSchemas">Describes the <paramref name="wsdlDocuments" />.</param>
      <param name="policy">Contains the policy elements.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Description.TcpRelayTransportBindingElementImporter.System#ServiceModel#Description#IWsdlImportExtension#ImportContract(System.ServiceModel.Description.WsdlImporter,System.ServiceModel.Description.WsdlContractConversionContext)">
      <summary>Imports WSDL contract information for Windows Azure Service Bus TcpRelayTransport bindings.</summary>
      <param name="importer">The WSDL importer for importing and resolving WSDL metadata.</param>
      <param name="context">The context for the conversion from WSDL to the service description.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Description.TcpRelayTransportBindingElementImporter.System#ServiceModel#Description#IWsdlImportExtension#ImportEndpoint(System.ServiceModel.Description.WsdlImporter,System.ServiceModel.Description.WsdlEndpointConversionContext)">
      <summary>Maps endpoints defined in WSDL into the service description.</summary>
      <param name="importer">The WSDL importer for importing and resolving WSDL metadata.</param>
      <param name="context">The context for the conversion.</param>
    </member>
    <member name="T:Microsoft.ServiceBus.Management.BillingTier"></member>
    <member name="F:Microsoft.ServiceBus.Management.BillingTier.Basic">
      <summary />
    </member>
    <member name="F:Microsoft.ServiceBus.Management.BillingTier.Free">
      <summary />
    </member>
    <member name="F:Microsoft.ServiceBus.Management.BillingTier.Standard">
      <summary />
    </member>
    <member name="T:Microsoft.ServiceBus.Management.CertificateType">
      <summary>Specifies the types of certificate used in the management of Service Bus for Windows Server farm.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Management.CertificateType.CustomFarmCertificate">
      <summary>Specifies a custom certificate.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Management.CertificateType.GeneratedCertificateRevocationList">
      <summary>Specifies a generated certificate revocation list.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Management.CertificateType.GeneratedFarmCertificate">
      <summary>Specifies a generated farm certificate.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Management.CertificateType.GeneratedFarmRootCertificate">
      <summary>Specifies a generated farm root certificate.</summary>
    </member>
    <member name="T:Microsoft.ServiceBus.Management.ConnectionDetail">
      <summary>Represents the details associated with the service bus connection.</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Management.ConnectionDetail.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.Management.ConnectionDetail" /> class.</summary>
    </member>
    <member name="P:Microsoft.ServiceBus.Management.ConnectionDetail.AuthorizationType">
      <summary>Gets or sets the authorization type for the connection.</summary>
      <returns>The authorization type for the connection.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Management.ConnectionDetail.ConnectionString">
      <summary>Gets or sets the connection string associated with the connection.</summary>
      <returns>The connection string associated with the connection.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Management.ConnectionDetail.KeyName">
      <summary>Gets or sets the key name associated with the connection.</summary>
      <returns>The key name associated with the connection.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Management.ConnectionDetail.Rights">
      <summary>Gets or sets the access rights associated with the connection.</summary>
      <returns>The access rights associated with the connection.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Management.ConnectionDetail.SecondaryConnectionString">
      <summary>Gets or sets the secondary connection string associated with the connection.</summary>
      <returns>The secondary connection string associated with the connection.</returns>
    </member>
    <member name="T:Microsoft.ServiceBus.Management.FarmCertificateInfo">
      <summary>Represents the details of the certificate associated with the service bus farm.</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Management.FarmCertificateInfo.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.Management.FarmCertificateInfo" /> class.</summary>
    </member>
    <member name="P:Microsoft.ServiceBus.Management.FarmCertificateInfo.CertificateKeyName">
      <summary>Gets or sets the keyname associated with the certificate.</summary>
      <returns>The keyname associated with the certificate.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Management.FarmCertificateInfo.CertificateName">
      <summary>Gets or sets the name of the certificate.</summary>
      <returns>The name of the certificate.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Management.FarmCertificateInfo.CertificateType">
      <summary>Gets or sets the type of the certificate.</summary>
      <returns>The type of the certificate.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Management.FarmCertificateInfo.Downloadable">
      <summary>Gets or sets whether the certificate is downloadable.</summary>
      <returns>true if the certificate is downloadable; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Management.FarmCertificateInfo.ExpirationDate">
      <summary>Gets or sets the expiration date of the certificate.</summary>
      <returns>The expiration date of the certificate.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Management.FarmCertificateInfo.IsAutoGenerated">
      <summary>Gets or sets whether the certificate is auto generated.</summary>
      <returns>true if the certificate is auto generated; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Management.FarmCertificateInfo.Thumbprint">
      <summary>Gets or sets the thumbprint associated with the certificate.</summary>
      <returns>The thumbprint associated with the certificate.</returns>
    </member>
    <member name="T:Microsoft.ServiceBus.Management.MessagingSKU">
      <summary>Provides SKU for the messaging.</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Management.MessagingSKU.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.Management.MessagingSKU" /> class.</summary>
    </member>
    <member name="P:Microsoft.ServiceBus.Management.MessagingSKU.MaxAllowedEventHubUnit"></member>
    <member name="P:Microsoft.ServiceBus.Management.MessagingSKU.MinAllowedEventHubUnit">
      <summary>Gets or sets the minimum allowed event hub unit.</summary>
      <returns>The minimum allowed event hub unit.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Management.MessagingSKU.SKU">
      <summary>Gets or sets the stock-keeping unit for the messaging.</summary>
      <returns>The stock-keeping unit for the messaging.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Management.MessagingSKU.SKUDescription">
      <summary>Gets or sets the description for stock-keeping unit.</summary>
      <returns>The description for stock-keeping unit.</returns>
    </member>
    <member name="T:Microsoft.ServiceBus.Management.MessagingSKUPlan">
      <summary>Represents a messaging SKU plan.</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Management.MessagingSKUPlan.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.Management.MessagingSKUPlan" /> class.</summary>
    </member>
    <member name="P:Microsoft.ServiceBus.Management.MessagingSKUPlan.Revision">
      <summary>Gets or sets the plan revision.</summary>
      <returns>The plan revision.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Management.MessagingSKUPlan.SelectedEventHubUnit">
      <summary>Gets or sets the selected event hub unit.</summary>
      <returns>The selected event hub unit.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Management.MessagingSKUPlan.SKU">
      <summary>Gets or sets the stock-keeping unit.</summary>
      <returns>The stock-keeping unit.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Management.MessagingSKUPlan.UpdatedAt">
      <summary>Gets or sets the exact time the plan has been updated.</summary>
      <returns>The exact time the plan has been updated.</returns>
    </member>
    <member name="T:Microsoft.ServiceBus.Management.Metric">
      <summary>Represents the metric used to monitor the Service Bus status.</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Management.Metric.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.Management.Metric" /> class.</summary>
    </member>
    <member name="P:Microsoft.ServiceBus.Management.Metric.DisplayName">
      <summary>Gets or sets the display name of the metric.</summary>
      <returns>The display name of the metric.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Management.Metric.Name">
      <summary>Gets or sets the name of the metric.</summary>
      <returns>The name of the metric.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Management.Metric.PrimaryAggregation">
      <summary>Gets or sets the primary aggregation for this metric.</summary>
      <returns>The primary aggregation for this metric.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Management.Metric.Rollups">
      <summary>Gets or sets the collection of metric rollup.</summary>
      <returns>The collection of metric rollup.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Management.Metric.Unit">
      <summary>Gets or sets the metric unit.</summary>
      <returns>The metric unit.</returns>
    </member>
    <member name="T:Microsoft.ServiceBus.Management.MetricRollup">
      <summary>Represents the rollup data for Service Bus metrics.</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Management.MetricRollup.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.Management.MetricRollup" /> class.</summary>
    </member>
    <member name="P:Microsoft.ServiceBus.Management.MetricRollup.Retention">
      <summary>Gets or sets the time of the retention associated with the rollup.</summary>
      <returns>The time of the retention associated with the rollup.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Management.MetricRollup.TimeGrain">
      <summary>Gets or sets the time grain associated with the rollup.</summary>
      <returns>The time grain associated with the rollup.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Management.MetricRollup.Values">
      <summary>Gets or sets the collection of metric values.</summary>
      <returns>The collection of metric values.</returns>
    </member>
    <member name="T:Microsoft.ServiceBus.Management.MetricValue">
      <summary>Represents the value of a metric associated with the service bus.</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Management.MetricValue.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.Management.MetricValue" /> class.</summary>
    </member>
    <member name="P:Microsoft.ServiceBus.Management.MetricValue.Average">
      <summary>Gets or sets the average value of a metric.</summary>
      <returns>The average value of a metric.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Management.MetricValue.Max">
      <summary>Gets or sets the maximum value of a metric.</summary>
      <returns>The maximum value of a metric.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Management.MetricValue.Min">
      <summary>Gets or sets the minimum value of a metric.</summary>
      <returns>The minimum value of a metric.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Management.MetricValue.Timestamp">
      <summary>Gets or sets the time stamp associated with the metric value.</summary>
      <returns>The time stamp associated with the metric value.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Management.MetricValue.Total">
      <summary>Gets or sets the total metric value.</summary>
      <returns>The total metric value.</returns>
    </member>
    <member name="T:Microsoft.ServiceBus.Management.NamespaceAvailability">
      <summary>Represents the availability of the given service namespace.</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Management.NamespaceAvailability.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.Management.NamespaceAvailability" /> class.</summary>
    </member>
    <member name="P:Microsoft.ServiceBus.Management.NamespaceAvailability.Available">
      <summary>Gets or sets whether the namespace is available.</summary>
      <returns>true if the namespace is available; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Management.NamespaceAvailability.ExtensionData">
      <summary>Gets or sets the extension data object associated with the namespace.</summary>
      <returns>The extension data object associated with the namespace.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Management.NamespaceAvailability.Reason">
      <summary>Gets or sets the reason for unavailability of a namespace.</summary>
      <returns>The reason for unavailability of a namespace.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Management.NamespaceAvailability.ReasonDetail">
      <summary>Gets or sets the detailed info regarding the reason associated with the namespace.</summary>
      <returns>The detailed info regarding the reason associated with the namespace.</returns>
    </member>
    <member name="F:Microsoft.ServiceBus.Management.NamespaceAvailability.Serializer">
      <summary>The data contract serializer.</summary>
    </member>
    <member name="T:Microsoft.ServiceBus.Management.NamespaceDescription">
      <summary>Defines the desired semantics for a service namespace.</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Management.NamespaceDescription.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.Management.NamespaceDescription" /> class.</summary>
    </member>
    <member name="P:Microsoft.ServiceBus.Management.NamespaceDescription.AcsManagementEndpoint">
      <summary>Gets or sets the management endpoint for the access control service.</summary>
      <returns>The management endpoint for the access control service.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Management.NamespaceDescription.ConnectionString">
      <summary>Gets or sets the connection string that is used by the client to connect to the server.</summary>
      <returns>The connection string that is used by the client to connect to the server.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Management.NamespaceDescription.CreateACSNamespace">
      <summary>Gets or sets a value that indicates whether to create ACS namespace.</summary>
      <returns>true if ACS namespace has been created; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Management.NamespaceDescription.CreatedAt">
      <summary>Gets or sets the date when the namespace was created.</summary>
      <returns>The date when the namespace was created.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Management.NamespaceDescription.Critical">
      <summary>Gets or sets whether the description is a nullable critical description.</summary>
      <returns>true if the description is a nullable critical description; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Management.NamespaceDescription.DefaultKey">
      <summary>Gets or sets the default key for the namespace.</summary>
      <returns>The default key for the namespace.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Management.NamespaceDescription.Enabled">
      <summary>Specifies whether this instance is enabled.</summary>
      <returns>true if this instance is enabled; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Management.NamespaceDescription.EventHubEnabled">
      <summary>Specifies whether the Event Hub is enabled.</summary>
      <returns>true if the Event Hub is enabled; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Management.NamespaceDescription.MessagingSku"></member>
    <member name="P:Microsoft.ServiceBus.Management.NamespaceDescription.Name">
      <summary>Gets or sets the name of the namespace.</summary>
      <returns>The name of the namespace.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Management.NamespaceDescription.NamespaceType">
      <summary>Gets or sets the type of messaging entities the namespace can contain (queues, topics, relays, Event Hubs, or notification hubs). For more information, see <see cref="T:Microsoft.ServiceBus.Management.NamespaceType" />.</summary>
      <returns>Returns <see cref="T:Microsoft.ServiceBus.Management.NamespaceType" />.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Management.NamespaceDescription.Region">
      <summary>Gets or sets the geographic region(s) of the Microsoft datacenters in which Customer Data will be stored.</summary>
      <returns>The geographic region(s) of the Microsoft datacenters in which Customer Data will be stored.</returns>
    </member>
    <member name="F:Microsoft.ServiceBus.Management.NamespaceDescription.Serializer">
      <summary>The data contract serializer associated with the namespace.</summary>
    </member>
    <member name="P:Microsoft.ServiceBus.Management.NamespaceDescription.ServiceBusEndpoint">
      <summary>Gets or sets the service bus end point value.</summary>
      <returns>The service bus end point value.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Management.NamespaceDescription.Status">
      <summary>Gets or sets the state of the namespace.</summary>
      <returns>The state of the namespace.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Management.NamespaceDescription.SubscriptionId">
      <summary>Gets or sets the namespace subscription identifier.</summary>
      <returns>The namespace subscription identifier.</returns>
    </member>
    <member name="T:Microsoft.ServiceBus.Management.NamespaceEntityStats">
      <summary>Represents the attributes of a namespace entity.</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Management.NamespaceEntityStats.#ctor">
      <summary>Initializes a new instance of the4 <see cref="T:Microsoft.ServiceBus.Management.NamespaceEntityStats" /> class.</summary>
    </member>
    <member name="P:Microsoft.ServiceBus.Management.NamespaceEntityStats.EventHubCount">
      <summary>Gets or sets the number of event hub.</summary>
      <returns>The number of event hub.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Management.NamespaceEntityStats.NotificationHubCount">
      <summary>Gets or sets the number of notification hub.</summary>
      <returns>The number of notification hub.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Management.NamespaceEntityStats.QueueCount">
      <summary>Gets or sets the number of queue associated with the status.</summary>
      <returns>The number of queue associated with the status.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Management.NamespaceEntityStats.RelayCount">
      <summary>Gets or sets the number of relays associated with the status.</summary>
      <returns>The number of relays associated with the status.</returns>
    </member>
    <member name="F:Microsoft.ServiceBus.Management.NamespaceEntityStats.Serializer">
      <summary>Specifies the status serializer.</summary>
    </member>
    <member name="P:Microsoft.ServiceBus.Management.NamespaceEntityStats.TopicCount">
      <summary>Gets or sets the number of topics associated with the status.</summary>
      <returns>The number of topics associated with the status.</returns>
    </member>
    <member name="T:Microsoft.ServiceBus.Management.NamespaceState">
      <summary>Enumerates the different namespace states.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Management.NamespaceState.Activating">
      <summary>The namespace is being activated.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Management.NamespaceState.Active">
      <summary>The namespace is active.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Management.NamespaceState.Created">
      <summary>The namespace is created.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Management.NamespaceState.Creating">
      <summary>The namespace is being created.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Management.NamespaceState.Disabled">
      <summary>The namespace is disabled.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Management.NamespaceState.Disabling">
      <summary>The namespace is being disabled.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Management.NamespaceState.Enabling">
      <summary>The namespace is being enabled.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Management.NamespaceState.Removed">
      <summary>The namespace is removed.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Management.NamespaceState.Removing">
      <summary>The namespace is being removed.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Management.NamespaceState.SoftDeleted">
      <summary>The namespace is deleted.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Management.NamespaceState.SoftDeleting">
      <summary>The namespace is marked for deletion.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Management.NamespaceState.Unknown">
      <summary>The namespace is unknown.</summary>
    </member>
    <member name="T:Microsoft.ServiceBus.Management.NamespaceType">
      <summary>Specifies the type of namespace to be created (messaging, notification hub, or mixed).</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Management.NamespaceType.Messaging">
      <summary>Specifies that the namespace should contain messaging entities (queues, topics, relays, or Event Hubs).</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Management.NamespaceType.Mixed">
      <summary>Specifies that the namespace can contain a mixture messaging entities and notification hubs.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Management.NamespaceType.NotificationHub">
      <summary>Specifies that the namespace should contain notification hubs.</summary>
    </member>
    <member name="T:Microsoft.ServiceBus.Management.NotificationHubBillingPlan"></member>
    <member name="M:Microsoft.ServiceBus.Management.NotificationHubBillingPlan.#ctor"></member>
    <member name="P:Microsoft.ServiceBus.Management.NotificationHubBillingPlan.BillingTier"></member>
    <member name="P:Microsoft.ServiceBus.Management.NotificationHubBillingPlan.MaxAllowedMonthlyPushes"></member>
    <member name="P:Microsoft.ServiceBus.Management.NotificationHubBillingPlan.MaxAllowedMulticastTagsPerNamespace"></member>
    <member name="T:Microsoft.ServiceBus.Management.NotificationHubBillingTier"></member>
    <member name="M:Microsoft.ServiceBus.Management.NotificationHubBillingTier.#ctor"></member>
    <member name="P:Microsoft.ServiceBus.Management.NotificationHubBillingTier.BillingTier"></member>
    <member name="T:Microsoft.ServiceBus.Management.NotificationHubBillingUsage"></member>
    <member name="M:Microsoft.ServiceBus.Management.NotificationHubBillingUsage.#ctor"></member>
    <member name="P:Microsoft.ServiceBus.Management.NotificationHubBillingUsage.BillingTier"></member>
    <member name="P:Microsoft.ServiceBus.Management.NotificationHubBillingUsage.MonthlyPushes"></member>
    <member name="P:Microsoft.ServiceBus.Management.NotificationHubBillingUsage.UpdatedAt"></member>
    <member name="T:Microsoft.ServiceBus.Management.NotificationHubPlan">
      <summary>Represents a notification hub plan.</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Management.NotificationHubPlan.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.Management.NotificationHubPlan" /> class.</summary>
    </member>
    <member name="P:Microsoft.ServiceBus.Management.NotificationHubPlan.Revision">
      <summary>Gets or sets the revision.</summary>
      <returns>The revision.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Management.NotificationHubPlan.SelectedSKUMaxUnits">
      <summary>Gets or sets the maximum units of the selected SKU.</summary>
      <returns>The maximum units of the selected SKU.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Management.NotificationHubPlan.SelectedSKUMinUnits">
      <summary>Gets or sets the minimum units of the selected SKU.</summary>
      <returns>The minimum units of the selected SKU.</returns>
    </member>
    <member name="F:Microsoft.ServiceBus.Management.NotificationHubPlan.SKU">
      <summary>Specifies the stock-keeping unit.</summary>
    </member>
    <member name="P:Microsoft.ServiceBus.Management.NotificationHubPlan.UpdatedAt">
      <summary>Gets or sets the exact time the plan has been updated.</summary>
      <returns>The exact time the plan has been updated.</returns>
    </member>
    <member name="T:Microsoft.ServiceBus.Management.NotificationHubPnsCredentials">
      <summary>Represents the PNS credential associated with the notification hub.</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Management.NotificationHubPnsCredentials.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.Management.NotificationHubPnsCredentials" /> class.</summary>
    </member>
    <member name="P:Microsoft.ServiceBus.Management.NotificationHubPnsCredentials.AdmCredential">
      <summary>Gets or sets the administrative credential.</summary>
      <returns>The administrative credential.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Management.NotificationHubPnsCredentials.ApnsCredential">
      <summary>Gets or sets the APNS credential.</summary>
      <returns>The APNS credential.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Management.NotificationHubPnsCredentials.BaiduCredential"></member>
    <member name="P:Microsoft.ServiceBus.Management.NotificationHubPnsCredentials.GcmCredential">
      <summary>Gets or sets the GCM credential.</summary>
      <returns>The GCM credential.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Management.NotificationHubPnsCredentials.MpnsCredential">
      <summary>Gets or sets the MPNS credential.</summary>
      <returns>The MPNS credential.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Management.NotificationHubPnsCredentials.Revision">
      <summary>Gets or sets the credential revisions.</summary>
      <returns>The credential revisions.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Management.NotificationHubPnsCredentials.UpdatedAt">
      <summary>Gets or sets the date when the credential was last updated.</summary>
      <returns>The date when the credential was last updated.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Management.NotificationHubPnsCredentials.WnsCredential">
      <summary>Gets or sets the WNS credential.</summary>
      <returns>The WNS credential.</returns>
    </member>
    <member name="T:Microsoft.ServiceBus.Management.NotificationHubSKU">
      <summary>Provides SKU for notification hub.</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Management.NotificationHubSKU.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.Management.NotificationHubSKU" /> class.</summary>
    </member>
    <member name="P:Microsoft.ServiceBus.Management.NotificationHubSKU.MaxAllowedApiCallsPerDayPerUnit">
      <summary>Gets or sets the maximum allowed API calls per day per unit.</summary>
      <returns>The maximum allowed API calls per day per unit.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Management.NotificationHubSKU.MaxAllowedDevicesPerUnit">
      <summary>Gets or sets the maximum allowed devices per unit.</summary>
      <returns>The maximum allowed devices per unit.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Management.NotificationHubSKU.MaxAllowedOperationsPerDayPerUnit">
      <summary>Gets or sets the maximum allowed operations per day per unit.</summary>
      <returns>The maximum allowed operations per day per unit.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Management.NotificationHubSKU.MaxAllowedPushesPerDayPerUnit">
      <summary>Gets or sets the maximum allowed pushes per day per unit.</summary>
      <returns>The maximum allowed pushes per day per unit.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Management.NotificationHubSKU.MaxAllowedRegistrationsPerUnit">
      <summary>Gets or sets the maximum allowed registrations per unit.</summary>
      <returns>The maximum allowed registrations per unit.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Management.NotificationHubSKU.MaxAllowedUnits">
      <summary>Gets or sets the maximum allowed units.</summary>
      <returns>The maximum allowed units.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Management.NotificationHubSKU.MinAllowedUnits">
      <summary>Gets or sets the minimum allowed units.</summary>
      <returns>The minimum allowed units.</returns>
    </member>
    <member name="F:Microsoft.ServiceBus.Management.NotificationHubSKU.SKU">
      <summary>Specifies the stock-keeping unit for the notification hub.</summary>
    </member>
    <member name="T:Microsoft.ServiceBus.Management.NotificationHubSKUType">
      <summary>Specifies an enumeration of type for notification hub SKU.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Management.NotificationHubSKUType.Basic">
      <summary>Represents the notification hub basic tier type. See Notification Hubs Pricing Details.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Management.NotificationHubSKUType.Free">
      <summary>Represents the notification hub Free tier type. See Notification Hubs Pricing Details.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Management.NotificationHubSKUType.Standard">
      <summary>Represents the notification hub Standard tier type. See Notification Hubs Pricing Details.</summary>
    </member>
    <member name="T:Microsoft.ServiceBus.Management.PortalManagementAddress">
      <summary>Represents the address for the portal management.</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Management.PortalManagementAddress.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.Management.PortalManagementAddress" /> class.</summary>
    </member>
    <member name="P:Microsoft.ServiceBus.Management.PortalManagementAddress.Address">
      <summary>Gets or sets the portal address.</summary>
      <returns>The portal address.</returns>
    </member>
    <member name="T:Microsoft.ServiceBus.Management.PortalResourceType">
      <summary>Enumerates the types of portal resource.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Management.PortalResourceType.Namespace">
      <summary>Specifies a namespace resource.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Management.PortalResourceType.NotificationHub">
      <summary>Specifies a notification hub resource.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Management.PortalResourceType.Queue">
      <summary>Specifies a queue resource.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Management.PortalResourceType.Topic">
      <summary>Specifies a topic resource.</summary>
    </member>
    <member name="T:Microsoft.ServiceBus.Management.Property">
      <summary>Represents the service bus property.</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Management.Property.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.Management.Property" /> class.</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Management.Property.Clone">
      <summary>Creates a copy of this instance.</summary>
      <returns>A created copy of this instance.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Management.Property.Created">
      <summary>Gets or sets when the property was created.</summary>
      <returns>The date when the property was created.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Management.Property.Modified">
      <summary>Gets or sets when the property was modified.</summary>
      <returns>The date when the property was modified.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Management.Property.Name">
      <summary>Gets or sets the name of the property.</summary>
      <returns>The name of the property.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Management.Property.Revision">
      <summary>Gets or sets the version of the property.</summary>
      <returns>The version of the property.</returns>
    </member>
    <member name="F:Microsoft.ServiceBus.Management.Property.Serializer">
      <summary>The serializer associated with the property.</summary>
    </member>
    <member name="P:Microsoft.ServiceBus.Management.Property.Value">
      <summary>Gets or sets the property value.</summary>
      <returns>The property value.</returns>
    </member>
    <member name="T:Microsoft.ServiceBus.Management.RegionCodeDescription">
      <summary>Represents the description associated with the region code for the Service bus.</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Management.RegionCodeDescription.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.Management.RegionCodeDescription" /> class.</summary>
    </member>
    <member name="P:Microsoft.ServiceBus.Management.RegionCodeDescription.Code">
      <summary>Gets or sets the code associated with this instance.</summary>
      <returns>The code associated with this instance.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Management.RegionCodeDescription.FullName">
      <summary>Gets or sets the full name of this instance.</summary>
      <returns>The full name of this instance.</returns>
    </member>
    <member name="F:Microsoft.ServiceBus.Management.RegionCodeDescription.Serializer">
      <summary>The serializes associated with the description.</summary>
    </member>
    <member name="T:Microsoft.ServiceBus.Management.UnavailableReason">
      <summary>Specifies the reason for the unavailability of the service.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Management.UnavailableReason.InvalidName">
      <summary>The name of the service is invalid.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Management.UnavailableReason.NameInLockdown">
      <summary>The name of the service is in lockdown.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Management.UnavailableReason.NameInUse">
      <summary>The name of the service is in use.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Management.UnavailableReason.None">
      <summary>No reason defined.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Management.UnavailableReason.SubscriptionIsDisabled">
      <summary>The service subscription is disabled.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Management.UnavailableReason.TooManyNamespaceInCurrentSubscription">
      <summary>Too many namespace is in current subscription.</summary>
    </member>
    <member name="T:Microsoft.ServiceBus.Management.UsageCredit">
      <summary>Represents the usage credit management.</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Management.UsageCredit.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.Management.UsageCredit" /> class.</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Management.UsageCredit.Equals(Microsoft.ServiceBus.Management.UsageCredit)">
      <summary>Specifies whether this instance is equal with another usage credit.</summary>
      <returns>true if this instance is equal with another usage credit; otherwise, false.</returns>
      <param name="other">The other usage credit to compare.</param>
    </member>
    <member name="P:Microsoft.ServiceBus.Management.UsageCredit.ExtensionData">
      <summary>Gets or sets the object that stores data</summary>
      <returns>The object that stores data</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Management.UsageCredit.Identifier">
      <summary>Gets or sets the credit identifier.</summary>
      <returns>The credit identifier.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Management.UsageCredit.KeyName">
      <summary>Gets or sets the key name associated with the credit.</summary>
      <returns>The key name associated with the credit.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Management.UsageCredit.NamespaceName">
      <summary>Gets or sets the namespace name associated with the credit.</summary>
      <returns>Returns <see cref="T:System.String" />.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Management.UsageCredit.NHBasicUnit">
      <summary>Gets or sets the Basic Tier unit of the notification hub.</summary>
      <returns>The basic unit of the notification hub.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Management.UsageCredit.NHStandardUnit">
      <summary>Gets or sets the Standard Tier unit of the notification hub.</summary>
      <returns>The standard unit of the notification hub.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Management.UsageCredit.RequestorService">
      <summary>Gets or sets the requestor service.</summary>
      <returns>The requestor service.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Management.UsageCredit.Revision">
      <summary>Gets or sets the credit revision.</summary>
      <returns>The credit revision.</returns>
    </member>
    <member name="F:Microsoft.ServiceBus.Management.UsageCredit.Serializer">
      <summary>Specifies the usage credit serializer.</summary>
    </member>
    <member name="P:Microsoft.ServiceBus.Management.UsageCredit.SubscriptionId">
      <summary>Gets or sets the Azure subscription ID associated with the credit.</summary>
      <returns>Returns <see cref="T:System.String" />.</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.Management.UsageCredit.ToString">
      <summary>Returns a string representation of <see cref="T:Microsoft.ServiceBus.Management.UsageCredit" />.</summary>
      <returns>A string representation of <see cref="T:Microsoft.ServiceBus.Management.UsageCredit" />.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Management.UsageCredit.UpdatedAt">
      <summary>Gets or sets the last date when the credit details were updated.</summary>
      <returns>The last date when the credit details were updated.</returns>
    </member>
    <member name="T:Microsoft.ServiceBus.Management.UserValidationResult">
      <summary>Represents the result associated with user validation.</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Management.UserValidationResult.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.Management.UserValidationResult" /> class.</summary>
    </member>
    <member name="P:Microsoft.ServiceBus.Management.UserValidationResult.Reason">
      <summary>Gets or sets the reason for user validation.</summary>
      <returns>the reason for user validation.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Management.UserValidationResult.Result">
      <summary>Gets or sets the result of the validation.</summary>
      <returns>The result of the validation.</returns>
    </member>
    <member name="T:Microsoft.ServiceBus.Messaging.AccessRights">
      <summary>Specifies the possible access rights for a user.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.AccessRights.Listen">
      <summary>The access right is Listen.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.AccessRights.Manage">
      <summary>The access right is Manage.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.AccessRights.Send">
      <summary>The access right is Send.</summary>
    </member>
    <member name="T:Microsoft.ServiceBus.Messaging.AllowRule">
      <summary>Represents the rule to allow.</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.AllowRule.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.Messaging.AllowRule" /> class.</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.AllowRule.#ctor(System.String,Microsoft.ServiceBus.Messaging.AllowRuleClaimType,System.String,System.Collections.Generic.IEnumerable{Microsoft.ServiceBus.Messaging.AccessRights})">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.Messaging.AllowRule" /> class with the specified parameters.</summary>
      <param name="issuerName">The <see cref="P:Microsoft.ServiceBus.Messaging.AuthorizationRule.IssuerName" /> name of the claim issuer.</param>
      <param name="claimType">The <see cref="P:Microsoft.ServiceBus.Messaging.AuthorizationRule.ClaimType" /> type of the claim.</param>
      <param name="claimValue">The <see cref="P:Microsoft.ServiceBus.Messaging.AuthorizationRule.ClaimValue" /> value of the claim.</param>
      <param name="rights">The list of possible <see cref="P:Microsoft.ServiceBus.Messaging.AuthorizationRule.Rights" />.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.AllowRule.#ctor(System.String,System.String,System.String,System.Collections.Generic.IEnumerable{Microsoft.ServiceBus.Messaging.AccessRights})">
      <summary>Initializes a new instance of <see cref="T:Microsoft.ServiceBus.Messaging.AllowRule" /> class.</summary>
      <param name="issuerName">The <see cref="P:Microsoft.ServiceBus.Messaging.AuthorizationRule.IssuerName" /> name of the claim issuer.</param>
      <param name="claimType">The <see cref="P:Microsoft.ServiceBus.Messaging.AuthorizationRule.ClaimType" /> type of the claim.</param>
      <param name="claimValue">The <see cref="P:Microsoft.ServiceBus.Messaging.AuthorizationRule.ClaimValue" /> value of the claim.</param>
      <param name="rights">The list of possible <see cref="P:Microsoft.ServiceBus.Messaging.AuthorizationRule.Rights" />.</param>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.AllowRule.KeyName">
      <summary>Gets or sets the allow rule key name.</summary>
      <returns>The allow rule key name.</returns>
    </member>
    <member name="T:Microsoft.ServiceBus.Messaging.AllowRuleClaimType">
      <summary>Specifies an enumeration of AllowRuleClaim type.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.AllowRuleClaimType.Role">
      <summary>The type is Role.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.AllowRuleClaimType.Upn">
      <summary>The type is Upn.</summary>
    </member>
    <member name="T:Microsoft.ServiceBus.Messaging.AuthorizationRule">
      <summary>Defines the Azure Service Bus authorization rule that is used to determine whether an operation is permissible or not.</summary>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.AuthorizationRule.ClaimType">
      <summary>Gets or sets the claim type.</summary>
      <returns>The claim type.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.AuthorizationRule.ClaimValue">
      <summary>Gets or sets the claim value which is either ‘Send’, ‘Listen’, or ‘Manage’.</summary>
      <returns>The claim value which is either ‘Send’, ‘Listen’, or ‘Manage’.</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.AuthorizationRule.Clone">
      <summary>Creates a copy of <see cref="T:Microsoft.ServiceBus.Messaging.AuthorizationRule" />.</summary>
      <returns>A created copy of <see cref="T:Microsoft.ServiceBus.Messaging.AuthorizationRule" />.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.AuthorizationRule.CreatedTime">
      <summary>Gets or sets the date and time when the authorization rule was created.</summary>
      <returns>The date and time when the authorization rule was created.</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.AuthorizationRule.Equals(System.Object)">
      <summary>Determines whether the specified object is equal to the current object.</summary>
      <returns>true if the specified object is equal to the current object; otherwise, false.</returns>
      <param name="obj">The object to compare with the current object.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.AuthorizationRule.GetHashCode">
      <summary>Returns the hash code for this instance.</summary>
      <returns>The hash code for this instance.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.AuthorizationRule.IssuerName">
      <summary>Gets or sets the name identifier of the issuer.</summary>
      <returns>The name identifier of the issuer.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.AuthorizationRule.KeyName">
      <summary>Gets or sets the authorization rule key name.</summary>
      <returns>The authorization rule key name.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.AuthorizationRule.ModifiedTime">
      <summary>Gets or sets the date and time when the authorization rule was modified.</summary>
      <returns>The date and time when the authorization rule was modified.</returns>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.AuthorizationRule.NameIdentifierClaimType">
      <summary>The name identifier claim rule.</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.AuthorizationRule.OnValidate">
      <summary>Enables derived classes to provide custom handling when validating the authorization rule.</summary>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.AuthorizationRule.Revision">
      <summary>Gets or sets the modification revision number.</summary>
      <returns>The modification revision number.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.AuthorizationRule.Rights">
      <summary>Gets or sets the list of rights.</summary>
      <returns>The list of rights.</returns>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.AuthorizationRule.RoleClaimType">
      <summary>The role claim rule.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.AuthorizationRule.RoleRoleClaimType">
      <summary>The role role claim rule.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.AuthorizationRule.SharedAccessKeyClaimType">
      <summary>The shared access key claim rule.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.AuthorizationRule.ShortNameIdentifierClaimType">
      <summary>The short name identifier claim rule.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.AuthorizationRule.ShortUpnClaimType">
      <summary>The short UPN claim rule.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.AuthorizationRule.UpnClaimType">
      <summary>The UPN claim rule.</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.AuthorizationRule.ValidateRights(System.Collections.Generic.IEnumerable{Microsoft.ServiceBus.Messaging.AccessRights})">
      <summary>Checks the validity of the specified access rights.</summary>
      <param name="value">The access rights to check.</param>
    </member>
    <member name="T:Microsoft.ServiceBus.Messaging.AuthorizationRules">
      <summary>Represents a collection of <see cref="T:Microsoft.ServiceBus.Messaging.AuthorizationRule" />.</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.AuthorizationRules.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.Messaging.AuthorizationRules" /> class.</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.AuthorizationRules.#ctor(System.Collections.Generic.IEnumerable{Microsoft.ServiceBus.Messaging.AuthorizationRule})">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.Messaging.AuthorizationRules" /> class with a list of <see cref="T:Microsoft.ServiceBus.Messaging.AuthorizationRule" />.</summary>
      <param name="enumerable">The list of <see cref="T:Microsoft.ServiceBus.Messaging.AuthorizationRule" />.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.AuthorizationRules.Add(Microsoft.ServiceBus.Messaging.AuthorizationRule)">
      <summary>Adds the specified <see cref="T:Microsoft.ServiceBus.Messaging.AuthorizationRule" /> into the collection.</summary>
      <param name="item">The <see cref="T:Microsoft.ServiceBus.Messaging.AuthorizationRule" /> to be added.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.AuthorizationRules.Clear">
      <summary>Clears all elements in the collection.</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.AuthorizationRules.Contains(Microsoft.ServiceBus.Messaging.AuthorizationRule)">
      <summary>Determines whether the specified item exists in the collection.</summary>
      <returns>true if the specified item is found; otherwise, false.</returns>
      <param name="item">The item to search in the collection.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.AuthorizationRules.CopyTo(Microsoft.ServiceBus.Messaging.AuthorizationRule[],System.Int32)">
      <summary>Copies the elements into an array starting at the specified array index.</summary>
      <param name="array">The array to hold the copied elements.</param>
      <param name="arrayIndex">The zero-based index at which copying starts.</param>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.AuthorizationRules.Count">
      <summary>Gets or sets the number of <see cref="T:Microsoft.ServiceBus.Messaging.AuthorizationRule" /> contained in the collection.</summary>
      <returns>The number of <see cref="T:Microsoft.ServiceBus.Messaging.AuthorizationRule" /> contained in the collection.</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.AuthorizationRules.GetEnumerator">
      <summary>Gets the enumerator that iterates through the collection.</summary>
      <returns>The enumerator that can be used to iterate through the collection.</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.AuthorizationRules.GetRules(System.Predicate{Microsoft.ServiceBus.Messaging.AuthorizationRule})">
      <summary>Gets the sets of <see cref="T:Microsoft.ServiceBus.Messaging.AuthorizationRule" />.</summary>
      <returns>The sets of <see cref="T:Microsoft.ServiceBus.Messaging.AuthorizationRule" /> that match the specified value.</returns>
      <param name="match">The authorization rule to match the specified value.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.AuthorizationRules.GetRules(System.String)">
      <summary>Gets the set of <see cref="T:Microsoft.ServiceBus.Messaging.AuthorizationRule" /> that matches the specified value.</summary>
      <returns>The sets of <see cref="T:Microsoft.ServiceBus.Messaging.AuthorizationRule" /> that match the specified value.</returns>
      <param name="claimValue">The value to search for.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.AuthorizationRules.HasEqualRuntimeBehavior(Microsoft.ServiceBus.Messaging.AuthorizationRules)">
      <summary>Determines whether the specified <see cref="T:Microsoft.ServiceBus.Messaging.AuthorizationRules" /> has equal runtime behavior as this current object.</summary>
      <returns>true if the they are the equal runtime behavior; otherwise, false.</returns>
      <param name="comparand">The <see cref="T:Microsoft.ServiceBus.Messaging.AuthorizationRules" /> to compare to the current object.</param>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.AuthorizationRules.innerCollection">
      <summary>Specifies the inner collection.</summary>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.AuthorizationRules.IsReadOnly">
      <summary>Gets or sets whether the <see cref="T:Microsoft.ServiceBus.Messaging.AuthorizationRules" /> is read only.</summary>
      <returns>true if the <see cref="T:Microsoft.ServiceBus.Messaging.AuthorizationRules" /> is read only; otherwise, false.</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.AuthorizationRules.Remove(Microsoft.ServiceBus.Messaging.AuthorizationRule)">
      <summary>Removes the specified <see cref="T:Microsoft.ServiceBus.Messaging.AuthorizationRule" /> from the collection.</summary>
      <returns>true if the operation succeeded; otherwise, false.</returns>
      <param name="item">The item to remove.</param>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.AuthorizationRules.RequiresEncryption">
      <summary>Gets a value that indicates whether the <see cref="T:Microsoft.ServiceBus.Messaging.AuthorizationRules" /> requires encryption.</summary>
      <returns>true if the <see cref="T:Microsoft.ServiceBus.Messaging.AuthorizationRules" /> requires encryption; otherwise, false.</returns>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.AuthorizationRules.Serializer">
      <summary>Specifies the serializer for serializing and deserializing the object.</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.AuthorizationRules.System#Collections#IEnumerable#GetEnumerator">
      <summary>Gets the enumerator that iterates through the collection.</summary>
      <returns>The enumerator that can be used to iterate through the collection.</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.AuthorizationRules.TryGetSharedAccessAuthorizationRule(System.String,Microsoft.ServiceBus.Messaging.SharedAccessAuthorizationRule@)">
      <summary>Gets the rule associated with the specified key.</summary>
      <returns>true if the <see cref="T:Microsoft.ServiceBus.Messaging.AuthorizationRules" /> contains an element with the specified key; otherwise, false.</returns>
      <param name="keyName">The name of the key.</param>
      <param name="rule">The rule associated with the specified key.</param>
    </member>
    <member name="T:Microsoft.ServiceBus.Messaging.BrokeredMessage">
      <summary>Represents the unit of communication between AppFabric ServiceBus clients.</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.BrokeredMessage.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.Messaging.BrokeredMessage" /> class.</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.BrokeredMessage.#ctor(System.IO.Stream)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.Messaging.BrokeredMessage" /> class.</summary>
      <param name="messageBodyStream">The message body stream.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.BrokeredMessage.#ctor(System.IO.Stream,System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.Messaging.BrokeredMessage" /> class using the supplied stream as its body.</summary>
      <param name="messageBodyStream">The message body stream.</param>
      <param name="ownsStream">true to indicate that the stream will be closed when the message is closed; false to indicate that the stream will not be closed when the message is closed.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.BrokeredMessage.#ctor(System.Object)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.Messaging.BrokeredMessage" /> class from a given object by using DataContractSerializer with a binary XmlDictionaryWriter.</summary>
      <param name="serializableObject">The serializable object.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.BrokeredMessage.#ctor(System.Object,System.Runtime.Serialization.XmlObjectSerializer)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.Messaging.BrokeredMessage" /> class from a given object using the provided XmlObjectSerializer.</summary>
      <param name="serializableObject">The serializable object.</param>
      <param name="serializer">The serializer object.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.BrokeredMessage.Abandon">
      <summary>Abandons the lock on a peek-locked message.</summary>
      <exception cref="T:System.ObjectDisposedException">Thrown when the message is in the disposed state or the receiver with which the message was received is in disposed state.</exception>
      <exception cref="T:System.InvalidOperationException">Thrown when invoked on a message that has not been received from the message server or invoked on a message that has not been received in peek-lock mode.</exception>
      <exception cref="T:System.TimeoutException">Thrown when operation times out. The timeout period is initialized through the <see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactorySettings" />. You may need to increase the value of <see cref="P:Microsoft.ServiceBus.Messaging.MessagingFactorySettings.OperationTimeout" /> to avoid this exception if the timeout value is relatively low.</exception>
      <exception cref="T:System.ServiceModel.MessagingCommunicationException">Thrown when the queue or subscription that receives the message is no longer present in the message server.</exception>
      <exception cref="T:Microsoft.ServiceBus.Messaging.ServerBusyException">When service bus service is busy and is unable process the request.</exception>
      <exception cref="T:Microsoft.ServiceBus.Messaging.MessagingEntityNotFoundException">When messaging entity the message was received from has been deleted.</exception>
      <exception cref="T:Microsoft.ServiceBus.Messaging.MessageLockLostException">When the lock associated with this message was lost or the lock token was not found.</exception>
      <exception cref="T:Microsoft.ServiceBus.Messaging.SessionLockLostException">When this message was received from a Session and the lock associated with the session was lost.</exception>
      <exception cref="T:System.UnauthorizedAccessException">When the security token provided by the TokenProvider does not contain the claims to perform this operation.</exception>
      <exception cref="T:System.ServiceModel.QuotaExceededException">When the number of concurrent connections to an entity exceed the maximum allowed value.</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.BrokeredMessage.Abandon(System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Abandons the lock on a peek-locked message.</summary>
      <param name="propertiesToModify">The key-value pair collection of properties to modify.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.BrokeredMessage.AbandonAsync">
      <summary>Asynchronously abandons the lock on a peek-locked message.</summary>
      <returns>The asynchronous result of the operation.</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.BrokeredMessage.AbandonAsync(System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Asynchronously abandons the lock on a peek-locked message.</summary>
      <returns>The asynchronous result of the operation.</returns>
      <param name="propertiesToModify">The key-value pair collection of properties to modify.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.BrokeredMessage.BeginAbandon(System.AsyncCallback,System.Object)">
      <summary>Begins an asynchronous operation to abandon the lock on a peek-locked message.</summary>
      <returns>An <see cref="T:System.IAsyncResult" /> that references the asynchronous request to abandon the lock on a peek-locked message.</returns>
      <param name="callback">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</param>
      <param name="state">A user-defined object that contains information about the receive operation. This object is passed to the EndAbandon delegate when the operation is complete.</param>
      <exception cref="T:System.ObjectDisposedException">Thrown when the message is in the disposed state or the receiver with which the message was received is in the disposed state.</exception>
      <exception cref="T:System.InvalidOperationException">Thrown when invoked on a message that has not been received from the message server.</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.BrokeredMessage.BeginAbandon(System.Collections.Generic.IDictionary{System.String,System.Object},System.AsyncCallback,System.Object)">
      <summary>Begins an asynchronous operation to abandon the lock on a peek-locked message.</summary>
      <returns>An <see cref="T:System.IAsyncResult" /> that references the asynchronous request to abandon the lock on a peek-locked message.</returns>
      <param name="propertiesToModify">The key-value pair collection of properties to modify.</param>
      <param name="callback">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</param>
      <param name="state">A user-defined object that contains information about the receive operation. This object is passed to the EndAbandon delegate when the operation is complete.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.BrokeredMessage.BeginComplete(System.AsyncCallback,System.Object)">
      <summary>Begins an asynchronous operation to complete a message.</summary>
      <returns>An <see cref="T:System.IAsyncResult" /> that references the asynchronous request to complete a message.</returns>
      <param name="callback">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</param>
      <param name="state">A user-defined object that contains information about the receive operation. This object is passed to the EndComplete delegate when the operation is complete.</param>
      <exception cref="T:System.ObjectDisposedException">Thrown when the message is in the disposed state or the receiver with which the message was received is in the disposed state.</exception>
      <exception cref="T:System.InvalidOperationException">Thrown when invoked on a message that has not been received from the message server.</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.BrokeredMessage.BeginDeadLetter(System.AsyncCallback,System.Object)">
      <summary>Begins an asynchronous operation to move the message to the dead letter queue.</summary>
      <returns>An <see cref="T:System.IAsyncResult" /> that references the asynchronous request to dead letter the message.</returns>
      <param name="callback">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</param>
      <param name="state">A user-defined object that contains information about the receive operation. This object is passed to the EndDeadLetter delegate when the operation is complete.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.BrokeredMessage.BeginDeadLetter(System.Collections.Generic.IDictionary{System.String,System.Object},System.AsyncCallback,System.Object)">
      <summary>Begins an asynchronous operation to move the message to the dead letter queue.</summary>
      <returns>An <see cref="T:System.IAsyncResult" /> that references the asynchronous request to dead letter the message.</returns>
      <param name="propertiesToModify">The key-value pair collection of properties to modify.</param>
      <param name="callback">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</param>
      <param name="state">A user-defined object that contains information about the receive operation. This object is passed to the EndDeadLetter delegate when the operation is complete.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.BrokeredMessage.BeginDeadLetter(System.String,System.String,System.AsyncCallback,System.Object)">
      <summary>Begins an asynchronous operation to move the message to the dead letter queue.</summary>
      <returns>An <see cref="T:System.IAsyncResult" /> that references the asynchronous request to dead letter the message.</returns>
      <param name="deadLetterReason">The reason for deadlettering the message.</param>
      <param name="deadLetterErrorDescription">The description information for deadlettering the message.</param>
      <param name="callback">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</param>
      <param name="state">A user-defined object that contains information about the receive operation. This object is passed to the EndDeadLetter delegate when the operation is complete.</param>
      <exception cref="T:System.ObjectDisposedException">Thrown when the message is in disposed state or the receiver with which the message was received is in disposed state.</exception>
      <exception cref="T:System.InvalidOperationException">Thrown when invoked on a message that has not been received from the message server.</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.BrokeredMessage.BeginDefer(System.AsyncCallback,System.Object)">
      <summary>Begins an asynchronous operation to defer a message.</summary>
      <returns>An <see cref="T:System.IAsyncResult" /> that references the asynchronous request to defer a message.</returns>
      <param name="callback">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</param>
      <param name="state">A user-defined object that contains information about the receive operation. This object is passed to the EndDefer(System.IAsyncResult) delegate when the operation is complete.</param>
      <exception cref="T:System.ObjectDisposedException">Thrown when the message is in disposed state or the receiver with which the message was received is in disposed state.</exception>
      <exception cref="T:System.InvalidOperationException">Thrown when invoked on a message that has not been received from the message server.</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.BrokeredMessage.BeginDefer(System.Collections.Generic.IDictionary{System.String,System.Object},System.AsyncCallback,System.Object)">
      <summary>Begins an asynchronous operation to defer a message.</summary>
      <returns>An <see cref="T:System.IAsyncResult" /> that references the asynchronous request to defer a message.</returns>
      <param name="propertiesToModify">The key-value pair collection of properties to modify.</param>
      <param name="callback">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</param>
      <param name="state">A user-defined object that contains information about the receive operation. This object is passed to the EndDefer(System.IAsyncResult) delegate when the operation is complete.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.BrokeredMessage.BeginRenewLock(System.AsyncCallback,System.Object)">
      <summary>Begins an asynchronous operation to renew lock on a message.</summary>
      <returns>An <see cref="T:System.IAsyncResult" /> that references the asynchronous request to renew lock on a message.</returns>
      <param name="callback">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</param>
      <param name="state">A user-defined object that contains information about the receive operation. This object is passed to the EndRenewLock(System.IAsyncResult) delegate when the operation is complete.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.BrokeredMessage.Clone">
      <summary>Clones a message, so that it is possible to send a clone of a message as a new message.</summary>
      <returns>The <see cref="T:Microsoft.ServiceBus.Messaging.BrokeredMessage" /> that contains the cloned message.</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.BrokeredMessage.Complete">
      <summary>Completes the receive operation of a message and indicates that the message should be marked as processed and deleted.</summary>
      <exception cref="T:System.ObjectDisposedException">Thrown when the message is in disposed state or the receiver with which the message was received is in disposed state.</exception>
      <exception cref="T:System.InvalidOperationException">Thrown when invoked on a message that has not been received from the message server or invoked on a message that has not been received in peek-lock mode.</exception>
      <exception cref="T:System.ServiceModel.MessagingCommunicationException">Thrown when the queue or subscription that receives the message is no longer present in the message server.</exception>
      <exception cref="T:System.TimeoutException">Thrown when the operation times out. The timeout period is initialized through the <see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactorySettings" />. You may need to increase the value of <see cref="P:Microsoft.ServiceBus.Messaging.MessagingFactorySettings.OperationTimeout" /> to avoid this exception if the timeout value is relatively low.</exception>
      <exception cref="T:Microsoft.ServiceBus.Messaging.MessageLockLostException">Thrown if the lock on the message has expired. LockDuration is an entity-wide setting and can be initialized through <see cref="P:Microsoft.ServiceBus.Messaging.QueueDescription.LockDuration" /> and <see cref="P:Microsoft.ServiceBus.Messaging.SubscriptionDescription.LockDuration" /> for queues and subscriptions respectively.</exception>
      <exception cref="T:Microsoft.ServiceBus.Messaging.SessionLockLostException">Thrown if the lock on the session has expired. The session lock duration is the same as the message LockDuration and is an entity-wide setting. It can be initialized through <see cref="P:Microsoft.ServiceBus.Messaging.QueueDescription.LockDuration" /> and <see cref="P:Microsoft.ServiceBus.Messaging.SubscriptionDescription.LockDuration" /> for queues and subscriptions respectively.</exception>
      <exception cref="T:Microsoft.ServiceBus.Messaging.ServerBusyException">When service bus service is busy and is unable process the request.</exception>
      <exception cref="T:Microsoft.ServiceBus.Messaging.MessagingEntityNotFoundException">When messaging entity the message was received from has been deleted.</exception>
      <exception cref="T:System.UnauthorizedAccessException">When the security token provided by the TokenProvider does not contain the claims to perform this operation.</exception>
      <exception cref="T:System.ServiceModel.QuotaExceededException">When the number of concurrent connections to an entity exceed the maximum allowed value.</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.BrokeredMessage.CompleteAsync">
      <summary>Asynchronously completes the receive operation of a message and indicates that the message should be marked as processed and deleted.</summary>
      <returns>The asynchronous result of the operation.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.BrokeredMessage.ContentType">
      <summary>Gets or sets the type of the content.</summary>
      <returns>The type of the content of the message body. This is a content type identifier utilized by the sender and receiver for application specific logic.</returns>
      <exception cref="T:System.ObjectDisposedException">Thrown if the message is in disposed state.</exception>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.BrokeredMessage.CorrelationId">
      <summary>Gets or sets the identifier of the correlation.</summary>
      <returns>The identifier of the correlation.</returns>
      <exception cref="T:System.ObjectDisposedException">Thrown if the message is in disposed state.</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.BrokeredMessage.DeadLetter">
      <summary>Moves the message to the dead letter queue.</summary>
      <exception cref="T:System.ObjectDisposedException">Thrown when the message is in disposed state or the receiver with which the message was received is in disposed state.</exception>
      <exception cref="T:System.InvalidOperationException">Thrown when invoked on a message that has not been received from the message server or invoked on a message that has not been received in peek-lock mode.</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.BrokeredMessage.DeadLetter(System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Moves the message to the dead letter queue.</summary>
      <param name="propertiesToModify">The key-value pair collection of properties to modify.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.BrokeredMessage.DeadLetter(System.String,System.String)">
      <summary>Moves the message to the dead letter queue.</summary>
      <param name="deadLetterReason">The reason for deadlettering the message.</param>
      <param name="deadLetterErrorDescription">The description information for deadlettering the message.</param>
      <exception cref="T:System.ObjectDisposedException">Thrown when the message is in disposed state or the receiver with which the message was received is in disposed state.</exception>
      <exception cref="T:System.InvalidOperationException">Thrown when invoked on a message that has not been received from the message server or invoked on a message that has not been received in peek-lock mode.</exception>
      <exception cref="T:System.ServiceModel.CommunicationException">Thrown when the queue or subscription that receives the message is no longer present in the message server.</exception>
      <exception cref="T:System.TimeoutException">Thrown when operation times out. Timeout period is initialized through the <see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactorySettings" />. You may need to increase the value of <see cref="P:Microsoft.ServiceBus.Messaging.MessagingFactorySettings.OperationTimeout" /> to avoid this exception if timeout value is relatively low.</exception>
      <exception cref="T:Microsoft.ServiceBus.Messaging.MessageLockLostException">Thrown if the lock on the message has expired. LockDuration is an entity-wide setting and can be initialized through <see cref="P:Microsoft.ServiceBus.Messaging.QueueDescription.LockDuration" /> and <see cref="P:Microsoft.ServiceBus.Messaging.SubscriptionDescription.LockDuration" /> for Queues and Subscriptions respectively.</exception>
      <exception cref="T:Microsoft.ServiceBus.Messaging.SessionLockLostException">Thrown if the lock on the session has expired. Session lock duration is the same as message LockDuration and is an entity-wide setting. It can be initialized through <see cref="P:Microsoft.ServiceBus.Messaging.QueueDescription.LockDuration" /> and <see cref="P:Microsoft.ServiceBus.Messaging.SubscriptionDescription.LockDuration" /> for Queues and Subscriptions respectively.</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.BrokeredMessage.DeadLetterAsync">
      <summary>Asynchronously moves the message to the dead letter queue.</summary>
      <returns>The asynchronous result of the operation.</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.BrokeredMessage.DeadLetterAsync(System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Asynchronously moves the message to the dead letter queue.</summary>
      <returns>The asynchronous result of the operation.</returns>
      <param name="propertiesToModify">The key-value pair collection of properties to modify.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.BrokeredMessage.DeadLetterAsync(System.String,System.String)">
      <summary>Asynchronously moves the message to the dead letter queue.</summary>
      <returns>The asynchronous result of the operation.</returns>
      <param name="deadLetterReason">The reason for deadlettering the message.</param>
      <param name="deadLetterErrorDescription">The description information for deadlettering the message.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.BrokeredMessage.Defer">
      <summary>Indicates that the receiver wants to defer the processing for this message.</summary>
      <exception cref="T:System.ObjectDisposedException">Thrown when the message is in the disposed state or the receiver with which the message was received is in the disposed state.</exception>
      <exception cref="T:System.InvalidOperationException">Thrown when invoked on a message that has not been received from the message server or invoked on a message that has not been received in peek-lock mode.</exception>
      <exception cref="T:System.ServiceModel.MessagingCommunicationException">Thrown when the queue or subscription that receives the message is no longer present in the message server.</exception>
      <exception cref="T:System.TimeoutException">Thrown when the operation times out. The timeout period is initialized through the <see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactorySettings" />. You may need to increase the value of <see cref="P:Microsoft.ServiceBus.Messaging.MessagingFactorySettings.OperationTimeout" /> to avoid this exception if the timeout value is relatively low.</exception>
      <exception cref="T:Microsoft.ServiceBus.Messaging.MessageLockLostException">Thrown if the lock on the message has expired. LockDuration is an entity-wide setting and can be initialized through <see cref="P:Microsoft.ServiceBus.Messaging.QueueDescription.LockDuration" /> and <see cref="P:Microsoft.ServiceBus.Messaging.SubscriptionDescription.LockDuration" /> for queues and subscriptions respectively.</exception>
      <exception cref="T:Microsoft.ServiceBus.Messaging.SessionLockLostException">Thrown if the lock on the session has expired. The session lock duration is the same as the message LockDuration and is an entity-wide setting. It can be initialized through <see cref="P:Microsoft.ServiceBus.Messaging.QueueDescription.LockDuration" /> and <see cref="P:Microsoft.ServiceBus.Messaging.SubscriptionDescription.LockDuration" /> for queues and subscriptions respectively.</exception>
      <exception cref="T:Microsoft.ServiceBus.Messaging.ServerBusyException">When service bus service is busy and is unable process the request.</exception>
      <exception cref="T:Microsoft.ServiceBus.Messaging.MessagingEntityNotFoundException">When messaging entity the message was received from has been deleted.</exception>
      <exception cref="T:System.UnauthorizedAccessException">When the security token provided by the TokenProvider does not contain the claims to perform this operation.</exception>
      <exception cref="T:System.ServiceModel.QuotaExceededException">When the number of concurrent connections to an entity exceed the maximum allowed value.</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.BrokeredMessage.Defer(System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Indicates that the receiver wants to defer the processing for this message.</summary>
      <param name="propertiesToModify">The key-value pair collection of properties to modify.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.BrokeredMessage.DeferAsync">
      <summary>Asynchronously indicates that the receiver wants to defer the processing for this message.</summary>
      <returns>The asynchronous result of the operation.</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.BrokeredMessage.DeferAsync(System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Asynchronously indicates that the receiver wants to defer the processing for this message.</summary>
      <returns>The asynchronous result of the operation.</returns>
      <param name="propertiesToModify">The key-value pair collection of properties to modify.</param>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.BrokeredMessage.DeliveryCount">
      <summary>Gets the number of deliveries.</summary>
      <returns>The number of deliveries.</returns>
      <exception cref="T:System.ObjectDisposedException">Thrown if the message is in disposed state.</exception>
      <exception cref="T:System.InvalidOperationException">Thrown if the message has not been delivered by ServiceBus.</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.BrokeredMessage.Dispose">
      <summary>Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.BrokeredMessage.EndAbandon(System.IAsyncResult)">
      <summary>Ends an asynchronous request to abandon the lock on a peek-locked message.</summary>
      <param name="result">An <see cref="T:System.IAsyncResult" /> that references the asynchronous Abandon request.</param>
      <exception cref="T:System.ArgumentException">Thrown if an incorrect <paramref name="result" /> is provided. The <paramref name="result" /> object passed to EndAbandon must be the one returned from the matching BeginAbandon or passed to the callback provided to BeginAbandon.</exception>
      <exception cref="T:System.ArgumentNullException">Thrown if invoked with a null <paramref name="result" />.</exception>
      <exception cref="T:System.TimeoutException">Thrown when the operation times out. The timeout period is initialized through the <see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactorySettings" />. You may need to increase the value of <see cref="P:Microsoft.ServiceBus.Messaging.MessagingFactorySettings.OperationTimeout" /> to avoid this exception if the timeout value is relatively low.</exception>
      <exception cref="T:System.ServiceModel.MessagingCommunicationException">Thrown when the queue or subscription that receives the message is no longer present in the message server.</exception>
      <exception cref="T:System.InvalidOperationException">Thrown when invoked on a message that has not been received in peek-lock mode.</exception>
      <exception cref="T:Microsoft.ServiceBus.Messaging.ServerBusyException">When service bus service is busy and is unable process the request.</exception>
      <exception cref="T:Microsoft.ServiceBus.Messaging.MessagingEntityNotFoundException">When messaging entity the message was received from has been deleted.</exception>
      <exception cref="T:Microsoft.ServiceBus.Messaging.MessageLockLostException">When the lock associated with this message was lost or the lock token was not found.</exception>
      <exception cref="T:Microsoft.ServiceBus.Messaging.SessionLockLostException">When this message was received from a Session and the lock associated with the session was lost.</exception>
      <exception cref="T:System.UnauthorizedAccessException">When the security token provided by the TokenProvider does not contain the claims to perform this operation.</exception>
      <exception cref="T:System.ServiceModel.QuotaExceededException">When the number of concurrent connections to an entity exceed the maximum allowed value.</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.BrokeredMessage.EndComplete(System.IAsyncResult)">
      <summary>Ends an asynchronous operation to complete a message.</summary>
      <param name="result">An <see cref="T:System.IAsyncResult" /> that references the asynchronous Complete request.</param>
      <exception cref="T:System.ArgumentException">Thrown if an incorrect <paramref name="result" /> is provided. The <paramref name="result" /> object passed to EndComplete must be the one returned from the matching BeginComplete or passed to the callback provided to BeginComplete.</exception>
      <exception cref="T:System.ArgumentNullException">Thrown if invoked with a null <paramref name="result" />.</exception>
      <exception cref="T:System.ServiceModel.MessagingCommunicationException">Thrown when the queue or subscription that receives the message is no longer present in the message server.</exception>
      <exception cref="T:System.TimeoutException">Thrown when the operation times out. The timeout period is initialized through the <see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactorySettings" />. You may need to increase the value of <see cref="P:Microsoft.ServiceBus.Messaging.MessagingFactorySettings.OperationTimeout" /> to avoid this exception if the timeout value is relatively low.</exception>
      <exception cref="T:Microsoft.ServiceBus.Messaging.MessageLockLostException">Thrown if the lock on the message has expired. LockDuration is an entity-wide setting and can be initialized through <see cref="P:Microsoft.ServiceBus.Messaging.QueueDescription.LockDuration" /> and <see cref="P:Microsoft.ServiceBus.Messaging.SubscriptionDescription.LockDuration" /> for queues and subscriptions respectively.</exception>
      <exception cref="T:Microsoft.ServiceBus.Messaging.SessionLockLostException">Thrown if the lock on the session has expired. The session lock duration is the same as the message LockDuration and is an entity-wide setting. It can be initialized through <see cref="P:Microsoft.ServiceBus.Messaging.QueueDescription.LockDuration" /> and <see cref="P:Microsoft.ServiceBus.Messaging.SubscriptionDescription.LockDuration" /> for queues and subscriptions respectively.</exception>
      <exception cref="T:System.InvalidOperationException">Thrown when invoked on a message that has not been received in peek-lock mode.</exception>
      <exception cref="T:Microsoft.ServiceBus.Messaging.ServerBusyException">When service bus service is busy and is unable process the request.</exception>
      <exception cref="T:Microsoft.ServiceBus.Messaging.MessagingEntityNotFoundException">When messaging entity the message was received from has been deleted.</exception>
      <exception cref="T:System.UnauthorizedAccessException">When the security token provided by the TokenProvider does not contain the claims to perform this operation.</exception>
      <exception cref="T:System.ServiceModel.QuotaExceededException">When the number of concurrent connections to an entity exceed the maximum allowed value.</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.BrokeredMessage.EndDeadLetter(System.IAsyncResult)">
      <summary>Ends an asynchronous request to move the message to the dead letter queue.</summary>
      <param name="result">An <see cref="T:System.IAsyncResult" /> that references the asynchronous request to dead letter message.</param>
      <exception cref="T:System.ArgumentException">Thrown if an incorrect <paramref name="result" /> is provided. The <paramref name="result" /> object passed to EndDeadLetter must be the one returned from the matching BeginDeadLetter or passed to the callback provided to BeginDeadLetter.</exception>
      <exception cref="T:System.ArgumentNullException">Thrown if invoked with a null <paramref name="result" />.</exception>
      <exception cref="T:System.ServiceModel.MessagingCommunicationException">Thrown when the queue or subscription that receives the message is no longer present in the message server.</exception>
      <exception cref="T:System.TimeoutException">Thrown when the operation times out. Timeout period is initialized through the <see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactorySettings" />. You may need to increase the value of <see cref="P:Microsoft.ServiceBus.Messaging.MessagingFactorySettings.OperationTimeout" /> to avoid this exception if timeout value is relatively low.</exception>
      <exception cref="T:Microsoft.ServiceBus.Messaging.MessageLockLostException">Thrown if the lock on the message has expired. LockDuration is an entity-wide setting and can be initialized through <see cref="P:Microsoft.ServiceBus.Messaging.QueueDescription.LockDuration" /> and <see cref="P:Microsoft.ServiceBus.Messaging.SubscriptionDescription.LockDuration" /> for Queues and Subscriptions respectively.</exception>
      <exception cref="T:Microsoft.ServiceBus.Messaging.SessionLockLostException">Thrown if the lock on the session has expired. Session lock duration is the same as message LockDuration and is an entity-wide setting. It can be initialized through <see cref="P:Microsoft.ServiceBus.Messaging.QueueDescription.LockDuration" /> and <see cref="P:Microsoft.ServiceBus.Messaging.SubscriptionDescription.LockDuration" /> for Queues and Subscriptions respectively.</exception>
      <exception cref="T:System.InvalidOperationException">Thrown when invoked on a message that has not been received in peek-lock mode.</exception>
      <exception cref="T:Microsoft.ServiceBus.Messaging.MessagingEntityNotFoundException">When messaging entity the message was received from has been deleted.</exception>
      <exception cref="T:System.UnauthorizedAccessException">When the security token provided by the TokenProvider does not contain the claims to perform this operation.</exception>
      <exception cref="T:System.ServiceModel.QuotaExceededException">When the number of concurrent connections to an entity exceed the maximum allowed value.</exception>
      <exception cref="T:Microsoft.ServiceBus.Messaging.ServerBusyException">When service bus service is busy and is unable process the request.</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.BrokeredMessage.EndDefer(System.IAsyncResult)">
      <summary>Ends an asynchronous request to defer a message.</summary>
      <param name="result">An <see cref="T:System.IAsyncResult" /> that references the asynchronous Defer request.</param>
      <exception cref="T:System.ArgumentException">Thrown if an incorrect <paramref name="result" /> is provided. The <paramref name="result" /> object passed to EndDefer must be the one returned from the matching BeginDefer or passed to the callback provided to BeginDefer.</exception>
      <exception cref="T:System.ArgumentNullException">Thrown if invoked with a null <paramref name="result" />.</exception>
      <exception cref="T:System.ServiceModel.MessagingCommunicationException">Thrown when the queue or subscription that receives the message is no longer present in the message server.</exception>
      <exception cref="T:System.TimeoutException">Thrown when the operation times out. Timeout period is initialized through the <see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactorySettings" />. You may need to increase the value of <see cref="P:Microsoft.ServiceBus.Messaging.MessagingFactorySettings.OperationTimeout" /> to avoid this exception if timeout value is relatively low.</exception>
      <exception cref="T:Microsoft.ServiceBus.Messaging.MessageLockLostException">Thrown if the lock on the message has expired. LockDuration is an entity-wide setting and can be initialized through <see cref="P:Microsoft.ServiceBus.Messaging.QueueDescription.LockDuration" /> and <see cref="P:Microsoft.ServiceBus.Messaging.SubscriptionDescription.LockDuration" /> for Queues and Subscriptions respectively.</exception>
      <exception cref="T:Microsoft.ServiceBus.Messaging.SessionLockLostException">Thrown if the lock on the session has expired. Session lock duration is the same as message LockDuration and is an entity-wide setting. It can be initialized through <see cref="P:Microsoft.ServiceBus.Messaging.QueueDescription.LockDuration" /> and <see cref="P:Microsoft.ServiceBus.Messaging.SubscriptionDescription.LockDuration" /> for Queues and Subscriptions respectively.</exception>
      <exception cref="T:System.InvalidOperationException">Thrown when invoked on a message that has not been received in peek-lock mode.</exception>
      <exception cref="T:Microsoft.ServiceBus.Messaging.ServerBusyException">When service bus service is busy and is unable process the request.</exception>
      <exception cref="T:Microsoft.ServiceBus.Messaging.MessagingEntityNotFoundException">When messaging entity the message was received from has been deleted.</exception>
      <exception cref="T:System.UnauthorizedAccessException">When the security token provided by the TokenProvider does not contain the claims to perform this operation.</exception>
      <exception cref="T:System.ServiceModel.QuotaExceededException">When the number of concurrent connections to an entity exceed the maximum allowed value.</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.BrokeredMessage.EndRenewLock(System.IAsyncResult)">
      <summary>Ends an asynchronous request to renew lock on a message.</summary>
      <param name="result">An <see cref="T:System.IAsyncResult" /> that references the RenewLock method.</param>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.BrokeredMessage.EnqueuedSequenceNumber">
      <summary>Gets or sets the enqueued sequence number of the message.</summary>
      <returns>The enqueued sequence number of the message.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.BrokeredMessage.EnqueuedTimeUtc">
      <summary>Gets or sets the date and time of the sent time in UTC.</summary>
      <returns>The enqueue time in UTC. This value represents the actual time of enqueuing the message.</returns>
      <exception cref="T:System.ObjectDisposedException">Thrown if the message is in disposed state.</exception>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.BrokeredMessage.ExpiresAtUtc">
      <summary>Gets the date and time in UTC at which the message is set to expire.</summary>
      <returns>The message expiration time in UTC.</returns>
      <exception cref="T:System.ObjectDisposedException">Thrown if the message is in disposed state.</exception>
      <exception cref="T:System.InvalidOperationException">If the message has not been delivered by ServerBus.</exception>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.BrokeredMessage.ForcePersistence">
      <summary>Gets or sets a value that indicates whether the message is to be persisted to the database immediately, instead of being held in memory for a short time. This property is ignored if the message is sent to a non-express queue or topic.</summary>
      <returns>true if the message is to be persisted to the database immediately, instead of being held in memory for a short time; otherwise, false.</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.BrokeredMessage.GetBody``1">
      <summary>Deserializes the brokered message body into an object of the specified type by using the <see cref="T:System.Runtime.Serialization.DataContractSerializer" /> with a binary <see cref="T:System.Xml.XmlDictionaryReader" />.</summary>
      <returns>The deserialized object or graph.</returns>
      <typeparam name="T">The type to which the message body will be deserialized.</typeparam>
      <exception cref="T:System.ObjectDisposedException">If the message is in disposed state or the message body stream is already disposed.</exception>
      <exception cref="T:System.InvalidOperationException">If the message contains a null body stream or the body stream contains no data or the message body has already been consumed.</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.BrokeredMessage.GetBody``1(System.Runtime.Serialization.XmlObjectSerializer)">
      <summary>Deserializes the brokered message body into an object of the specified type by using the supplied <see cref="T:System.Runtime.Serialization.XmlObjectSerializer" />.</summary>
      <returns>The deserialized object or graph.</returns>
      <param name="serializer">The serializer object.</param>
      <typeparam name="T">The generic type parameter.</typeparam>
      <exception cref="T:System.ObjectDisposedException">Thrown if the message is in disposed state or the message body has already been consumed.</exception>
      <exception cref="T:System.ArgumentNullException">Thrown when invoked with a null <paramref name="serializer" /> object.</exception>
      <exception cref="T:System.InvalidOperationException">Thrown if the message contains a null body stream or the body stream contains no data or the message body has already been consumed.</exception>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.BrokeredMessage.IsBodyConsumed">
      <summary>Specifies whether the message has been consumed.</summary>
      <returns>true if the message has been consumed; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.BrokeredMessage.Label">
      <summary>Gets or sets the application specific label.</summary>
      <returns>The application specific label.</returns>
      <exception cref="T:System.ObjectDisposedException">Thrown if the message is in disposed state.</exception>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.BrokeredMessage.LockedUntilUtc">
      <summary>Gets the date and time in UTC until which the message will be locked in the queue/subscription.</summary>
      <returns>The date and time until which the message will be locked in the queue/subscription.</returns>
      <exception cref="T:System.ObjectDisposedException">Thrown if the message is in disposed state.</exception>
      <exception cref="T:System.InvalidOperationException">Thrown if the message was not received from the ServiceBus.</exception>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.BrokeredMessage.LockToken">
      <summary>Gets the lock token assigned by Service Bus to this message.</summary>
      <returns>The lock token assigned by Service Bus to this message.</returns>
      <exception cref="T:System.ObjectDisposedException">Thrown if the message is in disposed state.</exception>
      <exception cref="T:System.InvalidOperationException">Thrown if the message was not received from the ServiceBus.</exception>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.BrokeredMessage.MessageId">
      <summary>Gets or sets the identifier of the message.</summary>
      <returns>The identifier of the message.</returns>
      <exception cref="T:System.ObjectDisposedException">Thrown if the message is in disposed state.</exception>
      <exception cref="T:System.ArgumentException">Thrown if the message identifier is null or exceeds 128 characters in length.</exception>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.BrokeredMessage.PartitionKey">
      <summary>Gets or sets a partition key for sending a transactional message to a queue or topic that is not session-aware.</summary>
      <returns>The partition key for sending a transactional message.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.BrokeredMessage.Properties">
      <summary>Gets the application specific message properties.</summary>
      <returns>The application specific message properties.</returns>
      <exception cref="T:System.ObjectDisposedException">Thrown if the message is in disposed state.</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.BrokeredMessage.RenewLock">
      <summary>Renews the lock on a message.</summary>
      <exception cref="T:Microsoft.ServiceBus.Messaging.MessagingException">If <see cref="P:Microsoft.ServiceBus.Messaging.MessagingException.IsTransient" /> is true, you can retry the operation immediately.</exception>
      <exception cref="T:Microsoft.ServiceBus.Messaging.MessagingCommunicationException">You can retry the operation immediately.</exception>
      <exception cref="T:Microsoft.ServiceBus.Messaging.MessageLockLostException">Thrown if you have called <see cref="M:Microsoft.ServiceBus.Messaging.BrokeredMessage.RenewLock" /> too late. In a session, this is never thrown.</exception>
      <exception cref="T:Microsoft.ServiceBus.Messaging.SessionLockLostException">Thrown instead of <see cref="T:Microsoft.ServiceBus.Messaging.MessageLockLostException" /> if the message is from a <see cref="T:Microsoft.ServiceBus.Messaging.MessageSession" />.</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.BrokeredMessage.RenewLockAsync">
      <summary>Asynchronously renews the lock on a message.</summary>
      <returns>The asynchronous result of the operation.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.BrokeredMessage.ReplyTo">
      <summary>Gets or sets the address of the queue to reply to.</summary>
      <returns>The reply to queue address.</returns>
      <exception cref="T:System.ObjectDisposedException">Thrown if the message is in disposed state.</exception>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.BrokeredMessage.ReplyToSessionId">
      <summary>Gets or sets the session identifier to reply to.</summary>
      <returns>The session identifier to reply to.</returns>
      <exception cref="T:System.ObjectDisposedException">Thrown if the message is in disposed state.</exception>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.BrokeredMessage.ScheduledEnqueueTimeUtc">
      <summary>Gets or sets the date and time in UTC at which the message will be enqueued. This property returns the time in UTC; when setting the property, the supplied DateTime value must also be in UTC.</summary>
      <returns>The scheduled enqueue time in UTC. This value is for delayed message sending. It is utilized to delay messages sending to a specific time in the future.</returns>
      <exception cref="T:System.ObjectDisposedException">Thrown if the message is in disposed state.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Thrown if the passed in value is DateTime.MaxValue.</exception>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.BrokeredMessage.SequenceNumber">
      <summary>Gets the unique number assigned to a message by the Service Bus.</summary>
      <returns>The unique number assigned to a message by the Service Bus.</returns>
      <exception cref="T:System.ObjectDisposedException">Thrown if the message is in disposed state.</exception>
      <exception cref="T:System.InvalidOperationException">Thrown if the message was not received from the message server.</exception>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.BrokeredMessage.SessionId">
      <summary>Gets or sets the identifier of the session.</summary>
      <returns>The identifier of the session.</returns>
      <exception cref="T:System.ObjectDisposedException">Thrown if the message is in disposed state.</exception>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.BrokeredMessage.Size">
      <summary>Gets the size of the message in bytes.</summary>
      <returns>The message size in bytes.</returns>
      <exception cref="T:System.ObjectDisposedException">Thrown if the message is in disposed state.</exception>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.BrokeredMessage.State">
      <summary>Gets or sets the state of the message.</summary>
      <returns>The state of the message.</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.BrokeredMessage.System#Xml#Serialization#IXmlSerializable#GetSchema">
      <summary>This method is reserved and should not be used. When implementing the IXmlSerializable interface, you should return null (Nothing in Visual Basic) from this method, and instead, if specifying a custom schema is required, apply the XmlSchemaProviderAttribute to the class.</summary>
      <returns>An XmlSchema that describes the XML representation of the object that is produced by the WriteXml method and consumed by the ReadXml method.</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.BrokeredMessage.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)">
      <summary>Generates an object from its XML representation. This method is reserved for internal use and should not be used directly or indirectly (for example, using a serializer or a formatter).</summary>
      <param name="reader">The XmlReader stream from which the object is deserialized.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.BrokeredMessage.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)">
      <summary>Converts an object into its XML representation. This method is reserved for internal use and should not be used directly or indirectly (e.g. using a serializer or a formatter).</summary>
      <param name="writer">The XmlWriter stream to which the object is serialized.</param>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.BrokeredMessage.TimeToLive">
      <summary>Gets or sets the message’s time to live value. This is the duration after which the message expires, starting from when the message is sent to the Service Bus. Messages older than their TimeToLive value will expire and no longer be retained in the message store. Subscribers will be unable to receive expired messages.TimeToLive is the maximum lifetime that a message can receive, but its value cannot exceed the entity specified the <see cref="P:Microsoft.ServiceBus.Messaging.QueueDescription.DefaultMessageTimeToLive" /> value on the destination queue or subscription. If a lower TimeToLive value is specified, it will be applied to the individual message. However, a larger value specified on the message will be overridden by the entity’s DefaultMessageTimeToLive value.</summary>
      <returns>The message’s time to live value.</returns>
      <exception cref="T:System.ObjectDisposedException">Thrown if the message is in disposed state.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Thrown if the passed in value is less than or equal to TimeSpan.Zero.</exception>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.BrokeredMessage.To">
      <summary>Gets or sets the send to address.</summary>
      <returns>The send to address.</returns>
      <exception cref="T:System.ObjectDisposedException">Thrown if the message is in disposed state.</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.BrokeredMessage.ToString">
      <summary>Returns a string that represents the current message.</summary>
      <returns>The string representation of the current message.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.BrokeredMessage.ViaPartitionKey">
      <summary>Gets or sets a partition key value when a transaction is to be used to send messages via a transfer queue.</summary>
      <returns>The partition key value when a transaction is to be used to send messages via a transfer queue.</returns>
    </member>
    <member name="T:Microsoft.ServiceBus.Messaging.BrokeredMessageProperty">
      <summary>Represents the property bag for a <see cref="T:Microsoft.ServiceBus.Messaging.BrokeredMessage" />.</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.BrokeredMessageProperty.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.Messaging.BrokeredMessageProperty" /> class.</summary>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.BrokeredMessageProperty.ContentType">
      <summary>Gets or sets the type of the content.</summary>
      <returns>The type of the content of the message body. This is a content type identifier utilized by the sender and receiver for application specific logic.</returns>
      <exception cref="T:System.ObjectDisposedException">If the message is in disposed state.</exception>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.BrokeredMessageProperty.CorrelationId">
      <summary>Gets or sets the identifier of the correlation.</summary>
      <returns>The correlation identifier.</returns>
      <exception cref="T:System.ObjectDisposedException">If the message is in disposed state.</exception>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.BrokeredMessageProperty.DeliveryCount">
      <summary>Gets the number of deliveries that have been made to deliver this message.</summary>
      <returns>The number of deliveries that have been made to deliver this message.</returns>
      <exception cref="T:System.ObjectDisposedException">If the message is in disposed state.</exception>
      <exception cref="T:System.InvalidOperationException">If the message has not been delivered by ServiceBus.</exception>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.BrokeredMessageProperty.EnqueuedTimeUtc">
      <summary>Gets or sets the date and time of the sent time in UTC.</summary>
      <returns>The enqueue time in UTC. This value represents the actual time of enqueuing the message.</returns>
      <exception cref="T:System.ObjectDisposedException">If the message is in disposed state.</exception>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.BrokeredMessageProperty.ExpiresAtUtc">
      <summary>Gets the date and time in UTC at which the message is set to expire.</summary>
      <returns>The message expiration time in UTC.</returns>
      <exception cref="T:System.ObjectDisposedException">If the message is in disposed state.</exception>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.BrokeredMessageProperty.ForcePersistence">
      <summary>Gets or sets whether to force persistence on this property.</summary>
      <returns>true to force persistence on this property; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.BrokeredMessageProperty.Label">
      <summary>Gets or sets the application specific label.</summary>
      <returns>The application specific label.</returns>
      <exception cref="T:System.ObjectDisposedException">If the message is in disposed state.</exception>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.BrokeredMessageProperty.LockedUntilUtc">
      <summary>Gets the date and time in UTC until which the message will be locked in the queue/subscription.</summary>
      <returns>The date and time until which the message will be locked in the queue/subscription.</returns>
      <exception cref="T:System.ObjectDisposedException">If the message is in disposed state.</exception>
      <exception cref="T:System.InvalidOperationException">If the message was not received from the ServiceBus.</exception>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.BrokeredMessageProperty.LockToken">
      <summary>Gets the lock token assigned by Service Bus to the message.</summary>
      <returns>The lock token assigned by Service Bus to the message.</returns>
      <exception cref="T:System.ObjectDisposedException">If the message is in disposed state.</exception>
      <exception cref="T:System.InvalidOperationException">If the message was not received from the ServiceBus.</exception>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.BrokeredMessageProperty.Message">
      <summary>Gets the brokered message.</summary>
      <returns>The brokered message object.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.BrokeredMessageProperty.MessageId">
      <summary>Gets or sets the identifier of the message.</summary>
      <returns>The message identifier.</returns>
      <exception cref="T:System.ObjectDisposedException">If the message is in disposed state.</exception>
      <exception cref="T:System.ArgumentException">If message identifier is null or exceeds 128 characters in length.</exception>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.BrokeredMessageProperty.Name">
      <summary>The name used for applying the property bag to a <see cref="T:System.ServiceModel.Channels.Message" /> when sending a message.</summary>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.BrokeredMessageProperty.PartitionKey">
      <summary>Gets or sets a partition key for sending a transactional message to a queue or topic that is not session-aware.</summary>
      <returns>Returns <see cref="T:System.String" />.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.BrokeredMessageProperty.Properties">
      <summary>Gets the properties of the brokered message.</summary>
      <returns>The properties of the brokered message.</returns>
      <exception cref="T:System.ObjectDisposedException">If the message is in disposed state.</exception>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.BrokeredMessageProperty.ReplyTo">
      <summary>Gets or sets the address of the queue to reply to.</summary>
      <returns>The reply to queue address.</returns>
      <exception cref="T:System.ObjectDisposedException">If the message is in disposed state.</exception>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.BrokeredMessageProperty.ReplyToSessionId">
      <summary>Gets or sets the session identifier to reply to.</summary>
      <returns>The session identifier to reply to.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.BrokeredMessageProperty.ScheduledEnqueueTimeUtc">
      <summary>Gets or sets the date and time in UTC at which the message will be enqueued.</summary>
      <returns>The scheduled enqueue time in UTC. This value is for delayed message sending. It is utilized to delay messages sending to a specific time in the future.</returns>
      <exception cref="T:System.ObjectDisposedException">If the message is in disposed state.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">If the passed in value is DateTime.MaxValue.</exception>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.BrokeredMessageProperty.SequenceNumber">
      <summary>Gets the unique number assigned to a message by the Service Bus.</summary>
      <returns>The unique number assigned to a message by the Service Bus.</returns>
      <exception cref="T:System.ObjectDisposedException">If the message is in disposed state.</exception>
      <exception cref="T:System.InvalidOperationException">If the message was not received from the message server.</exception>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.BrokeredMessageProperty.SessionId">
      <summary>Gets or sets the identifier of the session.</summary>
      <returns>The identifier of the session.</returns>
      <exception cref="T:System.ObjectDisposedException">If the message is in disposed state.</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.BrokeredMessageProperty.System#ServiceModel#Channels#IMessageProperty#CreateCopy">
      <summary>Creates a copy of the current instance of brokered message.</summary>
      <returns>The copy of the current instance of brokered message.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.BrokeredMessageProperty.TimeToLive">
      <summary>Gets or sets the message’s time to live value. This is the duration after which the message expires, starting from when the message is sent to the Service Bus.Messages older than their TimeToLive value will expire and no longer be retained in the message store. Subscribers will be unable to receive expired messages.</summary>
      <returns>The message’s time to live value.</returns>
      <exception cref="T:System.ObjectDisposedException">If the message is in disposed state.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">If the passed in value is less than or equal to TimeSpan.Zero.</exception>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.BrokeredMessageProperty.To">
      <summary>Gets or sets the send to address.</summary>
      <returns>The address of the destination queue.</returns>
      <exception cref="T:System.ObjectDisposedException">If the message is in disposed state.</exception>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.BrokeredMessageProperty.ViaPartitionKey">
      <summary>Gets or sets a partition key value when a transaction is to be used to send messages via a transfer queue.</summary>
      <returns>Returns <see cref="T:System.String" />.</returns>
    </member>
    <member name="T:Microsoft.ServiceBus.Messaging.ClientEntity">
      <summary>A data structure that represents the events sent and received from an Event Hub stream.</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.ClientEntity.Abort">
      <summary>Performs abort functionality on the messaging entity.</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.ClientEntity.Close">
      <summary>Sends a cleanup message to Service Bus to signal the completion of the usage of an entity.</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.ClientEntity.CloseAsync">
      <summary>Sends a cleanup message asynchronously to Service Bus to signal the completion of the usage of an entity.</summary>
      <returns>If an exception occurs, this method performs an abort operation on the entity before throwing the exception.</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.ClientEntity.Fault">
      <summary>For internal use only. Do not inherit from this class.</summary>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.ClientEntity.IsClosed">
      <returns>Returns <see cref="T:System.Boolean" />.</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.ClientEntity.OnAbort"></member>
    <member name="M:Microsoft.ServiceBus.Messaging.ClientEntity.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)">
      <returns>Returns <see cref="T:System.IAsyncResult" />.</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.ClientEntity.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)">
      <returns>Returns <see cref="T:System.IAsyncResult" />.</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.ClientEntity.OnClose(System.TimeSpan)"></member>
    <member name="M:Microsoft.ServiceBus.Messaging.ClientEntity.OnClosed"></member>
    <member name="M:Microsoft.ServiceBus.Messaging.ClientEntity.OnEndClose(System.IAsyncResult)"></member>
    <member name="M:Microsoft.ServiceBus.Messaging.ClientEntity.OnEndOpen(System.IAsyncResult)"></member>
    <member name="M:Microsoft.ServiceBus.Messaging.ClientEntity.OnFaulted"></member>
    <member name="M:Microsoft.ServiceBus.Messaging.ClientEntity.OnOpen(System.TimeSpan)"></member>
    <member name="M:Microsoft.ServiceBus.Messaging.ClientEntity.OnOpened"></member>
    <member name="P:Microsoft.ServiceBus.Messaging.ClientEntity.RetryPolicy">
      <returns>Returns <see cref="T:Microsoft.ServiceBus.RetryPolicy" />.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.ClientEntity.ThisLock">
      <returns>Returns <see cref="T:System.Object" />.</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.ClientEntity.ThrowIfClosed"></member>
    <member name="M:Microsoft.ServiceBus.Messaging.ClientEntity.ThrowIfDisposed"></member>
    <member name="M:Microsoft.ServiceBus.Messaging.ClientEntity.ThrowIfDisposedOrImmutable"></member>
    <member name="M:Microsoft.ServiceBus.Messaging.ClientEntity.ThrowIfDisposedOrNotOpen"></member>
    <member name="M:Microsoft.ServiceBus.Messaging.ClientEntity.ThrowIfFaulted"></member>
    <member name="T:Microsoft.ServiceBus.Messaging.CloseReason">
      <summary>Enumerates the reason for closing of session.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.CloseReason.LeaseLost">
      <summary>Specifies that the current lease has been lost.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.CloseReason.Shutdown">
      <summary>Specifies that the server is shutting down.</summary>
    </member>
    <member name="T:Microsoft.ServiceBus.Messaging.ConsumerGroupDescription">
      <summary>Represents a description of the consumer group.</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.ConsumerGroupDescription.#ctor(System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.Messaging.ConsumerGroupDescription" /> class.</summary>
      <param name="eventHubPath">The path of the event hub.</param>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.ConsumerGroupDescription.CreatedAt">
      <summary>Gets the exact time the message was created.</summary>
      <returns>The exact time the message was created.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.ConsumerGroupDescription.EventHubPath">
      <summary>Gets or sets the path of the event hub.</summary>
      <returns>The path of the event hub.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.ConsumerGroupDescription.Name">
      <summary>Gets the name of the consumer group description.</summary>
      <returns>The name of the consumer group description.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.ConsumerGroupDescription.UpdatedAt">
      <summary>Gets the exact time the message has been updated.</summary>
      <returns>The time the message has been updated.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.ConsumerGroupDescription.UserMetadata">
      <summary>Gets or sets the user metadata.</summary>
      <returns>The user metadata.</returns>
    </member>
    <member name="T:Microsoft.ServiceBus.Messaging.CorrelationFilter">
      <summary>Represents the correlation filter expression.</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.CorrelationFilter.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.Messaging.CorrelationFilter" /> class with default values.</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.CorrelationFilter.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.Messaging.CorrelationFilter" /> class with the specified correlation identifier.</summary>
      <param name="correlationId">The identifier for the correlation.</param>
      <exception cref="T:System.ArgumentException">Thrown when the <paramref name="correlationId" /> is null or empty.</exception>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.CorrelationFilter.ContentType">
      <summary>Gets the content type of the message. </summary>
      <returns>The content type of the message.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.CorrelationFilter.CorrelationId">
      <summary>Gets the identifier of the correlation.</summary>
      <returns>The identifier of the correlation.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.CorrelationFilter.Label">
      <summary>Gets the application specific label.</summary>
      <returns>The application specific label.</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.CorrelationFilter.Match(Microsoft.ServiceBus.Messaging.BrokeredMessage)">
      <summary>Indicates whether a message matches against the current SQL expression.</summary>
      <returns>true if a message matches against the current SQL expression; otherwise, false.</returns>
      <param name="message">The <see cref="T:Microsoft.ServiceBus.Messaging.BrokeredMessage" />.</param>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.CorrelationFilter.MessageId">
      <summary>Gets the identifier of the message.</summary>
      <returns>The identifier of the message.</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.CorrelationFilter.Preprocess">
      <summary>Gets the preprocessed filter expression.</summary>
      <returns>The preprocessed filter expression.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.CorrelationFilter.Properties">
      <summary>Gets the application specific properties of the message.</summary>
      <returns>The application specific properties of the message.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.CorrelationFilter.ReplyTo">
      <summary>Gets the address of the queue to reply to.</summary>
      <returns>The address of the queue to reply to.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.CorrelationFilter.ReplyToSessionId">
      <summary>Gets the session identifier to reply to.</summary>
      <returns>The session identifier to reply to.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.CorrelationFilter.RequiresPreprocessing">
      <summary>Gets a value indicating whether the <see cref="T:Microsoft.ServiceBus.Messaging.CorrelationFilter" /> expression requires preprocessing.</summary>
      <returns>true if the <see cref="T:Microsoft.ServiceBus.Messaging.CorrelationFilter" /> expression requires preprocessing; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.CorrelationFilter.SessionId">
      <summary>Gets the session identifier.</summary>
      <returns>The session identifier.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.CorrelationFilter.To">
      <summary>Gets the address to send to.</summary>
      <returns>The address to send to.</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.CorrelationFilter.ToString">
      <summary>Converts the value of the current instance to its equivalent string representation.</summary>
      <returns>A string representation of the current instance.</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.CorrelationFilter.Validate">
      <summary>Validates the <see cref="T:Microsoft.ServiceBus.Messaging.CorrelationFilter" /> object.</summary>
    </member>
    <member name="T:Microsoft.ServiceBus.Messaging.CursorType">
      <summary>Enumerates the type of messaging cursor.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.CursorType.Client">
      <summary>The client cursor type.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.CursorType.Server">
      <summary>The server cursor type.</summary>
    </member>
    <member name="T:Microsoft.ServiceBus.Messaging.DefaultEventProcessorFactory`1">
      <summary>Represents the factory for the default event processor.</summary>
      <typeparam name="T">The type of the event.</typeparam>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.DefaultEventProcessorFactory`1.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.Messaging.DefaultEventProcessorFactory`1" /> class.</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.DefaultEventProcessorFactory`1.#ctor(`0)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.Messaging.DefaultEventProcessorFactory`1" /> class using the specified instance.</summary>
      <param name="instance">The instance.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.DefaultEventProcessorFactory`1.CreateEventProcessor(Microsoft.ServiceBus.Messaging.PartitionContext)">
      <summary>Creates an event processor.</summary>
      <returns>The created event processor.</returns>
      <param name="context">The partition context.</param>
    </member>
    <member name="T:Microsoft.ServiceBus.Messaging.DuplicateMessageException">
      <summary>Exception for signaling message duplicate errors.</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.DuplicateMessageException.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.Messaging.DuplicateMessageException" /> class.</summary>
      <param name="message">The error message about the exception.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.DuplicateMessageException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.Messaging.DuplicateMessageException" /> class.</summary>
      <param name="message">The error message about the exception.</param>
      <param name="innerException">The inner exception that is the cause of the current exception.</param>
    </member>
    <member name="T:Microsoft.ServiceBus.Messaging.EntityAvailabilityStatus">
      <summary>Enumerates the status of the entity availability.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.EntityAvailabilityStatus.Available">
      <summary>The entity is available.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.EntityAvailabilityStatus.Limited">
      <summary>The entity is limited.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.EntityAvailabilityStatus.Renaming">
      <summary>The entity is being renamed.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.EntityAvailabilityStatus.Restoring">
      <summary>The entity is being restored.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.EntityAvailabilityStatus.Unknown">
      <summary>The entity is unknown.</summary>
    </member>
    <member name="T:Microsoft.ServiceBus.Messaging.EntityDescription">
      <summary>Represents the description of an entity.</summary>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.EntityDescription.ExtensionData">
      <summary>Gets or sets the structure that contains extra data.</summary>
      <returns>An <see cref="T:System.Runtime.Serialization.ExtensionDataObject" /> that contains data that is not recognized as belonging to the data contract.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.EntityDescription.IsReadOnly">
      <summary>Gets or sets a value that indicates whether the entity description is read-only.</summary>
      <returns>true if the entity description is read-only; otherwise, false.</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.EntityDescription.ThrowIfReadOnly">
      <summary>Throws an exception if the entity description is read-only.</summary>
    </member>
    <member name="T:Microsoft.ServiceBus.Messaging.EntityStatus">
      <summary>Enumerates the possible values for the status of a messaging entity.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.EntityStatus.Active">
      <summary>The status of the messaging entity is active.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.EntityStatus.Creating">
      <summary>Indicates that the resource is still being created. Any creation attempt on the same resource path will result in a <see cref="T:Microsoft.ServiceBus.Messaging.MessagingException" /> exception (HttpCode.Conflict 409).</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.EntityStatus.Deleting">
      <summary>Indicates that the system is still attempting cleanup of the entity. Any additional deletion call will be allowed (the system will be notified). Any additional creation call on the same resource path will result in a <see cref="T:Microsoft.ServiceBus.Messaging.MessagingException" /> exception (HttpCode.Conflict 409).</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.EntityStatus.Disabled">
      <summary>The status of the messaging entity is disabled.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.EntityStatus.ReceiveDisabled">
      <summary>The receiving status of the messaging entity is disabled.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.EntityStatus.Renaming">
      <summary>The messaging entity is being renamed.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.EntityStatus.Restoring">
      <summary>Resuming the previous status of the messaging entity.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.EntityStatus.SendDisabled">
      <summary>The sending status of the messaging entity is disabled.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.EntityStatus.Unknown">
      <summary>The status of the messaging entity is unknown.</summary>
    </member>
    <member name="T:Microsoft.ServiceBus.Messaging.EventData">
      <summary>Represents the event sent and received from an Event Hubs stream. It contains the body of the event, a user-defined property bag, and various metadata describing the event, such as its offset in the partition and its number in the stream sequence. Partitions are filled with a sequence of event data.</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.EventData.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.Messaging.EventData" /> class.</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.EventData.#ctor(System.Byte[])">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.Messaging.EventData" /> class that uses the specified byte array as the body.</summary>
      <param name="byteArray">The event data byte array which is used to form the body stream.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.EventData.#ctor(System.IO.Stream)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.Messaging.EventData" /> class that uses the argument stream as the body stream.</summary>
      <param name="stream">A stream which is used as the body stream.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.EventData.#ctor(System.Object,System.Runtime.Serialization.XmlObjectSerializer)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.Messaging.EventData" /> class that takes the input content and serializer to create the body stream.</summary>
      <param name="content">The serialized .NET object that contains the event data.</param>
      <param name="serializer">The serializer used to serialize <paramref name="content" />.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.EventData.Clone">
      <summary>Makes a deep copy of this event data.</summary>
      <returns>A copy of this event data.</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.EventData.Dispose">
      <summary>Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.</summary>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.EventData.EnqueuedTimeUtc">
      <summary>Gets or sets the date and time of the sent time in UTC.</summary>
      <returns>The enqueue time in UTC. This value represents the actual time of enqueuing the event data.</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.EventData.GetBody``1">
      <summary>Gets the body of the event data.</summary>
      <returns>The deserialized object or graph.</returns>
      <typeparam name="T">The type to which the body will be deserialized.</typeparam>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.EventData.GetBody``1(System.Runtime.Serialization.XmlObjectSerializer)">
      <summary>Gets the body of the event data.</summary>
      <returns>The deserialized object or graph.</returns>
      <param name="bodySerializer">The serializer object.</param>
      <typeparam name="T">The generic type parameter.</typeparam>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.EventData.GetBodyStream">
      <summary>Gets or sets the underlying stream to the event data body.</summary>
      <returns>The underlying stream to the event data body.</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.EventData.GetBytes">
      <summary>Gets the event data bytes.</summary>
      <returns>The event data bytes.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.EventData.Offset">
      <summary>Gets the offset of the data relative to the Event Hub partition stream. The offset is a marker or identifier for an event within the Event Hubs stream. The identifier is unique within a partition of the Event Hubs stream.</summary>
      <returns>The read offset of the event data.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.EventData.PartitionKey">
      <summary>Gets or sets the key that is used to determine to which partition to send event data.</summary>
      <returns>A partition key for the partition to which event data should be sent.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.EventData.Properties">
      <summary>Gets the user properties of the event data that the user explicitly added during send operations.</summary>
      <returns>The user properties of the event data.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.EventData.SequenceNumber">
      <summary>Gets the logical sequence number of the event within the partition stream of the Event Hub.</summary>
      <returns>The logical sequence number of the event.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.EventData.SerializedSizeInBytes"></member>
    <member name="P:Microsoft.ServiceBus.Messaging.EventData.SystemProperties">
      <summary>Gets or sets the system properties, including the event data.</summary>
      <returns>The system properties, including the event data.</returns>
    </member>
    <member name="T:Microsoft.ServiceBus.Messaging.EventDataSystemPropertyNames">
      <summary>Provides the names (as fields) of all the system properties that Service Bus automatically updates.</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.EventDataSystemPropertyNames.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.Messaging.EventDataSystemPropertyNames" /> class.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.EventDataSystemPropertyNames.EnqueuedTimeUtc">
      <summary>Specifies the date and time of the sent time in UTC.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.EventDataSystemPropertyNames.Offset">
      <summary>Specifies the read offset of the event data.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.EventDataSystemPropertyNames.PartitionKey">
      <summary>Specifies the partition key for sending a transactional message to a queue or topic that is not session-aware.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.EventDataSystemPropertyNames.Publisher">
      <summary>Specifies the publisher of the event data.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.EventDataSystemPropertyNames.SequenceNumber">
      <summary>Specifies the unique number assigned to a message by the Service Bus.</summary>
    </member>
    <member name="T:Microsoft.ServiceBus.Messaging.EventHubClient">
      <summary>An anchor class used to send and receive events to and from an Event Hub.</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.EventHubClient.Create(System.String)">
      <summary>Creates a new instance of the <see cref="T:Microsoft.ServiceBus.Messaging.EventHubClient" /> using a connection string from the application configuration settings.</summary>
      <returns>The newly created Event Hub client object.</returns>
      <param name="path">The path to the Event Hub.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.EventHubClient.CreateFromConnectionString(System.String)"></member>
    <member name="M:Microsoft.ServiceBus.Messaging.EventHubClient.CreateFromConnectionString(System.String,System.String)">
      <summary>Creates a new instance of the Event Hub client using the specified connection string.</summary>
      <returns>The newly created <see cref="T:Microsoft.ServiceBus.Messaging.EventHubClient" /> object.</returns>
      <param name="connectionString">The connection string to be used.</param>
      <param name="path">The path to the Event Hub.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.EventHubClient.CreatePartitionedSender(System.String)">
      <summary>Creates an Event Hubs sender for the specified Event Hubs partition.</summary>
      <returns>Returns the <see cref="T:Microsoft.ServiceBus.Messaging.EventHubSender" /> object.</returns>
      <param name="partitionId">The ID of the partition.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.EventHubClient.CreatePartitionedSenderAsync(System.String)">
      <summary>Asynchronous version of <see cref="M:Microsoft.ServiceBus.Messaging.EventHubClient.CreatePartitionedSender(System.String)" />.</summary>
      <returns>Returns <see cref="T:System.Threading.Tasks.Task`1" />.</returns>
      <param name="partitionId">The ID of the partition.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.EventHubClient.CreateSender(System.String)"></member>
    <member name="M:Microsoft.ServiceBus.Messaging.EventHubClient.CreateSenderAsync">
      <summary>Creates the event hub sender. This method is for internal use, and not meant to be called from user code.</summary>
      <returns>The task representing the asynchronous operation.</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.EventHubClient.CreateSenderAsync(System.String)"></member>
    <member name="M:Microsoft.ServiceBus.Messaging.EventHubClient.GetConsumerGroup(System.String)">
      <summary>Returns the consumer group with the specified name, for the receive operation of event data.</summary>
      <returns>A <see cref="T:Microsoft.ServiceBus.Messaging.EventHubConsumerGroup" /> instance, corresponding to the consumer group.</returns>
      <param name="groupName">The name of the group.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.EventHubClient.GetDefaultConsumerGroup">
      <summary>Returns the default consumer group, for the receive operation of event data.</summary>
      <returns>The default <see cref="T:Microsoft.ServiceBus.Messaging.EventHubConsumerGroup" />.</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.EventHubClient.GetPartitionRuntimeInformation(System.String)"></member>
    <member name="M:Microsoft.ServiceBus.Messaging.EventHubClient.GetPartitionRuntimeInformationAsync(System.String)"></member>
    <member name="M:Microsoft.ServiceBus.Messaging.EventHubClient.GetRuntimeInformation">
      <summary>Retrieves Event Hubs runtime information, which is required for creating <see cref="T:Microsoft.ServiceBus.Messaging.EventHubSender" /> or <see cref="T:Microsoft.ServiceBus.Messaging.EventHubReceiver" /> objects.</summary>
      <returns>Returns <see cref="T:Microsoft.ServiceBus.Messaging.EventHubRuntimeInformation" />.</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.EventHubClient.GetRuntimeInformationAsync">
      <summary>Asynchronous version of <see cref="M:Microsoft.ServiceBus.Messaging.EventHubClient.GetRuntimeInformation" />.</summary>
      <returns>Returns <see cref="T:System.Threading.Tasks.Task`1" />.</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.EventHubClient.OnAbort">
      <summary>Executes the abort action.</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.EventHubClient.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Executes the begin close action.</summary>
      <returns>An <see cref="T:System.IAsyncResult" /> that references the asynchronous Close operation.</returns>
      <param name="timeout">The wait time before the operation times out.</param>
      <param name="callback">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</param>
      <param name="state">A user-defined object that contains information about the receive operation. This object is passed to the EndClose delegate when the operation is complete.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.EventHubClient.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Executes the begin open action.</summary>
      <returns>An <see cref="T:System.IAsyncResult" /> that references the asynchronous Open operation.</returns>
      <param name="timeout">The wait time before the operation times out.</param>
      <param name="callback">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</param>
      <param name="state">A user-defined object that contains information about the receive operation. This object is passed to the EndOpen delegate when the operation is complete.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.EventHubClient.OnClose(System.TimeSpan)">
      <summary>Executes the close action.</summary>
      <param name="timeout">The wait time before the operation times out.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.EventHubClient.OnEndClose(System.IAsyncResult)">
      <summary>Executes the end close action.</summary>
      <param name="result">An <see cref="T:System.IAsyncResult" /> that references the asynchronous Close operation.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.EventHubClient.OnEndOpen(System.IAsyncResult)">
      <summary>Executes the end open action.</summary>
      <param name="result">An <see cref="T:System.IAsyncResult" /> that references the asynchronous Open operation.</param>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.EventHubClient.Path">
      <summary>Gets the path of the Event Hub.</summary>
      <returns>The path of the Event Hub.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.EventHubClient.PrefetchCount">
      <summary>Gets or sets the number of events that any receive operation will actively cache. By default, this value is inherited from <see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactory" /> if the current instance is created from the factory method. Otherwise, the default value is 10,000.</summary>
      <returns>The number of messages that the message receiver can simultaneously request.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Thrown if the value is less than the minimum required value of 10.</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.EventHubClient.Send(Microsoft.ServiceBus.Messaging.EventData)">
      <summary>Sends event data to an Event Hub.</summary>
      <param name="data">The event data.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.EventHubClient.SendAsync(Microsoft.ServiceBus.Messaging.EventData)">
      <summary>Asynchronously sends event data to an Event Hub.</summary>
      <returns>The task representing the asynchronous operation.</returns>
      <param name="data">The <see cref="T:Microsoft.ServiceBus.Messaging.EventData" /> to send.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.EventHubClient.SendBatch(System.Collections.Generic.IEnumerable{Microsoft.ServiceBus.Messaging.EventData})">
      <summary>Sends a batch of event data to the logical partition represented by <see cref="P:Microsoft.ServiceBus.Messaging.EventHubSender.PartitionId" />.</summary>
      <param name="eventDataList">An <see cref="T:System.Collections.Generic.IEnumerable" /> object containing event data instances.</param>
      <exception cref="T:Microsoft.ServiceBus.Messaging.MessageSizeExceededException">Thrown if the total serialized size of <paramref name="eventDataList" /> exceeds the allowed size limit for one event transmission (256k by default).</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.EventHubClient.SendBatchAsync(System.Collections.Generic.IEnumerable{Microsoft.ServiceBus.Messaging.EventData})">
      <summary>Asynchronously sends a batch of event data to the logical partition represented by <see cref="P:Microsoft.ServiceBus.Messaging.EventHubSender.PartitionId" />.</summary>
      <returns>Returns <see cref="T:System.Threading.Tasks.Task" />.</returns>
      <param name="eventDataList">An <see cref="T:System.Collections.Generic.IEnumerable" /> object containing event data instances.</param>
      <exception cref="T:Microsoft.ServiceBus.Messaging.MessageSizeExceededException">Thrown if the total serialized size of <paramref name="eventDataList" /> exceeds the allowed size limit for one event transmission (256k by default).</exception>
    </member>
    <member name="T:Microsoft.ServiceBus.Messaging.EventHubConsumerGroup">
      <summary>Represents the consumer group within an Event Hub. This class creates receivers for a specific consumer group within an Event Hub. This can be the default consumer group or another user-created consumer group.</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.EventHubConsumerGroup.CreateReceiver(System.String)">
      <summary>Creates a new Event Hubs receiver in the specified partition. You can use the created receiver to receive events for one Event Hubs partition, specified by <paramref name="partitionId" />.</summary>
      <returns>Returns the <see cref="T:Microsoft.ServiceBus.Messaging.EventHubReceiver" /> object that is tied to the given Event Hubs partition.</returns>
      <param name="partitionId">The ID of the partition.</param>
      <exception cref="T:Microsoft.ServiceBus.Messaging.MessagingException">Thrown if the service encounters a transient error.</exception>
      <exception cref="T:Microsoft.ServiceBus.Messaging.MessagingCommunicationException">Thrown if the client has a problem connecting to the service.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Thrown if <paramref name="partitionId" /> is not within the expected range, as determined by the <see cref="P:Microsoft.ServiceBus.Messaging.EventHubDescription.PartitionCount" /> property.</exception>
      <exception cref="T:System.ServiceModel.QuotaExceededException">Thrown if the number of receivers currently connected to the partition specified by <paramref name="partitionId" /> has exceeded the maximum allowed quota set by the service.</exception>
      <exception cref="T:Microsoft.ServiceBus.Messaging.ReceiverDisconnectedException">Thrown if there is currently a receiver connected to the partition as specified by <paramref name="partitionId" />, with an <paramref name="epoch" /> specified.</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.EventHubConsumerGroup.CreateReceiver(System.String,System.DateTime)">
      <summary>Creates a new Event Hubs receiver in the specified partition, starting at the specified date and time. You can use the created receiver to receive events for one Event Hubs partition, specified by <paramref name="partitionId" />.</summary>
      <returns>Returns the <see cref="T:Microsoft.ServiceBus.Messaging.EventHubReceiver" />.</returns>
      <param name="partitionId">The ID of the partition.</param>
      <param name="startingDateTimeUtc">The starting UTC time for receiving messages.</param>
      <exception cref="T:Microsoft.ServiceBus.Messaging.MessagingException">Thrown if the service encounters a transient error.</exception>
      <exception cref="T:Microsoft.ServiceBus.Messaging.MessagingCommunicationException">Thrown if the client has a problem connecting to the service.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Thrown if <paramref name="partitionId" /> is not within the expected range, as determined by the <see cref="P:Microsoft.ServiceBus.Messaging.EventHubDescription.PartitionCount" /> property.</exception>
      <exception cref="T:System.ServiceModel.QuotaExceededException">Thrown if the number of receivers currently connected to the partition specified by <paramref name="partitionId" /> has exceeded the maximum allowed quota set by the service.</exception>
      <exception cref="T:Microsoft.ServiceBus.Messaging.ReceiverDisconnectedException">Thrown if there is currently a receiver connected to the partition as specified by <paramref name="partitionId" />, with an <paramref name="epoch" /> specified.</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.EventHubConsumerGroup.CreateReceiver(System.String,System.DateTime,System.Int64)">
      <summary>Creates a new Event Hubs receiver in the specified partition, starting at the specified date and time. You can use the created receiver to receive events for one Event Hubs partition, specified by <paramref name="partitionId" />.</summary>
      <returns>Returns the <see cref="T:Microsoft.ServiceBus.Messaging.EventHubReceiver" />.</returns>
      <param name="partitionId">The ID of the partition.</param>
      <param name="startingDateTimeUtc">The starting UTC time for receiving messages.</param>
      <param name="epoch">The epoch value. The service uses this value to enforce partition/lease ownership.</param>
      <exception cref="T:Microsoft.ServiceBus.Messaging.MessagingException">Thrown if the service encounters a transient error.</exception>
      <exception cref="T:Microsoft.ServiceBus.Messaging.MessagingCommunicationException">Thrown if the client has a problem connecting to the service.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Thrown if <paramref name="partitionId" /> is not within the expected range, as determined by the <see cref="P:Microsoft.ServiceBus.Messaging.EventHubDescription.PartitionCount" /> property.</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.EventHubConsumerGroup.CreateReceiver(System.String,System.Int64)">
      <summary>Creates a new Event Hubs receiver in the specified partition, and the specified epoch value. You can use the created receiver to receive events for one Event Hubs partition, specified by <paramref name="partitionId" />.</summary>
      <returns>Returns the <see cref="T:Microsoft.ServiceBus.Messaging.EventHubReceiver" />.</returns>
      <param name="partitionId">The ID of the partition.</param>
      <param name="epoch">The epoch value. The service uses this value to enforce partition/lease ownership.</param>
      <exception cref="T:Microsoft.ServiceBus.Messaging.MessagingException">Thrown if the service encounters a transient error.</exception>
      <exception cref="T:Microsoft.ServiceBus.Messaging.MessagingCommunicationException">Thrown if the client has a problem connecting to the service.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Thrown if <paramref name="partitionId" /> is not within the expected range, as determined by the <see cref="P:Microsoft.ServiceBus.Messaging.EventHubDescription.PartitionCount" /> property.</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.EventHubConsumerGroup.CreateReceiver(System.String,System.String)">
      <summary>Creates a new Event Hubs receiver in the specified partition, at the specified starting offset. You can use the created receiver to receive events for one Event Hubs partition, specified by <paramref name="partitionId" />.</summary>
      <returns>Returns the <see cref="T:Microsoft.ServiceBus.Messaging.EventHubReceiver" />.</returns>
      <param name="partitionId">The ID of the partition.</param>
      <param name="startingOffset">The starting offset at which to start receiving messages.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Thrown if <paramref name="partitionId" /> is not within the expected range, as determined by the <see cref="P:Microsoft.ServiceBus.Messaging.EventHubDescription.PartitionCount" /> property.</exception>
      <exception cref="T:System.ServiceModel.QuotaExceededException">Thrown if the number of receivers currently connected to the partition specified by <paramref name="partitionId" /> has exceeded the maximum allowed quota set by the service.</exception>
      <exception cref="T:Microsoft.ServiceBus.Messaging.ReceiverDisconnectedException">Thrown if there is currently a receiver connected to the partition as specified by <paramref name="partitionId" />, with an <paramref name="epoch" /> specified.</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.EventHubConsumerGroup.CreateReceiver(System.String,System.String,System.Boolean)">
      <summary>Creates a new Event Hubs receiver in the specified partition, at the specified starting offset. You can use the created receiver to receive events for one Event Hubs partition, specified by <paramref name="partitionId" />.</summary>
      <returns>Returns <see cref="T:Microsoft.ServiceBus.Messaging.EventHubReceiver" />.</returns>
      <param name="partitionId">The ID of the partition.</param>
      <param name="startingOffset">The starting offset at which to start receiving messages.</param>
      <param name="offsetInclusive">A Boolean value that indicates whether <paramref name="startingOffset" /> is treated as an inclusive offset, meaning that the first event returned is the event that contains the starting offset. Normally, the first event returned is the event after the starting offset.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.EventHubConsumerGroup.CreateReceiver(System.String,System.String,System.Boolean,System.Int64)">
      <summary>Creates a new Event Hubs receiver in the specified partition, at the specified starting offset. You can use the created receiver to receive events for one Event Hubs partition, specified by <paramref name="partitionId" />.</summary>
      <returns>Returns <see cref="T:Microsoft.ServiceBus.Messaging.EventHubReceiver" />.</returns>
      <param name="partitionId">The ID of the partition.</param>
      <param name="startingOffset">The starting offset at which to start receiving messages.</param>
      <param name="offsetInclusive">A Boolean value that indicates whether <paramref name="startingOffset" /> is treated as an inclusive offset, meaning that the first event returned is the event that contains the starting offset. Normally, the first event returned is the event after the starting offset.</param>
      <param name="epoch">The epoch value. The service uses this value to enforce partition/lease ownership.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.EventHubConsumerGroup.CreateReceiver(System.String,System.String,System.Int64)">
      <summary>Creates a new Event Hubs receiver in the specified partition, at the specified starting offset.</summary>
      <returns>Returns the <see cref="T:Microsoft.ServiceBus.Messaging.EventHubReceiver" />.</returns>
      <param name="partitionId">The ID of the partition.</param>
      <param name="startingOffset">The starting offset at which to start receiving messages. To specify the start of the stream, see <see cref="F:Microsoft.ServiceBus.Messaging.EventHubConsumerGroup.StartOfStream" />.</param>
      <param name="epoch">The epoch value. The service uses this value to enforce partition/lease ownership.</param>
      <exception cref="T:Microsoft.ServiceBus.Messaging.MessagingException">Thrown if the service encounters a transient error.</exception>
      <exception cref="T:Microsoft.ServiceBus.Messaging.MessagingCommunicationException">Thrown if the client has a problem connecting to the service.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Thrown if <paramref name="partitionId" /> is not within the expected range, as determined by the <see cref="P:Microsoft.ServiceBus.Messaging.EventHubDescription.PartitionCount" /> property.</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.EventHubConsumerGroup.CreateReceiverAsync(System.String)">
      <summary>Asynchronous version of <see cref="M:Microsoft.ServiceBus.Messaging.EventHubConsumerGroup.CreateReceiver(System.String)" />.</summary>
      <returns>Returns <see cref="T:System.Threading.Tasks.Task`1" />.</returns>
      <param name="partitionId">The ID of the partition.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.EventHubConsumerGroup.CreateReceiverAsync(System.String,System.DateTime)">
      <summary>Asynchronous version of <see cref="M:Microsoft.ServiceBus.Messaging.EventHubConsumerGroup.CreateReceiver(System.String,System.DateTime)" />.</summary>
      <returns>Returns <see cref="T:System.Threading.Tasks.Task`1" />.</returns>
      <param name="partitionId">The ID of the partition.</param>
      <param name="startingDateTimeUtc">The starting UTC time for receiving messages.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.EventHubConsumerGroup.CreateReceiverAsync(System.String,System.DateTime,System.Int64)">
      <summary>Asynchronous version of <see cref="M:Microsoft.ServiceBus.Messaging.EventHubConsumerGroup.CreateReceiver(System.String,System.DateTime,System.Int64)" />.</summary>
      <returns>Returns <see cref="T:System.Threading.Tasks.Task`1" />.</returns>
      <param name="partitionId">The ID of the partition.</param>
      <param name="startingDateTimeUtc">The starting UTC time for receiving messages.</param>
      <param name="epoch">The epoch value. The service uses this value to enforce partition/lease ownership.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.EventHubConsumerGroup.CreateReceiverAsync(System.String,System.Int64)">
      <summary>Asynchronous version of <see cref="M:Microsoft.ServiceBus.Messaging.EventHubConsumerGroup.CreateReceiver(System.String,System.Int64)" />.</summary>
      <returns>Returns <see cref="T:System.Threading.Tasks.Task`1" />.</returns>
      <param name="partitionId">The ID of the partition.</param>
      <param name="epoch">The epoch value. The service uses this value to enforce partition/lease ownership.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.EventHubConsumerGroup.CreateReceiverAsync(System.String,System.String)">
      <summary>Asynchronous version of <see cref="M:Microsoft.ServiceBus.Messaging.EventHubConsumerGroup.CreateReceiver(System.String,System.String)" />.</summary>
      <returns>Returns <see cref="T:System.Threading.Tasks.Task`1" />.</returns>
      <param name="partitionId">The ID of the partition.</param>
      <param name="startingOffset">The starting offset at which to start receiving messages.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.EventHubConsumerGroup.CreateReceiverAsync(System.String,System.String,System.Boolean)">
      <summary>Asynchronous version of <see cref="M:Microsoft.ServiceBus.Messaging.EventHubConsumerGroup.CreateReceiver(System.String,System.String,System.Boolean)" />.</summary>
      <returns>Returns <see cref="T:System.Threading.Tasks.Task`1" />.</returns>
      <param name="partitionId">The ID of the partition.</param>
      <param name="startingOffset">The starting offset at which to start receiving messages.</param>
      <param name="offsetInclusive">A Boolean value that indicates whether <paramref name="startingOffset" /> is treated as an inclusive offset, meaning that the first event returned is the event that contains the starting offset. Normally, the first event returned is the event after the starting offset.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.EventHubConsumerGroup.CreateReceiverAsync(System.String,System.String,System.Boolean,System.Int64)">
      <summary>Asynchronous version of <see cref="M:Microsoft.ServiceBus.Messaging.EventHubConsumerGroup.CreateReceiver(System.String,System.String,System.Boolean,System.Int64)" />.</summary>
      <returns>Returns <see cref="T:System.Threading.Tasks.Task`1" />.</returns>
      <param name="partitionId">The ID of the partition.</param>
      <param name="startingOffset">The starting offset at which to start receiving messages.</param>
      <param name="offsetInclusive">A Boolean value that indicates whether <paramref name="startingOffset" /> is treated as an inclusive offset, meaning that the first event returned is the event that contains the starting offset. Normally, the first event returned is the event after the starting offset.</param>
      <param name="epoch">The epoch value. The service uses this value to enforce partition/lease ownership.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.EventHubConsumerGroup.CreateReceiverAsync(System.String,System.String,System.Int64)">
      <summary>Asynchronous version of <see cref="M:Microsoft.ServiceBus.Messaging.EventHubConsumerGroup.CreateReceiver(System.String,System.String,System.Int64)" />.</summary>
      <returns>Returns <see cref="T:System.Threading.Tasks.Task`1" />.</returns>
      <param name="partitionId">The ID of the partition.</param>
      <param name="startingOffset">The starting offset at which to start receiving messages. To specify the start of the stream, see <see cref="F:Microsoft.ServiceBus.Messaging.EventHubConsumerGroup.StartOfStream" />.</param>
      <param name="epoch">The epoch value. The service uses this value to enforce partition/lease ownership.</param>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.EventHubConsumerGroup.DefaultGroupName">
      <summary>Specifies the default name of the consumer group, which is $Default. You cannot delete or update the default consumer group.</summary>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.EventHubConsumerGroup.EventHubPath">
      <summary>Gets the event hub path.</summary>
      <returns>The event hub path</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.EventHubConsumerGroup.GroupName">
      <summary>Gets the name of the consumer group.</summary>
      <returns>The name of the consumer group.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.EventHubConsumerGroup.PrefetchCount">
      <summary>Gets or sets the number of events that any receive operation will actively cache. By default, this value is inherited from <see cref="T:Microsoft.ServiceBus.Messaging.EventHubClient" />. The default value is 10,000.</summary>
      <returns>The number of events that the receiver can cache.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Thrown if the value is less than the minimum required value of 10.</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.EventHubConsumerGroup.RegisterProcessor``1(Microsoft.ServiceBus.Messaging.Lease,Microsoft.ServiceBus.Messaging.ICheckpointManager)">
      <summary>Registers an implementation of <see cref="T:Microsoft.ServiceBus.Messaging.IEventProcessor" /> in order to start consuming events from Event Hubs for the specified <see cref="P:Microsoft.ServiceBus.Messaging.Lease.PartitionId" /> starting from <see cref="P:Microsoft.ServiceBus.Messaging.Lease.Offset" />. Use this overload to create an event processor that checkpoints the message offset using a custom implementation of <see cref="T:Microsoft.ServiceBus.Messaging.ICheckpointManager" />.</summary>
      <param name="lease">Partition information.</param>
      <param name="checkpointManager">Checkpoints the offset for the specified partition when <see cref="M:Microsoft.ServiceBus.Messaging.PartitionContext.CheckpointAsync" /> is called.</param>
      <typeparam name="T">Implementation of <see cref="T:Microsoft.ServiceBus.Messaging.IEventProcessor" />.</typeparam>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.EventHubConsumerGroup.RegisterProcessor``1(Microsoft.ServiceBus.Messaging.Lease,Microsoft.ServiceBus.Messaging.ICheckpointManager,Microsoft.ServiceBus.Messaging.EventProcessorOptions)">
      <summary>Registers an implementation of <see cref="T:Microsoft.ServiceBus.Messaging.IEventProcessor" /> in order to start consuming events from Event Hubs for the specified <see cref="P:Microsoft.ServiceBus.Messaging.Lease.PartitionId" /> starting from <see cref="P:Microsoft.ServiceBus.Messaging.Lease.Offset" />. Use this overload to create an event processor that checkpoints the message offset using a custom implementation of <see cref="T:Microsoft.ServiceBus.Messaging.ICheckpointManager" />.</summary>
      <param name="lease">Partition information.</param>
      <param name="checkpointManager">Checkpoints the offset for the specified partition when <see cref="M:Microsoft.ServiceBus.Messaging.PartitionContext.CheckpointAsync" /> is called.</param>
      <param name="processorOptions">An <see cref="T:Microsoft.ServiceBus.Messaging.EventProcessorOptions" /> object.</param>
      <typeparam name="T">Implementation of <see cref="T:Microsoft.ServiceBus.Messaging.IEventProcessor" />.</typeparam>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.EventHubConsumerGroup.RegisterProcessorAsync``1(Microsoft.ServiceBus.Messaging.Lease,Microsoft.ServiceBus.Messaging.ICheckpointManager)">
      <summary>Asynchronous version of <see cref="M:Microsoft.ServiceBus.Messaging.EventHubConsumerGroup.RegisterProcessor``1(Microsoft.ServiceBus.Messaging.Lease,Microsoft.ServiceBus.Messaging.ICheckpointManager)" />.</summary>
      <returns>A task instance that represents the asynchronous operation.</returns>
      <param name="lease">Partition information.</param>
      <param name="checkpointManager">Checkpoints the offset for the specified partition when <see cref="M:Microsoft.ServiceBus.Messaging.PartitionContext.CheckpointAsync" /> is called.</param>
      <typeparam name="T">Implementation of <see cref="T:Microsoft.ServiceBus.Messaging.IEventProcessor" />.</typeparam>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.EventHubConsumerGroup.RegisterProcessorAsync``1(Microsoft.ServiceBus.Messaging.Lease,Microsoft.ServiceBus.Messaging.ICheckpointManager,Microsoft.ServiceBus.Messaging.EventProcessorOptions)">
      <summary>Asynchronous version of <see cref="M:Microsoft.ServiceBus.Messaging.EventHubConsumerGroup.RegisterProcessor``1(Microsoft.ServiceBus.Messaging.Lease,Microsoft.ServiceBus.Messaging.ICheckpointManager,Microsoft.ServiceBus.Messaging.EventProcessorOptions)" />.</summary>
      <returns>Returns <see cref="T:System.Threading.Tasks.Task" />.</returns>
      <param name="lease">Partition information.</param>
      <param name="checkpointManager">Checkpoints the offset for the specified partition when <see cref="M:Microsoft.ServiceBus.Messaging.PartitionContext.CheckpointAsync" /> is called.</param>
      <param name="processorOptions">An <see cref="T:Microsoft.ServiceBus.Messaging.EventProcessorOptions" /> object.</param>
      <typeparam name="T">Implementation of <see cref="T:Microsoft.ServiceBus.Messaging.IEventProcessor" />.</typeparam>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.EventHubConsumerGroup.RegisterProcessorFactory(Microsoft.ServiceBus.Messaging.Lease,Microsoft.ServiceBus.Messaging.ICheckpointManager,Microsoft.ServiceBus.Messaging.IEventProcessorFactory)">
      <summary>Registers the <see cref="T:Microsoft.ServiceBus.Messaging.IEventProcessorFactory" /> object used to create an instance of <see cref="T:Microsoft.ServiceBus.Messaging.IEventProcessor" /> in order to start consuming events for the partition specified by <see cref="P:Microsoft.ServiceBus.Messaging.Lease.PartitionId" />, starting from <see cref="P:Microsoft.ServiceBus.Messaging.Lease.Offset" />. Use this overload to create an event processor that checkpoints the message offset using a custom implementation of <see cref="T:Microsoft.ServiceBus.Messaging.ICheckpointManager" />.</summary>
      <param name="lease">Partition information.</param>
      <param name="checkpointManager">Checkpoints the offset for the specified partition when <see cref="M:Microsoft.ServiceBus.Messaging.PartitionContext.CheckpointAsync" /> is called.</param>
      <param name="eventProcessorFactory">Factory to create an instance of <see cref="T:Microsoft.ServiceBus.Messaging.IEventProcessor" />.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.EventHubConsumerGroup.RegisterProcessorFactory(Microsoft.ServiceBus.Messaging.Lease,Microsoft.ServiceBus.Messaging.ICheckpointManager,Microsoft.ServiceBus.Messaging.IEventProcessorFactory,Microsoft.ServiceBus.Messaging.EventProcessorOptions)">
      <summary>Registers the <see cref="T:Microsoft.ServiceBus.Messaging.IEventProcessorFactory" /> object used to create an instance of <see cref="T:Microsoft.ServiceBus.Messaging.IEventProcessor" /> in order to start consuming events for the partition specified by <see cref="P:Microsoft.ServiceBus.Messaging.Lease.PartitionId" />, starting from <see cref="P:Microsoft.ServiceBus.Messaging.Lease.Offset" />. Use this overload to create an event processor that checkpoints the message offset using a custom implementation of <see cref="T:Microsoft.ServiceBus.Messaging.ICheckpointManager" />.</summary>
      <param name="lease">Partition information.</param>
      <param name="checkpointManager">Checkpoints the offset for the specified partition when <see cref="M:Microsoft.ServiceBus.Messaging.PartitionContext.CheckpointAsync" /> is called.</param>
      <param name="eventProcessorFactory">Factory to create an instance of <see cref="T:Microsoft.ServiceBus.Messaging.IEventProcessor" />.</param>
      <param name="processorOptions">An <see cref="T:Microsoft.ServiceBus.Messaging.EventProcessorOptions" /> object.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.EventHubConsumerGroup.RegisterProcessorFactoryAsync(Microsoft.ServiceBus.Messaging.Lease,Microsoft.ServiceBus.Messaging.ICheckpointManager,Microsoft.ServiceBus.Messaging.IEventProcessorFactory)">
      <summary>Asynchronous version of <see cref="M:Microsoft.ServiceBus.Messaging.EventHubConsumerGroup.RegisterProcessorFactory(Microsoft.ServiceBus.Messaging.Lease,Microsoft.ServiceBus.Messaging.ICheckpointManager,Microsoft.ServiceBus.Messaging.IEventProcessorFactory)" />.</summary>
      <returns>A task instance that represents the asynchronous operation.</returns>
      <param name="lease">Partition information.</param>
      <param name="checkpointManager">Checkpoints the offset for the specified partition when <see cref="M:Microsoft.ServiceBus.Messaging.PartitionContext.CheckpointAsync" /> is called.</param>
      <param name="eventProcessorFactory">Factory to create an instance of <see cref="T:Microsoft.ServiceBus.Messaging.IEventProcessor" />.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.EventHubConsumerGroup.RegisterProcessorFactoryAsync(Microsoft.ServiceBus.Messaging.Lease,Microsoft.ServiceBus.Messaging.ICheckpointManager,Microsoft.ServiceBus.Messaging.IEventProcessorFactory,Microsoft.ServiceBus.Messaging.EventProcessorOptions)">
      <summary>Asynchronous version of <see cref="M:Microsoft.ServiceBus.Messaging.EventHubConsumerGroup.RegisterProcessorFactory(Microsoft.ServiceBus.Messaging.Lease,Microsoft.ServiceBus.Messaging.ICheckpointManager,Microsoft.ServiceBus.Messaging.IEventProcessorFactory,Microsoft.ServiceBus.Messaging.EventProcessorOptions)" />.</summary>
      <returns>Returns <see cref="T:System.Threading.Tasks.Task" />.</returns>
      <param name="lease">Partition information.</param>
      <param name="checkpointManager">Checkpoints the offset for the specified partition when <see cref="M:Microsoft.ServiceBus.Messaging.PartitionContext.CheckpointAsync" /> is called.</param>
      <param name="eventProcessorFactory">Factory to create an instance of <see cref="T:Microsoft.ServiceBus.Messaging.IEventProcessor" />.</param>
      <param name="processorOptions">An <see cref="T:Microsoft.ServiceBus.Messaging.EventProcessorOptions" /> object.</param>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.EventHubConsumerGroup.StartOfStream">
      <summary>A constant that denotes the start of a stream. You can use this field as an offset argument during receiver creation.</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.EventHubConsumerGroup.UnregisterProcessor(Microsoft.ServiceBus.Messaging.Lease,Microsoft.ServiceBus.Messaging.CloseReason)">
      <summary>Unregisters <see cref="T:Microsoft.ServiceBus.Messaging.IEventProcessor" /> for the partition specified by <see cref="P:Microsoft.ServiceBus.Messaging.Lease.PartitionId" />. This results in <see cref="M:Microsoft.ServiceBus.Messaging.IEventProcessor.CloseAsync(Microsoft.ServiceBus.Messaging.PartitionContext,Microsoft.ServiceBus.Messaging.CloseReason)" /> being called on the underlying event processor.</summary>
      <param name="lease">Partition information.</param>
      <param name="reason">Reason for which <see cref="M:Microsoft.ServiceBus.Messaging.EventHubConsumerGroup.UnregisterProcessor(Microsoft.ServiceBus.Messaging.Lease,Microsoft.ServiceBus.Messaging.CloseReason)" /> was called.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.EventHubConsumerGroup.UnregisterProcessorAsync(Microsoft.ServiceBus.Messaging.Lease,Microsoft.ServiceBus.Messaging.CloseReason)">
      <summary>Asynchronous version of <see cref="M:Microsoft.ServiceBus.Messaging.EventHubConsumerGroup.UnregisterProcessor(Microsoft.ServiceBus.Messaging.Lease,Microsoft.ServiceBus.Messaging.CloseReason)" />.</summary>
      <returns>A task instance that represents the asynchronous operation.</returns>
      <param name="lease">Partition information.</param>
      <param name="reason">Reason that <see cref="M:Microsoft.ServiceBus.Messaging.EventHubConsumerGroup.UnregisterProcessorAsync(Microsoft.ServiceBus.Messaging.Lease,Microsoft.ServiceBus.Messaging.CloseReason)" /> was called.</param>
    </member>
    <member name="T:Microsoft.ServiceBus.Messaging.EventHubDescription">
      <summary>Represents the metadata description of an Event Hub.</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.EventHubDescription.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.Messaging.EventHubDescription" /> class.</summary>
      <param name="path">The path of the event hub relative to the service namespace base address.</param>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.EventHubDescription.Authorization">
      <summary>Gets the <see cref="T:Microsoft.ServiceBus.Messaging.AuthorizationRules" />.</summary>
      <returns>The <see cref="T:Microsoft.ServiceBus.Messaging.AuthorizationRules" />.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.EventHubDescription.CreatedAt">
      <summary>Gets the exact time the message was created.</summary>
      <returns>The exact time the message was created.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.EventHubDescription.MessageRetentionInDays">
      <summary>Gets or sets the number of days to retain the events for this Event Hub.</summary>
      <returns>The retention time of the event data, in days.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.EventHubDescription.PartitionCount">
      <summary>Gets or sets the current number of shards on the Event Hub.</summary>
      <returns>Returns the number of subscriptions on the Event Hub.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Thrown if the partition count value is negative.</exception>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.EventHubDescription.PartitionIds">
      <summary>Gets identifiers for partitions created for Event Hubs.</summary>
      <returns>Returns <see cref="T:System.String" />.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.EventHubDescription.Path">
      <summary>Gets the full path of the Event Hub.</summary>
      <returns>The path of the Event Hub.</returns>
      <exception cref="T:System.InvalidOperationException">Thrown if an attempt is made to set the value of this property when the instance is marked as readonly.</exception>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.EventHubDescription.Status">
      <summary>Gets or sets the current status of the Event Hub (enabled or disabled).</summary>
      <returns>The current status of the event hub.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.EventHubDescription.UpdatedAt">
      <summary>Gets the exact time the message has been updated.</summary>
      <returns>The time the message has been updated.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.EventHubDescription.UserMetadata">
      <summary>Gets or sets the user metadata.</summary>
      <returns>The user metadata.</returns>
    </member>
    <member name="T:Microsoft.ServiceBus.Messaging.EventHubReceiver">
      <summary>A client class used in receive operations related to an Event Hub consumer group. Represents a logical receiver connection to a specific Event Hub partition within a consumer group.</summary>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.EventHubReceiver.Epoch">
      <summary>Gets the epoch value that is used to determine partition ownership during the receive operation.</summary>
      <returns>Returns <see cref="T:System.Int64" />.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.EventHubReceiver.EventHubPath">
      <summary>Gets the event hub path.</summary>
      <returns>The event hub path.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.EventHubReceiver.Name">
      <summary>Gets the name of the Event Hub.</summary>
      <returns>The name of the Event Hub.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.EventHubReceiver.OffsetInclusive">
      <summary>Gets a value indicating whether <see cref="P:Microsoft.ServiceBus.Messaging.EventHubReceiver.StartingOffset" /> is treated as an inclusive offset, meaning that the first event returned is the event that contains the starting offset. Normally, the first event returned is the event after the starting offset.</summary>
      <returns>Returns <see cref="T:System.Boolean" />.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.EventHubReceiver.PartitionId">
      <summary>Gets the partition ID for a logical partition of an Event Hub.</summary>
      <returns>The partition identifier.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.EventHubReceiver.PrefetchCount">
      <summary>Gets or sets the number of events that any receive operation will actively cache. By default, this value is inherited from <see cref="T:Microsoft.ServiceBus.Messaging.EventHubConsumerGroup" />. The default value is 10,000.</summary>
      <returns>The number of messages that the message receiver can simultaneously request.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Thrown if the value is less than the minimum required value of 10.</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.EventHubReceiver.Receive">
      <summary>Receives Event Hubs event data.</summary>
      <returns>Returns the received <see cref="T:Microsoft.ServiceBus.Messaging.EventData" /> object, or null if no event data is available.</returns>
      <exception cref="T:Microsoft.ServiceBus.Messaging.MessagingException">Thrown if the service encounters a transient error.</exception>
      <exception cref="T:Microsoft.ServiceBus.Messaging.MessagingCommunicationException">Thrown if the client has a problem connecting to the service.</exception>
      <exception cref="T:Microsoft.ServiceBus.Messaging.ServerBusyException">Thrown if the current namespace is placing too much load on the system.</exception>
      <exception cref="T:Microsoft.ServiceBus.Messaging.ReceiverDisconnectedException">Thrown if another receiver with a higher <see cref="P:Microsoft.ServiceBus.Messaging.EventHubReceiver.Epoch" /> value is connected as the current receiver to the same partition specified by <see cref="P:Microsoft.ServiceBus.Messaging.EventHubReceiver.PartitionId" />.</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.EventHubReceiver.Receive(System.Int32)">
      <summary>Receives Event Hubs event data, up to the specified count.</summary>
      <returns>Returns the received <see cref="T:Microsoft.ServiceBus.Messaging.EventData" /> collection. The collection is either empty if no event is returned within the specified time, or all events up to <paramref name="maxCount" /> are returned.</returns>
      <param name="maxCount">The maximum amount of event data the user is willing to accept in one call.</param>
      <exception cref="T:Microsoft.ServiceBus.Messaging.MessagingException">Thrown if the service encounters a transient error.</exception>
      <exception cref="T:Microsoft.ServiceBus.Messaging.MessagingCommunicationException">Thrown if the client has a problem connecting to the service.</exception>
      <exception cref="T:Microsoft.ServiceBus.Messaging.ServerBusyException">Thrown if the current namespace is placing too much load on the system.</exception>
      <exception cref="T:Microsoft.ServiceBus.Messaging.ReceiverDisconnectedException">Thrown if another receiver with a higher <see cref="P:Microsoft.ServiceBus.Messaging.EventHubReceiver.Epoch" /> value is connected as the current receiver to the same partition specified by <see cref="P:Microsoft.ServiceBus.Messaging.EventHubReceiver.PartitionId" />.</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.EventHubReceiver.Receive(System.Int32,System.TimeSpan)">
      <summary>Receives Event Hubs event data, up to the specified count with the specified timeout value.</summary>
      <returns>Returns the received <see cref="T:Microsoft.ServiceBus.Messaging.EventData" /> collection. The collection is either empty if no event is returned within the specified time, or all events up to <paramref name="maxCount" /> are returned.</returns>
      <param name="maxCount">The maximum amount of event data the user is willing to accept in one call.</param>
      <param name="waitTime">The maximum time the user is willing to wait for event data to arrive.</param>
      <exception cref="T:Microsoft.ServiceBus.Messaging.MessagingException">Thrown if the service encounters a transient error.</exception>
      <exception cref="T:Microsoft.ServiceBus.Messaging.MessagingCommunicationException">Thrown if the client has a problem connecting to the service.</exception>
      <exception cref="T:Microsoft.ServiceBus.Messaging.ServerBusyException">Thrown if the current namespace is placing too much load on the system.</exception>
      <exception cref="T:Microsoft.ServiceBus.Messaging.ReceiverDisconnectedException">Thrown if another receiver with a higher <see cref="P:Microsoft.ServiceBus.Messaging.EventHubReceiver.Epoch" /> value is connected as the current receiver to the same partition specified by <see cref="P:Microsoft.ServiceBus.Messaging.EventHubReceiver.PartitionId" />.</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.EventHubReceiver.Receive(System.TimeSpan)">
      <summary>Receives Event Hubs event data with the specified timeout value.</summary>
      <returns>Returns the received <see cref="T:Microsoft.ServiceBus.Messaging.EventData" /> collection, or null if there is no event data available.</returns>
      <param name="waitTime">The maximum time the user is willing to wait for event data to arrive.</param>
      <exception cref="T:Microsoft.ServiceBus.Messaging.MessagingException">Thrown if the service encounters a transient error.</exception>
      <exception cref="T:Microsoft.ServiceBus.Messaging.MessagingCommunicationException">Thrown if the client has a problem connecting to the service.</exception>
      <exception cref="T:Microsoft.ServiceBus.Messaging.ServerBusyException">Thrown if the current namespace is placing too much load on the system.</exception>
      <exception cref="T:Microsoft.ServiceBus.Messaging.ReceiverDisconnectedException">Thrown if another receiver with a higher <see cref="P:Microsoft.ServiceBus.Messaging.EventHubReceiver.Epoch" /> value is connected as the current receiver to the same partition specified by <see cref="P:Microsoft.ServiceBus.Messaging.EventHubReceiver.PartitionId" />.</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.EventHubReceiver.ReceiveAsync">
      <summary>Asynchronous version of <see cref="M:Microsoft.ServiceBus.Messaging.EventHubReceiver.Receive" />.</summary>
      <returns>The task representing the asynchronous operation.</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.EventHubReceiver.ReceiveAsync(System.Int32)">
      <summary>Asynchronous version of <see cref="M:Microsoft.ServiceBus.Messaging.EventHubReceiver.Receive(System.Int32)" />.</summary>
      <returns>Returns <see cref="T:System.Threading.Tasks.Task`1" />.</returns>
      <param name="maxCount">The maximum amount of event data the user is willing to accept in one call.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.EventHubReceiver.ReceiveAsync(System.Int32,System.TimeSpan)">
      <summary>Asynchronous version of <see cref="M:Microsoft.ServiceBus.Messaging.EventHubReceiver.Receive(System.Int32,System.TimeSpan)" />.</summary>
      <returns>Returns <see cref="T:System.Threading.Tasks.Task`1" />.</returns>
      <param name="maxCount">The maximum amount of event data the user is willing to accept in one call.</param>
      <param name="waitTime">The maximum time the user is willing to wait for event data to arrive.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.EventHubReceiver.ReceiveAsync(System.TimeSpan)">
      <summary>Asynchronous version of <see cref="M:Microsoft.ServiceBus.Messaging.EventHubReceiver.Receive(System.TimeSpan)" />.</summary>
      <returns>The task representing the asynchronous operation.</returns>
      <param name="waitTime">The maximum time the user is willing to wait for event data to arrive.</param>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.EventHubReceiver.StartingDateTimeUtc">
      <summary>Gets the starting date and time in UTC format for this receiver. The <see cref="Overload:Microsoft.ServiceBus.Messaging.EventHubReceiver.Receive" /> method starts receiving the next event after this <see cref="P:Microsoft.ServiceBus.Messaging.EventHubReceiver.StartingDateTimeUtc" /> value. If null, the receiver starts receiving events from the beginning of the Event Hubs event stream.</summary>
      <returns>The starting date and time in UTC.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.EventHubReceiver.StartingOffset">
      <summary>Gets the starting offset for this receiver. The <see cref="Overload:Microsoft.ServiceBus.Messaging.EventHubReceiver.Receive" /> method starts receiving the next event after this offset value. If the value is null, the receiver starts receiving events from the beginning of the Event Hubs event stream.</summary>
      <returns>The starting offset.</returns>
    </member>
    <member name="T:Microsoft.ServiceBus.Messaging.EventHubRuntimeInformation">
      <summary>Returns Event Hubs runtime information, which is required for creating <see cref="T:Microsoft.ServiceBus.Messaging.EventHubSender" /> or <see cref="T:Microsoft.ServiceBus.Messaging.EventHubReceiver" /> objects.</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.EventHubRuntimeInformation.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.Messaging.EventHubRuntimeInformation" /> class.</summary>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.EventHubRuntimeInformation.CreatedAt">
      <summary>Gets or sets the time at which the Event Hub was created.</summary>
      <returns>Returns <see cref="T:System.DateTime" />.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.EventHubRuntimeInformation.PartitionCount">
      <summary>Gets or sets the number of partitions in an Event Hub.</summary>
      <returns>Returns <see cref="T:System.Int32" />.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.EventHubRuntimeInformation.PartitionIds">
      <summary>Gets or sets the partition ID for an Event Hub.</summary>
      <returns>Returns <see cref="T:System.String" />.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.EventHubRuntimeInformation.Path">
      <summary>Gets or sets the path to the Event Hub.</summary>
      <returns>Returns <see cref="T:System.String" />.</returns>
    </member>
    <member name="T:Microsoft.ServiceBus.Messaging.EventHubSender">
      <summary>A client class used in send operations for an Event Hub. Represents a logical sender connection to a specific Event Hub partition.</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.EventHubSender.CreateFromConnectionString(System.String)"></member>
    <member name="P:Microsoft.ServiceBus.Messaging.EventHubSender.PartitionId">
      <summary>Gets the partition ID for a logical partition of an Event Hub.</summary>
      <returns>The partition identifier.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.EventHubSender.Path">
      <summary>Gets the path of the Event Hub.</summary>
      <returns>The Event Hub path.</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.EventHubSender.Send(Microsoft.ServiceBus.Messaging.EventData)">
      <summary>Sends event data to the logical partition represented by <see cref="P:Microsoft.ServiceBus.Messaging.EventHubSender.PartitionId" />.</summary>
      <param name="data">The <see cref="T:Microsoft.ServiceBus.Messaging.EventData" /> to send.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.EventHubSender.SendAsync(Microsoft.ServiceBus.Messaging.EventData)">
      <summary>Asynchronous version of <see cref="M:Microsoft.ServiceBus.Messaging.EventHubSender.Send(Microsoft.ServiceBus.Messaging.EventData)" />.</summary>
      <returns>The task representing the asynchronous operation.</returns>
      <param name="data">The <see cref="T:Microsoft.ServiceBus.Messaging.EventData" /> to send.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.EventHubSender.SendBatch(System.Collections.Generic.IEnumerable{Microsoft.ServiceBus.Messaging.EventData})">
      <summary>Sends a batch of event data to the logical partition represented by <see cref="P:Microsoft.ServiceBus.Messaging.EventHubSender.PartitionId" />.</summary>
      <param name="eventDataList">An <see cref="T:System.Collections.Generic.IEnumerable" /> object containing event data instances.</param>
      <exception cref="T:Microsoft.ServiceBus.Messaging.MessageSizeExceededException">Thrown if the total serialized size of <paramref name="eventDataList" /> exceeds the allowed size limit for one event transmission (256k by default).</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.EventHubSender.SendBatchAsync(System.Collections.Generic.IEnumerable{Microsoft.ServiceBus.Messaging.EventData})">
      <summary>Asynchronously sends a batch of event data to the logical partition represented by <see cref="P:Microsoft.ServiceBus.Messaging.EventHubSender.PartitionId" />.</summary>
      <returns>Returns <see cref="T:System.Threading.Tasks.Task" />.</returns>
      <param name="eventDataList">An <see cref="T:System.Collections.Generic.IEnumerable" /> object containing event data instances.</param>
      <exception cref="T:Microsoft.ServiceBus.Messaging.MessageSizeExceededException">Thrown if the total serialized size of <paramref name="eventDataList" /> exceeds the allowed size limit for one event transmission (256k by default).</exception>
    </member>
    <member name="T:Microsoft.ServiceBus.Messaging.EventProcessorOptions">
      <summary>Defines the runtime options when registering an <see cref="T:Microsoft.ServiceBus.Messaging.IEventProcessor" /> interface with an <see cref="T:Microsoft.ServiceBus.Messaging.EventHubConsumerGroup" />. This is also the mechanism for catching exceptions from an <see cref="T:Microsoft.ServiceBus.Messaging.IEventProcessor" /> instance used by an <see cref="T:Microsoft.ServiceBus.Messaging.EventProcessorHost" /> object.</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.EventProcessorOptions.#ctor"></member>
    <member name="P:Microsoft.ServiceBus.Messaging.EventProcessorOptions.DefaultOptions">
      <summary>Gets the default options, which is 10 for the <see cref="P:Microsoft.ServiceBus.Messaging.EventProcessorOptions.MaxBatchSize" />, and 1 minute for the <see cref="P:Microsoft.ServiceBus.Messaging.EventProcessorOptions.ReceiveTimeOut" /> property.</summary>
      <returns>Returns <see cref="T:Microsoft.ServiceBus.Messaging.EventProcessorOptions" />.</returns>
    </member>
    <member name="E:Microsoft.ServiceBus.Messaging.EventProcessorOptions.ExceptionReceived">
      <summary>Event that fires when an exception is encountered during event processing. You can register a handler to this event for getting the exception notification.</summary>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.EventProcessorOptions.InitialOffsetProvider">
      <summary>Gets or sets the initial offset for the event processor.</summary>
      <returns>Returns <see cref="T:System.Func`2" />.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.EventProcessorOptions.InvokeProcessorAfterReceiveTimeout">
      <returns>Returns <see cref="T:System.Boolean" />.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.EventProcessorOptions.MaxBatchSize">
      <summary>Gets or sets the maximum event count that a user is willing to accept for processing per receive loop. This count is on a per-Event Hub partition level.</summary>
      <returns>Returns <see cref="T:System.Int32" />.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.EventProcessorOptions.PrefetchCount">
      <summary>Gets or sets the number of events that any receiver in the currently owned partition will actively cache. The default value for this property is 300.</summary>
      <returns>Returns <see cref="T:System.Int32" />.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.EventProcessorOptions.ReceiveTimeOut">
      <summary>Gets or sets the timespan in which the user is willing to wait when the event processor is performing a receive operation.</summary>
      <returns>Returns <see cref="T:System.TimeSpan" />.</returns>
    </member>
    <member name="T:Microsoft.ServiceBus.Messaging.ExceptionReceivedEventArgs">
      <summary>Provides data for the <see cref="E:Microsoft.ServiceBus.Messaging.OnMessageOptions.ExceptionReceived" /> event.</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.ExceptionReceivedEventArgs.#ctor(System.Exception,System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.Messaging.ExceptionReceivedEventArgs" /> class.</summary>
      <param name="exception">The exception that this event data belongs to.</param>
      <param name="action">The action associated with the event.</param>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.ExceptionReceivedEventArgs.Action">
      <summary>Gets the action associated with the event.</summary>
      <returns>The action associated with the event.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.ExceptionReceivedEventArgs.Exception">
      <summary>Gets the parent class exception to which this event data belongs.</summary>
      <returns>The exception, generated by the parent class, to which this event data belongs.</returns>
    </member>
    <member name="T:Microsoft.ServiceBus.Messaging.FalseFilter">
      <summary>Represents the false filter expression.</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.FalseFilter.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.Messaging.FalseFilter" /> class.</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.FalseFilter.Match(Microsoft.ServiceBus.Messaging.BrokeredMessage)">
      <summary>Matches a message against the current SQL expression.</summary>
      <returns>true if it matches; otherwise, false.</returns>
      <param name="message">The brokered message.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.FalseFilter.Preprocess">
      <summary>Gets the preprocessed filter expression.</summary>
      <returns>The preprocessed filter expression.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.FalseFilter.RequiresPreprocessing">
      <summary>Gets a value indicating whether the SQL filter expression requires preprocessing.</summary>
      <returns>true if the SQL filter expression requires preprocessing; otherwise, false. Currently always returns true.</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.FalseFilter.ToString">
      <summary>Converts the current instance to its string representation.</summary>
      <returns>A string representation of the current instance.</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.FalseFilter.Validate">
      <summary>Validates the SQL expression.</summary>
    </member>
    <member name="T:Microsoft.ServiceBus.Messaging.Filter">
      <summary>Describes a filter expression that is evaluated against a BrokeredMessage.</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.Filter.Match(Microsoft.ServiceBus.Messaging.BrokeredMessage)">
      <summary>Matches the BrokeredMessage against the FilterExpression.</summary>
      <returns>true if the BrokeredMessage matches the filtering expression; otherwise, false.</returns>
      <param name="message">The BrokeredMessage object.</param>
      <exception cref="T:System.InvalidOperationException">The operation is invalid with the current state of object.</exception>
      <exception cref="T:Microsoft.ServiceBus.Messaging.FilterActionException">Filter evaluation failed.</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.Filter.Preprocess">
      <summary>Preprocesses the filter expression and returns a preprocessed FilterExpression.</summary>
      <returns>The preprocessed FilterExpression.</returns>
      <exception cref="T:System.InvalidOperationException">The operation is invalid with the current state of object.</exception>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.Filter.RequiresPreprocessing">
      <summary>Gets a value indicating whether the filter expression requires preprocessing.</summary>
      <returns>true if the filter expression requires preprocessing; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.Filter.System#Runtime#Serialization#IExtensibleDataObject#ExtensionData">
      <summary>Gets or sets the object that contains extra data.</summary>
      <returns>The object that contains extra data.</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.Filter.Validate">
      <summary>Validates the FilterExpression and make sure it complies with the valid grammar rules.</summary>
      <exception cref="T:Microsoft.ServiceBus.Messaging.FilterActionException">The filter statement is invalid or is potentially complex enough to consume too much computing power when evaluating the statement.</exception>
    </member>
    <member name="T:Microsoft.ServiceBus.Messaging.FilterException">
      <summary>The exception that is thrown for signaling filter action errors.</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.FilterException.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.Messaging.FilterException" /> class using the specified message.</summary>
      <param name="message">The exception message.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.FilterException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.Messaging.FilterException" /> class using the specified message and inner exception.</summary>
      <param name="message">The exception message.</param>
      <param name="innerException">The inner exception.</param>
    </member>
    <member name="T:Microsoft.ServiceBus.Messaging.ICheckpointManager">
      <summary>Provides methods for running checkpoint asynchronously. Extensibility is provided to specify host-specific storage for storing the offset. This is provided when <see cref="M:Microsoft.ServiceBus.Messaging.EventHubConsumerGroup.RegisterProcessorAsync``1(Microsoft.ServiceBus.Messaging.Lease,Microsoft.ServiceBus.Messaging.ICheckpointManager)" /> is called, to checkpoint the offset position using <see cref="M:Microsoft.ServiceBus.Messaging.PartitionContext.CheckpointAsync" />.</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.ICheckpointManager.CheckpointAsync(Microsoft.ServiceBus.Messaging.Lease,System.String,System.Int64)">
      <summary>Stores the offset of a particular partition in the host-specific store.</summary>
      <returns>Returns <see cref="T:System.Threading.Tasks.Task" />.</returns>
      <param name="lease">Partition information against which to perform a checkpoint.</param>
      <param name="offset">Current position in the stream.</param>
      <param name="sequenceNumber">The sequence number of the partition.</param>
    </member>
    <member name="T:Microsoft.ServiceBus.Messaging.IEventProcessor">
      <summary>Provides methods for event processors. Applications must implement this interface, which enables the handling of events from Event Hubs. This interface is the main extensibility point for the <see cref="T:Microsoft.ServiceBus.Messaging.EventProcessorHost" /> and <see cref="M:Microsoft.ServiceBus.Messaging.EventHubConsumerGroup.RegisterProcessor``1(Microsoft.ServiceBus.Messaging.Lease,Microsoft.ServiceBus.Messaging.ICheckpointManager)" />.</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.IEventProcessor.CloseAsync(Microsoft.ServiceBus.Messaging.PartitionContext,Microsoft.ServiceBus.Messaging.CloseReason)">
      <summary>Called when the ownership of partition moves to a different node for load-balancing purpose, or when the host is shutting down. Called in response to <see cref="M:Microsoft.ServiceBus.Messaging.EventHubConsumerGroup.UnregisterProcessorAsync(Microsoft.ServiceBus.Messaging.Lease,Microsoft.ServiceBus.Messaging.CloseReason)" />.</summary>
      <returns> A task indicating that the Close operation is complete.</returns>
      <param name="context">Partition ownership information for the partition on which this processor instance works. You can call <see cref="M:Microsoft.ServiceBus.Messaging.PartitionContext.CheckpointAsync" /> to checkpoint progress in the processing of messages from Event Hub streams.</param>
      <param name="reason">The reason for calling <see cref="M:Microsoft.ServiceBus.Messaging.IEventProcessor.CloseAsync(Microsoft.ServiceBus.Messaging.PartitionContext,Microsoft.ServiceBus.Messaging.CloseReason)" />.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.IEventProcessor.OpenAsync(Microsoft.ServiceBus.Messaging.PartitionContext)">
      <summary>Initializes the Event Hub processor instance. This method is called before any event data is passed to this processor instance.</summary>
      <returns>The task that indicates that the Open operation is complete.</returns>
      <param name="context">Ownership information for the partition on which this processor instance works. Any attempt to call <see cref="M:Microsoft.ServiceBus.Messaging.PartitionContext.CheckpointAsync" /> will fail during the Open operation.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.IEventProcessor.ProcessEventsAsync(Microsoft.ServiceBus.Messaging.PartitionContext,System.Collections.Generic.IEnumerable{Microsoft.ServiceBus.Messaging.EventData})">
      <summary>Asynchronously processes the specified context and messages. This method is called when there are new messages in the Event Hubs stream. Make sure to checkpoint only when you are finished processing all the events in each batch.</summary>
      <returns>The task that indicates that <see cref="M:Microsoft.ServiceBus.Messaging.IEventProcessor.ProcessEventsAsync(Microsoft.ServiceBus.Messaging.PartitionContext,System.Collections.Generic.IEnumerable{Microsoft.ServiceBus.Messaging.EventData})" /> is complete.</returns>
      <param name="context">Ownership information for the partition on which this processor instance works.</param>
      <param name="messages">A batch of Event Hubs events.</param>
    </member>
    <member name="T:Microsoft.ServiceBus.Messaging.IEventProcessorFactory">
      <summary>An interface that provides a factory for creating instances of <see cref="T:Microsoft.ServiceBus.Messaging.IEventProcessor" />.</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.IEventProcessorFactory.CreateEventProcessor(Microsoft.ServiceBus.Messaging.PartitionContext)">
      <summary>Creates a new instance of an event processor in the specified partition.</summary>
      <returns>An instance of <see cref="T:Microsoft.ServiceBus.Messaging.IEventProcessorFactory" />.</returns>
      <param name="context">Partition context information.</param>
    </member>
    <member name="T:Microsoft.ServiceBus.Messaging.IMessageSessionAsyncHandler">
      <summary>Represents an interface for the asynchronous handler for the message session.</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.IMessageSessionAsyncHandler.OnCloseSessionAsync(Microsoft.ServiceBus.Messaging.MessageSession)">
      <summary>Raises an event that occurs when the session has been asynchronously closed.</summary>
      <returns>The task object representing the asynchronous operation.</returns>
      <param name="session">The closed session.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.IMessageSessionAsyncHandler.OnMessageAsync(Microsoft.ServiceBus.Messaging.MessageSession,Microsoft.ServiceBus.Messaging.BrokeredMessage)">
      <summary>Raises an event that occurs when a message has been brokered.</summary>
      <returns>The task object representing the asynchronous operation.</returns>
      <param name="session">The message session.</param>
      <param name="message">The brokered message.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.IMessageSessionAsyncHandler.OnSessionLostAsync(System.Exception)">
      <summary>Raises an event that occurs when the session has been lost.</summary>
      <returns>The task object representing the asynchronous operation.</returns>
      <param name="exception">The exception that occurred that caused the lost session.</param>
    </member>
    <member name="T:Microsoft.ServiceBus.Messaging.IMessageSessionAsyncHandlerFactory">
      <summary>Represents an interface for the handler factory associated with the message session.</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.IMessageSessionAsyncHandlerFactory.CreateInstance(Microsoft.ServiceBus.Messaging.MessageSession,Microsoft.ServiceBus.Messaging.BrokeredMessage)">
      <summary>Creates an instance of the handler factory.</summary>
      <returns>The created instance.</returns>
      <param name="session">The message session.</param>
      <param name="message">The message.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.IMessageSessionAsyncHandlerFactory.DisposeInstance(Microsoft.ServiceBus.Messaging.IMessageSessionAsyncHandler)">
      <summary>Releases the resources associated with the handler factory instance.</summary>
      <param name="handler">The handler instance.</param>
    </member>
    <member name="T:Microsoft.ServiceBus.Messaging.IMessageSessionHandler">
      <summary>Represents an interface for the handler associated with the message session.</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.IMessageSessionHandler.OnCloseSession(Microsoft.ServiceBus.Messaging.MessageSession)">
      <summary>Raises an event that occurs when an active session closes.</summary>
      <param name="session">The closing session.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.IMessageSessionHandler.OnMessage(Microsoft.ServiceBus.Messaging.MessageSession,Microsoft.ServiceBus.Messaging.BrokeredMessage)">
      <summary>Raises an event that occurs when a message has been brokered.</summary>
      <param name="session">The current message session.</param>
      <param name="message">The brokered message.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.IMessageSessionHandler.OnSessionLost(System.Exception)">
      <summary>Raises an event that occurs when the session has been lost.</summary>
      <param name="exception">The error that caused the lost session.</param>
    </member>
    <member name="T:Microsoft.ServiceBus.Messaging.IMessageSessionHandlerFactory">
      <summary>Represents an interface for the handler factory associated with the message session.</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.IMessageSessionHandlerFactory.CreateInstance(Microsoft.ServiceBus.Messaging.MessageSession,Microsoft.ServiceBus.Messaging.BrokeredMessage)">
      <summary>Creates an instance of the handler factory.</summary>
      <returns>The created instance.</returns>
      <param name="session">The message session.</param>
      <param name="message">The message.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.IMessageSessionHandlerFactory.DisposeInstance(Microsoft.ServiceBus.Messaging.IMessageSessionHandler)">
      <summary>Releases the resources associated with the handler factory instance.</summary>
      <param name="handler">The handler instance.</param>
    </member>
    <member name="T:Microsoft.ServiceBus.Messaging.Lease">
      <summary>Contains partition ownership information.</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.Lease.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.Messaging.Lease" /> class.</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.Lease.#ctor(Microsoft.ServiceBus.Messaging.Lease)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.Messaging.Lease" /> class with the specified <see cref="M:Microsoft.ServiceBus.Messaging.Lease.#ctor(Microsoft.ServiceBus.Messaging.Lease)" /> value.</summary>
      <param name="source">The specified <see cref="M:Microsoft.ServiceBus.Messaging.Lease.#ctor(Microsoft.ServiceBus.Messaging.Lease)" /> value.</param>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.Lease.Epoch">
      <summary>Gets or sets the epoch year of the lease, which is a value you can use to determine the most recent owner of a partition between competing nodes.</summary>
      <returns>The epoch year of the lease.</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.Lease.Equals(System.Object)">
      <summary>Determines whether this instance is equal to the specified object.</summary>
      <returns>true if this instance is equal to the specified object; otherwise, false.</returns>
      <param name="obj">The object to compare.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.Lease.GetHashCode">
      <summary>Returns the hash code of the current instance.</summary>
      <returns>The hash code of the current instance.</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.Lease.IsExpired">
      <summary>Determines whether the lease is expired.</summary>
      <returns>true if the lease is expired; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.Lease.Offset">
      <summary>Gets or sets the current value for the offset in the stream.</summary>
      <returns>The lease offset.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.Lease.Owner">
      <summary>Gets or sets the host owner for the partition.</summary>
      <returns>The host owner of the partition.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.Lease.PartitionId">
      <summary>Gets the ID of the partition to which this lease belongs.</summary>
      <returns>The partition identifier.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.Lease.SequenceNumber">
      <summary>Gets or sets the last checkpointed sequence number in the stream.</summary>
      <returns>Returns <see cref="T:System.Int64" />.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.Lease.Token">
      <summary>Gets or sets the lease token that manages concurrency between hosts. You can use this token to guarantee single access to any resource needed by the <see cref="T:Microsoft.ServiceBus.Messaging.IEventProcessor" /> object.</summary>
      <returns>The lease token.</returns>
    </member>
    <member name="T:Microsoft.ServiceBus.Messaging.LeaseLostException">
      <summary>Represents an exception that occurs when the service lease has been lost.</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.LeaseLostException.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.Messaging.LeaseLostException" /> class using default values.</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.LeaseLostException.#ctor(Microsoft.ServiceBus.Messaging.Lease)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.Messaging.LeaseLostException" /> class using specified lease.</summary>
      <param name="lease">The messaging lease.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.LeaseLostException.#ctor(Microsoft.ServiceBus.Messaging.Lease,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.Messaging.LeaseLostException" /> class using specified lease and the error that caused the exception.</summary>
      <param name="lease">The messaging lease.</param>
      <param name="innerException">The error that caused the exception.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.LeaseLostException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.Messaging.LeaseLostException" /> class using specified information and context.</summary>
      <param name="info">The serialized information about the exception.</param>
      <param name="context">The contextual information about the source or destination.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.LeaseLostException.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.Messaging.LeaseLostException" /> class using specified error message.</summary>
      <param name="message">The message associated with the error.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.LeaseLostException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.Messaging.LeaseLostException" /> class using specified error message and inner exception.</summary>
      <param name="message">The message associated with the error.</param>
      <param name="innerException">The error that caused the exception.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.LeaseLostException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Populates a <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with the data needed to serialize the target object.</summary>
      <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object to populate with data.</param>
      <param name="context">The destination (see StreamingContext) for this serialization.</param>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.LeaseLostException.Lease">
      <summary>Gets or sets the service lease.</summary>
      <returns>The service lease.</returns>
    </member>
    <member name="T:Microsoft.ServiceBus.Messaging.ManagementStrings">
      <summary>Provides string constants used in Windows Azure Service Bus Messaging.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.AccessedAt">
      <summary>Specifies the value for AccessedAt string.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.AccessRights">
      <summary>Specifies the value for AccessRights string.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.AcsManagementEndpoint">
      <summary>Specifies the value for AcsManagementEndpoint string.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.Action">
      <summary>Specifies the value for Action string.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.Address">
      <summary>Specifies the value for Address string.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.AdmCredential">
      <summary>Specifies the value for the AdmCredential string.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.AdminApiUserName">
      <summary>Specifies the value for AdminApiUserName string.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.AdminGroup">
      <summary>Specifies the value for AdminGroup string.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.AdmOutcomes"></member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.AdmRegistrationDescription">
      <summary>Specifies the value for the AdmRegistrationDescription string.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.AdmRegistrationId">
      <summary>Specifies the value for the AdmRegistrationId string.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.AdmRegistrationsCount">
      <summary>Specifies the value for the AdmRegistrationsCount string.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.AdmTemplateRegistrationDescription">
      <summary>Specifies the value for the AdmTemplateRegistrationDescription string.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.AllowRule">
      <summary>Specifies the value for AllowRule string.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.AllRegistrationsCount">
      <summary>Specifies the value for the AllRegistrationsCount string.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.AmqpPort">
      <summary>Specifies the value for AmqpPort string.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.AmqpsPort">
      <summary>Specifies the value for AmqpsPort string.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.ApiVersion">
      <summary>Specifies the value for ApiVersion string.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.ApiVersionName">
      <summary>Specifies the value for ApiVersionName string.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.ApnsCredential">
      <summary>Specifies the value for ApnsCredential string.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.ApnsOutcomes"></member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.AppleRegistrationDescription">
      <summary>Specifies the value for AppleRegistrationDescription string.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.AppleRegistrationsCount">
      <summary>Specifies the value for the AppleRegistrationsCount string.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.AppleTemplateRegistrationDescription">
      <summary>Specifies the value for AppleTemplateRegistrationDescription string.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.ApplicationPlatform">
      <summary>Specifies the value for ApplicationPlatform string.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.AtomEntryContentType">
      <summary>Specifies the value for AtomEntryContentType string.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.AuthorizationRules">
      <summary>Specifies the value for AuthorizationRules string.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.AuthorizationType">
      <summary>Specifies the value for AuthorizationType string.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.AutoDeleteOnIdle">
      <summary>Specifies the value for AutoDeleteOnIdle string.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.BaiduChannelId">
      <summary>Specifies the value for the Baidu channel ID.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.BaiduCredential">
      <summary>Specifies the value for the Baidu credentials.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.BaiduRegistrationDescription">
      <summary>Specifies the value for the Baidu registration description.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.BaiduRegistrationsCount"></member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.BaiduTemplateRegistrationDescription">
      <summary>Specifies the value for the Baidu template registration.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.BaiduUserId">
      <summary>Specifies the value for the Baidu user ID.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.BeginSequenceNumber">
      <summary>Specifies the value for BeginSequenceNumber string.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.BillingTier"></member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.BodyTemplate">
      <summary>Specifies the value for BodyTemplate string.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.BrokerExternalUrls">
      <summary>Specifies the value for BrokerExternalUrls string.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.CancelScheduledNotification">
      <summary>Specifies the value for CancelScheduledNotification string.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.CertificateInfo">
      <summary>Specifies the value for CertificateInfo string.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.Channel">
      <summary>Specifies the value for the Channel string.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.Channels">
      <summary>Specifies the value for Channels string.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.ChannelUri">
      <summary>Specifies the value for ChannelUri string.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.Checkpoint">
      <summary>Specifies the value for Checkpoint string.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.ClaimType">
      <summary>Specifies the value for ClaimType string.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.ClaimValue">
      <summary>Specifies the value for ClaimValue string.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.ClientConnectionEndpointPort">
      <summary>Specifies the value for ClientConnectionEndpointPort string.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.ClusterConnectionEndpointPort">
      <summary>Specifies the value for ClusterConnectionEndpointPort string.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.Code">
      <summary>Specifies the value for Code string.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.ConnectionDetail">
      <summary>Specifies the value for ConnectionDetail string.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.ConnectionInformationDescription">
      <summary>Specifies the value for ConnectionInformationDescription string.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.ConnectionString">
      <summary>Specifies the value for ConnectionString string.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.ConsumerGroupCollection">
      <summary>Specifies the value for ConsumerGroupCollection string.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.ConsumerGroupDescription">
      <summary>Specifies the value for ConsumerGroupDescription string.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.ConsumerGroupName">
      <summary>Specifies the value for ConsumerGroupName string.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.CorrelationFilter">
      <summary>Specifies the value for CorrelationFilter string.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.CountDetails">
      <summary>Specifies the value for CountDetails string.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.CreateACSNamespace">
      <summary>Specifies the value for CreateACSNamespace string.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.CreatedAt">
      <summary>Specifies the value for CreatedAt string.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.Critical">
      <summary>Specifies the value for the Critical string.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.CurrentAbsoluteSKUUnits">
      <summary>Specifies the value for CurrentAbsoluteSKUUnits string.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.CurrentDatabaseCount">
      <summary>Specifies the value for the CurrentDatabaseCount string.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.CurrentSKUUnits">
      <summary>Specifies the value for CurrentSKUUnits string.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.CursorType">
      <summary>Specifies the value for CursorType string.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.DailyApiCalls">
      <summary>Specifies the value for DailyApiCalls string.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.DailyMaxActiveDevices">
      <summary>Specifies the value for DailyMaxActiveDevices string.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.DailyMaxActiveRegistrations">
      <summary>Specifies the value for DailyMaxActiveRegistrations string.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.DailyOperations">
      <summary>Specifies the value for DailyOperations string.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.DailyPushes">
      <summary>Specifies the value for DailyPushes string.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.Data">
      <summary>Specifies the value for the Data string.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.DatabaseName">
      <summary>Specifies the value for DatabaseName string.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.DatabaseServer">
      <summary>Specifies the value for DatabaseServer string.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.DatabaseSizeInMB">
      <summary>Specifies the value for DatabaseSizeInMB string.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.DataCenter">
      <summary>Specifies the value for DataCenter string.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.DeadLetteringOnFilterEvaluationExceptions">
      <summary>Specifies the value for DeadLetteringOnFilterEvaluationExceptions string.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.DeadLetteringOnMessageExpiration">
      <summary>Specifies the value for DeadLetteringOnMessageExpiration string.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.DefaultKey">
      <summary>Specifies the value for DefaultKey string.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.DefaultMessageTimeToLive">
      <summary>Specifies the value for DefaultMessageTimeToLive string.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.DefaultRuleDescription">
      <summary>Specifies the value for DefaultRuleDescription string.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.DeleteMethod">
      <summary>Specifies the value for DeleteMethod string.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.DesiredDatabaseCount">
      <summary>Specifies the value for the DesiredDatabaseCount string.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.DeviceChallenge">
      <summary>Specifies the value for the DeviceChallenge string.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.DeviceToken">
      <summary>Specifies the value for DeviceToken string.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.DuplicateDetectionHistoryTimeWindow">
      <summary>Specifies the value for DuplicateDetectionHistoryTimeWindow string.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.EmailAddress">
      <summary>Specifies the value for EmailAddress string.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.EmailRegistrationDescription">
      <summary>Specifies the value for EmailRegistrationDescription string.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.EmptyFilterAction">
      <summary>Specifies the value for EmptyFilterAction string.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.EmptyRuleAction">
      <summary>Specifies the value for EmptyRuleAction string.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.EnableBatchedOperations">
      <summary>Specifies the value for EnableBatchedOperations string.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.EnableCheckpoint">
      <summary>Specifies the value for whether checkpointing is enabled. See the documentation for Event Hubs.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.Enabled">
      <summary>Specifies the value for Enabled string.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.EnableExpress">
      <summary>Specifies the value for EnableExpress string.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.EnablePartitioning">
      <summary>Specifies the value for EnablePartitioning string.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.EnableRuleAction">
      <summary>Specifies the value for EnableRuleAction string.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.EnableSubscriptionPartitioning">
      <summary>Specifies the value for the EnableSubscriptionPartitioning string.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.EncryptionCertificate">
      <summary>Specifies the value for EncryptionCertificate string.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.EndSequenceNumber">
      <summary>Specifies the value for EndSequenceNumber string.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.EndTime">
      <summary>Specifies the end time value.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.EnqueueTime">
      <summary>Specifies the enqueue time value.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.EntitiesCount">
      <summary>Specifies the value for EntitiesCount string.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.EntityAvailabilityStatus">
      <summary>Specifies the value for EntityAvailabilityStatus string.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.EntityStatus">
      <summary>Specifies the value for EntityStatus string.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.EnumerationResourceName">
      <summary>Specifies the value for EnumerationResourceName string.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.ETag">
      <summary>Specifies the value for ETag string.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.EventFeedbackQueueName">
      <summary>Specifies the value for EventFeedbackQueueName string.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.EventFeedbackQueueSharedAccessSignature">
      <summary>Specifies the value for EventFeedbackQueueSharedAccessSignature string.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.EventHubCollection">
      <summary>Specifies the value for EventHubCollection string.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.EventHubCount">
      <summary>Specifies the value for EventHubCount string.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.EventHubDescription">
      <summary>Specifies the value for EventHubDescription string.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.EventHubEnabled">
      <summary>Specifies the value for whether the Event Hub is enabled.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.EventHubPartitionCount">
      <summary>Specifies the value for EventHubPartitionCount string.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.EventHubPartitionIds"></member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.EventHubPath">
      <summary>Specifies the value for EventHubPath string.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.EventInputQueueName">
      <summary>Specifies the value for EventInputQueueName string.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.EventInputQueueSharedAccessSignature">
      <summary>Specifies the value for EventInputQueueSharedAccessSignature string.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.EventInputTableName">
      <summary>Specifies the value for EventInputTableName string.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.EventInputTableSharedAccessSignature">
      <summary>Specifies the value for EventInputTableSharedAccessSignature string.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.EventQueueEndpoint">
      <summary>Specifies the value for EventQueueEndpoint string.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.EventSourceInfo">
      <summary>Specifies the value for EventSourceInfo string.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.EventSourceName">
      <summary>Specifies the value for EventSourceName string.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.EventTableEndpoint">
      <summary>Specifies the value for EventTableEndpoint string.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.ExpirationTime">
      <summary>Specifies the value for ExpirationTime string.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.Expiry">
      <summary>Specifies the value for Expiry string.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.FailedFilePath">
      <summary>Specifies the value for FailedFilePath string.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.Failure">
      <summary>Specifies the value for Failure string.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.FalseFilter">
      <summary>Specifies the value for FalseFilter string.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.FarmCertificate">
      <summary>Specifies the value for FarmCertificate string.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.FarmDNS">
      <summary>Specifies the value for FarmDNS string.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.FarmType">
      <summary>Specifies the value for FarmType string.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.Filter">
      <summary>Specifies the value for Filter string.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.FilteringMessagesBeforePublishing">
      <summary>Specifies the value for FilteringMessagesBeforePublishing string.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.ForwardDeadLetteredMessagesTo">
      <summary>Specifies the value for ForwardDeadLetteredMessagesTo string.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.ForwardTo">
      <summary>Specifies the value for ForwardTo string.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.FullName">
      <summary>Specifies the value for FullName string.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.GatewayDBConnectionString">
      <summary>Specifies the value for GatewayDBConnectionString string.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.GcmCredential">
      <summary>Specifies the value for GcmCredential string.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.GcmOutcomes"></member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.GcmRegistrationDescription">
      <summary>Specifies the value for GcmRegistrationDescription string.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.GcmRegistrationId">
      <summary>Specifies the value for GcmRegistrationId string.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.GcmRegistrationsCount">
      <summary>Specifies the value for the GcmRegistrationsCount string.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.GcmTemplateRegistrationDescription">
      <summary>Specifies the value for GcmTemplateRegistrationDescription string.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.GetMethod">
      <summary>Specifies the value for GetMethod string.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.GetVersionInfo">
      <summary>Specifies the value for GetVersionInfo string.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.GetVersionInfoHeaderName">
      <summary>Specifies the value for GetVersionInfoHeaderName string.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.Host">
      <summary>Specifies the value for Host string.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.HostId">
      <summary>Specifies the value for HostId string.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.HostName">
      <summary>Specifies the value for HostName string.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.Hosts">
      <summary>Specifies the value for Hosts string.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.HostStatus">
      <summary>Specifies the value for HostStatus string.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.HttpsPort">
      <summary>Specifies the value for HttpsPort string.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.Id">
      <summary>Specifies the value for Id string.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.Identifier">
      <summary>Specifies the value for the Identifier string.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.IfMatch">
      <summary>Specifies the value for IfMatch string.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.ImportFileUri">
      <summary>Specifies the value for the ImportFileUri string.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.IncomingBytesPerSecond">
      <summary>Specifies the Event Hubs <see cref="P:Microsoft.ServiceBus.Messaging.PartitionDescription.IncomingBytesPerSecond" /> value.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.InputProperties">
      <summary>Specifies the value for the InputProperties string.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.IsAnonymousAccessible">
      <summary>Specifies the value for IsAnonymousAccessible string.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.IsDynamic">
      <summary>Specifies the value for IsDynamic string.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.IsExpress">
      <summary>Specifies the value for IsExpress string.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.IsHybridConnection">
      <summary>Specifies the value indicating whether this is a hybrid connection.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.IsPremium">
      <summary>Specifies the value for the IsPremium string.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.IssueRegistrationSecretPayload">
      <summary>Specifies the value for the IssueRegistrationSecretPayload string.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.IssuerName">
      <summary>Specifies the value for IssuerName string.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.JobType">
      <summary>Specifies the value for the JobType string.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.KeyName">
      <summary>Specifies the value for KeyName string.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.LastCheckpoint">
      <summary>Specifies the last checkpoint value.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.LastEnqueuedOffset"></member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.LastEnqueuedTimeUtc"></member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.LeaseDriverEndpointPort">
      <summary>Specifies the value for LeaseDriverEndpointPort string.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.ListenerCount">
      <summary>Specifies the value for ListenerCount string.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.ListenerType">
      <summary>Specifies the value for ListenerType string.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.Location">
      <summary>Specifies the location value.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.LockDuration">
      <summary>Specifies the value for LockDuration string.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.ManagementSuffix">
      <summary>Specifies the value for ManagementSuffix string.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.MaxAllowedApiCallsPerDayPerUnit">
      <summary>Specifies the value for MaxAllowedApiCallsPerDayPerUnit string.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.MaxAllowedDevicesPerUnit">
      <summary>Specifies the value for MaxAllowedDevicesPerUnit string.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.MaxAllowedEventHubUnit">
      <summary>Specifies the value for MaxAllowedEventHubUnit string.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.MaxAllowedMonthlyPushes"></member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.MaxAllowedMulticastTagsPerNamespace"></member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.MaxAllowedOperationsPerDayPerUnit">
      <summary>Specifies the value for MaxAllowedOperationsPerDayPerUnit string.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.MaxAllowedPushesPerDayPerUnit">
      <summary>Specifies the value for MaxAllowedPushesPerDayPerUnit string.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.MaxAllowedRegistrationsPerUnit">
      <summary>Specifies the value for MaxAllowedRegistrationsPerUnit string.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.MaxAllowedUnits">
      <summary>Specifies the value for MaxAllowedUnits string.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.MaxCorrelationFiltersPerTopic">
      <summary>Specifies the value for MaxCorrelationFiltersPerTopic string.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.MaxDeliveryCount">
      <summary>Specifies the value for MaxDeliveryCount string.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.MaxMessageSizeInBytes">
      <summary>Specifies the value for MaxMessageSizeInBytes string.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.MaxSizeInMegabytes">
      <summary>Specifies the value for MaxSizeInMegabytes string.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.MaxSqlFiltersPerTopic">
      <summary>Specifies the value for MaxSqlFiltersPerTopic string.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.MaxSubscriptionsPerTopic">
      <summary>Specifies the value for MaxSubscriptionsPerTopic string.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.MessageBrokerPort">
      <summary>Specifies the value for MessageBrokerPort string.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.MessageContainerInfo">
      <summary>Specifies the value for MessageContainerInfo string.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.MessageCount">
      <summary>Specifies the value for MessageCount string.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.MessageCountDetails">
      <summary>Specifies the value for MessageCountDetails string.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.MessageRetentionInDays">
      <summary>Specifies the value for MessageRetentionInDays string.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.MessagingSkuName"></member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.MinAllowedEventHubUnit">
      <summary>Specifies the value for MinAllowedEventHubUnit string.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.MinAllowedUnits">
      <summary>Specifies the value for MinAllowedUnits string.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.MonthlyPushes"></member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.MpnsCredential">
      <summary>Specifies the value for MpnsCredential string.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.MpnsHeader">
      <summary>Specifies the value for MpnsHeader string.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.MpnsHeaders">
      <summary>Specifies the value for MpnsHeaders string.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.MpnsOutcomes"></member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.MpnsRegistrationDescription">
      <summary>Specifies the value for MpnsRegistrationDescription string.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.MpnsRegistrationsCount">
      <summary>Specifies the value for the MpnsRegistrationsCount string.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.MpnsTemplateRegistrationDescription">
      <summary>Specifies the value for MpnsTemplateRegistrationDescription string.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.Name">
      <summary>Specifies the value for Name string.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.Namespace">
      <summary>Specifies the value for Namespace string.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.NamespaceAvailability">
      <summary>Specifies the value for NamespaceAvailability string.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.NamespaceDescription">
      <summary>Specifies the value for NamespaceDescription string.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.NamespaceEntityStats">
      <summary>Specifies the value for the NamespaceEntityStats string.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.NamespaceMessagingPlan">
      <summary>Specifies the value for the NamespaceMessagingPlan string.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.NamespaceSKU">
      <summary>Specifies the value for the NamespaceSKU string.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.NamespaceSKUPlan">
      <summary>Specifies the value for the NamespaceSKUPlan string.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.NamespaceTypeName">
      <summary>Specifies the value of the namespace type (messaging or notification hub).</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.NewPath"></member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.NewPnsHandle">
      <summary>Specifies the value for NewPnsHandle string.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.NHBasicUnit">
      <summary>Specifies the value for the NHBasicUnit string.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.NHStandardUnit">
      <summary>Specifies the value for the NHStandardUnit string.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.NokiaXOutcomes"></member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.NotificationBody"></member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.NotificationDetails"></member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.NotificationHubBillingPlan"></member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.NotificationHubBillingTier"></member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.NotificationHubBillingUsage"></member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.NotificationHubCollection">
      <summary>Specifies the value for NotificationHubCollection string.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.NotificationHubCount">
      <summary>Specifies the value for the NotificationHubCount string.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.NotificationHubDescription">
      <summary>Specifies the value for NotificationHubDescription string.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.NotificationHubJob">
      <summary>Specifies the value for the NotificationHubJob string.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.NotificationHubJobId">
      <summary>Specifies the value for the NotificationHubJobId string.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.NotificationHubPlan">
      <summary>Specifies the value for NotificationHubPlan string.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.NotificationHubPnsCredentials">
      <summary>Specifies the value for the NotificationHubPnsCredentials string.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.NotificationHubSKU">
      <summary>Specifies the value for NotificationHubSKU string.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.NotificationId">
      <summary>Specifies the value of the notification ID.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.NotificationOutcome">
      <summary>Specifies the value for NotificationOutcome string.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.NotificationOutcomeCollection"></member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.OriginalPnsHandle">
      <summary>Specifies the value for OriginalPnsHandle string.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.Outcome">
      <summary>Specifies the value for Outcome string.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.Outcomes">
      <summary>Specifies the outcomes value.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.OutgoingBytesPerSecond">
      <summary>Specifies the <see cref="P:Microsoft.ServiceBus.Messaging.PartitionDescription.OutgoingBytesPerSecond" /> value.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.OutputContainerUri">
      <summary>Specifies the value for the OutputContainerUri string.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.OutputFilePath">
      <summary>Specifies the value for the OutputFilePath string.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.OutputProperties">
      <summary>Specifies the value for the OutputProperties string.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.PartitionCollection">
      <summary>Specifies the value for the PartitionCollection string.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.PartitionCount">
      <summary>Specifies the value for PartitionCount string.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.PartitionDescription">
      <summary>Specifies the value for PartitionDescription string.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.PatchMethod"></member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.Path">
      <summary>Specifies the value for Path string.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.PnsCredential">
      <summary>Specifies the value for PnsCredential string.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.PnsCredentialName">
      <summary>Specifies the value for PnsCredentialName string.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.PnsCredentials">
      <summary>Specifies the value for PnsCredentials string.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.PnsHandle">
      <summary>Specifies the value for PnsHandle string.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.PortalRedirect">
      <summary>Specifies the value for PortalRedirect string.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.PostMethod">
      <summary>Specifies the value for PostMethod string.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.PrimaryKey">
      <summary>Specifies the value for PrimaryKey string.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.Progress">
      <summary>Specifies the value for the Progress string.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.Publishers"></member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.PublishToRegistry">
      <summary>Specifies the value for PublishToRegistry string.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.PutMethod">
      <summary>Specifies the value for PutMethod string.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.QueueCollection">
      <summary>Specifies the value for QueueCollection string.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.QueueCount">
      <summary>Specifies the value for the QueueCount string.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.QueueDescription">
      <summary>Specifies the value for QueueDescription string.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.ReasonDetail">
      <summary>Specifies the value for ReasonDetail string.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.Region">
      <summary>Specifies the value for Region string.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.RegionCodeDescription">
      <summary>Specifies the value for RegionCodeDescription string.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.RegistrationBoundVariable">
      <summary>Specifies the value for the RegistrationBoundVariable string.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.RegistrationCollection">
      <summary>Specifies the value for RegistrationCollection string.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.RegistrationCounts">
      <summary>Specifies the value for the RegistrationCounts string.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.RegistrationId">
      <summary>Specifies the value for RegistrationId string.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.RegistrationIds">
      <summary>Specifies the value for the RegistrationIds string.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.RegistrationResult">
      <summary>Specifies the value for RegistrationResult string.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.Registrations">
      <summary>Specifies the value for Registrations string.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.RegistrationSecretGcmPayload">
      <summary>Specifies the value for the RegistrationSecretGcmPayload string.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.RegistrationSecretPayload">
      <summary>Specifies the value for the RegistrationSecretPayload string.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.RegistrationTtl">
      <summary>Specifies the value for RegistrationTtl string.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.RelayCollection">
      <summary>Specifies the value for RelayCollection string.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.RelayCount">
      <summary>Specifies the value for the RelayCount string.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.RelayDescription">
      <summary>Specifies the value for RelayDescription string.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.RelayType">
      <summary>Specifies the value for RelayType string.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.RequestorService">
      <summary>Specifies the value for the RequestorService string.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.RequiresClientAuthorization">
      <summary>Specifies the value for RequiresClientAuthorization string.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.RequiresDuplicateDetection">
      <summary>Specifies the value for RequiresDuplicateDetection string.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.RequiresSession">
      <summary>Specifies the value for RequiresSession string.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.RequiresTransportSecurity">
      <summary>Specifies the value for RequiresTransportSecurity string.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.Result">
      <summary>Specifies the value for Result string.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.Results">
      <summary>Specifies the value for Results string.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.Revision">
      <summary>Specifies the value for the Revision string.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.RevokedPublisherCollection"></member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.RevokedPublisherDescription"></member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.RevokedPublishersStorageEntityName"></member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.Rights">
      <summary>Specifies the value for Rights string.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.RPHttpsPort">
      <summary>Specifies the value for RPHttpsPort string.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.RPHttpsUrl">
      <summary>Specifies the value for RPHttpsUrl string.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.RuleAction">
      <summary>Specifies the value for RuleAction string.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.RuleCollection">
      <summary>Specifies the value for RuleCollection string.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.RuleDescription">
      <summary>Specifies the value for RuleDescription string.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.RunAsAccount">
      <summary>Specifies the value for RunAsAccount string.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.SBFarmDBConnectionString">
      <summary>Specifies the value for SBFarmDBConnectionString string.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.SBFarmInfo">
      <summary>Specifies the value for SBFarmInfo string.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.ScaleUnit">
      <summary>Specifies the value for ScaleUnit string.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.ScaleUnitKey">
      <summary>Specifies the value for ScaleUnitKey string.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.ScheduledNotification">
      <summary>Specifies the value for ScheduledNotification string.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.ScheduledNotificationId">
      <summary>Specifies the value for ScheduledNotificationId string.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.ScheduledNotificationPayload">
      <summary>Specifies the value for ScheduledNotificationPayload string.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.ScheduledNotificationTags">
      <summary>Specifies the value for ScheduledNotificationTags string.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.ScheduledNotificationTime">
      <summary>Specifies the value for ScheduledNotificationTime string.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.SecondaryConnectionString">
      <summary>Specifies the value for SecondaryConnectionString string.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.SecondaryKey">
      <summary>Specifies the value for SecondaryKey string.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.SecondaryTileName"></member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.SelectedEventHubUnit">
      <summary>Specifies the value for SelectedEventHubUnit string.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.SelectedSKUMaxUnits">
      <summary>Specifies the value for SelectedSKUMaxUnits string.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.SelectedSKUMinUnits">
      <summary>Specifies the value for SelectedSKUMinUnits string.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.Service">
      <summary>Specifies the value for Service string.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.ServiceBusEndpoint">
      <summary>Specifies the value for ServiceBusEndpoint string.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.ServiceBusFarmStatusInfo">
      <summary>Specifies the value for ServiceBusFarmStatusInfo string.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.ServiceConnectionEndpointPort">
      <summary>Specifies the value for ServiceConnectionEndpointPort string.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.ServiceInfo">
      <summary>Specifies the value for ServiceInfo string.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.ServiceName">
      <summary>Specifies the value for ServiceName string.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.SharedAccessAuthorizationRule">
      <summary>Specifies the value for SharedAccessAuthorizationRule string.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.SizeInBytes">
      <summary>Specifies the value for SizeInBytes string.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.SKU">
      <summary>Specifies the value for SKU string.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.SKUDescription">
      <summary>Specifies the value for SKUDescription string.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.SmtpCredential">
      <summary>Specifies the value for SmtpCredential string.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.SqlFilter">
      <summary>Specifies the value for SqlFilter string.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.SqlRuleAction">
      <summary>Specifies the value for SqlRuleAction string.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.StartTime">
      <summary>Specifies the start time value.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.State">
      <summary>Specifies the state value.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.Status">
      <summary>Specifies the value for Status string.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.SubscriptionCollection">
      <summary>Specifies the value for SubscriptionCollection string.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.SubscriptionCount">
      <summary>Specifies the value for SubscriptionCount string.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.SubscriptionDescription">
      <summary>Specifies the value for SubscriptionDescription string.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.SubscriptionId">
      <summary>Specifies the value for SubscriptionId string.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.Success">
      <summary>Specifies the value for Success string.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.SupportOrdering">
      <summary>Specifies the value for SupportOrdering string.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.Tag">
      <summary>Specifies the value for Tag string.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.Tags">
      <summary>Specifies the value for Tags string.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.TargetPlatforms">
      <summary>Specifies the value of the target platforms string.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.TcpPort">
      <summary>Specifies the value for TcpPort string.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.TemplateName">
      <summary>Specifies the value for TemplateName string.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.TenantApiUserName">
      <summary>Specifies the value for TenantApiUserName string.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.TextContentType">
      <summary>Specifies the value for TextContentType string.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.TopicCollection">
      <summary>Specifies the value for TopicCollection string.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.TopicCount">
      <summary>Specifies the value for the TopicCount string.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.TopicDescription">
      <summary>Specifies the value for TopicDescription string.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.TrackingId">
      <summary>Specifies the value for TrackingId string.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.TrueFilter">
      <summary>Specifies the value for TrueFilter string.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.UpdatedAt">
      <summary>Specifies the value for UpdatedAt string.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.UpdatePnsHandlePayload">
      <summary>Specifies the value for UpdatePnsHandlePayload string.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.UsageCredit">
      <summary>Specifies the value for the UsageCredit string.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.UserMetadata">
      <summary>Specifies the value for the UserMetadata string.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.UserValidationResult">
      <summary>Specifies the value for UserValidationResult string.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.VolatileTopicCollection">
      <summary>Specifies the value for VolatileTopicCollection string.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.VolatileTopicDescription">
      <summary>Specifies the value for VolatileTopicDescription string.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.WANHDeviceChallenge">
      <summary>Specifies the value for the WANHDeviceChallenge string.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.WANHExpirationTime">
      <summary>Specifies the value for the WANHExpirationTime string.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.WANHRegistrationSecret">
      <summary>Specifies the value for the WANHRegistrationSecret string.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.WindowsRegistrationDescription">
      <summary>Specifies the value for WindowsRegistrationDescription string.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.WindowsRegistrationsCount">
      <summary>Specifies the value for the WindowsRegistrationsCount string.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.WindowsTemplateRegistrationDescription">
      <summary>Specifies the value for WindowsTemplateRegistrationDescription string.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.WnsCredential">
      <summary>Specifies the value for WnsCredential string.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.WnsHeaders">
      <summary>Specifies the value for WnsHeaders string.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.WnsOutcomes"></member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.XProcessAtHttpHeader">
      <summary>Specifies the value for XProcessAtHttpHeader string.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.XProcessAtHttpHeaderAttributeValue">
      <summary>Specifies the value for XProcessAtHttpHeaderAttributeValue string.</summary>
    </member>
    <member name="T:Microsoft.ServiceBus.Messaging.MessageClientEntity">
      <summary>Represents a message client entity.</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageClientEntity.BeginClose(System.AsyncCallback,System.Object)">
      <summary>Begins an asynchronous operation to close the message client entity.</summary>
      <returns>An <see cref="T:System.IAsyncResult" /> that references the asynchronous operation to close the message client entity.</returns>
      <param name="callback">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</param>
      <param name="state">A user-defined object that contains state information about the asynchronous operation.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageClientEntity.EndClose(System.IAsyncResult)">
      <summary>Finishes an asynchronous operation to close the message client entity.</summary>
      <param name="result">An <see cref="T:System.IAsyncResult" /> that references the asynchronous operation to close the message client entity.</param>
    </member>
    <member name="T:Microsoft.ServiceBus.Messaging.MessageCountDetails">
      <summary>This class contains properties that enable you to retrieve details of messages from sub-queues of primary messaging entities (queues, topics, subscriptions).</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageCountDetails.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.Messaging.MessageCountDetails" /> class.</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageCountDetails.#ctor(System.Int64,System.Int64,System.Int64,System.Int64,System.Int64)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.Messaging.MessageCountDetails" /> class with the number of active messages, dead letters, scheduled messages, messages transferred to other queues, subscriptions, or topics, and the number of messages transferred to the dead letter queue.</summary>
      <param name="activeMessageCount">The number of active messages.</param>
      <param name="deadletterMessageCount">The number of dead letters.</param>
      <param name="scheduledMessageCount">The number of scheduled messages.</param>
      <param name="transferMessageCount">The number of messages transferred to other queues, subscriptions, or topics.</param>
      <param name="transferDlqMessageCount">The number of messages transferred to the dead letter queue.</param>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.MessageCountDetails.ActiveMessageCount">
      <summary>Gets or sets the number of active messages in the queue, topic, or subscription.</summary>
      <returns>Returns <see cref="T:System.Int64" /> that specifies the number of active messages.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.MessageCountDetails.DeadLetterMessageCount">
      <summary>Gets or sets the number of messages that are dead letters.</summary>
      <returns>Returns <see cref="T:System.Int64" />that specifies the number of messages that are dead letters.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.MessageCountDetails.ScheduledMessageCount">
      <summary>Gets or sets the number scheduled messages.</summary>
      <returns>Returns <see cref="T:System.Int64" />the number of scheduled messages.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.MessageCountDetails.TransferDeadLetterMessageCount">
      <summary>Gets or sets the number messages transferred into dead letters.</summary>
      <returns>Returns <see cref="T:System.Int64" />that specifies the number messages transferred into dead letters.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.MessageCountDetails.TransferMessageCount">
      <summary>Gets or sets the number of messages transferred to another queue, topic, or subscription.</summary>
      <returns>Returns <see cref="T:System.Int64" />that specifies the number of messages transferred to another queue, topic, or subscription</returns>
    </member>
    <member name="T:Microsoft.ServiceBus.Messaging.MessageLockLostException">
      <summary>The exception that is thrown to signal message lock lost errors.</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageLockLostException.#ctor(System.String)">
      <summary>Initializes a new instance of the MessageLockLostException class with a specified error message.</summary>
      <param name="message">The error message that explains the reason for the exception.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageLockLostException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the MessageLockLostException class with a specified error message and a reference to the inner exception that is the cause of this exception.</summary>
      <param name="message">The error message that explains the reason for the exception.</param>
      <param name="innerException">The exception that is the cause of the current exception.</param>
    </member>
    <member name="T:Microsoft.ServiceBus.Messaging.MessageNotFoundException">
      <summary>The exception that is thrown to signal message not found errors.</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageNotFoundException.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.Messaging.MessageNotFoundException" /> class with a specified error message.</summary>
      <param name="message">The error message that explains the reason for the exception.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageNotFoundException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.Messaging.MessageNotFoundException" /> class with a specified error message and a reference to the inner exception that is the cause of this exception.</summary>
      <param name="message">The error message that explains the reason for the exception.</param>
      <param name="innerException">The exception that is the cause of the current exception.</param>
    </member>
    <member name="T:Microsoft.ServiceBus.Messaging.MessageReceiver">
      <summary>Receives messages from the message container and acknowledges them.</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageReceiver.Abandon(System.Guid)">
      <summary>Discards the message and relinquishes the message lock ownership.</summary>
      <param name="lockToken">The lock token bound to the locked message instance to abandon.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageReceiver.Abandon(System.Guid,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Discards the message and relinquishes the message lock ownership.</summary>
      <param name="lockToken">The lock token.</param>
      <param name="propertiesToModify">The properties to modify.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageReceiver.AbandonAsync(System.Guid)">
      <summary>Asynchronously discards the message and relinquishes the message lock ownership.</summary>
      <returns>The asynchronous operation.</returns>
      <param name="lockToken">The lock token bound to the locked message instance to abandon.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageReceiver.AbandonAsync(System.Guid,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Asynchronously discards the message and relinquishes the message lock ownership.</summary>
      <returns>The asynchronous operation.</returns>
      <param name="lockToken">The lock token.</param>
      <param name="propertiesToModify">The properties to modify.</param>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.MessageReceiver.BatchFlushInterval">
      <summary>Gets the batch flush interval.</summary>
      <returns>The batch flush interval. The default value is 20 ms.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.MessageReceiver.BatchingEnabled">
      <summary>Gets a value indicating whether the batching is enabled.</summary>
      <returns>true if batching is enabled; otherwise, false.</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageReceiver.BeginAbandon(System.Guid,System.AsyncCallback,System.Object)">
      <summary>Begins an asynchronous operation to abandon the message and relinquish its lock.</summary>
      <returns>An <see cref="T:System.IAsyncResult" /> that references the asynchronous operation to abandon the message and relinquish its lock.</returns>
      <param name="lockToken">The lock token of the <see cref="T:Microsoft.ServiceBus.Messaging.BrokeredMessage" />. This is only available when a message is received in peek-lock mode. The lock token is used internally to complete or abandon a message.</param>
      <param name="callback">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</param>
      <param name="state">A user-defined object that contains state information about the asynchronous operation. </param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageReceiver.BeginAbandon(System.Guid,System.Collections.Generic.IDictionary{System.String,System.Object},System.AsyncCallback,System.Object)">
      <summary>Begins an asynchronous operation to abandon the message and relinquish its lock.</summary>
      <returns>An <see cref="T:System.IAsyncResult" /> that references the asynchronous operation to abandon the message and relinquish its lock.</returns>
      <param name="lockToken">The lock token.</param>
      <param name="propertiesToModify">The properties to modify.</param>
      <param name="callback">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</param>
      <param name="state">A user-defined object that contains state information about the asynchronous operation.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageReceiver.BeginComplete(System.Guid,System.AsyncCallback,System.Object)">
      <summary>Begins an asynchronous operation to complete receipt of a message.</summary>
      <returns>An <see cref="T:System.IAsyncResult" /> object that references the asynchronous <see cref="M:Microsoft.ServiceBus.Messaging.MessageReceiver.Complete(System.Guid)" />.</returns>
      <param name="lockToken">The lock token of the <see cref="T:Microsoft.ServiceBus.Messaging.BrokeredMessage" />. This is only available when a message is received in peek-lock mode. The lock token is used internally to complete or abandon a message.</param>
      <param name="callback">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</param>
      <param name="state">A user-defined object that contains state information about the asynchronous operation. </param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageReceiver.BeginCompleteBatch(System.Collections.Generic.IEnumerable{System.Guid},System.AsyncCallback,System.Object)">
      <summary>Begins an asynchronous operation to complete a message batching.</summary>
      <returns>A <see cref="T:System.IAsyncResult" /> that references the operation.</returns>
      <param name="lockTokens">The lock tokens.</param>
      <param name="callback">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</param>
      <param name="state">A user-defined object that contains state information about the asynchronous operation.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageReceiver.BeginDeadLetter(System.Guid,System.AsyncCallback,System.Object)">
      <summary>Begins an asynchronous operation to move a message to the dead letter queue.</summary>
      <returns>An <see cref="T:System.IAsyncResult" /> that references the asynchronous operation to move a message to the dead letter queue.</returns>
      <param name="lockToken">The lock token bound to the locked message instance.</param>
      <param name="callback">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</param>
      <param name="state">A user-defined object that contains state information about the asynchronous operation. </param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageReceiver.BeginDeadLetter(System.Guid,System.Collections.Generic.IDictionary{System.String,System.Object},System.AsyncCallback,System.Object)">
      <summary>Begins an asynchronous operation to move a message to the dead letter queue.</summary>
      <returns>An <see cref="T:System.IAsyncResult" /> that references the asynchronous operation to move a message to the dead letter queue.</returns>
      <param name="lockToken">The lock token.</param>
      <param name="propertiesToModify">The properties to modify.</param>
      <param name="callback">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</param>
      <param name="state">A user-defined object that contains state information about the asynchronous operation.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageReceiver.BeginDeadLetter(System.Guid,System.String,System.String,System.AsyncCallback,System.Object)">
      <summary>Begins an asynchronous operation to move a message to the dead letter queue.</summary>
      <returns>An <see cref="T:System.IAsyncResult" /> that references the asynchronous operation to move a message to the dead letter queue.</returns>
      <param name="lockToken">The lock token bound to the locked message instance.</param>
      <param name="deadLetterReason">The reason for deadlettering the message.</param>
      <param name="deadLetterErrorDescription">The error description for deadlettering the message.</param>
      <param name="callback">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</param>
      <param name="state">A user-defined object that contains state information about the asynchronous operation. </param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageReceiver.BeginDefer(System.Guid,System.AsyncCallback,System.Object)">
      <summary>Begins an asynchronous operation to suspend receipt of a message.</summary>
      <returns>An <see cref="T:System.IAsyncResult" /> object that references the asynchronous operation to suspend receipt of a message.</returns>
      <param name="lockToken">The lock token of the <see cref="T:Microsoft.ServiceBus.Messaging.BrokeredMessage" />. This is only available when a message is received in peek-lock mode. The lock token is used internally to complete or abandon a message.</param>
      <param name="callback">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</param>
      <param name="state">A user-defined object that contains state information about the asynchronous operation. </param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageReceiver.BeginDefer(System.Guid,System.Collections.Generic.IDictionary{System.String,System.Object},System.AsyncCallback,System.Object)">
      <summary>Begins an asynchronous operation to suspend receipt of a message.</summary>
      <returns>An <see cref="T:System.IAsyncResult" /> object that references the asynchronous operation to suspend receipt of a message.</returns>
      <param name="lockToken">The lock token.</param>
      <param name="propertiesToModify">The properties to modify.</param>
      <param name="callback">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</param>
      <param name="state">A user-defined object that contains state information about the asynchronous operation.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageReceiver.BeginPeek(System.AsyncCallback,System.Object)">
      <summary>Begins an operation to peek a message.</summary>
      <returns>The result of the operation to peek a message.</returns>
      <param name="callback">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</param>
      <param name="state">A user-defined object that contains state information about the asynchronous operation.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageReceiver.BeginPeek(System.Int64,System.AsyncCallback,System.Object)">
      <summary>Begins an operation to peek a message.</summary>
      <returns>The result of the operation to peek a message.</returns>
      <param name="fromSequenceNumber">The sequence number from where to peek a message.</param>
      <param name="callback">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</param>
      <param name="state">A user-defined object that contains state information about the asynchronous operation.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageReceiver.BeginPeekBatch(System.Int32,System.AsyncCallback,System.Object)">
      <summary>Begins an operation to peek a batch of message.</summary>
      <returns>The result of the operation to peek a message.</returns>
      <param name="messageCount">The number of message.</param>
      <param name="callback">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</param>
      <param name="state">A user-defined object that contains state information about the asynchronous operation.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageReceiver.BeginPeekBatch(System.Int64,System.Int32,System.AsyncCallback,System.Object)">
      <summary>Begins an operation to peek a batch of message.</summary>
      <returns>The result of the operation to peek a message.</returns>
      <param name="fromSequenceNumber">The sequence number from where to peek a batch of message.</param>
      <param name="messageCount">The number of message.</param>
      <param name="callback">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</param>
      <param name="state">A user-defined object that contains state information about the asynchronous operation.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageReceiver.BeginReceive(System.AsyncCallback,System.Object)">
      <summary>Begins an asynchronous operation to receive a message.</summary>
      <returns>An <see cref="T:System.IAsyncResult" /> that references the asynchronous operation to receive a message.</returns>
      <param name="callback">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</param>
      <param name="state">A user-defined object that contains state information about the asynchronous operation. </param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageReceiver.BeginReceive(System.Int64,System.AsyncCallback,System.Object)">
      <summary>Begins an asynchronous operation to receive a message.</summary>
      <returns>An <see cref="T:System.IAsyncResult" /> that references the asynchronous operation to receive a message.</returns>
      <param name="sequenceNumber">The unique number assigned to a message by the Service Bus.</param>
      <param name="callback">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</param>
      <param name="state">A user-defined object that contains state information about the asynchronous operation. </param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageReceiver.BeginReceive(System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Begins an asynchronous operation to receive a message.</summary>
      <returns>An <see cref="T:System.IAsyncResult" /> that references the asynchronous operation to receive a message.</returns>
      <param name="serverWaitTime">The server wait time before the operation times out.</param>
      <param name="callback">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</param>
      <param name="state">A user-defined object that contains state information about the asynchronous operation. </param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageReceiver.BeginReceiveBatch(System.Collections.Generic.IEnumerable{System.Int64},System.AsyncCallback,System.Object)">
      <summary>Begins an asynchronous operation to receive a batch of message.</summary>
      <returns>An <see cref="T:System.IAsyncResult" /> that references the asynchronous operation to receive a batch of message.</returns>
      <param name="sequenceNumbers">The sequence numbers.</param>
      <param name="callback">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</param>
      <param name="state">A user-defined object that contains state information about the asynchronous operation.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageReceiver.BeginReceiveBatch(System.Int32,System.AsyncCallback,System.Object)">
      <summary>Begins an asynchronous operation to receive a batch of message.</summary>
      <returns>An <see cref="T:System.IAsyncResult" /> that references the asynchronous operation to receive a batch of message.</returns>
      <param name="messageCount">The number of message.</param>
      <param name="callback">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</param>
      <param name="state">A user-defined object that contains state information about the asynchronous operation.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageReceiver.BeginReceiveBatch(System.Int32,System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Begins an asynchronous operation to receive a batch of message.</summary>
      <returns>An <see cref="T:System.IAsyncResult" /> that references the asynchronous operation to receive a batch of message.</returns>
      <param name="messageCount">The number of message.</param>
      <param name="serverWaitTime">The server wait time.</param>
      <param name="callback">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</param>
      <param name="state">A user-defined object that contains state information about the asynchronous operation.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageReceiver.Complete(System.Guid)">
      <summary>Completes the receive operation on a message.</summary>
      <param name="lockToken">The lock token of the <see cref="T:Microsoft.ServiceBus.Messaging.BrokeredMessage" />. This is only available when a message is received in peek-lock mode. The lock token is used internally to complete or abandon a message.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageReceiver.CompleteAsync(System.Guid)">
      <summary>Asynchronously completes the receive operation on a message.</summary>
      <returns>The asynchronous operation.</returns>
      <param name="lockToken">The lock token.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageReceiver.CompleteBatch(System.Collections.Generic.IEnumerable{System.Guid})">
      <summary>Completes the receive operation on a batch of message.</summary>
      <param name="lockTokens">The lock tokens.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageReceiver.CompleteBatchAsync(System.Collections.Generic.IEnumerable{System.Guid})">
      <summary>Asynchronously completes the receive operation on a batch of message.</summary>
      <returns>The asynchronous operation.</returns>
      <param name="lockTokens">The lock tokens.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageReceiver.DeadLetter(System.Guid)">
      <summary>Moves the undelivered message to the dead letter queue.</summary>
      <param name="lockToken">The lock token bound to the locked message instance.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageReceiver.DeadLetter(System.Guid,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Moves the undelivered message to the dead letter queue.</summary>
      <param name="lockToken">The lock token bound to the locked message instance.</param>
      <param name="propertiesToModify">The properties to modify.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageReceiver.DeadLetter(System.Guid,System.String,System.String)">
      <summary>Moves the undelivered message to the dead letter queue.</summary>
      <param name="lockToken">The lock token bound to the locked message instance.</param>
      <param name="deadLetterReason">The reason for deadlettering the message.</param>
      <param name="deadLetterErrorDescription">The error description for deadlettering the message.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageReceiver.DeadLetterAsync(System.Guid)">
      <summary>Asynchronously moves the undelivered message to the dead letter queue.</summary>
      <returns>The asynchronous operation.</returns>
      <param name="lockToken">The lock token bound to the locked message instance.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageReceiver.DeadLetterAsync(System.Guid,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Asynchronously moves the undelivered message to the dead letter queue.</summary>
      <returns>The asynchronous operation.</returns>
      <param name="lockToken">The lock token bound to the locked message instance.</param>
      <param name="propertiesToModify">The properties to modify.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageReceiver.DeadLetterAsync(System.Guid,System.String,System.String)">
      <summary>Asynchronously moves the undelivered message to the dead letter queue.</summary>
      <returns>The asynchronous operation.</returns>
      <param name="lockToken">The lock token bound to the locked message instance.</param>
      <param name="deadLetterReason">The reason for deadlettering the message.</param>
      <param name="deadLetterErrorDescription">The error description for deadlettering the message.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageReceiver.Defer(System.Guid)">
      <summary>Indicates that the receiver wants to defer the processing for the message.</summary>
      <param name="lockToken">The lock token of the <see cref="T:Microsoft.ServiceBus.Messaging.BrokeredMessage" />. This is only available when a message is received in peek-lock mode. The lock token is used internally to complete or abandon a message.</param>
      <exception cref="P:Microsoft.ServiceBus.Common.Fx.Exception">Receive context is null.</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageReceiver.Defer(System.Guid,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Indicates that the receiver wants to defer the processing for the message.</summary>
      <param name="lockToken">The lock token.</param>
      <param name="propertiesToModify">The properties to modify.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageReceiver.DeferAsync(System.Guid)">
      <summary>Asynchronously defer the processing of the message.</summary>
      <returns>The asynchronous operation.</returns>
      <param name="lockToken">The lock token.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageReceiver.DeferAsync(System.Guid,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Asynchronously defer the processing of the message.</summary>
      <returns>The asynchronous operation.</returns>
      <param name="lockToken">The lock token.</param>
      <param name="propertiesToModify">The properties to modify.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageReceiver.EndAbandon(System.IAsyncResult)">
      <summary>Ends the asynchronous operation to abandon the message and relinquish its lock.</summary>
      <param name="result">An <see cref="T:System.IAsyncResult" /> that references the asynchronous operation to abandon the message and relinquish its lock.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageReceiver.EndComplete(System.IAsyncResult)">
      <summary>Ends the asynchronous operation to complete receipt of a message.</summary>
      <param name="result">An <see cref="T:System.IAsyncResult" /> that references the asynchronous operation to complete receipt of a message.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageReceiver.EndCompleteBatch(System.IAsyncResult)">
      <summary>Ends the asynchronous operation to complete receipt of a batch message.</summary>
      <param name="result">The result of the operation.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageReceiver.EndDeadLetter(System.IAsyncResult)">
      <summary>Ends an asynchronous operation to move the message to the dead letter queue.</summary>
      <param name="result">An <see cref="T:System.IAsyncResult" /> object that references the asynchronous operation to move the message to the dead letter queue.</param>
      <exception cref="T:System.TimeoutException">The operation times out.</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageReceiver.EndDefer(System.IAsyncResult)">
      <summary>Ends an asynchronous operation to defer receipt of a message.</summary>
      <param name="result">An <see cref="T:System.IAsyncResult" /> object that references the asynchronous operation to defer receipt of a message.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageReceiver.EndPeek(System.IAsyncResult)">
      <summary>Ends an asynchronous operation to peek a message.</summary>
      <returns>The <see cref="T:Microsoft.ServiceBus.Messaging.BrokeredMessage" /> that represents the message peeked.</returns>
      <param name="result">An <see cref="T:System.IAsyncResult" /> object that references the asynchronous operation to peek a message.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageReceiver.EndPeekBatch(System.IAsyncResult)">
      <summary>Ends an asynchronous operation to peek a batch of message.</summary>
      <returns>The batch of message.</returns>
      <param name="result">An <see cref="T:System.IAsyncResult" /> object that references the asynchronous operation to peek a message.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageReceiver.EndReceive(System.IAsyncResult)">
      <summary>Ends an asynchronous operation to receive a message.</summary>
      <returns>The <see cref="T:Microsoft.ServiceBus.Messaging.BrokeredMessage" /> that represents the received message.</returns>
      <param name="result">An <see cref="T:System.IAsyncResult" /> object that references the asynchronous operation to receive a message.</param>
      <exception cref="T:System.TimeoutException">The operation times out.</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageReceiver.EndReceiveBatch(System.IAsyncResult)">
      <summary>Ends an asynchronous operation to receive a batch of message.</summary>
      <returns>An <see cref="T:System.Collections.Generic.IEnumerable`1" /> object that represents the batch of message.</returns>
      <param name="result">The result of the operation.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageReceiver.GetLockToken(Microsoft.ServiceBus.Messaging.BrokeredMessage)">
      <summary>Gets the lock token bound to the message.</summary>
      <returns>The lock token of the message.</returns>
      <param name="message">The <see cref="T:Microsoft.ServiceBus.Messaging.BrokeredMessage" /> from which to get the lock token.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageReceiver.GetLockTokens(System.Collections.Generic.IEnumerable{Microsoft.ServiceBus.Messaging.BrokeredMessage})">
      <summary>Gets the collection of lock tokens from the specified collection of messages.</summary>
      <returns>The collection of lock tokens from the specified messages.</returns>
      <param name="messages">The collection of messages from which to get the lock tokens.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageReceiver.GetProperty``1">
      <typeparam name="T"></typeparam>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.MessageReceiver.LastPeekedSequenceNumber">
      <summary>Gets or sets the sequence number of the message last peeked.</summary>
      <returns>The sequence number of the message last peeked.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.MessageReceiver.Mode">
      <summary>Gets the message receive mode.</summary>
      <returns>The message receive mode.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.MessageReceiver.OffsetInclusive"></member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageReceiver.OnAbandon(Microsoft.ServiceBus.Tracing.TrackingContext,System.Collections.Generic.IEnumerable{System.Guid},System.Collections.Generic.IDictionary{System.String,System.Object},System.TimeSpan)">
      <summary>Executes upon calling the Abandon operation.</summary>
      <param name="trackingContext">The context information associated by a transaction tracking this operation.</param>
      <param name="lockTokens">The collection of lock tokens bound to the locked message instances.</param>
      <param name="propertiesToModify">The properties to modify.</param>
      <param name="timeout">The time span the operation waits before it times out.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageReceiver.OnBeginAbandon(Microsoft.ServiceBus.Tracing.TrackingContext,System.Collections.Generic.IEnumerable{System.Guid},System.Collections.Generic.IDictionary{System.String,System.Object},System.Boolean,System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Executes upon calling the OnAbandon or BeginAbandon operation.</summary>
      <returns>An <see cref="T:System.IAsyncResult" /> that references the asynchronous operation to abandon the messages and relinquish its lock.</returns>
      <param name="trackingContext">The context information associated by a transaction tracking this operation.</param>
      <param name="lockTokens">The collection of lock tokens bound to the locked message instances.</param>
      <param name="propertiesToModify">The properties to modify.</param>
      <param name="fromSync">The start of the synchronization.</param>
      <param name="timeout">The time span the operation waits before it times out.</param>
      <param name="callback">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</param>
      <param name="state">A user-defined object that contains state information about the asynchronous operation.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageReceiver.OnBeginComplete(Microsoft.ServiceBus.Tracing.TrackingContext,System.Collections.Generic.IEnumerable{System.ArraySegment{System.Byte}},System.Boolean,System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Executes upon calling the OnComplete or BeginComplete operation.</summary>
      <returns>An <see cref="T:System.IAsyncResult" /> that references the asynchronous operation to complete receiving of messages.</returns>
      <param name="trackingContext">The context information associated by a transaction tracking this operation.</param>
      <param name="deliveryTags">A collection of delivery tags.</param>
      <param name="fromSync">The start of the synchronization.</param>
      <param name="timeout">The time span the operation waits before it times out.</param>
      <param name="callback">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</param>
      <param name="state">A user-defined object that contains state information about the asynchronous operation.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageReceiver.OnBeginComplete(Microsoft.ServiceBus.Tracing.TrackingContext,System.Collections.Generic.IEnumerable{System.Guid},System.Boolean,System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Executes upon calling the OnComplete or BeginComplete operation.</summary>
      <returns>An <see cref="T:System.IAsyncResult" /> that references the asynchronous operation to complete receiving of messages.</returns>
      <param name="trackingContext">The context information associated by a transaction tracking this operation.</param>
      <param name="lockTokens">The collection of lock tokens bound to the locked message instances.</param>
      <param name="fromSync">The start of the synchronization.</param>
      <param name="timeout">The time span the operation waits before it times out.</param>
      <param name="callback">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</param>
      <param name="state">A user-defined object that contains state information about the asynchronous operation.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageReceiver.OnBeginDeadLetter(Microsoft.ServiceBus.Tracing.TrackingContext,System.Collections.Generic.IEnumerable{System.Guid},System.Collections.Generic.IDictionary{System.String,System.Object},System.String,System.String,System.Boolean,System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Executes upon calling the OnDeadLetter or BeginDeadLetter operation.</summary>
      <returns>An <see cref="T:System.IAsyncResult" /> that references the asynchronous operation to move undelivered of messages to the deadletter queue.</returns>
      <param name="trackingContext">The context information associated by a transaction tracking this operation.</param>
      <param name="lockTokens">The collection of lock tokens bound to the locked message instances.</param>
      <param name="propertiesToModify">The properties to modify.</param>
      <param name="deadLetterReason">The reason for deadlettering the messages.</param>
      <param name="deadLetterErrorDescription">The error description for deadlettering the messages.</param>
      <param name="fromSync">The start of the synchronization.</param>
      <param name="timeout">The time span the operation waits before it times out.</param>
      <param name="callback">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</param>
      <param name="state">A user-defined object that contains state information about the asynchronous operation.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageReceiver.OnBeginDefer(Microsoft.ServiceBus.Tracing.TrackingContext,System.Collections.Generic.IEnumerable{System.Guid},System.Collections.Generic.IDictionary{System.String,System.Object},System.Boolean,System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Executes upon calling the OnDefer or BeginDefer operation.</summary>
      <returns>An <see cref="T:System.IAsyncResult" /> that references the asynchronous operation to suspend processing of messages.</returns>
      <param name="trackingContext">The context information associated by a transaction tracking this operation.</param>
      <param name="lockTokens">The collection of lock tokens bound to the locked message instances.</param>
      <param name="propertiesToModify">The properties to modify.</param>
      <param name="fromSync">The start of synchronization.</param>
      <param name="timeout">The time span the operation waits before it times out.</param>
      <param name="callback">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</param>
      <param name="state">A user-defined object that contains state information about the asynchronous operation.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageReceiver.OnBeginPeek(Microsoft.ServiceBus.Tracing.TrackingContext,System.Int64,System.Int32,System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Executes upon calling the BeginPeek operation.</summary>
      <returns>The result of the operation.</returns>
      <param name="trackingContext">The context information associated by a transaction tracking this operation.</param>
      <param name="fromSequenceNumber">The sequence number from where to begin the operation.</param>
      <param name="messageCount">The number of message.</param>
      <param name="timeout">The time span the operation waits before it times out.</param>
      <param name="callback">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</param>
      <param name="state">A user-defined object that contains state information about the asynchronous operation.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageReceiver.OnBeginRenewMessageLocks(Microsoft.ServiceBus.Tracing.TrackingContext,System.Collections.Generic.IEnumerable{System.Guid},System.Boolean,System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Executes upon calling the OnBegin operation for lock messages.</summary>
      <returns>An <see cref="T:System.IAsyncResult" /> that references the asynchronous operation to renew processing of lock messages.</returns>
      <param name="trackingContext">The context information associated by a transaction tracking this operation.</param>
      <param name="lockTokens">The collection of lock tokens bound to the locked message instances.</param>
      <param name="fromSync">The start of the synchronization.</param>
      <param name="timeout">The time span the operation waits before it times out.</param>
      <param name="callback">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</param>
      <param name="state">A user-defined object that contains state information about the asynchronous operation.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageReceiver.OnBeginTryReceive(Microsoft.ServiceBus.Tracing.TrackingContext,System.Collections.Generic.IEnumerable{System.Int64},System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Executes upon calling the OnTryReceive or BeginTryReceive operation.</summary>
      <returns>An <see cref="T:System.IAsyncResult" /> that references the asynchronous operation to try to receive messages.</returns>
      <param name="trackingContext">The context information associated by a transaction tracking this operation.</param>
      <param name="sequenceNumbers">The collection of unique numbers assigned to messages, by the Service Bus.</param>
      <param name="timeout">The time span the operation waits before it times out.</param>
      <param name="callback">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</param>
      <param name="state">A user-defined object that contains state information about the asynchronous operation.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageReceiver.OnBeginTryReceive(Microsoft.ServiceBus.Tracing.TrackingContext,System.Int32,System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Executes upon calling the OnTryReceive or BeginTryReceive operation.</summary>
      <returns>An <see cref="T:System.IAsyncResult" /> that references the asynchronous operation to try to receive messages.</returns>
      <param name="trackingContext">The context information associated by a transaction tracking this operation.</param>
      <param name="messageCount">The number of messages to try receiving.</param>
      <param name="serverWaitTime">The time span the operation waits before it times out.</param>
      <param name="callback">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</param>
      <param name="state">A user-defined object that contains state information about the asynchronous operation. </param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageReceiver.OnBeginTryReceive2(Microsoft.ServiceBus.Tracing.TrackingContext,System.Int32,System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Executes upon calling the OnTryReceive or BeginTryReceive operation.</summary>
      <returns>An <see cref="T:System.IAsyncResult" /> that references the asynchronous operation to try to receive messages.</returns>
      <param name="trackingContext">The context information associated by a transaction tracking this operation.</param>
      <param name="messageCount">The number of messages to try receiving.</param>
      <param name="serverWaitTime">The time span the operation waits before it times out.</param>
      <param name="callback">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</param>
      <param name="state">A user-defined object that contains state information about the asynchronous operation.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageReceiver.OnBeginTryReceiveEventData(Microsoft.ServiceBus.Tracing.TrackingContext,System.Int32,System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Executes upon calling the OnTryReceive or BeginTryReceive operation for the event data.</summary>
      <returns>An <see cref="T:System.IAsyncResult" /> that references the asynchronous operation to try to receive event data.</returns>
      <param name="trackingContext">The context information associated by a transaction tracking this operation.</param>
      <param name="messageCount">The number of messages to try receiving.</param>
      <param name="serverWaitTime">The time span the operation waits before it times out.</param>
      <param name="callback">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</param>
      <param name="state">A user-defined object that contains state information about the asynchronous operation.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageReceiver.OnComplete(Microsoft.ServiceBus.Tracing.TrackingContext,System.Collections.Generic.IEnumerable{System.Guid},System.TimeSpan)">
      <summary>Executes upon calling the Complete operation.</summary>
      <param name="trackingContext">The context information associated by a transaction tracking this operation.</param>
      <param name="lockTokens">The collection of lock tokens bound to the locked message instances.</param>
      <param name="timeout">The time span the operation waits before it times out.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageReceiver.OnDeadLetter(Microsoft.ServiceBus.Tracing.TrackingContext,System.Collections.Generic.IEnumerable{System.Guid},System.Collections.Generic.IDictionary{System.String,System.Object},System.String,System.String,System.TimeSpan)">
      <summary>Executes upon calling the DeadLetter operation.</summary>
      <param name="trackingContext">The context information associated by a transaction tracking this operation.</param>
      <param name="lockTokens">The collection of lock tokens bound to the locked message instances.</param>
      <param name="propertiesToModify">The properties to modify.</param>
      <param name="deadLetterReason">The reason for deadlettering the message.</param>
      <param name="deadLetterErrorDescription">The error description for deadlettering the message.</param>
      <param name="timeout">The time span the operation waits before it times out.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageReceiver.OnDefer(Microsoft.ServiceBus.Tracing.TrackingContext,System.Collections.Generic.IEnumerable{System.Guid},System.Collections.Generic.IDictionary{System.String,System.Object},System.TimeSpan)">
      <summary>Executes upon calling the Defer operation.</summary>
      <param name="trackingContext">The context information associated by a transaction tracking this operation.</param>
      <param name="lockTokens">The collection of lock tokens bound to the locked message instances.</param>
      <param name="propertiesToModify">The properties to modify.</param>
      <param name="timeout">The time span the operation waits before it times out.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageReceiver.OnEndAbandon(System.IAsyncResult)">
      <summary>Executes the end abandon action.</summary>
      <param name="result">The result.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageReceiver.OnEndComplete(System.IAsyncResult)">
      <summary>Executes the end complete action.</summary>
      <param name="result">The result.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageReceiver.OnEndDeadLetter(System.IAsyncResult)">
      <summary>Executes the end move to dead letter queue action.</summary>
      <param name="result">An <see cref="T:System.IAsyncResult" /> object that references the asynchronously completed operation.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageReceiver.OnEndDefer(System.IAsyncResult)">
      <summary>Executes the end defer action.</summary>
      <param name="result">The result.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageReceiver.OnEndPeek(System.IAsyncResult)">
      <summary>Executes the EndPeek operation.</summary>
      <returns>A list of messages.</returns>
      <param name="result">The result of the operation.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageReceiver.OnEndRenewMessageLocks(System.IAsyncResult)">
      <summary>Executes the EndRenew action for message locks.</summary>
      <returns>A <see cref="T:System.Collections.Generic.IEnumerable`1" /> of lock messages.</returns>
      <param name="result">The result of the operation.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageReceiver.OnEndTryReceive(System.IAsyncResult,System.Collections.Generic.IEnumerable{Microsoft.ServiceBus.Messaging.BrokeredMessage}@)">
      <summary>Executes the end try receive action.</summary>
      <returns>true if it succeeds; false if it fails.</returns>
      <param name="result">The result.</param>
      <param name="messages">The received message collection.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageReceiver.OnEndTryReceive2(System.IAsyncResult,System.Collections.Generic.IEnumerable{Microsoft.ServiceBus.Messaging.BrokeredMessage}@)">
      <summary>Executes the end try receive action.</summary>
      <returns>true if it succeeds; false if it fails.</returns>
      <param name="result">The result.</param>
      <param name="messages">The received message collection.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageReceiver.OnEndTryReceiveEventData(System.IAsyncResult,System.Collections.Generic.IEnumerable{Microsoft.ServiceBus.Messaging.EventData}@)">
      <summary>Executes the EndTryReceive action for the event data.</summary>
      <returns>true if it succeeds; false if it fails.</returns>
      <param name="result">The result.</param>
      <param name="messages">The received message collection.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageReceiver.OnMessage(System.Action{Microsoft.ServiceBus.Messaging.BrokeredMessage},Microsoft.ServiceBus.Messaging.OnMessageOptions)">
      <summary>Processes a message in an event-driven message pump.</summary>
      <param name="callback">The method to invoke when the operation is complete.</param>
      <param name="options">Specifies the <see cref="T:Microsoft.ServiceBus.Messaging.OnMessageOptions" />options with which to instantiate the message pump.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageReceiver.OnMessageAsync(System.Func{Microsoft.ServiceBus.Messaging.BrokeredMessage,System.Threading.Tasks.Task},Microsoft.ServiceBus.Messaging.OnMessageOptions)">
      <summary>Asynchronously processes a message in an event-driven message pump.</summary>
      <param name="callback">The method to invoke when the operation is complete.</param>
      <param name="options">Specifies the <see cref="T:Microsoft.ServiceBus.Messaging.OnMessageOptions" />options with which to instantiate the message pump.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageReceiver.OnPeek(Microsoft.ServiceBus.Tracing.TrackingContext,System.Int64,System.Int32,System.TimeSpan)">
      <summary>Executes upon calling the Peek operation.</summary>
      <returns>The messages peeked.</returns>
      <param name="trackingContext">The tracking context.</param>
      <param name="fromSequenceNumber">The sequence number from where to peek.</param>
      <param name="messageCount">The number of message.</param>
      <param name="timeout">The time span the operation waits before it times out.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageReceiver.OnRenewMessageLocks(Microsoft.ServiceBus.Tracing.TrackingContext,System.Collections.Generic.IEnumerable{System.Guid},System.TimeSpan)">
      <summary>Executes the Renew action for lock messages.</summary>
      <returns>The renewed lock messages.</returns>
      <param name="trackingContext">The tracking context.</param>
      <param name="lockTokens">The lock tokens.</param>
      <param name="timeout">The time span the operation waits before it times out.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageReceiver.OnTryReceive(Microsoft.ServiceBus.Tracing.TrackingContext,System.Collections.Generic.IEnumerable{System.Int64},System.TimeSpan,System.Collections.Generic.IEnumerable{Microsoft.ServiceBus.Messaging.BrokeredMessage}@)">
      <summary>Executes upon calling the TryReceive operation.</summary>
      <returns>true indicating that this method operation succeeded; otherwise, false.</returns>
      <param name="trackingContext">The context information associated by a transaction tracking this operation.</param>
      <param name="sequenceNumbers">The collection of unique numbers assigned to messages, by the Service Bus.</param>
      <param name="timeout">The time span the operation waits before it times out.</param>
      <param name="messages">When this method returns, contains the collection of messages received.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageReceiver.OnTryReceive(Microsoft.ServiceBus.Tracing.TrackingContext,System.Int32,System.TimeSpan,System.Collections.Generic.IEnumerable{Microsoft.ServiceBus.Messaging.BrokeredMessage}@)">
      <summary>Executes upon calling the TryReceive operation.</summary>
      <returns>true indicating that this method operation succeeded; otherwise, false.</returns>
      <param name="trackingContext">The context information associated by a transaction tracking this operation.</param>
      <param name="messageCount">The number of messages to try receiving.</param>
      <param name="serverWaitTime">The time span the operation waits before it times out.</param>
      <param name="messages">When this method returns, contains the collection of messages received.</param>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.MessageReceiver.Path">
      <summary>Gets the path of the queue or topic, relative to the <see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactory" /> base address.</summary>
      <returns>A string representing the path of the queue or topic.</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageReceiver.Peek">
      <summary>Reads the next message without changing the state of the receiver or the message source.</summary>
      <returns>The <see cref="T:Microsoft.ServiceBus.Messaging.BrokeredMessage" /> that represents the next message to be read.</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageReceiver.Peek(System.Int64)">
      <summary>Reads the next message without changing the state of the receiver or the message source.</summary>
      <returns>The <see cref="T:Microsoft.ServiceBus.Messaging.BrokeredMessage" /> that represents the next message to be read.</returns>
      <param name="fromSequenceNumber">The sequence number from where to read the message.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageReceiver.PeekAsync">
      <summary>Asynchronously reads the next message without changing the state of the receiver or the message source.</summary>
      <returns>The asynchronous operation.</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageReceiver.PeekAsync(System.Int64)">
      <summary>Asynchronously reads the next message without changing the state of the receiver or the message source.</summary>
      <returns>The asynchronous operation.</returns>
      <param name="fromSequenceNumber">The sequence number from where to read the message.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageReceiver.PeekBatch(System.Int32)">
      <summary>Reads the next batch of message without changing the state of the receiver or the message source.</summary>
      <returns>The batch of message to be read.</returns>
      <param name="messageCount">The number of message.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageReceiver.PeekBatch(System.Int64,System.Int32)">
      <summary>Reads the next batch of message without changing the state of the receiver or the message source.</summary>
      <returns>The batch of message to be read.</returns>
      <param name="fromSequenceNumber">The sequence number from where to read a batch message.</param>
      <param name="messageCount">The number of message.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageReceiver.PeekBatchAsync(System.Int32)">
      <summary>Asynchronously reads the next batch of message without changing the state of the receiver or the message source.</summary>
      <returns>The asynchronous operation.</returns>
      <param name="messageCount">The number of message.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageReceiver.PeekBatchAsync(System.Int64,System.Int32)">
      <summary>Asynchronously reads the next batch of message without changing the state of the receiver or the message source.</summary>
      <returns>The asynchronous operation.</returns>
      <param name="fromSequenceNumber">The sequence number from where to read a batch message.</param>
      <param name="messageCount">The number of message.</param>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.MessageReceiver.PrefetchCount">
      <summary>Gets or sets the number of messages that the message receiver can simultaneously request.</summary>
      <returns>The number of messages that the message receiver can simultaneously request.</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageReceiver.Receive">
      <summary>Receives a <see cref="T:Microsoft.ServiceBus.Messaging.BrokeredMessage" /> from the current queue or topic.</summary>
      <returns>The <see cref="T:Microsoft.ServiceBus.Messaging.BrokeredMessage" />  that represents the received message.</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageReceiver.Receive(System.Int64)">
      <summary>Receives a message from the current queue or topic.</summary>
      <returns>The <see cref="T:Microsoft.ServiceBus.Messaging.BrokeredMessage" />  that represents the received message.</returns>
      <param name="sequenceNumber">The sequence number of the message to receive.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageReceiver.Receive(System.TimeSpan)">
      <summary>Receives a <see cref="T:Microsoft.ServiceBus.Messaging.BrokeredMessage" /> from the current queue or topic.</summary>
      <returns>The <see cref="T:Microsoft.ServiceBus.Messaging.BrokeredMessage" />  that represents the received message.</returns>
      <param name="serverWaitTime">The time span the server waits before the operation times out.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageReceiver.ReceiveAsync">
      <summary>Asynchronously receives a message from the current queue or topic.</summary>
      <returns>The asynchronous operation.</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageReceiver.ReceiveAsync(System.Int64)">
      <summary>Asynchronously receives a message from the current queue or topic.</summary>
      <returns>The asynchronous operation.</returns>
      <param name="sequenceNumber">The sequence number of the message to receive.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageReceiver.ReceiveAsync(System.TimeSpan)">
      <summary>Asynchronously receives a message from the current queue or topic.</summary>
      <returns>The asynchronous operation.</returns>
      <param name="serverWaitTime">The time span the server waits before the operation times out.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageReceiver.ReceiveBatch(System.Collections.Generic.IEnumerable{System.Int64})">
      <summary>Receives a batch of messages.</summary>
      <returns>A batch of messages.</returns>
      <param name="sequenceNumbers">The sequence numbers.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageReceiver.ReceiveBatch(System.Int32)">
      <summary>Receives a batch of messages.</summary>
      <returns>A batch of messages.</returns>
      <param name="messageCount">The maximum number of messages to return in the batch. As this is an approximation, fewer messages may be returned even if the number of messages is higher than <paramref name="messageCount" />.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageReceiver.ReceiveBatch(System.Int32,System.TimeSpan)">
      <summary>Receives a batch of messages.</summary>
      <returns>A batch of messages.</returns>
      <param name="messageCount">The maximum number of messages to receive.</param>
      <param name="serverWaitTime">The server wait time.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageReceiver.ReceiveBatchAsync(System.Collections.Generic.IEnumerable{System.Int64})">
      <summary>Asynchronously receives a batch of messages.</summary>
      <returns>The asynchronous operation.</returns>
      <param name="sequenceNumbers">The sequence numbers.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageReceiver.ReceiveBatchAsync(System.Int32)">
      <summary>Asynchronously receives a batch of messages.</summary>
      <returns>The asynchronous operation.</returns>
      <param name="messageCount">The maximum number of messages to return in the batch. As this is an approximation, fewer messages may be returned even if the number of messages is higher than <paramref name="messageCount" />.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageReceiver.ReceiveBatchAsync(System.Int32,System.TimeSpan)">
      <summary>Asynchronously receives a batch of messages.</summary>
      <returns>The asynchronous operation.</returns>
      <param name="messageCount">The maximum number of messages to receive.</param>
      <param name="serverWaitTime">The server wait time.</param>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.MessageReceiver.ReceiverStartTime">
      <summary>Gets or sets the start time of the receiver.</summary>
      <returns>The start time of the receiver.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.MessageReceiver.StartOffset">
      <summary>Gets or sets the starting point of the offset.</summary>
      <returns>The starting point of the offset.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.MessageReceiver.SupportsGetRuntimeEntityDescription"></member>
    <member name="T:Microsoft.ServiceBus.Messaging.MessageSender">
      <summary>The <see cref="T:Microsoft.ServiceBus.Messaging.MessageSender" /> class is used to send messages from the Service Bus. Although you can use the <see cref="T:Microsoft.ServiceBus.Messaging.QueueClient" /> class to send and receive messages without creating a <see cref="T:Microsoft.ServiceBus.Messaging.MessageSender" /> object, you can also use <see cref="T:Microsoft.ServiceBus.Messaging.MessageSender" /> and <see cref="T:Microsoft.ServiceBus.Messaging.MessageReceiver" /> to create a sender and receiver on an entity without knowing whether it is a topic or a queue.</summary>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.MessageSender.BatchFlushInterval">
      <summary>Gets the batch flush interval.</summary>
      <returns>A batch flush interval. The default value is 20 ms.</returns>
      <exception cref="T:System.OperationCanceledException">Thrown when the <see cref="T:Microsoft.ServiceBus.Messaging.MessageSender" /> is in closing, closed, or faulted state.</exception>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.MessageSender.BatchingEnabled">
      <summary>Gets a value indicating whether the batching is enabled.</summary>
      <returns>true if batching is enabled; otherwise, false.</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageSender.BeginSend(Microsoft.ServiceBus.Messaging.BrokeredMessage,System.AsyncCallback,System.Object)">
      <summary>Begins an asynchronous request to send a brokered message.</summary>
      <returns>An <see cref="T:System.IAsyncResult" /> that references the asynchronous create a queue operation.</returns>
      <param name="message">The brokered message to send.</param>
      <param name="callback">A <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</param>
      <param name="state">A user-defined object that contains information about the receive operation. This object is passed to the <see cref="M:Microsoft.ServiceBus.Messaging.MessageSender.EndSend(System.IAsyncResult)" /> delegate when the operation is complete.</param>
      <exception cref="T:System.TimeoutException">Thrown when operation times out. Timeout period is initialized through the <see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactorySettings" />. You may need to increase the value of the <see cref="P:Microsoft.ServiceBus.Messaging.MessagingFactorySettings.OperationTimeout" /> to avoid this exception if the timeout value is relatively low.</exception>
      <exception cref="T:System.ArgumentException">Thrown when the brokered message is null.</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageSender.BeginSendBatch(System.Collections.Generic.IEnumerable{Microsoft.ServiceBus.Messaging.BrokeredMessage},System.AsyncCallback,System.Object)">
      <summary>Begins an asynchronous request to send a brokered message by batch.</summary>
      <returns>The synchronous result of the operation.</returns>
      <param name="messages">The brokered message to send.</param>
      <param name="callback">A <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</param>
      <param name="state">A user-defined object that contains information about the receive operation. This object is passed to the <see cref="M:Microsoft.ServiceBus.Messaging.MessageSender.EndSend(System.IAsyncResult)" /> delegate when the operation is complete.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageSender.EndSend(System.IAsyncResult)">
      <summary>Ends an asynchronous request to send a message.</summary>
      <param name="result">A <see cref="T:System.IAsyncResult" /> that references the <see cref="M:Microsoft.ServiceBus.Messaging.MessageSender.Send(Microsoft.ServiceBus.Messaging.BrokeredMessage)" /> method.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageSender.EndSendBatch(System.IAsyncResult)">
      <summary>Ends an asynchronous request to send a message by batch.</summary>
      <param name="result">The result of the operation.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageSender.OnBeginCancelScheduledMessage(Microsoft.ServiceBus.Tracing.TrackingContext,System.Collections.Generic.IEnumerable{System.Int64},System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Raises an event that starts the cancellation of the scheduled message.</summary>
      <returns>The asynchronous result of the operation.</returns>
      <param name="trackingContext">The context of the tracking.</param>
      <param name="sequenceNumbers">The sequence numbers.</param>
      <param name="timeout">A client side timeout value for the operation. The operation should be aborted or cancelled if the duration exceeds this timeout.</param>
      <param name="callback">A user callback to be invoked when the operation completes.</param>
      <param name="state">The state to be passed to the callback when the operation completes.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageSender.OnBeginScheduleMessage(Microsoft.ServiceBus.Tracing.TrackingContext,System.Collections.Generic.IEnumerable{Microsoft.ServiceBus.Messaging.BrokeredMessage},System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Raises an event when scheduling a message.</summary>
      <returns>The asynchronous result of the operation.</returns>
      <param name="trackingContext">The context of the tracking.</param>
      <param name="messages">The message to schedule.</param>
      <param name="timeout">A client side timeout value for the operation. The operation should be aborted or cancelled if the duration exceeds this timeout.</param>
      <param name="callback">A user callback to be invoked when the operation completes.</param>
      <param name="state">The state to be passed to the callback when the operation completes.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageSender.OnBeginSend(Microsoft.ServiceBus.Tracing.TrackingContext,System.Collections.Generic.IEnumerable{Microsoft.ServiceBus.Messaging.BrokeredMessage},System.Boolean,System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Allows concrete implementations to define what should be done when sending messages. This method cannot be implemented in a concrete class by the user.</summary>
      <returns>A <see cref="T:System.IAsyncResult" /> for the operation.</returns>
      <param name="trackingContext">The context of the tracking.</param>
      <param name="messages">A list of <see cref="T:Microsoft.ServiceBus.Messaging.BrokeredMessage" /> objects to be sent.</param>
      <param name="fromSync">The start of synchronization.</param>
      <param name="timeout">A client side timeout value for the operation. The operation should be aborted or cancelled if the duration exceeds this timeout.</param>
      <param name="callback">A user callback to be invoked when the operation completes.</param>
      <param name="state">The state to be passed to the callback when the operation completes.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageSender.OnBeginSendEventData(Microsoft.ServiceBus.Tracing.TrackingContext,System.Collections.Generic.IEnumerable{Microsoft.ServiceBus.Messaging.EventData},System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Raises an event when sending event data.</summary>
      <returns>The asynchronous result of the operation.</returns>
      <param name="trackingContext">The context of the tracking.</param>
      <param name="eventDatas">The event data to send.</param>
      <param name="timeout">A client side timeout value for the operation. The operation should be aborted or cancelled if the duration exceeds this timeout.</param>
      <param name="callback">A user callback to be invoked when the operation completes.</param>
      <param name="state">The state to be passed to the callback when the operation completes.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageSender.OnEndCancelScheduledMessage(System.IAsyncResult)">
      <summary>Raises an event when ending the cancellation of the scheduled message.</summary>
      <param name="result">The result of the operation.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageSender.OnEndScheduleMessage(System.IAsyncResult)">
      <summary>Raises an event when ending the message schedule.</summary>
      <returns>The result of the operation.</returns>
      <param name="result">The result of the operation.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageSender.OnEndSend(System.IAsyncResult)">
      <summary>Executes the end send action. This method cannot be implemented in a concrete class by the user.</summary>
      <param name="result">The <see cref="T:System.IAsyncResult" /> object created from a call to <see cref="M:Microsoft.ServiceBus.Messaging.MessageSender.OnBeginSend(System.Collections.Generic.IEnumerable{Microsoft.ServiceBus.Messaging.BrokeredMessage},System.TimeSpan,System.AsyncCallback,System.Object)" /> method.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageSender.OnEndSendEventData(System.IAsyncResult)">
      <summary>Executes the end send event data action.</summary>
      <param name="result">The result of the operation.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageSender.OnSend(Microsoft.ServiceBus.Tracing.TrackingContext,System.Collections.Generic.IEnumerable{Microsoft.ServiceBus.Messaging.BrokeredMessage},System.TimeSpan)">
      <summary>Allows concrete implementations to override (if needed) what should be done when sending messages in a synchronous manner.</summary>
      <param name="trackingContext">The context of the tracking.</param>
      <param name="messages">A list of <see cref="T:Microsoft.ServiceBus.Messaging.BrokeredMessage" /> objects to be sent.</param>
      <param name="timeout">A client side timeout value for the operation. The operation should be aborted or cancelled if the duration exceeds this timeout.</param>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.MessageSender.Path">
      <summary>Gets the path of the queue or topic relative to the <see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactory" /> base address.</summary>
      <returns>The path of the queue or topic relative to the <see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactory" /> base address.</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageSender.Send(Microsoft.ServiceBus.Messaging.BrokeredMessage)">
      <summary>Sends the specified brokered message.</summary>
      <param name="message">The brokered message to send.</param>
      <exception cref="T:System.TimeoutException">Thrown when operation times out. Timeout period is initialized through the <see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactorySettings" />. You may need to increase the value of <see cref="P:Microsoft.ServiceBus.Messaging.MessagingFactorySettings.OperationTimeout" /> to avoid this exception if the timeout value is relatively low.</exception>
      <exception cref="T:System.ArgumentException">Thrown when <paramref name="message" /> is null.</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageSender.SendAsync(Microsoft.ServiceBus.Messaging.BrokeredMessage)">
      <summary>Asynchronously sends the specified brokered message.</summary>
      <returns>The asynchronous result of the operation.</returns>
      <param name="message">The brokered message to send.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageSender.SendBatch(System.Collections.Generic.IEnumerable{Microsoft.ServiceBus.Messaging.BrokeredMessage})">
      <summary>Sends a set of brokered messages (for batch processing).</summary>
      <param name="messages">The collection of brokered messages to send.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageSender.SendBatchAsync(System.Collections.Generic.IEnumerable{Microsoft.ServiceBus.Messaging.BrokeredMessage})">
      <summary>Asynchronously sends a set of brokered messages (for batch processing).</summary>
      <returns>The asynchronous result of the operation.</returns>
      <param name="messages">The collection of brokered messages to send.</param>
    </member>
    <member name="T:Microsoft.ServiceBus.Messaging.MessageSession">
      <summary>Represents a message session that allows grouping of related messages for processing in a single transaction.</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageSession.BeginGetState(System.AsyncCallback,System.Object)">
      <summary>Begins an asynchronous operation to set the state of the message session.</summary>
      <returns>An <see cref="T:System.IAsyncResult" /> that references the asynchronous operation to get the state of the message session.</returns>
      <param name="callback">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</param>
      <param name="state">A user-defined object that contains state information about the asynchronous operation.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageSession.BeginRenewLock(System.AsyncCallback,System.Object)">
      <summary>Starts the renewal of lock of the message session.</summary>
      <returns>An <see cref="T:System.IAsyncResult" /> that references the asynchronous operation to get the state of the operation.</returns>
      <param name="callback">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</param>
      <param name="state">A user-defined object that contains state information about the asynchronous operation.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageSession.BeginSetState(System.IO.Stream,System.AsyncCallback,System.Object)">
      <summary>Begins an asynchronous operation to set the state of the message session.</summary>
      <returns>An <see cref="T:System.IAsyncResult" /> that references the asynchronous operation to get the state of the message session.</returns>
      <param name="callback">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</param>
      <param name="state">A user-defined object that contains state information about the asynchronous operation.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageSession.EndGetState(System.IAsyncResult)">
      <summary>Ends an asynchronous operation to get the state of the message session.</summary>
      <returns>The stream from which the state information is persisted.</returns>
      <param name="result">An <see cref="T:System.IAsyncResult" /> that references the asynchronous operation to get the state of the message session.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageSession.EndRenewLock(System.IAsyncResult)">
      <summary>Starts the renewal of lock of the message session.</summary>
      <param name="result">The result of the operation.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageSession.EndSetState(System.IAsyncResult)">
      <summary>Ends an asynchronous operation to set the state of the message session.</summary>
      <param name="result">An <see cref="T:System.IAsyncResult" /> that references the asynchronous operation to set the state of the message session.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageSession.GetState">
      <summary>Gets the state of the message session.</summary>
      <returns>The stream from which the state information is persisted.</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageSession.GetStateAsync">
      <summary>Asynchronously gets the state of the message session.</summary>
      <returns>The stream from which the state information is persisted.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.MessageSession.LastPeekedSequenceNumber">
      <summary>Gets or sets the last peeked sequence number in the session.</summary>
      <returns>The last peeked sequence number in the session.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.MessageSession.LockedUntilUtc">
      <summary>Gets or sets the date and time at which the message session is unlocked.</summary>
      <returns>The date and time for the message session to be locked.</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageSession.OnAbandon(Microsoft.ServiceBus.Tracing.TrackingContext,System.Collections.Generic.IEnumerable{System.Guid},System.Collections.Generic.IDictionary{System.String,System.Object},System.TimeSpan)">
      <summary>Executes upon calling the Abandon operation.</summary>
      <param name="trackingContext">The context information associated by a transaction tracking this operation.</param>
      <param name="lockTokens">The collection of lock tokens bound to the locked message instances.</param>
      <param name="propertiesToModify">The properties to modify.</param>
      <param name="timeout">The time span the operation waits before it times out.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageSession.OnAbort">
      <summary>Aborts the message session. </summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageSession.OnBeginAbandon(Microsoft.ServiceBus.Tracing.TrackingContext,System.Collections.Generic.IEnumerable{System.Guid},System.Collections.Generic.IDictionary{System.String,System.Object},System.Boolean,System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Executes upon calling the OnAbandon or BeginAbandon operation.</summary>
      <returns>An <see cref="T:System.IAsyncResult" /> that references the asynchronous operation to get the result of the operation.</returns>
      <param name="trackingContext">The context information associated by a transaction tracking this operation.</param>
      <param name="lockTokens">The collection of lock tokens bound to the locked message instances.</param>
      <param name="propertiesToModify">The properties to modify.</param>
      <param name="fromSync">The start of the synchronization.</param>
      <param name="timeout">The time span the operation waits before it times out.</param>
      <param name="callback">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</param>
      <param name="state">A user-defined object that contains state information about the asynchronous operation.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageSession.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Begins an asynchronous operation to close the communication object for the message session.</summary>
      <returns>An <see cref="T:System.IAsyncResult" /> that references the asynchronous operation to close the communication object for the message session.</returns>
      <param name="timeout">The time span interval the operation waits before it times out.</param>
      <param name="callback">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</param>
      <param name="state">A user-defined object that contains state information about the asynchronous operation. </param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageSession.OnBeginComplete(Microsoft.ServiceBus.Tracing.TrackingContext,System.Collections.Generic.IEnumerable{System.ArraySegment{System.Byte}},System.Boolean,System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Executes upon calling the OnComplete or BeginComplete operation.</summary>
      <returns>An <see cref="T:System.IAsyncResult" /> that references the asynchronous operation to close the communication object for the message session.</returns>
      <param name="trackingContext">The context information associated by a transaction tracking this operation.</param>
      <param name="deliveryTags">A collection of delivery tags.</param>
      <param name="fromSync">The start of the synchronization.</param>
      <param name="timeout">The time span interval the operation waits before it times out.</param>
      <param name="callback">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</param>
      <param name="state">A user-defined object that contains state information about the asynchronous operation.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageSession.OnBeginComplete(Microsoft.ServiceBus.Tracing.TrackingContext,System.Collections.Generic.IEnumerable{System.Guid},System.Boolean,System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Executes upon calling the OnComplete or BeginComplete operation.</summary>
      <returns>An <see cref="T:System.IAsyncResult" /> that references the asynchronous operation to close the communication object for the message session.</returns>
      <param name="trackingContext">The context information associated by a transaction tracking this operation.</param>
      <param name="lockTokens">The collection of lock tokens bound to the locked message instances.</param>
      <param name="fromSync">The start of the synchronization.</param>
      <param name="timeout">The time span interval the operation waits before it times out.</param>
      <param name="callback">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</param>
      <param name="state">A user-defined object that contains state information about the asynchronous operation.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageSession.OnBeginDeadLetter(Microsoft.ServiceBus.Tracing.TrackingContext,System.Collections.Generic.IEnumerable{System.Guid},System.Collections.Generic.IDictionary{System.String,System.Object},System.String,System.String,System.Boolean,System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Executes upon calling the OnDeadLetter or BeginDeadLetter operation.</summary>
      <returns>An <see cref="T:System.IAsyncResult" /> that references the asynchronous operation to get the state of the operation.</returns>
      <param name="trackingContext">The context information associated by a transaction tracking this operation.</param>
      <param name="lockTokens">The collection of lock tokens bound to the locked message instances.</param>
      <param name="propertiesToModify">The properties to modify.</param>
      <param name="deadLetterReason">The reason for deadlettering the messages.</param>
      <param name="deadLetterErrorDescription">The error description for deadlettering the messages.</param>
      <param name="fromSync">The start of the synchronization.</param>
      <param name="timeout">The time span the operation waits before it times out.</param>
      <param name="callback">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</param>
      <param name="state">A user-defined object that contains state information about the asynchronous operation.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageSession.OnBeginDefer(Microsoft.ServiceBus.Tracing.TrackingContext,System.Collections.Generic.IEnumerable{System.Guid},System.Collections.Generic.IDictionary{System.String,System.Object},System.Boolean,System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Executes upon calling the OnDefer or BeginDefer operation.</summary>
      <returns>An <see cref="T:System.IAsyncResult" /> that references the asynchronous operation to suspend processing of messages.</returns>
      <param name="trackingContext">The context information associated by a transaction tracking this operation.</param>
      <param name="lockTokens">The collection of lock tokens bound to the locked message instances.</param>
      <param name="propertiesToModify">The properties to modify.</param>
      <param name="fromSync">The start of the synchronization.</param>
      <param name="timeout">The time span the operation waits before it times out.</param>
      <param name="callback">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</param>
      <param name="state">A user-defined object that contains state information about the asynchronous operation.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageSession.OnBeginGetState(Microsoft.ServiceBus.Tracing.TrackingContext,System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Executes upon calling the OnGetState or BeginGetState operation.</summary>
      <returns>An <see cref="T:System.IAsyncResult" /> that references the asynchronous operation to get the state of the message session.</returns>
      <param name="trackingContext">The context information associated by a transaction tracking this operation.</param>
      <param name="timeout">The time span interval the operation waits before it times out.</param>
      <param name="callback">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</param>
      <param name="state">A user-defined object that contains state information about the asynchronous operation. </param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageSession.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Executes upon calling the OnOpen operation of the message receiver.</summary>
      <returns>An <see cref="T:System.IAsyncResult" /> that references the asynchronous operation to open a communication object for the message session.</returns>
      <param name="timeout">The time span interval the operation waits before it times out.</param>
      <param name="callback">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</param>
      <param name="state">A user-defined object that contains state information about the asynchronous operation. </param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageSession.OnBeginPeek(Microsoft.ServiceBus.Tracing.TrackingContext,System.Int64,System.Int32,System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Executes upon calling the OnPeek or BeginPeek operation.</summary>
      <returns>An <see cref="T:System.IAsyncResult" /> that references the asynchronous operation to peek a communication of the message session.</returns>
      <param name="trackingContext">The context information associated by a transaction tracking this operation.</param>
      <param name="fromSequenceNumber">The sequence number to peek from the session.</param>
      <param name="messageCount">The number of message in the operation.</param>
      <param name="timeout">The time span interval the operation waits before it times out.</param>
      <param name="callback">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</param>
      <param name="state">A user-defined object that contains state information about the asynchronous operation.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageSession.OnBeginRenewLock(Microsoft.ServiceBus.Tracing.TrackingContext,System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Executes upon calling the RenewLock or BeginRenewLock operation.</summary>
      <returns>An <see cref="T:System.IAsyncResult" /> that references the asynchronous operation to get the state of the operation.</returns>
      <param name="trackingContext">The context information associated by a transaction tracking this operation.</param>
      <param name="timeout">The time span interval the operation waits before it times out.</param>
      <param name="callback">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</param>
      <param name="state">A user-defined object that contains state information about the asynchronous operation.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageSession.OnBeginRenewMessageLocks(Microsoft.ServiceBus.Tracing.TrackingContext,System.Collections.Generic.IEnumerable{System.Guid},System.Boolean,System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Executes upon calling the OnBegin operation for lock messages.</summary>
      <returns>An <see cref="T:System.IAsyncResult" /> that references the asynchronous operation to renew processing of lock messages.</returns>
      <param name="trackingContext">The context information associated by a transaction tracking this operation.</param>
      <param name="lockTokens">The collection of lock tokens bound to the locked message instances.</param>
      <param name="fromSync">The start of the synchronization.</param>
      <param name="timeout">The time span the operation waits before it times out.</param>
      <param name="callback">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</param>
      <param name="state">A user-defined object that contains state information about the asynchronous operation.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageSession.OnBeginSetState(Microsoft.ServiceBus.Tracing.TrackingContext,System.IO.Stream,System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Executes upon calling the OnSetState or BeginSetState operation.</summary>
      <returns>An <see cref="T:System.IAsyncResult" /> that references the asynchronous operation to set the state of the message session.</returns>
      <param name="trackingContext">The context information associated by a transaction tracking this operation.</param>
      <param name="timeout">The time span interval the operation waits before it times out.</param>
      <param name="callback">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</param>
      <param name="state">A user-defined object that contains state information about the asynchronous operation. </param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageSession.OnBeginTryReceive(Microsoft.ServiceBus.Tracing.TrackingContext,System.Collections.Generic.IEnumerable{System.Int64},System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Executes upon calling the OnTryReceive or BeginTryReceive operation of the message receiver.</summary>
      <returns>An <see cref="T:System.IAsyncResult" /> that references the asynchronous operation to try to receive messages.</returns>
      <param name="trackingContext">The context information associated by a transaction tracking this operation.</param>
      <param name="receipts">The collection of unique numbers assigned to messages by the Service Bus.</param>
      <param name="timeout">The time span interval the operation waits before it times out.</param>
      <param name="callback">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</param>
      <param name="state">A user-defined object that contains state information about the asynchronous operation. </param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageSession.OnBeginTryReceive(Microsoft.ServiceBus.Tracing.TrackingContext,System.Int32,System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Executes upon calling the OnTryReceive or BeginTryReceive operation of the message receiver.</summary>
      <returns>An <see cref="T:System.IAsyncResult" /> that references the asynchronous operation to try to receive messages.</returns>
      <param name="trackingContext">The context information associated by a transaction tracking this operation.</param>
      <param name="messageCount">The number of messages to try to receive.</param>
      <param name="serverWaitTime">The time span interval the operation waits before it times out.</param>
      <param name="callback">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</param>
      <param name="state">A user-defined object that contains state information about the asynchronous operation. </param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageSession.OnBeginTryReceive2(Microsoft.ServiceBus.Tracing.TrackingContext,System.Int32,System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Executes upon calling the OnTryReceive or BeginTryReceive operation of the message receiver.</summary>
      <returns>An <see cref="T:System.IAsyncResult" /> that references the asynchronous operation to try to receive messages.</returns>
      <param name="trackingContext">The context information associated by a transaction tracking this operation.</param>
      <param name="messageCount">The number of messages to try to receive.</param>
      <param name="serverWaitTime">The time span interval the operation waits before it times out.</param>
      <param name="callback">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</param>
      <param name="state">A user-defined object that contains state information about the asynchronous operation.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageSession.OnComplete(Microsoft.ServiceBus.Tracing.TrackingContext,System.Collections.Generic.IEnumerable{System.Guid},System.TimeSpan)">
      <summary>Completes the message receive operation.</summary>
      <param name="trackingContext">The context information associated by a transaction tracking this operation.</param>
      <param name="lockTokens">The collection of lock tokens bound to the locked message instances.</param>
      <param name="timeout">The time span interval the operation waits before it times out.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageSession.OnDeadLetter(Microsoft.ServiceBus.Tracing.TrackingContext,System.Collections.Generic.IEnumerable{System.Guid},System.Collections.Generic.IDictionary{System.String,System.Object},System.String,System.String,System.TimeSpan)">
      <summary>Executes upon calling the DeadLetter operation.</summary>
      <param name="trackingContext">The context information associated by a transaction tracking this operation.</param>
      <param name="lockTokens">The collection of lock tokens bound to the locked message instances.</param>
      <param name="propertiesToModify">The properties to modify.</param>
      <param name="deadLetterReason">The reason for deadlettering the message.</param>
      <param name="deadLetterErrorDescription">The error description for deadlettering the message.</param>
      <param name="timeout">The time span the operation waits before it times out.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageSession.OnDefer(Microsoft.ServiceBus.Tracing.TrackingContext,System.Collections.Generic.IEnumerable{System.Guid},System.Collections.Generic.IDictionary{System.String,System.Object},System.TimeSpan)">
      <summary>Executes upon calling the Defer operation.</summary>
      <param name="trackingContext">The context information associated by a transaction tracking this operation.</param>
      <param name="lockTokens">The collection of lock tokens bound to the locked message instances.</param>
      <param name="propertiesToModify">The properties to modify.</param>
      <param name="timeout">The time span the operation waits before it times out.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageSession.OnEndAbandon(System.IAsyncResult)">
      <summary>Ends an asynchronous operation to abandon the message and relinquish its lock.</summary>
      <param name="result">An <see cref="T:System.IAsyncResult" /> that references the asynchronous operation to abandon the messages and relinquish its lock.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageSession.OnEndClose(System.IAsyncResult)">
      <summary>Ends an asynchronous operation to close the communication object for the message session.</summary>
      <param name="result">An <see cref="T:System.IAsyncResult" /> that references the asynchronous operation to close the communication object for the message session.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageSession.OnEndComplete(System.IAsyncResult)">
      <summary>Executes the end complete operation of the message receiver.</summary>
      <param name="result">An <see cref="T:System.IAsyncResult" /> that references the asynchronous operation to complete receiving of messages.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageSession.OnEndDeadLetter(System.IAsyncResult)">
      <summary>Executes the end deadletter operation of the message receiver.</summary>
      <param name="result">An <see cref="T:System.IAsyncResult" /> that references the asynchronous operation to move undelivered messages to the deadletter queue.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageSession.OnEndDefer(System.IAsyncResult)">
      <summary>Executes the end defer operation of the message receiver.</summary>
      <param name="result">An <see cref="T:System.IAsyncResult" /> that references the asynchronous operation to suspend processing of messages.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageSession.OnEndGetState(System.IAsyncResult)">
      <summary>Executes upon calling the OnGetState or EndGetState operation.</summary>
      <returns>The stream from which the state information is persisted.</returns>
      <param name="result">An <see cref="T:System.IAsyncResult" /> that references the asynchronous operation to get the state of the message session.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageSession.OnEndOpen(System.IAsyncResult)">
      <summary>Ends the asynchronous operation to open a communication object for the message session.</summary>
      <param name="result">An <see cref="T:System.IAsyncResult" /> that references the asynchronous operation to open a communication object for the message session.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageSession.OnEndPeek(System.IAsyncResult)">
      <summary>Executes upon calling the EndPeek operation.</summary>
      <returns>The list of message from the session.</returns>
      <param name="result">An <see cref="T:System.IAsyncResult" /> that references the asynchronous operation to peek a communication of the message session.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageSession.OnEndRenewLock(System.IAsyncResult)">
      <summary>Executes the EndRenewLock operation of the message receiver.</summary>
      <returns>The date and time when the renewal of lock ends.</returns>
      <param name="result">An <see cref="T:System.IAsyncResult" /> that references the asynchronous operation to get the state of the message session.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageSession.OnEndRenewMessageLocks(System.IAsyncResult)">
      <summary>Executes the EndRenew action for message locks.</summary>
      <returns>An <see cref="T:System.Collections.Generic.IEnumerable`1" /> of locked messages..</returns>
      <param name="result">The result of the operation.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageSession.OnEndSetState(System.IAsyncResult)">
      <summary>Ends the asynchronous operation to set the state of the message session.</summary>
      <param name="result">An <see cref="T:System.IAsyncResult" /> that references the asynchronous operation to set the state of the message session.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageSession.OnEndTryReceive(System.IAsyncResult,System.Collections.Generic.IEnumerable{Microsoft.ServiceBus.Messaging.BrokeredMessage}@)">
      <summary>Executes the end try receive operation of the message receiver.</summary>
      <returns>true if it succeeds; false if it fails.</returns>
      <param name="result">An <see cref="T:System.IAsyncResult" /> that references the asynchronous operation to try to receive messages.</param>
      <param name="messages">When this method returns, contains the received message collection.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageSession.OnEndTryReceive2(System.IAsyncResult,System.Collections.Generic.IEnumerable{Microsoft.ServiceBus.Messaging.BrokeredMessage}@)">
      <summary>Executes the end try receive operation of the message receiver.</summary>
      <returns>true if it succeeds; false if it fails.</returns>
      <param name="result">An <see cref="T:System.IAsyncResult" /> that references the asynchronous operation to try to receive messages.</param>
      <param name="messages">When this method returns, contains the received message collection.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageSession.OnGetState(Microsoft.ServiceBus.Tracing.TrackingContext,System.TimeSpan)">
      <summary>Executes upon calling the GetState operation.</summary>
      <returns>The stream from which the state information is persisted.</returns>
      <param name="trackingContext">The context information associated by a transaction tracking this operation.</param>
      <param name="timeout">The time span interval the get operation waits before it times out.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageSession.OnRenewLock(Microsoft.ServiceBus.Tracing.TrackingContext,System.TimeSpan)">
      <summary>Executes the RenewLock action for message locks.</summary>
      <returns>The time span the operation waits before it times out.</returns>
      <param name="trackingContext">The context information associated by a transaction tracking this operation.</param>
      <param name="timeout">The time span interval the operation waits before it times out.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageSession.OnSetState(Microsoft.ServiceBus.Tracing.TrackingContext,System.IO.Stream,System.TimeSpan)">
      <summary>Executes upon calling the SetState operation.</summary>
      <param name="trackingContext">The context information associated by a transaction tracking this operation.</param>
      <param name="stream">The stream to which the state information is persisted.</param>
      <param name="timeout">The time span interval the set operation waits before it times out.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageSession.OnTryReceive(Microsoft.ServiceBus.Tracing.TrackingContext,System.Collections.Generic.IEnumerable{System.Int64},System.TimeSpan,System.Collections.Generic.IEnumerable{Microsoft.ServiceBus.Messaging.BrokeredMessage}@)">
      <summary>Attempts a message receive operation.</summary>
      <returns>true if the receive operation was successful; otherwise, false.</returns>
      <param name="trackingContext">The context information associated by a transaction tracking this operation.</param>
      <param name="receipts">The collection of unique numbers assigned to messages by the Service Bus.</param>
      <param name="timeout">The time span interval the operation waits before it times out.</param>
      <param name="messages">A collection of <see cref="T:Microsoft.ServiceBus.Messaging.BrokeredMessage" /> objects.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageSession.OnTryReceive(Microsoft.ServiceBus.Tracing.TrackingContext,System.Int32,System.TimeSpan,System.Collections.Generic.IEnumerable{Microsoft.ServiceBus.Messaging.BrokeredMessage}@)">
      <summary>Attempts a message receive operation.</summary>
      <returns>true if the receive operation was successful; otherwise, false.</returns>
      <param name="trackingContext">The context information associated by a transaction tracking this operation.</param>
      <param name="messageCount">The number of messages to try to receive.</param>
      <param name="serverWaitTime">The time span interval the operation waits before it times out.</param>
      <param name="messages">A collection of <see cref="T:Microsoft.ServiceBus.Messaging.BrokeredMessage" /> objects.</param>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.MessageSession.Path">
      <summary>Gets the path of the queue or topic, relative to the <see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactory" /> base address.</summary>
      <returns>A string representing the path of the queue or topic.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.MessageSession.PrefetchCount">
      <summary>Gets or sets the number of messages that the message receiver can simultaneously request.</summary>
      <returns>The number of messages that the message receiver can simultaneously request.</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageSession.RenewLock">
      <summary>Specifies the time period within which the host renews its lock on a message.</summary>
      <exception cref="T:Microsoft.ServiceBus.Messaging.MessagingException">If <see cref="P:Microsoft.ServiceBus.Messaging.MessagingException.IsTransient" /> is true, you can retry the operation immediately.</exception>
      <exception cref="T:Microsoft.ServiceBus.Messaging.MessagingCommunicationException">You can retry the operation immediately.</exception>
      <exception cref="T:System.TimeoutException">You can retry the operation immediately.</exception>
      <exception cref="T:Microsoft.ServiceBus.Messaging.SessionLockLostException">Thrown instead of <see cref="T:Microsoft.ServiceBus.Messaging.MessageLockLostException" /> if the message is from a <see cref="T:Microsoft.ServiceBus.Messaging.MessageSession" />.</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageSession.RenewLockAsync">
      <summary>Specifies the time period within which the host renews its lock on a message.</summary>
      <returns>The host that is being locked.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.MessageSession.SessionId">
      <summary>Gets or sets the message session identifier.</summary>
      <returns>The message session identifier.</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageSession.SetState(System.IO.Stream)">
      <summary>Sets the state of the message session.</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageSession.SetStateAsync(System.IO.Stream)">
      <summary>Asynchronously sets the state of the message session.</summary>
      <returns>The state of the message session.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.MessageSession.SupportsGetRuntimeEntityDescription"></member>
    <member name="T:Microsoft.ServiceBus.Messaging.MessageSessionAsyncHandler">
      <summary>Represents the asynchronous handler associated with the message session.</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageSessionAsyncHandler.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.Messaging.MessageSessionAsyncHandler" /> class.</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageSessionAsyncHandler.Microsoft#ServiceBus#Messaging#IMessageSessionAsyncHandler#OnCloseSessionAsync(Microsoft.ServiceBus.Messaging.MessageSession)">
      <summary>Raises an event that occurs when the session has been asynchronously closed.</summary>
      <returns>The task object representing the asynchronous operation.</returns>
      <param name="session">The closed session.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageSessionAsyncHandler.Microsoft#ServiceBus#Messaging#IMessageSessionAsyncHandler#OnMessageAsync(Microsoft.ServiceBus.Messaging.MessageSession,Microsoft.ServiceBus.Messaging.BrokeredMessage)">
      <summary>Represents an event that occurs when the session has a brokered message.</summary>
      <returns>The task object representing the asynchronous operation.</returns>
      <param name="session">The message session.</param>
      <param name="message">The brokered message.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageSessionAsyncHandler.Microsoft#ServiceBus#Messaging#IMessageSessionAsyncHandler#OnSessionLostAsync(System.Exception)">
      <summary>Raises an event that occurs when the session has been lost.</summary>
      <returns>The task object representing the asynchronous operation.</returns>
      <param name="exception">The exception occurred that caused the lost session.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageSessionAsyncHandler.OnCloseSessionAsync(Microsoft.ServiceBus.Messaging.MessageSession)">
      <summary>Raises an event that occurs when the session has been asynchronously closed.</summary>
      <returns>The task object representing the asynchronous operation.</returns>
      <param name="session">The closed session.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageSessionAsyncHandler.OnMessageAsync(Microsoft.ServiceBus.Messaging.MessageSession,Microsoft.ServiceBus.Messaging.BrokeredMessage)">
      <summary>Represents an event that occurs when the session has a brokered message.</summary>
      <returns>The task object representing the asynchronous operation.</returns>
      <param name="session">The message session.</param>
      <param name="message">The brokered message.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageSessionAsyncHandler.OnSessionLostAsync(System.Exception)">
      <summary>Raises an event that occurs when the session has been lost.</summary>
      <returns>The task object representing the asynchronous operation.</returns>
      <param name="exception">The exception occurred that caused the lost session.</param>
    </member>
    <member name="T:Microsoft.ServiceBus.Messaging.MessageSessionHandler">
      <summary>Represents the handler associated with the message session.</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageSessionHandler.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.Messaging.MessageSessionHandler" /> class.</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageSessionHandler.Microsoft#ServiceBus#Messaging#IMessageSessionHandler#OnCloseSession(Microsoft.ServiceBus.Messaging.MessageSession)">
      <summary>Raises an event that occurs when the session has been closed.</summary>
      <param name="session">The closed session.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageSessionHandler.Microsoft#ServiceBus#Messaging#IMessageSessionHandler#OnMessage(Microsoft.ServiceBus.Messaging.MessageSession,Microsoft.ServiceBus.Messaging.BrokeredMessage)">
      <summary>Represents an event that occurs when the session has a brokered message.</summary>
      <param name="session">The message session.</param>
      <param name="message">The brokered message.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageSessionHandler.Microsoft#ServiceBus#Messaging#IMessageSessionHandler#OnSessionLost(System.Exception)">
      <summary>Raises an event that occurs when the session has been lost.</summary>
      <param name="exception">The exception occurred that caused the lost session.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageSessionHandler.OnCloseSession(Microsoft.ServiceBus.Messaging.MessageSession)">
      <summary>Raises an event that occurs when the session has been closed.</summary>
      <param name="session">The closed session.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageSessionHandler.OnMessage(Microsoft.ServiceBus.Messaging.MessageSession,Microsoft.ServiceBus.Messaging.BrokeredMessage)">
      <summary>Represents an event that occurs when the session has a brokered message.</summary>
      <param name="session">The message session.</param>
      <param name="message">The brokered message.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageSessionHandler.OnSessionLost(System.Exception)">
      <summary>Raises an event that occurs when the session has been lost.</summary>
      <param name="exception">The exception occurred that caused the lost session.</param>
    </member>
    <member name="T:Microsoft.ServiceBus.Messaging.MessageSizeExceededException">
      <summary>Represents an exception occurred when the size of the message exceeded the maximum allowed size.</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageSizeExceededException.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.Messaging.MessageSizeExceededException" /> class with specified exception message.</summary>
      <param name="message">The message associated with the exception.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageSizeExceededException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.Messaging.MessageSizeExceededException" /> class with specified exception message and the error that caused the exception.</summary>
      <param name="message">The message associated with the exception.</param>
      <param name="innerException">The error that caused the current exception.</param>
    </member>
    <member name="T:Microsoft.ServiceBus.Messaging.MessageState">
      <summary>Enumerates a message state.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.MessageState.Active">
      <summary>Specifies an active message state.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.MessageState.Deferred">
      <summary>Specifies a deferred message state.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.MessageState.Scheduled">
      <summary>Specifies the scheduled message state.</summary>
    </member>
    <member name="T:Microsoft.ServiceBus.Messaging.MessageStoreLockLostException">
      <summary>Represents the exception that is thrown for signaling message store lock lost errors.</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageStoreLockLostException.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.Messaging.MessageStoreLockLostException" /> class with a specified error message.</summary>
      <param name="message">The error message that explains the reason for the exception.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageStoreLockLostException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.Messaging.MessageStoreLockLostException" /> class with a specified error message and a reference to the inner exception that is the cause of this exception.</summary>
      <param name="message">The error message that explains the reason for the exception.</param>
      <param name="innerException">The exception that is the cause of the current exception.</param>
    </member>
    <member name="T:Microsoft.ServiceBus.Messaging.MessagingCommunicationException">
      <summary>The exception that is thrown to signal messaging communication errors.</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessagingCommunicationException.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.Messaging.MessagingCommunicationException" /> class.</summary>
      <param name="communicationPath">The communication path.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessagingCommunicationException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.Messaging.MessagingCommunicationException" /> class.</summary>
      <param name="message">The error message that explains the reason for the exception.</param>
      <param name="innerException">The inner exception that is the cause of the current exception.</param>
    </member>
    <member name="T:Microsoft.ServiceBus.Messaging.MessagingEntityAlreadyExistsException">
      <summary>Represents the exception that is thrown for signaling messaging entity already exists errors.</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessagingEntityAlreadyExistsException.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.Messaging.MessagingEntityAlreadyExistsException" /> class with the name of the entity.</summary>
      <param name="entityName">The name of the entity.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessagingEntityAlreadyExistsException.#ctor(System.String,Microsoft.ServiceBus.Tracing.TrackingContext)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.Messaging.MessagingEntityAlreadyExistsException" /> class.</summary>
      <param name="entityName">The name of the entity.</param>
      <param name="trackingContext">The context information associated by a transaction tracking the operation.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessagingEntityAlreadyExistsException.#ctor(System.String,Microsoft.ServiceBus.Tracing.TrackingContext,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.Messaging.MessagingEntityAlreadyExistsException" /> class.</summary>
      <param name="message">The error message that explains the reason for the exception.</param>
      <param name="trackingContext">The context information associated by a transaction tracking the operation.</param>
      <param name="innerException">The inner exception that is the cause of the current exception.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessagingEntityAlreadyExistsException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Populates the serialization information with data about the exception.</summary>
      <param name="info">The serialized object data about the exception being thrown.</param>
      <param name="context">The contextual information about the source or destinations.</param>
    </member>
    <member name="T:Microsoft.ServiceBus.Messaging.MessagingEntityDisabledException">
      <summary>Exception for signaling messaging entity disabled errors.</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessagingEntityDisabledException.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.Messaging.MessagingEntityDisabledException" /> class.</summary>
      <param name="entityName">The name of the entity responsible for the exception.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessagingEntityDisabledException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.Messaging.MessagingEntityDisabledException" /> class.</summary>
      <param name="message">The error message about the exception.</param>
      <param name="innerException">The inner exception that is the cause of the current exception.</param>
    </member>
    <member name="T:Microsoft.ServiceBus.Messaging.MessagingEntityNotFoundException">
      <summary>The exception that is thrown for signaling messaging entity not found errors.</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessagingEntityNotFoundException.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.Messaging.MessagingEntityNotFoundException" /> class with the entity name.</summary>
      <param name="entityName">The name of the entity.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessagingEntityNotFoundException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.Messaging.MessagingEntityNotFoundException" /> class with a specified error message and a reference to the inner exception that is the cause of this exception.</summary>
      <param name="message">The error message that explains the reason for the exception.</param>
      <param name="innerException">The exception that is the cause of the current exception.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessagingEntityNotFoundException.ToString">
      <summary>Returns a string representation of the current exception.</summary>
      <returns>A string representation of the current exception.</returns>
    </member>
    <member name="T:Microsoft.ServiceBus.Messaging.MessagingException">
      <summary>Represents the exception that is thrown for signaling messaging errors.</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessagingException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.Messaging.MessagingException" /> class with serialization information and streaming context.</summary>
      <param name="info">The serialization information.</param>
      <param name="context">The streaming context.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessagingException.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.Messaging.MessagingException" /> class with a specified error message.</summary>
      <param name="message">The error message that explains the reason for the exception.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessagingException.#ctor(System.String,System.Boolean,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.Messaging.MessagingException" /> class.</summary>
      <param name="message">The error message that explains the reason for the exception.</param>
      <param name="isTransientError">true if the exception is transient; otherwise, false.</param>
      <param name="innerException">The exception that is the cause of the current exception.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessagingException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.Messaging.MessagingException" /> class with a specified error message and a reference to the inner exception that is the cause of this exception.</summary>
      <param name="message">The error message that explains the reason for the exception.</param>
      <param name="innerException">The exception that is the cause of the current exception.</param>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.MessagingException.Data">
      <summary>Gets the data associated with the exception.</summary>
      <returns>The data associated with the exception.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.MessagingException.Detail">
      <summary>Gets or sets the detail information of the messaging exception.</summary>
      <returns>The detail information of the messaging exception.</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessagingException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Populates the serialization information with data about the exception.</summary>
      <param name="info">The serialized object data about the exception being thrown.</param>
      <param name="context">The contextual information about the source or destinations.</param>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.MessagingException.IsTransient">
      <summary>Gets or sets a value indicating whether the exception is transient. Check this property to determine if the operation should be retried.</summary>
      <returns>true if the exception is transient; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.MessagingException.Timestamp">
      <summary>Gets or sets the time at which the messaging exception occurred.</summary>
      <returns>The time at which the messaging exception occurred.</returns>
    </member>
    <member name="T:Microsoft.ServiceBus.Messaging.MessagingExceptionDetail">
      <summary>Provides the details of the messaging exception.</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessagingExceptionDetail.CorrelationFiltersExceeded(System.String)">
      <summary>Returns the exception details for the correlation filters exceeded error.</summary>
      <returns>The exception details for the correlation filters exceeded error.</returns>
      <param name="message">A descriptive message about the exception.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessagingExceptionDetail.EntityConflict(System.String)">
      <summary>Returns the exception details for the entity conflict error.</summary>
      <returns>The exception details for the entity conflict error.</returns>
      <param name="message">A descriptive message about the exception.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessagingExceptionDetail.EntityConflictOperationInProgress(System.String)">
      <summary>Returns the exception details for an entity conflict in progress error. This can occur if there is already a conflicting create or delete call pending on the entity in question.</summary>
      <returns>Returns <see cref="T:Microsoft.ServiceBus.Messaging.MessagingExceptionDetail" />.</returns>
      <param name="entityName">The name of the messaging entity.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessagingExceptionDetail.EntityGone(System.String)">
      <summary>Returns the exception details for the entity gone error.</summary>
      <returns>The exception details for the entity gone error.</returns>
      <param name="message">A descriptive message about the exception.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessagingExceptionDetail.EntityNotFound(System.String)">
      <summary>Returns the exception details for the entity not found error.</summary>
      <returns>The exception details for the entity not found error.</returns>
      <param name="message">A descriptive message about the exception.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessagingExceptionDetail.EntityUpdateConflict(System.String)">
      <summary>Returns the exception details for the entity update conflict error.</summary>
      <returns>The exception details for the entity update conflict error.</returns>
      <param name="entityName">The name of the entity.</param>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.MessagingExceptionDetail.ErrorCode">
      <summary>Gets the error code.</summary>
      <returns>The error code.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.MessagingExceptionDetail.ErrorLevel">
      <summary>Gets the error level.</summary>
      <returns>One of the values of the <see cref="T:Microsoft.ServiceBus.Messaging.MessagingExceptionDetail.ErrorLevelType" /> enumeration.</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessagingExceptionDetail.EventHubAtFullCapacity(System.String)">
      <summary>Returns the exception details when an Event Hub is at full capacity. </summary>
      <returns>Returns <see cref="T:Microsoft.ServiceBus.Messaging.MessagingExceptionDetail" />.</returns>
      <param name="message">A descriptive message about the exception.</param>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.MessagingExceptionDetail.Message">
      <summary>Gets the descriptive message about the exception.</summary>
      <returns>The descriptive message about the exception.</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessagingExceptionDetail.PublisherRevoked(System.String)">
      <summary>Returns the exception details when an Event Hubs publisher has been revoked.</summary>
      <returns>Returns <see cref="T:Microsoft.ServiceBus.Messaging.MessagingExceptionDetail" />.</returns>
      <param name="message">A descriptive message about the exception.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessagingExceptionDetail.ServerBusy(System.String)">
      <summary>Returns the exception details for the server busy error.</summary>
      <returns>The exception details for the server busy error.</returns>
      <param name="message">A descriptive message about the exception.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessagingExceptionDetail.SqlFiltersExceeded(System.String)">
      <summary>Returns the exception details for the SQL filters exceeded error.</summary>
      <returns>The exception details for the SQL filters exceeded error.</returns>
      <param name="message">A descriptive message about the exception.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessagingExceptionDetail.StoreLockLost(System.String)">
      <summary>Returns the exception details for the store lock lost error.</summary>
      <returns>The exception details for the store lock lost error.</returns>
      <param name="message">A descriptive message about the exception.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessagingExceptionDetail.SubscriptionsExceeded(System.String)">
      <summary>Returns the exception details for the subscriptions exceeded error.</summary>
      <returns>The exception details for the subscriptions exceeded error.</returns>
      <param name="message">A descriptive message about the exception.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessagingExceptionDetail.UnknownDetail(System.String)">
      <summary>Returns the exception details for the unknown detail error.</summary>
      <returns>The exception details for the unknown detail error.</returns>
      <param name="message">A descriptive message about the exception.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessagingExceptionDetail.UnspecifiedInternalError(System.String)">
      <summary>Returns the exception details for the unspecified internal error.</summary>
      <returns>The exception details for the unspecified internal error.</returns>
      <param name="message">A descriptive message about the exception.</param>
    </member>
    <member name="T:Microsoft.ServiceBus.Messaging.MessagingExceptionDetail.ErrorLevelType">
      <summary>Enumerates the types of error level for the messaging communication.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.MessagingExceptionDetail.ErrorLevelType.ServerError">
      <summary>Specifies a server error.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.MessagingExceptionDetail.ErrorLevelType.UserError">
      <summary>Specifies a user error.</summary>
    </member>
    <member name="T:Microsoft.ServiceBus.Messaging.MessagingFactory">
      <summary>Represents a messaging factory. This is the anchor class used for run-time operations that send and receive messages to and from Service Bus queues, topics, or subscriptions.</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessagingFactory.AcceptMessageSession">
      <summary>Returns available sessions across all session-enabled subscriptions and queues in the service namespace.</summary>
      <returns>A <see cref="T:Microsoft.ServiceBus.Messaging.MessageSession" /> that allows grouping of related messages for processing in a single transaction. </returns>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessagingFactory.AcceptMessageSession(System.TimeSpan)">
      <summary>Returns available sessions across all session-enabled subscriptions and queues in the service namespace.</summary>
      <returns>A <see cref="T:Microsoft.ServiceBus.Messaging.MessageSession" /> that allows grouping of related messages for processing in a single transaction.</returns>
      <param name="serverWaitTime">The processing time out.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessagingFactory.AcceptMessageSessionAsync">
      <summary>Asynchronously returns available sessions across all session-enabled subscriptions and queues in the service namespace.</summary>
      <returns>A task instance that represents the asynchronous operation for accept message session.</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessagingFactory.AcceptMessageSessionAsync(System.TimeSpan)">
      <summary>Asynchronously returns available sessions across all session-enabled subscriptions and queues in the service namespace.</summary>
      <returns>A task instance that represents the asynchronous operation for accept message session.</returns>
      <param name="timeout">The processing time out.</param>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.MessagingFactory.Address">
      <summary>Gets the base address of the messaging factory.</summary>
      <returns>A URI that represents the base address of the messaging factory.</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessagingFactory.BeginAcceptMessageSession(System.AsyncCallback,System.Object)">
      <summary>Begin an asynchronous operation to accept a message session.</summary>
      <returns>An <see cref="T:System.IAsyncResult" /> that references the asynchronous operation to accept a message session.</returns>
      <param name="callback">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</param>
      <param name="state">A user-defined object that contains state information about the asynchronous operation.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessagingFactory.BeginAcceptMessageSession(System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Begin an asynchronous operation to accept a message session.</summary>
      <returns>An <see cref="T:System.IAsyncResult" /> that references the asynchronous operation to accept a message session.</returns>
      <param name="serverWaitTime">The operation timeout.</param>
      <param name="callback">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</param>
      <param name="state">A user-defined object that contains state information about the asynchronous operation.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessagingFactory.BeginCreate(System.Collections.Generic.IEnumerable{System.String},Microsoft.ServiceBus.Messaging.MessagingFactorySettings,System.AsyncCallback,System.Object)">
      <summary>Begins an asynchronous request to create a <see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactory" /> object.</summary>
      <returns>An <see cref="T:System.IAsyncResult" /> object that references the asynchronous create a <see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactory" /> operation.</returns>
      <param name="addresses">An enumeration of namespace base address.</param>
      <param name="factorySettings">The <see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactory" /> settings.</param>
      <param name="callback">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</param>
      <param name="state">A user-provided object that contains information about the create operation.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessagingFactory.BeginCreate(System.Collections.Generic.IEnumerable{System.String},Microsoft.ServiceBus.TokenProvider,System.AsyncCallback,System.Object)">
      <summary>Begins an asynchronous request to create a <see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactory" /> object.</summary>
      <returns>An <see cref="T:System.IAsyncResult" /> object that references the asynchronous create a <see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactory" /> operation.</returns>
      <param name="addresses">An enumeration of namespace base address.</param>
      <param name="tokenProvider">The token provider.</param>
      <param name="callback">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</param>
      <param name="state">A user-provided object that contains information about the create operation.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessagingFactory.BeginCreate(System.Collections.Generic.IEnumerable{System.String},System.AsyncCallback,System.Object)">
      <summary>Begins an asynchronous request to create a <see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactory" /> object.</summary>
      <returns>An <see cref="T:System.IAsyncResult" /> object that references the asynchronous create a <see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactory" /> operation.</returns>
      <param name="addresses">An enumeration of namespace base address.</param>
      <param name="callback">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</param>
      <param name="state">A user-provided object that contains information about the create operation.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessagingFactory.BeginCreate(System.Collections.Generic.IEnumerable{System.Uri},Microsoft.ServiceBus.Messaging.MessagingFactorySettings,System.AsyncCallback,System.Object)">
      <summary>Begins an asynchronous request to create a <see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactory" /> object.</summary>
      <returns>An <see cref="T:System.IAsyncResult" /> object that references the asynchronous create a <see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactory" /> operation.</returns>
      <param name="addresses">An enumeration of namespace base address.</param>
      <param name="factorySettings">The <see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactory" /> settings.</param>
      <param name="callback">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</param>
      <param name="state">A user-provided object that contains information about the create operation.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessagingFactory.BeginCreate(System.Collections.Generic.IEnumerable{System.Uri},Microsoft.ServiceBus.TokenProvider,System.AsyncCallback,System.Object)">
      <summary>Begins an asynchronous request to create a <see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactory" /> object.</summary>
      <returns>An <see cref="T:System.IAsyncResult" /> object that references the asynchronous create a <see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactory" /> operation.</returns>
      <param name="addresses">An enumeration of namespace base address.</param>
      <param name="tokenProvider">The token provider.</param>
      <param name="callback">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</param>
      <param name="state">A user-provided object that contains information about the create operation.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessagingFactory.BeginCreate(System.Collections.Generic.IEnumerable{System.Uri},System.AsyncCallback,System.Object)">
      <summary>Begins an asynchronous request to create a <see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactory" /> object.</summary>
      <returns>An <see cref="T:System.IAsyncResult" /> object that references the asynchronous create a <see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactory" /> operation.</returns>
      <param name="addresses">An enumeration of namespace base address.</param>
      <param name="callback">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</param>
      <param name="state">A user-provided object that contains information about the create operation.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessagingFactory.BeginCreate(System.String,Microsoft.ServiceBus.Messaging.MessagingFactorySettings,System.AsyncCallback,System.Object)">
      <summary>Begins an asynchronous request to create a <see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactory" /> object.</summary>
      <returns>An <see cref="T:System.IAsyncResult" /> object that references the asynchronous create a <see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactory" /> operation.</returns>
      <param name="address">The namespace base address.</param>
      <param name="factorySettings">The <see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactory" /> settings.</param>
      <param name="callback">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</param>
      <param name="state">A user-provided object that contains information about the create operation. This object is passed to the <see cref="M:Microsoft.ServiceBus.Messaging.MessagingFactory.EndCreate(System.IAsyncResult)" /> delegate when the operation is complete.</param>
      <exception cref="T:System.UriFormatException">
        <paramref name="address" /> is empty or null.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="credential" /> is null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="address" /> contains a path appended to the full address of the service namespace.</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessagingFactory.BeginCreate(System.String,Microsoft.ServiceBus.TokenProvider,System.AsyncCallback,System.Object)">
      <summary>Begins an asynchronous request to create a <see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactory" /> object.</summary>
      <returns>An <see cref="T:System.IAsyncResult" /> object that references the asynchronous create a <see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactory" /> operation.</returns>
      <param name="address">The namespace base address.</param>
      <param name="tokenProvider">The token provider.</param>
      <param name="callback">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</param>
      <param name="state">A user-provided object that contains information about the create operation. This object is passed to the <see cref="M:Microsoft.ServiceBus.Messaging.MessagingFactory.EndCreate(System.IAsyncResult)" /> delegate when the operation is complete.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="address" /> contains a path appended to the full address of the service namespace.</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessagingFactory.BeginCreate(System.String,System.AsyncCallback,System.Object)">
      <summary>Begins an asynchronous request to create a <see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactory" /> object.</summary>
      <returns>An <see cref="T:System.IAsyncResult" /> object that references the asynchronous create a <see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactory" /> operation.</returns>
      <param name="address">The namespace base address.</param>
      <param name="callback">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</param>
      <param name="state">A user-provided object that contains information about the create operation.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessagingFactory.BeginCreate(System.Uri,Microsoft.ServiceBus.Messaging.MessagingFactorySettings,System.AsyncCallback,System.Object)">
      <summary>Begins an asynchronous request to create a <see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactory" /> object.</summary>
      <returns>An <see cref="T:System.IAsyncResult" /> object that references the asynchronous create a <see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactory" /> operation.</returns>
      <param name="address">The namespace base address.</param>
      <param name="factorySettings">The <see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactory" /> settings.</param>
      <param name="callback">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</param>
      <param name="state">A user-provided object that contains information about the create operation. This object is passed to the <see cref="M:Microsoft.ServiceBus.Messaging.MessagingFactory.EndCreate(System.IAsyncResult)" /> delegate when the operation is complete.</param>
      <exception cref="T:System.UriFormatException">
        <paramref name="address" /> is empty or null.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="credential" /> is null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="address" /> contains a path appended to the full address of the service namespace.</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessagingFactory.BeginCreate(System.Uri,Microsoft.ServiceBus.TokenProvider,System.AsyncCallback,System.Object)">
      <summary>Begins an asynchronous request to create a <see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactory" /> object.</summary>
      <returns>An <see cref="T:System.IAsyncResult" /> object that references the asynchronous create a <see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactory" /> operation.</returns>
      <param name="address">The namespace base address.</param>
      <param name="tokenProvider">The token provider.</param>
      <param name="callback">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</param>
      <param name="state">A user-provided object that contains information about the create operation. This object is passed to the <see cref="M:Microsoft.ServiceBus.Messaging.MessagingFactory.EndCreate(System.IAsyncResult)" /> delegate when the operation is complete.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="address" /> contains a path appended to the full address of the service namespace.</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessagingFactory.BeginCreate(System.Uri,System.AsyncCallback,System.Object)">
      <summary>Begins an asynchronous request to create a <see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactory" /> object.</summary>
      <returns>An <see cref="T:System.IAsyncResult" /> object that references the asynchronous create a <see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactory" /> operation.</returns>
      <param name="address">The namespace base address.</param>
      <param name="callback">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</param>
      <param name="state">A user-provided object that contains information about the create operation.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessagingFactory.BeginCreateMessageReceiver(System.String,Microsoft.ServiceBus.Messaging.ReceiveMode,System.AsyncCallback,System.Object)">
      <summary>Begins a create message receiver.</summary>
      <returns>An <see cref="T:System.IAsyncResult" /> object that references the asynchronous create message receiver.</returns>
      <param name="entityPath">The path of the entity.</param>
      <param name="receiveMode">The receive mode.</param>
      <param name="callback">The callback.</param>
      <param name="state">The state.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessagingFactory.BeginCreateMessageReceiver(System.String,System.AsyncCallback,System.Object)">
      <summary>Begins a create message receiver.</summary>
      <returns>An <see cref="T:System.IAsyncResult" /> object that references the asynchronous create message receiver.</returns>
      <param name="entityPath">The path of the entity.</param>
      <param name="callback">The callback.</param>
      <param name="state">The state.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessagingFactory.BeginCreateMessageSender(System.String,System.AsyncCallback,System.Object)">
      <summary>Begins a create message sender.</summary>
      <returns>An <see cref="T:System.IAsyncResult" /> object that references the asynchronous create message sender.</returns>
      <param name="entityPath">The path of the entity.</param>
      <param name="callback">The callback.</param>
      <param name="state">The state.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessagingFactory.BeginCreateMessageSender(System.String,System.String,System.AsyncCallback,System.Object)">
      <summary>Begins a create message sender.</summary>
      <returns>An <see cref="T:System.IAsyncResult" /> object that references the asynchronous create message sender.</returns>
      <param name="transferDestinationEntityPath">The transfer destination entity path.</param>
      <param name="viaEntityPath">The via-entity path.</param>
      <param name="callback">The callback.</param>
      <param name="state">The state.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessagingFactory.BeginPairNamespace(Microsoft.ServiceBus.Messaging.PairedNamespaceOptions,System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Begins a namespace pairing.</summary>
      <returns>The asynchronous result of the operation.</returns>
      <param name="options">The pairing options.</param>
      <param name="timeout">The pairing timeout.</param>
      <param name="callback">The asynchronous pairing callback.</param>
      <param name="state">The pairing state.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessagingFactory.Create">
      <summary>Creates a new messaging factory object.</summary>
      <returns>The newly created <see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactory" /> object.</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessagingFactory.Create(System.Collections.Generic.IEnumerable{System.String})">
      <summary>Creates a new <see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactory" /> object.</summary>
      <returns>The newly created <see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactory" /> object.</returns>
      <param name="addresses">An enumeration of base addresses.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessagingFactory.Create(System.Collections.Generic.IEnumerable{System.String},Microsoft.ServiceBus.Messaging.MessagingFactorySettings)">
      <summary>Creates a new <see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactory" /> object.</summary>
      <returns>The newly created <see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactory" /> object.</returns>
      <param name="addresses">An enumeration of base addresses.</param>
      <param name="factorySettings">The factory settings.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessagingFactory.Create(System.Collections.Generic.IEnumerable{System.String},Microsoft.ServiceBus.TokenProvider)">
      <summary>Creates a new <see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactory" /> object.</summary>
      <returns>The newly created <see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactory" /> object.</returns>
      <param name="addresses">An enumeration of base addresses.</param>
      <param name="tokenProvider">The token provider.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessagingFactory.Create(System.Collections.Generic.IEnumerable{System.Uri})">
      <summary>Creates a new <see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactory" /> object.</summary>
      <returns>The newly created <see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactory" /> object.</returns>
      <param name="addresses">An enumeration of address.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessagingFactory.Create(System.Collections.Generic.IEnumerable{System.Uri},Microsoft.ServiceBus.Messaging.MessagingFactorySettings)">
      <summary>Creates a new <see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactory" /> object.</summary>
      <returns>The newly created <see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactory" /> object.</returns>
      <param name="addresses">An enumeration of address.</param>
      <param name="factorySettings">The factory settings.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessagingFactory.Create(System.Collections.Generic.IEnumerable{System.Uri},Microsoft.ServiceBus.TokenProvider)">
      <summary>Creates a new <see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactory" /> object.</summary>
      <returns>The newly created <see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactory" /> object.</returns>
      <param name="addresses">An enumeration of address.</param>
      <param name="tokenProvider">The token provider.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessagingFactory.Create(System.String)">
      <summary>Creates a new <see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactory" /> object.</summary>
      <returns>The newly created <see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactory" /> object.</returns>
      <param name="address">The base address of the service namespace.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessagingFactory.Create(System.String,Microsoft.ServiceBus.Messaging.MessagingFactorySettings)">
      <summary>Creates a new <see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactory" /> object.</summary>
      <returns>The newly created <see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactory" /> object.</returns>
      <param name="address">The base address of the service namespace.</param>
      <param name="factorySettings">The <see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactory" /> settings.</param>
      <exception cref="T:System.UriFormatException">Thrown when <paramref name="address" /> is empty.</exception>
      <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="factorySettings" /> or <paramref name="address" /> are null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="address" /> contains a path appended to the full address of the service namespace.</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessagingFactory.Create(System.String,Microsoft.ServiceBus.TokenProvider)">
      <summary>Creates a new <see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactory" /> object.</summary>
      <returns>The newly created <see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactory" /> object.</returns>
      <param name="address">The base address of the namespace.</param>
      <param name="tokenProvider">The token provider.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="address" /> contains a path appended to the full address of the service namespace.</exception>
      <exception cref="T:System.UriFormatException">Thrown when <paramref name="address" /> is empty.</exception>
      <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="tokenProvider" /> or <paramref name="address" /> are null.</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessagingFactory.Create(System.Uri)">
      <summary>Creates a new <see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactory" /> object.</summary>
      <returns>The newly created <see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactory" /> object.</returns>
      <param name="address">The namespace base address.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessagingFactory.Create(System.Uri,Microsoft.ServiceBus.Messaging.MessagingFactorySettings)">
      <summary>Creates a new <see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactory" /> object.</summary>
      <returns>The newly created <see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactory" /> object.</returns>
      <param name="address">The namespace base address.</param>
      <param name="factorySettings">The <see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactory" /> settings.</param>
      <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="address" /> or <paramref name="factorySettings" /> is null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="address" /> contains a path appended to the full address of the service namespace.</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessagingFactory.Create(System.Uri,Microsoft.ServiceBus.TokenProvider)">
      <summary>Creates a new <see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactory" /> object.</summary>
      <returns>The newly created <see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactory" /> object.</returns>
      <param name="address">The base address of the namespace.</param>
      <param name="tokenProvider">The token provider.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="address" /> contains a path appended to the full address of the service namespace.</exception>
      <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="tokenProvider" /> or <paramref name="address" /> are null.</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessagingFactory.CreateAsync(System.Collections.Generic.IEnumerable{System.String})">
      <summary>Asynchronously creates a new messaging factory object.</summary>
      <returns>A task instance that represents the asynchronous create operation.</returns>
      <param name="addresses">An enumeration of base addresses.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessagingFactory.CreateAsync(System.Collections.Generic.IEnumerable{System.String},Microsoft.ServiceBus.Messaging.MessagingFactorySettings)">
      <summary>Asynchronously creates a new messaging factory object.</summary>
      <returns>A task instance that represents the asynchronous create operation.</returns>
      <param name="addresses">An enumeration of base addresses.</param>
      <param name="factorySettings">The <see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactory" /> settings.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessagingFactory.CreateAsync(System.Collections.Generic.IEnumerable{System.String},Microsoft.ServiceBus.TokenProvider)">
      <summary>Asynchronously creates a new messaging factory object.</summary>
      <returns>A task instance that represents the asynchronous create operation.</returns>
      <param name="addresses">An enumeration of base addresses.</param>
      <param name="tokenProvider">The token provider.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessagingFactory.CreateAsync(System.Collections.Generic.IEnumerable{System.Uri})">
      <summary>Asynchronously creates a new messaging factory object.</summary>
      <returns>A task instance that represents the asynchronous create operation.</returns>
      <param name="addresses">An enumeration of address.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessagingFactory.CreateAsync(System.Collections.Generic.IEnumerable{System.Uri},Microsoft.ServiceBus.Messaging.MessagingFactorySettings)">
      <summary>Asynchronously creates a new messaging factory object.</summary>
      <returns>A task instance that represents the asynchronous create operation.</returns>
      <param name="addresses">An enumeration of address.</param>
      <param name="factorySettings">The <see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactory" /> settings.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessagingFactory.CreateAsync(System.Collections.Generic.IEnumerable{System.Uri},Microsoft.ServiceBus.TokenProvider)">
      <summary>Asynchronously creates a new messaging factory object.</summary>
      <returns>A task instance that represents the asynchronous create operation.</returns>
      <param name="addresses">An enumeration of address.</param>
      <param name="tokenProvider">The token provider.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessagingFactory.CreateAsync(System.String)">
      <summary>Asynchronously creates a new messaging factory object.</summary>
      <returns>A task instance that represents the asynchronous create operation.</returns>
      <param name="address">The base address of the service namespace.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessagingFactory.CreateAsync(System.String,Microsoft.ServiceBus.Messaging.MessagingFactorySettings)">
      <summary>Asynchronously creates a new messaging factory object.</summary>
      <returns>A task instance that represents the asynchronous create operation.</returns>
      <param name="address">The base address of the service namespace.</param>
      <param name="factorySettings">The <see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactory" /> settings.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessagingFactory.CreateAsync(System.String,Microsoft.ServiceBus.TokenProvider)">
      <summary>Asynchronously creates a new messaging factory object.</summary>
      <returns>A task instance that represents the asynchronous create operation.</returns>
      <param name="address">The base address of the service namespace.</param>
      <param name="tokenProvider">The token provider.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessagingFactory.CreateAsync(System.Uri)">
      <summary>Asynchronously creates a new messaging factory object.</summary>
      <returns>A task instance that represents the asynchronous create operation.</returns>
      <param name="address">The namespace base address.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessagingFactory.CreateAsync(System.Uri,Microsoft.ServiceBus.Messaging.MessagingFactorySettings)">
      <summary>Asynchronously creates a new messaging factory object.</summary>
      <returns>A task instance that represents the asynchronous create operation.</returns>
      <param name="address">The namespace base address.</param>
      <param name="factorySettings">The <see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactory" /> settings.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessagingFactory.CreateAsync(System.Uri,Microsoft.ServiceBus.TokenProvider)">
      <summary>Asynchronously creates a new messaging factory object.</summary>
      <returns>A task instance that represents the asynchronous create operation.</returns>
      <param name="address">The namespace base address.</param>
      <param name="tokenProvider">The token provider.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessagingFactory.CreateEventHubClient(System.String)">
      <summary>Creates a new <see cref="T:Microsoft.ServiceBus.Messaging.EventHubClient" /> object using the specified path.</summary>
      <returns>The newly created <see cref="T:Microsoft.ServiceBus.Messaging.EventHubClient" /> object.</returns>
      <param name="path">The path to the Event Hub.</param>
      <exception cref="T:System.ArgumentNullException">Thrown if <paramref name="path" /> is null.</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessagingFactory.CreateFromConnectionString(System.String)">
      <summary>Creates a new <see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactory" /> object from a connection string.</summary>
      <returns>The newly created <see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactory" /> object.</returns>
      <param name="connectionString">The connection string.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessagingFactory.CreateMessageReceiver(System.String)">
      <summary>Creates a message receiver.</summary>
      <returns>The newly created message receiver.</returns>
      <param name="entityPath">The path of the entity.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessagingFactory.CreateMessageReceiver(System.String,Microsoft.ServiceBus.Messaging.ReceiveMode)">
      <summary>Creates a message receiver.</summary>
      <returns>The newly created message receiver.</returns>
      <param name="entityPath">The path of the entity.</param>
      <param name="receiveMode">The receive mode.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessagingFactory.CreateMessageReceiverAsync(System.String)">
      <summary>Asynchronously creates a message receiver.</summary>
      <returns>A task instance that represents the asynchronous create message receiver operation.</returns>
      <param name="entityPath">The path of the entity.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessagingFactory.CreateMessageReceiverAsync(System.String,Microsoft.ServiceBus.Messaging.ReceiveMode)">
      <summary>Asynchronously creates a message receiver.</summary>
      <returns>A task instance that represents the asynchronous create message receiver operation.</returns>
      <param name="entityPath">The path of the entity.</param>
      <param name="receiveMode">The receive mode.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessagingFactory.CreateMessageSender(System.String)">
      <summary>Creates a message sender.</summary>
      <returns>The newly created message sender.</returns>
      <param name="entityPath">The path of the entity.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessagingFactory.CreateMessageSender(System.String,System.String)">
      <summary>Creates a message sender.</summary>
      <returns>The created <see cref="T:Microsoft.ServiceBus.Messaging.MessageSender" /> object.</returns>
      <param name="transferDestinationEntityPath">The transfer destination entity path.</param>
      <param name="viaEntityPath">The via-entity path.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessagingFactory.CreateMessageSenderAsync(System.String)">
      <summary>Asynchronously creates a message sender.</summary>
      <returns>A task instance that represents the asynchronous create message sender operation.</returns>
      <param name="entityPath">The path of the entity.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessagingFactory.CreateMessageSenderAsync(System.String,System.String)">
      <summary>Asynchronously creates a message sender.</summary>
      <returns>A task instance that represents the asynchronous create message sender operation.</returns>
      <param name="transferDestinationEntityPath">The transfer destination entity path.</param>
      <param name="viaEntityPath">The via-entity path.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessagingFactory.CreateQueueClient(System.String)">
      <summary>Creates a new queue client.</summary>
      <returns>The newly created queue client.</returns>
      <param name="path">The path of the queue relative to the service namespace base address.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" /> is null or empty.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="path" /> length is greater than <see cref="F:Microsoft.ServiceBus.Messaging.Constants.TopicNameMaximumLength" />.</exception>
      <exception cref="T:System.TimeoutException">The operation times out. The timeout period is initialized through the <see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactorySettings" /> object. You may need to increase the value of <see cref="P:Microsoft.ServiceBus.Messaging.MessagingFactorySettings.OperationTimeout" /> to avoid this exception if the timeout value is relatively low.</exception>
      <exception cref="T:Microsoft.ServiceBus.Messaging.MessagingException">An internal error or unexpected exception occurs.</exception>
      <exception cref="T:System.OperationCanceledException">The factory has been closed or aborted.</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessagingFactory.CreateQueueClient(System.String,Microsoft.ServiceBus.Messaging.ReceiveMode)">
      <summary>Creates a new queue client.</summary>
      <returns>The newly created queue client.</returns>
      <param name="path">The path of the queue relative to the service namespace base address.</param>
      <param name="receiveMode">The receive mode.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" /> is null or empty.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="path" /> length is greater than <see cref="F:Microsoft.ServiceBus.Messaging.Constants.TopicNameMaximumLength" />.</exception>
      <exception cref="T:System.TimeoutException">The operation times out. The timeout period is initialized through the <see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactorySettings" /> object. You may need to increase the value of <see cref="P:Microsoft.ServiceBus.Messaging.MessagingFactorySettings.OperationTimeout" /> to avoid this exception if the timeout value is relatively low.</exception>
      <exception cref="T:Microsoft.ServiceBus.Messaging.MessagingException">An internal error or unexpected exception occurs.</exception>
      <exception cref="T:System.OperationCanceledException">The factory has been closed or aborted.</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessagingFactory.CreateSubscriptionClient(System.String,System.String)">
      <summary>Creates a subscription client.</summary>
      <returns>The newly created subscription client.</returns>
      <param name="topicPath">The topic path relative to the service namespace.</param>
      <param name="name">The name of the subscription.</param>
      <exception cref="T:System.ArgumentException">The supplied <paramref name="topicPath" /> is null or empty.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">The length of <paramref name="topicPath" /> is greater than <see cref="F:Microsoft.ServiceBus.Messaging.Constants.TopicNameMaximumLength" />.</exception>
      <exception cref="T:System.TimeoutException">The operation times out. The timeout period is initialized through the <see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactorySettings" /> object. You may need to increase the value of <see cref="P:Microsoft.ServiceBus.Messaging.MessagingFactorySettings.OperationTimeout" /> to avoid this exception if the timeout value is relatively low.</exception>
      <exception cref="T:Microsoft.ServiceBus.Messaging.MessagingException">An internal error or unexpected exception occurs.</exception>
      <exception cref="T:System.OperationCanceledException">The factory has been closed or aborted.</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessagingFactory.CreateSubscriptionClient(System.String,System.String,Microsoft.ServiceBus.Messaging.ReceiveMode)">
      <summary>Creates a new subscription client.</summary>
      <returns>The newly created subscription client.</returns>
      <param name="topicPath">The topic path relative to the service namespace.</param>
      <param name="name">The name of the subscription.</param>
      <param name="receiveMode">The receive mode.</param>
      <exception cref="T:System.ArgumentException">The supplied <paramref name="topicPath" /> is null or empty.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">The length of <paramref name="topicPath" /> is greater than <see cref="F:Microsoft.ServiceBus.Messaging.Constants.TopicNameMaximumLength" />.</exception>
      <exception cref="T:System.TimeoutException">The operation times out. The timeout period is initialized through the <see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactorySettings" /> object. You may need to increase the value of <see cref="P:Microsoft.ServiceBus.Messaging.MessagingFactorySettings.OperationTimeout" /> to avoid this exception if the timeout value is relatively low.</exception>
      <exception cref="T:Microsoft.ServiceBus.Messaging.MessagingException">An internal error or unexpected exception occurs.</exception>
      <exception cref="T:System.OperationCanceledException">The factory has been closed or aborted.</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessagingFactory.CreateTopicClient(System.String)">
      <summary>Creates a new topic client.</summary>
      <returns>The newly created topic client.</returns>
      <param name="path">The topic path relative to the service namespace base address.</param>
      <exception cref="T:System.ArgumentNullException">The supplied <paramref name="path" /> is null.</exception>
      <exception cref="T:System.TimeoutException">The operation times out. The timeout period is initialized through the <see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactorySettings" /> object. You may need to increase the value of <see cref="P:Microsoft.ServiceBus.Messaging.MessagingFactorySettings.OperationTimeout" /> to avoid this exception if the timeout value is relatively low.</exception>
      <exception cref="T:Microsoft.ServiceBus.Messaging.MessagingException">An internal error or unexpected exception occurs.</exception>
      <exception cref="T:System.OperationCanceledException">The factory has been closed or aborted.</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessagingFactory.EndAcceptMessageSession(System.IAsyncResult)">
      <summary>Ends an asynchronous request to accept a <see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactory" /> object.</summary>
      <returns>A <see cref="T:Microsoft.ServiceBus.Messaging.MessageSession" /> that has been ended.</returns>
      <param name="result">The result.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessagingFactory.EndCreate(System.IAsyncResult)">
      <summary>Ends an asynchronous request to create a <see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactory" /> object.</summary>
      <returns>The newly created <see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactory" /> object.</returns>
      <param name="result">An <see cref="T:System.IAsyncResult" /> that references the creation of a <see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactory" /> object.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessagingFactory.EndCreateMessageReceiver(System.IAsyncResult)">
      <summary>Ends a create message receiver.</summary>
      <returns>The newly created <see cref="T:Microsoft.ServiceBus.Messaging.MessageReceiver" /> object.</returns>
      <param name="result">The result.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessagingFactory.EndCreateMessageSender(System.IAsyncResult)">
      <summary>Ends a create message sender.</summary>
      <returns>The newly created <see cref="T:Microsoft.ServiceBus.Messaging.MessageSender" /> object.</returns>
      <param name="result">The result.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessagingFactory.EndPairNamespace(System.IAsyncResult)">
      <summary>Ends the namespace pairing.</summary>
      <param name="result">The result of the operation.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessagingFactory.GetSettings">
      <summary>Retrieves a copy of the settings of the messaging factory.</summary>
      <returns>A copy of the messaging factory settings.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.MessagingFactory.NamespaceEndpoints">
      <summary>Gets a list of namespace endpoints.</summary>
      <returns>A list of namespace endpoints.</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessagingFactory.OnAbort">
      <summary>Executes the abort action.</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessagingFactory.OnAcceptMessageSession(Microsoft.ServiceBus.Messaging.ReceiveMode,System.TimeSpan,System.TimeSpan)">
      <summary>Executes the accept message session.</summary>
      <returns>The executed message session.</returns>
      <param name="receiveMode">The message receive mode.</param>
      <param name="serverWaitTime">The server wait time.</param>
      <param name="timeout">The operation timeout.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessagingFactory.OnAcceptSessionReceiver(System.String,System.String,Microsoft.ServiceBus.Messaging.ReceiveMode,System.TimeSpan)">
      <summary>Executes the accept session receiver action.</summary>
      <returns>An <see cref="T:System.IAsyncResult" /> object that references the asynchronous accept session receiver action.</returns>
      <param name="entityName">The name of the entity.</param>
      <param name="sessionId">The session identifier.</param>
      <param name="receiveMode">The message receive mode.</param>
      <param name="timeout">The wait time before the operation times out.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessagingFactory.OnBeginAcceptMessageSession(Microsoft.ServiceBus.Messaging.ReceiveMode,System.TimeSpan,System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Executes the begin accept message session action.</summary>
      <returns>The asynchronous result of the operation.</returns>
      <param name="receiveMode">The receive mode.</param>
      <param name="serverWaitTime">The server wait time.</param>
      <param name="timeout">The operation timeout.</param>
      <param name="callback">The asynchronous callback.</param>
      <param name="state">The session state.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessagingFactory.OnBeginAcceptSessionReceiver(System.String,System.String,Microsoft.ServiceBus.Messaging.ReceiveMode,System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Executes the begin accept session receiver action.</summary>
      <returns>An <see cref="T:System.IAsyncResult" /> object that references the asynchronous accept session receiver action.</returns>
      <param name="entityName">The name of the entity.</param>
      <param name="sessionId">The session identifier.</param>
      <param name="receiveMode">The message receive mode.</param>
      <param name="timeout">The wait time before the operation times out.</param>
      <param name="callback">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</param>
      <param name="state">A user-defined object that contains information about the receive operation.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessagingFactory.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Executes the begin close action.</summary>
      <returns>An <see cref="T:System.IAsyncResult" /> object that references the asynchronous close action.</returns>
      <param name="timeout">The timeout.</param>
      <param name="callback">The callback.</param>
      <param name="state">The state.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessagingFactory.OnBeginCreateMessageReceiver(System.String,Microsoft.ServiceBus.Messaging.ReceiveMode,System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Executes the begin create message receiver action.</summary>
      <returns>An <see cref="T:System.IAsyncResult" /> object that references the asynchronous create message receiver action.</returns>
      <param name="entityName">The name of the entity.</param>
      <param name="receiveMode">The message receive mode.</param>
      <param name="timeout">The wait time before the operation times out.</param>
      <param name="callback">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</param>
      <param name="state">A user-defined object that contains information about the receive operation.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessagingFactory.OnBeginCreateMessageSender(System.String,System.String,System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Executes the begin create message sender action.</summary>
      <returns>An <see cref="T:System.IAsyncResult" /> object that references the asynchronous create message sender action.</returns>
      <param name="transferDestinationEntityName">The name of the transfer destination entity.</param>
      <param name="viaEntityName">The via-entity name.</param>
      <param name="timeout">The timeout.</param>
      <param name="callback">The callback message.</param>
      <param name="state">The state.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessagingFactory.OnBeginCreateMessageSender(System.String,System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Executes the begin create message sender action.</summary>
      <returns>An <see cref="T:System.IAsyncResult" /> object that references the asynchronous create message sender action.</returns>
      <param name="entityName">The name of the entity.</param>
      <param name="timeout">The timeout.</param>
      <param name="callback">The callback.</param>
      <param name="state">The state.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessagingFactory.OnClose(System.TimeSpan)">
      <summary>Executes the close action.</summary>
      <param name="timeout">The timeout.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessagingFactory.OnCreateEventHubClient(System.String)">
      <summary>Executes the create event hub client action.</summary>
      <returns>The created <see cref="T:Microsoft.ServiceBus.Messaging.EventHubClient" />.</returns>
      <param name="path">The path of the event hub client.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessagingFactory.OnCreateMessageReceiver(System.String,Microsoft.ServiceBus.Messaging.ReceiveMode,System.TimeSpan)">
      <summary>Executes the create message receiver action.</summary>
      <returns>An <see cref="T:System.IAsyncResult" /> object that references the asynchronous create message receiver action.</returns>
      <param name="entityName">The name of the entity.</param>
      <param name="receiveMode">The message receive mode.</param>
      <param name="timeout">The timeout.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessagingFactory.OnCreateMessageSender(System.String,System.String,System.TimeSpan)">
      <summary>Executes the create message sender action.</summary>
      <returns>The executed <see cref="T:Microsoft.ServiceBus.Messaging.MessageSender" /> action.</returns>
      <param name="transferDestinationEntityName">The name of the transfer destination entity.</param>
      <param name="viaEntityName">The via-entity name.</param>
      <param name="timeout">The message timeout.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessagingFactory.OnCreateMessageSender(System.String,System.TimeSpan)">
      <summary>Executes the create message sender action.</summary>
      <returns>An <see cref="T:System.IAsyncResult" /> object that references the asynchronous create message sender action.</returns>
      <param name="entityName">The name of the entity.</param>
      <param name="timeout">The timeout.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessagingFactory.OnCreateQueueClient(System.String,Microsoft.ServiceBus.Messaging.ReceiveMode)">
      <summary>Executes the create queue client action.</summary>
      <returns>The newly created queue client.</returns>
      <param name="path">The path of the queue relative to the service namespace base address.</param>
      <param name="receiveMode">The receive mode.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessagingFactory.OnCreateSubscriptionClient(System.String,Microsoft.ServiceBus.Messaging.ReceiveMode)">
      <summary>Executes a create subscription client action.</summary>
      <returns>A newly created subscription client.</returns>
      <param name="subscriptionPath">The subscription path.</param>
      <param name="receiveMode">The receive mode.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessagingFactory.OnCreateSubscriptionClient(System.String,System.String,Microsoft.ServiceBus.Messaging.ReceiveMode)">
      <summary>Executes a create subscription client action.</summary>
      <returns>A newly created subscription client.</returns>
      <param name="topicPath">The path of the subscription relative to the service namespace base address.</param>
      <param name="name">The name of the subscription.</param>
      <param name="receiveMode">The receive mode.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessagingFactory.OnCreateTopicClient(System.String)">
      <summary>Executes the create topic client action.</summary>
      <returns>The newly created topic client.</returns>
      <param name="path">The path of the topic relative to the service namespace base address.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessagingFactory.OnEndAcceptMessageSession(System.IAsyncResult)">
      <summary>Executes the end accept message session action.</summary>
      <returns>The executed <see cref="T:Microsoft.ServiceBus.Messaging.MessageSession" /> action.</returns>
      <param name="result">The result of the operation.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessagingFactory.OnEndAcceptSessionReceiver(System.IAsyncResult)">
      <summary>Executes the end accept session receiver action.</summary>
      <returns>The executed <see cref="T:Microsoft.ServiceBus.Messaging.SessionReceiver" /> object.</returns>
      <param name="result">An <see cref="T:System.IAsyncResult" /> object that stores state information and any user-defined data for this asynchronous operation.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessagingFactory.OnEndClose(System.IAsyncResult)">
      <summary>Executes the end close action.</summary>
      <param name="result">The result.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessagingFactory.OnEndCreateMessageReceiver(System.IAsyncResult)">
      <summary>Executes the end create message receiver action.</summary>
      <returns>The executed <see cref="T:Microsoft.ServiceBus.Messaging.MessageReceiver" /> action.</returns>
      <param name="result">The result.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessagingFactory.OnEndCreateMessageSender(System.IAsyncResult)">
      <summary>Executes the end create message sender action.</summary>
      <returns>The executed <see cref="T:Microsoft.ServiceBus.Messaging.MessageSender" /> action.</returns>
      <param name="result">The result.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessagingFactory.PairNamespaceAsync(Microsoft.ServiceBus.Messaging.PairedNamespaceOptions)">
      <summary>Asynchronously pairs a namespace.</summary>
      <returns>The result of the operation.</returns>
      <param name="options">The pairing options.</param>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.MessagingFactory.PrefetchCount">
      <summary>Gets or sets the number of messages that the message receiver can simultaneously request.</summary>
      <returns>The number of messages that the message receiver can simultaneously request.</returns>
    </member>
    <member name="T:Microsoft.ServiceBus.Messaging.MessagingFactorySettings">
      <summary>Represents the messaging factory settings.</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessagingFactorySettings.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactorySettings" /> class.</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessagingFactorySettings.#ctor(Microsoft.ServiceBus.Messaging.MessagingFactorySettings)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactorySettings" /> class with the specified messaging factory settings for cloning.</summary>
      <param name="other">The specified messaging factory settings.</param>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.MessagingFactorySettings.AmqpTransportSettings">
      <summary>Gets or set the transport settings for the Advanced Message Queuing Protocol (AMQP).</summary>
      <returns>The transport settings for the Advanced Message Queuing Protocol (AMQP).</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessagingFactorySettings.Clone">
      <summary>Creates a copy of <see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactorySettings" />.</summary>
      <returns>A created copy of <see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactorySettings" />.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.MessagingFactorySettings.EnableAdditionalClientTimeout">
      <summary>Gets or sets a value that indicates whether the messaging operation enables additional client timeout.</summary>
      <returns>true if the messaging operation enables additional client timeout; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.MessagingFactorySettings.NetMessagingTransportSettings">
      <summary>Gets or sets the transport settings required for the net messaging.</summary>
      <returns>The transport settings required for the net messaging.</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessagingFactorySettings.OnBeginCreateFactory(System.Collections.Generic.IEnumerable{System.Uri},System.AsyncCallback,System.Object)">
      <summary>Executes the asynchronous begin create factory action.</summary>
      <returns>An <see cref="T:System.IAsyncResult" /> that references the asynchronous request to create factory.</returns>
      <param name="uriAddresses">The collection of uniform resource identifiers.</param>
      <param name="callback">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</param>
      <param name="state">A user-defined object that contains information about the receive operation.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessagingFactorySettings.OnBeginCreateFactory(System.Uri,System.AsyncCallback,System.Object)">
      <summary>Executes the asynchronous begin create factory action.</summary>
      <returns>An <see cref="T:System.IAsyncResult" /> that references the asynchronous request to create factory.</returns>
      <param name="uri">The uniform resource identifier.</param>
      <param name="callback">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</param>
      <param name="state">A user-defined object that contains information about the receive operation.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessagingFactorySettings.OnEndCreateFactory(System.IAsyncResult)">
      <summary>Ends an asynchronous request to create factory.</summary>
      <returns>The newly created messaging factory.</returns>
      <param name="result">An <see cref="T:System.IAsyncResult" /> that references the asynchronous request to create factory.</param>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.MessagingFactorySettings.OperationTimeout">
      <summary>Gets or sets the <see cref="T:System.TimeSpan" /> that specifies how long the messaging operation has to complete before timing out.</summary>
      <returns>The <see cref="T:System.TimeSpan" /> that specifies how long the messaging operation has to complete before timing out. The default value is one minute.</returns>
      <exception cref="T:System.ArgumentNullException">A null is set; for example, a nullable <see cref="T:System.TimeSpan" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">A zero or negative <see cref="T:System.TimeSpan" /> is set.</exception>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.MessagingFactorySettings.TokenProvider">
      <summary>Gets or sets the token provider of the factory settings.</summary>
      <returns>The token provider of the factory settings.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.MessagingFactorySettings.TransportType">
      <summary>Gets or sets the messaging transport type.</summary>
      <returns>The messaging transport type.</returns>
    </member>
    <member name="T:Microsoft.ServiceBus.Messaging.NetMessagingBinding">
      <summary>Represents the binding that is used for net messaging.</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.NetMessagingBinding.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.Messaging.NetMessagingBinding" /> class.</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.NetMessagingBinding.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.Messaging.NetMessagingBinding" /> class.</summary>
      <param name="configurationName">The configuration to use for the initialization.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.NetMessagingBinding.CreateBindingElements">
      <summary>Returns an ordered collection of binding elements contained in the current binding.</summary>
      <returns>The <see cref="T:System.ServiceModel.Channels.BindingElementCollection" /> object which contains the ordered stack of binding elements described by the <see cref="T:Microsoft.ServiceBus.Messaging.NetMessagingBinding" />. The order of the binding elements starting from the bottom is transport, encoding, and security. </returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.NetMessagingBinding.MaxBufferPoolSize">
      <summary>Gets or sets the maximum size allowed for a buffer pool that stores TCP messages processed by the binding.</summary>
      <returns>The maximum size allowed for a buffer pool that stores TCP messages processed by the binding.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.NetMessagingBinding.PrefetchCount">
      <summary>Gets or sets the number of messages that the message receiver can fetch in advance.</summary>
      <returns>The number of messages that the message receiver can fetch in advance.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.NetMessagingBinding.Scheme">
      <summary>Gets the URI transport scheme for the channels and listeners that are configured with this binding.</summary>
      <returns>The URI transport scheme for the channels and listeners that are configured with this binding.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.NetMessagingBinding.SessionIdleTimeout">
      <summary>Gets or sets the timespan value that specifies period of inactivity that the session waits before timing out.</summary>
      <returns>The timespan value that specifies period of inactivity that the session waits before timing out.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.NetMessagingBinding.TransportSettings">
      <summary>Gets or sets the transport settings for the net messaging.</summary>
      <returns>The transport settings for the net messaging.</returns>
    </member>
    <member name="T:Microsoft.ServiceBus.Messaging.NetMessagingTransportBindingElement">
      <summary>Represents the binding element used to specify a net messaging transport for transmitting messages on the Service Bus.</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.NetMessagingTransportBindingElement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.Messaging.NetMessagingTransportBindingElement" /> class.</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.NetMessagingTransportBindingElement.BuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Builds a channel factory.</summary>
      <returns>The interface implemented by the channel factory.</returns>
      <param name="context">The binding context.</param>
      <typeparam name="TChannel">The type of the channel.</typeparam>
      <exception cref="T:System.ArgumentException">Thrown when TChannel isn’t a supported channel type.</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.NetMessagingTransportBindingElement.BuildChannelListener``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Builds a channel listener.</summary>
      <returns>An implemented <see cref="T:System.ServiceModel.Channels.IChannelListener`1" /> interface.</returns>
      <param name="context">The binding context.</param>
      <typeparam name="TChannel">The type of the channel.</typeparam>
      <exception cref="T:System.ArgumentException">Thrown when TChannel isn’t a supported channel type.</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.NetMessagingTransportBindingElement.CanBuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Queries if the binding element can build a channel factory.</summary>
      <returns>true if the binding element can build a channel factory for a specific type of channel; otherwise, false.</returns>
      <param name="context">The binding context.</param>
      <typeparam name="T">The type of the channel.</typeparam>
      <exception cref="T:System.ArgumentNullException">Thrown when context is null.</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.NetMessagingTransportBindingElement.CanBuildChannelListener``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Queries if the binding element can build a channel listener.</summary>
      <returns>true if the binding element can build a channel listener for a specific type of channel; otherwise, false.</returns>
      <param name="context">The binding context.</param>
      <typeparam name="T">The type of the channel.</typeparam>
      <exception cref="T:System.ArgumentNullException">Thrown when context is null.</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.NetMessagingTransportBindingElement.Clone">
      <summary>Makes a deep copy of this binding element.</summary>
      <returns>A copy of this binding element.</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.NetMessagingTransportBindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Gets a specific binding element property.</summary>
      <returns>The binding element property.</returns>
      <param name="context">The binding context.</param>
      <typeparam name="T">The generic type parameter.</typeparam>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.NetMessagingTransportBindingElement.PrefetchCount">
      <summary>Gets or sets the number of prefetch.</summary>
      <returns>The number of prefetch.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.NetMessagingTransportBindingElement.Scheme">
      <summary>Gets the URI scheme for the transport.</summary>
      <returns>The URI scheme for the transport.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.NetMessagingTransportBindingElement.SessionIdleTimeout">
      <summary>Gets or sets the timespan value that specifies period of inactivity that the session waits before timing out.</summary>
      <returns>The timespan value. The default value is 1 minute.</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.NetMessagingTransportBindingElement.System#ServiceModel#Description#IPolicyExportExtension#ExportPolicy(System.ServiceModel.Description.MetadataExporter,System.ServiceModel.Description.PolicyConversionContext)">
      <summary>Exports a custom policy assertion.</summary>
      <param name="exporter">The MetadataExporter object that you can use to modify the exporting process.</param>
      <param name="context">The PolicyConversionContext object that you can use to insert your custom policy assertion.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.NetMessagingTransportBindingElement.System#ServiceModel#Description#IWsdlExportExtension#ExportContract(System.ServiceModel.Description.WsdlExporter,System.ServiceModel.Description.WsdlContractConversionContext)">
      <summary>Writes custom Web Services Description Language (WSDL) elements into the generated WSDL for a contract.</summary>
      <param name="exporter">The WsdlExporter object that exports the contract information.</param>
      <param name="context">Provides mappings from exported WSDL elements to the contract description.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.NetMessagingTransportBindingElement.System#ServiceModel#Description#IWsdlExportExtension#ExportEndpoint(System.ServiceModel.Description.WsdlExporter,System.ServiceModel.Description.WsdlEndpointConversionContext)">
      <summary>Writes custom Web Services Description Language (WSDL) elements into the generated WSDL for an endpoint.</summary>
      <param name="exporter">The WsdlExporter object that exports the endpoint information.</param>
      <param name="context">Provides mappings from exported WSDL elements to the endpoint description.</param>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.NetMessagingTransportBindingElement.TransportSettings">
      <summary>Gets or sets the transport settings for the net messaging.</summary>
      <returns>The transport settings for the net messaging.</returns>
    </member>
    <member name="T:Microsoft.ServiceBus.Messaging.NetMessagingTransportSettings">
      <summary>Represents .NET messaging transport settings.</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.NetMessagingTransportSettings.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.Messaging.NetMessagingTransportSettings" /> class.</summary>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.NetMessagingTransportSettings.BatchFlushInterval">
      <summary>Gets or sets the batch flush interval.</summary>
      <returns>The batch flush interval.</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.NetMessagingTransportSettings.Clone">
      <summary>Makes a deep copy of this object.</summary>
      <returns>A copy of this object.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.NetMessagingTransportSettings.EnableRedirect">
      <summary>Gets a value that indicates whether the message redirect is enabled.</summary>
      <returns>true if the message redirect is enabled; otherwise, false.</returns>
    </member>
    <member name="T:Microsoft.ServiceBus.Messaging.NoMatchingSubscriptionException">
      <summary>The exception that is thrown when subscription matching resulted no match.</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.NoMatchingSubscriptionException.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.Messaging.NoMatchingSubscriptionException" /> class with error message.</summary>
      <param name="message">The error message about the exception.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.NoMatchingSubscriptionException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.Messaging.NoMatchingSubscriptionException" /> class with error message and inner exception.</summary>
      <param name="message">The error message about the exception.</param>
      <param name="innerException">The inner exception that is the cause of the current exception.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.NoMatchingSubscriptionException.ToString">
      <summary>Returns the string representation of the <see cref="T:Microsoft.ServiceBus.Messaging.NoMatchingSubscriptionException" />.</summary>
      <returns>The string representation of the <see cref="T:Microsoft.ServiceBus.Messaging.NoMatchingSubscriptionException" />.</returns>
    </member>
    <member name="T:Microsoft.ServiceBus.Messaging.OnMessageOptions">
      <summary>Provides options associated with message pump processing using <see cref="M:Microsoft.ServiceBus.Messaging.QueueClient.OnMessage(System.Action{Microsoft.ServiceBus.Messaging.BrokeredMessage})" /> and <see cref="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.OnMessage(System.Action{Microsoft.ServiceBus.Messaging.BrokeredMessage})" />.</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.OnMessageOptions.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.Messaging.OnMessageOptions" /> class.</summary>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.OnMessageOptions.AutoComplete">
      <summary>Gets or sets a value that indicates whether the message-pump should call <see cref="M:Microsoft.ServiceBus.Messaging.QueueClient.Complete(System.Guid)" /> or <see cref="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.Complete(System.Guid)" /> on messages after the callback has completed processing.</summary>
      <returns>true to complete the message processing automatically on successful execution of the operation; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.OnMessageOptions.AutoRenewTimeout">
      <summary>Gets or sets the needed time for the session to automatically renew.</summary>
      <returns>The needed time for the session to automatically renew.</returns>
    </member>
    <member name="E:Microsoft.ServiceBus.Messaging.OnMessageOptions.ExceptionReceived">
      <summary>Occurs when exception is received. Enables you to be notified of any errors encountered by the message pump.</summary>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.OnMessageOptions.MaxConcurrentCalls">
      <summary>Gets or sets the maximum number of concurrent calls to the callback the message pump should initiate.</summary>
      <returns>The maximum number of concurrent calls to the callback.</returns>
    </member>
    <member name="T:Microsoft.ServiceBus.Messaging.OnShardMessageOptions">
      <summary>Represents the available options for the shard message.</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.OnShardMessageOptions.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.Messaging.OnShardMessageOptions" /> class.</summary>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.OnShardMessageOptions.AutoCheckpointTimeout">
      <summary>Gets or sets the duration of the auto checkpoint.</summary>
      <returns>The duration of the auto checkpoint.</returns>
    </member>
    <member name="E:Microsoft.ServiceBus.Messaging.OnShardMessageOptions.ExceptionReceived">
      <summary>Occurs when an exception was received.</summary>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.OnShardMessageOptions.MaxConcurrentCalls">
      <summary>Gets or sets the maximum number of the maximum concurrent calls.</summary>
      <returns>The maximum number of the maximum concurrent calls.</returns>
    </member>
    <member name="T:Microsoft.ServiceBus.Messaging.PairedMessagingFactoryException">
      <summary>Represents the exception occurred for the paired messaging factory.</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.PairedMessagingFactoryException.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.Messaging.PairedMessagingFactoryException" /> class.</summary>
      <param name="message">The exception message.</param>
    </member>
    <member name="T:Microsoft.ServiceBus.Messaging.PairedNamespaceEventArgs">
      <summary>Represents the event arguments associated with paired namespace for the service bus messaging.</summary>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.PairedNamespaceEventArgs.Options">
      <summary>Gets or sets the options associated the paired namespace.</summary>
      <returns>The options associated the paired namespace.</returns>
    </member>
    <member name="T:Microsoft.ServiceBus.Messaging.PairedNamespaceOptions">
      <summary>Represents the options for the paired namespace for the service bus messaging.</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.PairedNamespaceOptions.#ctor(Microsoft.ServiceBus.NamespaceManager,Microsoft.ServiceBus.Messaging.MessagingFactory)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.Messaging.PairedNamespaceOptions" /> class.</summary>
      <param name="secondaryNamespaceManager">The secondary namespace manager.</param>
      <param name="secondaryMessagingFactory">The secondary messaging factory associated with the paired namespace.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.PairedNamespaceOptions.#ctor(Microsoft.ServiceBus.NamespaceManager,Microsoft.ServiceBus.Messaging.MessagingFactory,System.TimeSpan)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.Messaging.PairedNamespaceOptions" /> class.</summary>
      <param name="secondaryNamespaceManager">The secondary namespace manager.</param>
      <param name="secondaryMessagingFactory">The secondary messaging factory associated with the paired namespace.</param>
      <param name="failoverInterval">The message <see cref="T:System.TimeSpan" /> interval failover.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.PairedNamespaceOptions.ClearPairing">
      <summary>Dissolves the pairing of the paired namespace.</summary>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.PairedNamespaceOptions.FailoverInterval">
      <summary>Gets the message <see cref="T:System.TimeSpan" /> interval failover.</summary>
      <returns>The message <see cref="T:System.TimeSpan" /> interval failover.</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.PairedNamespaceOptions.OnNotifyPrimarySendResult(System.String,System.Boolean)">
      <summary>Notifies the primary messaging on sending the result.</summary>
      <param name="path">The string of the path.</param>
      <param name="success">true if the results successfully send; otherwise, false.</param>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.PairedNamespaceOptions.SecondaryMessagingFactory">
      <summary>Gets the secondary messaging factory associated with the paired namespace.</summary>
      <returns>The secondary messaging factory associated with the paired namespace.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.PairedNamespaceOptions.SecondaryNamespaceManager">
      <summary>Gets the object that manages entities, such as queues, topics, subscriptions and rules in the paired namespace.</summary>
      <returns>The object that manages entities, such as queues, topics, subscriptions and rules in the paired namespace.</returns>
    </member>
    <member name="T:Microsoft.ServiceBus.Messaging.PartitionContext">
      <summary>Encapsulates information related to an Event Hubs partition used by <see cref="T:Microsoft.ServiceBus.Messaging.IEventProcessor" />.</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.PartitionContext.CheckpointAsync">
      <summary>Checkpoints progress of an Event Hubs message stream. Make sure to call this method once all the messages in a batch are processed.</summary>
      <returns>The task representing the asynchronous operation.</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.PartitionContext.CheckpointAsync(Microsoft.ServiceBus.Messaging.EventData)">
      <summary>Checkpoints progress of an Event Hubs message stream with the specified offset.</summary>
      <returns>Returns <see cref="T:System.Threading.Tasks.Task" />.</returns>
      <param name="data">An <see cref="T:Microsoft.ServiceBus.Messaging.EventData" /> object to use for checkpointing the state of the stream.</param>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.PartitionContext.ConsumerGroupName">
      <summary>Gets or sets the name of the consumer group.</summary>
      <returns>The name of the consumer group.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.PartitionContext.EventHubPath">
      <summary>Gets or sets the path of the event hub.</summary>
      <returns>The path of the event hub.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.PartitionContext.Lease">
      <summary>Gets or sets the messaging lease.</summary>
      <returns>The messaging lease.</returns>
    </member>
    <member name="T:Microsoft.ServiceBus.Messaging.PartitionDescription">
      <summary>Represents the metadata and approximate runtime information for a logical partition of an Event Hub.</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.PartitionDescription.#ctor(System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.Messaging.PartitionDescription" /> class.</summary>
      <param name="eventHubPath">The path of the Event Hub.</param>
      <param name="partitionId">The partition identifier.</param>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.PartitionDescription.BeginSequenceNumber">
      <summary>Gets the begin sequence number.</summary>
      <returns>The begin sequence number.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.PartitionDescription.ConsumerGroupName">
      <summary>Gets the name of the Event Hubs consumer group.</summary>
      <returns>The Event Hubs consumer group.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.PartitionDescription.EndSequenceNumber">
      <summary>Gets the end sequence number.</summary>
      <returns>The end sequence number.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.PartitionDescription.EventHubPath">
      <summary>Gets the path of the event hub.</summary>
      <returns>The path of the event hub.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.PartitionDescription.IncomingBytesPerSecond">
      <summary>Gets the approximate incoming rate of events (in bytes per second) for the partition.</summary>
      <returns>Returns <see cref="T:System.Int64" />.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.PartitionDescription.LastEnqueuedOffset"></member>
    <member name="P:Microsoft.ServiceBus.Messaging.PartitionDescription.LastEnqueuedTimeUtc"></member>
    <member name="P:Microsoft.ServiceBus.Messaging.PartitionDescription.OutgoingBytesPerSecond">
      <summary>Gets the approximate outgoing rate (in bytes per second) for the partition in the specified consumer group.</summary>
      <returns>Returns <see cref="T:System.Int64" />.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.PartitionDescription.PartitionId">
      <summary>Gets the partition ID for the Event Hub to which it belongs.</summary>
      <returns>The partition identifier.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.PartitionDescription.SizeInBytes">
      <summary>Gets the approximate size, in bytes, of the Event Hubs partition.</summary>
      <returns>Returns <see cref="T:System.Int64" />.</returns>
    </member>
    <member name="T:Microsoft.ServiceBus.Messaging.PartitionNotOwnedException">
      <summary>Represents the exception that is thrown for signaling partition not owned errors.</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.PartitionNotOwnedException.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.Messaging.PartitionNotOwnedException" /> class with a specified error message.</summary>
      <param name="message">The error message that describes the cause of the exception.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.PartitionNotOwnedException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.Messaging.PartitionNotOwnedException" /> class with a specified error message and a reference to the inner exception.</summary>
      <param name="message">The error message that describes the cause of the exception.</param>
      <param name="innerException">The inner exception that is the cause of the current exception.</param>
    </member>
    <member name="T:Microsoft.ServiceBus.Messaging.PartitionRuntimeInformation"></member>
    <member name="M:Microsoft.ServiceBus.Messaging.PartitionRuntimeInformation.#ctor"></member>
    <member name="P:Microsoft.ServiceBus.Messaging.PartitionRuntimeInformation.BeginSequenceNumber"></member>
    <member name="P:Microsoft.ServiceBus.Messaging.PartitionRuntimeInformation.EventHubPath"></member>
    <member name="P:Microsoft.ServiceBus.Messaging.PartitionRuntimeInformation.LastEnqueuedOffset"></member>
    <member name="P:Microsoft.ServiceBus.Messaging.PartitionRuntimeInformation.LastEnqueuedSequenceNumber"></member>
    <member name="P:Microsoft.ServiceBus.Messaging.PartitionRuntimeInformation.LastEnqueuedTimeUtc"></member>
    <member name="P:Microsoft.ServiceBus.Messaging.PartitionRuntimeInformation.PartitionId"></member>
    <member name="T:Microsoft.ServiceBus.Messaging.PnsCredentialProperties">
      <summary>Represents credential properties for a push notification service.</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.PnsCredentialProperties.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.Messaging.PnsCredentialProperties" /> class.</summary>
    </member>
    <member name="T:Microsoft.ServiceBus.Messaging.PublisherRevokedException"></member>
    <member name="M:Microsoft.ServiceBus.Messaging.PublisherRevokedException.#ctor(System.String)"></member>
    <member name="M:Microsoft.ServiceBus.Messaging.PublisherRevokedException.#ctor(System.String,System.Exception)"></member>
    <member name="T:Microsoft.ServiceBus.Messaging.QueueClient">
      <summary>Represents the queue client object.</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.Abandon(System.Guid)">
      <summary>Discards the message and relinquishes the message lock ownership.</summary>
      <param name="lockToken">The lock token bound to the locked message instance to abandon.</param>
      <exception cref="T:System.TimeoutException">Thrown if the operation exceeded the timeout value set by <see cref="T:Microsoft.ServiceBus.Messaging.ServiceBusMessagingFactorySettings.OperationTimeout" />.</exception>
      <exception cref="T:System.OperationCanceledException">Thrown if the client entity has been closed or aborted.</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.Abandon(System.Guid,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Discards the message and relinquishes the message lock ownership.</summary>
      <param name="lockToken">The lock token bound to the locked message instance to abandon.</param>
      <param name="propertiesToModify">The properties of the message to modify.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.AbandonAsync(System.Guid)">
      <summary>Asynchronously discards the message and relinquishes the message lock ownership.</summary>
      <returns>The discarded message.</returns>
      <param name="lockToken">The lock token bound to the locked message instance to abandon.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.AbandonAsync(System.Guid,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Asynchronously discards the message and relinquishes the message lock ownership.</summary>
      <returns>The discarded message.</returns>
      <param name="lockToken">The lock token bound to the locked message instance to abandon.</param>
      <param name="propertiesToModify">The properties of the message to modify.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.AcceptMessageSession">
      <summary>Accepts a message session that allows grouping of related messages for processing in a single transaction.</summary>
      <returns>A <see cref="T:Microsoft.ServiceBus.Messaging.MessageSession" /> that allows grouping of related messages for processing in a single transaction.</returns>
      <exception cref="T:System.TimeoutException">Thrown if the operation exceeded the timeout value set by <see cref="T:Microsoft.ServiceBus.Messaging.ServiceBusMessagingFactorySettings.OperationTimeout" />.</exception>
      <exception cref="T:System.OperationCanceledException">Thrown if the client is already closed, aborted, or disposed.</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.AcceptMessageSession(System.String)">
      <summary>Accepts a message session that allows grouping of related messages for processing in a single transaction using the given session identifier.</summary>
      <returns>A <see cref="T:Microsoft.ServiceBus.Messaging.MessageSession" /> that allows grouping of related messages for processing in a single transaction.</returns>
      <param name="sessionId">The session identifier of the message session.</param>
      <exception cref="T:System.ArgumentException">Thrown if sessionId is null, empty, or white spaces.</exception>
      <exception cref="T:System.TimeoutException">Thrown if the operation exceeded the timeout value set by <see cref="T:Microsoft.ServiceBus.Messaging.ServiceBusMessagingFactorySettings.OperationTimeout" />.</exception>
      <exception cref="T:System.OperationCanceledException">Thrown if the client is already closed, aborted, or disposed.</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.AcceptMessageSession(System.String,System.TimeSpan)">
      <summary>Accepts a message session that allows grouping of related messages for processing in a single transaction using the given session identifier and wait time.</summary>
      <returns>A <see cref="T:Microsoft.ServiceBus.Messaging.MessageSession" /> that allows grouping of related messages for processing in a single transaction.</returns>
      <param name="sessionId">The session identifier of the message session.</param>
      <param name="serverWaitTime">The time span the server waits for processing messages before it times out.</param>
      <exception cref="T:System.ArgumentException">Thrown if sessionId is null, empty, or white spaces.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Thrown if <paramref name="serverWaitTime" /> is not a positive TimeSpan value.</exception>
      <exception cref="T:System.TimeoutException">Thrown if the operation exceeded the timeout value set by <see cref="T:Microsoft.ServiceBus.Messaging.ServiceBusMessagingFactorySettings.OperationTimeout" />.</exception>
      <exception cref="T:System.OperationCanceledException">Thrown if the client is already closed, aborted, or disposed.</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.AcceptMessageSession(System.TimeSpan)">
      <summary>Accepts a message session that allows grouping of related messages for processing in a single transaction using the specified server wait time.</summary>
      <returns>A <see cref="T:Microsoft.ServiceBus.Messaging.MessageSession" /> that allows grouping of related messages for processing in a single transaction.</returns>
      <param name="serverWaitTime">The time span the server waits for processing messages before it times out.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Thrown if <paramref name="serverWaitTime" /> is not a positive TimeSpan value.</exception>
      <exception cref="T:System.TimeoutException">Thrown if the operation exceeded the timeout value set by <paramref name="serverWaitTime" />.</exception>
      <exception cref="T:System.OperationCanceledException">Thrown if the client is already closed, aborted, or disposed.</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.AcceptMessageSessionAsync">
      <summary>Asynchronously accepts a message session that allows grouping of related messages for processing in a single transaction.</summary>
      <returns>The result of an asynchronous operation.</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.AcceptMessageSessionAsync(System.String)">
      <summary>Asynchronously accepts a message session that allows grouping of related messages for processing in a single transaction using the given session identifier.</summary>
      <returns>The result of an asynchronous operation.</returns>
      <param name="sessionId">The session identifier of the message session.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.AcceptMessageSessionAsync(System.String,System.TimeSpan)">
      <summary>Asynchronously accepts a message session that allows grouping of related messages for processing in a single transaction using the given session identifier and wait time.</summary>
      <returns>The result of an asynchronous operation.</returns>
      <param name="sessionId">The session identifier of the message session.</param>
      <param name="serverWaitTime">The time span the server waits for processing messages before it times out.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.AcceptMessageSessionAsync(System.TimeSpan)">
      <summary>Asynchronously accepts a message session that allows grouping of related messages for processing in a single transaction using the specified server wait time.</summary>
      <returns>The result of an asynchronous operation.</returns>
      <param name="serverWaitTime">The time span the server waits for processing messages before it times out.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.BeginAbandon(System.Guid,System.AsyncCallback,System.Object)">
      <summary>Begins an asynchronous operation to abandon the message and relinquish its lock.</summary>
      <returns>An <see cref="T:System.IAsyncResult" /> that references the asynchronous operation to abandon the message and relinquish its lock.</returns>
      <param name="lockToken">The lock token bound to the locked message instance to abandon.</param>
      <param name="callback">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</param>
      <param name="state">A user-defined object that contains state information about the asynchronous operation.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.BeginAbandon(System.Guid,System.Collections.Generic.IDictionary{System.String,System.Object},System.AsyncCallback,System.Object)">
      <summary>Begins an asynchronous operation to abandon the message and relinquish its lock.</summary>
      <returns>An <see cref="T:System.IAsyncResult" /> that references the asynchronous operation to abandon the message and relinquish its lock.</returns>
      <param name="lockToken">The lock token bound to the locked message instance to abandon.</param>
      <param name="propertiesToModify">The properties of the message to modify.</param>
      <param name="callback">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</param>
      <param name="state">A user-defined object that contains state information about the asynchronous operation. </param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.BeginAcceptMessageSession(System.AsyncCallback,System.Object)">
      <summary>Begins an asynchronous operation to accept a message session.</summary>
      <returns>An <see cref="T:System.IAsyncResult" /> that references the asynchronous operation to accept a message session.</returns>
      <param name="callback">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</param>
      <param name="state">A user-defined object that contains state information about the asynchronous operation.</param>
      <exception cref="T:System.TimeoutException">Thrown if the operation exceeded the timeout value set by <see cref="T:Microsoft.ServiceBus.Messaging.ServiceBusMessagingFactorySettings.OperationTimeout" />.</exception>
      <exception cref="T:System.OperationCanceledException">Thrown if the client is already closed, aborted, or disposed.</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.BeginAcceptMessageSession(System.String,System.AsyncCallback,System.Object)">
      <summary>Begins an asynchronous operation to accept a message session.</summary>
      <returns>An <see cref="T:System.IAsyncResult" /> that references the asynchronous operation to accept a message session.</returns>
      <param name="sessionId">The session identifier of the message session.</param>
      <param name="callback">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</param>
      <param name="state">A user-defined object that contains state information about the asynchronous operation.</param>
      <exception cref="T:System.ArgumentException">Thrown if sessionId is null, empty, or white spaces.</exception>
      <exception cref="T:System.TimeoutException">Thrown if the operation exceeded the timeout value set by <see cref="T:Microsoft.ServiceBus.Messaging.ServiceBusMessagingFactorySettings.OperationTimeout" />.</exception>
      <exception cref="T:System.OperationCanceledException">Thrown if the client is already closed, aborted, or disposed.</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.BeginAcceptMessageSession(System.String,System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Begins an asynchronous operation to accept a message session.</summary>
      <returns>An <see cref="T:System.IAsyncResult" /> that references the asynchronous operation to accept a message session.</returns>
      <param name="sessionId">The session identifier of the message session.</param>
      <param name="timeout">The time span the server waits for processing messages before it times out.</param>
      <param name="callback">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</param>
      <param name="state">A user-defined object that contains state information about the asynchronous operation.</param>
      <exception cref="T:System.ArgumentException">Thrown if sessionId is null, empty, or white spaces.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Thrown if <paramref name="serverWaitTime" /> is not a positive TimeSpan value.</exception>
      <exception cref="T:System.TimeoutException">Thrown if the operation exceeded the timeout value set by <see cref="serverWaitTime" />.</exception>
      <exception cref="T:System.OperationCanceledException">Thrown if the client is already closed, aborted, or disposed.</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.BeginAcceptMessageSession(System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Begins an asynchronous operation to accept a message session.</summary>
      <returns>An <see cref="T:System.IAsyncResult" /> that references the asynchronous operation to accept a message session.</returns>
      <param name="serverWaitTime">The time span the server waits for processing messages before it times out.</param>
      <param name="callback">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</param>
      <param name="state">A user-defined object that contains state information about the asynchronous operation.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Thrown if <paramref name="serverWaitTime" /> is not a positive TimeSpan value.</exception>
      <exception cref="T:System.TimeoutException">Thrown if the operation exceeded the timeout value set by <paramref name="serverWaitTime" />.</exception>
      <exception cref="T:System.OperationCanceledException">Thrown if the client is already closed, aborted, or disposed.</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.BeginComplete(System.Guid,System.AsyncCallback,System.Object)">
      <summary>Begins an asynchronous operation to complete processing of a message.</summary>
      <returns>An <see cref="T:System.IAsyncResult" /> that references the asynchronous operation to complete processing of a message.</returns>
      <param name="lockToken">The lock token bound to the locked message instance.</param>
      <param name="callback">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</param>
      <param name="state">A user-defined object that contains state information about the asynchronous operation.</param>
      <exception cref="T:System.TimeoutException">Thrown if the operation exceeded the timeout value set by <see cref="T:Microsoft.ServiceBus.Messaging.ServiceBusMessagingFactorySettings.OperationTimeout" />.</exception>
      <exception cref="T:System.OperationCanceledException">Thrown if the client entity has been closed or aborted.</exception>
      <exception cref="T:Microsoft.ServiceBus.Messaging.MessageLockLostException">Thrown if the message represented by the <paramref name="lockToken" /> has lost the message lock.</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.BeginCompleteBatch(System.Collections.Generic.IEnumerable{System.Guid},System.AsyncCallback,System.Object)">
      <summary>Begins an asynchronous operation to complete processing of a message batch.</summary>
      <returns>An <see cref="T:System.IAsyncResult" /> that references the asynchronous operation to complete processing of a message batch.</returns>
      <param name="lockTokens">The lock tokens associated with locked messages in the batch.</param>
      <param name="callback">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</param>
      <param name="state">A user-defined object that contains state information about the asynchronous operation.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.BeginDeadLetter(System.Guid,System.AsyncCallback,System.Object)">
      <summary>Begins an asynchronous operation to move a message to the dead letter queue.</summary>
      <returns>An <see cref="T:System.IAsyncResult" /> that references the asynchronous operation to move a message to the dead letter queue.</returns>
      <param name="lockToken">The lock token bound to the locked message instance.</param>
      <param name="callback">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</param>
      <param name="state">A user-defined object that contains state information about the asynchronous operation.</param>
      <exception cref="T:System.TimeoutException">Thrown if the operation exceeded the timeout value set by <see cref="T:Microsoft.ServiceBus.Messaging.ServiceBusMessagingFactorySettings.OperationTimeout" />.</exception>
      <exception cref="T:System.OperationCanceledException">Thrown if the client entity has been closed or aborted.</exception>
      <exception cref="T:Microsoft.ServiceBus.Messaging.MessageLockLostException">Thrown if the message represented by the <paramref name="lockToken" /> has lost the message lock.</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.BeginDeadLetter(System.Guid,System.Collections.Generic.IDictionary{System.String,System.Object},System.AsyncCallback,System.Object)">
      <summary>Begins an asynchronous operation to move a message to the dead letter queue.</summary>
      <returns>An <see cref="T:System.IAsyncResult" /> that references the asynchronous operation to move a message to the dead letter queue.</returns>
      <param name="lockToken">The lock token bound to the locked message instance.</param>
      <param name="propertiesToModify">The properties of the message to modify.</param>
      <param name="callback">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</param>
      <param name="state">A user-defined object that contains state information about the asynchronous operation. </param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.BeginDeadLetter(System.Guid,System.String,System.String,System.AsyncCallback,System.Object)">
      <summary>Begins an asynchronous operation to move a message to the dead letter queue.</summary>
      <returns>An <see cref="T:System.IAsyncResult" /> that references the asynchronous operation to move a message to the dead letter queue.</returns>
      <param name="lockToken">The lock token bound to the locked message instance.</param>
      <param name="deadLetterReason">The reason for deadlettering the message.</param>
      <param name="deadLetterErrorDescription">The error description for deadlettering the message.</param>
      <param name="callback">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</param>
      <param name="state">A user-defined object that contains state information about the asynchronous operation.</param>
      <exception cref="T:System.TimeoutException">Thrown if the operation exceeded the timeout value set by <see cref="T:Microsoft.ServiceBus.Messaging.ServiceBusMessagingFactorySettings.OperationTimeout" />.</exception>
      <exception cref="T:System.OperationCanceledException">Thrown if the client entity has been closed or aborted.</exception>
      <exception cref="T:Microsoft.ServiceBus.Messaging.MessageLockLostException">Thrown if the message represented by the <paramref name="lockToken" /> has lost the message lock.</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.BeginDefer(System.Guid,System.AsyncCallback,System.Object)">
      <summary>Begins an asynchronous operation to suspend processing of a message.</summary>
      <returns>An <see cref="T:System.IAsyncResult" /> that references the asynchronous operation to suspend processing of a message.</returns>
      <param name="lockToken">The lock token bound to the locked message instance.</param>
      <param name="callback">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</param>
      <param name="state">A user-defined object that contains state information about the asynchronous operation.</param>
      <exception cref="T:System.TimeoutException">Thrown if the operation exceeded the timeout value set by <see cref="T:Microsoft.ServiceBus.Messaging.ServiceBusMessagingFactorySettings.OperationTimeout" />.</exception>
      <exception cref="T:System.OperationCanceledException">Thrown if the client entity has been closed or aborted.</exception>
      <exception cref="T:Microsoft.ServiceBus.Messaging.MessageLockLostException">Thrown if the message represented by the <paramref name="lockToken" /> has lost the message lock.</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.BeginDefer(System.Guid,System.Collections.Generic.IDictionary{System.String,System.Object},System.AsyncCallback,System.Object)">
      <summary>Begins an asynchronous operation to suspend processing of a message.</summary>
      <returns>An <see cref="T:System.IAsyncResult" /> that references the asynchronous operation to suspend processing of a message.</returns>
      <param name="lockToken">The lock token bound to the locked message instance.</param>
      <param name="propertiesToModify">The properties of the message to modify.</param>
      <param name="callback">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</param>
      <param name="state">A user-defined object that contains state information about the asynchronous operation. </param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.BeginGetMessageSessions(System.AsyncCallback,System.Object)">
      <summary>Begins an asynchronous operation to get the message sessions.</summary>
      <returns>An <see cref="T:System.IAsyncResult" /> that references the asynchronous operation to get the message sessions.</returns>
      <param name="callback">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</param>
      <param name="state">A user-defined object that contains state information about the asynchronous operation.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.BeginGetMessageSessions(System.DateTime,System.AsyncCallback,System.Object)">
      <summary>Begins an asynchronous operation to get the message sessions.</summary>
      <returns>An <see cref="T:System.IAsyncResult" /> that references the asynchronous operation to get the message sessions.</returns>
      <param name="lastUpdatedTime">The date and time of the last update.</param>
      <param name="callback">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</param>
      <param name="state">A user-defined object that contains state information about the asynchronous operation.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.BeginPeek(System.AsyncCallback,System.Object)">
      <summary>Begins an asynchronous operation to peek a message.</summary>
      <returns>An <see cref="T:System.IAsyncResult" /> that references the asynchronous operation to peek a message.</returns>
      <param name="callback">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</param>
      <param name="state">A user-defined object that contains state information about the asynchronous operation.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.BeginPeek(System.Int64,System.AsyncCallback,System.Object)">
      <summary>Begins an asynchronous operation to peek a message.</summary>
      <returns>An <see cref="T:System.IAsyncResult" /> that references the asynchronous operation to peek a message.</returns>
      <param name="fromSequenceNumber">A sequence number from where to peek a message.</param>
      <param name="callback">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</param>
      <param name="state">A user-defined object that contains state information about the asynchronous operation.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.BeginPeekBatch(System.Int32,System.AsyncCallback,System.Object)">
      <summary>Begins an asynchronous operation to peek a batch of messages.</summary>
      <returns>An <see cref="T:System.IAsyncResult" /> that references the asynchronous operation to peek a batch of messages.</returns>
      <param name="messageCount">The number of messages to peek.</param>
      <param name="callback">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</param>
      <param name="state">A user-defined object that contains state information about the asynchronous operation.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.BeginPeekBatch(System.Int64,System.Int32,System.AsyncCallback,System.Object)">
      <summary>Begins an asynchronous operation to peek a batch of messages.</summary>
      <returns>An <see cref="T:System.IAsyncResult" /> that references the asynchronous operation to peek a batch of messages.</returns>
      <param name="fromSequenceNumber">A sequence number from where to peek a batch of messages.</param>
      <param name="messageCount">The number of messages to peek.</param>
      <param name="callback">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</param>
      <param name="state">A user-defined object that contains state information about the asynchronous operation.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.BeginReceive(System.AsyncCallback,System.Object)">
      <summary>Begins an asynchronous operation to receive a message.</summary>
      <returns>An <see cref="T:System.IAsyncResult" /> that references the asynchronous operation to receive a message.</returns>
      <param name="callback">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</param>
      <param name="state">A user-defined object that contains state information about the asynchronous operation.</param>
      <exception cref="T:System.OperationCanceledException">Thrown if the client entity has been closed or aborted.</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.BeginReceive(System.Int64,System.AsyncCallback,System.Object)">
      <summary>Begins an asynchronous operation to receive a message.</summary>
      <returns>An <see cref="T:System.IAsyncResult" /> that references the asynchronous operation to receive a message.</returns>
      <param name="sequenceNumber">The unique number assigned to a message by the Service Bus.</param>
      <param name="callback">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</param>
      <param name="state">A user-defined object that contains state information about the asynchronous operation.</param>
      <exception cref="T:System.OperationCanceledException">Thrown if the client entity has been closed or aborted.</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.BeginReceive(System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Begins an asynchronous operation to receive a message.</summary>
      <returns>An <see cref="T:System.IAsyncResult" /> that references the asynchronous operation to receive a message.</returns>
      <param name="serverWaitTime">The time span the server waits for processing messages before it times out.</param>
      <param name="callback">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</param>
      <param name="state">A user-defined object that contains state information about the asynchronous operation.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Thrown if the <paramref name="serverWaitTime" /> is negative.</exception>
      <exception cref="T:System.OperationCanceledException">Thrown if the client entity has been closed or aborted.</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.BeginReceiveBatch(System.Collections.Generic.IEnumerable{System.Int64},System.AsyncCallback,System.Object)">
      <summary>Begins an asynchronous operation to receive a message batch.</summary>
      <returns>An <see cref="T:System.IAsyncResult" /> that references the asynchronous operation to receive a message batch.</returns>
      <param name="sequenceNumbers">The sequence numbers associated with the messages in the batch.</param>
      <param name="callback">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</param>
      <param name="state">A user-defined object that contains state information about the asynchronous operation. </param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.BeginReceiveBatch(System.Int32,System.AsyncCallback,System.Object)">
      <summary>Begins an asynchronous operation to receive a message batch.</summary>
      <returns>An <see cref="T:System.IAsyncResult" /> that references the asynchronous operation to receive a message batch.</returns>
      <param name="messageCount">The maximum number of messages to receive in a batch.</param>
      <param name="callback">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</param>
      <param name="state">A user-defined object that contains state information about the asynchronous operation.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.BeginReceiveBatch(System.Int32,System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Begins an asynchronous operation to receive a message batch.</summary>
      <returns>An <see cref="T:System.IAsyncResult" /> that references the asynchronous operation to receive a message batch.</returns>
      <param name="messageCount">The maximum number of messages to receive in a batch.</param>
      <param name="serverWaitTime">The time span that the server will wait for the message batch to arrive before it times out.</param>
      <param name="callback">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</param>
      <param name="state">A user-defined object that contains state information about the asynchronous operation.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.BeginSend(Microsoft.ServiceBus.Messaging.BrokeredMessage,System.AsyncCallback,System.Object)">
      <summary>Begins an asynchronous operation to send a message.</summary>
      <returns>An <see cref="T:System.IAsyncResult" /> that references the asynchronous operation to send a message.</returns>
      <param name="message">The message to send.</param>
      <param name="callback">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</param>
      <param name="state">A user-defined object that contains state information about the asynchronous operation.</param>
      <exception cref="T:System.TimeoutException">Thrown when operation times out. Timeout period is initialized through the <see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactorySettings" /> may need to increase the value of <see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactorySettings.OperationTimeout" /> to avoid this exception if timeout value is relatively low. </exception>
      <exception cref="T:System.ArgumentException">Thrown when the <paramref name="BrokeredMessage" /> is null.</exception>
      <exception cref="T:System.InvalidOperationException">Thrown if the  <paramref name="message" /> has already been sent by a QueueClient or <see cref="T:Microsoft.ConnectedServices.Sdk.Client.MessageSender" /> once already.</exception>
      <exception cref="T:System.NotSupportedException">Thrown if the topic/subscription we are point to does not support the send operation. That is, Deadletter queue does not support send operations.</exception>
      <exception cref="T:System.OperationCanceledException">Thrown if the client entity has been closed or aborted.</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.BeginSendBatch(System.Collections.Generic.IEnumerable{Microsoft.ServiceBus.Messaging.BrokeredMessage},System.AsyncCallback,System.Object)">
      <summary>Begins an asynchronous operation to send a message batch.</summary>
      <returns>An <see cref="T:System.IAsyncResult" /> that references the asynchronous operation to send a message batch.</returns>
      <param name="messages">The message batch to send.</param>
      <param name="callback">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</param>
      <param name="state">A user-defined object that contains state information about the asynchronous operation. </param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.Complete(System.Guid)">
      <summary>Completes processing of a message.</summary>
      <param name="lockToken">The lock token bound to the locked message instance.</param>
      <exception cref="T:System.TimeoutException">Thrown if the operation exceeded the timeout value set by <see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactorySettings.OperationTimeout" /></exception>
      <exception cref="T:System.OperationCanceledException">Thrown if the client entity has been closed or aborted.</exception>
      <exception cref="T:Microsoft.ServiceBus.Messaging.MessageLockLostException">Thrown if the message represented by the <paramref name="lockToken" /> has lost the message lock.</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.CompleteAsync(System.Guid)">
      <summary>Asynchronously completes processing of a message.</summary>
      <returns>The asynchronous operation.</returns>
      <param name="lockToken">The lock token bound to the locked message instance.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.CompleteBatch(System.Collections.Generic.IEnumerable{System.Guid})">
      <summary>Completes processing of a message batch.</summary>
      <param name="lockTokens">The lock tokens associated with locked messages in the batch.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.CompleteBatchAsync(System.Collections.Generic.IEnumerable{System.Guid})">
      <summary>Asynchronously completes processing of a message batch.</summary>
      <returns>The asynchronous operation.</returns>
      <param name="lockTokens">The lock tokens associated with locked messages in the batch.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.Create(System.String)">
      <summary>Creates a new copy of <see cref="T:Microsoft.ServiceBus.Messaging.QueueClient" /> with specified path.</summary>
      <returns>The created <see cref="T:Microsoft.ServiceBus.Messaging.QueueClient" />.</returns>
      <param name="path">The path.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.Create(System.String,Microsoft.ServiceBus.Messaging.ReceiveMode)">
      <summary>Creates a new copy of <see cref="T:Microsoft.ServiceBus.Messaging.QueueClient" /> with specified path and mode.</summary>
      <returns>The created <see cref="T:Microsoft.ServiceBus.Messaging.QueueClient" />.</returns>
      <param name="path">The path.</param>
      <param name="mode">The mode.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.CreateFromConnectionString(System.String)"></member>
    <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.CreateFromConnectionString(System.String,System.String)">
      <summary>Creates a new copy of <see cref="T:Microsoft.ServiceBus.Messaging.QueueClient" /> from connection string with specified path.</summary>
      <returns>The created <see cref="T:Microsoft.ServiceBus.Messaging.QueueClient" />.</returns>
      <param name="connectionString">The connection string used.</param>
      <param name="path">The path.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.CreateFromConnectionString(System.String,System.String,Microsoft.ServiceBus.Messaging.ReceiveMode)">
      <summary>Creates a new copy of <see cref="T:Microsoft.ServiceBus.Messaging.QueueClient" /> from connection string with specified path and mode.</summary>
      <returns>The created <see cref="T:Microsoft.ServiceBus.Messaging.QueueClient" />.</returns>
      <param name="connectionString">The connection string.</param>
      <param name="path">The path.</param>
      <param name="mode">The mode.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.DeadLetter(System.Guid)">
      <summary>Moves the undelivered message to the dead letter queue.</summary>
      <param name="lockToken">The lock token bound to the locked message instance.</param>
      <exception cref="T:System.TimeoutException">Thrown if the operation exceeded the timeout value set by <see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactorySettings.OperationTimeout" /></exception>
      <exception cref="T:System.OperationCanceledException">Thrown if the client entity has been closed or aborted.</exception>
      <exception cref="T:Microsoft.ServiceBus.Messaging.MessageLockLostException">Thrown if the message represented by the <paramref name="lockToken" /> has lost the message lock.</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.DeadLetter(System.Guid,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Moves the undelivered message to the dead letter queue.</summary>
      <param name="lockToken">The lock token bound to the locked message instance.</param>
      <param name="propertiesToModify">The properties of the message to modify.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.DeadLetter(System.Guid,System.String,System.String)">
      <summary>Moves the undelivered message to the dead letter queue.</summary>
      <param name="lockToken">The lock token bound to the locked message instance.</param>
      <param name="deadLetterReason">The reason for deadlettering the message.</param>
      <param name="deadLetterErrorDescription">The error description for deadlettering the message.</param>
      <exception cref="T:System.TimeoutException">Thrown if the operation exceeded the timeout value set by <see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactorySettings.OperationTimeout" /></exception>
      <exception cref="T:System.OperationCanceledException">Thrown if the client entity has been closed or aborted.</exception>
      <exception cref="T:Microsoft.ServiceBus.Messaging.MessageLockLostException">Thrown if the message represented by the <paramref name="lockToken" /> has lost the message lock.</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.DeadLetterAsync(System.Guid)">
      <summary>Asynchronously moves the undelivered message to the dead letter queue.</summary>
      <returns>The asynchronous operation.</returns>
      <param name="lockToken">The lock token bound to the locked message instance.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.DeadLetterAsync(System.Guid,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Asynchronously moves the undelivered message to the dead letter queue.</summary>
      <returns>The asynchronous operation.</returns>
      <param name="lockToken">The lock token bound to the locked message instance.</param>
      <param name="propertiesToModify">The properties of the message to modify.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.DeadLetterAsync(System.Guid,System.String,System.String)">
      <summary>Asynchronously moves the undelivered message to the dead letter queue.</summary>
      <returns>The asynchronous operation.</returns>
      <param name="lockToken">The lock token bound to the locked message instance.</param>
      <param name="deadLetterReason">The reason for deadlettering the message.</param>
      <param name="deadLetterErrorDescription">The error description for deadlettering the message.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.Defer(System.Guid)">
      <summary>Suspends the processing of a message.</summary>
      <param name="lockToken">The lock token bound to the locked message instance.</param>
      <exception cref="T:System.TimeoutException">Thrown if the operation exceeded the timeout value set by <see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactorySettings.OperationTimeout" /></exception>
      <exception cref="T:System.OperationCanceledException">Thrown if the client entity has been closed or aborted.</exception>
      <exception cref="T:Microsoft.ServiceBus.Messaging.MessageLockLostException">Thrown if the message represented by the <paramref name="lockToken" /> has lost the message lock.</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.Defer(System.Guid,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Suspends the processing of a message.</summary>
      <param name="lockToken">The lock token bound to the locked message instance.</param>
      <param name="propertiesToModify">The properties of the message to modify.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.DeferAsync(System.Guid)">
      <summary>Asynchronously suspends the processing of a message.</summary>
      <returns>The asynchronous operation.</returns>
      <param name="lockToken">The lock token bound to the locked message instance.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.DeferAsync(System.Guid,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Asynchronously suspends the processing of a message.</summary>
      <returns>The asynchronous operation.</returns>
      <param name="lockToken">The lock token bound to the locked message instance.</param>
      <param name="propertiesToModify">The properties of the message to modify.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.EndAbandon(System.IAsyncResult)">
      <summary>Finishes an asynchronous operation to abandon the message and relinquish its lock.</summary>
      <param name="result">An <see cref="T:System.IAsyncResult" /> that represents the status of the asynchronous abandon message operation.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.EndAcceptMessageSession(System.IAsyncResult)">
      <summary>Finishes an asynchronous operation to accept a message session that allows grouping of related messages for processing in a single transaction.</summary>
      <returns>The <see cref="T:Microsoft.ServiceBus.Messaging.MessageSession" /> that allows grouping of related messages for processing in a single transaction.</returns>
      <param name="result">An <see cref="T:System.IAsyncResult" /> that represents the status of the asynchronous accept message session operation.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.EndComplete(System.IAsyncResult)">
      <summary>Finishes an asynchronous operation to complete processing of a message.</summary>
      <param name="result">An <see cref="T:System.IAsyncResult" /> that references the asynchronous operation to complete processing of a message.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.EndCompleteBatch(System.IAsyncResult)">
      <summary>Finishes an asynchronous operation to complete processing of a message batch.</summary>
      <param name="result">An <see cref="T:System.IAsyncResult" /> that references the asynchronous operation to complete processing of a message batch.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.EndDeadLetter(System.IAsyncResult)">
      <summary>Finishes an asynchronous operation to move message to the dead letter queue.</summary>
      <param name="result">An <see cref="T:System.IAsyncResult" /> that represents the status of the asynchronous operation to move message to the dead letter queue.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.EndDefer(System.IAsyncResult)">
      <summary>Finishes an asynchronous operation to suspend processing of a message.</summary>
      <param name="result">An <see cref="T:System.IAsyncResult" /> that represents the status of the asynchronous operation to suspend processing of a message.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.EndGetMessageSessions(System.IAsyncResult)">
      <summary>Ends an asynchronous operation to get the message sessions.</summary>
      <returns>The message sessions.</returns>
      <param name="result">An <see cref="T:System.IAsyncResult" /> that references the asynchronous operation to get the message sessions.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.EndPeek(System.IAsyncResult)">
      <summary>Ends an asynchronous operation to peek a message.</summary>
      <returns>A brokered message.</returns>
      <param name="result">An <see cref="T:System.IAsyncResult" /> that represents the status of the asynchronous operation to peek a message.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.EndPeekBatch(System.IAsyncResult)">
      <summary>Ends an asynchronous operation to peek a batch of messages.</summary>
      <returns>A batch of message.</returns>
      <param name="result">An <see cref="T:System.IAsyncResult" /> that represents the status of the asynchronous operation to peek a batch of messages.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.EndReceive(System.IAsyncResult)">
      <summary>Finishes an asynchronous operation to receive a message.</summary>
      <returns>Returns <see cref="T:Microsoft.ServiceBus.Messaging.BrokeredMessage" />.</returns>
      <param name="result">An <see cref="T:System.IAsyncResult" /> that represents the status of the asynchronous operation to receive a message.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.EndReceiveBatch(System.IAsyncResult)">
      <summary>Finishes an asynchronous operation to receive a message batch.</summary>
      <returns>The message batch.</returns>
      <param name="result">An <see cref="T:System.IAsyncResult" /> that references the asynchronous operation to receive a message batch. </param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.EndSend(System.IAsyncResult)">
      <summary>Finishes an asynchronous operation to send a message.</summary>
      <param name="result">An <see cref="T:System.IAsyncResult" /> that represents the status of the asynchronous operation to send a message.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.EndSendBatch(System.IAsyncResult)">
      <summary>Finishes an asynchronous operation to send a message batch.</summary>
      <param name="result">An <see cref="T:System.IAsyncResult" /> that references the asynchronous operation to send a message batch.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.FormatDeadLetterPath(System.String)">
      <summary>Builds a format name from the specified dead letter queue path.</summary>
      <returns>The <see cref="T:System.String" /> resulted from building the format name for the specified dead letter queue path.</returns>
      <param name="queuePath">The path to the dead letter queue.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.GetMessageSessions">
      <summary>Gets the message sessions, enabling you to browse sessions on queues.</summary>
      <returns>The message session.</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.GetMessageSessions(System.DateTime)">
      <summary>Retrieves all message sessions whose session state was updated since <paramref name="lastUpdatedTime" />.</summary>
      <returns>The message sessions.</returns>
      <param name="lastUpdatedTime">The time the session was last updated.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.GetMessageSessionsAsync">
      <summary>Asynchronously gets the message sessions, enabling you to browse sessions on queues.</summary>
      <returns>The asynchronous operation.</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.GetMessageSessionsAsync(System.DateTime)">
      <summary>Asynchronously retrieves all message sessions whose session state was updated since <paramref name="lastUpdatedTime" />.</summary>
      <returns>The asynchronous operation.</returns>
      <param name="lastUpdatedTime">The time the session was last updated.</param>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.QueueClient.MessagingFactory">
      <summary>Gets or sets the messaging factory.</summary>
      <returns>The messaging factory.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.QueueClient.Mode">
      <summary>Gets the message receive mode when processing the received message.</summary>
      <returns>The message <see cref="T:Microsoft.ServiceBus.Messaging.ReceiveMode" /> when processing the received message.</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.OnAbort">
      <summary>Executes upon calling the Abort event.</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.OnBeginAcceptMessageSession(System.String,Microsoft.ServiceBus.Messaging.ReceiveMode,System.TimeSpan,System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Executes upon calling the BeginAcceptMessageSession operation.</summary>
      <returns>An <see cref="T:System.IAsyncResult" /> that references the asynchronous operation to accept a message session.</returns>
      <param name="sessionId">The session identifier of the message session.</param>
      <param name="receiveMode">The receive mode when processing with the receive messages.</param>
      <param name="serverWaitTime">The server wait time.</param>
      <param name="timeout">The time span the server waits for processing messages before it times out.</param>
      <param name="callback">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</param>
      <param name="state">A user-defined object that contains state information about the asynchronous operation.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Executes when the Close operation is called.</summary>
      <returns>An <see cref="T:System.IAsyncResult" /> object that references the asynchronous <see cref="M:Microsoft.ServiceBus.Messaging.QueueClient.AcceptSessionReceiver" />.</returns>
      <param name="timeout">The maximum time before the close operation times out.</param>
      <param name="callback">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</param>
      <param name="state">A user-defined object that contains information about the receive operation. This object is passed to the EndClose delegate when the operation is complete.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.OnBeginCreateReceiver(Microsoft.ServiceBus.Messaging.ReceiveMode,System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Executes the begin create receiver action.</summary>
      <returns>An <see cref="T:System.IAsyncResult" /> object that references the asynchronous <see cref="M:Microsoft.ServiceBus.Messaging.QueueClient.CreateReceiver" />.</returns>
      <param name="receiveMode">The message <see cref="T:Microsoft.ServiceBus.Messaging.ReceiveMode" /> receive mode.</param>
      <param name="timeout">The maximum time before this operation times out.</param>
      <param name="callback">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</param>
      <param name="state">A user-defined object that contains information about the receive operation. This object is passed to the <see cref="M:Microsoft.ServiceBus.Messaging.QueueClient.EndCreateReceiver(System.IAsyncResult)" /> delegate when the operation is complete.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.OnBeginCreateReceiver(System.String,Microsoft.ServiceBus.Messaging.ReceiveMode,System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Executes the begin create receiver action.</summary>
      <returns>An <see cref="T:System.IAsyncResult" /> object that references the asynchronous <see cref="M:Microsoft.ServiceBus.Messaging.QueueClient.CreateReceiver" />.</returns>
      <param name="subQueueName">Name of the sub-queue.</param>
      <param name="receiveMode">The message <see cref="T:Microsoft.ServiceBus.Messaging.ReceiveMode" /> receive mode.</param>
      <param name="timeout">The maximum time before this operation times out.</param>
      <param name="callback">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</param>
      <param name="state">A user-defined object that contains information about the receive operation. This object is passed to the <see cref="M:Microsoft.ServiceBus.Messaging.QueueClient.EndCreateReceiver(System.IAsyncResult)" /> delegate when the operation is complete.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.OnBeginCreateSender(System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Executes the begin create sender action.</summary>
      <returns>An <see cref="T:System.IAsyncResult" /> object that references the asynchronous <see cref="M:Microsoft.ServiceBus.Messaging.QueueClient.CreateSender" />.</returns>
      <param name="timeout">The maximum time before this operation times out.</param>
      <param name="callback">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</param>
      <param name="state">A user-defined object that contains information about the receive operation. This object is passed to the <see cref="M:Microsoft.ServiceBus.Messaging.QueueClient.EndCreateSender(System.IAsyncResult)" /> delegate when the operation is complete.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.OnBeginGetMessageSessions(System.DateTime,System.AsyncCallback,System.Object)">
      <summary>Executes the BeginGetMessageSessions action.</summary>
      <returns>An <see cref="T:System.IAsyncResult" /> that references the asynchronous operation to get the message sessions.</returns>
      <param name="lastUpdatedTime">The date and time of the last update.</param>
      <param name="callback">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</param>
      <param name="state">A user-defined object that contains state information about the asynchronous operation.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.OnClose(System.TimeSpan)">
      <summary>Executes upon calling the Close action.</summary>
      <param name="timeout">The maximum time before the close operation times out.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.OnEndAcceptMessageSession(System.IAsyncResult)">
      <summary>Executes upon calling the EndAcceptMessageSession operation.</summary>
      <returns>The <see cref="T:Microsoft.ServiceBus.Messaging.MessageSession" /> that allows grouping of related messages for processing in a single transaction.</returns>
      <param name="result">An <see cref="T:System.IAsyncResult" /> that represents the status of the asynchronous accept message session operation.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.OnEndClose(System.IAsyncResult)">
      <summary>Executes the end close action.</summary>
      <param name="result">The result of the asynchronous <see cref="M:Microsoft.ServiceBus.Messaging.QueueClient.AcceptSessionReceiver" /> operation.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.OnEndCreateReceiver(System.IAsyncResult)">
      <summary>Executes the end create receiver action.</summary>
      <returns>A <see cref="T:Microsoft.ServiceBus.Messaging.MessageReceiver" /> object.</returns>
      <param name="result">The result of the asynchronous <see cref="M:Microsoft.ServiceBus.Messaging.QueueClient.EndCreateReceiver(System.IAsyncResult)" /> operation.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.OnEndCreateSender(System.IAsyncResult)">
      <summary>Executes the end create sender action.</summary>
      <returns>A <see cref="T:Microsoft.ServiceBus.Messaging.MessageSender" /> object.</returns>
      <param name="result">An <see cref="T:System.IAsyncResult" /> object that references the <see cref="M:Microsoft.ServiceBus.Messaging.QueueClient.CreateSender" />.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.OnEndGetMessageSessions(System.IAsyncResult)">
      <summary>Executes the end get message action.</summary>
      <returns> The <see cref="T:Microsoft.ServiceBus.Messaging.MessageSession" /> that allows grouping of related messages for processing in a single transaction.</returns>
      <param name="result">The result of the session.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.OnMessage(System.Action{Microsoft.ServiceBus.Messaging.BrokeredMessage})">
      <summary>Processes a message in an event-driven message pump.</summary>
      <param name="callback">The method to invoke when the operation is complete.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.OnMessage(System.Action{Microsoft.ServiceBus.Messaging.BrokeredMessage},Microsoft.ServiceBus.Messaging.OnMessageOptions)">
      <summary>Processes a message in an event-driven message pump, with the given set of <see cref="T:Microsoft.ServiceBus.Messaging.OnMessageOptions" /> options.</summary>
      <param name="callback">The method to invoke when the operation is complete.</param>
      <param name="onMessageOptions">Specifies the <see cref="T:Microsoft.ServiceBus.Messaging.OnMessageOptions" /> options with which to instantiate the message pump.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.OnMessageAsync(System.Func{Microsoft.ServiceBus.Messaging.BrokeredMessage,System.Threading.Tasks.Task})">
      <summary>Asynchronously processes a message.</summary>
      <param name="callback">The method to invoke when the operation is complete.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.OnMessageAsync(System.Func{Microsoft.ServiceBus.Messaging.BrokeredMessage,System.Threading.Tasks.Task},Microsoft.ServiceBus.Messaging.OnMessageOptions)">
      <summary>Asynchronously processes a message.</summary>
      <param name="callback">The method to invoke when the operation is complete.</param>
      <param name="onMessageOptions">Calls a message option.</param>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.QueueClient.Path">
      <summary>Gets or sets the full path name of the queue.</summary>
      <returns>The queue path relative to the <see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactory" /> base address.</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.Peek">
      <summary>Returns without removing the first message in the queue.</summary>
      <returns>A brokered message. Returns all properties and the message body.</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.Peek(System.Int64)">
      <summary>Returns without removing the first message in the queue.</summary>
      <returns>The brokered message.</returns>
      <param name="fromSequenceNumber">The starting point from which to browse a message.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.PeekAsync">
      <summary>Asynchronously returns without removing the first message in the queue.</summary>
      <returns>The asynchronous operation.</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.PeekAsync(System.Int64)">
      <summary>Asynchronously returns without removing the first message in the queue.</summary>
      <returns>The asynchronous operation.</returns>
      <param name="fromSequenceNumber">The sequence number from where to peek a message.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.PeekBatch(System.Int32)">
      <summary>Peeks a batch of message.</summary>
      <returns>A batch of messages peeked. Returns all properties and the message body.</returns>
      <param name="messageCount">The number of messages.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.PeekBatch(System.Int64,System.Int32)">
      <summary>Peeks a batch of messages.</summary>
      <returns>A batch of messages peeked.</returns>
      <param name="fromSequenceNumber">The starting point from which to browse a batch of messages.</param>
      <param name="messageCount">The number of messages.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.PeekBatchAsync(System.Int32)">
      <summary>Asynchronously peeks a batch of message.</summary>
      <returns>The asynchronous operation.</returns>
      <param name="messageCount">The number of message.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.PeekBatchAsync(System.Int64,System.Int32)">
      <summary>Asynchronously peeks a batch of message.</summary>
      <returns>The asynchronous operation.</returns>
      <param name="fromSequenceNumber">The sequence number from where to peek a batch of message.</param>
      <param name="messageCount">The number of message.</param>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.QueueClient.PrefetchCount">
      <summary>Gets or sets the number of messages that the queue receiver can simultaneously request.</summary>
      <returns>The number of messages that the queue receiver can simultaneously request.</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.Receive">
      <summary>Receives a message using the <see cref="P:Microsoft.ServiceBus.Messaging.QueueClient.InternalReceiver" />.</summary>
      <returns>The <see cref="T:Microsoft.ServiceBus.Messaging.BrokeredMessage" /> that represents the received message. If no message is available to be received, the method returns NULL, and you can retry the operation at a later time.</returns>
      <exception cref="T:System.OperationCanceledException">Thrown if the client entity has been closed or aborted.</exception>
      <exception cref="T:System.TimeoutException">Thrown if the message receive operation times out.</exception>
      <exception cref="T:System.UnauthorizedAccessException">Thrown if an I/O or security error occurs.</exception>
      <exception cref="T:Microsoft.ServiceBus.Messaging.MessagingEntityNotFoundException">Thrown if the messaging entity associated with the operation does not exist or it has been deleted.</exception>
      <exception cref="T:Microsoft.ServiceBus.Messaging.MessagingException">Thrown if the user code has performed some unexpected operations, or the Service Bus gateway is down. Check the exception message for the actual error.</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.Receive(System.Int64)">
      <summary>Receives a message using the <see cref="P:Microsoft.ServiceBus.Messaging.QueueClient.InternalReceiver" />.</summary>
      <returns>The <see cref="T:Microsoft.ServiceBus.Messaging.BrokeredMessage" /> that represents the received message. If no message is available to be received, the method returns NULL, and you can retry the operation at a later time.</returns>
      <param name="sequenceNumber">The sequence number of the deferred message to receive. </param>
      <exception cref="T:System.OperationCanceledException">Thrown if the client entity has been closed or aborted.</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.Receive(System.TimeSpan)">
      <summary>Receives a message using the <see cref="P:Microsoft.ServiceBus.Messaging.QueueClient.InternalReceiver" />.</summary>
      <returns>The <see cref="T:Microsoft.ServiceBus.Messaging.BrokeredMessage" /> that represents the received message. If no message is available to be received, the method returns NULL, and you can retry the operation at a later time.</returns>
      <param name="serverWaitTime">The time span the server waits for receiving a message before it times out.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Thrown if the <paramref name="serverWaitTime" /> is negative.</exception>
      <exception cref="T:System.TimeoutException">Thrown if the message receive operation times out.</exception>
      <exception cref="T:System.OperationCanceledException">Thrown if the client entity has been closed or aborted.</exception>
      <exception cref="T:System.UnauthorizedAccessException">Thrown if an I/O or security error occurs.</exception>
      <exception cref="T:Microsoft.ServiceBus.Messaging.MessagingEntityNotFoundException">Thrown if the messaging entity associated with the operation does not exist or it has been deleted.</exception>
      <exception cref="T:Microsoft.ServiceBus.Messaging.MessagingException">Thrown if the user code has performed some unexpected operations, or the Service Bus gateway is down. Check the exception message for the actual error.</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.ReceiveAsync">
      <summary>Asynchronously receives a message using the <see cref="P:Microsoft.ServiceBus.Messaging.QueueClient.InternalReceiver" />.</summary>
      <returns>The asynchronous operation.</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.ReceiveAsync(System.Int64)">
      <summary>Asynchronously receives a message using the <see cref="P:Microsoft.ServiceBus.Messaging.QueueClient.InternalReceiver" />.</summary>
      <returns>The asynchronous operation.</returns>
      <param name="sequenceNumber">The sequence number of the deferred message to receive.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.ReceiveAsync(System.TimeSpan)">
      <summary>Asynchronously receives a message using the <see cref="P:Microsoft.ServiceBus.Messaging.QueueClient.InternalReceiver" />.</summary>
      <returns>The asynchronous operation.</returns>
      <param name="serverWaitTime">The time span the server waits for receiving a message before it times out.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.ReceiveBatch(System.Collections.Generic.IEnumerable{System.Int64})">
      <summary>Receives a message batch.</summary>
      <returns>A message batch.</returns>
      <param name="sequenceNumbers">The sequence numbers associated with the messages in the batch.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.ReceiveBatch(System.Int32)">
      <summary>Receives a message batch.</summary>
      <returns>A message batch.</returns>
      <param name="messageCount">The maximum number of messages to return in the batch. As this is an approximation, fewer messages may be returned even if the number of messages is higher than <paramref name="messageCount" />.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.ReceiveBatch(System.Int32,System.TimeSpan)">
      <summary>Receives a message batch.</summary>
      <returns>A message batch.</returns>
      <param name="messageCount">The maximum number of messages to receive in a batch.</param>
      <param name="serverWaitTime">The time span that the server will wait for the message batch to arrive before it times out.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.ReceiveBatchAsync(System.Collections.Generic.IEnumerable{System.Int64})">
      <summary>Asynchronously receives a message batch.</summary>
      <returns>The asynchronous operation.</returns>
      <param name="sequenceNumbers">The sequence numbers associated with the messages in the batch.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.ReceiveBatchAsync(System.Int32)">
      <summary>Asynchronously receives a message batch.</summary>
      <returns>The asynchronous operation.</returns>
      <param name="messageCount">The maximum number of messages to return in the batch. As this is an approximation, fewer messages may be returned even if the number of messages is higher than <paramref name="messageCount" />.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.ReceiveBatchAsync(System.Int32,System.TimeSpan)">
      <summary>Asynchronously receives a message batch.</summary>
      <returns>The asynchronous operation.</returns>
      <param name="messageCount">The maximum number of messages to receive in a batch.</param>
      <param name="serverWaitTime">The time span that the server will wait for the message batch to arrive before it times out.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.RegisterSessionHandler(System.Type)">
      <summary>Registers the session handler with specific type.</summary>
      <param name="handlerType">The handler type.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.RegisterSessionHandler(System.Type,Microsoft.ServiceBus.Messaging.SessionHandlerOptions)">
      <summary>Registers the session handler with specific type and handler options.</summary>
      <param name="handlerType">The handler type.</param>
      <param name="options">The session handler options.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.RegisterSessionHandlerAsync(System.Type)">
      <summary>Asynchronously registers the session handler with specific type.</summary>
      <returns>The task object representing the asynchronous operation.</returns>
      <param name="handlerType">The handler type.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.RegisterSessionHandlerAsync(System.Type,Microsoft.ServiceBus.Messaging.SessionHandlerOptions)">
      <summary>Asynchronously registers the session handler with specific type and handler options.</summary>
      <returns>The task object representing the asynchronous operation.</returns>
      <param name="handlerType">The handler type.</param>
      <param name="options">The session handler options.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.RegisterSessionHandlerFactory(Microsoft.ServiceBus.Messaging.IMessageSessionAsyncHandlerFactory,Microsoft.ServiceBus.Messaging.SessionHandlerOptions)">
      <summary>Registers a message session handler factory with specified options.</summary>
      <param name="factory">The handler factory to be registered.</param>
      <param name="options">The handler options.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.RegisterSessionHandlerFactory(Microsoft.ServiceBus.Messaging.IMessageSessionHandlerFactory,Microsoft.ServiceBus.Messaging.SessionHandlerOptions)">
      <summary>Registers a message session handler factory with specified options.</summary>
      <param name="factory">The handler factory to be registered.</param>
      <param name="options">The handler options.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.RegisterSessionHandlerFactoryAsync(Microsoft.ServiceBus.Messaging.IMessageSessionAsyncHandlerFactory,Microsoft.ServiceBus.Messaging.SessionHandlerOptions)">
      <summary>Asynchronously registers a message session handler factory.</summary>
      <returns>The task object representing the asynchronous operation.</returns>
      <param name="factory">The handler factory to be registered.</param>
      <param name="options">The handler options.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.RegisterSessionHandlerFactoryAsync(Microsoft.ServiceBus.Messaging.IMessageSessionHandlerFactory,Microsoft.ServiceBus.Messaging.SessionHandlerOptions)">
      <summary>Asynchronously registers a message session handler factory.</summary>
      <returns>The task object representing the asynchronous operation.</returns>
      <param name="factory">The handler factory to be registered.</param>
      <param name="options">The handler options.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.Send(Microsoft.ServiceBus.Messaging.BrokeredMessage)">
      <summary>Sends a message using the <see cref="P:Microsoft.ServiceBus.Messaging.QueueClient.InternalSender" />.</summary>
      <param name="message">The message to send.</param>
      <exception cref="T:System.TimeoutException">Thrown when operation times out. Timeout period is initialized through the <see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactorySettings" /> may need to increase the value of <see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactorySettings.OperationTimeout" /> to avoid this exception if timeout value is relatively low. </exception>
      <exception cref="T:System.ArgumentException">Thrown when the <paramref name="BrokeredMessage" /> is null.</exception>
      <exception cref="T:System.InvalidOperationException">Thrown if the  <paramref name="message" /> has already been sent by a QueueClient or <see cref="T:Microsoft.ConnectedServices.Sdk.Client.MessageSender" /> once already.</exception>
      <exception cref="T:System.InvalidOperationException">Thrown if the topic/subscription pointed to does not support the send operation. That is, Deadletter queue does not support send operations.</exception>
      <exception cref="T:System.OperationCanceledException">Thrown if the client entity has been closed or aborted.</exception>
      <exception cref="T:System.UnauthorizedAccessException">Thrown if there is an I/O or security error.</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException">Thrown when an error occurs during serialization or deserialization.</exception>
      <exception cref="T:Microsoft.ServiceBus.Messaging.MessagingEntityNotFoundException">Thrown if the queue does not exist.</exception>
      <exception cref="T:Microsoft.ServiceBus.Messaging.MessagingException">Thrown if there is a messaging error.</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.SendAsync(Microsoft.ServiceBus.Messaging.BrokeredMessage)">
      <summary>Asynchronously sends a message using the <see cref="P:Microsoft.ServiceBus.Messaging.QueueClient.InternalSender" />.</summary>
      <returns>The asynchronous operation.</returns>
      <param name="message">The message to send.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.SendBatch(System.Collections.Generic.IEnumerable{Microsoft.ServiceBus.Messaging.BrokeredMessage})">
      <summary>Sends a set of brokered messages (for batch processing).</summary>
      <param name="messages">The collection of brokered messages to send.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.SendBatchAsync(System.Collections.Generic.IEnumerable{Microsoft.ServiceBus.Messaging.BrokeredMessage})">
      <summary>Asynchronously sends a set of brokered messages (for batch processing).</summary>
      <returns>The asynchronous operation.</returns>
      <param name="messages">The collection of brokered messages to send.</param>
    </member>
    <member name="T:Microsoft.ServiceBus.Messaging.QueueDescription">
      <summary>Represents the metadata description of the queue.</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.QueueDescription.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.Messaging.QueueDescription" /> class with the specified relative path.</summary>
      <param name="path">Path of the queue relative to the service namespace base address.</param>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.QueueDescription.AccessedAt">
      <summary>Gets the last time a message was sent, or the last time there was a receive request to this queue.</summary>
      <returns>The last time a message was sent, or the last time there was a receive request to this queue.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.QueueDescription.Authorization">
      <summary>Gets the <see cref="T:Microsoft.ServiceBus.Messaging.AuthorizationRules" />.</summary>
      <returns>The <see cref="T:Microsoft.ServiceBus.Messaging.AuthorizationRules" />.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.QueueDescription.AutoDeleteOnIdle">
      <summary>Gets or sets the <see cref="T:System.TimeSpan" /> idle interval after which the queue is automatically deleted. The minimum duration is 5 minutes.</summary>
      <returns>The auto delete on idle time span for the queue.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.QueueDescription.AvailabilityStatus">
      <summary>Gets the entity availability status for the queue.</summary>
      <returns>The entity availability status for the queue.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.QueueDescription.CreatedAt">
      <summary>Gets the exact time the message was created.</summary>
      <returns>The time the message was created.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.QueueDescription.DefaultMessageTimeToLive">
      <summary>Gets or sets the default message time to live value. This is the duration after which the message expires, starting from when the message is sent to Service Bus. This is the default value used when <see cref="P:Microsoft.ServiceBus.Messaging.BrokeredMessage.TimeToLive" /> is not set on a message itself.Messages older than their TimeToLive value will expire and no longer be retained in the message store. Subscribers will be unable to receive expired messages.A message can have a lower TimeToLive value than that specified here, but by default TimeToLive is set to <see cref="T:System.TimeSpan.MaxValue" />. Therefore, this property becomes the default time to live value applied to messages.</summary>
      <returns>The default message time to live value.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.QueueDescription.DuplicateDetectionHistoryTimeWindow">
      <summary>Gets or sets the <see cref="T:System.TimeSpan" /> structure that defines the duration of the duplicate detection history. The default value is 10 minutes.</summary>
      <returns>The <see cref="T:System.TimeSpan" /> structure that represents the time windows for duplication detection history.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.QueueDescription.EnableBatchedOperations">
      <summary>Gets or sets a value that indicates whether server-side batched operations are enabled.</summary>
      <returns>true if the batched operations are enabled; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.QueueDescription.EnableDeadLetteringOnMessageExpiration">
      <summary>Gets or sets a value that indicates whether this queue has dead letter support when a message expires.</summary>
      <returns>true if the queue has a dead letter support when a message expires; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.QueueDescription.EnableExpress">
      <summary>Gets or sets whether to enable the queue to be partitioned across multiple message brokers. An express queue holds a message in memory temporarily before writing it to persistent storage.</summary>
      <returns>true to enable the queue to be partitioned across multiple message brokers;; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.QueueDescription.EnablePartitioning">
      <summary>Gets or sets a value that indicates whether the queue to be partitioned across multiple message brokers is enabled. </summary>
      <returns>true if the queue to be partitioned across multiple message brokers is enabled; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.QueueDescription.ForwardDeadLetteredMessagesTo">
      <summary>Gets or sets the path to the recipient to which the dead lettered message is forwarded.</summary>
      <returns>The path to the recipient to which the dead lettered message is forwarded.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.QueueDescription.ForwardTo">
      <summary>Gets or sets the path to the recipient to which the message is forwarded.</summary>
      <returns>The path to the recipient to which the message is forwarded.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.QueueDescription.IsAnonymousAccessible">
      <summary>Gets or sets a value that indicates whether the message is anonymous accessible.</summary>
      <returns>true if the message is anonymous accessible; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.QueueDescription.LockDuration">
      <summary>Gets or sets the duration of a peek lock; that is, the amount of time that the message is locked for other receivers. The maximum value for <see cref="P:Microsoft.ServiceBus.Messaging.QueueDescription.LockDuration" /> is 5 minutes; the default value is 1 minute.</summary>
      <returns>The duration of the lock.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.QueueDescription.MaxDeliveryCount">
      <summary>Gets or sets the maximum delivery count. A message is automatically deadlettered after this number of deliveries.</summary>
      <returns>The number of maximum deliveries.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.QueueDescription.MaxSizeInMegabytes">
      <summary>Gets or sets the maximum size of the queue in megabytes, which is the size of memory allocated for the queue.</summary>
      <returns>The maximum size of the queue in megabytes.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.QueueDescription.MessageCount">
      <summary>Gets the number of messages in the queue.</summary>
      <returns>The number of messages.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.QueueDescription.MessageCountDetails">
      <summary>Gets message details for a queue.</summary>
      <returns>Returns <see cref="T:Microsoft.ServiceBus.Messaging.MessageCountDetails" /> with the number of active messages, dead letters, scheduled messages, messages transferred to other queues, subscriptions, or topics, and the number of messages transferred to the dead letter queue.</returns>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.QueueDescription.MessageTimeToLiveDefaultValue">
      <summary>Specifies the message time to live default value.</summary>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.QueueDescription.Path">
      <summary>Gets or sets the name of the queue.</summary>
      <returns>The name of the queue.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.QueueDescription.RequiresDuplicateDetection">
      <summary>Gets or sets the value indicating if this queue requires duplicate detection.</summary>
      <returns>true if this queue requires duplicate detection; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.QueueDescription.RequiresSession">
      <summary>Gets or sets a value that indicates whether the queue supports the concept of session.</summary>
      <returns>true if the receiver application can only receive from the queue through a <see cref="T:Microsoft.ServiceBus.Messaging.SessionReceiver" />; false if a queue cannot receive using <see cref="T:Microsoft.ServiceBus.Messaging.SessionReceiver" />.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.QueueDescription.SizeInBytes">
      <summary>Gets the size of the queue in bytes.</summary>
      <returns>The size of the queue.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.QueueDescription.Status">
      <summary>Gets or sets the current status of the queue (enabled or disabled). When an entity is disabled, that entity cannot send or receive messages.</summary>
      <returns>The current status of the queue.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.QueueDescription.SupportOrdering">
      <summary>Gets or sets a value that indicates whether the queue supports ordering.</summary>
      <returns>true if the queue supports ordering; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.QueueDescription.UpdatedAt">
      <summary>Gets the exact time the message has been updated.</summary>
      <returns>The time the message has been updated.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.QueueDescription.UserMetadata">
      <summary>Gets or sets the user metadata.</summary>
      <returns>The user metadata.</returns>
    </member>
    <member name="T:Microsoft.ServiceBus.Messaging.QuotaExceededException">
      <summary>The exception that is thrown for signaling quota exceeded errors.</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.QuotaExceededException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.Messaging.QuotaExceededException" /> class with serialized data.</summary>
      <param name="info">The object that contains the serialized information about the exception.</param>
      <param name="context">The contextual information about the source or destination.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.QuotaExceededException.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.Messaging.QuotaExceededException" /> class with a specified error message.</summary>
      <param name="message">The error message that explains the reason for the exception.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.QuotaExceededException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.Messaging.QuotaExceededException" /> class with a specified error message and a reference to the inner exception that is the cause of this exception.</summary>
      <param name="message">The error message that explains the reason for the exception.</param>
      <param name="innerException">The exception that is the cause of the current exception.</param>
    </member>
    <member name="T:Microsoft.ServiceBus.Messaging.ReceiveMode">
      <summary>Enumerates the values for the receive mode. The default is <see cref="F:Microsoft.ServiceBus.Messaging.ReceiveMode.PeekLock" />.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ReceiveMode.PeekLock">
      <summary>Specifies the PeekLock receive mode. This is the default value for <see cref="T:Microsoft.ServiceBus.Messaging.ReceiveMode" />.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ReceiveMode.ReceiveAndDelete">
      <summary>Specifies the ReceiveAndDelete receive mode.</summary>
    </member>
    <member name="T:Microsoft.ServiceBus.Messaging.ReceiverDisconnectedException">
      <summary>This exception is thrown if two or more <see cref="T:Microsoft.ServiceBus.Messaging.EventHubReceiver" /> objects connect to the same Event Hubs partition with different <paramref name="epoch" /> values.</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.ReceiverDisconnectedException.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.Messaging.ReceiverDisconnectedException" /> class with the specified exception message.</summary>
      <param name="message">The exception message.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.ReceiverDisconnectedException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.Messaging.ReceiverDisconnectedException" /> class with the specified exception message and inner exception text.</summary>
      <param name="message">The exception message.</param>
      <param name="innerException">The inner exception text.</param>
    </member>
    <member name="T:Microsoft.ServiceBus.Messaging.RelayDescription">
      <summary>Represents a relay description.</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.RelayDescription.#ctor(System.String,Microsoft.ServiceBus.RelayType)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.Messaging.RelayDescription" /> class.</summary>
      <param name="relayPath">The path of the relay.</param>
      <param name="type">The relay type.</param>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.RelayDescription.Authorization">
      <summary>Gets the <see cref="T:Microsoft.ServiceBus.Messaging.AuthorizationRules" />.</summary>
      <returns>The <see cref="T:Microsoft.ServiceBus.Messaging.AuthorizationRules" />.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.RelayDescription.CollectionName">
      <summary>Gets or sets the name of the collection associated with the relay.</summary>
      <returns>The name of the collection associated with the relay.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.RelayDescription.CreatedAt">
      <summary>Gets or sets the exact time the relay was created.</summary>
      <returns>The exact time the relay was created.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.RelayDescription.IsDynamic">
      <summary>Gets or sets whether the relay is dynamic.</summary>
      <returns>true if the relay is dynamic; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.RelayDescription.ListenerCount">
      <summary>Gets or sets the number of listeners for this relay.</summary>
      <returns>The number of listeners for this relay.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.RelayDescription.Path">
      <summary>Gets or sets the path of the relay.</summary>
      <returns>The path of the relay.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.RelayDescription.RelayType">
      <summary>Gets or sets the relay type.</summary>
      <returns>The relay type.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.RelayDescription.RequiresClientAuthorization">
      <summary>Gets or sets whether client authorization is needed for this relay.</summary>
      <returns>true if client authorization is needed for this relay; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.RelayDescription.RequiresTransportSecurity">
      <summary>Gets or sets whether transport security is needed for this relay.</summary>
      <returns>true if transport security is needed for this relay; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.RelayDescription.UpdatedAt">
      <summary>Gets or sets the date when the relay was updated.</summary>
      <returns>The date when the relay was updated.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.RelayDescription.UserMetadata">
      <summary>Gets or sets the user metadata associated with this instance.</summary>
      <returns>The user metadata associated with this instance.</returns>
    </member>
    <member name="T:Microsoft.ServiceBus.Messaging.RevokedPublisherDescription"></member>
    <member name="M:Microsoft.ServiceBus.Messaging.RevokedPublisherDescription.#ctor(System.String)"></member>
    <member name="P:Microsoft.ServiceBus.Messaging.RevokedPublisherDescription.Name"></member>
    <member name="T:Microsoft.ServiceBus.Messaging.RuleAction">
      <summary>Represents the filter actions which are allowed for the transformation of a message that have been matched by a filter expression.</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.RuleAction.Execute(Microsoft.ServiceBus.Messaging.BrokeredMessage)">
      <summary>Executes the filter action on the supplied BrokeredMessage.</summary>
      <returns>The modified BrokeredMessage after executing the rule action.</returns>
      <param name="message">Input BrokeredMessage.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.RuleAction.Preprocess">
      <summary>Preprocesses the <see cref="T:Microsoft.ServiceBus.Messaging.RuleAction" /> object.</summary>
      <returns>The preprocessed <see cref="T:Microsoft.ServiceBus.Messaging.RuleAction" /> object.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.RuleAction.RequiresPreprocessing">
      <summary>Gets a value that indicates whether the rule action requires preprocessing.</summary>
      <returns>true if the rule action requires preprocessing; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.RuleAction.System#Runtime#Serialization#IExtensibleDataObject#ExtensionData">
      <summary>Gets or sets the object that contains extra data.</summary>
      <returns>The object that contains extra data.</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.RuleAction.Validate">
      <summary>Validates the rule action against the grammar. </summary>
    </member>
    <member name="T:Microsoft.ServiceBus.Messaging.RuleActionException">
      <summary>The exception that is thrown for signaling filter action errors and is thrown when a filter related operation fails.</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.RuleActionException.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.Messaging.RuleActionException" /> class with the specified error message.</summary>
      <param name="message">The error message that explains the reason for the exception.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.RuleActionException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.Messaging.RuleActionException" /> class with the specified error message and a reference to the inner exception that is the cause of this exception.</summary>
      <param name="message">The error message that explains the reason for the exception.</param>
      <param name="innerException">The exception that is the cause of the current exception.</param>
    </member>
    <member name="T:Microsoft.ServiceBus.Messaging.RuleDescription">
      <summary>Represents a description of a rule.</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.RuleDescription.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.Messaging.RuleDescription" /> class with default values.</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.RuleDescription.#ctor(Microsoft.ServiceBus.Messaging.Filter)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.Messaging.RuleDescription" /> class with the specified filter expression.</summary>
      <param name="filter">The filter expression used to match messages.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.RuleDescription.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.Messaging.RuleDescription" /> class with the specified name.</summary>
      <param name="name">The name of the rule.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.RuleDescription.#ctor(System.String,Microsoft.ServiceBus.Messaging.Filter)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.Messaging.RuleDescription" /> class with the specified name and filter expression.</summary>
      <param name="name">The name of the rule.</param>
      <param name="filter">The filter expression used to match messages.</param>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.RuleDescription.Action">
      <summary>Gets or sets the action to perform if the message satisfies the filtering expression.</summary>
      <returns>The action to perform if the message satisfies the filtering expression.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.RuleDescription.CreatedAt">
      <summary>Gets creation time of the rule.</summary>
      <returns>The creation time of the rule.</returns>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.RuleDescription.DefaultRuleName">
      <summary>Specifies the name of the default rule.</summary>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.RuleDescription.Filter">
      <summary>Gets or sets the filter expression used to match messages.</summary>
      <returns>The filter expression used to match messages.</returns>
      <exception cref="T:System.ArgumentNullException">null (Nothing in Visual Basic) is assigned.</exception>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.RuleDescription.Name">
      <summary>Gets or sets the name of the rule.</summary>
      <returns>Returns a <see cref="T:System.String" /> Representing the name of the rule.</returns>
    </member>
    <member name="T:Microsoft.ServiceBus.Messaging.SendAvailabilityBacklogException">
      <summary>Represents the exception occurred during the sending of availability backlogs.</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SendAvailabilityBacklogException.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.Messaging.SendAvailabilityBacklogException" /> class.</summary>
      <param name="message">The message associated with the exception.</param>
    </member>
    <member name="T:Microsoft.ServiceBus.Messaging.SendAvailabilityMessagingException">
      <summary>Represents the exceptions occurred during the sending the availability for the messaging.</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SendAvailabilityMessagingException.#ctor(System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.Messaging.SendAvailabilityMessagingException" /> class.</summary>
      <param name="innerException">The error that caused the exception.</param>
    </member>
    <member name="T:Microsoft.ServiceBus.Messaging.SendAvailabilityPairedNamespaceOptions">
      <summary>Represents the options for the sending the availability of paired namespace.</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SendAvailabilityPairedNamespaceOptions.#ctor(Microsoft.ServiceBus.NamespaceManager,Microsoft.ServiceBus.Messaging.MessagingFactory)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.Messaging.SendAvailabilityPairedNamespaceOptions" /> class.</summary>
      <param name="secondaryNamespaceManager">The secondary namespace manager.</param>
      <param name="messagingFactory">The messaging factory.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SendAvailabilityPairedNamespaceOptions.#ctor(Microsoft.ServiceBus.NamespaceManager,Microsoft.ServiceBus.Messaging.MessagingFactory,System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.Messaging.SendAvailabilityPairedNamespaceOptions" /> class.</summary>
      <param name="secondaryNamespaceManager">The secondary namespace manager.</param>
      <param name="messagingFactory">The messaging factory.</param>
      <param name="backlogQueueCount">The number of backlog queue.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SendAvailabilityPairedNamespaceOptions.#ctor(Microsoft.ServiceBus.NamespaceManager,Microsoft.ServiceBus.Messaging.MessagingFactory,System.Int32,System.TimeSpan,System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.Messaging.SendAvailabilityPairedNamespaceOptions" /> class.</summary>
      <param name="secondaryNamespaceManager">The secondary namespace manager.</param>
      <param name="messagingFactory">The messaging factory.</param>
      <param name="backlogQueueCount">The number of backlog queue.</param>
      <param name="failoverInterval">The fail over interval.</param>
      <param name="enableSyphon">true to enable syphon; otherwise, false.</param>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.SendAvailabilityPairedNamespaceOptions.BacklogQueueCount">
      <summary>Gets or sets the number of backlog queues.</summary>
      <returns>The number of backlog queues.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.SendAvailabilityPairedNamespaceOptions.EnableSyphon">
      <summary>Gets or sets whether the syphon is enabled for this instance.</summary>
      <returns>true if the syphon is enabled for this instance; otherwise, false.</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SendAvailabilityPairedNamespaceOptions.MarkPathHealthy(System.String)">
      <summary>Marks a path as healthy.</summary>
      <param name="path">The path to be marked.</param>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.SendAvailabilityPairedNamespaceOptions.PingPrimaryInterval">
      <summary>Gets or sets the interval of pings.</summary>
      <returns>The interval of pings.</returns>
    </member>
    <member name="T:Microsoft.ServiceBus.Messaging.ServerBusyException">
      <summary>Represents the exception that is thrown when a server is overloaded with logical operations.</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.ServerBusyException.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.Messaging.ServerBusyException" /> class with a specified error message.</summary>
      <param name="message">The error message that explains the reason for the exception.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.ServerBusyException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.Messaging.ServerBusyException" /> class with a specified error message and a reference to the inner exception.</summary>
      <param name="message">The error message that describes the cause of the exception.</param>
      <param name="innerException">The inner exception that is the cause of the current exception.</param>
    </member>
    <member name="T:Microsoft.ServiceBus.Messaging.SessionCannotBeLockedException">
      <summary>Represents the exception that is thrown when a message cannot acquire lock on a session.</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SessionCannotBeLockedException.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.Messaging.SessionCannotBeLockedException" /> class with a specified error message.</summary>
      <param name="message">The error message that describes the cause of the exception.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SessionCannotBeLockedException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.Messaging.SessionCannotBeLockedException" /> class with a specified error message and a reference to the inner.</summary>
      <param name="message">The error message that describes the cause of the exception.</param>
      <param name="innerException">The inner exception that is the cause of the current exception.</param>
    </member>
    <member name="T:Microsoft.ServiceBus.Messaging.SessionHandlerOptions">
      <summary>Represents the options for the session handler.</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SessionHandlerOptions.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.Messaging.SessionHandlerOptions" /> class.</summary>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.SessionHandlerOptions.AutoComplete">
      <summary>Gets or sets whether the autocomplete option of the session handler is enabled.</summary>
      <returns>true if the autocomplete option of the session handler is enabled; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.SessionHandlerOptions.AutoRenewTimeout">
      <summary>Gets or sets the time needed before the session renew its state.</summary>
      <returns>The time needed before the session renew its state.</returns>
    </member>
    <member name="E:Microsoft.ServiceBus.Messaging.SessionHandlerOptions.ExceptionReceived">
      <summary>Occurs when an exception occurred during session handling.</summary>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.SessionHandlerOptions.MaxConcurrentSessions">
      <summary>Gets or sets the maximum number of existing sessions.</summary>
      <returns>The maximum number of existing sessions.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.SessionHandlerOptions.MessageWaitTimeout">
      <summary>Gets or sets the time needed before the message waiting expires.</summary>
      <returns>The time needed before the message waiting expires.</returns>
    </member>
    <member name="T:Microsoft.ServiceBus.Messaging.SessionLockLostException">
      <summary>The exception that is thrown to signal session lock lost errors.In the case of partitioned messaging entities, partitions sometimes move to achieve load balancing across Service Bus nodes; for example, when a node restarts or new nodes are added to share the load. When that happens, session locks can be lost, but messages are never lost. If a partition moves after the session is locked, then the acknowledge/complete message processing call fails, because the lock is lost. However, the message remains and you can try to read it again. Thus, you may receive a <see cref="T:Microsoft.ServiceBus.Messaging.SessionLockLostException" /> exception even though the message itself is not lost. In this case, you can retry the message processing operation.</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SessionLockLostException.#ctor(System.String)">
      <summary>Initializes a new instance of the SessionLockLostException class with a specified error message.</summary>
      <param name="message">The error message that explains the reason for the exception.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SessionLockLostException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the SessionLockLostException class  with a specified error message and a reference to the inner exception that is the cause of this exception.</summary>
      <param name="message">The error message that explains the reason for the exception.</param>
      <param name="innerException">The exception that is the cause of the current exception.</param>
    </member>
    <member name="T:Microsoft.ServiceBus.Messaging.SharedAccessAuthorizationRule">
      <summary>Defines the authorization rule for shared access operation.</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SharedAccessAuthorizationRule.#ctor(System.String,System.Collections.Generic.IEnumerable{Microsoft.ServiceBus.Messaging.AccessRights})">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.Messaging.SharedAccessAuthorizationRule" /> class.</summary>
      <param name="keyName">The authorization rule key name.</param>
      <param name="rights">The list of rights.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SharedAccessAuthorizationRule.#ctor(System.String,System.String,System.Collections.Generic.IEnumerable{Microsoft.ServiceBus.Messaging.AccessRights})">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.Messaging.SharedAccessAuthorizationRule" /> class.</summary>
      <param name="keyName">The authorization rule key name.</param>
      <param name="primaryKey">The primary key for the authorization rule.</param>
      <param name="rights">The list of rights.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SharedAccessAuthorizationRule.#ctor(System.String,System.String,System.String,System.Collections.Generic.IEnumerable{Microsoft.ServiceBus.Messaging.AccessRights})">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.Messaging.SharedAccessAuthorizationRule" /> class.</summary>
      <param name="keyName">The authorization rule key name.</param>
      <param name="primaryKey">The primary key for the authorization rule.</param>
      <param name="secondaryKey">The secondary key for the authorization rule.</param>
      <param name="rights">The list of rights.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SharedAccessAuthorizationRule.Equals(System.Object)">
      <summary>Determines whether the specified object is equal to the current object.</summary>
      <returns>true if the specified object is equal to the current object; otherwise, false.</returns>
      <param name="obj">The object to compare with the current object.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SharedAccessAuthorizationRule.GenerateRandomKey">
      <summary>Generates the random key for the authorization rule.</summary>
      <returns>The random key for the authorization rule.</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SharedAccessAuthorizationRule.GetHashCode">
      <summary>Returns the hash code for this instance.</summary>
      <returns>The hash code for this instance.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.SharedAccessAuthorizationRule.KeyName">
      <summary>Gets or sets the authorization rule key name.</summary>
      <returns>The authorization rule key name.</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SharedAccessAuthorizationRule.OnValidate">
      <summary>Checks the validity of the authorization rule.</summary>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.SharedAccessAuthorizationRule.PrimaryKey">
      <summary>Gets or sets the primary key for the authorization rule.</summary>
      <returns>The primary key for the authorization rule.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.SharedAccessAuthorizationRule.SecondaryKey">
      <summary>Gets or sets the secondary key for the authorization rule.</summary>
      <returns>The secondary key for the authorization rule.</returns>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.SharedAccessAuthorizationRule.Serializer">
      <summary>The serializer associated with the authorization rule.</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SharedAccessAuthorizationRule.ValidateRights(System.Collections.Generic.IEnumerable{Microsoft.ServiceBus.Messaging.AccessRights})">
      <summary>Checks the validity of the specified access rights.</summary>
      <param name="value">The access rights to check.</param>
    </member>
    <member name="T:Microsoft.ServiceBus.Messaging.SqlFilter">
      <summary>Represents a filter which is a composition of an expression and an action that is executed in the pub/sub pipeline.</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SqlFilter.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.Messaging.SqlFilter" /> class using the specified SQL expression.</summary>
      <param name="sqlExpression">The SQL expression.</param>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.SqlFilter.CompatibilityLevel">
      <summary>This property is reserved for future use. An integer value showing the compatibility level, currently hard-coded to 20.</summary>
      <returns>The compatibility level.</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SqlFilter.Match(Microsoft.ServiceBus.Messaging.BrokeredMessage)">
      <summary>Specifies whether a message matches against the current SQL expression.</summary>
      <returns>truea message matches against the current SQL expression; otherwise, false.</returns>
      <param name="message">The BrokeredMessage.</param>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.SqlFilter.Parameters">
      <summary>Sets the value of a filter expression.</summary>
      <returns>The value of a filter expression.</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SqlFilter.Preprocess">
      <summary>Gets the preprocessed filter expression.</summary>
      <returns>The preprocessed filter expression.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.SqlFilter.RequiresPreprocessing">
      <summary>Gets a value indicating whether the SQL filter expression requires preprocessing.</summary>
      <returns>true if the SQL filter expression requires preprocessing; otherwise, false. Currently always returns true.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.SqlFilter.SqlExpression">
      <summary>Gets the SQL expression.</summary>
      <returns>The SQL expression.</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SqlFilter.ToString">
      <summary>Returns a string representation of <see cref="T:Microsoft.ServiceBus.Messaging.SqlFilter" />.</summary>
      <returns>The string representation of <see cref="T:Microsoft.ServiceBus.Messaging.SqlFilter" />.</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SqlFilter.Validate">
      <summary>Validates the SQL expression.</summary>
    </member>
    <member name="T:Microsoft.ServiceBus.Messaging.SqlRuleAction">
      <summary>Represents set of actions written in SQL language-based syntax that is performed against a <see cref="T:Microsoft.ServiceBus.Messaging.BrokeredMessage" />.</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SqlRuleAction.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.Messaging.SqlRuleAction" /> class with the specified SQL expression.</summary>
      <param name="sqlExpression">The SQL expression.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SqlRuleAction.#ctor(System.String,System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.Messaging.SqlRuleAction" /> class with the specified SQL expression and compatibility level.</summary>
      <param name="sqlExpression">The SQL expression.</param>
      <param name="compatibilityLevel">Reserved for future use. An integer value showing compatibility level. Currently hard-coded to 20.</param>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.SqlRuleAction.CompatibilityLevel">
      <summary>This property is reserved for future use. An integer value showing the compatibility level, currently hard-coded to 20.</summary>
      <returns>An integer value showing the compatibility level</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SqlRuleAction.Execute(Microsoft.ServiceBus.Messaging.BrokeredMessage)">
      <summary>Executes the <see cref="T:Microsoft.ServiceBus.Messaging.SqlRuleAction" /> object.</summary>
      <returns>The processed <see cref="T:Microsoft.ServiceBus.Messaging.BrokeredMessage" />.</returns>
      <param name="message">The <see cref="T:Microsoft.ServiceBus.Messaging.BrokeredMessage" /> to which the <see cref="T:Microsoft.ServiceBus.Messaging.SqlRuleAction" /> will be applied.</param>
      <exception cref="T:System.InvalidOperationException">Thrown when the operation is not valid for the current state.</exception>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.SqlRuleAction.Parameters">
      <summary>Sets the value of a rule action.</summary>
      <returns>The value of a rule action.</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SqlRuleAction.Preprocess">
      <summary>Gets the pre-processed <see cref="T:Microsoft.ServiceBus.Messaging.RuleAction" /> expression.</summary>
      <returns>The preprocessed <see cref="T:Microsoft.ServiceBus.Messaging.RuleAction" /> expression.</returns>
      <exception cref="T:Microsoft.ServiceBus.Messaging.RuleActionException">Thrown when the rule action statement is invalid or exceeds maximum allowed number of actions.</exception>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.SqlRuleAction.RequiresPreprocessing">
      <summary>Gets a value indicating whether the <see cref="T:Microsoft.ServiceBus.Messaging.SqlRuleAction" /> requires preprocessing.</summary>
      <returns>true if the SQL rule action requires preprocessing; otherwise, false. Currently always returns true.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.SqlRuleAction.SqlExpression">
      <summary>Gets the SQL expression.</summary>
      <returns>The SQL expression.</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SqlRuleAction.ToString">
      <summary>Returns a string representation of <see cref="T:Microsoft.ServiceBus.Messaging.SqlRuleAction" />.</summary>
      <returns>The string representation of <see cref="T:Microsoft.ServiceBus.Messaging.SqlRuleAction" />.</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SqlRuleAction.Validate">
      <summary>Validates the SQL expression against the SQL 92 syntax and rules.</summary>
      <exception cref="T:Microsoft.ServiceBus.Messaging.RuleActionException">Thrown when the rule action statement is invalid or exceeds maximum allowed number of actions.</exception>
    </member>
    <member name="T:Microsoft.ServiceBus.Messaging.SubscriptionClient">
      <summary>Represents the anchor class used in run-time operations related to a topic subscription.</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.Abandon(System.Guid)">
      <summary>Discards the message and relinquishes the message lock ownership.</summary>
      <param name="lockToken">The lock token bound to the locked message instance to abandon.</param>
      <exception cref="T:System.TimeoutException">Thrown if the operation exceeded the timeout value set via <see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactorySettings.OperationTimeout" />.</exception>
      <exception cref="T:System.OperationCanceledException">Thrown if the client entity has been closed or aborted.</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.Abandon(System.Guid,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Discards the message and relinquishes the message lock ownership.</summary>
      <param name="lockToken">The lock token bound to the locked message instance to abandon.</param>
      <param name="propertiesToModify">A collection of property objects to be modified.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.AbandonAsync(System.Guid)">
      <summary>Asynchronously discards the message and relinquishes the message lock ownership.</summary>
      <returns>A task instance that represents the asynchronous abandon operation.</returns>
      <param name="lockToken">The lock token bound to the locked message instance to abandon.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.AbandonAsync(System.Guid,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Asynchronously discards the message and relinquishes the message lock ownership.</summary>
      <returns>A task instance that represents the asynchronous abandon operation.</returns>
      <param name="lockToken">The lock token bound to the locked message instance to abandon.</param>
      <param name="propertiesToModify">A collection of property objects to be modified.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.AcceptMessageSession">
      <summary>Accepts a message session that allows grouping of related messages for processing in a single transaction.</summary>
      <returns>A <see cref="T:Microsoft.ServiceBus.Messaging.MessageSession" /> that allows grouping of related messages for processing in a single transaction.</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.AcceptMessageSession(System.String)">
      <summary>Accepts a message session that allows grouping of related messages for processing in a single transaction using the given session identifier.</summary>
      <returns>A <see cref="T:Microsoft.ServiceBus.Messaging.MessageSession" /> that allows grouping of related messages for processing in a single transaction.</returns>
      <param name="sessionId">The session identifier of the message session.</param>
      <exception cref="T:System.ArgumentException">Thrown if sessionId is null, empty, or white spaces.</exception>
      <exception cref="T:System.TimeoutException">Thrown if the operation exceeded the timeout value set by <see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactorySettings.OperationTimeout" />.</exception>
      <exception cref="T:System.OperationCanceledException">Thrown if the client is already closed, aborted, or disposed.</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.AcceptMessageSession(System.String,System.TimeSpan)">
      <summary>Accepts a message session that allows grouping of related messages for processing in a single transaction using the given session identifier and wait time.</summary>
      <returns>A <see cref="T:Microsoft.ServiceBus.Messaging.MessageSession" /> that allows grouping of related messages for processing in a single transaction.</returns>
      <param name="sessionId">The session identifier of the message session.</param>
      <param name="serverWaitTime">The time span the server waits for processing messages before it times out.</param>
      <exception cref="T:System.ArgumentException">Thrown if sessionId is null, empty, or white spaces.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Thrown if serverWaitTime is not a positive TimeSpan value.</exception>
      <exception cref="T:System.TimeoutException">Thrown if the operation exceeded the timeout value set by <see cref="serverWaitTime" />.</exception>
      <exception cref="T:System.OperationCanceledException">Thrown if the client is already closed, aborted, or disposed.</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.AcceptMessageSession(System.TimeSpan)">
      <summary>Accepts a message session that allows grouping of related messages for processing in a single transaction using the specified server wait time.</summary>
      <returns>A <see cref="T:Microsoft.ServiceBus.Messaging.MessageSession" /> that allows grouping of related messages for processing in a single transaction.</returns>
      <param name="serverWaitTime">The time span the server waits for processing messages before it times out.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Thrown if serverWaitTime is not a positive TimeSpan value.</exception>
      <exception cref="T:System.TimeoutException">Thrown if the operation exceeded the timeout value set by <see cref="serverWaitTime" />.</exception>
      <exception cref="T:System.OperationCanceledException">Thrown if the client is already closed, aborted, or disposed.</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.AcceptMessageSessionAsync">
      <summary>Asynchronously accepts a message session that allows grouping of related messages for processing in a single transaction using the specified server wait time.</summary>
      <returns>A task instance that represents the asynchronous accept message session operation.</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.AcceptMessageSessionAsync(System.String)">
      <summary>Asynchronously accepts a message session that allows grouping of related messages for processing in a single transaction using the specified server wait time.</summary>
      <returns>A task instance that represents the asynchronous accept message session operation.</returns>
      <param name="sessionId">The session identifier of the message session.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.AcceptMessageSessionAsync(System.String,System.TimeSpan)">
      <summary>Asynchronously accepts a message session that allows grouping of related messages for processing in a single transaction using the specified server wait time.</summary>
      <returns>A task instance that represents the asynchronous accept message session operation.</returns>
      <param name="sessionId">The session identifier of the message session.</param>
      <param name="serverWaitTime">The time span the server waits for processing messages before it times out.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.AcceptMessageSessionAsync(System.TimeSpan)">
      <summary>Asynchronously accepts a message session that allows grouping of related messages for processing in a single transaction using the specified server wait time.</summary>
      <returns>A task instance that represents the asynchronous accept message session operation.</returns>
      <param name="serverWaitTime">The time span the server waits for processing messages before it times out.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.AddRule(Microsoft.ServiceBus.Messaging.RuleDescription)">
      <summary>Adds a new rule to the <see cref="T:Microsoft.ServiceBus.Messaging.Subscription" /> using the specified rule description.</summary>
      <param name="description">The rule description that provides metadata of the rule to add.</param>
      <exception cref="T:System.ArgumentNullException">Thrown if <paramref name="description" /> is null.</exception>
      <exception cref="T:System.ArgumentException">Thrown if <paramref name="description.Name" /> is null, white space empty or not in the right format.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Thrown if <paramref name="description.Name" /> length has exceeded the limit of 50 characters.</exception>
      <exception cref="T:System.TimeoutException">Thrown if the operation exceeded the timeout value set by <see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactorySettings.OperationTimeout" />.</exception>
      <exception cref="T:System.OperationCanceledException">Thrown if the client entity has been closed or aborted.</exception>
      <exception cref="T:Microsoft.ServiceBus.Messaging.MessagingEntityAlreadyExistsException">Thrown if the rule with the same name as <paramref name="description.Name" /> already existed for this subscription. </exception>
      <exception cref="T:Microsoft.ServiceBus.Messaging.MessagingEntityAlreadyExistsException">Thrown when an attempt is made to add another rule with same name as one that has already been added.</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.AddRule(System.String,Microsoft.ServiceBus.Messaging.Filter)">
      <summary>Adds a rule to the current subscription with the specified name and filter expression.</summary>
      <param name="ruleName">The name of the rule to add.</param>
      <param name="filter">The filter expression against which messages will be matched.</param>
      <exception cref="T:System.ArgumentNullException">Thrown if <paramref name="filter" /> is null.</exception>
      <exception cref="T:System.ArgumentException">Thrown if <paramref name="ruleName" /> is null, white space empty or not in the right format.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Thrown if <paramref name="ruleName" /> length has exceeded the limit of 50 characters.</exception>
      <exception cref="T:System.TimeoutException">Thrown if the operation exceeded the timeout value set via <see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactorySettings.OperationTimeout" />.</exception>
      <exception cref="T:System.OperationCanceledException">Thrown if the client entity has been closed or aborted.</exception>
      <exception cref="T:Microsoft.ServiceBus.Messaging.MessagingEntityAlreadyExistsException">Thrown if the rule with the same name as <paramref name="ruleName" /> already existed for this subscription.</exception>
      <exception cref="T:Microsoft.ServiceBus.Messaging.MessagingEntityAlreadyExistsException">Thrown when an attempt is made to add another rule with same name as one that has already been added.</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.AddRuleAsync(Microsoft.ServiceBus.Messaging.RuleDescription)">
      <summary>Asynchronously adds a new rule to the <see cref="T:Microsoft.ServiceBus.Messaging.Subscription" /> using the specified rule description.</summary>
      <returns>A task instance that represents the asynchronous add rule operation.</returns>
      <param name="description">The rule description that provides metadata of the rule to add.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.AddRuleAsync(System.String,Microsoft.ServiceBus.Messaging.Filter)">
      <summary>Asynchronously adds a rule to the current subscription with the specified name and filter expression.</summary>
      <returns>A task instance that represents the asynchronous add rule operation.</returns>
      <param name="ruleName">The name of the rule to add.</param>
      <param name="filter">The filter expression against which messages will be matched.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.BeginAbandon(System.Guid,System.AsyncCallback,System.Object)">
      <summary>Begins an asynchronous operation to abandon the message and relinquish its lock.</summary>
      <returns>An <see cref="T:System.IAsyncResult" /> that references the asynchronous operation to abandon the message and relinquish its lock.</returns>
      <param name="lockToken">The lock token bound to the locked message instance to abandon.</param>
      <param name="callback">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</param>
      <param name="state">A user-defined object that contains state information about the asynchronous operation.</param>
      <exception cref="T:System.TimeoutException">Thrown if the operation exceeded the timeout value set by <see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactorySettings.OperationTimeout" />.</exception>
      <exception cref="T:System.OperationCanceledException">Thrown if the client entity has been closed or aborted.</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.BeginAbandon(System.Guid,System.Collections.Generic.IDictionary{System.String,System.Object},System.AsyncCallback,System.Object)">
      <summary>Begins an asynchronous operation to abandon the message and relinquish its lock.</summary>
      <returns>An asynchronous operation to abandon the message and relinquish its lock.</returns>
      <param name="lockToken">The lock token bound to the locked message instance to abandon.</param>
      <param name="propertiesToModify">A collection of property objects to be modified.</param>
      <param name="callback">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</param>
      <param name="state">A user-defined object that contains state information about the asynchronous operation.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.BeginAcceptMessageSession(System.AsyncCallback,System.Object)">
      <summary>Begins an asynchronous operation to accept a message session.</summary>
      <returns>An <see cref="T:System.IAsyncResult" /> that references the asynchronous operation to accept a message session.</returns>
      <param name="callback">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</param>
      <param name="state">A user-defined object that contains state information about the asynchronous operation.</param>
      <exception cref="T:System.TimeoutException">Thrown if the operation exceeded the timeout value set by <see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactorySettings.OperationTimeout" /></exception>
      <exception cref="T:System.OperationCanceledException">Thrown if the client is already closed, aborted, or disposed.</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.BeginAcceptMessageSession(System.String,System.AsyncCallback,System.Object)">
      <summary>Begins an asynchronous operation to accept a message session.</summary>
      <returns>An <see cref="T:System.IAsyncResult" /> that references the asynchronous operation to accept a message session.</returns>
      <param name="sessionId">The session identifier of the message session.</param>
      <param name="callback">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</param>
      <param name="state">A user-defined object that contains state information about the asynchronous operation.</param>
      <exception cref="T:System.ArgumentException">Thrown if sessionId is null, empty, or white spaces.</exception>
      <exception cref="T:System.TimeoutException">Thrown if the operation exceeded the timeout value set by <see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactorySettings.OperationTimeout" />.</exception>
      <exception cref="T:System.OperationCanceledException">Thrown if the client is already closed, aborted, or disposed.</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.BeginAcceptMessageSession(System.String,System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Begins an asynchronous operation to accept a message session.</summary>
      <returns>An <see cref="T:System.IAsyncResult" /> that references the asynchronous operation to accept a message session.</returns>
      <param name="sessionId">The session identifier of the message session.</param>
      <param name="timeout">The time span the server waits for processing messages before it times out.</param>
      <param name="callback">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</param>
      <param name="state">A user-defined object that contains state information about the asynchronous operation.</param>
      <exception cref="T:System.ArgumentException">Thrown if sessionId is null, empty, or white spaces. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Thrown if serverWaitTime is not a positive TimeSpan value.</exception>
      <exception cref="T:System.TimeoutException">Thrown if the operation exceeded the timeout value set by <paramref name="serverWaitTime" />.</exception>
      <exception cref="T:System.OperationCanceledException">Thrown if the client is already closed, aborted, or disposed.</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.BeginAcceptMessageSession(System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Begins an asynchronous operation to accept a message session.</summary>
      <returns>An <see cref="T:System.IAsyncResult" /> that references the asynchronous operation to accept a message session.</returns>
      <param name="serverWaitTime">The time span the server waits for processing messages before it times out.</param>
      <param name="callback">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</param>
      <param name="state">A user-defined object that contains state information about the asynchronous operation.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Thrown if serverWaitTime is not a positive TimeSpan value.</exception>
      <exception cref="T:System.TimeoutException">Thrown if the operation exceeded the timeout value set by <see cref="serverWaitTime" />.</exception>
      <exception cref="T:System.OperationCanceledException">Thrown if the client is already closed, aborted, or disposed.</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.BeginAddRule(Microsoft.ServiceBus.Messaging.RuleDescription,System.AsyncCallback,System.Object)">
      <summary>Begins an asynchronous operation to add a new rule to the subscription.</summary>
      <returns>An <see cref="T:System.IAsyncResult" /> that references the asynchronous operation to add a new rule to the subscription.</returns>
      <param name="description">The rule description that provides metadata of the rule to add.</param>
      <param name="callback">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</param>
      <param name="state">A user-defined object that contains state information about the asynchronous operation.</param>
      <exception cref="T:System.ArgumentNullException">Thrown if <paramref name="description" /> is null.</exception>
      <exception cref="T:System.ArgumentException">Thrown if <paramref name="description.Name" /> is null, white space empty or not in the right format.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Thrown if <paramref name="description.Name" /> length has exceeded the limit of 50 characters.</exception>
      <exception cref="T:System.TimeoutException">Thrown if the operation exceeded the timeout value set via <see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactorySettings.OperationTimeout" />.</exception>
      <exception cref="T:System.OperationCanceledException">Thrown if the client entity has been closed or aborted.</exception>
      <exception cref="T:Microsoft.ServiceBus.Messaging.MessagingEntityAlreadyExistsException">Thrown if the rule with the same name as <paramref name="description.Name" /> already existed for this subscription.</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.BeginAddRule(System.String,Microsoft.ServiceBus.Messaging.Filter,System.AsyncCallback,System.Object)">
      <summary>Begins an asynchronous operation to add a new rule to the subscription.</summary>
      <returns>An <see cref="T:System.IAsyncResult" /> that references the asynchronous operation to add a new rule to the subscription.</returns>
      <param name="ruleName">The name of the rule to add.</param>
      <param name="filter">The filter expression against which messages will be matched.</param>
      <param name="callback">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</param>
      <param name="state">A user-defined object that contains state information about the asynchronous operation.</param>
      <exception cref="T:System.ArgumentNullException">Thrown if <paramref name="filter" /> is null.</exception>
      <exception cref="T:System.ArgumentException">Thrown if <paramref name="ruleName" /> is null, white space empty or not in the right format.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Thrown if <paramref name="ruleName" /> length has exceeded the limit of 50 characters.</exception>
      <exception cref="T:System.TimeoutException">Thrown if the operation exceeded the timeout value set via <see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactorySettings.OperationTimeout" />.</exception>
      <exception cref="T:System.OperationCanceledException">Thrown if the client entity has been closed or aborted.</exception>
      <exception cref="T:Microsoft.ServiceBus.Messaging.MessagingEntityAlreadyExistsException">Thrown if the rule with the same name as <paramref name="ruleName" /> already existed for this subscription.</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.BeginComplete(System.Guid,System.AsyncCallback,System.Object)">
      <summary>Begins an asynchronous operation to complete processing of a message.</summary>
      <returns>An <see cref="T:System.IAsyncResult" /> that references the asynchronous operation to complete processing of a message.</returns>
      <param name="lockToken">The lock token bound to the locked message instance.</param>
      <param name="callback">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</param>
      <param name="state">A user-defined object that contains state information about the asynchronous operation.</param>
      <exception cref="T:System.TimeoutException">Thrown if the operation exceeded the timeout value set b y <see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactorySettings.OperationTimeout" />.</exception>
      <exception cref="T:System.OperationCanceledException">Thrown if the client entity has been closed or aborted. </exception>
      <exception cref="T:Microsoft.ServiceBus.Messaging.MessageLockLostException">Thrown if the message represented by <paramref name="lockToken" /> has lost the message lock.</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.BeginCompleteBatch(System.Collections.Generic.IEnumerable{System.Guid},System.AsyncCallback,System.Object)">
      <summary>Begins an asynchronous operation to complete processing of a message.</summary>
      <returns>An asynchronous operation to complete processing of a message.</returns>
      <param name="lockTokens">The lock tokens bound to the locked message instance.</param>
      <param name="callback">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</param>
      <param name="state">A user-defined object that contains state information about the asynchronous operation.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.BeginDeadLetter(System.Guid,System.AsyncCallback,System.Object)">
      <summary>Begins an asynchronous operation to move a message to the dead letter queue.</summary>
      <returns>An <see cref="T:System.IAsyncResult" /> that references the asynchronous operation to move a message to the dead letter queue.</returns>
      <param name="lockToken">The lock token bound to the locked message instance.</param>
      <param name="callback">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</param>
      <param name="state">A user-defined object that contains state information about the asynchronous operation.</param>
      <exception cref="T:System.TimeoutException">Thrown if the operation exceeded the timeout value set by <see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactorySettings.OperationTimeout" />.</exception>
      <exception cref="T:System.OperationCanceledException">Thrown if the client entity has been closed or aborted.</exception>
      <exception cref="T:Microsoft.ServiceBus.Messaging.MessageLockLostException">Thrown if the message represented by <paramref name="lockToken" /> has lost the message lock.</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.BeginDeadLetter(System.Guid,System.Collections.Generic.IDictionary{System.String,System.Object},System.AsyncCallback,System.Object)">
      <summary>Begins an asynchronous operation to move a message to the dead letter queue.</summary>
      <returns>An asynchronous operation to move a message to the dead letter queue.</returns>
      <param name="lockToken">The lock token bound to the locked message instance.</param>
      <param name="propertiesToModify">A collection of property objects to be modified.</param>
      <param name="callback">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</param>
      <param name="state">A user-defined object that contains state information about the asynchronous operation.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.BeginDeadLetter(System.Guid,System.String,System.String,System.AsyncCallback,System.Object)">
      <summary>Begins an asynchronous operation to move a message to the dead letter queue.</summary>
      <returns>An <see cref="T:System.IAsyncResult" /> that references the asynchronous operation to move a message to the dead letter queue.</returns>
      <param name="lockToken">The lock token bound to the locked message instance.</param>
      <param name="deadLetterReason">The reason for deadlettering the message.</param>
      <param name="deadLetterErrorDescription">The error description for deadlettering the message.</param>
      <param name="callback">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</param>
      <param name="state">A user-defined object that contains state information about the asynchronous operation.</param>
      <exception cref="T:System.TimeoutException">Thrown if the operation exceeded the timeout value set by <see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactorySettings.OperationTimeout" />.</exception>
      <exception cref="T:System.OperationCanceledException">Thrown if the client entity has been closed or aborted.</exception>
      <exception cref="T:Microsoft.ServiceBus.Messaging.MessageLockLostException">Thrown if the message represented by <paramref name="lockToken" /> has lost the message lock.</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.BeginDefer(System.Guid,System.AsyncCallback,System.Object)">
      <summary>Begins an asynchronous operation to suspend processing of a message.</summary>
      <returns>An <see cref="T:System.IAsyncResult" /> that references the asynchronous operation to suspend processing of a message.</returns>
      <param name="lockToken">The lock token bound to the locked message instance.</param>
      <param name="callback">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</param>
      <param name="state">A user-defined object that contains state information about the asynchronous operation.</param>
      <exception cref="T:System.TimeoutException">Thrown if the operation exceeded the timeout value set via <see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactorySettings.OperationTimeout" />.</exception>
      <exception cref="T:System.OperationCanceledException">Thrown if the client entity has been closed or aborted.</exception>
      <exception cref="T:Microsoft.ServiceBus.Messaging.MessageLockLostException">Thrown if the message represented by <paramref name="lockToken" /> has lost the message lock.</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.BeginDefer(System.Guid,System.Collections.Generic.IDictionary{System.String,System.Object},System.AsyncCallback,System.Object)">
      <summary>Begins an asynchronous operation to suspend processing of a message.</summary>
      <returns>An asynchronous operation to suspend processing of a message.</returns>
      <param name="lockToken">The lock token bound to the locked message instance.</param>
      <param name="propertiesToModify">A collection of property objects to be modified.</param>
      <param name="callback">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</param>
      <param name="state">A user-defined object that contains state information about the asynchronous operation.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.BeginGetMessageSessions(System.AsyncCallback,System.Object)">
      <summary>Begins an asynchronous operation to get a message session.</summary>
      <returns>An asynchronous operation to get a message session.</returns>
      <param name="callback">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</param>
      <param name="state">A user-defined object that contains state information about the asynchronous operation.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.BeginGetMessageSessions(System.DateTime,System.AsyncCallback,System.Object)">
      <summary>Begins an asynchronous operation to get a message session.</summary>
      <returns>An asynchronous operation to get a message session.</returns>
      <param name="lastUpdatedTime">The time the session was last updated.</param>
      <param name="callback">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</param>
      <param name="state">A user-defined object that contains state information about the asynchronous operation.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.BeginPeek(System.AsyncCallback,System.Object)">
      <summary>Begins an asynchronous operation to return without removing the first message in the queue.</summary>
      <returns>An asynchronous operation to peek a message in the queue.</returns>
      <param name="callback">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</param>
      <param name="state">A user-defined object that contains state information about the asynchronous operation.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.BeginPeek(System.Int64,System.AsyncCallback,System.Object)">
      <summary>Begins an asynchronous operation to return without removing the first message in the queue.</summary>
      <returns>An asynchronous operation to peek a message in the queue.</returns>
      <param name="fromSequenceNumber">The starting point from which to browse a message.</param>
      <param name="callback">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</param>
      <param name="state">A user-defined object that contains state information about the asynchronous operation.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.BeginPeekBatch(System.Int32,System.AsyncCallback,System.Object)">
      <summary>Begins an asynchronous operation to peek a batch.</summary>
      <returns>An asynchronous operation to peek a batch.</returns>
      <param name="messageCount">The number of messages in a batch.</param>
      <param name="callback">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</param>
      <param name="state">A user-defined object that contains state information about the asynchronous operation.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.BeginPeekBatch(System.Int64,System.Int32,System.AsyncCallback,System.Object)">
      <summary>Begins an asynchronous operation to peek a batch.</summary>
      <returns>An asynchronous operation to peek a batch.</returns>
      <param name="fromSequenceNumber">The starting point from which to browse a message.</param>
      <param name="messageCount">The number of messages in a batch.</param>
      <param name="callback">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</param>
      <param name="state">A user-defined object that contains state information about the asynchronous operation.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.BeginReceive(System.AsyncCallback,System.Object)">
      <summary>Begins an asynchronous operation to receive a message.</summary>
      <returns>An <see cref="T:System.IAsyncResult" /> that references the asynchronous operation to receive a message.</returns>
      <param name="callback">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</param>
      <param name="state">A user-defined object that contains state information about the asynchronous operation.</param>
      <exception cref="T:System.OperationCanceledException">Thrown if the client entity has been closed or aborted.</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.BeginReceive(System.Int64,System.AsyncCallback,System.Object)">
      <summary>Begins an asynchronous operation to receive a message.</summary>
      <returns>An <see cref="T:System.IAsyncResult" /> that references the asynchronous operation to receive a message.</returns>
      <param name="sequenceNumber">The unique number assigned to a message by the Service Bus.</param>
      <param name="callback">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</param>
      <param name="state">A user-defined object that contains state information about the asynchronous operation.</param>
      <exception cref="T:System.OperationCanceledException">Thrown if the client entity has been closed or aborted.</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.BeginReceive(System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Begins an asynchronous operation to receive a message.</summary>
      <returns>An <see cref="T:System.IAsyncResult" /> that references the asynchronous operation to receive a message.</returns>
      <param name="serverWaitTime">The time span the server waits for processing messages before it times out.</param>
      <param name="callback">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</param>
      <param name="state">A user-defined object that contains state information about the asynchronous operation.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Thrown if the <paramref name="serverWaitTime" /> is negative.</exception>
      <exception cref="T:System.OperationCanceledException">Thrown if the client entity has been closed or aborted.</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.BeginReceiveBatch(System.Collections.Generic.IEnumerable{System.Int64},System.AsyncCallback,System.Object)">
      <summary>Begins an asynchronous operation to receive a batch.</summary>
      <returns>An <see cref="T:System.IAsyncResult" /> that references the asynchronous operation to receive a message.</returns>
      <param name="sequenceNumbers">The unique number assigned to a message by the Service Bus.</param>
      <param name="callback">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</param>
      <param name="state">A user-defined object that contains state information about the asynchronous operation.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.BeginReceiveBatch(System.Int32,System.AsyncCallback,System.Object)">
      <summary>Begins an asynchronous operation to receive a batch.</summary>
      <returns>An <see cref="T:System.IAsyncResult" /> that references the asynchronous operation to receive a message.</returns>
      <param name="messageCount">The maximum number of messages to receive in a batch.</param>
      <param name="callback">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</param>
      <param name="state">A user-defined object that contains state information about the asynchronous operation.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.BeginReceiveBatch(System.Int32,System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Begins an asynchronous operation to receive a batch.</summary>
      <returns>An <see cref="T:System.IAsyncResult" /> that references the asynchronous operation to receive a message.</returns>
      <param name="messageCount">The maximum number of messages to receive in a batch.</param>
      <param name="serverWaitTime">The waiting time.</param>
      <param name="callback">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</param>
      <param name="state">A user-defined object that contains state information about the asynchronous operation.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.BeginRemoveRule(System.String,System.AsyncCallback,System.Object)">
      <summary>Begins an asynchronous remove rule action.</summary>
      <returns>An <see cref="T:System.IAsyncResult" /> object that references the asynchronous <see cref="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.RemoveRule(System.String)" />.</returns>
      <param name="ruleName">The name of the rule.</param>
      <param name="callback">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</param>
      <param name="state">A user-defined object that contains information about the receive operation. This object is passed to the <see cref="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.EndRemoveRule(System.IAsyncResult)" /> delegate when the operation is complete.</param>
      <exception cref="MessagingEntityNotFoundException">Thrown when rule does not exist.</exception>
      <exception cref="T:System.ArgumentException">Thrown if <paramref name="description.Name" /> is null, white space empty or not in the right format.</exception>
      <exception cref="T:System.TimeoutException">ThrowN if the operation exceeded the timeout value set via <see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactorySettings.OperationTimeout" />.</exception>
      <exception cref="T:System.OperationCanceledException">Thrown if the client entity has been closed or aborted.</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.Complete(System.Guid)">
      <summary>Completes processing of a message.</summary>
      <param name="lockToken">The lock token bound to the locked message instance.</param>
      <exception cref="T:System.TimeoutException">Thrown if the operation exceeded the timeout value set by <see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactorySettings.OperationTimeout" />.</exception>
      <exception cref="T:System.OperationCanceledException">Thrown if the client entity has been closed or aborted.</exception>
      <exception cref="T:Microsoft.ServiceBus.Messaging.MessageLockLostException">Thrown if the message represented by <paramref name="lockToken" /> has lost the message lock.</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.CompleteAsync(System.Guid)">
      <summary>Asynchronously completes processing of a message.</summary>
      <returns>A task instance that represents the asynchronous complete operation.</returns>
      <param name="lockToken">The lock token bound to the locked message instance.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.CompleteBatch(System.Collections.Generic.IEnumerable{System.Guid})">
      <summary>Completes processing of a batch.</summary>
      <param name="lockTokens">The lock tokens bound to the locked message instance.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.CompleteBatchAsync(System.Collections.Generic.IEnumerable{System.Guid})">
      <summary>Asynchronously completes processing of a batch.</summary>
      <returns>A task instance that represents the asynchronous complete batch operation.</returns>
      <param name="lockTokens">The lock tokens bound to the locked message instance.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.Create(System.String,System.String)">
      <summary>Creates a new copy of <see cref="T:Microsoft.ServiceBus.Messaging.SubscriptionClient" /> with specified name and topic path.</summary>
      <returns>A new copy of <see cref="T:Microsoft.ServiceBus.Messaging.SubscriptionClient" />.</returns>
      <param name="topicPath">The full pathname of the topic.</param>
      <param name="name">The name of the subscription.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.Create(System.String,System.String,Microsoft.ServiceBus.Messaging.ReceiveMode)">
      <summary>Creates a new copy of <see cref="T:Microsoft.ServiceBus.Messaging.SubscriptionClient" /> with specified name, topic path and mode.</summary>
      <returns>A new copy of <see cref="T:Microsoft.ServiceBus.Messaging.SubscriptionClient" />.</returns>
      <param name="topicPath">The full pathname of the topic.</param>
      <param name="name">The name of the subscription.</param>
      <param name="mode">The message receive mode.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.CreateFromConnectionString(System.String,System.String,System.String)">
      <summary>Creates a new copy of <see cref="T:Microsoft.ServiceBus.Messaging.SubscriptionClient" /> from a connection string with specified topic path and name.</summary>
      <returns>A new copy of <see cref="T:Microsoft.ServiceBus.Messaging.SubscriptionClient" />.</returns>
      <param name="connectionString">The connection string.</param>
      <param name="topicPath">The full pathname of the topic.</param>
      <param name="name">The name of the subscription.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.CreateFromConnectionString(System.String,System.String,System.String,Microsoft.ServiceBus.Messaging.ReceiveMode)">
      <summary>Creates a new copy of <see cref="T:Microsoft.ServiceBus.Messaging.SubscriptionClient" /> from a connection string with specified topic path, name and mode.</summary>
      <returns>A new copy of <see cref="T:Microsoft.ServiceBus.Messaging.SubscriptionClient" />.</returns>
      <param name="connectionString">The connection string.</param>
      <param name="topicPath">The full pathname of the topic.</param>
      <param name="name">The name of the subscription.</param>
      <param name="mode">The message receive mode.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.DeadLetter(System.Guid)">
      <summary>Moves the undelivered message to the dead letter queue.</summary>
      <param name="lockToken">The lock token bound to the locked message instance.</param>
      <exception cref="T:System.TimeoutException">Thrown if the operation exceeded the timeout value set by <see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactorySettings.OperationTimeout" />.</exception>
      <exception cref="T:System.OperationCanceledException">Thrown if the client entity has been closed or aborted.</exception>
      <exception cref="T:Microsoft.ServiceBus.Messaging.MessageLockLostException">Thrown if the message represented by <paramref name="lockToken" /> has lost the message lock.</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.DeadLetter(System.Guid,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Moves the undelivered message to the dead letter queue.</summary>
      <param name="lockToken">The lock token bound to the locked message instance.</param>
      <param name="propertiesToModify">The properties to modify.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.DeadLetter(System.Guid,System.String,System.String)">
      <summary>Moves the undelivered message to the dead letter queue.</summary>
      <param name="lockToken">The lock token bound to the locked message instance.</param>
      <param name="deadLetterReason">The reason for deadlettering the message.</param>
      <param name="deadLetterErrorDescription">The error description for deadlettering the message.</param>
      <exception cref="T:System.TimeoutException">Thrown if the operation exceeded the timeout value set by <see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactorySettings.OperationTimeout" />.</exception>
      <exception cref="T:System.OperationCanceledException">Thrown if the client entity has been closed or aborted.</exception>
      <exception cref="T:Microsoft.ServiceBus.Messaging.MessageLockLostException">Thrown if the message represented by <paramref name="lockToken" /> has lost the message lock.</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.DeadLetterAsync(System.Guid)">
      <summary>Asynchronously moves the undelivered message to the dead letter queue.</summary>
      <returns>A task instance that represents the asynchronous deadletter operation.</returns>
      <param name="lockToken">The lock token bound to the locked message instance.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.DeadLetterAsync(System.Guid,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Asynchronously moves the undelivered message to the dead letter queue.</summary>
      <returns>A task instance that represents the asynchronous deadletter operation.</returns>
      <param name="lockToken">The lock token bound to the locked message instance.</param>
      <param name="propertiesToModify">The properties to modify.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.DeadLetterAsync(System.Guid,System.String,System.String)">
      <summary>Asynchronously moves the undelivered message to the dead letter queue.</summary>
      <returns>A task instance that represents the asynchronous deadletter operation.</returns>
      <param name="lockToken">The lock token bound to the locked message instance.</param>
      <param name="deadLetterReason">The reason for deadlettering the message.</param>
      <param name="deadLetterErrorDescription">The error description for deadlettering the message.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.Defer(System.Guid)">
      <summary>Suspends the processing of a message.</summary>
      <param name="lockToken">The lock token bound to the locked message instance.</param>
      <exception cref="T:System.TimeoutException">Thrown if the operation exceeded the timeout value set by <see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactorySettings.OperationTimeout" />.</exception>
      <exception cref="T:System.OperationCanceledException">Thrown if the client entity has been closed or aborted.</exception>
      <exception cref="T:Microsoft.ServiceBus.Messaging.MessageLockLostException">Thrown if the message represented by <paramref name="lockToken" /> has lost the message lock.</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.Defer(System.Guid,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Suspends the processing of a message.</summary>
      <param name="lockToken">The lock token bound to the locked message instance.</param>
      <param name="propertiesToModify">The properties to modify.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.DeferAsync(System.Guid)">
      <summary>Asynchronously suspends the processing of a message.</summary>
      <returns>A task instance that represents the asynchronous defer operation.</returns>
      <param name="lockToken">The lock token bound to the locked message instance.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.DeferAsync(System.Guid,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Asynchronously suspends the processing of a message.</summary>
      <returns>A task instance that represents the asynchronous defer operation.</returns>
      <param name="lockToken">The lock token bound to the locked message instance.</param>
      <param name="propertiesToModify">The properties to modify.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.EndAbandon(System.IAsyncResult)">
      <summary>Finishes an asynchronous operation to abandon the message and relinquish its lock.</summary>
      <param name="result">An <see cref="T:System.IAsyncResult" /> that represents the status of the asynchronous abandon message operation.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.EndAcceptMessageSession(System.IAsyncResult)">
      <summary>Finishes an asynchronous operation to accept a message session that allows grouping of related messages for processing in a single transaction.</summary>
      <returns>The <see cref="T:Microsoft.ServiceBus.Messaging.MessageSession" /> that allows grouping of related messages for processing in a single transaction.</returns>
      <param name="result">An <see cref="T:System.IAsyncResult" /> that represents the status of the asynchronous accept message session operation.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.EndAddRule(System.IAsyncResult)">
      <summary>Ends an asynchronous add rule operation.</summary>
      <param name="result">An <see cref="T:System.IAsyncResult" /> that references the <see cref="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.AddRule(Microsoft.ServiceBus.Messaging.RuleDescription)" />.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.EndComplete(System.IAsyncResult)">
      <summary>Finishes an asynchronous operation to complete processing of a message.</summary>
      <param name="result">An <see cref="T:System.IAsyncResult" /> that represents the status of the asynchronous complete message processing operation.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.EndCompleteBatch(System.IAsyncResult)">
      <summary>Finishes an asynchronous operation to complete processing of a batch.</summary>
      <param name="result">An <see cref="T:System.IAsyncResult" /> that represents the status of the asynchronous complete message processing operation.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.EndDeadLetter(System.IAsyncResult)">
      <summary>Finishes an asynchronous operation to move message to the dead letter queue.</summary>
      <param name="result">An <see cref="T:System.IAsyncResult" /> that represents the status of the asynchronous operation to move message to the dead letter queue.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.EndDefer(System.IAsyncResult)">
      <summary>Finishes an asynchronous operation to suspend processing of a message.</summary>
      <param name="result">An <see cref="T:System.IAsyncResult" /> that represents the status of the asynchronous operation to suspend processing of a message.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.EndGetMessageSessions(System.IAsyncResult)">
      <summary>Finishes an asynchronous operation to get the processing of a message.</summary>
      <returns>An asynchronous operation to get the processing of a message.</returns>
      <param name="result">An <see cref="T:System.IAsyncResult" /> that represents the status of the asynchronous operation to suspend processing of a message.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.EndPeek(System.IAsyncResult)">
      <summary>Finishes an asynchronous peek operation.</summary>
      <returns>The first message in the queue.</returns>
      <param name="result">An <see cref="T:System.IAsyncResult" /> that represents the status of the asynchronous peek operation.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.EndPeekBatch(System.IAsyncResult)">
      <summary>Finishes an asynchronous peek operation on a batch of messages.</summary>
      <returns>The collection of first messages in the batch.</returns>
      <param name="result">An <see cref="T:System.IAsyncResult" /> that represents the status of the asynchronous peek batch operation.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.EndReceive(System.IAsyncResult)">
      <summary>Finishes an asynchronous operation to receive a message.</summary>
      <returns>The <see cref="T:Microsoft.ServiceBus.Messaging.BrokeredMessage" /> that represents the received message.</returns>
      <param name="result">An <see cref="T:System.IAsyncResult" /> that represents the status of the asynchronous operation to receive a message.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.EndReceiveBatch(System.IAsyncResult)">
      <summary>Finishes an asynchronous operation to receive a batch.</summary>
      <returns>An asynchronous operation to receive a batch.</returns>
      <param name="result">An <see cref="T:System.IAsyncResult" /> that represents the status of the asynchronous operation to receive a message.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.EndRemoveRule(System.IAsyncResult)">
      <summary>Ends an asynchronous remove rule operation.</summary>
      <param name="result">An <see cref="T:System.IAsyncResult" /> object that references the <see cref="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.RemoveRule(System.String)" />.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.FormatDeadLetterPath(System.String,System.String)">
      <summary>Builds a format name deadletter path using the specified topic path and subscription name.</summary>
      <returns>The <see cref="T:System.String" /> resulted from building the format name deadletter path using the specified topic path and subscription name.</returns>
      <param name="topicPath">The full pathname of the topic.</param>
      <param name="subscriptionName">The name of the subscription.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.FormatSubscriptionPath(System.String,System.String)">
      <summary>Builds a format name subscription path using the specified topic path and subscription name.</summary>
      <returns>The <see cref="T:System.String" /> resulted from building the format name subscription path using the specified topic path and subscription name.</returns>
      <param name="topicPath">The full pathname of the topic.</param>
      <param name="subscriptionName">The name of the subscription.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.GetMessageSessions">
      <summary>Gets a message session that allows grouping of related messages for processing in a single transaction.</summary>
      <returns>A message session that allows grouping of related messages for processing in a single transaction.</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.GetMessageSessions(System.DateTime)">
      <summary>Retrieves all message sessions whose session state was updated since <paramref name="lastUpdatedTime" />.</summary>
      <returns>A message session that allows grouping of related messages for processing in a single transaction.</returns>
      <param name="lastUpdatedTime">The time the session was last updated.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.GetMessageSessionsAsync">
      <summary>Asynchronously gets a message session that allows grouping of related messages for processing in a single transaction.</summary>
      <returns>A task instance that represents the asynchronous get message sessions operation.</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.GetMessageSessionsAsync(System.DateTime)">
      <summary>Asynchronously gets a message session that allows grouping of related messages for processing in a single transaction.</summary>
      <returns>A task instance that represents the asynchronous get message sessions operation.</returns>
      <param name="lastUpdatedTime">The time the session was last updated.</param>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.SubscriptionClient.MessagingFactory">
      <summary>Gets the messaging factory used to create this subscription client.</summary>
      <returns>The messaging factory used to create this subscription client.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.SubscriptionClient.Mode">
      <summary>Gets the message receive mode when processing the received message.</summary>
      <returns>The message <see cref="T:Microsoft.ServiceBus.Messaging.ReceiveMode" /> when processing the received message.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.SubscriptionClient.Name">
      <summary>Gets the name of the subscription.</summary>
      <returns>The name of the subscription.</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.OnAbort">
      <summary>Executes the abort action.</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.OnBeginAcceptMessageSession(System.String,Microsoft.ServiceBus.Messaging.ReceiveMode,System.TimeSpan,System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Executes upon calling the BeginAcceptMessageSession operation.</summary>
      <returns>An <see cref="T:System.IAsyncResult" /> that references the asynchronous operation to accept a message session.</returns>
      <param name="sessionId">The session identifier of the message session.</param>
      <param name="receiveMode">The receive mode when processing with the receive messages.</param>
      <param name="serverWaitTime">The time span the server waits for processing messages before it times out</param>
      <param name="timeout">The time span the server waits for processing messages before it times out.</param>
      <param name="callback">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</param>
      <param name="state">A user-defined object that contains state information about the asynchronous operation.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.OnBeginAddRule(Microsoft.ServiceBus.Messaging.RuleDescription,System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Executes upon calling the BeginAddRule operation.</summary>
      <returns>An <see cref="T:System.IAsyncResult" /> that references the asynchronous operation to add a new rule to the subscription.</returns>
      <param name="description">The rule description that provides metadata of the rule to add.</param>
      <param name="timeout">The time span this operation waits before it times out.</param>
      <param name="callback">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</param>
      <param name="state">A user-defined object that contains state information about the asynchronous operation.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Executes the begin close action.</summary>
      <returns>An <see cref="T:System.IAsyncResult" />that references the asynchronous BeginClose.</returns>
      <param name="timeout">The wait time before the operation times out.</param>
      <param name="callback">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</param>
      <param name="state">A user-defined object that contains information about the receive operation. This object is passed to the BeginClose delegate when the operation is complete.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.OnBeginCreateReceiver(Microsoft.ServiceBus.Messaging.ReceiveMode,System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Executes the begin create receiver action.</summary>
      <returns>An <see cref="T:System.IAsyncResult" /> that references the asynchronous <see cref="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.CreateReceiver(Microsoft.ServiceBus.Messaging.ReceiveMode)" />.</returns>
      <param name="receiveMode">The message <see cref="T:Microsoft.ServiceBus.Messaging.ReceiveMode" />.</param>
      <param name="timeout">The wait time before the operation times out.</param>
      <param name="callback">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</param>
      <param name="state">A user-defined object that contains information about the receive operation. This object is passed to the <see cref="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.EndCreateReceiver(System.IAsyncResult)" /> delegate when the operation is complete.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.OnBeginCreateReceiver(System.String,System.String,Microsoft.ServiceBus.Messaging.ReceiveMode,System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Executes the begin create receiver action.</summary>
      <returns>An <see cref="T:System.IAsyncResult" /> that references the asynchronous <see cref="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.CreateReceiver(System.String,Microsoft.ServiceBus.Messaging.ReceiveMode)" />. </returns>
      <param name="subQueuePath">The path of the subqueue.</param>
      <param name="subQueueName">The name of the subqueue.</param>
      <param name="receiveMode">The message <see cref="T:Microsoft.ServiceBus.Messaging.ReceiveMode" />.</param>
      <param name="timeout">The wait time before the operation times out.</param>
      <param name="callback">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</param>
      <param name="state">A user-defined object that contains information about the receive operation. This object is passed to the <see cref="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.EndCreateReceiver(System.IAsyncResult)" /> delegate when the operation is complete.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.OnBeginGetMessageSessions(System.DateTime,System.AsyncCallback,System.Object)">
      <summary>Executes upon calling the BeginGetMessageSessions operation.</summary>
      <returns>An <see cref="T:System.IAsyncResult" /> that references the asynchronous operation to add a new rule to the subscription.</returns>
      <param name="lastUpdatedTime">The time the session was last updated.</param>
      <param name="callback">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</param>
      <param name="state">A user-defined object that contains state information about the asynchronous operation.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.OnBeginRemoveRule(System.String,System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Begins removing a <see cref="T:Microsoft.ServiceBus.Messaging.Rule" /> from a <see cref="T:Microsoft.ServiceBus.Messaging.Subscription" /> through the run-time client protocol.</summary>
      <returns>An <see cref="T:System.IAsyncResult" /> that references the asynchronous <see cref="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.RemoveRule(System.String)" />.</returns>
      <param name="ruleName">The name of the rule to remove.</param>
      <param name="timeout">The wait time before the operation times out.</param>
      <param name="callback">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</param>
      <param name="state">A user-defined object that contains information about the receive operation. This object is passed to the <see cref="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.RemoveRule(System.String)" /> delegate when the operation is complete.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.OnBeginRemoveRulesByTag(System.String,System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Begins removing a <see cref="T:Microsoft.ServiceBus.Messaging.Rule" /> from a <see cref="T:Microsoft.ServiceBus.Messaging.Subscription" /> through the run-time client protocol using a tag.</summary>
      <returns>An <see cref="T:System.IAsyncResult" /> that references the asynchronous operation to add a new rule to the subscription.</returns>
      <param name="tag">The tag to be used.</param>
      <param name="timeout">The wait time before the operation times out.</param>
      <param name="callback">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</param>
      <param name="state">A user-defined object that contains information about the receive operation. This object is passed to the <see cref="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.RemoveRule(System.String)" /> delegate when the operation is complete.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.OnClose(System.TimeSpan)">
      <summary>Executes the close action.</summary>
      <param name="timeout">The wait time before the operation times out.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.OnEndAcceptMessageSession(System.IAsyncResult)">
      <summary>Executes upon calling the EndAcceptMessageSession operation.</summary>
      <returns>The <see cref="T:Microsoft.ServiceBus.Messaging.MessageSession" /> that allows grouping of related messages for processing in a single transaction.</returns>
      <param name="result">An <see cref="T:System.IAsyncResult" /> that represents the status of the asynchronous accept message session operation.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.OnEndAddRule(System.IAsyncResult)">
      <summary>Ends the asynchronous call to <see cref="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.OnBeginAddRule(Microsoft.ServiceBus.Messaging.RuleDescription,System.TimeSpan,System.AsyncCallback,System.Object)" />.</summary>
      <param name="result">An <see cref="T:System.IAsyncResult" /> from a <see cref="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.OnBeginAddRule(Microsoft.ServiceBus.Messaging.RuleDescription,System.TimeSpan,System.AsyncCallback,System.Object)" />.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.OnEndClose(System.IAsyncResult)">
      <summary>Executes the end close action.</summary>
      <param name="result">An <see cref="T:System.IAsyncResult" /> that references the asynchronous BeginClose.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.OnEndCreateReceiver(System.IAsyncResult)">
      <summary>Executes the end create receiver action.</summary>
      <returns>A newly-created <see cref="T:Microsoft.ServiceBus.Messaging.MessageReceiver" /> object.</returns>
      <param name="result">An <see cref="T:System.IAsyncResult" /> object that references the <see cref="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.EndCreateReceiver(System.IAsyncResult)" />.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.OnEndGetMessageSessions(System.IAsyncResult)">
      <summary>Executes the end get message action.</summary>
      <returns>The end get message action.</returns>
      <param name="result">The result of the message.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.OnEndRemoveRule(System.IAsyncResult)">
      <summary>Ends the asynchronous call to <see cref="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.OnBeginRemoveRule(System.String,System.TimeSpan,System.AsyncCallback,System.Object)" />.</summary>
      <param name="result">An <see cref="T:System.IAsyncResult" /> from a <see cref="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.OnBeginRemoveRule(System.String,System.TimeSpan,System.AsyncCallback,System.Object)" />.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.OnEndRemoveRules(System.IAsyncResult)">
      <summary>Ends the asynchronous call to <see cref="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.OnBeginRemoveRule(System.String,System.TimeSpan,System.AsyncCallback,System.Object)" />.</summary>
      <param name="result">The result of the asynchronization.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.OnMessage(System.Action{Microsoft.ServiceBus.Messaging.BrokeredMessage})">
      <summary>Processes a message in an event-driven message pump.</summary>
      <param name="callback">The method to invoke when the operation is complete.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.OnMessage(System.Action{Microsoft.ServiceBus.Messaging.BrokeredMessage},Microsoft.ServiceBus.Messaging.OnMessageOptions)">
      <summary>Processes a message in an event-driven message pump, with the given set of <see cref="T:Microsoft.ServiceBus.Messaging.OnMessageOptions" /> options.</summary>
      <param name="callback">The method to invoke when the operation is complete.</param>
      <param name="onMessageOptions">Specifies the <see cref="T:Microsoft.ServiceBus.Messaging.OnMessageOptions" /> options with which to instantiate the message pump.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.OnMessageAsync(System.Func{Microsoft.ServiceBus.Messaging.BrokeredMessage,System.Threading.Tasks.Task})">
      <summary>Asynchronously processes a message.</summary>
      <param name="callback">The asynchronous method to invoke when the operation is complete.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.OnMessageAsync(System.Func{Microsoft.ServiceBus.Messaging.BrokeredMessage,System.Threading.Tasks.Task},Microsoft.ServiceBus.Messaging.OnMessageOptions)">
      <summary>Asynchronously processes a message.</summary>
      <param name="callback">The asynchronous method to invoke when the operation is complete.</param>
      <param name="onMessageOptions">The options associated with the message.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.Peek">
      <summary>Returns without removing the first message in the queue.</summary>
      <returns>The returned message.</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.Peek(System.Int64)">
      <summary>Returns without removing the first message in the queue.</summary>
      <returns>The returned message.</returns>
      <param name="fromSequenceNumber">The starting point from which to browse a message.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.PeekAsync">
      <summary>Asynchronously returns without removing the first message in the queue.</summary>
      <returns>A task instance that represents the asynchronous peek operation.</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.PeekAsync(System.Int64)">
      <summary>Asynchronously returns without removing the first message in the queue.</summary>
      <returns>A task instance that represents the asynchronous peek operation.</returns>
      <param name="fromSequenceNumber">The starting point from which to browse a message.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.PeekBatch(System.Int32)">
      <summary>Returns without removing the first messages in a batch.</summary>
      <returns>The collection of first messages in a batch.</returns>
      <param name="messageCount">The number of messages in a batch.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.PeekBatch(System.Int64,System.Int32)">
      <summary>Returns without removing the first messages in a batch.</summary>
      <returns>The collection of first messages in a batch.</returns>
      <param name="fromSequenceNumber">The starting point from which to browse a message.</param>
      <param name="messageCount">The number of messages in a batch.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.PeekBatchAsync(System.Int32)">
      <summary>Asynchronously returns without removing the first messages in a batch.</summary>
      <returns>A task instance that represents the asynchronous peek batch operation.</returns>
      <param name="messageCount">The number of messages in a batch.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.PeekBatchAsync(System.Int64,System.Int32)">
      <summary>Asynchronously returns without removing the first messages in a batch.</summary>
      <returns>A task instance that represents the asynchronous peek batch operation.</returns>
      <param name="fromSequenceNumber">The starting point from which to browse a message.</param>
      <param name="messageCount">The number of messages in a batch.</param>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.SubscriptionClient.PrefetchCount">
      <summary>Gets or sets the number of messages that the message receiver can simultaneously request.</summary>
      <returns>The number of messages that the message receiver can simultaneously request.</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.Receive">
      <summary>Receives a message using the <see cref="P:Microsoft.ServiceBus.Messaging.QueueClient.InternalReceiver" />.</summary>
      <returns>The <see cref="T:Microsoft.ServiceBus.Messaging.BrokeredMessage" /> that represents the received message.</returns>
      <exception cref="T:Microsoft.ServiceBus.Messaging.MessagingEntityNotFoundException">Thrown when the subscription does not exist.</exception>
      <exception cref="T:System.TimeoutException">Thrown if the operation exceeded the timeout value set via <see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactorySettings.OperationTimeout" />.</exception>
      <exception cref="T:System.OperationCanceledException">Thrown if the client entity has been closed or aborted.</exception>
      <exception cref="T:System.UnauthorizedAccessException">Thrown if there is an authentication error.</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.Receive(System.Int64)">
      <summary>Receives a message using the <see cref="P:Microsoft.ServiceBus.Messaging.QueueClient.InternalReceiver" />.</summary>
      <returns>The <see cref="T:Microsoft.ServiceBus.Messaging.BrokeredMessage" />  that represents the received message.</returns>
      <param name="sequenceNumber">The sequence number of the deferred message to receive.</param>
      <exception cref="T:System.OperationCanceledException">Thrown if the client entity has been closed or aborted.</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.Receive(System.TimeSpan)">
      <summary>Receives a message using the <see cref="P:Microsoft.ServiceBus.Messaging.QueueClient.InternalReceiver" />.</summary>
      <returns>The <see cref="T:Microsoft.ServiceBus.Messaging.BrokeredMessage" />  that represents the received message.</returns>
      <param name="serverWaitTime">The time span the server waits for receiving a message before it times out.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Thrown if the <paramref name="serverWaitTime" /> is negative.</exception>
      <exception cref="T:Microsoft.ServiceBus.Messaging.MessagingEntityNotFoundException">Thrown when the subscription does not exist.</exception>
      <exception cref="T:System.OperationCanceledException">Thrown if the client entity has been closed or aborted.</exception>
      <exception cref="T:System.TimeoutException">Thrown if the operation exceeded the timeout value set via <see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactorySettings.OperationTimeout" />.</exception>
      <exception cref="T:System.UnauthorizedAccessException">Thrown if there is an authentication error.</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.ReceiveAsync">
      <summary>Asynchronously receives a message using the <see cref="P:Microsoft.ServiceBus.Messaging.QueueClient.InternalReceiver" />.</summary>
      <returns>A task instance that represents the asynchronous receive operation.</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.ReceiveAsync(System.Int64)">
      <summary>Asynchronously receives a message using the <see cref="P:Microsoft.ServiceBus.Messaging.QueueClient.InternalReceiver" />.</summary>
      <returns>A task instance that represents the asynchronous receive operation.</returns>
      <param name="sequenceNumber">The sequence number of the deferred message to receive.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.ReceiveAsync(System.TimeSpan)">
      <summary>Asynchronously receives a message using the <see cref="P:Microsoft.ServiceBus.Messaging.QueueClient.InternalReceiver" />.</summary>
      <returns>A task instance that represents the asynchronous receive operation.</returns>
      <param name="serverWaitTime">The time span the server waits for receiving a message before it times out.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.ReceiveBatch(System.Collections.Generic.IEnumerable{System.Int64})">
      <summary>Receives a batch after the asynchronous operation.</summary>
      <returns>A batch after the asynchronous operation.</returns>
      <param name="sequenceNumbers">The sequence number.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.ReceiveBatch(System.Int32)">
      <summary>Receives a batch after the asynchronous operation.</summary>
      <returns>A batch after the asynchronous operation.</returns>
      <param name="messageCount">The maximum number of messages to return in the batch. As this is an approximation, fewer messages may be returned even if the number of messages is higher than <paramref name="messageCount" />.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.ReceiveBatch(System.Int32,System.TimeSpan)">
      <summary>Receives a batch after the asynchronous operation.</summary>
      <returns>A batch after the asynchronous operation.</returns>
      <param name="messageCount">The maximum number of messages to receive in a batch.</param>
      <param name="serverWaitTime">The time span the server waits for processing messages.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.ReceiveBatchAsync(System.Collections.Generic.IEnumerable{System.Int64})">
      <summary>Asynchronously receives a set of messages (for batch processing).</summary>
      <returns>A task instance that represents the asynchronous receive batch operation.</returns>
      <param name="sequenceNumbers">The sequence number.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.ReceiveBatchAsync(System.Int32)">
      <summary>Asynchronously receives a set of messages (for batch processing).</summary>
      <returns>A task instance that represents the asynchronous receive batch operation.</returns>
      <param name="messageCount">The maximum number of messages to return in the batch.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.ReceiveBatchAsync(System.Int32,System.TimeSpan)">
      <summary>Asynchronously receives a set of messages (for batch processing).</summary>
      <returns>A task instance that represents the asynchronous receive batch operation.</returns>
      <param name="messageCount">The maximum number of messages to return in the batch.</param>
      <param name="serverWaitTime">The time span the server waits for processing messages.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.RegisterSessionHandler(System.Type)">
      <summary>Registers the handler for the client session.</summary>
      <param name="handlerType">The type of the handler.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.RegisterSessionHandler(System.Type,Microsoft.ServiceBus.Messaging.SessionHandlerOptions)">
      <summary>Registers the handler for the client session.</summary>
      <param name="handlerType">The type of the handler.</param>
      <param name="options">The session handler options.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.RegisterSessionHandlerAsync(System.Type)">
      <summary>Asynchronously registers the handler for the client session.</summary>
      <returns>The task object representing the asynchronous operation.</returns>
      <param name="handlerType">The type of the handler.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.RegisterSessionHandlerAsync(System.Type,Microsoft.ServiceBus.Messaging.SessionHandlerOptions)">
      <summary>Asynchronously registers the handler for the client session.</summary>
      <returns>The task object representing the asynchronous operation.</returns>
      <param name="handlerType">The type of the handler.</param>
      <param name="options">The session handler options.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.RegisterSessionHandlerFactory(Microsoft.ServiceBus.Messaging.IMessageSessionAsyncHandlerFactory,Microsoft.ServiceBus.Messaging.SessionHandlerOptions)">
      <summary>Registers the handler factory for the client session.</summary>
      <param name="factory">The interface for the handler factory associated with the message session.</param>
      <param name="options">The session handler options.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.RegisterSessionHandlerFactory(Microsoft.ServiceBus.Messaging.IMessageSessionHandlerFactory,Microsoft.ServiceBus.Messaging.SessionHandlerOptions)">
      <summary>Registers the handler factory for the client session.</summary>
      <param name="factory">The interface for the handler factory associated with the message session.</param>
      <param name="options">The session handler options.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.RegisterSessionHandlerFactoryAsync(Microsoft.ServiceBus.Messaging.IMessageSessionAsyncHandlerFactory,Microsoft.ServiceBus.Messaging.SessionHandlerOptions)">
      <summary>Asynchronously registers the handler factory for the client session.</summary>
      <returns>The task object representing the asynchronous operation.</returns>
      <param name="factory">The interface for the handler factory associated with the message session.</param>
      <param name="options">The session handler options.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.RegisterSessionHandlerFactoryAsync(Microsoft.ServiceBus.Messaging.IMessageSessionHandlerFactory,Microsoft.ServiceBus.Messaging.SessionHandlerOptions)">
      <summary>Asynchronously registers the handler factory for the client session.</summary>
      <returns>The task object representing the asynchronous operation.</returns>
      <param name="factory">The interface for the handler factory associated with the message session.</param>
      <param name="options">The session handler options.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.RemoveRule(System.String)">
      <summary>Removes the rule described by <paramref name="ruleName" />.</summary>
      <param name="ruleName">The name of the rule.</param>
      <exception cref="T:Microsoft.ServiceBus.Messaging.MessagingEntityNotFoundException">Thrown when rule does not exist.</exception>
      <exception cref="T:System.ArgumentException">Thrown if <paramref name="description.Name" /> is null, white space empty or not in the right format.</exception>
      <exception cref="T:System.TimeoutException">Thrown if the operation exceeded the timeout value set via <see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactorySettings.OperationTimeout" />.</exception>
      <exception cref="T:System.OperationCanceledException">Thrown if the client entity has been closed or aborted.</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.RemoveRuleAsync(System.String)">
      <summary>Asynchronously removes the rule described by <paramref name="ruleName" />.</summary>
      <returns>A task instance that represents the asynchronous remove rule operation.</returns>
      <param name="ruleName">The name of the rule.</param>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.SubscriptionClient.TopicPath">
      <summary>Gets the full pathname of the topic.</summary>
      <returns>The full pathname of the topic.</returns>
    </member>
    <member name="T:Microsoft.ServiceBus.Messaging.SubscriptionDescription">
      <summary>Represents a description of the subscription.</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionDescription.#ctor(System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.Messaging.SubscriptionDescription" /> class.</summary>
      <param name="topicPath">The topic path.</param>
      <param name="subscriptionName">The subscription name.</param>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.SubscriptionDescription.AccessedAt">
      <summary>Gets the last time a there was a receive request to this subscription.</summary>
      <returns>The last time a there was a receive request to this subscription.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.SubscriptionDescription.AutoDeleteOnIdle">
      <summary>Gets or sets the <see cref="T:System.TimeSpan" /> idle interval after which the subscription is automatically deleted. The minimum duration is 5 minutes.</summary>
      <returns>The auto delete on idle time span for the subscription.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.SubscriptionDescription.AvailabilityStatus">
      <summary>Gets the entity availability status for the messaging.</summary>
      <returns>The entity availability status for the messaging.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.SubscriptionDescription.CreatedAt">
      <summary>Gets the exact time the message was created.</summary>
      <returns>The time the message was created.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.SubscriptionDescription.DefaultMessageTimeToLive">
      <summary>Gets or sets the default message time to live value. This is the duration after which the message expires, starting from when the message is sent to the Service Bus. This is the default value used when <see cref="P:Microsoft.ServiceBus.Messaging.BrokeredMessage.TimeToLive" /> is not set on a message itself.Messages older than their TimeToLive value will expire and no longer be retained in the message store. Subscribers will be unable to receive expired messages.A message can have a lower TimeToLive value than that specified here, but by default TimeToLive is set to <see cref="T:System.TimeSpan.MaxValue" />. Therefore, this property becomes the default time to live value applied to messages.</summary>
      <returns>The default message time to live for a subscription.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.SubscriptionDescription.EnableBatchedOperations">
      <summary>Gets or sets a value that indicates whether the batched operations are enabled.</summary>
      <returns>true if the batched operations are enabled; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.SubscriptionDescription.EnableDeadLetteringOnFilterEvaluationExceptions">
      <summary>Gets or sets the value that indicates if a subscription has dead letter support on Filter evaluation exceptions.</summary>
      <returns>true if a subscription has dead letter support on Filter evaluation exceptions; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.SubscriptionDescription.EnableDeadLetteringOnMessageExpiration">
      <summary>Gets or sets the value that indicates if a subscription has dead letter support when a message expires.</summary>
      <returns>true if a subscription has dead letter support when a message expires; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.SubscriptionDescription.ForwardDeadLetteredMessagesTo">
      <summary>Gets or sets the path to the recipient to which the dead lettered messages are forwarded.</summary>
      <returns>The path to the recipient to which the dead lettered messages are forwarded.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.SubscriptionDescription.ForwardTo">
      <summary>Gets or sets the path to the recipient to which the message is forwarded.</summary>
      <returns>The path to the recipient to which the message is forwarded.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.SubscriptionDescription.LockDuration">
      <summary>Gets or sets the lock duration time span for the subscription.</summary>
      <returns>The lock duration time span for the subscription.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.SubscriptionDescription.MaxDeliveryCount">
      <summary>Gets or sets the number of maximum deliveries.</summary>
      <returns>The number of maximum deliveries.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.SubscriptionDescription.MessageCount">
      <summary>Gets the number of messages.</summary>
      <returns>The number of messages.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.SubscriptionDescription.MessageCountDetails">
      <summary>Gets message details about the subscription.</summary>
      <returns>Returns <see cref="T:Microsoft.ServiceBus.Messaging.MessageCountDetails" /> with the number of active messages, dead letters, scheduled messages, messages transferred to other queues, subscriptions, or topics, and the number of messages transferred to the dead letter queue.</returns>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.SubscriptionDescription.MessageTimeToLiveDefaultValue">
      <summary>Specifies the message time to live default value.</summary>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.SubscriptionDescription.Name">
      <summary>Gets the name of the subscription description.</summary>
      <returns>The name of the subscription description.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.SubscriptionDescription.RequiresSession">
      <summary>Gets or sets the value indicating if a subscription supports the concept of session.</summary>
      <returns>true if the receiver application can only receive from the queue through a <see cref="T:Microsoft.ServiceBus.Messaging.SessionReceiver" />; false if a queue cannot receive using <see cref="T:Microsoft.ServiceBus.Messaging.SessionReceiver" />.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.SubscriptionDescription.Status">
      <summary>Gets or sets the current status of the subscription (enabled or disabled). When an entity is disabled, that entity cannot send or receive messages.</summary>
      <returns>The current status of the subscription.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.SubscriptionDescription.TopicPath">
      <summary>Gets the path of the topic that this subscription description belongs to.</summary>
      <returns>The path of the topic that this subscription description belongs to.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.SubscriptionDescription.UpdatedAt">
      <summary>Gets the exact time the message has been updated.</summary>
      <returns>The time the message has been updated.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.SubscriptionDescription.UserMetadata">
      <summary>Gets or sets the user metadata.</summary>
      <returns>The user metadata.</returns>
    </member>
    <member name="T:Microsoft.ServiceBus.Messaging.TileType">
      <summary>Enumerates types of messaging tile.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.TileType.TileSquareImage">
      <summary>A TileSquareImage type.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.TileType.TileWideBlockAndText01">
      <summary>A TileWideBlockAndText01 type.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.TileType.TileWideImage">
      <summary>A TileWideImage type.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.TileType.TileWideImageAndText">
      <summary>A TileWideImageAndText type.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.TileType.TileWideImageCollection">
      <summary>A TileWideImageCollection type.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.TileType.TileWidePeekImage01">
      <summary>A TileWidePeekImage01 type.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.TileType.TileWidePeekImage02">
      <summary>A TileWidePeekImage02 type.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.TileType.TileWidePeekImage03">
      <summary>A TileWidePeekImage03 type.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.TileType.TileWidePeekImage04">
      <summary>A TileWidePeekImage04 type.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.TileType.TileWidePeekImage05">
      <summary>A TileWidePeekImage05 type.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.TileType.TileWidePeekImage06">
      <summary>A TileWidePeekImage06 type.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.TileType.TileWidePeekImageAndText">
      <summary>A TileWidePeekImageAndText type.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.TileType.TileWidePeekImageCollection01">
      <summary>A TileWidePeekImageCollection01 type.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.TileType.TileWidePeekImageCollection02">
      <summary>A TileWidePeekImageCollection02 type.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.TileType.TileWidePeekImageCollection03">
      <summary>A TileWidePeekImageCollection03 type.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.TileType.TileWidePeekImageCollection04">
      <summary>A TileWidePeekImageCollection04 type.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.TileType.TileWidePeekImageCollection05">
      <summary>A TileWidePeekImageCollection05 type.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.TileType.TileWidePeekImageCollection06">
      <summary>A TileWidePeekImageCollection06 type.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.TileType.TileWideSmallImageAndText01">
      <summary>A TileWideSmallImageAndText01 type.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.TileType.TileWideSmallImageAndText02">
      <summary>A TileWideSmallImageAndText02 type.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.TileType.TileWideSmallImageAndText03">
      <summary>A TileWideSmallImageAndText03 type.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.TileType.TileWideSmallImageAndText04">
      <summary>A TileWideSmallImageAndText04 type.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.TileType.TileWideText01">
      <summary>A TileWideText01 type.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.TileType.TileWideText02">
      <summary>A TileWideText02 type.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.TileType.TileWideText03">
      <summary>A TileWideText03 type.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.TileType.TileWideText04">
      <summary>A TileWideText04 type.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.TileType.TileWideText05">
      <summary>A TileWideText05 type.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.TileType.TileWideText06">
      <summary>A TileWideText06 type.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.TileType.TileWideText07">
      <summary>A TileWideText07 type.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.TileType.TileWideText08">
      <summary>A TileWideText08 type.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.TileType.TileWideText09">
      <summary>A TileWideText09 type.</summary>
    </member>
    <member name="T:Microsoft.ServiceBus.Messaging.ToastType">
      <summary>Enumerates the types of image and text for toast notification.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ToastType.ToastImageAndText01">
      <summary>Specifies the first type image and text.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ToastType.ToastImageAndText02">
      <summary>Specifies the second type image and text.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ToastType.ToastImageAndText03">
      <summary>Specifies the third type image and text.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ToastType.ToastImageAndText04">
      <summary>Specifies the fourth type image and text.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ToastType.ToastSmallImageAndText01">
      <summary>Specifies the first type small image and text.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ToastType.ToastSmallImageAndText02">
      <summary>Specifies the second type small image and text.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ToastType.ToastSmallImageAndText03">
      <summary>Specifies the third type small image and text.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ToastType.ToastSmallImageAndText04">
      <summary>Specifies the fourth type small image and text.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ToastType.ToastText01">
      <summary>Specifies the first type text.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ToastType.ToastText02">
      <summary>Specifies the second type text.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ToastType.ToastText03">
      <summary>Specifies the third type text.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ToastType.ToastText04">
      <summary>Specifies the fourth type text.</summary>
    </member>
    <member name="T:Microsoft.ServiceBus.Messaging.TopicClient">
      <summary>An anchor class used to access a <see cref="T:Microsoft.ServiceBus.Messaging.Topic" /> to perform run-time operations.</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.TopicClient.BeginSend(Microsoft.ServiceBus.Messaging.BrokeredMessage,System.AsyncCallback,System.Object)">
      <summary>Begins an asynchronous operation to send a message.</summary>
      <returns>An <see cref="T:System.IAsyncResult" /> that references the asynchronous operation to send a message.</returns>
      <param name="message">The message to send.</param>
      <param name="callback">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</param>
      <param name="state">A user-defined object that contains state information about the asynchronous operation. </param>
      <exception cref="T:System.TimeoutException">Thrown when operation times out. Timeout period is initialized through the <see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactorySettings" />. Youmay need to increase the value of <see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactorySettings.OperationTimeout" /> to avoid this exception if timeout valueis relatively low.</exception>
      <exception cref="T:System.ArgumentException">Thrown when the BrokeredMessage is null.</exception>
      <exception cref="T:System.InvalidOperationException">Thrown if the <paramref name="message" /> has already been sent by a <see cref="T:Microsoft.ServiceBus.Messaging.TopicClient" /> or <see cref="T:Microsoft.ServiceBus.Messaging.MessageSender" /> once already.</exception>
      <exception cref="T:System.NotSupportedException">Thrown if the Deadletter topic/subscription pointed to does not support the send operation.</exception>
      <exception cref="T:System.OperationCanceledException">Thrown if the client entity has been closed or aborted.</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.TopicClient.BeginSendBatch(System.Collections.Generic.IEnumerable{Microsoft.ServiceBus.Messaging.BrokeredMessage},System.AsyncCallback,System.Object)">
      <summary>Begins an asynchronous operation to send a message by batch.</summary>
      <returns>An <see cref="T:System.IAsyncResult" /> that references the asynchronous operation to send a message.</returns>
      <param name="messages">The message to send.</param>
      <param name="callback">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</param>
      <param name="state">A user-defined object that contains state information about the asynchronous operation.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.TopicClient.Create(System.String)">
      <summary>Creates a new instance of <see cref="T:Microsoft.ServiceBus.Messaging.TopicClient" />.</summary>
      <returns>The created <see cref="T:Microsoft.ServiceBus.Messaging.TopicClient" />.</returns>
      <param name="path">The path.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.TopicClient.CreateFromConnectionString(System.String)"></member>
    <member name="M:Microsoft.ServiceBus.Messaging.TopicClient.CreateFromConnectionString(System.String,System.String)">
      <summary>Creates a new instance of <see cref="T:Microsoft.ServiceBus.Messaging.TopicClient" />using a specified connection string.</summary>
      <returns>The created <see cref="T:Microsoft.ServiceBus.Messaging.TopicClient" />.</returns>
      <param name="connectionString">The connection string used.</param>
      <param name="path">The path.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.TopicClient.EndSend(System.IAsyncResult)">
      <summary>Finishes an asynchronous operation to send a message.</summary>
      <param name="result">An <see cref="T:System.IAsyncResult" /> that represents the status of the asynchronous operation to send a message.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.TopicClient.EndSendBatch(System.IAsyncResult)">
      <summary>Finishes an asynchronous operation to send a message.</summary>
      <param name="result">An <see cref="T:System.IAsyncResult" /> that represents the status of the asynchronous operation to send a message.</param>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.TopicClient.IsSubQueue">
      <summary>Gets or sets a value that indicates whether the message receiver is created from a subqueue.</summary>
      <returns>true if the message receiver is created from a subqueue; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.TopicClient.MessagingFactory">
      <summary>Gets or sets the messaging factory that was used in creating this <see cref="T:Microsoft.ServiceBus.Messaging.TopicClient" /> object.</summary>
      <returns>The messaging factory that was used in creating this <see cref="T:Microsoft.ServiceBus.Messaging.TopicClient" /> object.</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.TopicClient.OnAbort">
      <summary>Executes the abort action.</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.TopicClient.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Executes the begin close action.</summary>
      <returns>An <see cref="T:System.IAsyncResult" /> that references the asynchronous Close operation.</returns>
      <param name="timeout">The wait time before the operation times out.</param>
      <param name="callback">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</param>
      <param name="state">A user-defined object that contains information about the receive operation. This object is passed to the EndClose delegate when the operation is complete.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.TopicClient.OnBeginCreateSender(System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Executes the begin create sender action.</summary>
      <returns>An <see cref="T:System.IAsyncResult" /> that references the asynchronous <see cref="M:Microsoft.ServiceBus.Messaging.TopicClient.CreateSender" />.</returns>
      <param name="timeout">The wait time before the operation times out.</param>
      <param name="callback">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</param>
      <param name="state">A user-defined object that contains information about the receive operation. This object is passed to the <see cref="M:Microsoft.ServiceBus.Messaging.TopicClient.EndCreateSender(System.IAsyncResult)" /> when the operation is complete.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.TopicClient.OnClose(System.TimeSpan)">
      <summary>Executes the close action.</summary>
      <param name="timeout">The wait time before the operation times out.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.TopicClient.OnEndClose(System.IAsyncResult)">
      <summary>Executes the end close action.</summary>
      <param name="result">An <see cref="T:System.IAsyncResult" /> that references the asynchronous Close operation.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.TopicClient.OnEndCreateSender(System.IAsyncResult)">
      <summary>Executes the end create sender action.</summary>
      <returns>The newly created <see cref="T:Microsoft.ServiceBus.Messaging.MessageSender" /> object.</returns>
      <param name="result">An <see cref="T:System.IAsyncResult" /> that references the asynchronous <see cref="M:Microsoft.ServiceBus.Messaging.TopicClient.CreateSender" />.</param>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.TopicClient.Path">
      <summary>Gets or sets the full pathname of the file.</summary>
      <returns>The full pathname of the file.</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.TopicClient.Send(Microsoft.ServiceBus.Messaging.BrokeredMessage)">
      <summary>Sends a message using the <see cref="P:Microsoft.ServiceBus.Messaging.QueueClient.InternalSender" />.</summary>
      <param name="message">The message to send.</param>
      <exception cref="T:System.TimeoutException">Thrown when operation times out. Timeout period is initialized through the <see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactorySettings.OperationTimeout" /> to avoid this exception if timeout value is relatively low.</exception>
      <exception cref="T:System.ArgumentException">Thrown when the <see cref="T:Microsoft.ServiceBus.Messaging.BrokeredMessage" /> is null.</exception>
      <exception cref="T:System.InvalidOperationException">Thrown if the <paramref name="message" /> has already been sent by a <see cref="T:Microsoft.ServiceBus.Messaging.TopicClient" /> or <see cref="T:Microsoft.ServiceBus.Messaging.MessageSender" /> once already.</exception>
      <exception cref="T:System.OperationCanceledException">Thrown if the client entity has been closed or aborted.</exception>
      <exception cref="T:System.UnauthorizedAccessException">Thrown if there is an I/O or security error.</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException">Thrown when an error occurs during serialization or deserialization.</exception>
      <exception cref="T:Microsoft.ServiceBus.Messaging.MessagingEntityNotFoundException">Thrown if the topic does not exist.</exception>
      <exception cref="T:Microsoft.ServiceBus.Messaging.MessagingException">Thrown if there is a messaging error.</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.TopicClient.SendAsync(Microsoft.ServiceBus.Messaging.BrokeredMessage)">
      <summary>Asynchronously sends a message using the <see cref="P:Microsoft.ServiceBus.Messaging.QueueClient.InternalSender" />.</summary>
      <returns>The asynchronous result of the operation.</returns>
      <param name="message">The message to send.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.TopicClient.SendBatch(System.Collections.Generic.IEnumerable{Microsoft.ServiceBus.Messaging.BrokeredMessage})">
      <summary>Sends a set of brokered messages (for batch processing).</summary>
      <param name="messages">The messages to send.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.TopicClient.SendBatchAsync(System.Collections.Generic.IEnumerable{Microsoft.ServiceBus.Messaging.BrokeredMessage})">
      <summary>Asynchronously sends a set of brokered messages (for batch processing).</summary>
      <returns>The asynchronous result of the operation.</returns>
      <param name="messages">The messages to send.</param>
    </member>
    <member name="T:Microsoft.ServiceBus.Messaging.TopicDescription">
      <summary>Represents a description of the topic.</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.TopicDescription.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.Messaging.TopicDescription" /> class with the specified relative path.</summary>
      <param name="path">The path of the topic relative to the service namespace base address.</param>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.TopicDescription.AccessedAt">
      <summary>Gets the time and date at which a message was last sent to the topic.</summary>
      <returns>The time and date at which a message was last sent to the topic.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.TopicDescription.Authorization">
      <summary>Gets the authorization rules for the description.</summary>
      <returns>The authorization rules for the description.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.TopicDescription.AutoDeleteOnIdle">
      <summary>Gets or sets the <see cref="T:System.TimeSpan" /> idle interval after which the topic is automatically deleted. The minimum duration is 5 minutes.</summary>
      <returns>The auto delete on idle time span for the topic.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.TopicDescription.AvailabilityStatus">
      <summary>Gets the status of the availability of this instance.</summary>
      <returns>The status of the availability of this instance.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.TopicDescription.CreatedAt">
      <summary>Gets the time and date when the topic was created.</summary>
      <returns>The time and date when the topic was created.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.TopicDescription.DefaultMessageTimeToLive">
      <summary>Gets or sets the default message time to live value for a topic. This is the duration after which the message expires, starting from when the message is sent to the Service Bus. This is the default value used when <see cref="P:Microsoft.ServiceBus.Messaging.BrokeredMessage.TimeToLive" /> is not set on a message itself.Messages older than their TimeToLive value will expire and no longer be retained in the message store. Subscribers will be unable to receive expired messages.</summary>
      <returns>The default message time to live for a topic.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.TopicDescription.DuplicateDetectionHistoryTimeWindow">
      <summary>Gets or sets the <see cref="T:System.TimeSpan" /> structure that defines the duration of the duplicate detection history.</summary>
      <returns>The <see cref="T:System.TimeSpan" /> structure that defines the duration of the duplicate detection history.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.TopicDescription.EnableBatchedOperations">
      <summary>Gets or sets a value that indicates whether server-side batched operations are enabled.</summary>
      <returns>true if the batched operations are enabled; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.TopicDescription.EnableExpress">
      <summary>Gets or sets a value that indicates whether Express Entities are enabled. An express topic holds a message in memory temporarily before writing it to persistent storage.</summary>
      <returns>true if the Express Entities are enabled; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.TopicDescription.EnableFilteringMessagesBeforePublishing">
      <summary>Gets or sets whether messages should be filtered before publishing.</summary>
      <returns>true if message filtering is enabled before publishing; otherwise, false.</returns>
      <exception cref="T:Microsoft.ServiceBus.Messaging.NoMatchingSubscriptionException">Thrown if the subscriptions do not match.</exception>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.TopicDescription.EnablePartitioning">
      <summary>Gets or sets whether to enable the topic to be partitioned across multiple message brokers. An express topic holds a message in memory temporarily before writing it to persistent storage.</summary>
      <returns>true to enable the topic to be partitioned across multiple message brokers; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.TopicDescription.IsAnonymousAccessible">
      <summary>Gets whether anonymous access is allowed.</summary>
      <returns>true if anonymous access is allowed; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.TopicDescription.MaxSizeInMegabytes">
      <summary>Gets or sets the maximum size of the topic in megabytes, which is the size of memory allocated for the topic.</summary>
      <returns>The maximum size in megabytes.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.TopicDescription.MessageCountDetails">
      <summary>Gets message details about the topic.</summary>
      <returns>The <see cref="T:Microsoft.ServiceBus.Messaging.MessageCountDetails" /> that contains the number of active messages, dead letters, scheduled messages, messages transferred to other queues, subscriptions, or topics, and the number of messages transferred to the dead letter queue.</returns>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.TopicDescription.MessageTimeToLiveDefaultValue">
      <summary>Specifies the message time to live default value.</summary>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.TopicDescription.Path">
      <summary>Gets the path of the topic.</summary>
      <returns>The path of the topic.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.TopicDescription.RequiresDuplicateDetection">
      <summary>Gets or sets the value that indicates whether a topic requires duplication detection.</summary>
      <returns>true if a topic requires duplication detection; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.TopicDescription.SizeInBytes">
      <summary>Gets the size of the topic in bytes.</summary>
      <returns>The size of the topic in bytes.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.TopicDescription.Status">
      <summary>Gets or sets the current status of the topic (enabled or disabled). When an entity is disabled, that entity cannot send or receive messages.</summary>
      <returns>The status of the topic.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.TopicDescription.SubscriptionCount">
      <summary>Gets then number of subscriptions.</summary>
      <returns>An <see cref="T:System.Int32" /> that represents the number of subscriptions.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.TopicDescription.SupportOrdering">
      <summary>Gets or sets the support ordering method.</summary>
      <returns>The support ordering method.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.TopicDescription.UpdatedAt">
      <summary>Gets the time and date when the topic was updated.</summary>
      <returns>The time and date when the topic was updated.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.TopicDescription.UserMetadata">
      <summary>Gets or sets the user metadata associated with the description.</summary>
      <returns>The user metadata associated with the description.</returns>
    </member>
    <member name="T:Microsoft.ServiceBus.Messaging.TransactionSizeExceededException">
      <summary>Represents an exception when the transaction size exceeds.</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.TransactionSizeExceededException.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.Messaging.TransactionSizeExceededException" /> class.</summary>
      <param name="message">The exception message.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.TransactionSizeExceededException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.Messaging.TransactionSizeExceededException" /> class.</summary>
      <param name="message">The exception message.</param>
      <param name="innerException">The error that caused the exception.</param>
    </member>
    <member name="T:Microsoft.ServiceBus.Messaging.TransportType">
      <summary>Enumerates the messaging transport type.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.TransportType.Amqp">
      <summary>The advanced message queuing protocol transport type.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.TransportType.NetMessaging">
      <summary>The network messaging transport type.</summary>
    </member>
    <member name="T:Microsoft.ServiceBus.Messaging.TrueFilter">
      <summary>Matches a filter expression.</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.TrueFilter.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.Messaging.TrueFilter" /> class.</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.TrueFilter.Match(Microsoft.ServiceBus.Messaging.BrokeredMessage)">
      <summary>Matches a message against the current SQL expression.</summary>
      <returns>true if it matches; otherwise, false.</returns>
      <param name="message">The brokered message.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.TrueFilter.Preprocess">
      <summary>Gets the preprocessed filter expression.</summary>
      <returns>The preprocessed filter expression.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.TrueFilter.RequiresPreprocessing">
      <summary>Gets a value indicating whether the SQL filter expression requires preprocessing.</summary>
      <returns>true if the SQL filter expression requires preprocessing; otherwise, false. Currently always returns true.</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.TrueFilter.ToString">
      <summary>Converts the value of the current instance to its equivalent string representation.</summary>
      <returns>A string representation of the current instance.</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.TrueFilter.Validate">
      <summary>Validates the SQL expression.</summary>
    </member>
    <member name="T:Microsoft.ServiceBus.Messaging.Amqp.AmqpTransportSettings">
      <summary>Represents the Advanced Message Queuing Protocol transport settings.</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.Amqp.AmqpTransportSettings.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.Messaging.Amqp.AmqpTransportSettings" /> class.</summary>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.Amqp.AmqpTransportSettings.BatchFlushInterval">
      <summary>Gets or sets the batch flush interval associated with the transport.</summary>
      <returns>The batch flush interval associated with the transport.</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.Amqp.AmqpTransportSettings.Clone">
      <summary>Creates a new object that is a copy of the current instance.</summary>
      <returns>A new object that is a copy of this instance.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.Amqp.AmqpTransportSettings.MaxFrameSize">
      <summary>Gets or sets the maximum frame size.</summary>
      <returns>The maximum frame size.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.Amqp.AmqpTransportSettings.UseSslStreamSecurity">
      <summary>Gets a value that indicates whether the SSL stream uses a custom binding element.</summary>
      <returns>true if the SSL stream uses a custom binding element; otherwise, false.</returns>
    </member>
    <member name="T:Microsoft.ServiceBus.Messaging.Amqp.Serialization.EncodingType">
      <summary>Enumerates the encoding type associated with the serialization.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.Amqp.Serialization.EncodingType.List">
      <summary>The List encoding type.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.Amqp.Serialization.EncodingType.Map">
      <summary>The Map encoding type.</summary>
    </member>
    <member name="T:Microsoft.ServiceBus.Messaging.Configuration.NetMessagingBindingCollectionElement">
      <summary>Represents a configuration element that contains sub-elements that specify settings for using the <see cref="T:Microsoft.ServiceBus.Messaging.NetMessagingBinding" /> binding.</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.Configuration.NetMessagingBindingCollectionElement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.Messaging.Configuration.NetMessagingBindingCollectionElement" /> class.</summary>
    </member>
    <member name="T:Microsoft.ServiceBus.Messaging.Configuration.NetMessagingBindingExtensionElement">
      <summary>Represents an XML element that specifies a configuration of <see cref="T:Microsoft.ServiceBus.Messaging.NetMessagingBinding" />.</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.Configuration.NetMessagingBindingExtensionElement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.Messaging.Configuration.NetMessagingBindingExtensionElement" /> class.</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.Configuration.NetMessagingBindingExtensionElement.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.Messaging.Configuration.NetMessagingBindingExtensionElement" /> class using the specified name.</summary>
      <param name="name">The name.</param>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.Configuration.NetMessagingBindingExtensionElement.PrefetchCount">
      <summary>Gets or sets the number of prefetch.</summary>
      <returns>The number of prefetch.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.Configuration.NetMessagingBindingExtensionElement.SessionIdleTimeout">
      <summary>Gets or sets the SessionIdleTimeout.</summary>
      <returns>If an IInputSessionChannel.TryReceive operation doesn’t receive any message within this TimeSpan then the channel will indicate end of session.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.Configuration.NetMessagingBindingExtensionElement.TransportSettings">
      <summary>Gets or sets the transport settings element for the net messaging.</summary>
      <returns>The transport settings element for the net messaging.</returns>
    </member>
    <member name="T:Microsoft.ServiceBus.Messaging.Configuration.NetMessagingTransportExtensionElement">
      <summary>Represents the net messaging transport extension element.</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.Configuration.NetMessagingTransportExtensionElement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.Messaging.Configuration.NetMessagingTransportExtensionElement" /> class.</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.Configuration.NetMessagingTransportExtensionElement.ApplyConfiguration(System.ServiceModel.Channels.BindingElement)">
      <summary>Applies the settings of the specified <see cref="T:System.ServiceModel.Channels.BindingElement" /> to this configuration element.</summary>
      <param name="bindingElement">The <see cref="T:System.ServiceModel.Channels.BindingElement" /> to this configuration element.</param>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.Configuration.NetMessagingTransportExtensionElement.BindingElementType">
      <summary>Gets the type of binding element being used.</summary>
      <returns>The type of binding element being used.</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.Configuration.NetMessagingTransportExtensionElement.CopyFrom(System.ServiceModel.Configuration.ServiceModelExtensionElement)">
      <summary>Copies the settings from the specified configuration element to this configuration element.</summary>
      <param name="from">The configuration element whose settings are to be copied to this configuration element.</param>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.Configuration.NetMessagingTransportExtensionElement.PrefetchCount">
      <summary>Gets or sets the number of prefetch.</summary>
      <returns>The number of prefetch.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.Configuration.NetMessagingTransportExtensionElement.SessionIdleTimeout">
      <summary>Gets or sets the SessionIdleTimeout.</summary>
      <returns>If an IInputSessionChannel.TryReceive operation doesn’t receive any message within this TimeSpan then the channel will indicate end of session.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.Configuration.NetMessagingTransportExtensionElement.TransportSettings">
      <summary>Gets or sets the transport settings element for the net messaging.</summary>
      <returns>The transport settings element for the net messaging.</returns>
    </member>
    <member name="T:Microsoft.ServiceBus.Messaging.Configuration.NetMessagingTransportSettingsElement">
      <summary>Represents the transport settings element for the net messaging.</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.Configuration.NetMessagingTransportSettingsElement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.Messaging.Configuration.NetMessagingTransportSettingsElement" /> class.</summary>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.Configuration.NetMessagingTransportSettingsElement.BatchFlushInterval">
      <summary>Gets or sets the batch flush interval.</summary>
      <returns>The <see cref="T:System.TimeSpan" /> that represents the batch flush interval.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.Configuration.NetMessagingTransportSettingsElement.EnableRedirect">
      <summary>Gets or set a value that indicates whether redirection is enabled.</summary>
      <returns>true if redirection is enabled; otherwise, false.</returns>
    </member>
    <member name="T:Microsoft.ServiceBus.Notifications.AdmCredential">
      <summary>Specifies the Amazon Device Messaging (ADM) credentials.</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.AdmCredential.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.Notifications.AdmCredential" /> class.</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.AdmCredential.#ctor(System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.Notifications.AdmCredential" /> class.</summary>
      <param name="clientId">The client identifier.</param>
      <param name="clientSecret">The credential secret access key.</param>
    </member>
    <member name="P:Microsoft.ServiceBus.Notifications.AdmCredential.AuthTokenUrl">
      <summary>Gets or sets the URL of the authorization token.</summary>
      <returns>The URL of the authorization token.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Notifications.AdmCredential.ClientId">
      <summary>Gets or sets the client identifier.</summary>
      <returns>The client identifier.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Notifications.AdmCredential.ClientSecret">
      <summary>Gets or sets the credential secret access key.</summary>
      <returns>The credential secret access key.</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.AdmCredential.Equals(System.Object)">
      <summary>Specifies whether this credential is equal to the specified object.</summary>
      <returns>true if this credential is equal with the specific object; otherwise, false.</returns>
      <param name="other">The object to compare.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.AdmCredential.GetHashCode">
      <summary>Retrieves the hash code for the credential.</summary>
      <returns>The hash code for the credential.</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.AdmCredential.OnValidate(System.Boolean)">
      <summary>Validates the Amazon Device Messaging credentials.</summary>
      <param name="allowLocalMockPns">true to allow local mock PNS; otherwise, false.</param>
    </member>
    <member name="P:Microsoft.ServiceBus.Notifications.AdmCredential.SendUrlTemplate">
      <summary>Gets or sets the sending URL template.</summary>
      <returns>The sending URL template.</returns>
    </member>
    <member name="T:Microsoft.ServiceBus.Notifications.AdmNotification">
      <summary>Represents the Amazon Device Messaging (ADM) notification.</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.AdmNotification.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.Notifications.AdmNotification" /> class.</summary>
      <param name="jsonPayload">The JSON payload.</param>
    </member>
    <member name="T:Microsoft.ServiceBus.Notifications.AdmRegistrationDescription">
      <summary>Represents the description of the Amazon Device Messaging (ADM) registration.</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.AdmRegistrationDescription.#ctor(Microsoft.ServiceBus.Notifications.AdmRegistrationDescription)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.Notifications.AdmRegistrationDescription" /> class.</summary>
      <param name="sourceRegistration">The source registration.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.AdmRegistrationDescription.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.Notifications.AdmRegistrationDescription" /> class.</summary>
      <param name="admRegistrationId">The Amazon Device Messaging registration identifier.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.AdmRegistrationDescription.#ctor(System.String,System.Collections.Generic.IEnumerable{System.String})">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.Notifications.AdmRegistrationDescription" /> class.</summary>
      <param name="admRegistrationId">The Amazon Device Messaging registration identifier.</param>
      <param name="tags">The registration tags.</param>
    </member>
    <member name="P:Microsoft.ServiceBus.Notifications.AdmRegistrationDescription.AdmRegistrationId">
      <summary>Gets or sets the Amazon Device Messaging registration identifier.</summary>
      <returns>The Amazon Device Messaging registration identifier.</returns>
    </member>
    <member name="T:Microsoft.ServiceBus.Notifications.AdmTemplateRegistrationDescription">
      <summary>Represents the description of the Amazon Device Messaging (ADM) template registration.</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.AdmTemplateRegistrationDescription.#ctor(Microsoft.ServiceBus.Notifications.AdmTemplateRegistrationDescription)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.Notifications.AdmTemplateRegistrationDescription" /> class with specified source registration.</summary>
      <param name="sourceRegistration">The source registration.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.AdmTemplateRegistrationDescription.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.Notifications.AdmTemplateRegistrationDescription" /> class with specified Amazon Device Messaging registration identifier.</summary>
      <param name="admRegistrationId">The Amazon Device Messaging registration identifier.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.AdmTemplateRegistrationDescription.#ctor(System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.Notifications.AdmTemplateRegistrationDescription" /> class.</summary>
      <param name="admRegistrationId">The Amazon Device Messaging registration identifier.</param>
      <param name="jsonPayload">The JSON payload.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.AdmTemplateRegistrationDescription.#ctor(System.String,System.String,System.Collections.Generic.IEnumerable{System.String})">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.Notifications.AdmTemplateRegistrationDescription" /> class.</summary>
      <param name="admRegistrationId">The Amazon Device Messaging registration identifier.</param>
      <param name="jsonPayload">The JSON payload.</param>
      <param name="tags">The description tags.</param>
    </member>
    <member name="P:Microsoft.ServiceBus.Notifications.AdmTemplateRegistrationDescription.BodyTemplate">
      <summary>Gets or sets the body of the CDataMember notification.</summary>
      <returns>The body of the CDataMember notification.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Notifications.AdmTemplateRegistrationDescription.TemplateName">
      <summary>Gets or sets the name of the Amazon Device Messaging template.</summary>
      <returns>The name of the Amazon Device Messaging template.</returns>
    </member>
    <member name="T:Microsoft.ServiceBus.Notifications.ApnsCredential">
      <summary>Represents an Apple Push Notification Service (APNS) credential.</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.ApnsCredential.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.Notifications.ApnsCredential" /> class.</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.ApnsCredential.#ctor(System.Byte[],System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.Notifications.ApnsCredential" /> class.</summary>
      <param name="certificateBuffer">The certificate buffer.</param>
      <param name="certificateKey">The certificated key.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.ApnsCredential.#ctor(System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.Notifications.ApnsCredential" /> class.</summary>
      <param name="certificatePath">The certificate path.</param>
      <param name="certificateKey">The certificate key.</param>
    </member>
    <member name="P:Microsoft.ServiceBus.Notifications.ApnsCredential.ApnsCertificate">
      <summary>Gets or sets the APNS certificate.</summary>
      <returns>The APNS certificate.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Notifications.ApnsCredential.CertificateKey">
      <summary>Gets or sets the certificate key.</summary>
      <returns>The certificate key.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Notifications.ApnsCredential.Endpoint">
      <summary>Gets or sets the endpoint of this credential.</summary>
      <returns>The endpoint of this credential.</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.ApnsCredential.Equals(System.Object)">
      <summary>Specifies whether the credential is the same as the specific object.</summary>
      <returns>true if the credential is the same as the specific object; otherwise, false.</returns>
      <param name="other">The other object to compare.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.ApnsCredential.GetHashCode">
      <summary>Retrieves the hash code for the credentials.</summary>
      <returns>The hash code for the credentials.</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.ApnsCredential.OnValidate(System.Boolean)">
      <summary>Validates the APNS credential.</summary>
      <param name="allowLocalMockPns">true to allow local mock PNS; otherwise, false.</param>
    </member>
    <member name="T:Microsoft.ServiceBus.Notifications.AppleNotification">
      <summary>Represents the Apple notification.</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.AppleNotification.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.Notifications.AppleNotification" /> class.</summary>
      <param name="jsonPayload">The JSON payload.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.AppleNotification.#ctor(System.String,System.Nullable{System.DateTime})">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.Notifications.AppleNotification" /> class.</summary>
      <param name="jsonPayload">The JSON payload.</param>
      <param name="expiry">The expiration of the notification.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.AppleNotification.#ctor(System.String,System.Nullable{System.DateTime},System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.Notifications.AppleNotification" /> class.</summary>
      <param name="jsonPayload">The JSON payload.</param>
      <param name="expiry">The expiration of the notification.</param>
      <param name="tag">The notification tag.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.AppleNotification.#ctor(System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.Notifications.AppleNotification" /> class.</summary>
      <param name="jsonPayload">The JSON payload.</param>
      <param name="tag">The notification tag.</param>
    </member>
    <member name="P:Microsoft.ServiceBus.Notifications.AppleNotification.Expiry">
      <summary>Gets or sets the expiration date and time of the notification.</summary>
      <returns>The expiration date and time of the notification.</returns>
    </member>
    <member name="T:Microsoft.ServiceBus.Notifications.AppleRegistrationDescription">
      <summary>Represents the description of apple registration.</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.AppleRegistrationDescription.#ctor(Microsoft.ServiceBus.Notifications.AppleRegistrationDescription)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.Notifications.AppleRegistrationDescription" /> class.</summary>
      <param name="sourceRegistration">The source of the registration.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.AppleRegistrationDescription.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.Notifications.AppleRegistrationDescription" /> class.</summary>
      <param name="deviceToken">The device token.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.AppleRegistrationDescription.#ctor(System.String,System.Collections.Generic.IEnumerable{System.String})">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.Notifications.AppleRegistrationDescription" /> class.</summary>
      <param name="deviceToken">The device token.</param>
      <param name="tags">The list of description tags.</param>
    </member>
    <member name="P:Microsoft.ServiceBus.Notifications.AppleRegistrationDescription.DeviceToken">
      <summary>Gets or sets the device token.</summary>
      <returns>The device token.</returns>
    </member>
    <member name="T:Microsoft.ServiceBus.Notifications.AppleTemplateRegistrationDescription">
      <summary>Represents the description of the Apple template registration.</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.AppleTemplateRegistrationDescription.#ctor(Microsoft.ServiceBus.Notifications.AppleTemplateRegistrationDescription)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.Notifications.AppleTemplateRegistrationDescription" /> class.</summary>
      <param name="sourceRegistration">The source of registration.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.AppleTemplateRegistrationDescription.#ctor(System.String)">
      <summary>Initializes new instance of the <see cref="T:Microsoft.ServiceBus.Notifications.AppleTemplateRegistrationDescription" /> class.</summary>
      <param name="deviceToken">The device token.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.AppleTemplateRegistrationDescription.#ctor(System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.Notifications.AppleTemplateRegistrationDescription" /> class.</summary>
      <param name="deviceToken">The device token.</param>
      <param name="jsonPayload">The JSON payload.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.AppleTemplateRegistrationDescription.#ctor(System.String,System.String,System.Collections.Generic.IEnumerable{System.String})">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.Notifications.AppleTemplateRegistrationDescription" /> class.</summary>
      <param name="deviceToken">The device token.</param>
      <param name="jsonPayload">The JSON payload.</param>
      <param name="tags">The description tags.</param>
    </member>
    <member name="P:Microsoft.ServiceBus.Notifications.AppleTemplateRegistrationDescription.BodyTemplate">
      <summary>Gets or sets the body template.</summary>
      <returns>The body template.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Notifications.AppleTemplateRegistrationDescription.Expiry">
      <summary>Gets or sets the expiry date and time of the registration.</summary>
      <returns>The expiry date and time of the registration.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Notifications.AppleTemplateRegistrationDescription.TemplateName">
      <summary>Gets or sets the name of the template.</summary>
      <returns>The name of the template.</returns>
    </member>
    <member name="T:Microsoft.ServiceBus.Notifications.BaiduCredential"></member>
    <member name="M:Microsoft.ServiceBus.Notifications.BaiduCredential.#ctor"></member>
    <member name="M:Microsoft.ServiceBus.Notifications.BaiduCredential.#ctor(System.String)"></member>
    <member name="P:Microsoft.ServiceBus.Notifications.BaiduCredential.BaiduApiKey"></member>
    <member name="P:Microsoft.ServiceBus.Notifications.BaiduCredential.BaiduEndPoint"></member>
    <member name="P:Microsoft.ServiceBus.Notifications.BaiduCredential.BaiduSecretKey"></member>
    <member name="M:Microsoft.ServiceBus.Notifications.BaiduCredential.Equals(System.Object)"></member>
    <member name="M:Microsoft.ServiceBus.Notifications.BaiduCredential.GetHashCode"></member>
    <member name="M:Microsoft.ServiceBus.Notifications.BaiduCredential.OnValidate(System.Boolean)"></member>
    <member name="T:Microsoft.ServiceBus.Notifications.BaiduNotification"></member>
    <member name="M:Microsoft.ServiceBus.Notifications.BaiduNotification.#ctor(System.String)"></member>
    <member name="T:Microsoft.ServiceBus.Notifications.BaiduRegistrationDescription"></member>
    <member name="M:Microsoft.ServiceBus.Notifications.BaiduRegistrationDescription.#ctor(Microsoft.ServiceBus.Notifications.BaiduRegistrationDescription)"></member>
    <member name="M:Microsoft.ServiceBus.Notifications.BaiduRegistrationDescription.#ctor(System.String)"></member>
    <member name="M:Microsoft.ServiceBus.Notifications.BaiduRegistrationDescription.#ctor(System.String,System.String,System.Collections.Generic.IEnumerable{System.String})"></member>
    <member name="P:Microsoft.ServiceBus.Notifications.BaiduRegistrationDescription.BaiduChannelId"></member>
    <member name="P:Microsoft.ServiceBus.Notifications.BaiduRegistrationDescription.BaiduUserId"></member>
    <member name="T:Microsoft.ServiceBus.Notifications.BaiduTemplateRegistrationDescription"></member>
    <member name="M:Microsoft.ServiceBus.Notifications.BaiduTemplateRegistrationDescription.#ctor(Microsoft.ServiceBus.Notifications.BaiduTemplateRegistrationDescription)"></member>
    <member name="M:Microsoft.ServiceBus.Notifications.BaiduTemplateRegistrationDescription.#ctor(System.String,System.String)"></member>
    <member name="M:Microsoft.ServiceBus.Notifications.BaiduTemplateRegistrationDescription.#ctor(System.String,System.String,System.String)"></member>
    <member name="M:Microsoft.ServiceBus.Notifications.BaiduTemplateRegistrationDescription.#ctor(System.String,System.String,System.String,System.Collections.Generic.IEnumerable{System.String})"></member>
    <member name="P:Microsoft.ServiceBus.Notifications.BaiduTemplateRegistrationDescription.BodyTemplate"></member>
    <member name="P:Microsoft.ServiceBus.Notifications.BaiduTemplateRegistrationDescription.TemplateName"></member>
    <member name="T:Microsoft.ServiceBus.Notifications.CDataMember">
      <summary>Represents the notifications of the <see cref="T:Microsoft.ServiceBus.Notifications.CDataMember" />.</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.CDataMember.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.Notifications.CDataMember" /> class.</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.CDataMember.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.Notifications.CDataMember" /> class with the specified value.</summary>
      <param name="value">The specified value.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.CDataMember.GenerateSchema(System.Xml.Schema.XmlSchemaSet)">
      <summary>Generates the schema representation for the XML schema conversion.</summary>
      <returns>The schema representation for the XML schema conversion.</returns>
      <param name="xs">The XML schema.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.CDataMember.GetSchema">
      <summary>Returns schema representation for the XML schemas.</summary>
      <returns>The schema representation for the XML schemas.</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.CDataMember.op_Implicit(Microsoft.ServiceBus.Notifications.CDataMember)~System.String">
      <summary>Converts the specified value to a <see cref="T:Microsoft.ServiceBus.Notifications.CDataMember" /> object.</summary>
      <returns>The value to converts the <see cref="T:Microsoft.ServiceBus.Notifications.CDataMember" /> object.</returns>
      <param name="value">The value to be converted.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.CDataMember.op_Implicit(System.String)~Microsoft.ServiceBus.Notifications.CDataMember">
      <summary>Converts the <see cref="T:Microsoft.ServiceBus.Notifications.CDataMember" /> object to a specified value.</summary>
      <returns>The converted <see cref="T:Microsoft.ServiceBus.Notifications.CDataMember" /> object to a specified value.</returns>
      <param name="value">The value to be converted.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.CDataMember.ReadXml(System.Xml.XmlReader)">
      <summary>Reads XML schema from its XML representation.</summary>
      <param name="reader">The XML reader to read the data.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.CDataMember.ToString">
      <summary>Returns a string that represents the current object.</summary>
      <returns>A string that represents the current object.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Notifications.CDataMember.Value">
      <summary>Gets or sets the value of the <see cref="T:Microsoft.ServiceBus.Notifications.CDataMember" />.</summary>
      <returns>The value of the <see cref="T:Microsoft.ServiceBus.Notifications.CDataMember" />.</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.CDataMember.WriteXml(System.Xml.XmlWriter)">
      <summary>Writes XML data into its XML representation.</summary>
      <param name="writer">The XML writer to write.</param>
    </member>
    <member name="T:Microsoft.ServiceBus.Notifications.CollectionQueryResult`1">
      <summary>Represents a collection query result.</summary>
      <typeparam name="T">The type of the result.</typeparam>
    </member>
    <member name="P:Microsoft.ServiceBus.Notifications.CollectionQueryResult`1.ContinuationToken">
      <summary>Gets or sets the continuation token to use to retrieve the next set of results.</summary>
      <returns>The continuation token.</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.CollectionQueryResult`1.GetEnumerator">
      <summary>Returns an enumerator that iterates through the collection.</summary>
      <returns>An enumerator that iterates through the collection.</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.CollectionQueryResult`1.System#Collections#IEnumerable#GetEnumerator">
      <summary>Returns an enumerator that iterates through the collection.</summary>
      <returns>An enumerator that iterates through the collection.</returns>
    </member>
    <member name="T:Microsoft.ServiceBus.Notifications.GcmCredential">
      <summary>Represents the Google Cloud Messaging credential.</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.GcmCredential.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.Notifications.GcmCredential" /> class.</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.GcmCredential.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.Notifications.GcmCredential" /> class.</summary>
      <param name="googleApiKey">The Google API key.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.GcmCredential.Equals(System.Object)">
      <summary>Specifies whether the credential is equal with the specific object.</summary>
      <returns>true if the credential is equal with the specific object; otherwise, false.</returns>
      <param name="other">The other object to compare.</param>
    </member>
    <member name="P:Microsoft.ServiceBus.Notifications.GcmCredential.GcmEndpoint">
      <summary>Gets or sets the GCM endpoint.</summary>
      <returns>The GCM endpoint.</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.GcmCredential.GetHashCode">
      <summary>Retrieves the hash code for the credentials.</summary>
      <returns>The hash code for the credentials.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Notifications.GcmCredential.GoogleApiKey">
      <summary>Gets or sets the Google API key.</summary>
      <returns>The Google API key.</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.GcmCredential.OnValidate(System.Boolean)">
      <summary>Called to validate the given credential.</summary>
      <param name="allowLocalMockPns">true to allow local mock PNS; otherwise, false.</param>
    </member>
    <member name="T:Microsoft.ServiceBus.Notifications.GcmNotification">
      <summary>Represents a Google Cloud Messaging notification.</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.GcmNotification.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.Notifications.GcmNotification" /> class.</summary>
      <param name="jsonPayload">The JSON payload.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.GcmNotification.#ctor(System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.Notifications.GcmNotification" /> class.</summary>
      <param name="jsonPayload">The JSON payload.</param>
      <param name="tag">The notification tag.</param>
    </member>
    <member name="T:Microsoft.ServiceBus.Notifications.GcmRegistrationDescription">
      <summary>Represents a description of GCM registration.</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.GcmRegistrationDescription.#ctor(Microsoft.ServiceBus.Notifications.GcmRegistrationDescription)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.Notifications.GcmRegistrationDescription" /> class.</summary>
      <param name="sourceRegistration">The source of the registration.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.GcmRegistrationDescription.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.Notifications.GcmRegistrationDescription" /> class.</summary>
      <param name="gcmRegistrationId">The GCM registration ID.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.GcmRegistrationDescription.#ctor(System.String,System.Collections.Generic.IEnumerable{System.String})">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.Notifications.GcmRegistrationDescription" /> class.</summary>
      <param name="gcmRegistrationId">The GCM registration ID.</param>
      <param name="tags">The description tags.</param>
    </member>
    <member name="P:Microsoft.ServiceBus.Notifications.GcmRegistrationDescription.GcmRegistrationId">
      <summary>Gets or sets the GCM registration ID.</summary>
      <returns>The GCM registration ID.</returns>
    </member>
    <member name="T:Microsoft.ServiceBus.Notifications.GcmTemplateRegistrationDescription">
      <summary>Represents the description of GCM template registration.</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.GcmTemplateRegistrationDescription.#ctor(Microsoft.ServiceBus.Notifications.GcmTemplateRegistrationDescription)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.Notifications.GcmTemplateRegistrationDescription" /> class.</summary>
      <param name="sourceRegistration">The source of registration.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.GcmTemplateRegistrationDescription.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.Notifications.GcmTemplateRegistrationDescription" /> class.</summary>
      <param name="gcmRegistrationId">The GCM registration ID.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.GcmTemplateRegistrationDescription.#ctor(System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.Notifications.GcmTemplateRegistrationDescription" /> class.</summary>
      <param name="gcmRegistrationId">The GCM registration ID.</param>
      <param name="jsonPayload">The JSON payload.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.GcmTemplateRegistrationDescription.#ctor(System.String,System.String,System.Collections.Generic.IEnumerable{System.String})">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.Notifications.GcmTemplateRegistrationDescription" /> class.</summary>
      <param name="gcmRegistrationId">The GCM registration ID.</param>
      <param name="jsonPayload">The JSON payload.</param>
      <param name="tags">The description tags.</param>
    </member>
    <member name="P:Microsoft.ServiceBus.Notifications.GcmTemplateRegistrationDescription.BodyTemplate">
      <summary>Gets or sets the body template.</summary>
      <returns>The body template.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Notifications.GcmTemplateRegistrationDescription.TemplateName">
      <summary>Gets or sets the name of the GCM template.</summary>
      <returns>The name of the GCM template.</returns>
    </member>
    <member name="T:Microsoft.ServiceBus.Notifications.MpnsCredential">
      <summary>Provides credential of Microsoft Push Notification Service (MPNS).</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.MpnsCredential.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.Notifications.MpnsCredential" /> class.</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.MpnsCredential.#ctor(System.Byte[],System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.Notifications.MpnsCredential" /> class.</summary>
      <param name="certificateBuffer">The certificate buffer.</param>
      <param name="certificateKey">The certificate key.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.MpnsCredential.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate,System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.Notifications.MpnsCredential" /> class.</summary>
      <param name="mpnsCertificate">The MPNS certificate.</param>
      <param name="certificateKey">The certificate key.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.MpnsCredential.#ctor(System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.Notifications.MpnsCredential" /> class.</summary>
      <param name="certificatePath">The certificate path.</param>
      <param name="certificateKey">The certificate key.</param>
    </member>
    <member name="P:Microsoft.ServiceBus.Notifications.MpnsCredential.CertificateKey">
      <summary>Gets or sets the certificate key for this credential.</summary>
      <returns>The certificate key for this credential.</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.MpnsCredential.Equals(System.Object)">
      <summary>Specifies whether the credential is the same with a specific object.</summary>
      <returns>true if the credential is the same with a specific object; otherwise, false.</returns>
      <param name="other">The other object to compare.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.MpnsCredential.GetHashCode">
      <summary>Retrieves the hash code for the credentials.</summary>
      <returns>The hash code for the credentials.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Notifications.MpnsCredential.MpnsCertificate">
      <summary>Gets or sets the MPNS certificate.</summary>
      <returns>The MPNS certificate.</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.MpnsCredential.OnValidate(System.Boolean)">
      <summary>Validates the MPNS credential.</summary>
      <param name="allowLocalMockPns">true to allow local mock PNS; otherwise, false.</param>
    </member>
    <member name="T:Microsoft.ServiceBus.Notifications.MpnsHeaderCollection">
      <summary>Provides a collection of MPNS header.</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.MpnsHeaderCollection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.Notifications.MpnsHeaderCollection" /> class.</summary>
    </member>
    <member name="T:Microsoft.ServiceBus.Notifications.MpnsNotification">
      <summary>Provides notification for Microsoft Push Notification Service (MPNS).</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.MpnsNotification.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.Notifications.MpnsNotification" /> class.</summary>
      <param name="payLoad">The payload.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.MpnsNotification.#ctor(System.String,System.Collections.Generic.IDictionary{System.String,System.String})">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.Notifications.MpnsNotification" /> class.</summary>
      <param name="payLoad">The payload.</param>
      <param name="mpnsHeaders">The MPNS headers.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.MpnsNotification.#ctor(System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.Notifications.MpnsNotification" /> class.</summary>
      <param name="payLoad">The payload.</param>
      <param name="mpnsHeaders">The MPNS headers.</param>
      <param name="tag">The notification tag.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.MpnsNotification.#ctor(System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.Notifications.MpnsNotification" /> class.</summary>
      <param name="payLoad">The payload.</param>
      <param name="tag">The notification tag.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.MpnsNotification.#ctor(System.Xml.XmlDocument)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.Notifications.MpnsNotification" /> class.</summary>
      <param name="payLoad">The payload.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.MpnsNotification.#ctor(System.Xml.XmlDocument,System.Collections.Generic.IDictionary{System.String,System.String})">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.Notifications.MpnsNotification" /> class.</summary>
      <param name="payLoad">The payload.</param>
      <param name="mpnsHeaders">The MPNS headers.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.MpnsNotification.#ctor(System.Xml.XmlDocument,System.Collections.Generic.IDictionary{System.String,System.String},System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.Notifications.MpnsNotification" /> class.</summary>
      <param name="payLoad">The payload.</param>
      <param name="mpnsHeaders">The MPNS headers.</param>
      <param name="tag">The notification tag.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.MpnsNotification.#ctor(System.Xml.XmlDocument,System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.Notifications.MpnsNotification" /> class.</summary>
      <param name="payLoad">The payload.</param>
      <param name="tag">The notification tag.</param>
    </member>
    <member name="T:Microsoft.ServiceBus.Notifications.MpnsRegistrationDescription">
      <summary>Provides a description for MPNS registration.</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.MpnsRegistrationDescription.#ctor(Microsoft.ServiceBus.Notifications.MpnsRegistrationDescription)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.Notifications.MpnsRegistrationDescription" /> class.</summary>
      <param name="sourceRegistration">The source of registration.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.MpnsRegistrationDescription.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.Notifications.MpnsRegistrationDescription" /> class.</summary>
      <param name="channelUri">The channel URI.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.MpnsRegistrationDescription.#ctor(System.String,System.Collections.Generic.IEnumerable{System.String})">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.Notifications.MpnsRegistrationDescription" /> class.</summary>
      <param name="channelUri">The channel URI.</param>
      <param name="tags">The description tags.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.MpnsRegistrationDescription.#ctor(System.Uri)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.Notifications.MpnsRegistrationDescription" /> class.</summary>
      <param name="channelUri">The channel URI.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.MpnsRegistrationDescription.#ctor(System.Uri,System.Collections.Generic.IEnumerable{System.String})">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.Notifications.MpnsRegistrationDescription" /> class.</summary>
      <param name="channelUri">The channel URI.</param>
      <param name="tags">The description tags.</param>
    </member>
    <member name="P:Microsoft.ServiceBus.Notifications.MpnsRegistrationDescription.ChannelUri">
      <summary>Gets or sets the channel URI.</summary>
      <returns>The channel URI.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Notifications.MpnsRegistrationDescription.SecondaryTileName"></member>
    <member name="T:Microsoft.ServiceBus.Notifications.MpnsTemplateRegistrationDescription">
      <summary>Provides description for MPNS template registration.</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.MpnsTemplateRegistrationDescription.#ctor(Microsoft.ServiceBus.Notifications.MpnsTemplateRegistrationDescription)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.Notifications.MpnsTemplateRegistrationDescription" /> class.</summary>
      <param name="sourceRegistration">The source of registration.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.MpnsTemplateRegistrationDescription.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.Notifications.MpnsTemplateRegistrationDescription" /> class.</summary>
      <param name="channelUri">The channel URI.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.MpnsTemplateRegistrationDescription.#ctor(System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.Notifications.MpnsTemplateRegistrationDescription" /> class.</summary>
      <param name="channelUri">The channel URI.</param>
      <param name="templatePayload">The XML template.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.MpnsTemplateRegistrationDescription.#ctor(System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.String})">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.Notifications.MpnsTemplateRegistrationDescription" /> class.</summary>
      <param name="channelUri">The channel URI.</param>
      <param name="templatePayload">The XML template.</param>
      <param name="mpnsHeaders">A list of MPNS headers.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.MpnsTemplateRegistrationDescription.#ctor(System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.Collections.Generic.IEnumerable{System.String})">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.Notifications.MpnsTemplateRegistrationDescription" /> class.</summary>
      <param name="channelUri">The channel URI.</param>
      <param name="templatePayload">The XML template.</param>
      <param name="mpnsHeaders">A list of MPNS headers.</param>
      <param name="tags">A description tags.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.MpnsTemplateRegistrationDescription.#ctor(System.String,System.String,System.Collections.Generic.IEnumerable{System.String})">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.Notifications.MpnsTemplateRegistrationDescription" /> class.</summary>
      <param name="channelUri">The channel URI.</param>
      <param name="templatePayload">The XML template.</param>
      <param name="tags">A description tags.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.MpnsTemplateRegistrationDescription.#ctor(System.String,System.Xml.XmlDocument)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.Notifications.MpnsTemplateRegistrationDescription" /> class.</summary>
      <param name="channelUri">The channel URI.</param>
      <param name="xmlTemplate">The XML template.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.MpnsTemplateRegistrationDescription.#ctor(System.Uri)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.Notifications.MpnsTemplateRegistrationDescription" /> class.</summary>
      <param name="channelUri">The channel URI.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.MpnsTemplateRegistrationDescription.#ctor(System.Uri,System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.Notifications.MpnsTemplateRegistrationDescription" /> class.</summary>
      <param name="channelUri">The channel URI.</param>
      <param name="templatePayload">The XML template.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.MpnsTemplateRegistrationDescription.#ctor(System.Uri,System.String,System.Collections.Generic.IDictionary{System.String,System.String})">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.Notifications.MpnsTemplateRegistrationDescription" /> class.</summary>
      <param name="channelUri">The channel URI.</param>
      <param name="templatePayload">The XML template.</param>
      <param name="mpnsHeaders">A list of WNS headers.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.MpnsTemplateRegistrationDescription.#ctor(System.Uri,System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.Collections.Generic.IEnumerable{System.String})">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.Notifications.MpnsTemplateRegistrationDescription" /> class.</summary>
      <param name="channelUri">The channel URI.</param>
      <param name="templatePayload">The XML template.</param>
      <param name="mpnsHeaders">A list of WNS headers.</param>
      <param name="tags">A description tags.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.MpnsTemplateRegistrationDescription.#ctor(System.Uri,System.String,System.Collections.Generic.IEnumerable{System.String})">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.Notifications.MpnsTemplateRegistrationDescription" /> class.</summary>
      <param name="channelUri">The channel URI.</param>
      <param name="templatePayload">The XML template.</param>
      <param name="tags">A description tags.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.MpnsTemplateRegistrationDescription.#ctor(System.Uri,System.Xml.XmlDocument)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.Notifications.MpnsTemplateRegistrationDescription" /> class.</summary>
      <param name="channelUri">The channel URI.</param>
      <param name="xmlTemplate">The XML template.</param>
    </member>
    <member name="P:Microsoft.ServiceBus.Notifications.MpnsTemplateRegistrationDescription.BodyTemplate">
      <summary>Gets or sets the body template.</summary>
      <returns>The body template.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Notifications.MpnsTemplateRegistrationDescription.MpnsHeaders">
      <summary>Gets or sets a collection of MPNS headers.</summary>
      <returns>A collection of MPNS headers.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Notifications.MpnsTemplateRegistrationDescription.TemplateName">
      <summary>Gets or sets the name of the MPNS template.</summary>
      <returns>Returns <see cref="T:System.String" />.</returns>
    </member>
    <member name="T:Microsoft.ServiceBus.Notifications.Notification">
      <summary>Abstract class representing a generic notification hub notification, including the target tag.</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.Notification.#ctor(System.Collections.Generic.IDictionary{System.String,System.String},System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.Notifications.Notification" /> class.</summary>
      <param name="additionalHeaders">The additional headers.</param>
      <param name="tag">The notification tag.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.Notification.AddOrUpdateHeader(System.String,System.String)">
      <summary>Add or updates a header with a given key and value.</summary>
      <param name="key">The header key.</param>
      <param name="value">The value of the header.</param>
    </member>
    <member name="P:Microsoft.ServiceBus.Notifications.Notification.Body">
      <summary>Gets or sets the body of the notification.</summary>
      <returns>The body of the notification.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Notifications.Notification.ContentType">
      <summary>Gets or sets the content type of the notification.</summary>
      <returns>The content type of the notification.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Notifications.Notification.Headers">
      <summary>Gets or sets a list of headers associated with the notification.</summary>
      <returns>A list of headers associated with the notification.</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.Notification.OnValidateAndPopulateHeaders">
      <summary>Validate and populates the headers.</summary>
    </member>
    <member name="P:Microsoft.ServiceBus.Notifications.Notification.PlatformType">
      <summary>Gets the platform type of the notification.</summary>
      <returns>The platform type of the notification.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Notifications.Notification.Tag">
      <summary>Gets or sets the notification tag.</summary>
      <returns>The notification tag.</returns>
    </member>
    <member name="T:Microsoft.ServiceBus.Notifications.NotificationHubClient">
      <summary>Represents a notification hub client.</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.NotificationHubClient.CancelNotificationAsync(System.String)"></member>
    <member name="M:Microsoft.ServiceBus.Notifications.NotificationHubClient.CreateAdmNativeRegistrationAsync(System.String)">
      <summary>Asynchronously creates a native administrative registration.</summary>
      <returns>The task object representing the asynchronous operation.</returns>
      <param name="admRegistrationId">The administrative registration identifier.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.NotificationHubClient.CreateAdmNativeRegistrationAsync(System.String,System.Collections.Generic.IEnumerable{System.String})">
      <summary>Asynchronously creates a native administrative registration.</summary>
      <returns>The task object representing the asynchronous operation.</returns>
      <param name="admRegistrationId">The administrative registration identifier.</param>
      <param name="tags">The tags for the registration.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.NotificationHubClient.CreateAdmTemplateRegistrationAsync(System.String,System.String)">
      <summary>Asynchronously creates an administrative template registration.</summary>
      <returns>The task object representing the asynchronous operation.</returns>
      <param name="admRegistrationId">The administrative registration identifier.</param>
      <param name="jsonPayload">The JSON payload.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.NotificationHubClient.CreateAdmTemplateRegistrationAsync(System.String,System.String,System.Collections.Generic.IEnumerable{System.String})">
      <summary>Asynchronously creates an administrative template registration.</summary>
      <returns>The task object representing the asynchronous operation.</returns>
      <param name="admRegistrationId">The administrative registration identifier.</param>
      <param name="jsonPayload">The JSON payload.</param>
      <param name="tags">The tags.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.NotificationHubClient.CreateAppleNativeRegistrationAsync(System.String)">
      <summary>Asynchronously creates an Apple native registration.</summary>
      <returns>The task that completes the asynchronous operation.</returns>
      <param name="deviceToken">The device token.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.NotificationHubClient.CreateAppleNativeRegistrationAsync(System.String,System.Collections.Generic.IEnumerable{System.String})">
      <summary>Asynchronously creates an Apple native registration.</summary>
      <returns>The task that completes the asynchronous operation.</returns>
      <param name="deviceToken">The device token.</param>
      <param name="tags">The tags.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.NotificationHubClient.CreateAppleTemplateRegistrationAsync(System.String,System.String)">
      <summary>Asynchronously creates an Apple template registration. To specify additional properties at creation, use the <see cref="M:Microsoft.ServiceBus.Notifications.NotificationHubClient.CreateRegistrationAsync``1(``0)" /> method.</summary>
      <returns>The task that completes the asynchronous operation.</returns>
      <param name="deviceToken">The device token.</param>
      <param name="jsonPayload">The JSON payload.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.NotificationHubClient.CreateAppleTemplateRegistrationAsync(System.String,System.String,System.Collections.Generic.IEnumerable{System.String})">
      <summary>Asynchronously creates an Apple template registration. To specify additional properties at creation, use the <see cref="M:Microsoft.ServiceBus.Notifications.NotificationHubClient.CreateRegistrationAsync``1(``0)" /> method.</summary>
      <returns>The task that completes the asynchronous operation.</returns>
      <param name="deviceToken">The device token.</param>
      <param name="jsonPayload">The JSON payload.</param>
      <param name="tags">The tags.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.NotificationHubClient.CreateBaiduNativeRegistrationAsync(System.String,System.String)"></member>
    <member name="M:Microsoft.ServiceBus.Notifications.NotificationHubClient.CreateBaiduNativeRegistrationAsync(System.String,System.String,System.Collections.Generic.IEnumerable{System.String})"></member>
    <member name="M:Microsoft.ServiceBus.Notifications.NotificationHubClient.CreateBaiduTemplateRegistrationAsync(System.String,System.String,System.String)"></member>
    <member name="M:Microsoft.ServiceBus.Notifications.NotificationHubClient.CreateBaiduTemplateRegistrationAsync(System.String,System.String,System.String,System.Collections.Generic.IEnumerable{System.String})"></member>
    <member name="M:Microsoft.ServiceBus.Notifications.NotificationHubClient.CreateClientFromConnectionString(System.String,System.String)">
      <summary>Creates a client from connection string.</summary>
      <returns>The created <see cref="T:Microsoft.ServiceBus.Notifications.NotificationHubClient" />.</returns>
      <param name="connectionString">The connection string.</param>
      <param name="notificationHubPath">The notification hub path.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.NotificationHubClient.CreateClientFromConnectionString(System.String,System.String,System.Boolean)">
      <summary>Creates a client from connection string.</summary>
      <returns>The created <see cref="T:Microsoft.ServiceBus.Notifications.NotificationHubClient" />.</returns>
      <param name="connectionString">The connection string.</param>
      <param name="notificationHubPath">The notification hub path.</param>
      <param name="enableTestSend">true to enable test send; otherwise, false.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.NotificationHubClient.CreateGcmNativeRegistrationAsync(System.String)">
      <summary>Asynchronously creates GCM native registration.</summary>
      <returns>The task that completes the asynchronous operation.</returns>
      <param name="gcmRegistrationId">The GCM registration ID.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.NotificationHubClient.CreateGcmNativeRegistrationAsync(System.String,System.Collections.Generic.IEnumerable{System.String})">
      <summary>Asynchronously creates GCM native registration.</summary>
      <returns>The task that completes the asynchronous operation.</returns>
      <param name="gcmRegistrationId">The GCM registration ID.</param>
      <param name="tags">The tags.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.NotificationHubClient.CreateGcmTemplateRegistrationAsync(System.String,System.String)">
      <summary>Asynchronously creates GCM template registration.</summary>
      <returns>The task that completes the asynchronous operation.</returns>
      <param name="gcmRegistrationId">The GCM registration ID.</param>
      <param name="jsonPayload">The JSON payload.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.NotificationHubClient.CreateGcmTemplateRegistrationAsync(System.String,System.String,System.Collections.Generic.IEnumerable{System.String})">
      <summary>Asynchronously creates GCM template registration.</summary>
      <returns>The task that completes the asynchronous operation.</returns>
      <param name="gcmRegistrationId">The GCM registration ID.</param>
      <param name="jsonPayload">The JSON payload.</param>
      <param name="tags">The tags.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.NotificationHubClient.CreateMpnsNativeRegistrationAsync(System.String)">
      <summary>Asynchronously creates MPNS native registration.</summary>
      <returns>The task that completes the asynchronous operation.</returns>
      <param name="channelUri">The channel URI.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.NotificationHubClient.CreateMpnsNativeRegistrationAsync(System.String,System.Collections.Generic.IEnumerable{System.String})">
      <summary>Asynchronously creates MPNS native registration.</summary>
      <returns>The task that completes the asynchronous operation.</returns>
      <param name="channelUri">The channel URI.</param>
      <param name="tags">The tags.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.NotificationHubClient.CreateMpnsTemplateRegistrationAsync(System.String,System.String)">
      <summary>Asynchronously creates MPNS template registration. To specify additional properties at creation, use the <see cref="M:Microsoft.ServiceBus.Notifications.NotificationHubClient.CreateRegistrationAsync``1(``0)" /> method.</summary>
      <returns>The task that completes the asynchronous operation.</returns>
      <param name="channelUri">The channel URI.</param>
      <param name="xmlTemplate">The XML template.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.NotificationHubClient.CreateMpnsTemplateRegistrationAsync(System.String,System.String,System.Collections.Generic.IEnumerable{System.String})">
      <summary>Asynchronously creates MPNS template registration. To specify additional properties at creation, use the <see cref="M:Microsoft.ServiceBus.Notifications.NotificationHubClient.CreateRegistrationAsync``1(``0)" /> method.</summary>
      <returns>The task that completes the asynchronous operation.</returns>
      <param name="channelUri">The channel URI.</param>
      <param name="xmlTemplate">The XML template.</param>
      <param name="tags">The tags.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.NotificationHubClient.CreateOrUpdateRegistrationAsync``1(``0)">
      <summary>Asynchronously creates or updates the client registration.</summary>
      <returns>The task object representing the asynchronous operation.</returns>
      <param name="registration">The registration to be created or updated.</param>
      <typeparam name="T">The type of registration.</typeparam>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.NotificationHubClient.CreateRegistrationAsync``1(``0)">
      <summary>Asynchronously creates a registration.</summary>
      <returns>The task that completes the asynchronous operation.</returns>
      <param name="registration">The registration to create.</param>
      <typeparam name="T">The type of registration.</typeparam>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.NotificationHubClient.CreateRegistrationIdAsync">
      <summary>Asynchronously creates a registration identifier.</summary>
      <returns>The task object representing the asynchronous operation.</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.NotificationHubClient.CreateWindowsNativeRegistrationAsync(System.String)">
      <summary>Asynchronously creates Windows native registration.</summary>
      <returns>The task that completes the asynchronous operation.</returns>
      <param name="channelUri">The channel URI.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.NotificationHubClient.CreateWindowsNativeRegistrationAsync(System.String,System.Collections.Generic.IEnumerable{System.String})">
      <summary>Asynchronously creates Windows native registration.</summary>
      <returns>The task that completes the asynchronous operation.</returns>
      <param name="channelUri">The channel URI.</param>
      <param name="tags">The tags.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.NotificationHubClient.CreateWindowsTemplateRegistrationAsync(System.String,System.String)">
      <summary>Asynchronously creates Windows template registration.</summary>
      <returns>The task that completes the asynchronous operation.</returns>
      <param name="channelUri">The channel URI.</param>
      <param name="xmlTemplate">The XML template.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.NotificationHubClient.CreateWindowsTemplateRegistrationAsync(System.String,System.String,System.Collections.Generic.IEnumerable{System.String})">
      <summary>Asynchronously creates Windows template registration.</summary>
      <returns>The task that completes the asynchronous operation.</returns>
      <param name="channelUri">The channel URI.</param>
      <param name="xmlTemplate">The XML template.</param>
      <param name="tags">The tags.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.NotificationHubClient.DeleteRegistrationAsync(Microsoft.ServiceBus.Notifications.RegistrationDescription)">
      <summary>Asynchronously deletes the registration.</summary>
      <returns>The task that completes the asynchronous operation.</returns>
      <param name="registration">The registration to delete.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.NotificationHubClient.DeleteRegistrationAsync(System.String)">
      <summary>Asynchronously deletes the registration.</summary>
      <returns>The task that completes the asynchronous operation.</returns>
      <param name="registrationId">The registration ID.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.NotificationHubClient.DeleteRegistrationAsync(System.String,System.String)">
      <summary>Asynchronously deletes the registration.</summary>
      <returns>The task that completes the asynchronous operation.</returns>
      <param name="registrationId">The registration ID.</param>
      <param name="etag">The entity tag.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.NotificationHubClient.DeleteRegistrationsByChannelAsync(System.String)">
      <summary>Asynchronously deletes the registrations by channel.</summary>
      <returns>The task that completes the asynchronous operation.</returns>
      <param name="pnsHandle">The PNS handle.</param>
    </member>
    <member name="P:Microsoft.ServiceBus.Notifications.NotificationHubClient.EnableTestSend">
      <summary>Gets or sets a value indicating whether the client enables a test send.</summary>
      <returns>true if the client enables a test send; otherwise, false.</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.NotificationHubClient.GetAllRegistrationsAsync(System.Int32)">
      <summary>Asynchronously retrieves all registrations in this notification hub.</summary>
      <returns>The task that completes the asynchronous operation.</returns>
      <param name="top">The location of the registration.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.NotificationHubClient.GetAllRegistrationsAsync(System.String,System.Int32)">
      <summary>Asynchronously retrieves all registrations in this notification hub.</summary>
      <returns>The task that completes the asynchronous operation.</returns>
      <param name="continuationToken">The continuation token.</param>
      <param name="top">The location of the registration.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.NotificationHubClient.GetBaseUri">
      <summary>Gets the value of the BaseUri attached property.</summary>
      <returns>The base URI of a given element.</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.NotificationHubClient.GetNotificationHubJobAsync(System.String)"></member>
    <member name="M:Microsoft.ServiceBus.Notifications.NotificationHubClient.GetNotificationHubJobsAsync"></member>
    <member name="M:Microsoft.ServiceBus.Notifications.NotificationHubClient.GetRegistrationAsync``1(System.String)">
      <summary>Asynchronously retrieves a registration with a given ID. The type of the registration depends upon the specified <paramref name="TRegistrationDescription" /> parameter.</summary>
      <returns>The task that completes the asynchronous operation.</returns>
      <param name="registrationId">The registration ID.</param>
      <typeparam name="TRegistrationDescription">The type of registration description.</typeparam>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.NotificationHubClient.GetRegistrationsByChannelAsync(System.String,System.Int32)">
      <summary>Asynchronously gets the registrations by channel.</summary>
      <returns>The task that completes the asynchronous operation.</returns>
      <param name="pnsHandle">The PNS handle.</param>
      <param name="top">The location of the registration.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.NotificationHubClient.GetRegistrationsByChannelAsync(System.String,System.String,System.Int32)">
      <summary>Asynchronously gets the registrations by channel.</summary>
      <returns>The task that completes the asynchronous operation.</returns>
      <param name="pnsHandle">The PNS handle.</param>
      <param name="continuationToken">The continuation token.</param>
      <param name="top">The location of the registration.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.NotificationHubClient.GetRegistrationsByTagAsync(System.String,System.Int32)">
      <summary>Asynchronously gets the registrations by tag.</summary>
      <returns>The task that completes the asynchronous operation.</returns>
      <param name="tag">The tag.</param>
      <param name="top">The location where to get the registrations.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.NotificationHubClient.GetRegistrationsByTagAsync(System.String,System.String,System.Int32)">
      <summary>Asynchronously gets the registrations by tag.</summary>
      <returns>The task that completes the asynchronous operation.</returns>
      <param name="tag">The tag.</param>
      <param name="continuationToken">The continuation token.</param>
      <param name="top">The location where to get the registrations.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.NotificationHubClient.RegistrationExistsAsync(System.String)">
      <summary>Asynchronously indicates that the registration already exists.</summary>
      <returns>The task that completes the asynchronous operation.</returns>
      <param name="registrationId">The registration ID.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.NotificationHubClient.ScheduleNotificationAsync(Microsoft.ServiceBus.Notifications.Notification,System.DateTimeOffset)"></member>
    <member name="M:Microsoft.ServiceBus.Notifications.NotificationHubClient.ScheduleNotificationAsync(Microsoft.ServiceBus.Notifications.Notification,System.DateTimeOffset,System.Collections.Generic.IEnumerable{System.String})"></member>
    <member name="M:Microsoft.ServiceBus.Notifications.NotificationHubClient.ScheduleNotificationAsync(Microsoft.ServiceBus.Notifications.Notification,System.DateTimeOffset,System.String)"></member>
    <member name="M:Microsoft.ServiceBus.Notifications.NotificationHubClient.SendAdmNativeNotificationAsync(System.String)">
      <summary>Asynchronously sends the administrative native notification.</summary>
      <returns>The task object representing the asynchronous operation.</returns>
      <param name="jsonPayload">The JSON payload.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.NotificationHubClient.SendAdmNativeNotificationAsync(System.String,System.Collections.Generic.IEnumerable{System.String})">
      <summary>Asynchronously sends the administrative native notification.</summary>
      <returns>The task object representing the asynchronous operation.</returns>
      <param name="jsonPayload">The JSON payload.</param>
      <param name="tags">The tags.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.NotificationHubClient.SendAdmNativeNotificationAsync(System.String,System.String)">
      <summary>Asynchronously sends the administrative native notification.</summary>
      <returns>The task object representing the asynchronous operation.</returns>
      <param name="jsonPayload">The JSON payload.</param>
      <param name="tagExpression">The tag expression.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.NotificationHubClient.SendAppleNativeNotificationAsync(System.String)">
      <summary>Asynchronously sends an Apple native notification. To specify an expiry, use the <see cref="M:Microsoft.ServiceBus.Notifications.NotificationHubClient.SendNotificationAsync(Microsoft.ServiceBus.Notifications.Notification)" /> method.</summary>
      <returns>The task that completes the asynchronous operation.</returns>
      <param name="jsonPayload">The JSON payload.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.NotificationHubClient.SendAppleNativeNotificationAsync(System.String,System.Collections.Generic.IEnumerable{System.String})">
      <summary>Asynchronously sends an Apple native notification to a non-empty set of tags (maximum 20). This is equivalent to a tagged expression with boolean ORs ("||"). To specify an expiry, use the <see cref="M:Microsoft.ServiceBus.Notifications.NotificationHubClient.SendNotificationAsync(Microsoft.ServiceBus.Notifications.Notification)" /> method.</summary>
      <returns>The task that completes the asynchronous operation.</returns>
      <param name="jsonPayload">The JSON payload.</param>
      <param name="tags">A non-empty set of tags (maximum 20 tags). Each string in the set can contain a single tag.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.NotificationHubClient.SendAppleNativeNotificationAsync(System.String,System.String)">
      <summary>Asynchronously sends an Apple native notification to a tag expression (a single tag "tag" is a valid tag expression). To specify an expiry, use the <see cref="M:Microsoft.ServiceBus.Notifications.NotificationHubClient.SendNotificationAsync(Microsoft.ServiceBus.Notifications.Notification)" /> method.</summary>
      <returns>The task that completes the asynchronous operation.</returns>
      <param name="jsonPayload">The JSON payload.</param>
      <param name="tagExpression">A tag expression is any boolean expression constructed using the logical operators AND (&amp;&amp;), OR (||), NOT (!), and round parentheses. For example: (A || B) &amp;&amp; !C. If an expression uses only ORs, it can contain at most 20 tags. Other expressions are limited to 6 tags. Note that a single tag "A" is a valid expression.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.NotificationHubClient.SendBaiduNativeNotificationAsync(System.String)"></member>
    <member name="M:Microsoft.ServiceBus.Notifications.NotificationHubClient.SendBaiduNativeNotificationAsync(System.String,System.Collections.Generic.IEnumerable{System.String})"></member>
    <member name="M:Microsoft.ServiceBus.Notifications.NotificationHubClient.SendBaiduNativeNotificationAsync(System.String,System.String)"></member>
    <member name="M:Microsoft.ServiceBus.Notifications.NotificationHubClient.SendGcmNativeNotificationAsync(System.String)">
      <summary>Asynchronously sends GCM native notification.</summary>
      <returns>The task that completes the asynchronous operation.</returns>
      <param name="jsonPayload">The JSON payload.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.NotificationHubClient.SendGcmNativeNotificationAsync(System.String,System.Collections.Generic.IEnumerable{System.String})">
      <summary>Asynchronously sends a GCM native notification to a non-empty set of tags (max 20). This is equivalent to a tag expression with boolean ORs ("||").</summary>
      <returns>The task that completes the asynchronous operation.</returns>
      <param name="jsonPayload">The JSON payload.</param>
      <param name="tags">A non-empty set of tags (maximum 20 tags). Each string in the set can contain a single tag.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.NotificationHubClient.SendGcmNativeNotificationAsync(System.String,System.String)">
      <summary>Asynchronously sends GCM native notification to a tag expression (a single tag "tag" is a valid tag expression).</summary>
      <returns>The task that completes the asynchronous operation.</returns>
      <param name="jsonPayload">The JSON payload.</param>
      <param name="tagExpression">A tag expression is any boolean expression constructed using the logical operators AND (&amp;&amp;), OR (||), NOT (!), and round parentheses. For example: (A || B) &amp;&amp; !C. If an expression uses only ORs, it can contain at most 20 tags. Other expressions are limited to 6 tags. Note that a single tag "A" is a valid expression.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.NotificationHubClient.SendMpnsNativeNotificationAsync(System.String)">
      <summary>Asynchronously sends MPNS native notification. To specify headers for MPNS, use the <see cref="M:Microsoft.ServiceBus.Notifications.NotificationHubClient.SendNotificationAsync(Microsoft.ServiceBus.Notifications.Notification)" /> method.</summary>
      <returns>The task that completes the asynchronous operation.</returns>
      <param name="nativePayload">The native payload.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.NotificationHubClient.SendMpnsNativeNotificationAsync(System.String,System.Collections.Generic.IEnumerable{System.String})">
      <summary>Asynchronously sends MPNS native notification to a non-empty set of tags (maximum 20). This is equivalent to a tag expression with boolean ORs ("||"). To specify headers for MPNS, use the <see cref="M:Microsoft.ServiceBus.Notifications.NotificationHubClient.SendNotificationAsync(Microsoft.ServiceBus.Notifications.Notification)" /> method.</summary>
      <returns>The task that completes the asynchronous operation.</returns>
      <param name="nativePayload">The notification payload.</param>
      <param name="tags">A non-empty set of tags (maximum 20 tags). Each string in the set can contain a single tag.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.NotificationHubClient.SendMpnsNativeNotificationAsync(System.String,System.String)">
      <summary>Asynchronously sends MPNS native notification to a tag expression (a single tag "tag" is a valid tag expression). To specify headers for MPNS, use the <see cref="M:Microsoft.ServiceBus.Notifications.NotificationHubClient.SendNotificationAsync(Microsoft.ServiceBus.Notifications.Notification)" /> method.</summary>
      <returns>The task that completes the asynchronous operation.</returns>
      <param name="nativePayload">The native payload.</param>
      <param name="tagExpression">A tag expression is any boolean expression constructed using the logical operators AND (&amp;&amp;), OR (||), NOT (!), and round parentheses. For example: (A || B) &amp;&amp; !C. If an expression uses only ORs, it can contain at most 20 tags. Other expressions are limited to 6 tags. Note that a single tag "A" is a valid expression.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.NotificationHubClient.SendNotificationAsync(Microsoft.ServiceBus.Notifications.Notification)">
      <summary>Asynchronously sends a notification to a non-empty set of tags (max 20). This is equivalent to a tag expression with boolean ORs ("||").</summary>
      <returns>The task that completes the asynchronous operation.</returns>
      <param name="notification">The notification to send.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.NotificationHubClient.SendNotificationAsync(Microsoft.ServiceBus.Notifications.Notification,System.Collections.Generic.IEnumerable{System.String})">
      <summary>Asynchronously sends a notification to a non-empty set of tags (max 20). This is equivalent to a tag expression with boolean ORs ("||").</summary>
      <returns>The task that completes the asynchronous operation.</returns>
      <param name="notification">The notification to send.</param>
      <param name="tags">A non-empty set of tags (max 20 tags). Each string in the set can contain a single tag.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.NotificationHubClient.SendNotificationAsync(Microsoft.ServiceBus.Notifications.Notification,System.String)">
      <summary>Asynchronously sends a notification to a tag expression (a single tag "tag" is a valid tag expression).</summary>
      <returns>The task that completes the asynchronous operation.</returns>
      <param name="notification">The notification to send.</param>
      <param name="tagExpression">A tag expression is any boolean expression constructed using the logical operators AND (&amp;&amp;), OR (||), NOT (!), and round parentheses. For example: (A || B) &amp;&amp; !C. If an expression uses only ORs, it can contain at most 20 tags. Other expressions are limited to 6 tags. Note that a single tag "A" is a valid expression.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.NotificationHubClient.SendTemplateNotificationAsync(System.Collections.Generic.IDictionary{System.String,System.String})">
      <summary>Asynchronously sends a template notification.</summary>
      <returns>The task that completes the asynchronous operation.</returns>
      <param name="properties">The properties of the template.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.NotificationHubClient.SendTemplateNotificationAsync(System.Collections.Generic.IDictionary{System.String,System.String},System.Collections.Generic.IEnumerable{System.String})">
      <summary>Asynchronously sends a template notification to a non-empty set of tags (maximum 20). This is equivalent to a tag expression with boolean ORs ("||").</summary>
      <returns>The task that completes the asynchronous operation.</returns>
      <param name="properties">The properties of the template.</param>
      <param name="tags">A non-empty set of tags (maximum 20 tags). Each string in the set can contain a single tag.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.NotificationHubClient.SendTemplateNotificationAsync(System.Collections.Generic.IDictionary{System.String,System.String},System.String)">
      <summary>Asynchronously sends a template notification to a tag expression (a single tag "tag" is a valid tag expression).</summary>
      <returns>The task that completes the asynchronous operation.</returns>
      <param name="properties">The properties of the template.</param>
      <param name="tagExpression">A tag expression is any boolean expression constructed using the logical operators AND (&amp;&amp;), OR (||), NOT (!), and round parentheses. For example: (A || B) &amp;&amp; !C. If an expression uses only ORs, it can contain at most 20 tags. Other expressions are limited to 6 tags. Note that a single tag "A" is a valid expression.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.NotificationHubClient.SendWindowsNativeNotificationAsync(System.String)">
      <summary>Asynchronously sends a Windows native notification. To specify headers for WNS, use the <see cref="M:Microsoft.ServiceBus.Notifications.NotificationHubClient.SendNotificationAsync(Microsoft.ServiceBus.Notifications.Notification)" /> method.</summary>
      <returns>The task that completes the asynchronous operation.</returns>
      <param name="windowsNativePayload">The Windows native payload.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.NotificationHubClient.SendWindowsNativeNotificationAsync(System.String,System.Collections.Generic.IEnumerable{System.String})">
      <summary>Asynchronously sends a Windows native notification to a non-empty set of tags (max 20). This is equivalent to a tag expression with boolean ORs ("||"). To specify headers for WNS, use the <see cref="M:Microsoft.ServiceBus.Notifications.NotificationHubClient.SendNotificationAsync(Microsoft.ServiceBus.Notifications.Notification)" /> method.</summary>
      <returns>The task that completes the asynchronous operation.</returns>
      <param name="windowsNativePayload">The Windows native payload.</param>
      <param name="tags">A non-empty set of tags (max 20 tags). Each string in the set can contain a single tag.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.NotificationHubClient.SendWindowsNativeNotificationAsync(System.String,System.String)">
      <summary>Asynchronously sends a Windows native notification to a tag expression (a single tag "tag" is a valid tag expression). To specify headers for WNS, use the <see cref="M:Microsoft.ServiceBus.Notifications.NotificationHubClient.SendNotificationAsync(Microsoft.ServiceBus.Notifications.Notification)" /> method.</summary>
      <returns>The task that completes the asynchronous operation.</returns>
      <param name="windowsNativePayload">The Windows native payload.</param>
      <param name="tagExpression">A tag expression is any boolean expression constructed using the logical operators AND (&amp;&amp;), OR (||), NOT (!), and round parentheses. For example: (A || B) &amp;&amp; !C. If an expression uses only ORs, it can contain at most 20 tags. Other expressions are limited to 6 tags. Note that a single tag "A" is a valid expression.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.NotificationHubClient.SubmitNotificationHubJobAsync(Microsoft.ServiceBus.Notifications.NotificationHubJob)"></member>
    <member name="M:Microsoft.ServiceBus.Notifications.NotificationHubClient.UpdateRegistrationAsync``1(``0)">
      <summary>Asynchronously updates the registration.</summary>
      <returns>A task that will complete when the update finishes.</returns>
      <param name="registration">The registration to update.</param>
      <typeparam name="T">The type of registration.</typeparam>
    </member>
    <member name="T:Microsoft.ServiceBus.Notifications.NotificationHubDescription">
      <summary>Represents a notification hub description.</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.NotificationHubDescription.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.Notifications.NotificationHubDescription" /> class.</summary>
      <param name="path">The path of the description.</param>
    </member>
    <member name="P:Microsoft.ServiceBus.Notifications.NotificationHubDescription.AdmCredential">
      <summary>Gets or sets the administrative credential.</summary>
      <returns>The administrative credential.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Notifications.NotificationHubDescription.ApnsCredential">
      <summary>Gets or sets the APNS credential.</summary>
      <returns>The APNS credential.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Notifications.NotificationHubDescription.Authorization">
      <summary>Gets the authorization rules for this description.</summary>
      <returns>The authorization rules for this description.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Notifications.NotificationHubDescription.BaiduCredential"></member>
    <member name="P:Microsoft.ServiceBus.Notifications.NotificationHubDescription.DailyApiCalls">
      <summary>Gets the daily API calls for the notification.</summary>
      <returns>The daily API calls for the notification.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Notifications.NotificationHubDescription.DailyMaxActiveDevices">
      <summary>Gets the daily maximum active devices for notification.</summary>
      <returns>The daily maximum active devices for notification.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Notifications.NotificationHubDescription.DailyMaxActiveRegistrations">
      <summary>Gets the daily maximum active registrations for the notification.</summary>
      <returns>The daily maximum active registrations for the notification.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Notifications.NotificationHubDescription.DailyOperations">
      <summary>Gets the daily operations for the description.</summary>
      <returns>The daily operations for the description.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Notifications.NotificationHubDescription.DailyPushes">
      <summary>Gets the daily pushes for the notification.</summary>
      <returns>The daily pushes for the notification.</returns>
    </member>
    <member name="F:Microsoft.ServiceBus.Notifications.NotificationHubDescription.DefaultFullSasRuleName">
      <summary>Specifies the default full SAS rule name.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Notifications.NotificationHubDescription.DefaultListenSasRuleName">
      <summary>Specifies the default listen SAS rule name.</summary>
    </member>
    <member name="P:Microsoft.ServiceBus.Notifications.NotificationHubDescription.GcmCredential">
      <summary>Gets or sets the GCM credential.</summary>
      <returns>The GCM credential.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Notifications.NotificationHubDescription.IsAnonymousAccessible">
      <summary>Gets a value indicating whether the description is anonymously accessible.</summary>
      <returns>true if the description is anonymously accessible; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Notifications.NotificationHubDescription.IsDisabled"></member>
    <member name="P:Microsoft.ServiceBus.Notifications.NotificationHubDescription.MpnsCredential">
      <summary>Gets or sets the MPNS credential. An <see cref="T:Microsoft.ServiceBus.Notifications.MpnsCredential" /> instance with no defined certificate enables MPNS unauthenticated MPNS support.</summary>
      <returns>The MPNS credential.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Notifications.NotificationHubDescription.Path">
      <summary>Gets or sets the path of this description.</summary>
      <returns>The path of this description.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Notifications.NotificationHubDescription.RegistrationTtl">
      <summary>Gets or sets the expiration time of all registrations in this notification hub.</summary>
      <returns>The registration TTL.</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.NotificationHubDescription.SetAccessPasswords(System.String,System.String,System.String,System.String)">
      <summary>Sets the access passwords.</summary>
      <param name="fullAccessRuleName">The full access rule name.</param>
      <param name="fullAccessPassword">The full access password.</param>
      <param name="listenAccessRuleName">The listen access rule name.</param>
      <param name="listenAccessPassword">The listen access password.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.NotificationHubDescription.SetDefaultAccessPasswords(System.String,System.String)">
      <summary>Sets the default access passwords.</summary>
      <param name="fullAccessPassword">The full access password.</param>
      <param name="listenAccessPassword">The listen access password.</param>
    </member>
    <member name="P:Microsoft.ServiceBus.Notifications.NotificationHubDescription.UserMetadata">
      <summary>Gets or sets the user metadata associated with the description.</summary>
      <returns>The user metadata associated with the description.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Notifications.NotificationHubDescription.WnsCredential">
      <summary>Gets or sets the WNS credential.</summary>
      <returns>The WNS credential.</returns>
    </member>
    <member name="T:Microsoft.ServiceBus.Notifications.NotificationHubJob"></member>
    <member name="M:Microsoft.ServiceBus.Notifications.NotificationHubJob.#ctor"></member>
    <member name="P:Microsoft.ServiceBus.Notifications.NotificationHubJob.CollectionName"></member>
    <member name="P:Microsoft.ServiceBus.Notifications.NotificationHubJob.CreatedAt"></member>
    <member name="P:Microsoft.ServiceBus.Notifications.NotificationHubJob.Failure"></member>
    <member name="P:Microsoft.ServiceBus.Notifications.NotificationHubJob.FailuresFileName"></member>
    <member name="P:Microsoft.ServiceBus.Notifications.NotificationHubJob.ImportFileUri"></member>
    <member name="P:Microsoft.ServiceBus.Notifications.NotificationHubJob.InputProperties"></member>
    <member name="P:Microsoft.ServiceBus.Notifications.NotificationHubJob.JobId"></member>
    <member name="P:Microsoft.ServiceBus.Notifications.NotificationHubJob.JobType"></member>
    <member name="P:Microsoft.ServiceBus.Notifications.NotificationHubJob.OutputContainerUri"></member>
    <member name="P:Microsoft.ServiceBus.Notifications.NotificationHubJob.OutputFileName"></member>
    <member name="P:Microsoft.ServiceBus.Notifications.NotificationHubJob.OutputProperties"></member>
    <member name="P:Microsoft.ServiceBus.Notifications.NotificationHubJob.Progress"></member>
    <member name="P:Microsoft.ServiceBus.Notifications.NotificationHubJob.Status"></member>
    <member name="P:Microsoft.ServiceBus.Notifications.NotificationHubJob.UpdatedAt"></member>
    <member name="T:Microsoft.ServiceBus.Notifications.NotificationHubJobStatus"></member>
    <member name="F:Microsoft.ServiceBus.Notifications.NotificationHubJobStatus.Completed">
      <summary />
    </member>
    <member name="F:Microsoft.ServiceBus.Notifications.NotificationHubJobStatus.Failed">
      <summary />
    </member>
    <member name="F:Microsoft.ServiceBus.Notifications.NotificationHubJobStatus.Running">
      <summary />
    </member>
    <member name="F:Microsoft.ServiceBus.Notifications.NotificationHubJobStatus.Started">
      <summary />
    </member>
    <member name="T:Microsoft.ServiceBus.Notifications.NotificationHubJobType"></member>
    <member name="F:Microsoft.ServiceBus.Notifications.NotificationHubJobType.ExportRegistrations">
      <summary />
    </member>
    <member name="F:Microsoft.ServiceBus.Notifications.NotificationHubJobType.ImportCreateRegistrations">
      <summary />
    </member>
    <member name="F:Microsoft.ServiceBus.Notifications.NotificationHubJobType.ImportDeleteRegistrations">
      <summary />
    </member>
    <member name="F:Microsoft.ServiceBus.Notifications.NotificationHubJobType.ImportUpdateRegistrations">
      <summary />
    </member>
    <member name="T:Microsoft.ServiceBus.Notifications.NotificationOutcome">
      <summary>Represents a notification outcome.</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.NotificationOutcome.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.Notifications.NotificationOutcome" /> class.</summary>
    </member>
    <member name="P:Microsoft.ServiceBus.Notifications.NotificationOutcome.Failure">
      <summary>Gets or sets the failure value of the outcome.</summary>
      <returns>The failure value of the outcome.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Notifications.NotificationOutcome.Results">
      <summary>Gets or sets the list of notification outcome results.</summary>
      <returns>The list of notification outcome results.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Notifications.NotificationOutcome.State">
      <summary>Gets or sets the state of this notification outcome.</summary>
      <returns>The state of this notification outcome.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Notifications.NotificationOutcome.Success">
      <summary>Gets or sets the success value of the outcome.</summary>
      <returns>The success value of the outcome.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Notifications.NotificationOutcome.TrackingId">
      <summary>Gets or sets the tracking ID.</summary>
      <returns>The tracking ID.</returns>
    </member>
    <member name="T:Microsoft.ServiceBus.Notifications.NotificationOutcomeCollection"></member>
    <member name="M:Microsoft.ServiceBus.Notifications.NotificationOutcomeCollection.#ctor"></member>
    <member name="T:Microsoft.ServiceBus.Notifications.NotificationOutcomeState">
      <summary>Specifies an enumeration of notification outcome state.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Notifications.NotificationOutcomeState.Abandoned">
      <summary />
    </member>
    <member name="F:Microsoft.ServiceBus.Notifications.NotificationOutcomeState.Completed">
      <summary />
    </member>
    <member name="F:Microsoft.ServiceBus.Notifications.NotificationOutcomeState.DetailedStateAvailable">
      <summary>The detailed state for the outcome is available.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Notifications.NotificationOutcomeState.Enqueued">
      <summary>The notification outcome is enqueued.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Notifications.NotificationOutcomeState.Processing">
      <summary />
    </member>
    <member name="F:Microsoft.ServiceBus.Notifications.NotificationOutcomeState.Unknown">
      <summary />
    </member>
    <member name="T:Microsoft.ServiceBus.Notifications.PnsCredential">
      <summary>Represents a PNS credential.</summary>
    </member>
    <member name="P:Microsoft.ServiceBus.Notifications.PnsCredential.BlockedOn">
      <summary>Gets or sets the time and date this credential is blocked on.</summary>
      <returns>The time and date this credential is blocked on.</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.PnsCredential.IsEqual(Microsoft.ServiceBus.Notifications.PnsCredential,Microsoft.ServiceBus.Notifications.PnsCredential)">
      <summary>Specifies whether the two credentials are equal.</summary>
      <returns>true if the two credentials are equal; otherwise, false.</returns>
      <param name="cred1">The first credential to compare.</param>
      <param name="cred2">The second credential to compare.</param>
    </member>
    <member name="P:Microsoft.ServiceBus.Notifications.PnsCredential.Item(System.String)">
      <summary>Gets or sets the value associated with this credential.</summary>
      <returns>The value associated with this credential.</returns>
      <param name="name">The name of the credential.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.PnsCredential.OnValidate(System.Boolean)">
      <summary>Validates the credential.</summary>
      <param name="allowLocalMockPns">true to allow local mock PNS; otherwise, false.</param>
    </member>
    <member name="P:Microsoft.ServiceBus.Notifications.PnsCredential.Properties">
      <summary>Gets or sets the properties of this credential.</summary>
      <returns>The properties of this credential.</returns>
    </member>
    <member name="T:Microsoft.ServiceBus.Notifications.RegistrationDescription">
      <summary>Represents a registration description.</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.RegistrationDescription.#ctor(Microsoft.ServiceBus.Notifications.RegistrationDescription)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.Notifications.RegistrationDescription" /> class.</summary>
      <param name="registration">The registration.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.RegistrationDescription.Deserialize(System.String)">
      <summary>Extracts the registration description from the serialized data.</summary>
      <returns>The registration description.</returns>
      <param name="descriptionString">The description associated with the registration.</param>
    </member>
    <member name="P:Microsoft.ServiceBus.Notifications.RegistrationDescription.ETag">
      <summary>Gets or sets the ETag associated with this description.</summary>
      <returns>The ETag associated with this description.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Notifications.RegistrationDescription.ExpirationTime">
      <summary>Gets or sets the expiration time of the registration.</summary>
      <returns>The expiration time of the registration.</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.RegistrationDescription.GenerateUrlSafeBase64(System.Byte[])">
      <summary>Generates a URL safe Base64.</summary>
      <returns>The generated URL safe Base64.</returns>
      <param name="hash"> The hash.</param>
    </member>
    <member name="P:Microsoft.ServiceBus.Notifications.RegistrationDescription.RegistrationId">
      <summary>Gets or sets the registration ID.</summary>
      <returns>The registration ID.</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.RegistrationDescription.Serialize">
      <summary> Serializes the registration description.</summary>
      <returns>The serialized registration description.</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.RegistrationDescription.TagCount(System.String)">
      <summary>Returns the total number of tags.</summary>
      <returns>The total number of tags.</returns>
      <param name="tags">The tags.</param>
    </member>
    <member name="P:Microsoft.ServiceBus.Notifications.RegistrationDescription.Tags">
      <summary>Gets or sets a set of tags associated with the registration.</summary>
      <returns>A set of tags associated with the registration.</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.RegistrationDescription.ValidateTags(System.String)">
      <summary>Validates the given tags.</summary>
      <returns>true if the tags are validated; otherwise, false.</returns>
      <param name="tags">The tags to validate.</param>
    </member>
    <member name="T:Microsoft.ServiceBus.Notifications.RegistrationResult">
      <summary>Represents the result of the registration.</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.RegistrationResult.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.Notifications.RegistrationResult" /> class.</summary>
    </member>
    <member name="P:Microsoft.ServiceBus.Notifications.RegistrationResult.ApplicationPlatform">
      <summary>Gets or sets the application platform.</summary>
      <returns>The application platform.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Notifications.RegistrationResult.Outcome">
      <summary>Gets or sets the outcome of the registration.</summary>
      <returns>The outcome of the registration.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Notifications.RegistrationResult.PnsHandle">
      <summary>Gets or sets the PNS handle.</summary>
      <returns>The PNS handle.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Notifications.RegistrationResult.RegistrationId">
      <summary>Gets or sets the registration ID.</summary>
      <returns>The registration ID.</returns>
    </member>
    <member name="T:Microsoft.ServiceBus.Notifications.ScheduledNotification">
      <summary>Represents the scheduled <see cref="T:Microsoft.ServiceBus.Notifications.Notification" />.</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.ScheduledNotification.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.Notifications.ScheduledNotification" /> class.</summary>
    </member>
    <member name="P:Microsoft.ServiceBus.Notifications.ScheduledNotification.Payload">
      <summary>Gets or sets the payload of this scheduled notification.</summary>
      <returns>The payload of this scheduled notification.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Notifications.ScheduledNotification.ScheduledNotificationId">
      <summary>Gets or sets the notification identifier.</summary>
      <returns>The notification identifier.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Notifications.ScheduledNotification.ScheduledTime">
      <summary>Gets or sets the scheduled time.</summary>
      <returns>The scheduled time.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Notifications.ScheduledNotification.Tags">
      <summary>Gets or sets the notification tag.</summary>
      <returns>The notification tag.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Notifications.ScheduledNotification.TrackingId">
      <summary>Gets or sets the tracking identifier.</summary>
      <returns>The tracking identifier.</returns>
    </member>
    <member name="T:Microsoft.ServiceBus.Notifications.TemplateNotification">
      <summary>Represents a template notification.</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.TemplateNotification.#ctor(System.Collections.Generic.IDictionary{System.String,System.String})">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.Notifications.TemplateNotification" /> class.</summary>
      <param name="templateProperties">The template properties.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.TemplateNotification.#ctor(System.Collections.Generic.IDictionary{System.String,System.String},System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.Notifications.TemplateNotification" /> class.</summary>
      <param name="templateProperties">The template properties.</param>
      <param name="tag">The notification tag.</param>
    </member>
    <member name="T:Microsoft.ServiceBus.Notifications.WindowsNotification">
      <summary>Represents the Windows notification.</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.WindowsNotification.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.Notifications.WindowsNotification" /> class.</summary>
      <param name="payLoad">The payload.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.WindowsNotification.#ctor(System.String,System.Collections.Generic.IDictionary{System.String,System.String})">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.Notifications.WindowsNotification" /> class.</summary>
      <param name="payLoad">The payload.</param>
      <param name="wnsHeaders">A list of WNS headers.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.WindowsNotification.#ctor(System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.Notifications.WindowsNotification" /> class.</summary>
      <param name="payLoad">The payload.</param>
      <param name="wnsHeaders">A list of WNS headers.</param>
      <param name="tag">The notification tag.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.WindowsNotification.#ctor(System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.Notifications.WindowsNotification" /> class.</summary>
      <param name="payLoad">The payload.</param>
      <param name="tag">The notification tag.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.WindowsNotification.#ctor(System.Xml.XmlDocument)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.Notifications.WindowsNotification" /> class.</summary>
      <param name="payLoad">The payload.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.WindowsNotification.#ctor(System.Xml.XmlDocument,System.Collections.Generic.IDictionary{System.String,System.String})">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.Notifications.WindowsNotification" /> class.</summary>
      <param name="payLoad">The payload.</param>
      <param name="wnsHeaders">A list of WNS headers.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.WindowsNotification.#ctor(System.Xml.XmlDocument,System.Collections.Generic.IDictionary{System.String,System.String},System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.Notifications.WindowsNotification" /> class.</summary>
      <param name="payLoad">The payload.</param>
      <param name="wnsHeaders">A list of WNS headers.</param>
      <param name="tag">The notification tag.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.WindowsNotification.#ctor(System.Xml.XmlDocument,System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.Notifications.WindowsNotification" /> class.</summary>
      <param name="payLoad">The payload.</param>
      <param name="tag">The notification tag.</param>
    </member>
    <member name="T:Microsoft.ServiceBus.Notifications.WindowsRegistrationDescription">
      <summary>Provides description for Windows registration.</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.WindowsRegistrationDescription.#ctor(Microsoft.ServiceBus.Notifications.WindowsRegistrationDescription)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.Notifications.WindowsRegistrationDescription" /> class.</summary>
      <param name="sourceRegistration">The source registration.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.WindowsRegistrationDescription.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.Notifications.WindowsRegistrationDescription" /> class.</summary>
      <param name="channelUri">The channel URI.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.WindowsRegistrationDescription.#ctor(System.String,System.Collections.Generic.IEnumerable{System.String})">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.Notifications.WindowsRegistrationDescription" /> class.</summary>
      <param name="channelUri">The channel URI.</param>
      <param name="tags">A list of tags.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.WindowsRegistrationDescription.#ctor(System.Uri)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.Notifications.WindowsRegistrationDescription" /> class.</summary>
      <param name="channelUri">The channel URI.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.WindowsRegistrationDescription.#ctor(System.Uri,System.Collections.Generic.IEnumerable{System.String})">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.Notifications.WindowsRegistrationDescription" /> class.</summary>
      <param name="channelUri">The channel URI.</param>
      <param name="tags">A list of tags.</param>
    </member>
    <member name="P:Microsoft.ServiceBus.Notifications.WindowsRegistrationDescription.ChannelUri">
      <summary>Gets or sets the channel URI.</summary>
      <returns>The channel URI.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Notifications.WindowsRegistrationDescription.SecondaryTileName"></member>
    <member name="T:Microsoft.ServiceBus.Notifications.WindowsTemplateRegistrationDescription">
      <summary>Provides description for Windows template registration.</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.WindowsTemplateRegistrationDescription.#ctor(Microsoft.ServiceBus.Notifications.WindowsTemplateRegistrationDescription)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.Notifications.WindowsTemplateRegistrationDescription" /> class.</summary>
      <param name="sourceRegistration">The source registration.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.WindowsTemplateRegistrationDescription.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.Notifications.WindowsTemplateRegistrationDescription" /> class.</summary>
      <param name="channelUri">The channel URI.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.WindowsTemplateRegistrationDescription.#ctor(System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.Notifications.WindowsTemplateRegistrationDescription" /> class.</summary>
      <param name="channelUri">The channel URI.</param>
      <param name="templatePayload">The XML template.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.WindowsTemplateRegistrationDescription.#ctor(System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.String})">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.Notifications.WindowsTemplateRegistrationDescription" /> class.</summary>
      <param name="channelUri">The channel URI.</param>
      <param name="templatePayload">The XML template.</param>
      <param name="wnsHeaders">The WNS headers.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.WindowsTemplateRegistrationDescription.#ctor(System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.Collections.Generic.IEnumerable{System.String})">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.Notifications.WindowsTemplateRegistrationDescription" /> class.</summary>
      <param name="channelUri">The channel URI.</param>
      <param name="templatePayload">The XML template.</param>
      <param name="wnsHeaders">The WNS headers.</param>
      <param name="tags">The description tags.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.WindowsTemplateRegistrationDescription.#ctor(System.String,System.String,System.Collections.Generic.IEnumerable{System.String})">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.Notifications.WindowsTemplateRegistrationDescription" /> class.</summary>
      <param name="channelUri">The channel URI.</param>
      <param name="templatePayload">The XML template.</param>
      <param name="tags">The description tags.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.WindowsTemplateRegistrationDescription.#ctor(System.String,System.Xml.XmlDocument)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.Notifications.WindowsTemplateRegistrationDescription" /> class.</summary>
      <param name="channelUri">The channel URI.</param>
      <param name="xmlTemplate">The XML template.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.WindowsTemplateRegistrationDescription.#ctor(System.Uri)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.Notifications.WindowsTemplateRegistrationDescription" /> class.</summary>
      <param name="channelUri">The channel URI.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.WindowsTemplateRegistrationDescription.#ctor(System.Uri,System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.Notifications.WindowsTemplateRegistrationDescription" /> class.</summary>
      <param name="channelUri">The channel URI.</param>
      <param name="templatePayload">The XML template.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.WindowsTemplateRegistrationDescription.#ctor(System.Uri,System.String,System.Collections.Generic.IDictionary{System.String,System.String})">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.Notifications.WindowsTemplateRegistrationDescription" /> class.</summary>
      <param name="channelUri">The channel URI.</param>
      <param name="templatePayload">The XML template.</param>
      <param name="wnsHeaders">The WNS headers.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.WindowsTemplateRegistrationDescription.#ctor(System.Uri,System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.Collections.Generic.IEnumerable{System.String})">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.Notifications.WindowsTemplateRegistrationDescription" /> class.</summary>
      <param name="channelUri">The channel URI.</param>
      <param name="templatePayload">The XML template.</param>
      <param name="wnsHeaders">The WNS headers.</param>
      <param name="tags">The description tags.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.WindowsTemplateRegistrationDescription.#ctor(System.Uri,System.String,System.Collections.Generic.IEnumerable{System.String})">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.Notifications.WindowsTemplateRegistrationDescription" /> class.</summary>
      <param name="channelUri">The channel URI.</param>
      <param name="templatePayload">The XML template.</param>
      <param name="tags">The description tags.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.WindowsTemplateRegistrationDescription.#ctor(System.Uri,System.Xml.XmlDocument)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.Notifications.WindowsTemplateRegistrationDescription" /> class.</summary>
      <param name="channelUri">The channel URI.</param>
      <param name="xmlTemplate">The XML template.</param>
    </member>
    <member name="P:Microsoft.ServiceBus.Notifications.WindowsTemplateRegistrationDescription.BodyTemplate">
      <summary>Gets or sets the body template.</summary>
      <returns>The body template.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Notifications.WindowsTemplateRegistrationDescription.TemplateName">
      <summary>Gets or sets the template name.</summary>
      <returns>The template name.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Notifications.WindowsTemplateRegistrationDescription.WnsHeaders">
      <summary>Gets or sets a collection of WNS headers.</summary>
      <returns>A collection of WNS headers.</returns>
    </member>
    <member name="T:Microsoft.ServiceBus.Notifications.WnsCredential">
      <summary>Represents a WNS credential.</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.WnsCredential.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.Notifications.WnsCredential" /> class.</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.WnsCredential.#ctor(System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.Notifications.WnsCredential" /> class.</summary>
      <param name="packageSid">The package ID.</param>
      <param name="secretKey">The secret key.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.WnsCredential.Equals(System.Object)">
      <summary>Specifies whether this instance os the same as the specified object.</summary>
      <returns>Returns <see cref="T:System.Boolean" />.</returns>
      <param name="other">The other object to compare.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.WnsCredential.GetHashCode">
      <summary>Retrieves the hash code for the credentials.</summary>
      <returns>The hash code for the credentials.</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.WnsCredential.OnValidate(System.Boolean)">
      <summary>Validates the credential.</summary>
      <param name="allowLocalMockPns">true to allow local mock PNS; otherwise, false.</param>
    </member>
    <member name="P:Microsoft.ServiceBus.Notifications.WnsCredential.PackageSid">
      <summary>Gets or sets the package ID for this credential.</summary>
      <returns>The package ID for this credential.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Notifications.WnsCredential.SecretKey">
      <summary>Gets or sets the secret key.</summary>
      <returns>The secret key.</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Notifications.WnsCredential.WindowsLiveEndpoint">
      <summary>Gets or sets the Windows Live endpoint.</summary>
      <returns>The Windows Live endpoint.</returns>
    </member>
    <member name="T:Microsoft.ServiceBus.Notifications.WnsHeaderCollection">
      <summary>Represents the collection of Windows Push Notification Services (WNS) headers.</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.WnsHeaderCollection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.ServiceBus.Notifications.WnsHeaderCollection" /> class.</summary>
    </member>
    <member name="T:Microsoft.ServiceBus.Tracing.ControllerCommand">
      <summary>Specifies an enumeration of controller command.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Tracing.ControllerCommand.Disable">
      <summary>The Disable command.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Tracing.ControllerCommand.Enable">
      <summary>The Enable command.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Tracing.ControllerCommand.SendManifest">
      <summary>The SendManifest command.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Tracing.ControllerCommand.Update">
      <summary>The Update command.</summary>
    </member>
    <member name="T:Microsoft.ServiceBus.Tracing.EventChannel">
      <summary>Enumerates the events associated with the service bus.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Tracing.EventChannel.Application">
      <summary>The application event.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Tracing.EventChannel.Default">
      <summary>The default event.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Tracing.EventChannel.Reserved">
      <summary>The reserved event.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Tracing.EventChannel.Security">
      <summary>The security event.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Tracing.EventChannel.Setup">
      <summary>The setup event.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Tracing.EventChannel.System">
      <summary>The system event.</summary>
    </member>
    <member name="T:Microsoft.ServiceBus.Tracing.EventCommand">
      <summary>Specifies an enumeration of event command.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Tracing.EventCommand.Disable">
      <summary>The Disable command.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Tracing.EventCommand.Enable">
      <summary>The Enable command.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Tracing.EventCommand.SendManifest">
      <summary>The SendManifest command.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Tracing.EventCommand.Update">
      <summary>The Update command.</summary>
    </member>
    <member name="T:Microsoft.ServiceBus.Tracing.EventKeywords">
      <summary>Specifies the standard keywords that apply to events.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Tracing.EventKeywords.All">
      <summary>The keyword is All.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Tracing.EventKeywords.AuditFailure">
      <summary>The keyword is AuditFailure.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Tracing.EventKeywords.AuditSuccess">
      <summary>The keyword is AuditSuccess.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Tracing.EventKeywords.CorrelationHint">
      <summary>The keyword is CorrelationHint.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Tracing.EventKeywords.EventLogClassic">
      <summary>The keyword is EventLogClassic.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Tracing.EventKeywords.None">
      <summary>The keyword is None.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Tracing.EventKeywords.Sqm">
      <summary>The keyword is Sqm.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Tracing.EventKeywords.WdiContext">
      <summary>The keyword is WdiContext.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Tracing.EventKeywords.WdiDiagnostic">
      <summary>The keyword is WdiDiagnostic.</summary>
    </member>
    <member name="T:Microsoft.ServiceBus.Tracing.EventLevel">
      <summary>Specifies an enumeration of event level defined in an event provider.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Tracing.EventLevel.Critical">
      <summary>The level is Critical.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Tracing.EventLevel.Error">
      <summary>The level is Error.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Tracing.EventLevel.Informational">
      <summary>The level is Informational.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Tracing.EventLevel.LogAlways">
      <summary>The level is LogAlways.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Tracing.EventLevel.Verbose">
      <summary>The level is Verbose.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Tracing.EventLevel.Warning">
      <summary>The level is Warning.</summary>
    </member>
    <member name="T:Microsoft.ServiceBus.Tracing.EventOpcode">
      <summary>Specifies an enumeration of event opcode.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Tracing.EventOpcode.DataCollectionStart">
      <summary>The DataCollectionStart opcode.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Tracing.EventOpcode.DataCollectionStop">
      <summary>The DataCollectionStop opcode.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Tracing.EventOpcode.Extension">
      <summary>The Extension opcode.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Tracing.EventOpcode.Info">
      <summary>The Info opcode.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Tracing.EventOpcode.Receive">
      <summary>The Receive opcode.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Tracing.EventOpcode.Reply">
      <summary>The Reply opcode.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Tracing.EventOpcode.Resume">
      <summary>The Resume opcode.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Tracing.EventOpcode.Send">
      <summary>The Send opcode.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Tracing.EventOpcode.Start">
      <summary>The Start opcode.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Tracing.EventOpcode.Stop">
      <summary>The Stop opcode.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Tracing.EventOpcode.Suspend">
      <summary>The Suspend opcode.</summary>
    </member>
    <member name="T:Microsoft.ServiceBus.Tracing.EventTask">
      <summary>Specifies an enumeration containing an event task that is defined in an event provider.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Tracing.EventTask.None">
      <summary>Task is None.</summary>
    </member>
    <member name="T:Microsoft.ServiceBus.Tracing.TrackingContext">
      <summary>Provides contextual properties for tracking changes in the messaging entities.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Tracing.TrackingContext.HeaderNamespace">
      <summary>Specifies the header namespace.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Tracing.TrackingContext.SystemTrackerName">
      <summary>Specifies the name of system tracker.</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Tracing.TrackingContext.TrackingIdName">
      <summary>Specifies the attribute name for the tracking identifier in the returned token response.</summary>
    </member>
    <member name="T:Microsoft.ServiceBus.Web.StreamMessageHelper">
      <summary>Helper class for creating a Message object from streaming content.</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Web.StreamMessageHelper.CreateJsonMessage(System.ServiceModel.Channels.MessageVersion,System.String,System.IO.Stream)">
      <summary>Creates a JSON message with a specified version.</summary>
      <returns>The created JSON message.</returns>
      <param name="version">The message version.</param>
      <param name="action">A description of how the message should be processed.</param>
      <param name="jsonStream">A stream that contains content used to write the body of the new message.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Web.StreamMessageHelper.CreateMessage(System.ServiceModel.Channels.MessageVersion,System.String,Microsoft.ServiceBus.Web.StreamWriterDelegate)">
      <summary>Creates a message from a stream, using the specified version, action, and delegate.</summary>
      <returns>Returns a stream-created <see cref="T:System.ServiceModel.Channels.Message" />.</returns>
      <param name="version">Specifies the Addressing and Envelope versions to use for the newly created message. If the request is made using REST, the Addressing and Envelope version are None.</param>
      <param name="action">A description of how the message should be processed. For Messages sent in response to a HTTP request, this value must be “GETRESPONSE”.</param>
      <param name="writer">A delegate that allows <see cref="Overload:Microsoft.ServiceBus.Web.StreamMessageHelper.CreateMessage" /> to callback and ask for a Stream to populate the body of the Message.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Web.StreamMessageHelper.CreateMessage(System.ServiceModel.Channels.MessageVersion,System.String,System.IO.Stream)">
      <summary>Creates a message, using the specified version, action, and stream.</summary>
      <returns>Returns a stream-created <see cref="T:System.ServiceModel.Channels.Message" />.</returns>
      <param name="version">Specifies the Addressing and Envelope versions to use for the newly created message. If the request is made using REST, the Addressing and Envelope version are None.</param>
      <param name="action">A description of how the message should be processed. For Messages sent in response to a HTTP request, this value must be “GETRESPONSE”.</param>
      <param name="stream">A stream that contains content used to write the body of the new message.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Web.StreamMessageHelper.GetStream(System.ServiceModel.Channels.Message)">
      <summary>Retrieves the stream of the specified message.</summary>
      <returns>Returns a <see cref="T:System.IO.Stream" /> that contains the stream of the message. A Stream is always returned regardless of whether the Message body is empty.</returns>
      <param name="message">The message.</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Web.StreamMessageHelper.GetStream(System.Xml.XmlDictionaryReader)">
      <summary>Retrieves the stream of the specified message with specified reader.</summary>
      <returns>The stream of the specified message.</returns>
      <param name="reader">The reader.</param>
    </member>
    <member name="T:Microsoft.ServiceBus.Web.StreamWriterDelegate">
      <summary>This delegate is used by StreamMessageHelper to write the body of streamed messages.</summary>
      <param name="output">The stream to write the message body to.</param>
    </member>
  </members>
</doc>