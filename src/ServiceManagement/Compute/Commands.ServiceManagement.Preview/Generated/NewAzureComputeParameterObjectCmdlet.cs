// 
// Copyright (c) Microsoft and contributors.  All rights reserved.
// 
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//   http://www.apache.org/licenses/LICENSE-2.0
// 
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// 
// See the License for the specific language governing permissions and
// limitations under the License.
// 

// Warning: This code was generated by a tool.
// 
// Changes to this file may cause incorrect behavior and will be lost if the
// code is regenerated.

using Microsoft.Azure;
using Microsoft.WindowsAzure.Commands.Compute.Automation.Models;
using Microsoft.WindowsAzure.Management.Compute;
using Microsoft.WindowsAzure.Management.Compute.Models;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Management.Automation;

namespace Microsoft.WindowsAzure.Commands.Compute.Automation
{
    [Cmdlet(VerbsCommon.New, "AzureComputeParameterObject", DefaultParameterSetName = "CreateParameterObjectByFullName")]
    [OutputType(typeof(object))]
    public partial class NewAzureComputeParameterObjectCmdlet : ComputeAutomationBaseCmdlet
    {
        [Parameter(ParameterSetName = "CreateParameterObjectByFriendlyName", Mandatory = true, Position = 0)]
        [ValidateSet(
            "DeploymentChangeConfigurationParameters",
            "DeploymentCreateParameters",
            "DeploymentDeleteRoleInstanceParameters",
            "DeploymentExtension",
            "DeploymentExtensionConfiguration",
            "DeploymentExtensionList",
            "DeploymentGetPackageParameters",
            "DeploymentNamedRole",
            "DeploymentNamedRoleList",
            "DeploymentRollbackUpdateOrUpgradeParameters",
            "DeploymentSwapParameters",
            "DeploymentUpdateStatusParameters",
            "DeploymentUpgradeParameters",
            "DeploymentWalkUpgradeDomainParameters",
            "DNSServerDNSAddParameters",
            "DNSServerDNSUpdateParameters",
            "ExtensionImageExtensionCertificateConfiguration",
            "ExtensionImageExtensionEndpointConfiguration",
            "ExtensionImageExtensionLocalResourceConfiguration",
            "ExtensionImageExtensionLocalResourceConfigurationList",
            "ExtensionImageInputEndpoint",
            "ExtensionImageInputEndpointList",
            "ExtensionImageInternalEndpoint",
            "ExtensionImageInternalEndpointList",
            "ExtensionImageRegisterParameters",
            "ExtensionImageUpdateParameters",
            "HostedServiceAddExtensionParameters",
            "HostedServiceCreateParameters",
            "HostedServiceUpdateParameters",
            "LoadBalancerCreateParameters",
            "LoadBalancerFrontendIPConfiguration",
            "LoadBalancerUpdateParameters",
            "ServiceCertificateCreateParameters",
            "ServiceCertificateDeleteParameters",
            "ServiceCertificateGetParameters",
            "VirtualMachineCaptureOSImageParameters",
            "VirtualMachineCaptureVMImageParameters",
            "VirtualMachineConfigurationSet",
            "VirtualMachineConfigurationSetList",
            "VirtualMachineCreateDeploymentParameters",
            "VirtualMachineCreateParameters",
            "VirtualMachineDataDiskConfiguration",
            "VirtualMachineDataDiskConfigurationList",
            "VirtualMachineDataVirtualHardDisk",
            "VirtualMachineDataVirtualHardDiskList",
            "VirtualMachineDiskCreateParameters",
            "VirtualMachineDiskUpdateParameters",
            "VirtualMachineDiskVirtualMachineDataDiskCreateParameters",
            "VirtualMachineDiskVirtualMachineDataDiskUpdateParameters",
            "VirtualMachineDnsServer",
            "VirtualMachineDnsServerList",
            "VirtualMachineDnsSettings",
            "VirtualMachineDomainJoinCredentials",
            "VirtualMachineDomainJoinProvisioning",
            "VirtualMachineDomainJoinSettings",
            "VirtualMachineInputEndpoint",
            "VirtualMachineInputEndpointList",
            "VirtualMachineLoadBalancer",
            "VirtualMachineLoadBalancerList",
            "VirtualMachineNetworkInterface",
            "VirtualMachineNetworkInterfaceList",
            "VirtualMachineOSDiskConfiguration",
            "VirtualMachineOSImageComputeImageAttributes",
            "VirtualMachineOSImageCreateParameters",
            "VirtualMachineOSImageMarketplaceImageAttributes",
            "VirtualMachineOSImagePlan",
            "VirtualMachineOSImageReplicateParameters",
            "VirtualMachineOSImageUpdateParameters",
            "VirtualMachineOSVirtualHardDisk",
            "VirtualMachinePublicIP",
            "VirtualMachinePublicIPList",
            "VirtualMachineResourceExtensionReference",
            "VirtualMachineResourceExtensionReferenceList",
            "VirtualMachineRole",
            "VirtualMachineRoleList",
            "VirtualMachineShutdownParameters",
            "VirtualMachineShutdownRolesParameters",
            "VirtualMachineSshSettingKeyPair",
            "VirtualMachineSshSettingKeyPairList",
            "VirtualMachineSshSettingPublicKey",
            "VirtualMachineSshSettingPublicKeyList",
            "VirtualMachineSshSettings",
            "VirtualMachineStartRolesParameters",
            "VirtualMachineStoredCertificateSettings",
            "VirtualMachineStoredCertificateSettingsList",
            "VirtualMachineUpdateLoadBalancedSetParameters",
            "VirtualMachineUpdateParameters",
            "VirtualMachineVMImageComputeImageAttributes",
            "VirtualMachineVMImageCreateParameters",
            "VirtualMachineVMImageDataDiskConfigurationCreateParameters",
            "VirtualMachineVMImageDataDiskConfigurationCreateParametersList",
            "VirtualMachineVMImageDataDiskConfigurationUpdateParameters",
            "VirtualMachineVMImageDataDiskConfigurationUpdateParametersList",
            "VirtualMachineVMImageInput",
            "VirtualMachineVMImageMarketplaceImageAttributes",
            "VirtualMachineVMImageOSDiskConfigurationCreateParameters",
            "VirtualMachineVMImageOSDiskConfigurationUpdateParameters",
            "VirtualMachineVMImagePlan",
            "VirtualMachineVMImageReplicateParameters",
            "VirtualMachineVMImageUpdateParameters",
            "VirtualMachineWindowsRemoteManagementListener",
            "VirtualMachineWindowsRemoteManagementListenerList",
            "VirtualMachineWindowsRemoteManagementSettings"
        )]
        public string FriendlyName { get; set; }

        [Parameter(ParameterSetName = "CreateParameterObjectByFullName", Mandatory = true, Position = 0)]
        [ValidateSet(
            "Microsoft.WindowsAzure.Management.Compute.Models.ComputeImageAttributes",
            "Microsoft.WindowsAzure.Management.Compute.Models.ConfigurationSet",
            "Microsoft.WindowsAzure.Management.Compute.Models.ConfigurationSet.PublicIP",
            "Microsoft.WindowsAzure.Management.Compute.Models.DataDiskConfiguration",
            "Microsoft.WindowsAzure.Management.Compute.Models.DataDiskConfigurationCreateParameters",
            "Microsoft.WindowsAzure.Management.Compute.Models.DataDiskConfigurationUpdateParameters",
            "Microsoft.WindowsAzure.Management.Compute.Models.DataVirtualHardDisk",
            "Microsoft.WindowsAzure.Management.Compute.Models.DeploymentChangeConfigurationParameters",
            "Microsoft.WindowsAzure.Management.Compute.Models.DeploymentCreateParameters",
            "Microsoft.WindowsAzure.Management.Compute.Models.DeploymentDeleteRoleInstanceParameters",
            "Microsoft.WindowsAzure.Management.Compute.Models.DeploymentGetPackageParameters",
            "Microsoft.WindowsAzure.Management.Compute.Models.DeploymentRollbackUpdateOrUpgradeParameters",
            "Microsoft.WindowsAzure.Management.Compute.Models.DeploymentSwapParameters",
            "Microsoft.WindowsAzure.Management.Compute.Models.DeploymentUpdateStatusParameters",
            "Microsoft.WindowsAzure.Management.Compute.Models.DeploymentUpgradeParameters",
            "Microsoft.WindowsAzure.Management.Compute.Models.DeploymentWalkUpgradeDomainParameters",
            "Microsoft.WindowsAzure.Management.Compute.Models.DNSAddParameters",
            "Microsoft.WindowsAzure.Management.Compute.Models.DnsServer",
            "Microsoft.WindowsAzure.Management.Compute.Models.DnsSettings",
            "Microsoft.WindowsAzure.Management.Compute.Models.DNSUpdateParameters",
            "Microsoft.WindowsAzure.Management.Compute.Models.DomainJoinCredentials",
            "Microsoft.WindowsAzure.Management.Compute.Models.DomainJoinProvisioning",
            "Microsoft.WindowsAzure.Management.Compute.Models.DomainJoinSettings",
            "Microsoft.WindowsAzure.Management.Compute.Models.ExtensionCertificateConfiguration",
            "Microsoft.WindowsAzure.Management.Compute.Models.ExtensionConfiguration",
            "Microsoft.WindowsAzure.Management.Compute.Models.ExtensionConfiguration.Extension",
            "Microsoft.WindowsAzure.Management.Compute.Models.ExtensionConfiguration.NamedRole",
            "Microsoft.WindowsAzure.Management.Compute.Models.ExtensionEndpointConfiguration",
            "Microsoft.WindowsAzure.Management.Compute.Models.ExtensionEndpointConfiguration.InputEndpoint",
            "Microsoft.WindowsAzure.Management.Compute.Models.ExtensionEndpointConfiguration.InternalEndpoint",
            "Microsoft.WindowsAzure.Management.Compute.Models.ExtensionImageRegisterParameters",
            "Microsoft.WindowsAzure.Management.Compute.Models.ExtensionImageUpdateParameters",
            "Microsoft.WindowsAzure.Management.Compute.Models.ExtensionLocalResourceConfiguration",
            "Microsoft.WindowsAzure.Management.Compute.Models.FrontendIPConfiguration",
            "Microsoft.WindowsAzure.Management.Compute.Models.HostedServiceAddExtensionParameters",
            "Microsoft.WindowsAzure.Management.Compute.Models.HostedServiceCreateParameters",
            "Microsoft.WindowsAzure.Management.Compute.Models.HostedServiceUpdateParameters",
            "Microsoft.WindowsAzure.Management.Compute.Models.InputEndpoint",
            "Microsoft.WindowsAzure.Management.Compute.Models.LoadBalancer",
            "Microsoft.WindowsAzure.Management.Compute.Models.LoadBalancerCreateParameters",
            "Microsoft.WindowsAzure.Management.Compute.Models.LoadBalancerUpdateParameters",
            "Microsoft.WindowsAzure.Management.Compute.Models.MarketplaceImageAttributes",
            "Microsoft.WindowsAzure.Management.Compute.Models.NetworkInterface",
            "Microsoft.WindowsAzure.Management.Compute.Models.OSDiskConfiguration",
            "Microsoft.WindowsAzure.Management.Compute.Models.OSDiskConfigurationCreateParameters",
            "Microsoft.WindowsAzure.Management.Compute.Models.OSDiskConfigurationUpdateParameters",
            "Microsoft.WindowsAzure.Management.Compute.Models.OSVirtualHardDisk",
            "Microsoft.WindowsAzure.Management.Compute.Models.Plan",
            "Microsoft.WindowsAzure.Management.Compute.Models.ResourceExtensionReference",
            "Microsoft.WindowsAzure.Management.Compute.Models.Role",
            "Microsoft.WindowsAzure.Management.Compute.Models.ServiceCertificateCreateParameters",
            "Microsoft.WindowsAzure.Management.Compute.Models.ServiceCertificateDeleteParameters",
            "Microsoft.WindowsAzure.Management.Compute.Models.ServiceCertificateGetParameters",
            "Microsoft.WindowsAzure.Management.Compute.Models.SshSettingKeyPair",
            "Microsoft.WindowsAzure.Management.Compute.Models.SshSettingPublicKey",
            "Microsoft.WindowsAzure.Management.Compute.Models.SshSettings",
            "Microsoft.WindowsAzure.Management.Compute.Models.StoredCertificateSettings",
            "Microsoft.WindowsAzure.Management.Compute.Models.VirtualMachineCaptureOSImageParameters",
            "Microsoft.WindowsAzure.Management.Compute.Models.VirtualMachineCaptureVMImageParameters",
            "Microsoft.WindowsAzure.Management.Compute.Models.VirtualMachineCreateDeploymentParameters",
            "Microsoft.WindowsAzure.Management.Compute.Models.VirtualMachineCreateParameters",
            "Microsoft.WindowsAzure.Management.Compute.Models.VirtualMachineDataDiskCreateParameters",
            "Microsoft.WindowsAzure.Management.Compute.Models.VirtualMachineDataDiskUpdateParameters",
            "Microsoft.WindowsAzure.Management.Compute.Models.VirtualMachineDiskCreateParameters",
            "Microsoft.WindowsAzure.Management.Compute.Models.VirtualMachineDiskUpdateParameters",
            "Microsoft.WindowsAzure.Management.Compute.Models.VirtualMachineOSImageCreateParameters",
            "Microsoft.WindowsAzure.Management.Compute.Models.VirtualMachineOSImageReplicateParameters",
            "Microsoft.WindowsAzure.Management.Compute.Models.VirtualMachineOSImageUpdateParameters",
            "Microsoft.WindowsAzure.Management.Compute.Models.VirtualMachineShutdownParameters",
            "Microsoft.WindowsAzure.Management.Compute.Models.VirtualMachineShutdownRolesParameters",
            "Microsoft.WindowsAzure.Management.Compute.Models.VirtualMachineStartRolesParameters",
            "Microsoft.WindowsAzure.Management.Compute.Models.VirtualMachineUpdateLoadBalancedSetParameters",
            "Microsoft.WindowsAzure.Management.Compute.Models.VirtualMachineUpdateLoadBalancedSetParameters.InputEndpoint",
            "Microsoft.WindowsAzure.Management.Compute.Models.VirtualMachineUpdateParameters",
            "Microsoft.WindowsAzure.Management.Compute.Models.VirtualMachineVMImageCreateParameters",
            "Microsoft.WindowsAzure.Management.Compute.Models.VirtualMachineVMImageReplicateParameters",
            "Microsoft.WindowsAzure.Management.Compute.Models.VirtualMachineVMImageUpdateParameters",
            "Microsoft.WindowsAzure.Management.Compute.Models.VMImageInput",
            "Microsoft.WindowsAzure.Management.Compute.Models.WindowsRemoteManagementListener",
            "Microsoft.WindowsAzure.Management.Compute.Models.WindowsRemoteManagementSettings",
            "System.Collections.Generic.List<ConfigurationSet.PublicIP>",
            "System.Collections.Generic.List<ConfigurationSet>",
            "System.Collections.Generic.List<DataDiskConfiguration>",
            "System.Collections.Generic.List<DataDiskConfigurationCreateParameters>",
            "System.Collections.Generic.List<DataDiskConfigurationUpdateParameters>",
            "System.Collections.Generic.List<DataVirtualHardDisk>",
            "System.Collections.Generic.List<DnsServer>",
            "System.Collections.Generic.List<ExtensionConfiguration.Extension>",
            "System.Collections.Generic.List<ExtensionConfiguration.NamedRole>",
            "System.Collections.Generic.List<ExtensionEndpointConfiguration.InputEndpoint>",
            "System.Collections.Generic.List<ExtensionEndpointConfiguration.InternalEndpoint>",
            "System.Collections.Generic.List<ExtensionLocalResourceConfiguration>",
            "System.Collections.Generic.List<InputEndpoint>",
            "System.Collections.Generic.List<LoadBalancer>",
            "System.Collections.Generic.List<NetworkInterface>",
            "System.Collections.Generic.List<ResourceExtensionReference>",
            "System.Collections.Generic.List<Role>",
            "System.Collections.Generic.List<SshSettingKeyPair>",
            "System.Collections.Generic.List<SshSettingPublicKey>",
            "System.Collections.Generic.List<StoredCertificateSettings>",
            "System.Collections.Generic.List<VirtualMachineUpdateLoadBalancedSetParameters.InputEndpoint>",
            "System.Collections.Generic.List<WindowsRemoteManagementListener>"
        )]
        public string FullName { get; set; }

        public override void ExecuteCmdlet()
        {
            base.ExecuteCmdlet();
            ExecuteClientAction(() =>
            {
                if (ParameterSetName == "CreateParameterObjectByFriendlyName")
                {
                    switch (FriendlyName)
                    {
                        case "DeploymentChangeConfigurationParameters" : WriteObject(new DeploymentChangeConfigurationParameters()); break;
                        case "DeploymentCreateParameters" : WriteObject(new DeploymentCreateParameters()); break;
                        case "DeploymentDeleteRoleInstanceParameters" : WriteObject(new DeploymentDeleteRoleInstanceParameters()); break;
                        case "DeploymentExtension" : WriteObject(new ExtensionConfiguration.Extension()); break;
                        case "DeploymentExtensionConfiguration" : WriteObject(new ExtensionConfiguration()); break;
                        case "DeploymentExtensionList" : WriteObject(new List<ExtensionConfiguration.Extension>()); break;
                        case "DeploymentGetPackageParameters" : WriteObject(new DeploymentGetPackageParameters()); break;
                        case "DeploymentNamedRole" : WriteObject(new ExtensionConfiguration.NamedRole()); break;
                        case "DeploymentNamedRoleList" : WriteObject(new List<ExtensionConfiguration.NamedRole>()); break;
                        case "DeploymentRollbackUpdateOrUpgradeParameters" : WriteObject(new DeploymentRollbackUpdateOrUpgradeParameters()); break;
                        case "DeploymentSwapParameters" : WriteObject(new DeploymentSwapParameters()); break;
                        case "DeploymentUpdateStatusParameters" : WriteObject(new DeploymentUpdateStatusParameters()); break;
                        case "DeploymentUpgradeParameters" : WriteObject(new DeploymentUpgradeParameters()); break;
                        case "DeploymentWalkUpgradeDomainParameters" : WriteObject(new DeploymentWalkUpgradeDomainParameters()); break;
                        case "DNSServerDNSAddParameters" : WriteObject(new DNSAddParameters()); break;
                        case "DNSServerDNSUpdateParameters" : WriteObject(new DNSUpdateParameters()); break;
                        case "ExtensionImageExtensionCertificateConfiguration" : WriteObject(new ExtensionCertificateConfiguration()); break;
                        case "ExtensionImageExtensionEndpointConfiguration" : WriteObject(new ExtensionEndpointConfiguration()); break;
                        case "ExtensionImageExtensionLocalResourceConfiguration" : WriteObject(new ExtensionLocalResourceConfiguration()); break;
                        case "ExtensionImageExtensionLocalResourceConfigurationList" : WriteObject(new List<ExtensionLocalResourceConfiguration>()); break;
                        case "ExtensionImageInputEndpoint" : WriteObject(new ExtensionEndpointConfiguration.InputEndpoint()); break;
                        case "ExtensionImageInputEndpointList" : WriteObject(new List<ExtensionEndpointConfiguration.InputEndpoint>()); break;
                        case "ExtensionImageInternalEndpoint" : WriteObject(new ExtensionEndpointConfiguration.InternalEndpoint()); break;
                        case "ExtensionImageInternalEndpointList" : WriteObject(new List<ExtensionEndpointConfiguration.InternalEndpoint>()); break;
                        case "ExtensionImageRegisterParameters" : WriteObject(new ExtensionImageRegisterParameters()); break;
                        case "ExtensionImageUpdateParameters" : WriteObject(new ExtensionImageUpdateParameters()); break;
                        case "HostedServiceAddExtensionParameters" : WriteObject(new HostedServiceAddExtensionParameters()); break;
                        case "HostedServiceCreateParameters" : WriteObject(new HostedServiceCreateParameters()); break;
                        case "HostedServiceUpdateParameters" : WriteObject(new HostedServiceUpdateParameters()); break;
                        case "LoadBalancerCreateParameters" : WriteObject(new LoadBalancerCreateParameters()); break;
                        case "LoadBalancerFrontendIPConfiguration" : WriteObject(new FrontendIPConfiguration()); break;
                        case "LoadBalancerUpdateParameters" : WriteObject(new LoadBalancerUpdateParameters()); break;
                        case "ServiceCertificateCreateParameters" : WriteObject(new ServiceCertificateCreateParameters()); break;
                        case "ServiceCertificateDeleteParameters" : WriteObject(new ServiceCertificateDeleteParameters()); break;
                        case "ServiceCertificateGetParameters" : WriteObject(new ServiceCertificateGetParameters()); break;
                        case "VirtualMachineCaptureOSImageParameters" : WriteObject(new VirtualMachineCaptureOSImageParameters()); break;
                        case "VirtualMachineCaptureVMImageParameters" : WriteObject(new VirtualMachineCaptureVMImageParameters()); break;
                        case "VirtualMachineConfigurationSet" : WriteObject(new ConfigurationSet()); break;
                        case "VirtualMachineConfigurationSetList" : WriteObject(new List<ConfigurationSet>()); break;
                        case "VirtualMachineCreateDeploymentParameters" : WriteObject(new VirtualMachineCreateDeploymentParameters()); break;
                        case "VirtualMachineCreateParameters" : WriteObject(new VirtualMachineCreateParameters()); break;
                        case "VirtualMachineDataDiskConfiguration" : WriteObject(new DataDiskConfiguration()); break;
                        case "VirtualMachineDataDiskConfigurationList" : WriteObject(new List<DataDiskConfiguration>()); break;
                        case "VirtualMachineDataVirtualHardDisk" : WriteObject(new DataVirtualHardDisk()); break;
                        case "VirtualMachineDataVirtualHardDiskList" : WriteObject(new List<DataVirtualHardDisk>()); break;
                        case "VirtualMachineDiskCreateParameters" : WriteObject(new VirtualMachineDiskCreateParameters()); break;
                        case "VirtualMachineDiskUpdateParameters" : WriteObject(new VirtualMachineDiskUpdateParameters()); break;
                        case "VirtualMachineDiskVirtualMachineDataDiskCreateParameters" : WriteObject(new VirtualMachineDataDiskCreateParameters()); break;
                        case "VirtualMachineDiskVirtualMachineDataDiskUpdateParameters" : WriteObject(new VirtualMachineDataDiskUpdateParameters()); break;
                        case "VirtualMachineDnsServer" : WriteObject(new DnsServer()); break;
                        case "VirtualMachineDnsServerList" : WriteObject(new List<DnsServer>()); break;
                        case "VirtualMachineDnsSettings" : WriteObject(new DnsSettings()); break;
                        case "VirtualMachineDomainJoinCredentials" : WriteObject(new DomainJoinCredentials()); break;
                        case "VirtualMachineDomainJoinProvisioning" : WriteObject(new DomainJoinProvisioning()); break;
                        case "VirtualMachineDomainJoinSettings" : WriteObject(new DomainJoinSettings()); break;
                        case "VirtualMachineInputEndpoint" : WriteObject(new InputEndpoint()); break;
                        case "VirtualMachineInputEndpointList" : WriteObject(new List<InputEndpoint>()); break;
                        case "VirtualMachineLoadBalancer" : WriteObject(new LoadBalancer()); break;
                        case "VirtualMachineLoadBalancerList" : WriteObject(new List<LoadBalancer>()); break;
                        case "VirtualMachineNetworkInterface" : WriteObject(new NetworkInterface()); break;
                        case "VirtualMachineNetworkInterfaceList" : WriteObject(new List<NetworkInterface>()); break;
                        case "VirtualMachineOSDiskConfiguration" : WriteObject(new OSDiskConfiguration()); break;
                        case "VirtualMachineOSImageComputeImageAttributes" : WriteObject(new ComputeImageAttributes()); break;
                        case "VirtualMachineOSImageCreateParameters" : WriteObject(new VirtualMachineOSImageCreateParameters()); break;
                        case "VirtualMachineOSImageMarketplaceImageAttributes" : WriteObject(new MarketplaceImageAttributes()); break;
                        case "VirtualMachineOSImagePlan" : WriteObject(new Plan()); break;
                        case "VirtualMachineOSImageReplicateParameters" : WriteObject(new VirtualMachineOSImageReplicateParameters()); break;
                        case "VirtualMachineOSImageUpdateParameters" : WriteObject(new VirtualMachineOSImageUpdateParameters()); break;
                        case "VirtualMachineOSVirtualHardDisk" : WriteObject(new OSVirtualHardDisk()); break;
                        case "VirtualMachinePublicIP" : WriteObject(new ConfigurationSet.PublicIP()); break;
                        case "VirtualMachinePublicIPList" : WriteObject(new List<ConfigurationSet.PublicIP>()); break;
                        case "VirtualMachineResourceExtensionReference" : WriteObject(new ResourceExtensionReference()); break;
                        case "VirtualMachineResourceExtensionReferenceList" : WriteObject(new List<ResourceExtensionReference>()); break;
                        case "VirtualMachineRole" : WriteObject(new Role()); break;
                        case "VirtualMachineRoleList" : WriteObject(new List<Role>()); break;
                        case "VirtualMachineShutdownParameters" : WriteObject(new VirtualMachineShutdownParameters()); break;
                        case "VirtualMachineShutdownRolesParameters" : WriteObject(new VirtualMachineShutdownRolesParameters()); break;
                        case "VirtualMachineSshSettingKeyPair" : WriteObject(new SshSettingKeyPair()); break;
                        case "VirtualMachineSshSettingKeyPairList" : WriteObject(new List<SshSettingKeyPair>()); break;
                        case "VirtualMachineSshSettingPublicKey" : WriteObject(new SshSettingPublicKey()); break;
                        case "VirtualMachineSshSettingPublicKeyList" : WriteObject(new List<SshSettingPublicKey>()); break;
                        case "VirtualMachineSshSettings" : WriteObject(new SshSettings()); break;
                        case "VirtualMachineStartRolesParameters" : WriteObject(new VirtualMachineStartRolesParameters()); break;
                        case "VirtualMachineStoredCertificateSettings" : WriteObject(new StoredCertificateSettings()); break;
                        case "VirtualMachineStoredCertificateSettingsList" : WriteObject(new List<StoredCertificateSettings>()); break;
                        case "VirtualMachineUpdateLoadBalancedSetParameters" : WriteObject(new VirtualMachineUpdateLoadBalancedSetParameters()); break;
                        case "VirtualMachineUpdateParameters" : WriteObject(new VirtualMachineUpdateParameters()); break;
                        case "VirtualMachineVMImageComputeImageAttributes" : WriteObject(new ComputeImageAttributes()); break;
                        case "VirtualMachineVMImageCreateParameters" : WriteObject(new VirtualMachineVMImageCreateParameters()); break;
                        case "VirtualMachineVMImageDataDiskConfigurationCreateParameters" : WriteObject(new DataDiskConfigurationCreateParameters()); break;
                        case "VirtualMachineVMImageDataDiskConfigurationCreateParametersList" : WriteObject(new List<DataDiskConfigurationCreateParameters>()); break;
                        case "VirtualMachineVMImageDataDiskConfigurationUpdateParameters" : WriteObject(new DataDiskConfigurationUpdateParameters()); break;
                        case "VirtualMachineVMImageDataDiskConfigurationUpdateParametersList" : WriteObject(new List<DataDiskConfigurationUpdateParameters>()); break;
                        case "VirtualMachineVMImageInput" : WriteObject(new VMImageInput()); break;
                        case "VirtualMachineVMImageMarketplaceImageAttributes" : WriteObject(new MarketplaceImageAttributes()); break;
                        case "VirtualMachineVMImageOSDiskConfigurationCreateParameters" : WriteObject(new OSDiskConfigurationCreateParameters()); break;
                        case "VirtualMachineVMImageOSDiskConfigurationUpdateParameters" : WriteObject(new OSDiskConfigurationUpdateParameters()); break;
                        case "VirtualMachineVMImagePlan" : WriteObject(new Plan()); break;
                        case "VirtualMachineVMImageReplicateParameters" : WriteObject(new VirtualMachineVMImageReplicateParameters()); break;
                        case "VirtualMachineVMImageUpdateParameters" : WriteObject(new VirtualMachineVMImageUpdateParameters()); break;
                        case "VirtualMachineWindowsRemoteManagementListener" : WriteObject(new WindowsRemoteManagementListener()); break;
                        case "VirtualMachineWindowsRemoteManagementListenerList" : WriteObject(new List<WindowsRemoteManagementListener>()); break;
                        case "VirtualMachineWindowsRemoteManagementSettings" : WriteObject(new WindowsRemoteManagementSettings()); break;
                        default : WriteWarning("Cannot find the type by FriendlyName = '" + FriendlyName + "'."); break;
                    }
                }
                else if (ParameterSetName == "CreateParameterObjectByFullName")
                {
                    switch (FullName)
                    {
                        case "Microsoft.WindowsAzure.Management.Compute.Models.ComputeImageAttributes" : WriteObject(new ComputeImageAttributes()); break;
                        case "Microsoft.WindowsAzure.Management.Compute.Models.ConfigurationSet" : WriteObject(new ConfigurationSet()); break;
                        case "Microsoft.WindowsAzure.Management.Compute.Models.ConfigurationSet.PublicIP" : WriteObject(new ConfigurationSet.PublicIP()); break;
                        case "Microsoft.WindowsAzure.Management.Compute.Models.DataDiskConfiguration" : WriteObject(new DataDiskConfiguration()); break;
                        case "Microsoft.WindowsAzure.Management.Compute.Models.DataDiskConfigurationCreateParameters" : WriteObject(new DataDiskConfigurationCreateParameters()); break;
                        case "Microsoft.WindowsAzure.Management.Compute.Models.DataDiskConfigurationUpdateParameters" : WriteObject(new DataDiskConfigurationUpdateParameters()); break;
                        case "Microsoft.WindowsAzure.Management.Compute.Models.DataVirtualHardDisk" : WriteObject(new DataVirtualHardDisk()); break;
                        case "Microsoft.WindowsAzure.Management.Compute.Models.DeploymentChangeConfigurationParameters" : WriteObject(new DeploymentChangeConfigurationParameters()); break;
                        case "Microsoft.WindowsAzure.Management.Compute.Models.DeploymentCreateParameters" : WriteObject(new DeploymentCreateParameters()); break;
                        case "Microsoft.WindowsAzure.Management.Compute.Models.DeploymentDeleteRoleInstanceParameters" : WriteObject(new DeploymentDeleteRoleInstanceParameters()); break;
                        case "Microsoft.WindowsAzure.Management.Compute.Models.DeploymentGetPackageParameters" : WriteObject(new DeploymentGetPackageParameters()); break;
                        case "Microsoft.WindowsAzure.Management.Compute.Models.DeploymentRollbackUpdateOrUpgradeParameters" : WriteObject(new DeploymentRollbackUpdateOrUpgradeParameters()); break;
                        case "Microsoft.WindowsAzure.Management.Compute.Models.DeploymentSwapParameters" : WriteObject(new DeploymentSwapParameters()); break;
                        case "Microsoft.WindowsAzure.Management.Compute.Models.DeploymentUpdateStatusParameters" : WriteObject(new DeploymentUpdateStatusParameters()); break;
                        case "Microsoft.WindowsAzure.Management.Compute.Models.DeploymentUpgradeParameters" : WriteObject(new DeploymentUpgradeParameters()); break;
                        case "Microsoft.WindowsAzure.Management.Compute.Models.DeploymentWalkUpgradeDomainParameters" : WriteObject(new DeploymentWalkUpgradeDomainParameters()); break;
                        case "Microsoft.WindowsAzure.Management.Compute.Models.DNSAddParameters" : WriteObject(new DNSAddParameters()); break;
                        case "Microsoft.WindowsAzure.Management.Compute.Models.DnsServer" : WriteObject(new DnsServer()); break;
                        case "Microsoft.WindowsAzure.Management.Compute.Models.DnsSettings" : WriteObject(new DnsSettings()); break;
                        case "Microsoft.WindowsAzure.Management.Compute.Models.DNSUpdateParameters" : WriteObject(new DNSUpdateParameters()); break;
                        case "Microsoft.WindowsAzure.Management.Compute.Models.DomainJoinCredentials" : WriteObject(new DomainJoinCredentials()); break;
                        case "Microsoft.WindowsAzure.Management.Compute.Models.DomainJoinProvisioning" : WriteObject(new DomainJoinProvisioning()); break;
                        case "Microsoft.WindowsAzure.Management.Compute.Models.DomainJoinSettings" : WriteObject(new DomainJoinSettings()); break;
                        case "Microsoft.WindowsAzure.Management.Compute.Models.ExtensionCertificateConfiguration" : WriteObject(new ExtensionCertificateConfiguration()); break;
                        case "Microsoft.WindowsAzure.Management.Compute.Models.ExtensionConfiguration" : WriteObject(new ExtensionConfiguration()); break;
                        case "Microsoft.WindowsAzure.Management.Compute.Models.ExtensionConfiguration.Extension" : WriteObject(new ExtensionConfiguration.Extension()); break;
                        case "Microsoft.WindowsAzure.Management.Compute.Models.ExtensionConfiguration.NamedRole" : WriteObject(new ExtensionConfiguration.NamedRole()); break;
                        case "Microsoft.WindowsAzure.Management.Compute.Models.ExtensionEndpointConfiguration" : WriteObject(new ExtensionEndpointConfiguration()); break;
                        case "Microsoft.WindowsAzure.Management.Compute.Models.ExtensionEndpointConfiguration.InputEndpoint" : WriteObject(new ExtensionEndpointConfiguration.InputEndpoint()); break;
                        case "Microsoft.WindowsAzure.Management.Compute.Models.ExtensionEndpointConfiguration.InternalEndpoint" : WriteObject(new ExtensionEndpointConfiguration.InternalEndpoint()); break;
                        case "Microsoft.WindowsAzure.Management.Compute.Models.ExtensionImageRegisterParameters" : WriteObject(new ExtensionImageRegisterParameters()); break;
                        case "Microsoft.WindowsAzure.Management.Compute.Models.ExtensionImageUpdateParameters" : WriteObject(new ExtensionImageUpdateParameters()); break;
                        case "Microsoft.WindowsAzure.Management.Compute.Models.ExtensionLocalResourceConfiguration" : WriteObject(new ExtensionLocalResourceConfiguration()); break;
                        case "Microsoft.WindowsAzure.Management.Compute.Models.FrontendIPConfiguration" : WriteObject(new FrontendIPConfiguration()); break;
                        case "Microsoft.WindowsAzure.Management.Compute.Models.HostedServiceAddExtensionParameters" : WriteObject(new HostedServiceAddExtensionParameters()); break;
                        case "Microsoft.WindowsAzure.Management.Compute.Models.HostedServiceCreateParameters" : WriteObject(new HostedServiceCreateParameters()); break;
                        case "Microsoft.WindowsAzure.Management.Compute.Models.HostedServiceUpdateParameters" : WriteObject(new HostedServiceUpdateParameters()); break;
                        case "Microsoft.WindowsAzure.Management.Compute.Models.InputEndpoint" : WriteObject(new InputEndpoint()); break;
                        case "Microsoft.WindowsAzure.Management.Compute.Models.LoadBalancer" : WriteObject(new LoadBalancer()); break;
                        case "Microsoft.WindowsAzure.Management.Compute.Models.LoadBalancerCreateParameters" : WriteObject(new LoadBalancerCreateParameters()); break;
                        case "Microsoft.WindowsAzure.Management.Compute.Models.LoadBalancerUpdateParameters" : WriteObject(new LoadBalancerUpdateParameters()); break;
                        case "Microsoft.WindowsAzure.Management.Compute.Models.MarketplaceImageAttributes" : WriteObject(new MarketplaceImageAttributes()); break;
                        case "Microsoft.WindowsAzure.Management.Compute.Models.NetworkInterface" : WriteObject(new NetworkInterface()); break;
                        case "Microsoft.WindowsAzure.Management.Compute.Models.OSDiskConfiguration" : WriteObject(new OSDiskConfiguration()); break;
                        case "Microsoft.WindowsAzure.Management.Compute.Models.OSDiskConfigurationCreateParameters" : WriteObject(new OSDiskConfigurationCreateParameters()); break;
                        case "Microsoft.WindowsAzure.Management.Compute.Models.OSDiskConfigurationUpdateParameters" : WriteObject(new OSDiskConfigurationUpdateParameters()); break;
                        case "Microsoft.WindowsAzure.Management.Compute.Models.OSVirtualHardDisk" : WriteObject(new OSVirtualHardDisk()); break;
                        case "Microsoft.WindowsAzure.Management.Compute.Models.Plan" : WriteObject(new Plan()); break;
                        case "Microsoft.WindowsAzure.Management.Compute.Models.ResourceExtensionReference" : WriteObject(new ResourceExtensionReference()); break;
                        case "Microsoft.WindowsAzure.Management.Compute.Models.Role" : WriteObject(new Role()); break;
                        case "Microsoft.WindowsAzure.Management.Compute.Models.ServiceCertificateCreateParameters" : WriteObject(new ServiceCertificateCreateParameters()); break;
                        case "Microsoft.WindowsAzure.Management.Compute.Models.ServiceCertificateDeleteParameters" : WriteObject(new ServiceCertificateDeleteParameters()); break;
                        case "Microsoft.WindowsAzure.Management.Compute.Models.ServiceCertificateGetParameters" : WriteObject(new ServiceCertificateGetParameters()); break;
                        case "Microsoft.WindowsAzure.Management.Compute.Models.SshSettingKeyPair" : WriteObject(new SshSettingKeyPair()); break;
                        case "Microsoft.WindowsAzure.Management.Compute.Models.SshSettingPublicKey" : WriteObject(new SshSettingPublicKey()); break;
                        case "Microsoft.WindowsAzure.Management.Compute.Models.SshSettings" : WriteObject(new SshSettings()); break;
                        case "Microsoft.WindowsAzure.Management.Compute.Models.StoredCertificateSettings" : WriteObject(new StoredCertificateSettings()); break;
                        case "Microsoft.WindowsAzure.Management.Compute.Models.VirtualMachineCaptureOSImageParameters" : WriteObject(new VirtualMachineCaptureOSImageParameters()); break;
                        case "Microsoft.WindowsAzure.Management.Compute.Models.VirtualMachineCaptureVMImageParameters" : WriteObject(new VirtualMachineCaptureVMImageParameters()); break;
                        case "Microsoft.WindowsAzure.Management.Compute.Models.VirtualMachineCreateDeploymentParameters" : WriteObject(new VirtualMachineCreateDeploymentParameters()); break;
                        case "Microsoft.WindowsAzure.Management.Compute.Models.VirtualMachineCreateParameters" : WriteObject(new VirtualMachineCreateParameters()); break;
                        case "Microsoft.WindowsAzure.Management.Compute.Models.VirtualMachineDataDiskCreateParameters" : WriteObject(new VirtualMachineDataDiskCreateParameters()); break;
                        case "Microsoft.WindowsAzure.Management.Compute.Models.VirtualMachineDataDiskUpdateParameters" : WriteObject(new VirtualMachineDataDiskUpdateParameters()); break;
                        case "Microsoft.WindowsAzure.Management.Compute.Models.VirtualMachineDiskCreateParameters" : WriteObject(new VirtualMachineDiskCreateParameters()); break;
                        case "Microsoft.WindowsAzure.Management.Compute.Models.VirtualMachineDiskUpdateParameters" : WriteObject(new VirtualMachineDiskUpdateParameters()); break;
                        case "Microsoft.WindowsAzure.Management.Compute.Models.VirtualMachineOSImageCreateParameters" : WriteObject(new VirtualMachineOSImageCreateParameters()); break;
                        case "Microsoft.WindowsAzure.Management.Compute.Models.VirtualMachineOSImageReplicateParameters" : WriteObject(new VirtualMachineOSImageReplicateParameters()); break;
                        case "Microsoft.WindowsAzure.Management.Compute.Models.VirtualMachineOSImageUpdateParameters" : WriteObject(new VirtualMachineOSImageUpdateParameters()); break;
                        case "Microsoft.WindowsAzure.Management.Compute.Models.VirtualMachineShutdownParameters" : WriteObject(new VirtualMachineShutdownParameters()); break;
                        case "Microsoft.WindowsAzure.Management.Compute.Models.VirtualMachineShutdownRolesParameters" : WriteObject(new VirtualMachineShutdownRolesParameters()); break;
                        case "Microsoft.WindowsAzure.Management.Compute.Models.VirtualMachineStartRolesParameters" : WriteObject(new VirtualMachineStartRolesParameters()); break;
                        case "Microsoft.WindowsAzure.Management.Compute.Models.VirtualMachineUpdateLoadBalancedSetParameters" : WriteObject(new VirtualMachineUpdateLoadBalancedSetParameters()); break;
                        case "Microsoft.WindowsAzure.Management.Compute.Models.VirtualMachineUpdateLoadBalancedSetParameters.InputEndpoint" : WriteObject(new VirtualMachineUpdateLoadBalancedSetParameters.InputEndpoint()); break;
                        case "Microsoft.WindowsAzure.Management.Compute.Models.VirtualMachineUpdateParameters" : WriteObject(new VirtualMachineUpdateParameters()); break;
                        case "Microsoft.WindowsAzure.Management.Compute.Models.VirtualMachineVMImageCreateParameters" : WriteObject(new VirtualMachineVMImageCreateParameters()); break;
                        case "Microsoft.WindowsAzure.Management.Compute.Models.VirtualMachineVMImageReplicateParameters" : WriteObject(new VirtualMachineVMImageReplicateParameters()); break;
                        case "Microsoft.WindowsAzure.Management.Compute.Models.VirtualMachineVMImageUpdateParameters" : WriteObject(new VirtualMachineVMImageUpdateParameters()); break;
                        case "Microsoft.WindowsAzure.Management.Compute.Models.VMImageInput" : WriteObject(new VMImageInput()); break;
                        case "Microsoft.WindowsAzure.Management.Compute.Models.WindowsRemoteManagementListener" : WriteObject(new WindowsRemoteManagementListener()); break;
                        case "Microsoft.WindowsAzure.Management.Compute.Models.WindowsRemoteManagementSettings" : WriteObject(new WindowsRemoteManagementSettings()); break;
                        case "System.Collections.Generic.List<ConfigurationSet.PublicIP>" : WriteObject(new List<ConfigurationSet.PublicIP>()); break;
                        case "System.Collections.Generic.List<ConfigurationSet>" : WriteObject(new List<ConfigurationSet>()); break;
                        case "System.Collections.Generic.List<DataDiskConfiguration>" : WriteObject(new List<DataDiskConfiguration>()); break;
                        case "System.Collections.Generic.List<DataDiskConfigurationCreateParameters>" : WriteObject(new List<DataDiskConfigurationCreateParameters>()); break;
                        case "System.Collections.Generic.List<DataDiskConfigurationUpdateParameters>" : WriteObject(new List<DataDiskConfigurationUpdateParameters>()); break;
                        case "System.Collections.Generic.List<DataVirtualHardDisk>" : WriteObject(new List<DataVirtualHardDisk>()); break;
                        case "System.Collections.Generic.List<DnsServer>" : WriteObject(new List<DnsServer>()); break;
                        case "System.Collections.Generic.List<ExtensionConfiguration.Extension>" : WriteObject(new List<ExtensionConfiguration.Extension>()); break;
                        case "System.Collections.Generic.List<ExtensionConfiguration.NamedRole>" : WriteObject(new List<ExtensionConfiguration.NamedRole>()); break;
                        case "System.Collections.Generic.List<ExtensionEndpointConfiguration.InputEndpoint>" : WriteObject(new List<ExtensionEndpointConfiguration.InputEndpoint>()); break;
                        case "System.Collections.Generic.List<ExtensionEndpointConfiguration.InternalEndpoint>" : WriteObject(new List<ExtensionEndpointConfiguration.InternalEndpoint>()); break;
                        case "System.Collections.Generic.List<ExtensionLocalResourceConfiguration>" : WriteObject(new List<ExtensionLocalResourceConfiguration>()); break;
                        case "System.Collections.Generic.List<InputEndpoint>" : WriteObject(new List<InputEndpoint>()); break;
                        case "System.Collections.Generic.List<LoadBalancer>" : WriteObject(new List<LoadBalancer>()); break;
                        case "System.Collections.Generic.List<NetworkInterface>" : WriteObject(new List<NetworkInterface>()); break;
                        case "System.Collections.Generic.List<ResourceExtensionReference>" : WriteObject(new List<ResourceExtensionReference>()); break;
                        case "System.Collections.Generic.List<Role>" : WriteObject(new List<Role>()); break;
                        case "System.Collections.Generic.List<SshSettingKeyPair>" : WriteObject(new List<SshSettingKeyPair>()); break;
                        case "System.Collections.Generic.List<SshSettingPublicKey>" : WriteObject(new List<SshSettingPublicKey>()); break;
                        case "System.Collections.Generic.List<StoredCertificateSettings>" : WriteObject(new List<StoredCertificateSettings>()); break;
                        case "System.Collections.Generic.List<VirtualMachineUpdateLoadBalancedSetParameters.InputEndpoint>" : WriteObject(new List<VirtualMachineUpdateLoadBalancedSetParameters.InputEndpoint>()); break;
                        case "System.Collections.Generic.List<WindowsRemoteManagementListener>" : WriteObject(new List<WindowsRemoteManagementListener>()); break;
                        default : WriteWarning("Cannot find the type by FullName = '" + FullName + "'."); break;
                    }
                }
            });
        }

    }
}
