// ----------------------------------------------------------------------------------
//
// Copyright Microsoft Corporation
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
// http://www.apache.org/licenses/LICENSE-2.0
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
// ----------------------------------------------------------------------------------

namespace Microsoft.WindowsAzure.Commands.ServiceManagement.IaaS.Extensions.MicrosoftAntimalware
{
    using Microsoft.WindowsAzure.Commands.ServiceManagement.Model;
    using System.Management.Automation;

    [Cmdlet(
        VerbsCommon.Remove,
        VirtualMachineMicrosoftAntimalwareExtensionNoun,
        DefaultParameterSetName = RemoveMicrosoftAntimalwareExtensionParamSetName),
    OutputType(typeof(IPersistentVM))]
    public class RemoveAzureVMMicrosoftAntimalwareExtensionCommand : VirtualMachineMicrosoftAntimalwareExtensionCmdletBase
    {
        protected const string RemoveMicrosoftAntimalwareExtensionParamSetName = "RemoveMicrosoftAntimalwareExtension";

        internal void ExecuteCommand()
        {
            // if diagnostics extension exists, remove any existing antimalware monitoring section from the configuration
            InitializeMonitoringSettings();
            RemoveExistingAntimalwareMonitoringConfig();

            // mark antimalware extension for uninstall
            InitializeAntimalwareSettings();
            Uninstall = true;
            RemovePredicateExtensions();
            AddResourceExtension();

            WriteObject(VM);
        }

        protected override void ProcessRecord()
        {
            base.ProcessRecord();
            ExecuteCommand();
        }
    }
}

