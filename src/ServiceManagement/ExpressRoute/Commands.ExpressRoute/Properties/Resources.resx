<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="InvalidGuid" xml:space="preserve">
    <value>The value {0} is an invalid GUID.</value>
  </data>
  <data name="NewAzureDedicatedCircuitMessage" xml:space="preserve">
    <value>Creating Azure Dedicated Circuit with name {0} with service provider {1}</value>
  </data>
  <data name="NewAzureDedicatedCircuitSucceeded" xml:space="preserve">
    <value>Successfully creatied Azure Dedicated Circuit. This circuit is now being billed</value>
  </data>
  <data name="NewAzureDedicatedCircuitWarning" xml:space="preserve">
    <value>Are you sure you want to create a new dedicated circuit with name {0} and service provider {1}. You will be billed for this circuit once this command succeeds.</value>
  </data>
  <data name="PeerAsnRequired" xml:space="preserve">
    <value>A value for the  Peer Asn has to be provided.</value>
  </data>
  <data name="PrimaryPeerSubnetRequired" xml:space="preserve">
    <value>A value for the Primary Peer Subnet has to be provided.</value>
  </data>
  <data name="RemoveAzureBGPPeeringFailed" xml:space="preserve">
    <value>Remove-AzureBGPPeering Operation failed.</value>
  </data>
  <data name="RemoveAzureBGPPeeringMessage" xml:space="preserve">
    <value>Removing Bgp Peering</value>
  </data>
  <data name="RemoveAzureBGPPeeringSucceeded" xml:space="preserve">
    <value>Successfully removed Azure Bgp Peering with Service Key {0}.</value>
  </data>
  <data name="RemoveAzureBGPPeeringWarning" xml:space="preserve">
    <value>Are you sure you want to remove the Bgp Peering with service key '{0}'?</value>
  </data>
  <data name="RemoveAzureDedicatdCircuitWarning" xml:space="preserve">
    <value>Are you sure you want to remove the Dedicated Circuit with service key '{0}'?</value>
  </data>
  <data name="SetAzureDedicatedCircuitBandwidthWarning" xml:space="preserve">
    <value>Are you sure you want to update the bandwidth of the Dedicated Circuit with service key '{0}' to '{1}'?</value>
  </data>
  <data name="RemoveAzureDedicatedCircuitFailed" xml:space="preserve">
    <value>Remove-AzureDedicatedCircuit Operation failed.</value>
  </data>
  <data name="RemoveAzureDedicatedCircuitLinkAuthorizationFailed" xml:space="preserve">
    <value>Remove-AzureDedicatedCircuitLinkAuthorization Operation failed.</value>
  </data>
  <data name="RemoveAzureDedicatedCircuitLinkAuthorizationMessage" xml:space="preserve">
    <value>Removing Dedicated Circuit Link Authorization</value>
  </data>
  <data name="RemoveAzureDedicatedCircuitLinkAuthorizationSucceeded" xml:space="preserve">
    <value>Successfully removed Dedicated Circuit Link Authorization with service key '{0}' and authorization Id '{1}'.</value>
  </data>
  <data name="RemoveAzureDedicatedCircuitLinkAuthorizationWarning" xml:space="preserve">
    <value>Are you sure you want to remove the Dedicated Circuit Link Authorization with service key '{0}' and authorization Id '{1}'?</value>
  </data>
  <data name="RemoveAzureDedicatedCircuitLinkFailed" xml:space="preserve">
    <value>Remove-AzureDedicatedCircuitLink Operation failed.</value>
  </data>
  <data name="RemoveAzureDedicatedCircuitLinkMessage" xml:space="preserve">
    <value>Removing Dedicated Circui Link</value>
  </data>
  <data name="RemoveAzureDedicatedCircuitLinkSucceeded" xml:space="preserve">
    <value>Successfully removed Azure Dedicated Circuit Link with Service Key {0} and Vnet Name {1}</value>
  </data>
  <data name="RemoveAzureDedicatedCircuitLinkWarning" xml:space="preserve">
    <value>Are you sure you want to remove the Dedicated Circuit Link with service key '{0}' and virtual network name '{1}'?</value>
  </data>
  <data name="RemoveAzureDedicatedCircuitMessage" xml:space="preserve">
    <value>Removing Dedicated Circuit</value>
  </data>
  <data name="SetAzureDedicatedCircuitBandwidthMessage" xml:space="preserve">
    <value>Updating Dedicated Circuit Bandwidth</value>
  </data>
  <data name="RemoveAzureDedicatedCircuitSucceeded" xml:space="preserve">
    <value>Successfully removed Azure Dedicated Circuit with Service Key {0}.</value>
  </data>
  <data name="SecondaryPeerSubnetRequired" xml:space="preserve">
    <value>A value for the Secondary Peer Subnet has to be provided.</value>
  </data>
  <data name="VlanIdRequired" xml:space="preserve">
    <value>A value for the VLan Id has to be provided.</value>
  </data>
  <data name="NewAzureCrossConnectionMessage" xml:space="preserve">
    <value>Provisioning Cross Connection for service key {0}</value>
  </data>
  <data name="NewAzureCrossConnectionSucceeded" xml:space="preserve">
    <value>Successfully provisioned cross connection</value>
  </data>
  <data name="NewAzureCrossConnectionWarning" xml:space="preserve">
    <value>Are you sure you want to provision a cross connection for service key {0}?</value>
  </data>
</root>