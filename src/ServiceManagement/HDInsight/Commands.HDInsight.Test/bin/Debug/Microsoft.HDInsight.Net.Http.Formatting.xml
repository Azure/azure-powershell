<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Microsoft.HDInsight.Net.Http.Formatting</name>
    </assembly>
    <members>
        <member name="T:Microsoft.HDInsight.Net.Http.Formatting.ByteRangeStreamContent">
            <summary>
            <see cref="T:System.Net.Http.HttpContent"/> implementation which provides a byte range view over a stream used to generate HTTP
            206 (Partial Content) byte range responses. The <see cref="T:Microsoft.HDInsight.Net.Http.Formatting.ByteRangeStreamContent"/> supports one or more 
            byte ranges regardless of whether the ranges are consecutive or not. If there is only one range then a 
            single partial response body containing a Content-Range header is generated. If there are more than one
            ranges then a multipart/byteranges response is generated where each body part contains a range indicated
            by the associated Content-Range header field.
            </summary>
        </member>
        <member name="M:Microsoft.HDInsight.Net.Http.Formatting.ByteRangeStreamContent.#ctor(System.IO.Stream,System.Net.Http.Headers.RangeHeaderValue,System.String)">
            <summary>
            <see cref="T:System.Net.Http.HttpContent"/> implementation which provides a byte range view over a stream used to generate HTTP
            206 (Partial Content) byte range responses. If none of the requested ranges overlap with the current extend 
            of the selected resource represented by the <paramref name="content"/> parameter then an 
            <see cref="T:Microsoft.HDInsight.Net.Http.Formatting.InvalidByteRangeException"/> is thrown indicating the valid Content-Range of the content. 
            </summary>
            <param name="content">The stream over which to generate a byte range view.</param>
            <param name="range">The range or ranges, typically obtained from the Range HTTP request header field.</param>
            <param name="mediaType">The media type of the content stream.</param>
        </member>
        <member name="M:Microsoft.HDInsight.Net.Http.Formatting.ByteRangeStreamContent.#ctor(System.IO.Stream,System.Net.Http.Headers.RangeHeaderValue,System.String,System.Int32)">
            <summary>
            <see cref="T:System.Net.Http.HttpContent"/> implementation which provides a byte range view over a stream used to generate HTTP
            206 (Partial Content) byte range responses. If none of the requested ranges overlap with the current extend 
            of the selected resource represented by the <paramref name="content"/> parameter then an 
            <see cref="T:Microsoft.HDInsight.Net.Http.Formatting.InvalidByteRangeException"/> is thrown indicating the valid Content-Range of the content. 
            </summary>
            <param name="content">The stream over which to generate a byte range view.</param>
            <param name="range">The range or ranges, typically obtained from the Range HTTP request header field.</param>
            <param name="mediaType">The media type of the content stream.</param>
            <param name="bufferSize">The buffer size used when copying the content stream.</param>
        </member>
        <member name="M:Microsoft.HDInsight.Net.Http.Formatting.ByteRangeStreamContent.#ctor(System.IO.Stream,System.Net.Http.Headers.RangeHeaderValue,System.Net.Http.Headers.MediaTypeHeaderValue)">
            <summary>
            <see cref="T:System.Net.Http.HttpContent"/> implementation which provides a byte range view over a stream used to generate HTTP
            206 (Partial Content) byte range responses. If none of the requested ranges overlap with the current extend 
            of the selected resource represented by the <paramref name="content"/> parameter then an 
            <see cref="T:Microsoft.HDInsight.Net.Http.Formatting.InvalidByteRangeException"/> is thrown indicating the valid Content-Range of the content. 
            </summary>
            <param name="content">The stream over which to generate a byte range view.</param>
            <param name="range">The range or ranges, typically obtained from the Range HTTP request header field.</param>
            <param name="mediaType">The media type of the content stream.</param>
        </member>
        <member name="M:Microsoft.HDInsight.Net.Http.Formatting.ByteRangeStreamContent.#ctor(System.IO.Stream,System.Net.Http.Headers.RangeHeaderValue,System.Net.Http.Headers.MediaTypeHeaderValue,System.Int32)">
            <summary>
            <see cref="T:System.Net.Http.HttpContent"/> implementation which provides a byte range view over a stream used to generate HTTP
            206 (Partial Content) byte range responses. If none of the requested ranges overlap with the current extend 
            of the selected resource represented by the <paramref name="content"/> parameter then an 
            <see cref="T:Microsoft.HDInsight.Net.Http.Formatting.InvalidByteRangeException"/> is thrown indicating the valid Content-Range of the content. 
            </summary>
            <param name="content">The stream over which to generate a byte range view.</param>
            <param name="range">The range or ranges, typically obtained from the Range HTTP request header field.</param>
            <param name="mediaType">The media type of the content stream.</param>
            <param name="bufferSize">The buffer size used when copying the content stream.</param>
        </member>
        <member name="M:Microsoft.HDInsight.Net.Http.Formatting.CloneableExtensions.Clone``1(``0)">
            <summary>
            Convenience method for cloning objects that implement <see cref="T:System.ICloneable"/> explicitly.
            </summary>
            <typeparam name="T">The type of the cloneable object.</typeparam>
            <param name="value">The cloneable object.</param>
            <returns>The result of cloning the <paramref name="value"/>.</returns>
        </member>
        <member name="T:Microsoft.HDInsight.Net.Http.Formatting.CommonResources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:Microsoft.HDInsight.Net.Http.Formatting.CommonResources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:Microsoft.HDInsight.Net.Http.Formatting.CommonResources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:Microsoft.HDInsight.Net.Http.Formatting.CommonResources.Argument_Cannot_Be_Null_Or_Empty">
            <summary>
              Looks up a localized string similar to Value cannot be null or an empty string..
            </summary>
        </member>
        <member name="P:Microsoft.HDInsight.Net.Http.Formatting.CommonResources.Argument_Must_Be_Between">
            <summary>
              Looks up a localized string similar to Value must be between {0} and {1}..
            </summary>
        </member>
        <member name="P:Microsoft.HDInsight.Net.Http.Formatting.CommonResources.Argument_Must_Be_Enum_Member">
            <summary>
              Looks up a localized string similar to Value must be a value from the &quot;{0}&quot; enumeration..
            </summary>
        </member>
        <member name="P:Microsoft.HDInsight.Net.Http.Formatting.CommonResources.Argument_Must_Be_GreaterThan">
            <summary>
              Looks up a localized string similar to Value must be greater than {0}..
            </summary>
        </member>
        <member name="P:Microsoft.HDInsight.Net.Http.Formatting.CommonResources.Argument_Must_Be_GreaterThanOrEqualTo">
            <summary>
              Looks up a localized string similar to Value must be greater than or equal to {0}..
            </summary>
        </member>
        <member name="P:Microsoft.HDInsight.Net.Http.Formatting.CommonResources.Argument_Must_Be_LessThan">
            <summary>
              Looks up a localized string similar to Value must be less than {0}..
            </summary>
        </member>
        <member name="P:Microsoft.HDInsight.Net.Http.Formatting.CommonResources.Argument_Must_Be_LessThanOrEqualTo">
            <summary>
              Looks up a localized string similar to Value must be less than or equal to {0}..
            </summary>
        </member>
        <member name="P:Microsoft.HDInsight.Net.Http.Formatting.CommonResources.Argument_Must_Be_Null_Or_Non_Empty">
            <summary>
              Looks up a localized string similar to Value cannot be an empty string. It must either be null or a non-empty string..
            </summary>
        </member>
        <member name="T:Microsoft.HDInsight.Net.Http.Formatting.Common.CollectionExtensions">
            <summary>
            Helper extension methods for fast use of collections.
            </summary>
        </member>
        <member name="M:Microsoft.HDInsight.Net.Http.Formatting.Common.CollectionExtensions.AppendAndReallocate``1(``0[],``0)">
            <summary>
            Return a new array with the value added to the end. Slow and best suited to long lived arrays with few writes relative to reads.
            </summary>
        </member>
        <member name="M:Microsoft.HDInsight.Net.Http.Formatting.Common.CollectionExtensions.AsArray``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Return the enumerable as an Array, copying if required. Optimized for common case where it is an Array. 
            Avoid mutating the return value.
            </summary>
        </member>
        <member name="M:Microsoft.HDInsight.Net.Http.Formatting.Common.CollectionExtensions.AsCollection``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Return the enumerable as a Collection of T, copying if required. Optimized for the common case where it is 
            a Collection of T and avoiding a copy if it implements IList of T. Avoid mutating the return value.
            </summary>
        </member>
        <member name="M:Microsoft.HDInsight.Net.Http.Formatting.Common.CollectionExtensions.AsIList``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Return the enumerable as a IList of T, copying if required. Avoid mutating the return value.
            </summary>
        </member>
        <member name="M:Microsoft.HDInsight.Net.Http.Formatting.Common.CollectionExtensions.AsList``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Return the enumerable as a List of T, copying if required. Optimized for common case where it is an List of T 
            or a ListWrapperCollection of T. Avoid mutating the return value.
            </summary>
        </member>
        <member name="M:Microsoft.HDInsight.Net.Http.Formatting.Common.CollectionExtensions.RemoveFrom``1(System.Collections.Generic.List{``0},System.Int32)">
            <summary>
            Remove values from the list starting at the index start.
            </summary>
        </member>
        <member name="M:Microsoft.HDInsight.Net.Http.Formatting.Common.CollectionExtensions.SingleDefaultOrError``2(System.Collections.Generic.IList{``0},System.Action{``1},``1)">
            <summary>
            Return the only value from list, the type's default value if empty, or call the errorAction for 2 or more.
            </summary>
        </member>
        <member name="M:Microsoft.HDInsight.Net.Http.Formatting.Common.CollectionExtensions.SingleOfTypeDefaultOrError``3(System.Collections.Generic.IList{``0},System.Action{``2},``2)">
            <summary>
            Returns a single value in list matching type TMatch if there is only one, null if there are none of type TMatch or calls the
            errorAction with errorArg1 if there is more than one.
            </summary>
        </member>
        <member name="M:Microsoft.HDInsight.Net.Http.Formatting.Common.CollectionExtensions.ToArrayWithoutNulls``1(System.Collections.Generic.ICollection{``0})">
            <summary>
            Convert an ICollection to an array, removing null values. Fast path for case where there are no null values.
            </summary>
        </member>
        <member name="M:Microsoft.HDInsight.Net.Http.Formatting.Common.CollectionExtensions.ToDictionaryFast``2(``1[],System.Func{``1,``0},System.Collections.Generic.IEqualityComparer{``0})">
            <summary>
            Convert the array to a Dictionary using the keySelector to extract keys from values and the specified comparer. Optimized for array input.
            </summary>
        </member>
        <member name="M:Microsoft.HDInsight.Net.Http.Formatting.Common.CollectionExtensions.ToDictionaryFast``2(System.Collections.Generic.IList{``1},System.Func{``1,``0},System.Collections.Generic.IEqualityComparer{``0})">
            <summary>
            Convert the list to a Dictionary using the keySelector to extract keys from values and the specified comparer. Optimized for IList of T input with fast path for array.
            </summary>
        </member>
        <member name="M:Microsoft.HDInsight.Net.Http.Formatting.Common.CollectionExtensions.ToDictionaryFast``2(System.Collections.Generic.IEnumerable{``1},System.Func{``1,``0},System.Collections.Generic.IEqualityComparer{``0})">
            <summary>
            Convert the enumerable to a Dictionary using the keySelector to extract keys from values and the specified comparer. Fast paths for array and IList of T.
            </summary>
        </member>
        <member name="M:Microsoft.HDInsight.Net.Http.Formatting.Common.CollectionExtensions.ToDictionaryFastNoCheck``2(System.Collections.Generic.IList{``1},System.Func{``1,``0},System.Collections.Generic.IEqualityComparer{``0})">
            <summary>
            Convert the list to a Dictionary using the keySelector to extract keys from values and the specified comparer. Optimized for IList of T input. No checking for other types.
            </summary>
        </member>
        <member name="T:Microsoft.HDInsight.Net.Http.Formatting.Common.Error">
            <summary>
            Utility class for creating and unwrapping <see cref="T:System.Exception"/> instances.
            </summary>
        </member>
        <member name="M:Microsoft.HDInsight.Net.Http.Formatting.Common.Error.Format(System.String,System.Object[])">
            <summary>
            Formats the specified resource string using <see cref="M:CultureInfo.CurrentCulture"/>.
            </summary>
            <param name="format">A composite format string.</param>
            <param name="args">An object array that contains zero or more objects to format.</param>
            <returns>The formatted string.</returns>
        </member>
        <member name="M:Microsoft.HDInsight.Net.Http.Formatting.Common.Error.Argument(System.String,System.Object[])">
            <summary>
            Creates an <see cref="T:System.ArgumentException"/> with the provided properties.
            </summary>
            <param name="messageFormat">A composite format string explaining the reason for the exception.</param>
            <param name="messageArgs">An object array that contains zero or more objects to format.</param>
            <returns>The logged <see cref="T:System.Exception"/>.</returns>
        </member>
        <member name="M:Microsoft.HDInsight.Net.Http.Formatting.Common.Error.Argument(System.String,System.String,System.Object[])">
            <summary>
            Creates an <see cref="T:System.ArgumentException"/> with the provided properties.
            </summary>
            <param name="parameterName">The name of the parameter that caused the current exception.</param>
            <param name="messageFormat">A composite format string explaining the reason for the exception.</param>
            <param name="messageArgs">An object array that contains zero or more objects to format.</param>
            <returns>The logged <see cref="T:System.Exception"/>.</returns>
        </member>
        <member name="M:Microsoft.HDInsight.Net.Http.Formatting.Common.Error.ArgumentUriNotHttpOrHttpsScheme(System.String,System.Uri)">
            <summary>
            Creates an <see cref="T:System.ArgumentException"/> with a message saying that the argument must be an "http" or "https" URI.
            </summary>
            <param name="parameterName">The name of the parameter that caused the current exception.</param>
            <param name="actualValue">The value of the argument that causes this exception.</param>
            <returns>The logged <see cref="T:System.Exception"/>.</returns>
        </member>
        <member name="M:Microsoft.HDInsight.Net.Http.Formatting.Common.Error.ArgumentUriNotAbsolute(System.String,System.Uri)">
            <summary>
            Creates an <see cref="T:System.ArgumentException"/> with a message saying that the argument must be an absolute URI.
            </summary>
            <param name="parameterName">The name of the parameter that caused the current exception.</param>
            <param name="actualValue">The value of the argument that causes this exception.</param>
            <returns>The logged <see cref="T:System.Exception"/>.</returns>
        </member>
        <member name="M:Microsoft.HDInsight.Net.Http.Formatting.Common.Error.ArgumentUriHasQueryOrFragment(System.String,System.Uri)">
            <summary>
            Creates an <see cref="T:System.ArgumentException"/> with a message saying that the argument must be an absolute URI 
            without a query or fragment identifier and then logs it with <see cref="F:TraceLevel.Error"/>.
            </summary>
            <param name="parameterName">The name of the parameter that caused the current exception.</param>
            <param name="actualValue">The value of the argument that causes this exception.</param>
            <returns>The logged <see cref="T:System.Exception"/>.</returns>
        </member>
        <member name="M:Microsoft.HDInsight.Net.Http.Formatting.Common.Error.PropertyNull">
            <summary>
            Creates an <see cref="T:System.ArgumentNullException"/> with the provided properties.
            </summary>
            <returns>The logged <see cref="T:System.Exception"/>.</returns>
        </member>
        <member name="M:Microsoft.HDInsight.Net.Http.Formatting.Common.Error.ArgumentNull(System.String)">
            <summary>
            Creates an <see cref="T:System.ArgumentNullException"/> with the provided properties.
            </summary>
            <param name="parameterName">The name of the parameter that caused the current exception.</param>
            <returns>The logged <see cref="T:System.Exception"/>.</returns>
        </member>
        <member name="M:Microsoft.HDInsight.Net.Http.Formatting.Common.Error.ArgumentNull(System.String,System.String,System.Object[])">
            <summary>
            Creates an <see cref="T:System.ArgumentNullException"/> with the provided properties.
            </summary>
            <param name="parameterName">The name of the parameter that caused the current exception.</param>
            <param name="messageFormat">A composite format string explaining the reason for the exception.</param>
            <param name="messageArgs">An object array that contains zero or more objects to format.</param>
            <returns>The logged <see cref="T:System.Exception"/>.</returns>
        </member>
        <member name="M:Microsoft.HDInsight.Net.Http.Formatting.Common.Error.ArgumentNullOrEmpty(System.String)">
            <summary>
            Creates an <see cref="T:System.ArgumentException"/> with a default message.
            </summary>
            <param name="parameterName">The name of the parameter that caused the current exception.</param>
            <returns>The logged <see cref="T:System.Exception"/>.</returns>
        </member>
        <member name="M:Microsoft.HDInsight.Net.Http.Formatting.Common.Error.ArgumentOutOfRange(System.String,System.Object,System.String,System.Object[])">
            <summary>
            Creates an <see cref="T:System.ArgumentOutOfRangeException"/> with the provided properties.
            </summary>
            <param name="parameterName">The name of the parameter that caused the current exception.</param>
            <param name="actualValue">The value of the argument that causes this exception.</param>
            <param name="messageFormat">A composite format string explaining the reason for the exception.</param>
            <param name="messageArgs">An object array that contains zero or more objects to format.</param>
            <returns>The logged <see cref="T:System.Exception"/>.</returns>
        </member>
        <member name="M:Microsoft.HDInsight.Net.Http.Formatting.Common.Error.ArgumentMustBeGreaterThanOrEqualTo(System.String,System.Object,System.Object)">
            <summary>
            Creates an <see cref="T:System.ArgumentOutOfRangeException"/> with a message saying that the argument must be greater than or equal to <paramref name="minValue"/>.
            </summary>
            <param name="parameterName">The name of the parameter that caused the current exception.</param>
            <param name="actualValue">The value of the argument that causes this exception.</param>
            <param name="minValue">The minimum size of the argument.</param>
            <returns>The logged <see cref="T:System.Exception"/>.</returns>
        </member>
        <member name="M:Microsoft.HDInsight.Net.Http.Formatting.Common.Error.ArgumentMustBeLessThanOrEqualTo(System.String,System.Object,System.Object)">
            <summary>
            Creates an <see cref="T:System.ArgumentOutOfRangeException"/> with a message saying that the argument must be less than or equal to <paramref name="maxValue"/>.
            </summary>
            <param name="parameterName">The name of the parameter that caused the current exception.</param>
            <param name="actualValue">The value of the argument that causes this exception.</param>
            <param name="maxValue">The maximum size of the argument.</param>
            <returns>The logged <see cref="T:System.Exception"/>.</returns>
        </member>
        <member name="M:Microsoft.HDInsight.Net.Http.Formatting.Common.Error.KeyNotFound">
            <summary>
            Creates an <see cref="T:System.Collections.Generic.KeyNotFoundException"/> with a message saying that the key was not found.
            </summary>
            <returns>The logged <see cref="T:System.Exception"/>.</returns>
        </member>
        <member name="M:Microsoft.HDInsight.Net.Http.Formatting.Common.Error.KeyNotFound(System.String,System.Object[])">
            <summary>
            Creates an <see cref="T:System.Collections.Generic.KeyNotFoundException"/> with a message saying that the key was not found.
            </summary>
            <param name="messageFormat">A composite format string explaining the reason for the exception.</param>
            <param name="messageArgs">An object array that contains zero or more objects to format.</param>
            <returns>The logged <see cref="T:System.Exception"/>.</returns>
        </member>
        <member name="M:Microsoft.HDInsight.Net.Http.Formatting.Common.Error.ObjectDisposed(System.String,System.Object[])">
            <summary>
            Creates an <see cref="T:System.ObjectDisposedException"/> initialized according to guidelines.
            </summary>
            <param name="messageFormat">A composite format string explaining the reason for the exception.</param>
            <param name="messageArgs">An object array that contains zero or more objects to format.</param>
            <returns>The logged <see cref="T:System.Exception"/>.</returns>
        </member>
        <member name="M:Microsoft.HDInsight.Net.Http.Formatting.Common.Error.OperationCanceled">
            <summary>
            Creates an <see cref="T:System.OperationCanceledException"/> initialized with the provided parameters.
            </summary>
            <returns>The logged <see cref="T:System.Exception"/>.</returns>
        </member>
        <member name="M:Microsoft.HDInsight.Net.Http.Formatting.Common.Error.OperationCanceled(System.String,System.Object[])">
            <summary>
            Creates an <see cref="T:System.OperationCanceledException"/> initialized with the provided parameters.
            </summary>
            <param name="messageFormat">A composite format string explaining the reason for the exception.</param>
            <param name="messageArgs">An object array that contains zero or more objects to format.</param>
            <returns>The logged <see cref="T:System.Exception"/>.</returns>
        </member>
        <member name="M:Microsoft.HDInsight.Net.Http.Formatting.Common.Error.InvalidEnumArgument(System.String,System.Int32,System.Type)">
            <summary>
            Creates an <see cref="T:System.ArgumentException"/> for an invalid enum argument.
            </summary>
            <param name="parameterName">The name of the parameter that caused the current exception.</param>
            <param name="invalidValue">The value of the argument that failed.</param>
            <param name="enumClass">A <see cref="T:System.Type"/> that represents the enumeration class with the valid values.</param>
            <returns>The logged <see cref="T:System.Exception"/>.</returns>
        </member>
        <member name="M:Microsoft.HDInsight.Net.Http.Formatting.Common.Error.InvalidOperation(System.String,System.Object[])">
            <summary>
            Creates an <see cref="T:System.InvalidOperationException"/>.
            </summary>
            <param name="messageFormat">A composite format string explaining the reason for the exception.</param>
            <param name="messageArgs">An object array that contains zero or more objects to format.</param>
            <returns>The logged <see cref="T:System.Exception"/>.</returns>
        </member>
        <member name="M:Microsoft.HDInsight.Net.Http.Formatting.Common.Error.InvalidOperation(System.Exception,System.String,System.Object[])">
            <summary>
            Creates an <see cref="T:System.InvalidOperationException"/>.
            </summary>
            <param name="innerException">Inner exception</param>
            <param name="messageFormat">A composite format string explaining the reason for the exception.</param>
            <param name="messageArgs">An object array that contains zero or more objects to format.</param>
            <returns>The logged <see cref="T:System.Exception"/>.</returns>
        </member>
        <member name="M:Microsoft.HDInsight.Net.Http.Formatting.Common.Error.NotSupported(System.String,System.Object[])">
            <summary>
            Creates an <see cref="T:System.NotSupportedException"/>.
            </summary>
            <param name="messageFormat">A composite format string explaining the reason for the exception.</param>
            <param name="messageArgs">An object array that contains zero or more objects to format.</param>
            <returns>The logged <see cref="T:System.Exception"/>.</returns>
        </member>
        <member name="T:Microsoft.HDInsight.Net.Http.Formatting.Common.ListWrapperCollection`1">
            <summary>
            A class that inherits from Collection of T but also exposes its underlying data as List of T for performance.
            </summary>
        </member>
        <member name="T:Microsoft.HDInsight.Net.Http.Formatting.Common.TaskHelpers">
            <summary>
            Helpers for safely using Task libraries. 
            </summary>
        </member>
        <member name="M:Microsoft.HDInsight.Net.Http.Formatting.Common.TaskHelpers.Canceled">
            <summary>
            Returns a canceled Task. The task is completed, IsCanceled = True, IsFaulted = False.
            </summary>
        </member>
        <member name="M:Microsoft.HDInsight.Net.Http.Formatting.Common.TaskHelpers.Canceled``1">
            <summary>
            Returns a canceled Task of the given type. The task is completed, IsCanceled = True, IsFaulted = False.
            </summary>
        </member>
        <member name="M:Microsoft.HDInsight.Net.Http.Formatting.Common.TaskHelpers.Completed">
            <summary>
            Returns a completed task that has no result. 
            </summary>        
        </member>
        <member name="M:Microsoft.HDInsight.Net.Http.Formatting.Common.TaskHelpers.FromError(System.Exception)">
            <summary>
            Returns an error task. The task is Completed, IsCanceled = False, IsFaulted = True
            </summary>
        </member>
        <member name="M:Microsoft.HDInsight.Net.Http.Formatting.Common.TaskHelpers.FromError``1(System.Exception)">
            <summary>
            Returns an error task of the given type. The task is Completed, IsCanceled = False, IsFaulted = True
            </summary>
            <typeparam name="TResult"></typeparam>
        </member>
        <member name="T:Microsoft.HDInsight.Net.Http.Formatting.Common.TaskHelpers.AsyncVoid">
            <summary>
            Used as the T in a "conversion" of a Task into a Task{T}
            </summary>
        </member>
        <member name="T:Microsoft.HDInsight.Net.Http.Formatting.Common.TaskHelpers.CancelCache`1">
            <summary>
            This class is a convenient cache for per-type cancelled tasks
            </summary>
        </member>
        <member name="M:Microsoft.HDInsight.Net.Http.Formatting.Common.TaskHelpersExtensions.CastToObject(System.Threading.Tasks.Task)">
            <summary>
            Cast Task to Task of object
            </summary>
        </member>
        <member name="M:Microsoft.HDInsight.Net.Http.Formatting.Common.TaskHelpersExtensions.CastToObject``1(System.Threading.Tasks.Task{``0})">
            <summary>
            Cast Task of T to Task of object
            </summary>
        </member>
        <member name="M:Microsoft.HDInsight.Net.Http.Formatting.Common.TaskHelpersExtensions.ThrowIfFaulted(System.Threading.Tasks.Task)">
            <summary>
            Throws the first faulting exception for a task which is faulted. It preserves the original stack trace when
            throwing the exception. Note: It is the caller's responsibility not to pass incomplete tasks to this
            method, because it does degenerate into a call to the equivalent of .Wait() on the task when it hasn't yet
            completed.
            </summary>
        </member>
        <member name="M:Microsoft.HDInsight.Net.Http.Formatting.Common.TaskHelpersExtensions.TryGetResult``1(System.Threading.Tasks.Task{``0},``0@)">
            <summary>
            Attempts to get the result value for the given task. If the task ran to completion, then
            it will return true and set the result value; otherwise, it will return false.
            </summary>
        </member>
        <member name="T:Microsoft.HDInsight.Net.Http.Formatting.Common.UriQueryUtility">
            <summary>
            Helpers for encoding, decoding, and parsing URI query components. In .Net 4.5
            please use the WebUtility class.
            </summary>
        </member>
        <member name="T:Microsoft.HDInsight.Net.Http.Formatting.Formatting.BaseJsonMediaTypeFormatter">
            <summary>
            Abstract <see cref="T:Microsoft.HDInsight.Net.Http.Formatting.Formatting.MediaTypeFormatter"/> class to support Bson and Json.
            </summary>
        </member>
        <member name="T:Microsoft.HDInsight.Net.Http.Formatting.Formatting.MediaTypeFormatter">
            <summary>
            Base class to handle serializing and deserializing strongly-typed objects using <see cref="T:Microsoft.HDInsight.Net.Http.Formatting.ObjectContent"/>.
            </summary>
        </member>
        <member name="M:Microsoft.HDInsight.Net.Http.Formatting.Formatting.MediaTypeFormatter.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.HDInsight.Net.Http.Formatting.Formatting.MediaTypeFormatter"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.HDInsight.Net.Http.Formatting.Formatting.MediaTypeFormatter.#ctor(Microsoft.HDInsight.Net.Http.Formatting.Formatting.MediaTypeFormatter)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.HDInsight.Net.Http.Formatting.Formatting.MediaTypeFormatter"/> class.
            </summary>
            <param name="formatter">The <see cref="T:Microsoft.HDInsight.Net.Http.Formatting.Formatting.MediaTypeFormatter"/> instance to copy settings from.</param>
        </member>
        <member name="M:Microsoft.HDInsight.Net.Http.Formatting.Formatting.MediaTypeFormatter.ReadFromStreamAsync(System.Type,System.IO.Stream,System.Net.Http.HttpContent,Microsoft.HDInsight.Net.Http.Formatting.Formatting.IFormatterLogger)">
            <summary>
            Returns a <see cref="T:System.Threading.Tasks.Task"/> to deserialize an object of the given <paramref name="type"/> from the given <paramref name="readStream"/>
            </summary>
            <remarks>
            <para>This implementation throws a <see cref="T:System.NotSupportedException"/>. Derived types should override this method if the formatter
            supports reading.</para>
            <para>An implementation of this method should NOT close <paramref name="readStream"/> upon completion. The stream will be closed independently when
            the <see cref="T:System.Net.Http.HttpContent"/> instance is disposed.
            </para>
            </remarks>
            <param name="type">The type of the object to deserialize.</param>
            <param name="readStream">The <see cref="T:System.IO.Stream"/> to read.</param>
            <param name="content">The <see cref="T:System.Net.Http.HttpContent"/> if available. It may be <c>null</c>.</param>
            <param name="formatterLogger">The <see cref="T:Microsoft.HDInsight.Net.Http.Formatting.Formatting.IFormatterLogger"/> to log events to.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> whose result will be an object of the given type.</returns>
            <exception cref="T:System.NotSupportedException">Derived types need to support reading.</exception>
            <seealso cref="M:Microsoft.HDInsight.Net.Http.Formatting.Formatting.MediaTypeFormatter.CanReadType(System.Type)"/>
        </member>
        <member name="M:Microsoft.HDInsight.Net.Http.Formatting.Formatting.MediaTypeFormatter.ReadFromStreamAsync(System.Type,System.IO.Stream,System.Net.Http.HttpContent,Microsoft.HDInsight.Net.Http.Formatting.Formatting.IFormatterLogger,System.Threading.CancellationToken)">
            <summary>
            Returns a <see cref="T:System.Threading.Tasks.Task"/> to deserialize an object of the given <paramref name="type"/> from the given <paramref name="readStream"/>
            </summary>
            <remarks>
            <para>This implementation throws a <see cref="T:System.NotSupportedException"/>. Derived types should override this method if the formatter
            supports reading.</para>
            <para>An implementation of this method should NOT close <paramref name="readStream"/> upon completion. The stream will be closed independently when
            the <see cref="T:System.Net.Http.HttpContent"/> instance is disposed.
            </para>
            </remarks>
            <param name="type">The type of the object to deserialize.</param>
            <param name="readStream">The <see cref="T:System.IO.Stream"/> to read.</param>
            <param name="content">The <see cref="T:System.Net.Http.HttpContent"/> if available. It may be <c>null</c>.</param>
            <param name="formatterLogger">The <see cref="T:Microsoft.HDInsight.Net.Http.Formatting.Formatting.IFormatterLogger"/> to log events to.</param>
            <param name="cancellationToken">The token to monitor for cancellation requests.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> whose result will be an object of the given type.</returns>
            <exception cref="T:System.NotSupportedException">Derived types need to support reading.</exception>
            <seealso cref="M:Microsoft.HDInsight.Net.Http.Formatting.Formatting.MediaTypeFormatter.CanReadType(System.Type)"/>
        </member>
        <member name="M:Microsoft.HDInsight.Net.Http.Formatting.Formatting.MediaTypeFormatter.WriteToStreamAsync(System.Type,System.Object,System.IO.Stream,System.Net.Http.HttpContent,System.Net.TransportContext)">
            <summary>
            Returns a <see cref="T:System.Threading.Tasks.Task"/> that serializes the given <paramref name="value"/> of the given <paramref name="type"/>
            to the given <paramref name="writeStream"/>.
            </summary>
            <remarks>
            <para>This implementation throws a <see cref="T:System.NotSupportedException"/>. Derived types should override this method if the formatter
            supports reading.</para>
            <para>An implementation of this method should NOT close <paramref name="writeStream"/> upon completion. The stream will be closed independently when
            the <see cref="T:System.Net.Http.HttpContent"/> instance is disposed.
            </para>
            </remarks>
            <param name="type">The type of the object to write.</param>
            <param name="value">The object value to write.  It may be <c>null</c>.</param>
            <param name="writeStream">The <see cref="T:System.IO.Stream"/> to which to write.</param>
            <param name="content">The <see cref="T:System.Net.Http.HttpContent"/> if available. It may be <c>null</c>.</param>
            <param name="transportContext">The <see cref="T:System.Net.TransportContext"/> if available. It may be <c>null</c>.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that will perform the write.</returns>
            <exception cref="T:System.NotSupportedException">Derived types need to support writing.</exception>
            <seealso cref="M:Microsoft.HDInsight.Net.Http.Formatting.Formatting.MediaTypeFormatter.CanWriteType(System.Type)"/>
        </member>
        <member name="M:Microsoft.HDInsight.Net.Http.Formatting.Formatting.MediaTypeFormatter.WriteToStreamAsync(System.Type,System.Object,System.IO.Stream,System.Net.Http.HttpContent,System.Net.TransportContext,System.Threading.CancellationToken)">
            <summary>
            Returns a <see cref="T:System.Threading.Tasks.Task"/> that serializes the given <paramref name="value"/> of the given <paramref name="type"/>
            to the given <paramref name="writeStream"/>.
            </summary>
            <remarks>
            <para>This implementation throws a <see cref="T:System.NotSupportedException"/>. Derived types should override this method if the formatter
            supports reading.</para>
            <para>An implementation of this method should NOT close <paramref name="writeStream"/> upon completion. The stream will be closed independently when
            the <see cref="T:System.Net.Http.HttpContent"/> instance is disposed.
            </para>
            </remarks>
            <param name="type">The type of the object to write.</param>
            <param name="value">The object value to write.  It may be <c>null</c>.</param>
            <param name="writeStream">The <see cref="T:System.IO.Stream"/> to which to write.</param>
            <param name="content">The <see cref="T:System.Net.Http.HttpContent"/> if available. It may be <c>null</c>.</param>
            <param name="transportContext">The <see cref="T:System.Net.TransportContext"/> if available. It may be <c>null</c>.</param>
            <param name="cancellationToken">The token to monitor for cancellation requests.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that will perform the write.</returns>
            <exception cref="T:System.NotSupportedException">Derived types need to support writing.</exception>
            <seealso cref="M:Microsoft.HDInsight.Net.Http.Formatting.Formatting.MediaTypeFormatter.CanWriteType(System.Type)"/>
        </member>
        <member name="M:Microsoft.HDInsight.Net.Http.Formatting.Formatting.MediaTypeFormatter.TryGetDelegatingTypeForIEnumerableGenericOrSame(System.Type@)">
            <summary>
            This method converts <see cref="T:System.Collections.Generic.IEnumerable`1"/> (and interfaces that mandate it) to a <see cref="T:Microsoft.HDInsight.Net.Http.Formatting.Formatting.DelegatingEnumerable`1"/> for serialization purposes.
            </summary>
            <param name="type">The type to potentially be wrapped. If the type is wrapped, it's changed in place.</param>
            <returns>Returns <c>true</c> if the type was wrapped; <c>false</c>, otherwise</returns>
        </member>
        <member name="M:Microsoft.HDInsight.Net.Http.Formatting.Formatting.MediaTypeFormatter.TryGetDelegatingTypeForIQueryableGenericOrSame(System.Type@)">
            <summary>
            This method converts <see cref="T:System.Linq.IQueryable`1"/> (and interfaces that mandate it) to a <see cref="T:Microsoft.HDInsight.Net.Http.Formatting.Formatting.DelegatingEnumerable`1"/> for serialization purposes.
            </summary>
            <param name="type">The type to potentially be wrapped. If the type is wrapped, it's changed in place.</param>
            <returns>Returns <c>true</c> if the type was wrapped; <c>false</c>, otherwise</returns>
        </member>
        <member name="M:Microsoft.HDInsight.Net.Http.Formatting.Formatting.MediaTypeFormatter.SelectCharacterEncoding(System.Net.Http.Headers.HttpContentHeaders)">
            <summary>
            Determines the best <see cref="T:System.Text.Encoding"/> amongst the supported encodings
            for reading or writing an HTTP entity body based on the provided <paramref name="contentHeaders"/>.
            </summary>
            <param name="contentHeaders">The content headers provided as part of the request or response.</param>
            <returns>The <see cref="T:System.Text.Encoding"/> to use when reading the request or writing the response.</returns>
        </member>
        <member name="M:Microsoft.HDInsight.Net.Http.Formatting.Formatting.MediaTypeFormatter.SetDefaultContentHeaders(System.Type,System.Net.Http.Headers.HttpContentHeaders,System.Net.Http.Headers.MediaTypeHeaderValue)">
            <summary>
            Sets the default headers for content that will be formatted using this formatter. This method
            is called from the <see cref="T:Microsoft.HDInsight.Net.Http.Formatting.ObjectContent"/> constructor.
            This implementation sets the Content-Type header to the value of <paramref name="mediaType"/> if it is
            not <c>null</c>. If it is <c>null</c> it sets the Content-Type to the default media type of this formatter.
            If the Content-Type does not specify a charset it will set it using this formatters configured
            <see cref="T:System.Text.Encoding"/>.
            </summary>
            <remarks>
            Subclasses can override this method to set content headers such as Content-Type etc. Subclasses should
            call the base implementation. Subclasses should treat the passed in <paramref name="mediaType"/> (if not <c>null</c>)
            as the authoritative media type and use that as the Content-Type.
            </remarks>
            <param name="type">The type of the object being serialized. See <see cref="T:Microsoft.HDInsight.Net.Http.Formatting.ObjectContent"/>.</param>
            <param name="headers">The content headers that should be configured.</param>
            <param name="mediaType">The authoritative media type. Can be <c>null</c>.</param>
        </member>
        <member name="M:Microsoft.HDInsight.Net.Http.Formatting.Formatting.MediaTypeFormatter.GetPerRequestFormatterInstance(System.Type,System.Net.Http.HttpRequestMessage,System.Net.Http.Headers.MediaTypeHeaderValue)">
            <summary>
            Returns a specialized instance of the <see cref="T:Microsoft.HDInsight.Net.Http.Formatting.Formatting.MediaTypeFormatter"/> that can handle formatting a response for the given
            parameters. This method is called after a formatter has been selected through content negotiation.
            </summary>
            <remarks>
            The default implementation returns <c>this</c> instance. Derived classes can choose to return a new instance if
            they need to close over any of the parameters.
            </remarks>
            <param name="type">The type being serialized.</param>
            <param name="request">The request.</param>
            <param name="mediaType">The media type chosen for the serialization. Can be <c>null</c>.</param>
            <returns>An instance that can format a response to the given <paramref name="request"/>.</returns>
        </member>
        <member name="M:Microsoft.HDInsight.Net.Http.Formatting.Formatting.MediaTypeFormatter.CanReadType(System.Type)">
            <summary>
            Determines whether this <see cref="T:Microsoft.HDInsight.Net.Http.Formatting.Formatting.MediaTypeFormatter"/> can deserialize
            an object of the specified type.
            </summary>
            <remarks>
            Derived classes must implement this method and indicate if a type can or cannot be deserialized.
            </remarks>
            <param name="type">The type of object that will be deserialized.</param>
            <returns><c>true</c> if this <see cref="T:Microsoft.HDInsight.Net.Http.Formatting.Formatting.MediaTypeFormatter"/> can deserialize an object of that type; otherwise <c>false</c>.</returns>
        </member>
        <member name="M:Microsoft.HDInsight.Net.Http.Formatting.Formatting.MediaTypeFormatter.CanWriteType(System.Type)">
            <summary>
            Determines whether this <see cref="T:Microsoft.HDInsight.Net.Http.Formatting.Formatting.MediaTypeFormatter"/> can serialize
            an object of the specified type.
            </summary>
            <remarks>
            Derived classes must implement this method and indicate if a type can or cannot be serialized.
            </remarks>
            <param name="type">The type of object that will be serialized.</param>
            <returns><c>true</c> if this <see cref="T:Microsoft.HDInsight.Net.Http.Formatting.Formatting.MediaTypeFormatter"/> can serialize an object of that type; otherwise <c>false</c>.</returns>
        </member>
        <member name="M:Microsoft.HDInsight.Net.Http.Formatting.Formatting.MediaTypeFormatter.GetDefaultValueForType(System.Type)">
            <summary>
            Gets the default value for the specified type.
            </summary>
        </member>
        <member name="P:Microsoft.HDInsight.Net.Http.Formatting.Formatting.MediaTypeFormatter.MaxHttpCollectionKeys">
            <summary>
            Gets or sets the maximum number of keys stored in a NameValueCollection. 
            </summary>
        </member>
        <member name="P:Microsoft.HDInsight.Net.Http.Formatting.Formatting.MediaTypeFormatter.SupportedMediaTypes">
            <summary>
            Gets the mutable collection of <see cref="T:System.Net.Http.Headers.MediaTypeHeaderValue"/> elements supported by
            this <see cref="T:Microsoft.HDInsight.Net.Http.Formatting.Formatting.MediaTypeFormatter"/> instance.
            </summary>
        </member>
        <member name="P:Microsoft.HDInsight.Net.Http.Formatting.Formatting.MediaTypeFormatter.SupportedEncodings">
            <summary>
            Gets the mutable collection of character encodings supported by
            this <see cref="T:Microsoft.HDInsight.Net.Http.Formatting.Formatting.MediaTypeFormatter"/> instance. The encodings are
            used when reading or writing data. 
            </summary>
        </member>
        <member name="P:Microsoft.HDInsight.Net.Http.Formatting.Formatting.MediaTypeFormatter.MediaTypeMappings">
            <summary>
            Gets the mutable collection of <see cref="T:Microsoft.HDInsight.Net.Http.Formatting.Formatting.MediaTypeMapping"/> elements used
            by this <see cref="T:Microsoft.HDInsight.Net.Http.Formatting.Formatting.MediaTypeFormatter"/> instance to determine the
            <see cref="T:System.Net.Http.Headers.MediaTypeHeaderValue"/> of requests or responses.
            </summary>
        </member>
        <member name="P:Microsoft.HDInsight.Net.Http.Formatting.Formatting.MediaTypeFormatter.RequiredMemberSelector">
            <summary>
            Gets or sets the <see cref="T:Microsoft.HDInsight.Net.Http.Formatting.Formatting.IRequiredMemberSelector"/> used to determine required members.
            </summary>
        </member>
        <member name="T:Microsoft.HDInsight.Net.Http.Formatting.Formatting.MediaTypeFormatter.MediaTypeHeaderValueCollection">
            <summary>
            Collection class that validates it contains only <see cref="T:System.Net.Http.Headers.MediaTypeHeaderValue"/> instances
            that are not null and not media ranges.
            </summary>
        </member>
        <member name="M:Microsoft.HDInsight.Net.Http.Formatting.Formatting.MediaTypeFormatter.MediaTypeHeaderValueCollection.InsertItem(System.Int32,System.Net.Http.Headers.MediaTypeHeaderValue)">
            <summary>
            Inserts the <paramref name="item"/> into the collection at the specified <paramref name="index"/>.
            </summary>
            <param name="index">The zero-based index at which item should be inserted.</param>
            <param name="item">The object to insert. It cannot be <c>null</c>.</param>
        </member>
        <member name="M:Microsoft.HDInsight.Net.Http.Formatting.Formatting.MediaTypeFormatter.MediaTypeHeaderValueCollection.SetItem(System.Int32,System.Net.Http.Headers.MediaTypeHeaderValue)">
            <summary>
            Replaces the element at the specified <paramref name="index"/>.
            </summary>
            <param name="index">The zero-based index of the item that should be replaced.</param>
            <param name="item">The new value for the element at the specified index.  It cannot be <c>null</c>.</param>
        </member>
        <member name="M:Microsoft.HDInsight.Net.Http.Formatting.Formatting.BaseJsonMediaTypeFormatter.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.HDInsight.Net.Http.Formatting.Formatting.BaseJsonMediaTypeFormatter"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.HDInsight.Net.Http.Formatting.Formatting.BaseJsonMediaTypeFormatter.#ctor(Microsoft.HDInsight.Net.Http.Formatting.Formatting.BaseJsonMediaTypeFormatter)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.HDInsight.Net.Http.Formatting.Formatting.BaseJsonMediaTypeFormatter"/> class.
            </summary>
            <param name="formatter">The <see cref="T:Microsoft.HDInsight.Net.Http.Formatting.Formatting.BaseJsonMediaTypeFormatter"/> instance to copy settings from.</param>
        </member>
        <member name="M:Microsoft.HDInsight.Net.Http.Formatting.Formatting.BaseJsonMediaTypeFormatter.CreateDefaultSerializerSettings">
            <summary>
            Creates a <see cref="T:Newtonsoft.Json.JsonSerializerSettings"/> instance with the default settings used by the <see cref="T:Microsoft.HDInsight.Net.Http.Formatting.Formatting.BaseJsonMediaTypeFormatter"/>.
            </summary>
        </member>
        <member name="M:Microsoft.HDInsight.Net.Http.Formatting.Formatting.BaseJsonMediaTypeFormatter.CanReadType(System.Type)">
            <summary>
            Determines whether this <see cref="T:Microsoft.HDInsight.Net.Http.Formatting.Formatting.BaseJsonMediaTypeFormatter"/> can read objects
            of the specified <paramref name="type"/>.
            </summary>
            <param name="type">The <see cref="T:System.Type"/> of object that will be read.</param>
            <returns><c>true</c> if objects of this <paramref name="type"/> can be read, otherwise <c>false</c>.</returns>
        </member>
        <member name="M:Microsoft.HDInsight.Net.Http.Formatting.Formatting.BaseJsonMediaTypeFormatter.CanWriteType(System.Type)">
            <summary>
            Determines whether this <see cref="T:Microsoft.HDInsight.Net.Http.Formatting.Formatting.BaseJsonMediaTypeFormatter"/> can write objects
            of the specified <paramref name="type"/>.
            </summary>
            <param name="type">The <see cref="T:System.Type"/> of object that will be written.</param>
            <returns><c>true</c> if objects of this <paramref name="type"/> can be written, otherwise <c>false</c>.</returns>
        </member>
        <member name="M:Microsoft.HDInsight.Net.Http.Formatting.Formatting.BaseJsonMediaTypeFormatter.ReadFromStreamAsync(System.Type,System.IO.Stream,System.Net.Http.HttpContent,Microsoft.HDInsight.Net.Http.Formatting.Formatting.IFormatterLogger)">
            <summary>
            Called during deserialization to read an object of the specified <paramref name="type"/>
            from the specified <paramref name="readStream"/>.
            </summary>
            <param name="type">The <see cref="T:System.Type"/> of object to read.</param>
            <param name="readStream">The <see cref="T:System.IO.Stream"/> from which to read.</param>
            <param name="content">The <see cref="T:System.Net.Http.HttpContent"/> for the content being written.</param>
            <param name="formatterLogger">The <see cref="T:Microsoft.HDInsight.Net.Http.Formatting.Formatting.IFormatterLogger"/> to log events to.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> whose result will be the object instance that has been read.</returns>
        </member>
        <member name="M:Microsoft.HDInsight.Net.Http.Formatting.Formatting.BaseJsonMediaTypeFormatter.ReadFromStream(System.Type,System.IO.Stream,System.Text.Encoding,Microsoft.HDInsight.Net.Http.Formatting.Formatting.IFormatterLogger)">
            <summary>
            Called during deserialization to read an object of the specified <paramref name="type"/>
            from the specified <paramref name="readStream"/>.
            </summary>
            <remarks>
            Public for delegating wrappers of this class.  Expected to be called only from
            <see cref="M:Microsoft.HDInsight.Net.Http.Formatting.Formatting.BaseJsonMediaTypeFormatter.ReadFromStreamAsync(System.Type,System.IO.Stream,System.Net.Http.HttpContent,Microsoft.HDInsight.Net.Http.Formatting.Formatting.IFormatterLogger)"/>.
            </remarks>
            <param name="type">The <see cref="T:System.Type"/> of object to read.</param>
            <param name="readStream">The <see cref="T:System.IO.Stream"/> from which to read.</param>
            <param name="effectiveEncoding">The <see cref="T:System.Text.Encoding"/> to use when reading.</param>
            <param name="formatterLogger">The <see cref="T:Microsoft.HDInsight.Net.Http.Formatting.Formatting.IFormatterLogger"/> to log events to.</param>
            <returns>The <see cref="T:System.Object"/> instance that has been read.</returns>
        </member>
        <member name="M:Microsoft.HDInsight.Net.Http.Formatting.Formatting.BaseJsonMediaTypeFormatter.CreateJsonReader(System.Type,System.IO.Stream,System.Text.Encoding)">
            <summary>
            Called during deserialization to get the <see cref="T:Newtonsoft.Json.JsonReader"/>.
            </summary>
            <remarks>
            Public for delegating wrappers of this class.  Expected to be called only from
            <see cref="M:Microsoft.HDInsight.Net.Http.Formatting.Formatting.BaseJsonMediaTypeFormatter.ReadFromStreamAsync(System.Type,System.IO.Stream,System.Net.Http.HttpContent,Microsoft.HDInsight.Net.Http.Formatting.Formatting.IFormatterLogger)"/>.
            </remarks>
            <param name="type">The <see cref="T:System.Type"/> of object to read.</param>
            <param name="readStream">The <see cref="T:System.IO.Stream"/> from which to read.</param>
            <param name="effectiveEncoding">The <see cref="T:System.Text.Encoding"/> to use when reading.</param>
            <returns>The <see cref="T:Newtonsoft.Json.JsonWriter"/> used during deserialization.</returns>
        </member>
        <member name="M:Microsoft.HDInsight.Net.Http.Formatting.Formatting.BaseJsonMediaTypeFormatter.CreateJsonSerializer">
            <summary>
            Called during serialization and deserialization to get the <see cref="T:Newtonsoft.Json.JsonSerializer"/>.
            </summary>
            <remarks>
            Public for delegating wrappers of this class.  Expected to be called only from
            <see cref="M:Microsoft.HDInsight.Net.Http.Formatting.Formatting.BaseJsonMediaTypeFormatter.ReadFromStreamAsync(System.Type,System.IO.Stream,System.Net.Http.HttpContent,Microsoft.HDInsight.Net.Http.Formatting.Formatting.IFormatterLogger)"/> and <see cref="M:Microsoft.HDInsight.Net.Http.Formatting.Formatting.BaseJsonMediaTypeFormatter.WriteToStreamAsync(System.Type,System.Object,System.IO.Stream,System.Net.Http.HttpContent,System.Net.TransportContext,System.Threading.CancellationToken)"/>.
            </remarks>
            <returns>The <see cref="T:Newtonsoft.Json.JsonSerializer"/> used during serialization and deserialization.</returns>
        </member>
        <member name="M:Microsoft.HDInsight.Net.Http.Formatting.Formatting.BaseJsonMediaTypeFormatter.WriteToStreamAsync(System.Type,System.Object,System.IO.Stream,System.Net.Http.HttpContent,System.Net.TransportContext,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.HDInsight.Net.Http.Formatting.Formatting.BaseJsonMediaTypeFormatter.WriteToStream(System.Type,System.Object,System.IO.Stream,System.Text.Encoding)">
            <summary>
            Called during serialization to write an object of the specified <paramref name="type"/>
            to the specified <paramref name="writeStream"/>.
            </summary>
            <remarks>
            Public for delegating wrappers of this class.  Expected to be called only from
            <see cref="M:Microsoft.HDInsight.Net.Http.Formatting.Formatting.BaseJsonMediaTypeFormatter.WriteToStreamAsync(System.Type,System.Object,System.IO.Stream,System.Net.Http.HttpContent,System.Net.TransportContext,System.Threading.CancellationToken)"/>.
            </remarks>
            <param name="type">The <see cref="T:System.Type"/> of object to write.</param>
            <param name="value">The object to write.</param>
            <param name="writeStream">The <see cref="T:System.IO.Stream"/> to which to write.</param>
            <param name="effectiveEncoding">The <see cref="T:System.Text.Encoding"/> to use when writing.</param>
        </member>
        <member name="M:Microsoft.HDInsight.Net.Http.Formatting.Formatting.BaseJsonMediaTypeFormatter.CreateJsonWriter(System.Type,System.IO.Stream,System.Text.Encoding)">
            <summary>
            Called during serialization to get the <see cref="T:Newtonsoft.Json.JsonWriter"/>.
            </summary>
            <remarks>
            Public for delegating wrappers of this class.  Expected to be called only from
            <see cref="M:Microsoft.HDInsight.Net.Http.Formatting.Formatting.BaseJsonMediaTypeFormatter.WriteToStreamAsync(System.Type,System.Object,System.IO.Stream,System.Net.Http.HttpContent,System.Net.TransportContext,System.Threading.CancellationToken)"/>.
            </remarks>
            <param name="type">The <see cref="T:System.Type"/> of object to write.</param>
            <param name="writeStream">The <see cref="T:System.IO.Stream"/> to which to write.</param>
            <param name="effectiveEncoding">The <see cref="T:System.Text.Encoding"/> to use when writing.</param>
            <returns>The <see cref="T:Newtonsoft.Json.JsonWriter"/> used during serialization.</returns>
        </member>
        <member name="P:Microsoft.HDInsight.Net.Http.Formatting.Formatting.BaseJsonMediaTypeFormatter.SerializerSettings">
            <summary>
            Gets or sets the <see cref="T:Newtonsoft.Json.JsonSerializerSettings"/> used to configure the <see cref="T:Newtonsoft.Json.JsonSerializer"/>.
            </summary>
        </member>
        <member name="P:Microsoft.HDInsight.Net.Http.Formatting.Formatting.BaseJsonMediaTypeFormatter.MaxDepth">
            <summary>
            Gets or sets the maximum depth allowed by this formatter.
            </summary>
            <remarks>
            Any override must call the base getter and setter. The setter may be called before a derived class
            constructor runs, so any override should be very careful about using derived class state.
            </remarks>
        </member>
        <member name="T:Microsoft.HDInsight.Net.Http.Formatting.Formatting.BsonMediaTypeFormatter">
            <summary>
            <see cref="T:Microsoft.HDInsight.Net.Http.Formatting.Formatting.MediaTypeFormatter"/> class to handle Bson.
            </summary>
        </member>
        <member name="M:Microsoft.HDInsight.Net.Http.Formatting.Formatting.BsonMediaTypeFormatter.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.HDInsight.Net.Http.Formatting.Formatting.BsonMediaTypeFormatter"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.HDInsight.Net.Http.Formatting.Formatting.BsonMediaTypeFormatter.#ctor(Microsoft.HDInsight.Net.Http.Formatting.Formatting.BsonMediaTypeFormatter)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.HDInsight.Net.Http.Formatting.Formatting.BsonMediaTypeFormatter"/> class.
            </summary>
            <param name="formatter">The <see cref="T:Microsoft.HDInsight.Net.Http.Formatting.Formatting.BsonMediaTypeFormatter"/> instance to copy settings from.</param>
        </member>
        <member name="M:Microsoft.HDInsight.Net.Http.Formatting.Formatting.BsonMediaTypeFormatter.ReadFromStreamAsync(System.Type,System.IO.Stream,System.Net.Http.HttpContent,Microsoft.HDInsight.Net.Http.Formatting.Formatting.IFormatterLogger)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.HDInsight.Net.Http.Formatting.Formatting.BsonMediaTypeFormatter.ReadFromStream(System.Type,System.IO.Stream,System.Text.Encoding,Microsoft.HDInsight.Net.Http.Formatting.Formatting.IFormatterLogger)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.HDInsight.Net.Http.Formatting.Formatting.BsonMediaTypeFormatter.CreateJsonReader(System.Type,System.IO.Stream,System.Text.Encoding)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.HDInsight.Net.Http.Formatting.Formatting.BsonMediaTypeFormatter.WriteToStream(System.Type,System.Object,System.IO.Stream,System.Text.Encoding)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.HDInsight.Net.Http.Formatting.Formatting.BsonMediaTypeFormatter.CreateJsonWriter(System.Type,System.IO.Stream,System.Text.Encoding)">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.HDInsight.Net.Http.Formatting.Formatting.BsonMediaTypeFormatter.DefaultMediaType">
            <summary>
            Gets the default media type for Json, namely "application/bson".
            </summary>
            <remarks>
            The default media type does not have any <c>charset</c> parameter as
            the <see cref="T:System.Text.Encoding"/> can be configured on a per <see cref="T:Microsoft.HDInsight.Net.Http.Formatting.Formatting.BsonMediaTypeFormatter"/>
            instance basis.
            </remarks>
            <value>
            Because <see cref="T:System.Net.Http.Headers.MediaTypeHeaderValue"/> is mutable, the value
            returned will be a new instance every time.
            </value>
        </member>
        <member name="P:Microsoft.HDInsight.Net.Http.Formatting.Formatting.BsonMediaTypeFormatter.MaxDepth">
            <inheritdoc />
        </member>
        <member name="F:Microsoft.HDInsight.Net.Http.Formatting.Formatting.MediaTypeHeaderValueRange.None">
            <summary>
            Not a media type range
            </summary>
        </member>
        <member name="F:Microsoft.HDInsight.Net.Http.Formatting.Formatting.MediaTypeHeaderValueRange.SubtypeMediaRange">
            <summary>
            A subtype media range, e.g. "application/*".
            </summary>
        </member>
        <member name="F:Microsoft.HDInsight.Net.Http.Formatting.Formatting.MediaTypeHeaderValueRange.AllMediaRange">
            <summary>
            An all media range, e.g. "*/*".
            </summary>
        </member>
        <member name="T:Microsoft.HDInsight.Net.Http.Formatting.HttpContentFormDataExtensions">
            <summary>
            Extension methods to allow HTML form URL-encoded data, also known as <c>application/x-www-form-urlencoded</c>, 
            to be read from <see cref="T:System.Net.Http.HttpContent"/> instances.
            </summary>
        </member>
        <member name="M:Microsoft.HDInsight.Net.Http.Formatting.HttpContentFormDataExtensions.IsFormData(System.Net.Http.HttpContent)">
            <summary>
            Determines whether the specified content is HTML form URL-encoded data, also known as <c>application/x-www-form-urlencoded</c> data.
            </summary>
            <param name="content">The content.</param>
            <returns>
            <c>true</c> if the specified content is HTML form URL-encoded data; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Microsoft.HDInsight.Net.Http.Formatting.HttpContentFormDataExtensions.ReadAsFormDataAsync(System.Net.Http.HttpContent)">
            <summary>
            Returns a <see cref="T:System.Threading.Tasks.Task`1"/> that will yield a <see cref="T:System.Collections.Specialized.NameValueCollection"/> instance containing the form data
            parsed as HTML form URL-encoded from the <paramref name="content"/> instance.
            </summary>
            <param name="content">The content.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> which will provide the result. If the data can not be read
            as HTML form URL-encoded data then the result is null.</returns>
        </member>
        <member name="M:Microsoft.HDInsight.Net.Http.Formatting.HttpContentFormDataExtensions.ReadAsFormDataAsync(System.Net.Http.HttpContent,System.Threading.CancellationToken)">
            <summary>
            Returns a <see cref="T:System.Threading.Tasks.Task`1"/> that will yield a <see cref="T:System.Collections.Specialized.NameValueCollection"/> instance containing the form data
            parsed as HTML form URL-encoded from the <paramref name="content"/> instance.
            </summary>
            <param name="content">The content.</param>
            <param name="cancellationToken">The token to monitor for cancellation requests.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> which will provide the result. If the data can not be read
            as HTML form URL-encoded data then the result is null.</returns>
        </member>
        <member name="T:Microsoft.HDInsight.Net.Http.Formatting.MultipartFormDataRemoteStreamProvider">
            <summary>
            A <see cref="T:Microsoft.HDInsight.Net.Http.Formatting.MultipartStreamProvider"/> implementation suited for use with HTML file uploads for writing file
            content to a remote storage <see cref="T:System.IO.Stream"/>. The stream provider looks at the <b>Content-Disposition</b>
            header field and determines an output remote <see cref="T:System.IO.Stream"/> based on the presence of a <b>filename</b>
            parameter. If a <b>filename</b> parameter is present in the <b>Content-Disposition</b> header field, then the
            body part is written to a remote <see cref="T:System.IO.Stream"/> provided by <see cref="M:Microsoft.HDInsight.Net.Http.Formatting.MultipartFormDataRemoteStreamProvider.GetRemoteStream(System.Net.Http.HttpContent,System.Net.Http.Headers.HttpContentHeaders)"/>.
            Otherwise it is written to a <see cref="T:System.IO.MemoryStream"/>.
            </summary>
        </member>
        <member name="T:Microsoft.HDInsight.Net.Http.Formatting.MultipartStreamProvider">
            <summary>
            An <see cref="T:Microsoft.HDInsight.Net.Http.Formatting.MultipartStreamProvider"/> implementation examines the headers provided by the MIME multipart parser
            as part of the MIME multipart extension methods (see <see cref="T:Microsoft.HDInsight.Net.Http.Formatting.HttpContentMultipartExtensions"/>) and decides 
            what kind of stream to return for the body part to be written to.
            </summary>
        </member>
        <member name="M:Microsoft.HDInsight.Net.Http.Formatting.MultipartStreamProvider.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.HDInsight.Net.Http.Formatting.MultipartStreamProvider"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.HDInsight.Net.Http.Formatting.MultipartStreamProvider.GetStream(System.Net.Http.HttpContent,System.Net.Http.Headers.HttpContentHeaders)">
            <summary>
            When a MIME multipart body part has been parsed this method is called to get a stream for where to write the body part to.
            </summary>
            <param name="parent">The parent <see cref="T:System.Net.Http.HttpContent"/> MIME multipart instance.</param>
            <param name="headers">The header fields describing the body parts content. Looking for header fields such as 
            Content-Type and Content-Disposition can help provide the appropriate stream. In addition to using the information
            in the provided header fields, it is also possible to add new header fields or modify existing header fields. This can
            be useful to get around situations where the Content-type may say <b>application/octet-stream</b> but based on
            analyzing the <b>Content-Disposition</b> header field it is found that the content in fact is <b>application/json</b>, for example.</param>
            <returns>A stream instance where the contents of a body part will be written to.</returns>
        </member>
        <member name="M:Microsoft.HDInsight.Net.Http.Formatting.MultipartStreamProvider.ExecutePostProcessingAsync">
            <summary>
            Immediately upon reading the last MIME body part but before completing the read task, this method is 
            called to enable the <see cref="T:Microsoft.HDInsight.Net.Http.Formatting.MultipartStreamProvider"/> to do any post processing on the <see cref="T:System.Net.Http.HttpContent"/>
            instances that have been read. For example, it can be used to copy the data to another location, or perform
            some other kind of post processing on the data before completing the read operation.
            </summary>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> representing the post processing.</returns>
        </member>
        <member name="M:Microsoft.HDInsight.Net.Http.Formatting.MultipartStreamProvider.ExecutePostProcessingAsync(System.Threading.CancellationToken)">
            <summary>
            Immediately upon reading the last MIME body part but before completing the read task, this method is 
            called to enable the <see cref="T:Microsoft.HDInsight.Net.Http.Formatting.MultipartStreamProvider"/> to do any post processing on the <see cref="T:System.Net.Http.HttpContent"/>
            instances that have been read. For example, it can be used to copy the data to another location, or perform
            some other kind of post processing on the data before completing the read operation.
            </summary>
            <param name="cancellationToken">The token to monitor for cancellation requests.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> representing the post processing.</returns>
        </member>
        <member name="P:Microsoft.HDInsight.Net.Http.Formatting.MultipartStreamProvider.Contents">
            <summary>
            Gets the collection of <see cref="T:System.Net.Http.HttpContent"/> instances where each instance represents a MIME body part.
            </summary>
        </member>
        <member name="M:Microsoft.HDInsight.Net.Http.Formatting.MultipartFormDataRemoteStreamProvider.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.HDInsight.Net.Http.Formatting.MultipartFormDataRemoteStreamProvider"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.HDInsight.Net.Http.Formatting.MultipartFormDataRemoteStreamProvider.GetRemoteStream(System.Net.Http.HttpContent,System.Net.Http.Headers.HttpContentHeaders)">
            <summary>
            Provides a <see cref="T:Microsoft.HDInsight.Net.Http.Formatting.RemoteStreamInfo"/> for <see cref="M:Microsoft.HDInsight.Net.Http.Formatting.MultipartFormDataRemoteStreamProvider.GetStream(System.Net.Http.HttpContent,System.Net.Http.Headers.HttpContentHeaders)"/>. Override this method to provide a
            remote stream to which the data should be written.
            </summary>
            <param name="parent">The parent <see cref="T:System.Net.Http.HttpContent"/> MIME multipart instance.</param>
            <param name="headers">The header fields describing the body part's content. </param>
            <returns>
            A result specifying a remote stream where the file will be written to and a location where the file can be
            accessed. It cannot be null and the stream must be writable.
            </returns>
        </member>
        <member name="M:Microsoft.HDInsight.Net.Http.Formatting.MultipartFormDataRemoteStreamProvider.GetStream(System.Net.Http.HttpContent,System.Net.Http.Headers.HttpContentHeaders)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.HDInsight.Net.Http.Formatting.MultipartFormDataRemoteStreamProvider.ExecutePostProcessingAsync">
            <summary>
            Read the non-file contents as form data.
            </summary>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> representing the post processing.</returns>
        </member>
        <member name="M:Microsoft.HDInsight.Net.Http.Formatting.MultipartFormDataRemoteStreamProvider.ExecutePostProcessingAsync(System.Threading.CancellationToken)">
            <summary>
            Read the non-file contents as form data.
            </summary>
            <param name="cancellationToken">The token to monitor for cancellation requests.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> representing the post processing.</returns>
        </member>
        <member name="P:Microsoft.HDInsight.Net.Http.Formatting.MultipartFormDataRemoteStreamProvider.FileData">
            <summary>
            Gets a collection of file data passed as part of the multipart form data.
            </summary>
        </member>
        <member name="P:Microsoft.HDInsight.Net.Http.Formatting.MultipartFormDataRemoteStreamProvider.FormData">
            <summary>
            Gets a <see cref="T:System.Collections.Specialized.NameValueCollection"/> of form data passed as part of the multipart form data.
            </summary>
        </member>
        <member name="M:Microsoft.HDInsight.Net.Http.Formatting.MultipartFormDataStreamProviderHelper.ReadFormDataAsync(System.Collections.ObjectModel.Collection{System.Net.Http.HttpContent},System.Collections.Specialized.NameValueCollection,System.Threading.CancellationToken)">
            <summary>
            Read the non-file contents as form data.
            </summary>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> representing the post processing.</returns>
        </member>
        <member name="T:Microsoft.HDInsight.Net.Http.Formatting.MultipartRemoteFileData">
            <summary>
            Represents a multipart file data for remote storage.
            </summary>
        </member>
        <member name="M:Microsoft.HDInsight.Net.Http.Formatting.MultipartRemoteFileData.#ctor(System.Net.Http.Headers.HttpContentHeaders,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.HDInsight.Net.Http.Formatting.MultipartRemoteFileData"/> class.
            </summary>
            <param name="headers">The headers of the multipart file data.</param>
            <param name="location">The remote file's location.</param>
            <param name="fileName">The remote file's name.</param>
        </member>
        <member name="P:Microsoft.HDInsight.Net.Http.Formatting.MultipartRemoteFileData.FileName">
            <summary>
            Gets the remote file's name.
            </summary>
        </member>
        <member name="P:Microsoft.HDInsight.Net.Http.Formatting.MultipartRemoteFileData.Headers">
            <summary>
            Gets the headers of the multipart file data.
            </summary>
        </member>
        <member name="P:Microsoft.HDInsight.Net.Http.Formatting.MultipartRemoteFileData.Location">
            <summary>
            Gets the remote file's location.
            </summary>
        </member>
        <member name="T:Microsoft.HDInsight.Net.Http.Formatting.RemoteStreamInfo">
            <summary>
            Represents the result for <see cref="M:Microsoft.HDInsight.Net.Http.Formatting.MultipartFormDataRemoteStreamProvider.GetRemoteStream(System.Net.Http.HttpContent,System.Net.Http.Headers.HttpContentHeaders)"/>.
            </summary>
        </member>
        <member name="M:Microsoft.HDInsight.Net.Http.Formatting.RemoteStreamInfo.#ctor(System.IO.Stream,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.HDInsight.Net.Http.Formatting.RemoteStreamInfo"/> class.
            </summary>
            <param name="remoteStream">
            The remote stream instance where the file will be written to.
            </param>
            <param name="location">The remote file's location.</param>
            <param name="fileName">The remote file's name.</param>
        </member>
        <member name="P:Microsoft.HDInsight.Net.Http.Formatting.RemoteStreamInfo.FileName">
            <summary>
            Gets the remote file's location.
            </summary>
        </member>
        <member name="P:Microsoft.HDInsight.Net.Http.Formatting.RemoteStreamInfo.Location">
            <summary>
            Gets the remote file's location.
            </summary>
        </member>
        <member name="P:Microsoft.HDInsight.Net.Http.Formatting.RemoteStreamInfo.RemoteStream">
            <summary>
            Gets the remote stream instance where the file will be written to.
            </summary>
        </member>
        <member name="T:Microsoft.HDInsight.Net.Http.Formatting.Resources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:Microsoft.HDInsight.Net.Http.Formatting.Resources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:Microsoft.HDInsight.Net.Http.Formatting.Resources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:Microsoft.HDInsight.Net.Http.Formatting.Resources.AsyncResult_CallbackThrewException">
            <summary>
              Looks up a localized string similar to Async Callback threw an exception..
            </summary>
        </member>
        <member name="P:Microsoft.HDInsight.Net.Http.Formatting.Resources.AsyncResult_MultipleCompletes">
            <summary>
              Looks up a localized string similar to The IAsyncResult implementation &apos;{0}&apos; tried to complete a single operation multiple times. This could be caused by an incorrect application IAsyncResult implementation or other extensibility code, such as an IAsyncResult that returns incorrect CompletedSynchronously values or invokes the AsyncCallback multiple times..
            </summary>
        </member>
        <member name="P:Microsoft.HDInsight.Net.Http.Formatting.Resources.AsyncResult_MultipleEnds">
            <summary>
              Looks up a localized string similar to End cannot be called twice on an AsyncResult..
            </summary>
        </member>
        <member name="P:Microsoft.HDInsight.Net.Http.Formatting.Resources.AsyncResult_ResultMismatch">
            <summary>
              Looks up a localized string similar to An incorrect IAsyncResult was provided to an &apos;End&apos; method. The IAsyncResult object passed to &apos;End&apos; must be the one returned from the matching &apos;Begin&apos; or passed to the callback provided to &apos;Begin&apos;..
            </summary>
        </member>
        <member name="P:Microsoft.HDInsight.Net.Http.Formatting.Resources.ByteRangeStreamContentNoRanges">
            <summary>
              Looks up a localized string similar to Found zero byte ranges. There must be at least one byte range provided..
            </summary>
        </member>
        <member name="P:Microsoft.HDInsight.Net.Http.Formatting.Resources.ByteRangeStreamContentNotBytesRange">
            <summary>
              Looks up a localized string similar to The range unit &apos;{0}&apos; is not valid. The range must have a unit of &apos;{1}&apos;..
            </summary>
        </member>
        <member name="P:Microsoft.HDInsight.Net.Http.Formatting.Resources.ByteRangeStreamEmpty">
            <summary>
              Looks up a localized string similar to The stream over which &apos;{0}&apos; provides a range view must have a length greater than or equal to 1..
            </summary>
        </member>
        <member name="P:Microsoft.HDInsight.Net.Http.Formatting.Resources.ByteRangeStreamInvalidFrom">
            <summary>
              Looks up a localized string similar to The &apos;From&apos; value of the range must be less than or equal to {0}..
            </summary>
        </member>
        <member name="P:Microsoft.HDInsight.Net.Http.Formatting.Resources.ByteRangeStreamNoneOverlap">
            <summary>
              Looks up a localized string similar to None of the requested ranges ({0}) overlap with the current extent of the selected resource..
            </summary>
        </member>
        <member name="P:Microsoft.HDInsight.Net.Http.Formatting.Resources.ByteRangeStreamNoOverlap">
            <summary>
              Looks up a localized string similar to The requested range ({0}) does not overlap with the current extent of the selected resource..
            </summary>
        </member>
        <member name="P:Microsoft.HDInsight.Net.Http.Formatting.Resources.ByteRangeStreamNotSeekable">
            <summary>
              Looks up a localized string similar to The stream over which &apos;{0}&apos; provides a range view must be seekable..
            </summary>
        </member>
        <member name="P:Microsoft.HDInsight.Net.Http.Formatting.Resources.ByteRangeStreamReadOnly">
            <summary>
              Looks up a localized string similar to This is a read-only stream..
            </summary>
        </member>
        <member name="P:Microsoft.HDInsight.Net.Http.Formatting.Resources.CannotHaveNullInList">
            <summary>
              Looks up a localized string similar to A null &apos;{0}&apos; is not valid..
            </summary>
        </member>
        <member name="P:Microsoft.HDInsight.Net.Http.Formatting.Resources.CannotUseMediaRangeForSupportedMediaType">
            <summary>
              Looks up a localized string similar to The &apos;{0}&apos; of &apos;{1}&apos; cannot be used as a supported media type because it is a media range..
            </summary>
        </member>
        <member name="P:Microsoft.HDInsight.Net.Http.Formatting.Resources.CannotUseNullValueType">
            <summary>
              Looks up a localized string similar to The &apos;{0}&apos; type cannot accept a null value for the value type &apos;{1}&apos;..
            </summary>
        </member>
        <member name="P:Microsoft.HDInsight.Net.Http.Formatting.Resources.CookieInvalidName">
            <summary>
              Looks up a localized string similar to The specified value is not a valid cookie name..
            </summary>
        </member>
        <member name="P:Microsoft.HDInsight.Net.Http.Formatting.Resources.CookieNull">
            <summary>
              Looks up a localized string similar to Cookie cannot be null..
            </summary>
        </member>
        <member name="P:Microsoft.HDInsight.Net.Http.Formatting.Resources.DelegatingHandlerArrayContainsNullItem">
            <summary>
              Looks up a localized string similar to The &apos;{0}&apos; list is invalid because it contains one or more null items..
            </summary>
        </member>
        <member name="P:Microsoft.HDInsight.Net.Http.Formatting.Resources.DelegatingHandlerArrayHasNonNullInnerHandler">
            <summary>
              Looks up a localized string similar to The &apos;{0}&apos; list is invalid because the property &apos;{1}&apos; of &apos;{2}&apos; is not null..
            </summary>
        </member>
        <member name="P:Microsoft.HDInsight.Net.Http.Formatting.Resources.ErrorReadingFormUrlEncodedStream">
            <summary>
              Looks up a localized string similar to Error reading HTML form URL-encoded data stream..
            </summary>
        </member>
        <member name="P:Microsoft.HDInsight.Net.Http.Formatting.Resources.FormUrlEncodedMismatchingTypes">
            <summary>
              Looks up a localized string similar to Mismatched types at node &apos;{0}&apos;..
            </summary>
        </member>
        <member name="P:Microsoft.HDInsight.Net.Http.Formatting.Resources.FormUrlEncodedParseError">
            <summary>
              Looks up a localized string similar to Error parsing HTML form URL-encoded data, byte {0}..
            </summary>
        </member>
        <member name="P:Microsoft.HDInsight.Net.Http.Formatting.Resources.HttpInvalidStatusCode">
            <summary>
              Looks up a localized string similar to Invalid HTTP status code: &apos;{0}&apos;. The status code must be between {1} and {2}..
            </summary>
        </member>
        <member name="P:Microsoft.HDInsight.Net.Http.Formatting.Resources.HttpInvalidVersion">
            <summary>
              Looks up a localized string similar to Invalid HTTP version: &apos;{0}&apos;. The version must start with the characters &apos;{1}&apos;..
            </summary>
        </member>
        <member name="P:Microsoft.HDInsight.Net.Http.Formatting.Resources.HttpMessageContentAlreadyRead">
            <summary>
              Looks up a localized string similar to The &apos;{0}&apos; of the &apos;{1}&apos; has already been read..
            </summary>
        </member>
        <member name="P:Microsoft.HDInsight.Net.Http.Formatting.Resources.HttpMessageContentStreamMustBeSeekable">
            <summary>
              Looks up a localized string similar to The &apos;{0}&apos; must be seekable in order to create an &apos;{1}&apos; instance containing an entity body.  .
            </summary>
        </member>
        <member name="P:Microsoft.HDInsight.Net.Http.Formatting.Resources.HttpMessageErrorReading">
            <summary>
              Looks up a localized string similar to Error reading HTTP message..
            </summary>
        </member>
        <member name="P:Microsoft.HDInsight.Net.Http.Formatting.Resources.HttpMessageInvalidMediaType">
            <summary>
              Looks up a localized string similar to Invalid &apos;{0}&apos; instance provided. It does not have a content type header with a value of &apos;{1}&apos;..
            </summary>
        </member>
        <member name="P:Microsoft.HDInsight.Net.Http.Formatting.Resources.HttpMessageParserEmptyUri">
            <summary>
              Looks up a localized string similar to HTTP Request URI cannot be an empty string..
            </summary>
        </member>
        <member name="P:Microsoft.HDInsight.Net.Http.Formatting.Resources.HttpMessageParserError">
            <summary>
              Looks up a localized string similar to Error parsing HTTP message header byte {0} of message {1}..
            </summary>
        </member>
        <member name="P:Microsoft.HDInsight.Net.Http.Formatting.Resources.HttpMessageParserInvalidHostCount">
            <summary>
              Looks up a localized string similar to An invalid number of &apos;{0}&apos; header fields were present in the HTTP Request. It must contain exactly one &apos;{0}&apos; header field but found {1}..
            </summary>
        </member>
        <member name="P:Microsoft.HDInsight.Net.Http.Formatting.Resources.HttpMessageParserInvalidUriScheme">
            <summary>
              Looks up a localized string similar to Invalid URI scheme: &apos;{0}&apos;. The URI scheme must be a valid &apos;{1}&apos; scheme..
            </summary>
        </member>
        <member name="P:Microsoft.HDInsight.Net.Http.Formatting.Resources.InvalidArrayInsert">
            <summary>
              Looks up a localized string similar to Invalid array at node &apos;{0}&apos;..
            </summary>
        </member>
        <member name="P:Microsoft.HDInsight.Net.Http.Formatting.Resources.JQuery13CompatModeNotSupportNestedJson">
            <summary>
              Looks up a localized string similar to Traditional style array without &apos;[]&apos; is not supported with nested object at location {0}..
            </summary>
        </member>
        <member name="P:Microsoft.HDInsight.Net.Http.Formatting.Resources.JsonSerializerFactoryReturnedNull">
            <summary>
              Looks up a localized string similar to The &apos;{0}&apos; method returned null. It must return a JSON serializer instance..
            </summary>
        </member>
        <member name="P:Microsoft.HDInsight.Net.Http.Formatting.Resources.JsonSerializerFactoryThrew">
            <summary>
              Looks up a localized string similar to The &apos;{0}&apos; method threw an exception when attempting to create a JSON serializer..
            </summary>
        </member>
        <member name="P:Microsoft.HDInsight.Net.Http.Formatting.Resources.MaxDepthExceeded">
            <summary>
              Looks up a localized string similar to The maximum read depth ({0}) has been exceeded because the form url-encoded data being read has more levels of nesting than is allowed..
            </summary>
        </member>
        <member name="P:Microsoft.HDInsight.Net.Http.Formatting.Resources.MaxHttpCollectionKeyLimitReached">
            <summary>
              Looks up a localized string similar to The number of keys in a NameValueCollection has exceeded the limit of &apos;{0}&apos;. You can adjust it by modifying the MaxHttpCollectionKeys property on the &apos;{1}&apos; class..
            </summary>
        </member>
        <member name="P:Microsoft.HDInsight.Net.Http.Formatting.Resources.MediaTypeFormatter_BsonParseError_MissingData">
            <summary>
              Looks up a localized string similar to Error parsing BSON data; unable to read content as a {0}..
            </summary>
        </member>
        <member name="P:Microsoft.HDInsight.Net.Http.Formatting.Resources.MediaTypeFormatter_BsonParseError_UnexpectedData">
            <summary>
              Looks up a localized string similar to Error parsing BSON data; unexpected dictionary content: {0} entries, first key &apos;{1}&apos;..
            </summary>
        </member>
        <member name="P:Microsoft.HDInsight.Net.Http.Formatting.Resources.MediaTypeFormatter_JsonReaderFactoryReturnedNull">
            <summary>
              Looks up a localized string similar to The &apos;{0}&apos; method returned null. It must return a JSON reader instance..
            </summary>
        </member>
        <member name="P:Microsoft.HDInsight.Net.Http.Formatting.Resources.MediaTypeFormatter_JsonWriterFactoryReturnedNull">
            <summary>
              Looks up a localized string similar to The &apos;{0}&apos; method returned null. It must return a JSON writer instance..
            </summary>
        </member>
        <member name="P:Microsoft.HDInsight.Net.Http.Formatting.Resources.MediaTypeFormatterCannotRead">
            <summary>
              Looks up a localized string similar to The media type formatter of type &apos;{0}&apos; does not support reading because it does not implement the ReadFromStreamAsync method..
            </summary>
        </member>
        <member name="P:Microsoft.HDInsight.Net.Http.Formatting.Resources.MediaTypeFormatterCannotReadSync">
            <summary>
              Looks up a localized string similar to The media type formatter of type &apos;{0}&apos; does not support reading because it does not implement the ReadFromStream method..
            </summary>
        </member>
        <member name="P:Microsoft.HDInsight.Net.Http.Formatting.Resources.MediaTypeFormatterCannotWrite">
            <summary>
              Looks up a localized string similar to The media type formatter of type &apos;{0}&apos; does not support writing because it does not implement the WriteToStreamAsync method..
            </summary>
        </member>
        <member name="P:Microsoft.HDInsight.Net.Http.Formatting.Resources.MediaTypeFormatterCannotWriteSync">
            <summary>
              Looks up a localized string similar to The media type formatter of type &apos;{0}&apos; does not support writing because it does not implement the WriteToStream method..
            </summary>
        </member>
        <member name="P:Microsoft.HDInsight.Net.Http.Formatting.Resources.MediaTypeFormatterNoEncoding">
            <summary>
              Looks up a localized string similar to No encoding found for media type formatter &apos;{0}&apos;. There must be at least one supported encoding registered in order for the media type formatter to read or write content..
            </summary>
        </member>
        <member name="P:Microsoft.HDInsight.Net.Http.Formatting.Resources.MimeMultipartParserBadBoundary">
            <summary>
              Looks up a localized string similar to MIME multipart boundary cannot end with an empty space..
            </summary>
        </member>
        <member name="P:Microsoft.HDInsight.Net.Http.Formatting.Resources.MultipartFormDataStreamProviderNoContentDisposition">
            <summary>
              Looks up a localized string similar to Did not find required &apos;{0}&apos; header field in MIME multipart body part..
            </summary>
        </member>
        <member name="P:Microsoft.HDInsight.Net.Http.Formatting.Resources.MultipartStreamProviderInvalidLocalFileName">
            <summary>
              Looks up a localized string similar to Could not determine a valid local file name for the multipart body part..
            </summary>
        </member>
        <member name="P:Microsoft.HDInsight.Net.Http.Formatting.Resources.NestedBracketNotValid">
            <summary>
              Looks up a localized string similar to Nested bracket is not valid for &apos;{0}&apos; data at position {1}..
            </summary>
        </member>
        <member name="P:Microsoft.HDInsight.Net.Http.Formatting.Resources.NonNullUriRequiredForMediaTypeMapping">
            <summary>
              Looks up a localized string similar to A non-null request URI must be provided to determine if a &apos;{0}&apos; matches a given request or response message..
            </summary>
        </member>
        <member name="P:Microsoft.HDInsight.Net.Http.Formatting.Resources.NoReadSerializerAvailable">
            <summary>
              Looks up a localized string similar to No MediaTypeFormatter is available to read an object of type &apos;{0}&apos; from content with media type &apos;{1}&apos;..
            </summary>
        </member>
        <member name="P:Microsoft.HDInsight.Net.Http.Formatting.Resources.ObjectAndTypeDisagree">
            <summary>
              Looks up a localized string similar to An object of type &apos;{0}&apos; cannot be used with a type parameter of &apos;{1}&apos;..
            </summary>
        </member>
        <member name="P:Microsoft.HDInsight.Net.Http.Formatting.Resources.ObjectContent_FormatterCannotWriteType">
            <summary>
              Looks up a localized string similar to The configured formatter &apos;{0}&apos; cannot write an object of type &apos;{1}&apos;..
            </summary>
        </member>
        <member name="P:Microsoft.HDInsight.Net.Http.Formatting.Resources.QueryStringNameShouldNotNull">
            <summary>
              Looks up a localized string similar to Query string name cannot be null..
            </summary>
        </member>
        <member name="P:Microsoft.HDInsight.Net.Http.Formatting.Resources.ReadAsHttpMessageUnexpectedTermination">
            <summary>
              Looks up a localized string similar to Unexpected end of HTTP message stream. HTTP message is not complete..
            </summary>
        </member>
        <member name="P:Microsoft.HDInsight.Net.Http.Formatting.Resources.ReadAsMimeMultipartArgumentNoBoundary">
            <summary>
              Looks up a localized string similar to Invalid &apos;{0}&apos; instance provided. It does not have a &apos;{1}&apos; content-type header with a &apos;{2}&apos; parameter..
            </summary>
        </member>
        <member name="P:Microsoft.HDInsight.Net.Http.Formatting.Resources.ReadAsMimeMultipartArgumentNoContentType">
            <summary>
              Looks up a localized string similar to Invalid &apos;{0}&apos; instance provided. It does not have a content-type header value. &apos;{0}&apos; instances must have a content-type header starting with &apos;{1}&apos;..
            </summary>
        </member>
        <member name="P:Microsoft.HDInsight.Net.Http.Formatting.Resources.ReadAsMimeMultipartArgumentNoMultipart">
            <summary>
              Looks up a localized string similar to Invalid &apos;{0}&apos; instance provided. It does not have a content type header starting with &apos;{1}&apos;..
            </summary>
        </member>
        <member name="P:Microsoft.HDInsight.Net.Http.Formatting.Resources.ReadAsMimeMultipartErrorReading">
            <summary>
              Looks up a localized string similar to Error reading MIME multipart body part..
            </summary>
        </member>
        <member name="P:Microsoft.HDInsight.Net.Http.Formatting.Resources.ReadAsMimeMultipartErrorWriting">
            <summary>
              Looks up a localized string similar to Error writing MIME multipart body part to output stream..
            </summary>
        </member>
        <member name="P:Microsoft.HDInsight.Net.Http.Formatting.Resources.ReadAsMimeMultipartHeaderParseError">
            <summary>
              Looks up a localized string similar to Error parsing MIME multipart body part header byte {0} of data segment {1}..
            </summary>
        </member>
        <member name="P:Microsoft.HDInsight.Net.Http.Formatting.Resources.ReadAsMimeMultipartParseError">
            <summary>
              Looks up a localized string similar to Error parsing MIME multipart message byte {0} of data segment {1}..
            </summary>
        </member>
        <member name="P:Microsoft.HDInsight.Net.Http.Formatting.Resources.ReadAsMimeMultipartStreamProviderException">
            <summary>
              Looks up a localized string similar to The stream provider of type &apos;{0}&apos; threw an exception..
            </summary>
        </member>
        <member name="P:Microsoft.HDInsight.Net.Http.Formatting.Resources.ReadAsMimeMultipartStreamProviderNull">
            <summary>
              Looks up a localized string similar to The stream provider of type &apos;{0}&apos; returned null. It must return a writable &apos;{1}&apos; instance..
            </summary>
        </member>
        <member name="P:Microsoft.HDInsight.Net.Http.Formatting.Resources.ReadAsMimeMultipartStreamProviderReadOnly">
            <summary>
              Looks up a localized string similar to The stream provider of type &apos;{0}&apos; returned a read-only stream. It must return a writable &apos;{1}&apos; instance..
            </summary>
        </member>
        <member name="P:Microsoft.HDInsight.Net.Http.Formatting.Resources.ReadAsMimeMultipartUnexpectedTermination">
            <summary>
              Looks up a localized string similar to Unexpected end of MIME multipart stream. MIME multipart message is not complete..
            </summary>
        </member>
        <member name="P:Microsoft.HDInsight.Net.Http.Formatting.Resources.RemoteStreamInfoCannotBeNull">
            <summary>
              Looks up a localized string similar to The &apos;{0}&apos; method in &apos;{1}&apos; returned null. It must return a RemoteStreamInfo instance containing a writable stream and a valid URL..
            </summary>
        </member>
        <member name="P:Microsoft.HDInsight.Net.Http.Formatting.Resources.SerializerCannotSerializeType">
            <summary>
              Looks up a localized string similar to The &apos;{0}&apos; serializer cannot serialize the type &apos;{1}&apos;..
            </summary>
        </member>
        <member name="P:Microsoft.HDInsight.Net.Http.Formatting.Resources.UnMatchedBracketNotValid">
            <summary>
              Looks up a localized string similar to There is an unmatched opened bracket for the &apos;{0}&apos; at position {1}..
            </summary>
        </member>
        <member name="P:Microsoft.HDInsight.Net.Http.Formatting.Resources.UnsupportedIndent">
            <summary>
              Looks up a localized string similar to Indentation is not supported by &apos;{0}&apos;..
            </summary>
        </member>
        <member name="P:Microsoft.HDInsight.Net.Http.Formatting.Resources.XmlMediaTypeFormatter_InvalidSerializerType">
            <summary>
              Looks up a localized string similar to The object of type &apos;{0}&apos; returned by {1} must be an instance of either XmlObjectSerializer or XmlSerializer..
            </summary>
        </member>
        <member name="P:Microsoft.HDInsight.Net.Http.Formatting.Resources.XmlMediaTypeFormatter_NullReturnedSerializer">
            <summary>
              Looks up a localized string similar to The object returned by {0} must not be a null value..
            </summary>
        </member>
        <member name="T:Microsoft.HDInsight.Net.Http.Formatting.UnsupportedMediaTypeException">
            <summary>
            Defines an exception type for signalling that a request's media type was not supported.
            </summary>
        </member>
        <member name="M:Microsoft.HDInsight.Net.Http.Formatting.UnsupportedMediaTypeException.#ctor(System.String,System.Net.Http.Headers.MediaTypeHeaderValue)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.HDInsight.Net.Http.Formatting.UnsupportedMediaTypeException"/> class.
            </summary>
            <param name="message">The message that describes the error.</param>
            <param name="mediaType">The unsupported media type.</param>
        </member>
        <member name="T:Microsoft.HDInsight.Net.Http.Formatting.Internal.ByteRangeStream">
            <summary>
            Stream which only exposes a read-only only range view of an 
            inner stream.
            </summary>
        </member>
        <member name="T:Microsoft.HDInsight.Net.Http.Formatting.Internal.DelegatingStream">
            <summary>
            Stream that delegates to inner stream. 
            This is taken from System.Net.Http
            </summary>
        </member>
        <member name="M:Microsoft.HDInsight.Net.Http.Formatting.Internal.ByteRangeStream.PrepareStreamForRangeRead(System.Int32)">
            <summary>
            Gets the 
            </summary>
            <param name="count">The count requested to be read by the caller.</param>
            <returns>The remaining bytes to read within the range defined for this stream.</returns>
        </member>
        <member name="T:Microsoft.HDInsight.Net.Http.Formatting.Internal.ReadOnlyStreamWithEncodingPreamble">
            <summary>
            This implements a read-only, forward-only stream around another readable stream, to ensure
            that there is an appropriate encoding preamble in the stream.
            </summary>
        </member>
        <member name="T:Microsoft.HDInsight.Net.Http.Formatting.InvalidByteRangeException">
            <summary>
            An exception thrown by <see cref="T:Microsoft.HDInsight.Net.Http.Formatting.ByteRangeStreamContent"/> in case none of the requested ranges 
            overlap with the current extend of the selected resource. The current extend of the resource
            is indicated in the ContentRange property.
            </summary>
        </member>
        <member name="P:Microsoft.HDInsight.Net.Http.Formatting.InvalidByteRangeException.ContentRange">
            <summary>
            The current extend of the resource indicated in terms of a ContentRange header field.
            </summary>
        </member>
        <member name="T:Microsoft.HDInsight.Net.Http.Formatting.MultipartRelatedStreamProvider">
            <summary>
            An <see cref="T:Microsoft.HDInsight.Net.Http.Formatting.MultipartStreamProvider"/> suited for reading MIME body parts following the
            <c>multipart/related</c> media type as defined in RFC 2387 (see http://www.ietf.org/rfc/rfc2387.txt).
            </summary>
        </member>
        <member name="M:Microsoft.HDInsight.Net.Http.Formatting.MultipartRelatedStreamProvider.FindRootContent(System.Net.Http.HttpContent,System.Collections.Generic.IEnumerable{System.Net.Http.HttpContent})">
            <summary>
            Looks for the "start" parameter of the parent's content type and then finds the corresponding
            child HttpContent with a matching Content-ID header field.
            </summary>
            <returns>The matching child or null if none found.</returns>
        </member>
        <member name="M:Microsoft.HDInsight.Net.Http.Formatting.MultipartRelatedStreamProvider.FindMultipartRelatedParameter(System.Net.Http.HttpContent,System.String)">
            <summary>
            Looks for a parameter in the <see cref="T:System.Net.Http.Headers.MediaTypeHeaderValue"/>.
            </summary>
            <returns>The matching parameter or null if none found.</returns>
        </member>
        <member name="P:Microsoft.HDInsight.Net.Http.Formatting.MultipartRelatedStreamProvider.RootContent">
            <summary>
            Gets the <see cref="T:System.Net.Http.HttpContent"/> instance that has been marked as the <c>root</c> content in the 
            MIME multipart related message using the <c>start</c> parameter. If no <c>start</c> parameter is
            present then pick the first of the children.
            </summary>
        </member>
        <member name="T:Microsoft.HDInsight.Net.Http.Formatting.ObjectContent`1">
            <summary>
            Generic form of <see cref="T:Microsoft.HDInsight.Net.Http.Formatting.ObjectContent"/>.
            </summary>
            <typeparam name="T">The type of object this <see cref="T:Microsoft.HDInsight.Net.Http.Formatting.ObjectContent"/> class will contain.</typeparam>
        </member>
        <member name="T:Microsoft.HDInsight.Net.Http.Formatting.ObjectContent">
            <summary>
            Contains a value as well as an associated <see cref="T:Microsoft.HDInsight.Net.Http.Formatting.Formatting.MediaTypeFormatter"/> that will be
            used to serialize the value when writing this content.
            </summary>
        </member>
        <member name="M:Microsoft.HDInsight.Net.Http.Formatting.ObjectContent.#ctor(System.Type,System.Object,Microsoft.HDInsight.Net.Http.Formatting.Formatting.MediaTypeFormatter)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.HDInsight.Net.Http.Formatting.ObjectContent"/> class.
            </summary>
            <param name="type">The type of object this instance will contain.</param>
            <param name="value">The value of the object this instance will contain.</param>
            <param name="formatter">The formatter to use when serializing the value.</param>
        </member>
        <member name="M:Microsoft.HDInsight.Net.Http.Formatting.ObjectContent.#ctor(System.Type,System.Object,Microsoft.HDInsight.Net.Http.Formatting.Formatting.MediaTypeFormatter,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.HDInsight.Net.Http.Formatting.ObjectContent"/> class.
            </summary>
            <param name="type">The type of object this instance will contain.</param>
            <param name="value">The value of the object this instance will contain.</param>
            <param name="formatter">The formatter to use when serializing the value.</param>
            <param name="mediaType">The authoritative value of the content's Content-Type header. Can be <c>null</c> in which case the
            <paramref name="formatter">formatter's</paramref> default content type will be used.</param>
        </member>
        <member name="M:Microsoft.HDInsight.Net.Http.Formatting.ObjectContent.#ctor(System.Type,System.Object,Microsoft.HDInsight.Net.Http.Formatting.Formatting.MediaTypeFormatter,System.Net.Http.Headers.MediaTypeHeaderValue)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.HDInsight.Net.Http.Formatting.ObjectContent"/> class.
            </summary>
            <param name="type">The type of object this instance will contain.</param>
            <param name="value">The value of the object this instance will contain.</param>
            <param name="formatter">The formatter to use when serializing the value.</param>
            <param name="mediaType">The authoritative value of the content's Content-Type header. Can be <c>null</c> in which case the
            <paramref name="formatter">formatter's</paramref> default content type will be used.</param>
        </member>
        <member name="M:Microsoft.HDInsight.Net.Http.Formatting.ObjectContent.SerializeToStreamAsync(System.IO.Stream,System.Net.TransportContext)">
            <summary>
            Asynchronously serializes the object's content to the given <paramref name="stream"/>.
            </summary>
            <param name="stream">The <see cref="T:System.IO.Stream"/> to which to write.</param>
            <param name="context">The associated <see cref="T:System.Net.TransportContext"/>.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> instance that is asynchronously serializing the object's content.</returns>
        </member>
        <member name="M:Microsoft.HDInsight.Net.Http.Formatting.ObjectContent.TryComputeLength(System.Int64@)">
            <summary>
            Computes the length of the stream if possible.
            </summary>
            <param name="length">The computed length of the stream.</param>
            <returns><c>true</c> if the length has been computed; otherwise <c>false</c>.</returns>
        </member>
        <member name="P:Microsoft.HDInsight.Net.Http.Formatting.ObjectContent.ObjectType">
            <summary>
            Gets the type of object managed by this <see cref="T:Microsoft.HDInsight.Net.Http.Formatting.ObjectContent"/> instance.
            </summary>
        </member>
        <member name="P:Microsoft.HDInsight.Net.Http.Formatting.ObjectContent.Formatter">
            <summary>
            The <see cref="T:Microsoft.HDInsight.Net.Http.Formatting.Formatting.MediaTypeFormatter">formatter</see> associated with this content instance.
            </summary>
        </member>
        <member name="P:Microsoft.HDInsight.Net.Http.Formatting.ObjectContent.Value">
            <summary>
            Gets or sets the value of the current <see cref="T:Microsoft.HDInsight.Net.Http.Formatting.ObjectContent"/>.
            </summary>
        </member>
        <member name="M:Microsoft.HDInsight.Net.Http.Formatting.ObjectContent`1.#ctor(`0,Microsoft.HDInsight.Net.Http.Formatting.Formatting.MediaTypeFormatter)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.HDInsight.Net.Http.Formatting.ObjectContent`1"/> class.
            </summary>
            <param name="value">The value of the object this instance will contain.</param>
            <param name="formatter">The formatter to use when serializing the value.</param>
        </member>
        <member name="M:Microsoft.HDInsight.Net.Http.Formatting.ObjectContent`1.#ctor(`0,Microsoft.HDInsight.Net.Http.Formatting.Formatting.MediaTypeFormatter,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.HDInsight.Net.Http.Formatting.ObjectContent`1"/> class.
            </summary>
            <param name="value">The value of the object this instance will contain.</param>
            <param name="formatter">The formatter to use when serializing the value.</param>
            <param name="mediaType">The authoritative value of the content's Content-Type header. Can be <c>null</c> in which case the
            <paramref name="formatter">formatter's</paramref> default content type will be used.</param>
        </member>
        <member name="M:Microsoft.HDInsight.Net.Http.Formatting.ObjectContent`1.#ctor(`0,Microsoft.HDInsight.Net.Http.Formatting.Formatting.MediaTypeFormatter,System.Net.Http.Headers.MediaTypeHeaderValue)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.HDInsight.Net.Http.Formatting.ObjectContent`1"/> class.
            </summary>
            <param name="value">The value of the object this instance will contain.</param>
            <param name="formatter">The formatter to use when serializing the value.</param>
            <param name="mediaType">The authoritative value of the content's Content-Type header. Can be <c>null</c> in which case the
            <paramref name="formatter">formatter's</paramref> default content type will be used.</param>
        </member>
        <member name="T:Microsoft.HDInsight.Net.Http.Formatting.PushStreamContent">
            <summary>
            Provides an <see cref="T:System.Net.Http.HttpContent"/> implementation that exposes an output <see cref="T:System.IO.Stream"/>
            which can be written to directly. The ability to push data to the output stream differs from the 
            <see cref="T:System.Net.Http.StreamContent"/> where data is pulled and not pushed.
            </summary>
        </member>
        <member name="M:Microsoft.HDInsight.Net.Http.Formatting.PushStreamContent.#ctor(System.Action{System.IO.Stream,System.Net.Http.HttpContent,System.Net.TransportContext})">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.HDInsight.Net.Http.Formatting.PushStreamContent"/> class. The
            <paramref name="onStreamAvailable"/> action is called when an output stream
            has become available allowing the action to write to it directly. When the 
            stream is closed, it will signal to the content that is has completed and the 
            HTTP request or response will be completed.
            </summary>
            <param name="onStreamAvailable">The action to call when an output stream is available.</param>
        </member>
        <member name="M:Microsoft.HDInsight.Net.Http.Formatting.PushStreamContent.#ctor(System.Func{System.IO.Stream,System.Net.Http.HttpContent,System.Net.TransportContext,System.Threading.Tasks.Task})">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.HDInsight.Net.Http.Formatting.PushStreamContent"/> class. 
            </summary>
            <param name="onStreamAvailable">The action to call when an output stream is available. The stream is automatically
            closed when the return task is completed.</param>
        </member>
        <member name="M:Microsoft.HDInsight.Net.Http.Formatting.PushStreamContent.#ctor(System.Action{System.IO.Stream,System.Net.Http.HttpContent,System.Net.TransportContext},System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.HDInsight.Net.Http.Formatting.PushStreamContent"/> class with the given media type.
            </summary>
        </member>
        <member name="M:Microsoft.HDInsight.Net.Http.Formatting.PushStreamContent.#ctor(System.Func{System.IO.Stream,System.Net.Http.HttpContent,System.Net.TransportContext,System.Threading.Tasks.Task},System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.HDInsight.Net.Http.Formatting.PushStreamContent"/> class with the given media type.
            </summary>
        </member>
        <member name="M:Microsoft.HDInsight.Net.Http.Formatting.PushStreamContent.#ctor(System.Action{System.IO.Stream,System.Net.Http.HttpContent,System.Net.TransportContext},System.Net.Http.Headers.MediaTypeHeaderValue)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.HDInsight.Net.Http.Formatting.PushStreamContent"/> class with the given <see cref="T:System.Net.Http.Headers.MediaTypeHeaderValue"/>.
            </summary>
        </member>
        <member name="M:Microsoft.HDInsight.Net.Http.Formatting.PushStreamContent.#ctor(System.Func{System.IO.Stream,System.Net.Http.HttpContent,System.Net.TransportContext,System.Threading.Tasks.Task},System.Net.Http.Headers.MediaTypeHeaderValue)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.HDInsight.Net.Http.Formatting.PushStreamContent"/> class with the given <see cref="T:System.Net.Http.Headers.MediaTypeHeaderValue"/>.
            </summary>
        </member>
        <member name="M:Microsoft.HDInsight.Net.Http.Formatting.PushStreamContent.SerializeToStreamAsync(System.IO.Stream,System.Net.TransportContext)">
            <summary>
            When this method is called, it calls the action provided in the constructor with the output 
            stream to write to. Once the action has completed its work it closes the stream which will 
            close this content instance and complete the HTTP request or response.
            </summary>
            <param name="stream">The <see cref="T:System.IO.Stream"/> to which to write.</param>
            <param name="context">The associated <see cref="T:System.Net.TransportContext"/>.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> instance that is asynchronously serializing the object's content.</returns>
        </member>
        <member name="M:Microsoft.HDInsight.Net.Http.Formatting.PushStreamContent.TryComputeLength(System.Int64@)">
            <summary>
            Computes the length of the stream if possible.
            </summary>
            <param name="length">The computed length of the stream.</param>
            <returns><c>true</c> if the length has been computed; otherwise <c>false</c>.</returns>
        </member>
        <member name="M:Microsoft.HDInsight.Net.Http.Formatting.HttpClientFactory.Create(System.Net.Http.DelegatingHandler[])">
            <summary>
            Creates a new <see cref="T:System.Net.Http.HttpClient"/> instance configured with the handlers provided and with an
            <see cref="T:System.Net.Http.HttpClientHandler"/> as the innermost handler.
            </summary>
            <param name="handlers">An ordered list of <see cref="T:System.Net.Http.DelegatingHandler"/> instances to be invoked as an 
            <see cref="T:System.Net.Http.HttpRequestMessage"/> travels from the <see cref="T:System.Net.Http.HttpClient"/> to the network and an 
            <see cref="T:System.Net.Http.HttpResponseMessage"/> travels from the network back to <see cref="T:System.Net.Http.HttpClient"/>.
            The handlers are invoked in a top-down fashion. That is, the first entry is invoked first for 
            an outbound request message but last for an inbound response message.</param>
            <returns>An <see cref="T:System.Net.Http.HttpClient"/> instance with the configured handlers.</returns>
        </member>
        <member name="M:Microsoft.HDInsight.Net.Http.Formatting.HttpClientFactory.Create(System.Net.Http.HttpMessageHandler,System.Net.Http.DelegatingHandler[])">
            <summary>
            Creates a new <see cref="T:System.Net.Http.HttpClient"/> instance configured with the handlers provided and with the
            provided <paramref name="innerHandler"/> as the innermost handler.
            </summary>
            <param name="innerHandler">The inner handler represents the destination of the HTTP message channel.</param>
            <param name="handlers">An ordered list of <see cref="T:System.Net.Http.DelegatingHandler"/> instances to be invoked as an 
            <see cref="T:System.Net.Http.HttpRequestMessage"/> travels from the <see cref="T:System.Net.Http.HttpClient"/> to the network and an 
            <see cref="T:System.Net.Http.HttpResponseMessage"/> travels from the network back to <see cref="T:System.Net.Http.HttpClient"/>.
            The handlers are invoked in a top-down fashion. That is, the first entry is invoked first for 
            an outbound request message but last for an inbound response message.</param>
            <returns>An <see cref="T:System.Net.Http.HttpClient"/> instance with the configured handlers.</returns>
        </member>
        <member name="M:Microsoft.HDInsight.Net.Http.Formatting.HttpClientFactory.CreatePipeline(System.Net.Http.HttpMessageHandler,System.Collections.Generic.IEnumerable{System.Net.Http.DelegatingHandler})">
            <summary>
            Creates an instance of an <see cref="T:System.Net.Http.HttpMessageHandler"/> using the <see cref="T:System.Net.Http.DelegatingHandler"/> instances
            provided by <paramref name="handlers"/>. The resulting pipeline can be used to manually create <see cref="T:System.Net.Http.HttpClient"/>
            or <see cref="T:System.Net.Http.HttpMessageInvoker"/> instances with customized message handlers.
            </summary>
            <param name="innerHandler">The inner handler represents the destination of the HTTP message channel.</param>
            <param name="handlers">An ordered list of <see cref="T:System.Net.Http.DelegatingHandler"/> instances to be invoked as part 
            of sending an <see cref="T:System.Net.Http.HttpRequestMessage"/> and receiving an <see cref="T:System.Net.Http.HttpResponseMessage"/>.
            The handlers are invoked in a top-down fashion. That is, the first entry is invoked first for 
            an outbound request message but last for an inbound response message.</param>
            <returns>The HTTP message channel.</returns>
        </member>
        <member name="T:Microsoft.HDInsight.Net.Http.Formatting.Formatting.MediaTypeHeaderValueExtensions">
            <summary>
            Extension methods for <see cref="T:System.Net.Http.Headers.MediaTypeHeaderValue"/>.
            </summary>
        </member>
        <member name="M:Microsoft.HDInsight.Net.Http.Formatting.Formatting.MediaTypeHeaderValueExtensions.IsSubsetOf(System.Net.Http.Headers.MediaTypeHeaderValue,System.Net.Http.Headers.MediaTypeHeaderValue)">
            <summary>
            Determines whether two <see cref="T:System.Net.Http.Headers.MediaTypeHeaderValue"/> instances match. The instance
            <paramref name="mediaType1"/> is said to match <paramref name="mediaType2"/> if and only if
            <paramref name="mediaType1"/> is a strict subset of the values and parameters of <paramref name="mediaType2"/>. 
            That is, if the media type and media type parameters of <paramref name="mediaType1"/> are all present 
            and match those of <paramref name="mediaType2"/> then it is a match even though <paramref name="mediaType2"/> may have additional
            parameters.
            </summary>
            <param name="mediaType1">The first media type.</param>
            <param name="mediaType2">The second media type.</param>
            <returns><c>true</c> if this is a subset of <paramref name="mediaType2"/>; false otherwise.</returns>
        </member>
        <member name="M:Microsoft.HDInsight.Net.Http.Formatting.Formatting.MediaTypeHeaderValueExtensions.IsSubsetOf(System.Net.Http.Headers.MediaTypeHeaderValue,System.Net.Http.Headers.MediaTypeHeaderValue,Microsoft.HDInsight.Net.Http.Formatting.Formatting.MediaTypeHeaderValueRange@)">
            <summary>
            Determines whether two <see cref="T:System.Net.Http.Headers.MediaTypeHeaderValue"/> instances match. The instance
            <paramref name="mediaType1"/> is said to match <paramref name="mediaType2"/> if and only if
            <paramref name="mediaType1"/> is a strict subset of the values and parameters of <paramref name="mediaType2"/>. 
            That is, if the media type and media type parameters of <paramref name="mediaType1"/> are all present 
            and match those of <paramref name="mediaType2"/> then it is a match even though <paramref name="mediaType2"/> may have additional
            parameters.
            </summary>
            <param name="mediaType1">The first media type.</param>
            <param name="mediaType2">The second media type.</param>
            <param name="mediaType2Range">Indicates whether <paramref name="mediaType2"/> is a regular media type, a subtype media range, or a full media range</param>
            <returns><c>true</c> if this is a subset of <paramref name="mediaType2"/>; false otherwise.</returns>
        </member>
        <member name="T:Microsoft.HDInsight.Net.Http.Formatting.Handlers.HttpProgressEventArgs">
            <summary>
            Provides data for the events generated by <see cref="T:Microsoft.HDInsight.Net.Http.Formatting.Handlers.ProgressMessageHandler"/>.
            </summary>
        </member>
        <member name="M:Microsoft.HDInsight.Net.Http.Formatting.Handlers.HttpProgressEventArgs.#ctor(System.Int32,System.Object,System.Int64,System.Nullable{System.Int64})">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.HDInsight.Net.Http.Formatting.Handlers.HttpProgressEventArgs"/> with the parameters given.
            </summary>
            <param name="progressPercentage">The percent completed of the overall exchange.</param>
            <param name="userToken">Any user state provided as part of reading or writing the data.</param>
            <param name="bytesTransferred">The current number of bytes either received or sent.</param>
            <param name="totalBytes">The total number of bytes expected to be received or sent.</param>
        </member>
        <member name="P:Microsoft.HDInsight.Net.Http.Formatting.Handlers.HttpProgressEventArgs.BytesTransferred">
            <summary>
            Gets the current number of bytes transferred.
            </summary>
        </member>
        <member name="P:Microsoft.HDInsight.Net.Http.Formatting.Handlers.HttpProgressEventArgs.TotalBytes">
            <summary>
            Gets the total number of expected bytes to be sent or received. If the number is not known then this is null.
            </summary>
        </member>
        <member name="T:Microsoft.HDInsight.Net.Http.Formatting.Handlers.ProgressContent">
            <summary>
            Wraps an inner <see cref="T:System.Net.Http.HttpContent"/> in order to insert a <see cref="T:Microsoft.HDInsight.Net.Http.Formatting.Handlers.ProgressStream"/> on writing data.
            </summary>
        </member>
        <member name="T:Microsoft.HDInsight.Net.Http.Formatting.Handlers.ProgressMessageHandler">
            <summary>
            The <see cref="T:Microsoft.HDInsight.Net.Http.Formatting.Handlers.ProgressMessageHandler"/> provides a mechanism for getting progress event notifications
            when sending and receiving data in connection with exchanging HTTP requests and responses.
            Register event handlers for the events <see cref="E:Microsoft.HDInsight.Net.Http.Formatting.Handlers.ProgressMessageHandler.HttpSendProgress"/> and <see cref="E:Microsoft.HDInsight.Net.Http.Formatting.Handlers.ProgressMessageHandler.HttpReceiveProgress"/>
            to see events for data being sent and received.
            </summary>
        </member>
        <member name="M:Microsoft.HDInsight.Net.Http.Formatting.Handlers.ProgressMessageHandler.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.HDInsight.Net.Http.Formatting.Handlers.ProgressMessageHandler"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.HDInsight.Net.Http.Formatting.Handlers.ProgressMessageHandler.#ctor(System.Net.Http.HttpMessageHandler)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.HDInsight.Net.Http.Formatting.Handlers.ProgressMessageHandler"/> class.
            </summary>
            <param name="innerHandler">The inner handler to which this handler submits requests.</param>
        </member>
        <member name="M:Microsoft.HDInsight.Net.Http.Formatting.Handlers.ProgressMessageHandler.OnHttpRequestProgress(System.Net.Http.HttpRequestMessage,Microsoft.HDInsight.Net.Http.Formatting.Handlers.HttpProgressEventArgs)">
            <summary>
            Raises the <see cref="E:Microsoft.HDInsight.Net.Http.Formatting.Handlers.ProgressMessageHandler.HttpSendProgress"/> event.
            </summary>
            <param name="request">The request.</param>
            <param name="e">The <see cref="T:Microsoft.HDInsight.Net.Http.Formatting.Handlers.HttpProgressEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Microsoft.HDInsight.Net.Http.Formatting.Handlers.ProgressMessageHandler.OnHttpResponseProgress(System.Net.Http.HttpRequestMessage,Microsoft.HDInsight.Net.Http.Formatting.Handlers.HttpProgressEventArgs)">
            <summary>
            Raises the <see cref="E:Microsoft.HDInsight.Net.Http.Formatting.Handlers.ProgressMessageHandler.HttpReceiveProgress"/> event.
            </summary>
            <param name="request">The request.</param>
            <param name="e">The <see cref="T:Microsoft.HDInsight.Net.Http.Formatting.Handlers.HttpProgressEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="E:Microsoft.HDInsight.Net.Http.Formatting.Handlers.ProgressMessageHandler.HttpSendProgress">
            <summary>
            Occurs every time the client sending data is making progress.
            </summary>
        </member>
        <member name="E:Microsoft.HDInsight.Net.Http.Formatting.Handlers.ProgressMessageHandler.HttpReceiveProgress">
            <summary>
            Occurs every time the client receiving data is making progress.
            </summary>
        </member>
        <member name="T:Microsoft.HDInsight.Net.Http.Formatting.Handlers.ProgressStream">
            <summary>
            This implementation of <see cref="T:System.Net.Http.DelegatingStream"/> registers how much data has been 
            read (received) versus written (sent) for a particular HTTP operation. The implementation
            is client side in that the total bytes to send is taken from the request and the total
            bytes to read is taken from the response. In a server side scenario, it would be the
            other way around (reading the request and writing the response).
            </summary>
        </member>
        <member name="T:Microsoft.HDInsight.Net.Http.Formatting.HttpResponseHeadersExtensions">
            <summary>
            Provides extension methods for the <see cref="T:System.Net.Http.Headers.HttpResponseHeaders"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.HDInsight.Net.Http.Formatting.HttpResponseHeadersExtensions.AddCookies(System.Net.Http.Headers.HttpResponseHeaders,System.Collections.Generic.IEnumerable{Microsoft.HDInsight.Net.Http.Formatting.Headers.CookieHeaderValue})">
            <summary>
            Adds cookies to a response. Each <c>Set-Cookie</c> header is 
            represented as one <see cref="T:Microsoft.HDInsight.Net.Http.Formatting.Headers.CookieHeaderValue"/> instance. A <see cref="T:Microsoft.HDInsight.Net.Http.Formatting.Headers.CookieHeaderValue"/>
            contains information about the domain, path, and other cookie information as well as one or
            more <see cref="T:Microsoft.HDInsight.Net.Http.Formatting.Headers.CookieState"/> instances. Each <see cref="T:Microsoft.HDInsight.Net.Http.Formatting.Headers.CookieState"/> instance contains
            a cookie name and whatever cookie state is associate with that name. The state is in the form of a 
            <see cref="T:System.Collections.Specialized.NameValueCollection"/> which on the wire is encoded as HTML Form URL-encoded data. 
            This representation allows for multiple related "cookies" to be carried within the same
            <c>Cookie</c> header while still providing separation between each cookie state. A sample
            <c>Cookie</c> header is shown below. In this example, there are two <see cref="T:Microsoft.HDInsight.Net.Http.Formatting.Headers.CookieState"/>
            with names <c>state1</c> and <c>state2</c> respectively. Further, each cookie state contains two name/value
            pairs (name1/value1 and name2/value2) and (name3/value3 and name4/value4).
            <code>
            Set-Cookie: state1:name1=value1&amp;name2=value2; state2:name3=value3&amp;name4=value4; domain=domain1; path=path1;
            </code>
            </summary>
            <param name="headers">The response headers</param>
            <param name="cookies">The cookie values to add to the response.</param>
        </member>
        <member name="T:Microsoft.HDInsight.Net.Http.Formatting.HttpRequestHeadersExtensions">
            <summary>
            Provides extension methods for the <see cref="T:System.Net.Http.Headers.HttpRequestHeaders"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.HDInsight.Net.Http.Formatting.HttpRequestHeadersExtensions.GetCookies(System.Net.Http.Headers.HttpRequestHeaders)">
            <summary>
            Gets any cookie headers present in the request. Each <c>Cookie</c> header is 
            represented as one <see cref="T:Microsoft.HDInsight.Net.Http.Formatting.Headers.CookieHeaderValue"/> instance. A <see cref="T:Microsoft.HDInsight.Net.Http.Formatting.Headers.CookieHeaderValue"/>
            contains information about the domain, path, and other cookie information as well as one or
            more <see cref="T:Microsoft.HDInsight.Net.Http.Formatting.Headers.CookieState"/> instances. Each <see cref="T:Microsoft.HDInsight.Net.Http.Formatting.Headers.CookieState"/> instance contains
            a cookie name and whatever cookie state is associate with that name. The state is in the form of a 
            <see cref="T:System.Collections.Specialized.NameValueCollection"/> which on the wire is encoded as HTML Form URL-encoded data. 
            This representation allows for multiple related "cookies" to be carried within the same
            <c>Cookie</c> header while still providing separation between each cookie state. A sample
            <c>Cookie</c> header is shown below. In this example, there are two <see cref="T:Microsoft.HDInsight.Net.Http.Formatting.Headers.CookieState"/>
            with names <c>stateA</c> and <c>stateB</c> respectively. Further, each cookie state contains two name/value
            pairs (name1/value1 and name2/value2) and (name3/value3 and name4/value4).
            <code>
            Cookie: stateA=name1=value1&amp;name2=value2; stateB=name3=value3&amp;name4=value4; domain=domain1; path=path1;
            </code>
            </summary>
            <param name="headers">The request headers</param>
            <returns>A collection of <see cref="T:Microsoft.HDInsight.Net.Http.Formatting.Headers.CookieHeaderValue"/> instances.</returns>
        </member>
        <member name="M:Microsoft.HDInsight.Net.Http.Formatting.HttpRequestHeadersExtensions.GetCookies(System.Net.Http.Headers.HttpRequestHeaders,System.String)">
            <summary>
            Gets any cookie headers present in the request which contains a <see cref="T:Microsoft.HDInsight.Net.Http.Formatting.Headers.CookieState"/> with
            a name that matches the provided <paramref name="name"/>. For example, if there are two Cookie
            header fields looking like this:
            <code>
            Cookie: stateA=name1=value1&amp;name2=value2; stateB=name3=value3&amp;name4=value4; domain=domain1; path=path1;
            Cookie: stateC=name5=value5&amp;name6=value6; stateD=name7=value7&amp;name8=value8; domain=domain2; path=path2;
            </code>
            and <c>name</c> is <c>stateD</c> then only the second Cookie header will be returned.
            </summary>
            <param name="headers">The request headers</param>
            <param name="name">The name of the <see cref="T:Microsoft.HDInsight.Net.Http.Formatting.Headers.CookieState"/> to match.</param>
            <returns>A collection of <see cref="T:Microsoft.HDInsight.Net.Http.Formatting.Headers.CookieHeaderValue"/> instances with a matching <see cref="T:Microsoft.HDInsight.Net.Http.Formatting.Headers.CookieState"/>.</returns>
        </member>
        <member name="T:Microsoft.HDInsight.Net.Http.Formatting.Formatting.StringWithQualityHeaderValueComparer">
            <summary>
            Implementation of <see cref="T:System.Collections.Generic.IComparer`1"/> that can compare content negotiation header fields
            based on their quality values (a.k.a q-values). This applies to values used in accept-charset, 
            accept-encoding, accept-language and related header fields with similar syntax rules. See 
            <see cref="T:Microsoft.HDInsight.Net.Http.Formatting.Formatting.MediaTypeWithQualityHeaderValueComparer"/> for a comparer for media type 
            q-values.
            </summary>
        </member>
        <member name="M:Microsoft.HDInsight.Net.Http.Formatting.Formatting.StringWithQualityHeaderValueComparer.Compare(System.Net.Http.Headers.StringWithQualityHeaderValue,System.Net.Http.Headers.StringWithQualityHeaderValue)">
            <summary>
            Compares two <see cref="T:System.Net.Http.Headers.StringWithQualityHeaderValue"/> based on their quality value (a.k.a their "q-value").
            Values with identical q-values are considered equal (i.e the result is 0) with the exception of wild-card
            values (i.e. a value of "*") which are considered less than non-wild-card values. This allows to sort
            a sequence of <see cref="T:System.Net.Http.Headers.StringWithQualityHeaderValue"/> following their q-values ending up with any
            wild-cards at the end.
            </summary>
            <param name="stringWithQuality1">The first value to compare.</param>
            <param name="stringWithQuality2">The second value to compare</param>
            <returns>The result of the comparison.</returns>
        </member>
        <member name="T:Microsoft.HDInsight.Net.Http.Formatting.Formatting.FormDataCollection">
            <summary>
            Represent the form data.
            - This has 100% fidelity (including ordering, which is important for deserializing ordered array). 
            - using interfaces allows us to optimize the implementation. E.g., we can avoid eagerly string-splitting a 10gb file. 
            - This also provides a convenient place to put extension methods. 
            </summary>
        </member>
        <member name="M:Microsoft.HDInsight.Net.Http.Formatting.Formatting.FormDataCollection.#ctor(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}})">
            <summary>
            Initialize a form collection around incoming data. 
            The key value enumeration should be immutable. 
            </summary>
            <param name="pairs">incoming set of key value pairs. Ordering is preserved.</param>
        </member>
        <member name="M:Microsoft.HDInsight.Net.Http.Formatting.Formatting.FormDataCollection.#ctor(System.Uri)">
            <summary>
            Initialize a form collection from a query string. 
            Uri and FormURl body have the same schema. 
            </summary>
        </member>
        <member name="M:Microsoft.HDInsight.Net.Http.Formatting.Formatting.FormDataCollection.#ctor(System.String)">
            <summary>
            Initialize a form collection from a URL encoded query string. Any leading question
            mark (?) will be considered part of the query string and treated as any other value.
            </summary>
        </member>
        <member name="M:Microsoft.HDInsight.Net.Http.Formatting.Formatting.FormDataCollection.ReadAsNameValueCollection">
            <summary>
            Get the collection as a NameValueCollection.
            Beware this loses some ordering. Values are ordered within a key,
            but keys are no longer ordered against each other.
            </summary>
        </member>
        <member name="M:Microsoft.HDInsight.Net.Http.Formatting.Formatting.FormDataCollection.Get(System.String)">
            <summary>
            Get values associated with a given key. If there are multiple values, they're concatenated. 
            </summary>
        </member>
        <member name="M:Microsoft.HDInsight.Net.Http.Formatting.Formatting.FormDataCollection.GetValues(System.String)">
            <summary>
            Get a value associated with a given key. 
            </summary>
        </member>
        <member name="P:Microsoft.HDInsight.Net.Http.Formatting.Formatting.FormDataCollection.Item(System.String)">
            <summary>
            Gets values associated with a given key. If there are multiple values, they're concatenated.
            </summary>
            <param name="name">The name of the entry that contains the values to get. The name can be null.</param>
            <returns>Values associated with a given key. If there are multiple values, they're concatenated.</returns>
        </member>
        <member name="T:Microsoft.HDInsight.Net.Http.Formatting.Formatting.ContentNegotiationResult">
            <summary>
            Represents the result of content negotiation performed using
            <see cref="M:Microsoft.HDInsight.Net.Http.Formatting.Formatting.IContentNegotiator.Negotiate(System.Type,System.Net.Http.HttpRequestMessage,System.Collections.Generic.IEnumerable{Microsoft.HDInsight.Net.Http.Formatting.Formatting.MediaTypeFormatter})"/>
            </summary>
        </member>
        <member name="M:Microsoft.HDInsight.Net.Http.Formatting.Formatting.ContentNegotiationResult.#ctor(Microsoft.HDInsight.Net.Http.Formatting.Formatting.MediaTypeFormatter,System.Net.Http.Headers.MediaTypeHeaderValue)">
            <summary>
            Create the content negotiation result object.
            </summary>
            <param name="formatter">The formatter.</param>
            <param name="mediaType">The preferred media type. Can be <c>null</c>.</param>
        </member>
        <member name="P:Microsoft.HDInsight.Net.Http.Formatting.Formatting.ContentNegotiationResult.Formatter">
            <summary>
            The formatter chosen for serialization.
            </summary>
        </member>
        <member name="P:Microsoft.HDInsight.Net.Http.Formatting.Formatting.ContentNegotiationResult.MediaType">
            <summary>
            The media type that is associated with the formatter chosen for serialization. Can be <c>null</c>.
            </summary>
        </member>
        <member name="T:Microsoft.HDInsight.Net.Http.Formatting.Formatting.FormUrlEncodedJson">
            <summary>
            This class provides a low-level API for parsing HTML form URL-encoded data, also known as <c>application/x-www-form-urlencoded</c> 
            data. The output of the parser is a <see cref="T:Newtonsoft.Json.Linq.JObject"/> instance. 
            <remarks>This is a low-level API intended for use by other APIs. It has been optimized for performance and 
            is not intended to be called directly from user code.</remarks>
            </summary>
        </member>
        <member name="M:Microsoft.HDInsight.Net.Http.Formatting.Formatting.FormUrlEncodedJson.Parse(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}})">
            <summary>
            Parses a collection of query string values as a <see cref="T:Newtonsoft.Json.Linq.JObject"/>.
            </summary>
            <remarks>This is a low-level API intended for use by other APIs. It has been optimized for performance and 
            is not intended to be called directly from user code.</remarks>
            <param name="nameValuePairs">The collection of query string name-value pairs parsed in lexical order. Both names
            and values must be un-escaped so that they don't contain any <see cref="T:System.Uri"/> encoding.</param>
            <returns>The <see cref="T:Newtonsoft.Json.Linq.JObject"/> corresponding to the given query string values.</returns>
        </member>
        <member name="M:Microsoft.HDInsight.Net.Http.Formatting.Formatting.FormUrlEncodedJson.Parse(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}},System.Int32)">
            <summary>
            Parses a collection of query string values as a <see cref="T:Newtonsoft.Json.Linq.JObject"/>.
            </summary>
            <remarks>This is a low-level API intended for use by other APIs. It has been optimized for performance and 
            is not intended to be called directly from user code.</remarks>
            <param name="nameValuePairs">The collection of query string name-value pairs parsed in lexical order. Both names
            and values must be un-escaped so that they don't contain any <see cref="T:System.Uri"/> encoding.</param>
            <param name="maxDepth">The maximum depth of object graph encoded as <c>x-www-form-urlencoded</c>.</param>
            <returns>The <see cref="T:Newtonsoft.Json.Linq.JObject"/> corresponding to the given query string values.</returns>
        </member>
        <member name="M:Microsoft.HDInsight.Net.Http.Formatting.Formatting.FormUrlEncodedJson.TryParse(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}},Newtonsoft.Json.Linq.JObject@)">
            <summary>
            Parses a collection of query string values as a <see cref="T:Newtonsoft.Json.Linq.JObject"/>.
            </summary>
            <remarks>This is a low-level API intended for use by other APIs. It has been optimized for performance and 
            is not intended to be called directly from user code.</remarks>
            <param name="nameValuePairs">The collection of query string name-value pairs parsed in lexical order. Both names
            and values must be un-escaped so that they don't contain any <see cref="T:System.Uri"/> encoding.</param>
            <param name="value">The parsed result or null if parsing failed.</param>
            <returns><c>true</c> if <paramref name="nameValuePairs"/> was parsed successfully; otherwise false.</returns>
        </member>
        <member name="M:Microsoft.HDInsight.Net.Http.Formatting.Formatting.FormUrlEncodedJson.TryParse(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}},System.Int32,Newtonsoft.Json.Linq.JObject@)">
            <summary>
            Parses a collection of query string values as a <see cref="T:Newtonsoft.Json.Linq.JObject"/>.
            </summary>
            <remarks>This is a low-level API intended for use by other APIs. It has been optimized for performance and 
            is not intended to be called directly from user code.</remarks>
            <param name="nameValuePairs">The collection of query string name-value pairs parsed in lexical order. Both names
            and values must be un-escaped so that they don't contain any <see cref="T:System.Uri"/> encoding.</param>
            <param name="maxDepth">The maximum depth of object graph encoded as <c>x-www-form-urlencoded</c>.</param>
            <param name="value">The parsed result or null if parsing failed.</param>
            <returns><c>true</c> if <paramref name="nameValuePairs"/> was parsed successfully; otherwise false.</returns>
        </member>
        <member name="M:Microsoft.HDInsight.Net.Http.Formatting.Formatting.FormUrlEncodedJson.ParseInternal(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}},System.Int32,System.Boolean)">
            <summary>
            Parses a collection of query string values as a <see cref="T:Newtonsoft.Json.Linq.JObject"/>.
            </summary>
            <remarks>This is a low-level API intended for use by other APIs. It has been optimized for performance and 
            is not intended to be called directly from user code.</remarks>
            <param name="nameValuePairs">The collection of query string name-value pairs parsed in lexical order. Both names
            and values must be un-escaped so that they don't contain any <see cref="T:System.Uri"/> encoding.</param>
            <param name="maxDepth">The maximum depth of object graph encoded as <c>x-www-form-urlencoded</c>.</param>
            <param name="throwOnError">Indicates whether to throw an exception on error or return false</param>
            <returns>The <see cref="T:Newtonsoft.Json.Linq.JObject"/> corresponding to the given query string values.</returns>
        </member>
        <member name="T:Microsoft.HDInsight.Net.Http.Formatting.Formatting.FormUrlEncodedJson.ArrayCandidate">
            <summary>
            Class that wraps key-value pairs.
            </summary>
            <remarks>
            This use of this class avoids a FxCop warning CA908 which happens if using various generic types.
            </remarks>
        </member>
        <member name="M:Microsoft.HDInsight.Net.Http.Formatting.Formatting.FormUrlEncodedJson.ArrayCandidate.#ctor(System.Int32,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.HDInsight.Net.Http.Formatting.Formatting.FormUrlEncodedJson.ArrayCandidate"/> class.
            </summary>
            <param name="key">The key of this <see cref="T:Microsoft.HDInsight.Net.Http.Formatting.Formatting.FormUrlEncodedJson.ArrayCandidate"/> instance.</param>
            <param name="value">The value of this <see cref="T:Microsoft.HDInsight.Net.Http.Formatting.Formatting.FormUrlEncodedJson.ArrayCandidate"/> instance.</param>
        </member>
        <member name="P:Microsoft.HDInsight.Net.Http.Formatting.Formatting.FormUrlEncodedJson.ArrayCandidate.Key">
            <summary>
            Gets or sets the key of this <see cref="T:Microsoft.HDInsight.Net.Http.Formatting.Formatting.FormUrlEncodedJson.ArrayCandidate"/> instance.
            </summary>
            <value>
            The key of this <see cref="T:Microsoft.HDInsight.Net.Http.Formatting.Formatting.FormUrlEncodedJson.ArrayCandidate"/> instance.
            </value>
        </member>
        <member name="P:Microsoft.HDInsight.Net.Http.Formatting.Formatting.FormUrlEncodedJson.ArrayCandidate.Value">
            <summary>
            Gets or sets the value of this <see cref="T:Microsoft.HDInsight.Net.Http.Formatting.Formatting.FormUrlEncodedJson.ArrayCandidate"/> instance.
            </summary>
            <value>
            The value of this <see cref="T:Microsoft.HDInsight.Net.Http.Formatting.Formatting.FormUrlEncodedJson.ArrayCandidate"/> instance.
            </value>
        </member>
        <member name="T:Microsoft.HDInsight.Net.Http.Formatting.Formatting.IFormatterLogger">
            <summary>
            Interface to log events that occur during formatter reads.
            </summary>
        </member>
        <member name="M:Microsoft.HDInsight.Net.Http.Formatting.Formatting.IFormatterLogger.LogError(System.String,System.String)">
            <summary>
            Logs an error.
            </summary>
            <param name="errorPath">The path to the member for which the error is being logged.</param>
            <param name="errorMessage">The error message to be logged.</param>
        </member>
        <member name="M:Microsoft.HDInsight.Net.Http.Formatting.Formatting.IFormatterLogger.LogError(System.String,System.Exception)">
            <summary>
            Logs an error.
            </summary>
            <param name="errorPath">The path to the member for which the error is being logged.</param>
            <param name="exception">The exception to be logged.</param>
        </member>
        <member name="T:Microsoft.HDInsight.Net.Http.Formatting.Formatting.IRequiredMemberSelector">
            <summary>
            Interface to determine which data members on a particular type are required.
            </summary>
        </member>
        <member name="M:Microsoft.HDInsight.Net.Http.Formatting.Formatting.IRequiredMemberSelector.IsRequiredMember(System.Reflection.MemberInfo)">
            <summary>
            Determines whether a given member is required on deserialization.
            </summary>
            <param name="member">The <see cref="T:System.Reflection.MemberInfo"/> that will be deserialized.</param>
            <returns><c>true</c> if <paramref name="member"/> should be treated as a required member, otherwise <c>false</c>.</returns>
        </member>
        <member name="M:Microsoft.HDInsight.Net.Http.Formatting.Headers.CookieHeaderValue.#ctor">
            <summary>
            Constructor to be used by parser to create a new instance of this type.
            </summary>
        </member>
        <member name="P:Microsoft.HDInsight.Net.Http.Formatting.Headers.CookieState.Value">
            <summary>
            If the cookie data is a simple string value then set or retrieve it using the <see cref="P:Microsoft.HDInsight.Net.Http.Formatting.Headers.CookieState.Value"/> property.
            If the cookie data is structured then use the <see cref="P:Microsoft.HDInsight.Net.Http.Formatting.Headers.CookieState.Values"/> property.
            </summary>
        </member>
        <member name="P:Microsoft.HDInsight.Net.Http.Formatting.Headers.CookieState.Values">
            <summary>
            If the cookie data is structured then use the <see cref="P:Microsoft.HDInsight.Net.Http.Formatting.Headers.CookieState.Values"/> property for setting and getting individual sub-name/value pairs.
            If the cookie data is a simple string value then set or retrieve it using the <see cref="P:Microsoft.HDInsight.Net.Http.Formatting.Headers.CookieState.Value"/> property.
            </summary>
        </member>
        <member name="T:Microsoft.HDInsight.Net.Http.Formatting.HttpClientExtensions">
            <summary>
            Extension methods that aid in making formatted requests using <see cref="T:System.Net.Http.HttpClient"/>.
            </summary>
        </member>
        <member name="M:Microsoft.HDInsight.Net.Http.Formatting.HttpClientExtensions.PostAsJsonAsync``1(System.Net.Http.HttpClient,System.String,``0)">
            <summary>
            Sends a POST request as an asynchronous operation to the specified Uri with the given <paramref name="value"/> serialized
            as JSON.
            </summary>
            <remarks>
            This method uses a default instance of <see cref="T:Microsoft.HDInsight.Net.Http.Formatting.Formatting.JsonMediaTypeFormatter"/>.
            </remarks>
            <typeparam name="T">The type of <paramref name="value"/>.</typeparam>
            <param name="client">The client used to make the request.</param>
            <param name="requestUri">The Uri the request is sent to.</param>
            <param name="value">The value that will be placed in the request's entity body.</param>
            <returns>A task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.HDInsight.Net.Http.Formatting.HttpClientExtensions.PostAsJsonAsync``1(System.Net.Http.HttpClient,System.String,``0,System.Threading.CancellationToken)">
            <summary>
            Sends a POST request as an asynchronous operation to the specified Uri with the given <paramref name="value"/> serialized
            as JSON.
            </summary>
            <remarks>
            This method uses a default instance of <see cref="T:Microsoft.HDInsight.Net.Http.Formatting.Formatting.JsonMediaTypeFormatter"/>.
            </remarks>
            <typeparam name="T">The type of <paramref name="value"/>.</typeparam>
            <param name="client">The client used to make the request.</param>
            <param name="requestUri">The Uri the request is sent to.</param>
            <param name="value">The value that will be placed in the request's entity body.</param>
            <param name="cancellationToken">The token to monitor for cancellation requests.</param>
            <returns>A task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.HDInsight.Net.Http.Formatting.HttpClientExtensions.PostAsJsonAsync``1(System.Net.Http.HttpClient,System.Uri,``0)">
            <summary>
            Sends a POST request as an asynchronous operation to the specified Uri with the given <paramref name="value"/> serialized
            as JSON.
            </summary>
            <remarks>
            This method uses a default instance of <see cref="T:Microsoft.HDInsight.Net.Http.Formatting.Formatting.JsonMediaTypeFormatter"/>.
            </remarks>
            <typeparam name="T">The type of <paramref name="value"/>.</typeparam>
            <param name="client">The client used to make the request.</param>
            <param name="requestUri">The Uri the request is sent to.</param>
            <param name="value">The value that will be placed in the request's entity body.</param>
            <returns>A task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.HDInsight.Net.Http.Formatting.HttpClientExtensions.PostAsJsonAsync``1(System.Net.Http.HttpClient,System.Uri,``0,System.Threading.CancellationToken)">
            <summary>
            Sends a POST request as an asynchronous operation to the specified Uri with the given <paramref name="value"/> serialized
            as JSON.
            </summary>
            <remarks>
            This method uses a default instance of <see cref="T:Microsoft.HDInsight.Net.Http.Formatting.Formatting.JsonMediaTypeFormatter"/>.
            </remarks>
            <typeparam name="T">The type of <paramref name="value"/>.</typeparam>
            <param name="client">The client used to make the request.</param>
            <param name="requestUri">The Uri the request is sent to.</param>
            <param name="value">The value that will be placed in the request's entity body.</param>
            <param name="cancellationToken">The token to monitor for cancellation requests.</param>
            <returns>A task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.HDInsight.Net.Http.Formatting.HttpClientExtensions.PostAsXmlAsync``1(System.Net.Http.HttpClient,System.String,``0)">
            <summary>
            Sends a POST request as an asynchronous operation to the specified Uri with the given <paramref name="value"/> serialized
            as XML.
            </summary>
            <remarks>
            This method uses the default instance of <see cref="T:Microsoft.HDInsight.Net.Http.Formatting.Formatting.XmlMediaTypeFormatter"/>.
            </remarks>
            <typeparam name="T">The type of <paramref name="value"/>.</typeparam>
            <param name="client">The client used to make the request.</param>
            <param name="requestUri">The Uri the request is sent to.</param>
            <param name="value">The value that will be placed in the request's entity body.</param>
            <returns>A task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.HDInsight.Net.Http.Formatting.HttpClientExtensions.PostAsXmlAsync``1(System.Net.Http.HttpClient,System.String,``0,System.Threading.CancellationToken)">
            <summary>
            Sends a POST request as an asynchronous operation to the specified Uri with the given <paramref name="value"/> serialized
            as XML.
            </summary>
            <remarks>
            This method uses the default instance of <see cref="T:Microsoft.HDInsight.Net.Http.Formatting.Formatting.XmlMediaTypeFormatter"/>.
            </remarks>
            <typeparam name="T">The type of <paramref name="value"/>.</typeparam>
            <param name="client">The client used to make the request.</param>
            <param name="requestUri">The Uri the request is sent to.</param>
            <param name="value">The value that will be placed in the request's entity body.</param>
            <param name="cancellationToken">The token to monitor for cancellation requests.</param>
            <returns>A task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.HDInsight.Net.Http.Formatting.HttpClientExtensions.PostAsXmlAsync``1(System.Net.Http.HttpClient,System.Uri,``0)">
            <summary>
            Sends a POST request as an asynchronous operation to the specified Uri with the given <paramref name="value"/> serialized
            as XML.
            </summary>
            <remarks>
            This method uses the default instance of <see cref="T:Microsoft.HDInsight.Net.Http.Formatting.Formatting.XmlMediaTypeFormatter"/>.
            </remarks>
            <typeparam name="T">The type of <paramref name="value"/>.</typeparam>
            <param name="client">The client used to make the request.</param>
            <param name="requestUri">The Uri the request is sent to.</param>
            <param name="value">The value that will be placed in the request's entity body.</param>
            <returns>A task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.HDInsight.Net.Http.Formatting.HttpClientExtensions.PostAsXmlAsync``1(System.Net.Http.HttpClient,System.Uri,``0,System.Threading.CancellationToken)">
            <summary>
            Sends a POST request as an asynchronous operation to the specified Uri with the given <paramref name="value"/> serialized
            as XML.
            </summary>
            <remarks>
            This method uses the default instance of <see cref="T:Microsoft.HDInsight.Net.Http.Formatting.Formatting.XmlMediaTypeFormatter"/>.
            </remarks>
            <typeparam name="T">The type of <paramref name="value"/>.</typeparam>
            <param name="client">The client used to make the request.</param>
            <param name="requestUri">The Uri the request is sent to.</param>
            <param name="value">The value that will be placed in the request's entity body.</param>
            <param name="cancellationToken">The token to monitor for cancellation requests.</param>
            <returns>A task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.HDInsight.Net.Http.Formatting.HttpClientExtensions.PostAsync``1(System.Net.Http.HttpClient,System.String,``0,Microsoft.HDInsight.Net.Http.Formatting.Formatting.MediaTypeFormatter)">
            <summary>
            Sends a POST request as an asynchronous operation to the specified Uri with <paramref name="value"/>
            serialized using the given <paramref name="formatter"/>.
            </summary>
            <seealso cref="M:Microsoft.HDInsight.Net.Http.Formatting.HttpClientExtensions.PostAsync``1(System.Net.Http.HttpClient,System.String,``0,Microsoft.HDInsight.Net.Http.Formatting.Formatting.MediaTypeFormatter,System.String,System.Threading.CancellationToken)"/>
            <typeparam name="T">The type of <paramref name="value"/>.</typeparam>
            <param name="client">The client used to make the request.</param>
            <param name="requestUri">The Uri the request is sent to.</param>
            <param name="value">The value that will be placed in the request's entity body.</param>
            <param name="formatter">The formatter used to serialize the <paramref name="value"/>.</param>
            <returns>A task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.HDInsight.Net.Http.Formatting.HttpClientExtensions.PostAsync``1(System.Net.Http.HttpClient,System.String,``0,Microsoft.HDInsight.Net.Http.Formatting.Formatting.MediaTypeFormatter,System.Threading.CancellationToken)">
            <summary>
            Sends a POST request as an asynchronous operation to the specified Uri with <paramref name="value"/>
            serialized using the given <paramref name="formatter"/>.
            </summary>
            <seealso cref="M:Microsoft.HDInsight.Net.Http.Formatting.HttpClientExtensions.PostAsync``1(System.Net.Http.HttpClient,System.String,``0,Microsoft.HDInsight.Net.Http.Formatting.Formatting.MediaTypeFormatter,System.String,System.Threading.CancellationToken)"/>
            <typeparam name="T">The type of <paramref name="value"/>.</typeparam>
            <param name="client">The client used to make the request.</param>
            <param name="requestUri">The Uri the request is sent to.</param>
            <param name="value">The value that will be placed in the request's entity body.</param>
            <param name="formatter">The formatter used to serialize the <paramref name="value"/>.</param>
            <param name="cancellationToken">The token to monitor for cancellation requests.</param>
            <returns>A task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.HDInsight.Net.Http.Formatting.HttpClientExtensions.PostAsync``1(System.Net.Http.HttpClient,System.String,``0,Microsoft.HDInsight.Net.Http.Formatting.Formatting.MediaTypeFormatter,System.String)">
            <summary>
            Sends a POST request as an asynchronous operation to the specified Uri with <paramref name="value"/>
            serialized using the given <paramref name="formatter"/>.
            </summary>
            <seealso cref="M:Microsoft.HDInsight.Net.Http.Formatting.HttpClientExtensions.PostAsync``1(System.Net.Http.HttpClient,System.String,``0,Microsoft.HDInsight.Net.Http.Formatting.Formatting.MediaTypeFormatter,System.String,System.Threading.CancellationToken)"/>
            <typeparam name="T">The type of <paramref name="value"/>.</typeparam>
            <param name="client">The client used to make the request.</param>
            <param name="requestUri">The Uri the request is sent to.</param>
            <param name="value">The value that will be placed in the request's entity body.</param>
            <param name="formatter">The formatter used to serialize the <paramref name="value"/>.</param>
            <param name="mediaType">The authoritative value of the request's content's Content-Type header. Can be <c>null</c> in which case the
            <paramref name="formatter">formatter's</paramref> default content type will be used.</param>
            <returns>A task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.HDInsight.Net.Http.Formatting.HttpClientExtensions.PostAsync``1(System.Net.Http.HttpClient,System.String,``0,Microsoft.HDInsight.Net.Http.Formatting.Formatting.MediaTypeFormatter,System.String,System.Threading.CancellationToken)">
            <summary>
            Sends a POST request as an asynchronous operation to the specified Uri with <paramref name="value"/>
            serialized using the given <paramref name="formatter"/>.
            </summary>
            <typeparam name="T">The type of <paramref name="value"/>.</typeparam>
            <param name="client">The client used to make the request.</param>
            <param name="requestUri">The Uri the request is sent to.</param>
            <param name="value">The value that will be placed in the request's entity body.</param>
            <param name="formatter">The formatter used to serialize the <paramref name="value"/>.</param>
            <param name="mediaType">The authoritative value of the request's content's Content-Type header. Can be <c>null</c> in which case the
            <paramref name="formatter">formatter's</paramref> default content type will be used.</param>
            <param name="cancellationToken">The token to monitor for cancellation requests.</param>
            <returns>A task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.HDInsight.Net.Http.Formatting.HttpClientExtensions.PostAsync``1(System.Net.Http.HttpClient,System.String,``0,Microsoft.HDInsight.Net.Http.Formatting.Formatting.MediaTypeFormatter,System.Net.Http.Headers.MediaTypeHeaderValue,System.Threading.CancellationToken)">
            <summary>
            Sends a POST request as an asynchronous operation to the specified Uri with <paramref name="value"/>
            serialized using the given <paramref name="formatter"/>.
            </summary>
            <typeparam name="T">The type of <paramref name="value"/>.</typeparam>
            <param name="client">The client used to make the request.</param>
            <param name="requestUri">The Uri the request is sent to.</param>
            <param name="value">The value that will be placed in the request's entity body.</param>
            <param name="formatter">The formatter used to serialize the <paramref name="value"/>.</param>
            <param name="mediaType">The authoritative value of the request's content's Content-Type header. Can be <c>null</c> in which case the
            <paramref name="formatter">formatter's</paramref> default content type will be used.</param>
            <param name="cancellationToken">The token to monitor for cancellation requests.</param>
            <returns>A task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.HDInsight.Net.Http.Formatting.HttpClientExtensions.PostAsync``1(System.Net.Http.HttpClient,System.Uri,``0,Microsoft.HDInsight.Net.Http.Formatting.Formatting.MediaTypeFormatter)">
            <summary>
            Sends a POST request as an asynchronous operation to the specified Uri with <paramref name="value"/>
            serialized using the given <paramref name="formatter"/>.
            </summary>
            <seealso cref="M:Microsoft.HDInsight.Net.Http.Formatting.HttpClientExtensions.PostAsync``1(System.Net.Http.HttpClient,System.String,``0,Microsoft.HDInsight.Net.Http.Formatting.Formatting.MediaTypeFormatter,System.String,System.Threading.CancellationToken)"/>
            <typeparam name="T">The type of <paramref name="value"/>.</typeparam>
            <param name="client">The client used to make the request.</param>
            <param name="requestUri">The Uri the request is sent to.</param>
            <param name="value">The value that will be placed in the request's entity body.</param>
            <param name="formatter">The formatter used to serialize the <paramref name="value"/>.</param>
            <returns>A task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.HDInsight.Net.Http.Formatting.HttpClientExtensions.PostAsync``1(System.Net.Http.HttpClient,System.Uri,``0,Microsoft.HDInsight.Net.Http.Formatting.Formatting.MediaTypeFormatter,System.Threading.CancellationToken)">
            <summary>
            Sends a POST request as an asynchronous operation to the specified Uri with <paramref name="value"/>
            serialized using the given <paramref name="formatter"/>.
            </summary>
            <seealso cref="M:Microsoft.HDInsight.Net.Http.Formatting.HttpClientExtensions.PostAsync``1(System.Net.Http.HttpClient,System.String,``0,Microsoft.HDInsight.Net.Http.Formatting.Formatting.MediaTypeFormatter,System.String,System.Threading.CancellationToken)"/>
            <typeparam name="T">The type of <paramref name="value"/>.</typeparam>
            <param name="client">The client used to make the request.</param>
            <param name="requestUri">The Uri the request is sent to.</param>
            <param name="value">The value that will be placed in the request's entity body.</param>
            <param name="formatter">The formatter used to serialize the <paramref name="value"/>.</param>
            <param name="cancellationToken">The token to monitor for cancellation requests.</param>
            <returns>A task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.HDInsight.Net.Http.Formatting.HttpClientExtensions.PostAsync``1(System.Net.Http.HttpClient,System.Uri,``0,Microsoft.HDInsight.Net.Http.Formatting.Formatting.MediaTypeFormatter,System.String)">
            <summary>
            Sends a POST request as an asynchronous operation to the specified Uri with <paramref name="value"/>
            serialized using the given <paramref name="formatter"/>.
            </summary>
            <seealso cref="M:Microsoft.HDInsight.Net.Http.Formatting.HttpClientExtensions.PostAsync``1(System.Net.Http.HttpClient,System.String,``0,Microsoft.HDInsight.Net.Http.Formatting.Formatting.MediaTypeFormatter,System.String,System.Threading.CancellationToken)"/>
            <typeparam name="T">The type of <paramref name="value"/>.</typeparam>
            <param name="client">The client used to make the request.</param>
            <param name="requestUri">The Uri the request is sent to.</param>
            <param name="value">The value that will be placed in the request's entity body.</param>
            <param name="formatter">The formatter used to serialize the <paramref name="value"/>.</param>
            <param name="mediaType">The authoritative value of the request's content's Content-Type header. Can be <c>null</c> in which case the
            <paramref name="formatter">formatter's</paramref> default content type will be used.</param>
            <returns>A task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.HDInsight.Net.Http.Formatting.HttpClientExtensions.PostAsync``1(System.Net.Http.HttpClient,System.Uri,``0,Microsoft.HDInsight.Net.Http.Formatting.Formatting.MediaTypeFormatter,System.String,System.Threading.CancellationToken)">
            <summary>
            Sends a POST request as an asynchronous operation to the specified Uri with <paramref name="value"/>
            serialized using the given <paramref name="formatter"/>.
            </summary>
            <typeparam name="T">The type of <paramref name="value"/>.</typeparam>
            <param name="client">The client used to make the request.</param>
            <param name="requestUri">The Uri the request is sent to.</param>
            <param name="value">The value that will be placed in the request's entity body.</param>
            <param name="formatter">The formatter used to serialize the <paramref name="value"/>.</param>
            <param name="mediaType">The authoritative value of the request's content's Content-Type header. Can be <c>null</c> in which case the
            <paramref name="formatter">formatter's</paramref> default content type will be used.</param>
            <param name="cancellationToken">The token to monitor for cancellation requests.</param>
            <returns>A task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.HDInsight.Net.Http.Formatting.HttpClientExtensions.PostAsync``1(System.Net.Http.HttpClient,System.Uri,``0,Microsoft.HDInsight.Net.Http.Formatting.Formatting.MediaTypeFormatter,System.Net.Http.Headers.MediaTypeHeaderValue,System.Threading.CancellationToken)">
            <summary>
            Sends a POST request as an asynchronous operation to the specified Uri with <paramref name="value"/>
            serialized using the given <paramref name="formatter"/>.
            </summary>
            <typeparam name="T">The type of <paramref name="value"/>.</typeparam>
            <param name="client">The client used to make the request.</param>
            <param name="requestUri">The Uri the request is sent to.</param>
            <param name="value">The value that will be placed in the request's entity body.</param>
            <param name="formatter">The formatter used to serialize the <paramref name="value"/>.</param>
            <param name="mediaType">The authoritative value of the request's content's Content-Type header. Can be <c>null</c> in which case the
            <paramref name="formatter">formatter's</paramref> default content type will be used.</param>
            <param name="cancellationToken">The token to monitor for cancellation requests.</param>
            <returns>A task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.HDInsight.Net.Http.Formatting.HttpClientExtensions.PutAsJsonAsync``1(System.Net.Http.HttpClient,System.String,``0)">
            <summary>
            Sends a PUT request as an asynchronous operation to the specified Uri with the given <paramref name="value"/> serialized
            as JSON.
            </summary>
            <remarks>
            This method uses a default instance of <see cref="T:Microsoft.HDInsight.Net.Http.Formatting.Formatting.JsonMediaTypeFormatter"/>.
            </remarks>
            <typeparam name="T">The type of <paramref name="value"/>.</typeparam>
            <param name="client">The client used to make the request.</param>
            <param name="requestUri">The Uri the request is sent to.</param>
            <param name="value">The value that will be placed in the request's entity body.</param>
            <returns>A task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.HDInsight.Net.Http.Formatting.HttpClientExtensions.PutAsJsonAsync``1(System.Net.Http.HttpClient,System.String,``0,System.Threading.CancellationToken)">
            <summary>
            Sends a PUT request as an asynchronous operation to the specified Uri with the given <paramref name="value"/> serialized
            as JSON.
            </summary>
            <remarks>
            This method uses a default instance of <see cref="T:Microsoft.HDInsight.Net.Http.Formatting.Formatting.JsonMediaTypeFormatter"/>.
            </remarks>
            <typeparam name="T">The type of <paramref name="value"/>.</typeparam>
            <param name="client">The client used to make the request.</param>
            <param name="requestUri">The Uri the request is sent to.</param>
            <param name="value">The value that will be placed in the request's entity body.</param>
            <param name="cancellationToken">The token to monitor for cancellation requests.</param>
            <returns>A task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.HDInsight.Net.Http.Formatting.HttpClientExtensions.PutAsJsonAsync``1(System.Net.Http.HttpClient,System.Uri,``0)">
            <summary>
            Sends a PUT request as an asynchronous operation to the specified Uri with the given <paramref name="value"/> serialized
            as JSON.
            </summary>
            <remarks>
            This method uses a default instance of <see cref="T:Microsoft.HDInsight.Net.Http.Formatting.Formatting.JsonMediaTypeFormatter"/>.
            </remarks>
            <typeparam name="T">The type of <paramref name="value"/>.</typeparam>
            <param name="client">The client used to make the request.</param>
            <param name="requestUri">The Uri the request is sent to.</param>
            <param name="value">The value that will be placed in the request's entity body.</param>
            <returns>A task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.HDInsight.Net.Http.Formatting.HttpClientExtensions.PutAsJsonAsync``1(System.Net.Http.HttpClient,System.Uri,``0,System.Threading.CancellationToken)">
            <summary>
            Sends a PUT request as an asynchronous operation to the specified Uri with the given <paramref name="value"/> serialized
            as JSON.
            </summary>
            <remarks>
            This method uses a default instance of <see cref="T:Microsoft.HDInsight.Net.Http.Formatting.Formatting.JsonMediaTypeFormatter"/>.
            </remarks>
            <typeparam name="T">The type of <paramref name="value"/>.</typeparam>
            <param name="client">The client used to make the request.</param>
            <param name="requestUri">The Uri the request is sent to.</param>
            <param name="value">The value that will be placed in the request's entity body.</param>
            <param name="cancellationToken">The token to monitor for cancellation requests.</param>
            <returns>A task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.HDInsight.Net.Http.Formatting.HttpClientExtensions.PutAsXmlAsync``1(System.Net.Http.HttpClient,System.String,``0)">
            <summary>
            Sends a PUT request as an asynchronous operation to the specified Uri with the given <paramref name="value"/> serialized
            as XML.
            </summary>
            <remarks>
            This method uses a default instance of <see cref="T:Microsoft.HDInsight.Net.Http.Formatting.Formatting.XmlMediaTypeFormatter"/>.
            </remarks>
            <typeparam name="T">The type of <paramref name="value"/>.</typeparam>
            <param name="client">The client used to make the request.</param>
            <param name="requestUri">The Uri the request is sent to.</param>
            <param name="value">The value that will be placed in the request's entity body.</param>
            <returns>A task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.HDInsight.Net.Http.Formatting.HttpClientExtensions.PutAsXmlAsync``1(System.Net.Http.HttpClient,System.String,``0,System.Threading.CancellationToken)">
            <summary>
            Sends a PUT request as an asynchronous operation to the specified Uri with the given <paramref name="value"/> serialized
            as XML.
            </summary>
            <remarks>
            This method uses the default instance of <see cref="T:Microsoft.HDInsight.Net.Http.Formatting.Formatting.XmlMediaTypeFormatter"/>.
            </remarks>
            <typeparam name="T">The type of <paramref name="value"/>.</typeparam>
            <param name="client">The client used to make the request.</param>
            <param name="requestUri">The Uri the request is sent to.</param>
            <param name="value">The value that will be placed in the request's entity body.</param>
            <param name="cancellationToken">The token to monitor for cancellation requests.</param>
            <returns>A task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.HDInsight.Net.Http.Formatting.HttpClientExtensions.PutAsXmlAsync``1(System.Net.Http.HttpClient,System.Uri,``0)">
            <summary>
            Sends a PUT request as an asynchronous operation to the specified Uri with the given <paramref name="value"/> serialized
            as XML.
            </summary>
            <remarks>
            This method uses the default instance of <see cref="T:Microsoft.HDInsight.Net.Http.Formatting.Formatting.XmlMediaTypeFormatter"/>.
            </remarks>
            <typeparam name="T">The type of <paramref name="value"/>.</typeparam>
            <param name="client">The client used to make the request.</param>
            <param name="requestUri">The Uri the request is sent to.</param>
            <param name="value">The value that will be placed in the request's entity body.</param>
            <returns>A task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.HDInsight.Net.Http.Formatting.HttpClientExtensions.PutAsXmlAsync``1(System.Net.Http.HttpClient,System.Uri,``0,System.Threading.CancellationToken)">
            <summary>
            Sends a PUT request as an asynchronous operation to the specified Uri with the given <paramref name="value"/> serialized
            as XML.
            </summary>
            <remarks>
            This method uses the default instance of <see cref="T:Microsoft.HDInsight.Net.Http.Formatting.Formatting.XmlMediaTypeFormatter"/>.
            </remarks>
            <typeparam name="T">The type of <paramref name="value"/>.</typeparam>
            <param name="client">The client used to make the request.</param>
            <param name="requestUri">The Uri the request is sent to.</param>
            <param name="value">The value that will be placed in the request's entity body.</param>
            <param name="cancellationToken">The token to monitor for cancellation requests.</param>
            <returns>A task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.HDInsight.Net.Http.Formatting.HttpClientExtensions.PutAsync``1(System.Net.Http.HttpClient,System.String,``0,Microsoft.HDInsight.Net.Http.Formatting.Formatting.MediaTypeFormatter)">
            <summary>
            Sends a PUT request as an asynchronous operation to the specified Uri with <paramref name="value"/>
            serialized using the given <paramref name="formatter"/>.
            </summary>
            <seealso cref="M:Microsoft.HDInsight.Net.Http.Formatting.HttpClientExtensions.PutAsync``1(System.Net.Http.HttpClient,System.String,``0,Microsoft.HDInsight.Net.Http.Formatting.Formatting.MediaTypeFormatter,System.String,System.Threading.CancellationToken)"/>
            <typeparam name="T">The type of <paramref name="value"/>.</typeparam>
            <param name="client">The client used to make the request.</param>
            <param name="requestUri">The Uri the request is sent to.</param>
            <param name="value">The value that will be placed in the request's entity body.</param>
            <param name="formatter">The formatter used to serialize the <paramref name="value"/>.</param>
            <returns>A task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.HDInsight.Net.Http.Formatting.HttpClientExtensions.PutAsync``1(System.Net.Http.HttpClient,System.String,``0,Microsoft.HDInsight.Net.Http.Formatting.Formatting.MediaTypeFormatter,System.Threading.CancellationToken)">
            <summary>
            Sends a PUT request as an asynchronous operation to the specified Uri with <paramref name="value"/>
            serialized using the given <paramref name="formatter"/>.
            </summary>
            <seealso cref="M:Microsoft.HDInsight.Net.Http.Formatting.HttpClientExtensions.PutAsync``1(System.Net.Http.HttpClient,System.String,``0,Microsoft.HDInsight.Net.Http.Formatting.Formatting.MediaTypeFormatter,System.String,System.Threading.CancellationToken)"/>
            <typeparam name="T">The type of <paramref name="value"/>.</typeparam>
            <param name="client">The client used to make the request.</param>
            <param name="requestUri">The Uri the request is sent to.</param>
            <param name="value">The value that will be placed in the request's entity body.</param>
            <param name="formatter">The formatter used to serialize the <paramref name="value"/>.</param>
            <param name="cancellationToken">The token to monitor for cancellation requests.</param>
            <returns>A task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.HDInsight.Net.Http.Formatting.HttpClientExtensions.PutAsync``1(System.Net.Http.HttpClient,System.String,``0,Microsoft.HDInsight.Net.Http.Formatting.Formatting.MediaTypeFormatter,System.String)">
            <summary>
            Sends a PUT request as an asynchronous operation to the specified Uri with <paramref name="value"/>
            serialized using the given <paramref name="formatter"/>.
            </summary>
            <seealso cref="M:Microsoft.HDInsight.Net.Http.Formatting.HttpClientExtensions.PutAsync``1(System.Net.Http.HttpClient,System.String,``0,Microsoft.HDInsight.Net.Http.Formatting.Formatting.MediaTypeFormatter,System.String,System.Threading.CancellationToken)"/>
            <typeparam name="T">The type of <paramref name="value"/>.</typeparam>
            <param name="client">The client used to make the request.</param>
            <param name="requestUri">The Uri the request is sent to.</param>
            <param name="value">The value that will be placed in the request's entity body.</param>
            <param name="formatter">The formatter used to serialize the <paramref name="value"/>.</param>
            <param name="mediaType">The authoritative value of the request's content's Content-Type header. Can be <c>null</c> in which case the
            <paramref name="formatter">formatter's</paramref> default content type will be used.</param>
            <returns>A task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.HDInsight.Net.Http.Formatting.HttpClientExtensions.PutAsync``1(System.Net.Http.HttpClient,System.String,``0,Microsoft.HDInsight.Net.Http.Formatting.Formatting.MediaTypeFormatter,System.String,System.Threading.CancellationToken)">
            <summary>
            Sends a PUT request as an asynchronous operation to the specified Uri with <paramref name="value"/>
            serialized using the given <paramref name="formatter"/>.
            </summary>
            <typeparam name="T">The type of <paramref name="value"/>.</typeparam>
            <param name="client">The client used to make the request.</param>
            <param name="requestUri">The Uri the request is sent to.</param>
            <param name="value">The value that will be placed in the request's entity body.</param>
            <param name="formatter">The formatter used to serialize the <paramref name="value"/>.</param>
            <param name="mediaType">The authoritative value of the request's content's Content-Type header. Can be <c>null</c> in which case the
            <paramref name="formatter">formatter's</paramref> default content type will be used.</param>
            <param name="cancellationToken">The token to monitor for cancellation requests.</param>
            <returns>A task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.HDInsight.Net.Http.Formatting.HttpClientExtensions.PutAsync``1(System.Net.Http.HttpClient,System.String,``0,Microsoft.HDInsight.Net.Http.Formatting.Formatting.MediaTypeFormatter,System.Net.Http.Headers.MediaTypeHeaderValue,System.Threading.CancellationToken)">
            <summary>
            Sends a PUT request as an asynchronous operation to the specified Uri with <paramref name="value"/>
            serialized using the given <paramref name="formatter"/>.
            </summary>
            <typeparam name="T">The type of <paramref name="value"/>.</typeparam>
            <param name="client">The client used to make the request.</param>
            <param name="requestUri">The Uri the request is sent to.</param>
            <param name="value">The value that will be placed in the request's entity body.</param>
            <param name="formatter">The formatter used to serialize the <paramref name="value"/>.</param>
            <param name="mediaType">The authoritative value of the request's content's Content-Type header. Can be <c>null</c> in which case the
            <paramref name="formatter">formatter's</paramref> default content type will be used.</param>
            <param name="cancellationToken">The token to monitor for cancellation requests.</param>
            <returns>A task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.HDInsight.Net.Http.Formatting.HttpClientExtensions.PutAsync``1(System.Net.Http.HttpClient,System.Uri,``0,Microsoft.HDInsight.Net.Http.Formatting.Formatting.MediaTypeFormatter)">
            <summary>
            Sends a PUT request as an asynchronous operation to the specified Uri with <paramref name="value"/>
            serialized using the given <paramref name="formatter"/>.
            </summary>
            <seealso cref="M:Microsoft.HDInsight.Net.Http.Formatting.HttpClientExtensions.PutAsync``1(System.Net.Http.HttpClient,System.String,``0,Microsoft.HDInsight.Net.Http.Formatting.Formatting.MediaTypeFormatter,System.String,System.Threading.CancellationToken)"/>
            <typeparam name="T">The type of <paramref name="value"/>.</typeparam>
            <param name="client">The client used to make the request.</param>
            <param name="requestUri">The Uri the request is sent to.</param>
            <param name="value">The value that will be placed in the request's entity body.</param>
            <param name="formatter">The formatter used to serialize the <paramref name="value"/>.</param>
            <returns>A task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.HDInsight.Net.Http.Formatting.HttpClientExtensions.PutAsync``1(System.Net.Http.HttpClient,System.Uri,``0,Microsoft.HDInsight.Net.Http.Formatting.Formatting.MediaTypeFormatter,System.Threading.CancellationToken)">
            <summary>
            Sends a PUT request as an asynchronous operation to the specified Uri with <paramref name="value"/>
            serialized using the given <paramref name="formatter"/>.
            </summary>
            <seealso cref="M:Microsoft.HDInsight.Net.Http.Formatting.HttpClientExtensions.PutAsync``1(System.Net.Http.HttpClient,System.String,``0,Microsoft.HDInsight.Net.Http.Formatting.Formatting.MediaTypeFormatter,System.String,System.Threading.CancellationToken)"/>
            <typeparam name="T">The type of <paramref name="value"/>.</typeparam>
            <param name="client">The client used to make the request.</param>
            <param name="requestUri">The Uri the request is sent to.</param>
            <param name="value">The value that will be placed in the request's entity body.</param>
            <param name="formatter">The formatter used to serialize the <paramref name="value"/>.</param>
            <param name="cancellationToken">The token to monitor for cancellation requests.</param>
            <returns>A task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.HDInsight.Net.Http.Formatting.HttpClientExtensions.PutAsync``1(System.Net.Http.HttpClient,System.Uri,``0,Microsoft.HDInsight.Net.Http.Formatting.Formatting.MediaTypeFormatter,System.String)">
            <summary>
            Sends a PUT request as an asynchronous operation to the specified Uri with <paramref name="value"/>
            serialized using the given <paramref name="formatter"/>.
            </summary>
            <seealso cref="M:Microsoft.HDInsight.Net.Http.Formatting.HttpClientExtensions.PutAsync``1(System.Net.Http.HttpClient,System.String,``0,Microsoft.HDInsight.Net.Http.Formatting.Formatting.MediaTypeFormatter,System.String,System.Threading.CancellationToken)"/>
            <typeparam name="T">The type of <paramref name="value"/>.</typeparam>
            <param name="client">The client used to make the request.</param>
            <param name="requestUri">The Uri the request is sent to.</param>
            <param name="value">The value that will be placed in the request's entity body.</param>
            <param name="formatter">The formatter used to serialize the <paramref name="value"/>.</param>
            <param name="mediaType">The authoritative value of the request's content's Content-Type header. Can be <c>null</c> in which case the
            <paramref name="formatter">formatter's</paramref> default content type will be used.</param>
            <returns>A task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.HDInsight.Net.Http.Formatting.HttpClientExtensions.PutAsync``1(System.Net.Http.HttpClient,System.Uri,``0,Microsoft.HDInsight.Net.Http.Formatting.Formatting.MediaTypeFormatter,System.String,System.Threading.CancellationToken)">
            <summary>
            Sends a PUT request as an asynchronous operation to the specified Uri with <paramref name="value"/>
            serialized using the given <paramref name="formatter"/>.
            </summary>
            <typeparam name="T">The type of <paramref name="value"/>.</typeparam>
            <param name="client">The client used to make the request.</param>
            <param name="requestUri">The Uri the request is sent to.</param>
            <param name="value">The value that will be placed in the request's entity body.</param>
            <param name="formatter">The formatter used to serialize the <paramref name="value"/>.</param>
            <param name="mediaType">The authoritative value of the request's content's Content-Type header. Can be <c>null</c> in which case the
            <paramref name="formatter">formatter's</paramref> default content type will be used.</param>
            <param name="cancellationToken">The token to monitor for cancellation requests.</param>
            <returns>A task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.HDInsight.Net.Http.Formatting.HttpClientExtensions.PutAsync``1(System.Net.Http.HttpClient,System.Uri,``0,Microsoft.HDInsight.Net.Http.Formatting.Formatting.MediaTypeFormatter,System.Net.Http.Headers.MediaTypeHeaderValue,System.Threading.CancellationToken)">
            <summary>
            Sends a PUT request as an asynchronous operation to the specified Uri with <paramref name="value"/>
            serialized using the given <paramref name="formatter"/>.
            </summary>
            <typeparam name="T">The type of <paramref name="value"/>.</typeparam>
            <param name="client">The client used to make the request.</param>
            <param name="requestUri">The Uri the request is sent to.</param>
            <param name="value">The value that will be placed in the request's entity body.</param>
            <param name="formatter">The formatter used to serialize the <paramref name="value"/>.</param>
            <param name="mediaType">The authoritative value of the request's content's Content-Type header. Can be <c>null</c> in which case the
            <paramref name="formatter">formatter's</paramref> default content type will be used.</param>
            <param name="cancellationToken">The token to monitor for cancellation requests.</param>
            <returns>A task object representing the asynchronous operation.</returns>
        </member>
        <member name="T:Microsoft.HDInsight.Net.Http.Formatting.HttpRequestMessageExtensions">
            <summary>
            Provides extension methods for the <see cref="T:System.Net.Http.HttpRequestMessage"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.HDInsight.Net.Http.Formatting.HttpRequestMessageExtensions.CreateResponse(System.Net.Http.HttpRequestMessage,System.Net.HttpStatusCode)">
            <summary>
            Creates an <see cref="T:System.Net.Http.HttpResponseMessage"/> wired up to the associated <see cref="T:System.Net.Http.HttpRequestMessage"/>.
            </summary>
            <param name="request">The HTTP request.</param>
            <param name="statusCode">The HTTP status code.</param>
            <returns>An initialized <see cref="T:System.Net.Http.HttpResponseMessage"/>.</returns>
        </member>
        <member name="M:Microsoft.HDInsight.Net.Http.Formatting.HttpRequestMessageExtensions.CreateResponse(System.Net.Http.HttpRequestMessage)">
            <summary>
            Creates an <see cref="T:System.Net.Http.HttpResponseMessage"/> wired up to the associated <see cref="T:System.Net.Http.HttpRequestMessage"/>.
            </summary>
            <param name="request">The HTTP request.</param>
            <returns>An initialized <see cref="T:System.Net.Http.HttpResponseMessage"/>.</returns>
        </member>
        <member name="T:Microsoft.HDInsight.Net.Http.Formatting.Internal.HttpValueCollection">
            <summary>
             NameValueCollection to represent form data and to generate form data output.
            </summary>
        </member>
        <member name="M:Microsoft.HDInsight.Net.Http.Formatting.Internal.HttpValueCollection.Add(System.String,System.String)">
            <summary>
            Adds a name-value pair to the collection.
            </summary>
            <param name="name">The name to be added as a case insensitive string.</param>
            <param name="value">The value to be added.</param>
        </member>
        <member name="M:Microsoft.HDInsight.Net.Http.Formatting.Internal.HttpValueCollection.ToString">
            <summary>
            Converts the content of this instance to its equivalent string representation.
            </summary>
            <returns>The string representation of the value of this instance, multiple values with a single key are comma separated.</returns>
        </member>
        <member name="T:Microsoft.HDInsight.Net.Http.Formatting.Internal.NonClosingDelegatingStream">
            <summary>
            Stream that doesn't close the inner stream when closed. This is to work around a limitation
            in the <see cref="T:System.Xml.XmlDictionaryReader"/> insisting of closing the inner stream.
            The regular <see cref="T:System.Xml.XmlReader"/> does allow for not closing the inner stream but that 
            doesn't have the quota that we need for security reasons. Implementations of 
            <see cref="T:Microsoft.HDInsight.Net.Http.Formatting.Formatting.MediaTypeFormatter"/>
            should not close the input stream when reading or writing so hence this workaround.
            </summary>
        </member>
        <member name="T:Microsoft.HDInsight.Net.Http.Formatting.FormattingUtilities">
            <summary>
            Provides various internal utility functions
            </summary>
        </member>
        <member name="F:Microsoft.HDInsight.Net.Http.Formatting.FormattingUtilities.Match">
            <summary>
            Quality factor to indicate a perfect match.
            </summary>
        </member>
        <member name="F:Microsoft.HDInsight.Net.Http.Formatting.FormattingUtilities.NoMatch">
            <summary>
            Quality factor to indicate no match.
            </summary>
        </member>
        <member name="F:Microsoft.HDInsight.Net.Http.Formatting.FormattingUtilities.DefaultMaxDepth">
            <summary>
            The default max depth for our formatter is 256
            </summary>
        </member>
        <member name="F:Microsoft.HDInsight.Net.Http.Formatting.FormattingUtilities.DefaultMinDepth">
            <summary>
            The default min depth for our formatter is 1
            </summary>
        </member>
        <member name="F:Microsoft.HDInsight.Net.Http.Formatting.FormattingUtilities.HttpRequestedWithHeader">
            <summary>
            HTTP X-Requested-With header field name
            </summary>
        </member>
        <member name="F:Microsoft.HDInsight.Net.Http.Formatting.FormattingUtilities.HttpRequestedWithHeaderValue">
            <summary>
            HTTP X-Requested-With header field value
            </summary>
        </member>
        <member name="F:Microsoft.HDInsight.Net.Http.Formatting.FormattingUtilities.HttpHostHeader">
            <summary>
            HTTP Host header field name
            </summary>
        </member>
        <member name="F:Microsoft.HDInsight.Net.Http.Formatting.FormattingUtilities.HttpVersionToken">
            <summary>
            HTTP Version token
            </summary>
        </member>
        <member name="F:Microsoft.HDInsight.Net.Http.Formatting.FormattingUtilities.HttpRequestMessageType">
            <summary>
            A <see cref="T:System.Type"/> representing <see cref="T:System.Net.Http.HttpRequestMessage"/>.
            </summary>
        </member>
        <member name="F:Microsoft.HDInsight.Net.Http.Formatting.FormattingUtilities.HttpResponseMessageType">
            <summary>
            A <see cref="T:System.Type"/> representing <see cref="T:System.Net.Http.HttpResponseMessage"/>.
            </summary>
        </member>
        <member name="F:Microsoft.HDInsight.Net.Http.Formatting.FormattingUtilities.HttpContentType">
            <summary>
            A <see cref="T:System.Type"/> representing <see cref="T:System.Net.Http.HttpContent"/>.
            </summary>
        </member>
        <member name="F:Microsoft.HDInsight.Net.Http.Formatting.FormattingUtilities.DelegatingEnumerableGenericType">
            <summary>
            A <see cref="T:System.Type"/> representing <see cref="T:Microsoft.HDInsight.Net.Http.Formatting.Formatting.DelegatingEnumerable`1"/>.
            </summary>
        </member>
        <member name="F:Microsoft.HDInsight.Net.Http.Formatting.FormattingUtilities.EnumerableInterfaceGenericType">
            <summary>
            A <see cref="T:System.Type"/> representing <see cref="T:System.Collections.Generic.IEnumerable`1"/>.
            </summary>
        </member>
        <member name="F:Microsoft.HDInsight.Net.Http.Formatting.FormattingUtilities.QueryableInterfaceGenericType">
            <summary>
            A <see cref="T:System.Type"/> representing <see cref="T:System.Linq.IQueryable`1"/>.
            </summary>
        </member>
        <member name="F:Microsoft.HDInsight.Net.Http.Formatting.FormattingUtilities.XsdDataContractExporter">
            <summary>
            An instance of <see cref="F:Microsoft.HDInsight.Net.Http.Formatting.FormattingUtilities.XsdDataContractExporter"/>.
            </summary>
        </member>
        <member name="M:Microsoft.HDInsight.Net.Http.Formatting.FormattingUtilities.IsJTokenType(System.Type)">
            <summary>
            Determines whether <paramref name="type"/> is a <see cref="T:Newtonsoft.Json.Linq.JToken"/> type.
            </summary>
            <param name="type">The type to test.</param>
            <returns>
              <c>true</c> if <paramref name="type"/> is a <see cref="T:Newtonsoft.Json.Linq.JToken"/> type; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Microsoft.HDInsight.Net.Http.Formatting.FormattingUtilities.CreateEmptyContentHeaders">
            <summary>
            Creates an empty <see cref="T:System.Net.Http.Headers.HttpContentHeaders"/> instance. The only way is to get it from a dummy 
            <see cref="T:System.Net.Http.HttpContent"/> instance.
            </summary>
            <returns>The created instance.</returns>
        </member>
        <member name="M:Microsoft.HDInsight.Net.Http.Formatting.FormattingUtilities.CreateDefaultReaderQuotas">
            <summary>
            Create a default reader quotas with a default depth quota of 1K
            </summary>
            <returns></returns>
        </member>
        <member name="M:Microsoft.HDInsight.Net.Http.Formatting.FormattingUtilities.UnquoteToken(System.String)">
            <summary>
            Remove bounding quotes on a token if present
            </summary>
            <param name="token">Token to unquote.</param>
            <returns>Unquoted token.</returns>
        </member>
        <member name="M:Microsoft.HDInsight.Net.Http.Formatting.FormattingUtilities.TryParseInt32(System.String,System.Int32@)">
            <summary>
            Parses valid integer strings with no leading signs, whitespace or other <see cref="T:System.Globalization.NumberStyles"/>
            </summary>
            <param name="value">The value to parse</param>
            <param name="result">The result</param>
            <returns>True if value was valid; false otherwise.</returns>
        </member>
        <member name="T:Microsoft.HDInsight.Net.Http.Formatting.Formatting.JsonContractResolver">
            <summary>
            Represents the default <see cref="T:Newtonsoft.Json.Serialization.IContractResolver"/> used by <see cref="T:Microsoft.HDInsight.Net.Http.Formatting.Formatting.BaseJsonMediaTypeFormatter"/>.
            It uses the formatter's <see cref="T:Microsoft.HDInsight.Net.Http.Formatting.Formatting.IRequiredMemberSelector"/> to select required members and recognizes
            the <see cref="T:System.SerializableAttribute"/> type annotation.
            </summary>
        </member>
        <member name="M:Microsoft.HDInsight.Net.Http.Formatting.Formatting.JsonContractResolver.#ctor(Microsoft.HDInsight.Net.Http.Formatting.Formatting.MediaTypeFormatter)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.HDInsight.Net.Http.Formatting.Formatting.JsonContractResolver"/> class.
            </summary>
            <param name="formatter">The formatter to use for resolving required members.</param>
        </member>
        <member name="M:Microsoft.HDInsight.Net.Http.Formatting.Formatting.JsonContractResolver.CreateProperty(System.Reflection.MemberInfo,Newtonsoft.Json.MemberSerialization)">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.HDInsight.Net.Http.Formatting.Formatting.BufferedMediaTypeFormatter">
            <summary>
            Base class for writing a synchronous formatter on top of the asynchronous formatter infrastructure. 
            This does not guarantee non-blocking threads. The only way to guarantee that we don't block a thread on IO is
            to use the asynchronous <see cref="T:Microsoft.HDInsight.Net.Http.Formatting.Formatting.MediaTypeFormatter"/>.
            </summary>
        </member>
        <member name="M:Microsoft.HDInsight.Net.Http.Formatting.Formatting.BufferedMediaTypeFormatter.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.HDInsight.Net.Http.Formatting.Formatting.BufferedMediaTypeFormatter"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.HDInsight.Net.Http.Formatting.Formatting.BufferedMediaTypeFormatter.#ctor(Microsoft.HDInsight.Net.Http.Formatting.Formatting.BufferedMediaTypeFormatter)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.HDInsight.Net.Http.Formatting.Formatting.BufferedMediaTypeFormatter"/> class.
            </summary>
            <param name="formatter">The <see cref="T:Microsoft.HDInsight.Net.Http.Formatting.Formatting.BufferedMediaTypeFormatter"/> instance to copy settings from.</param>
        </member>
        <member name="M:Microsoft.HDInsight.Net.Http.Formatting.Formatting.BufferedMediaTypeFormatter.WriteToStream(System.Type,System.Object,System.IO.Stream,System.Net.Http.HttpContent,System.Threading.CancellationToken)">
            <summary>
            Writes synchronously to the buffered stream.
            </summary>
            <remarks>
            An implementation of this method should close <paramref name="writeStream"/> upon completion.
            </remarks>
            <param name="type">The type of the object to write.</param>
            <param name="value">The object value to write.  It may be <c>null</c>.</param>
            <param name="writeStream">The <see cref="T:System.IO.Stream"/> to which to write.</param>
            <param name="content">The <see cref="T:System.Net.Http.HttpContent"/> if available. Note that
            modifying the headers of the content will have no effect on the generated HTTP message; they should only be used to guide the writing.</param>
            <param name="cancellationToken">The token to monitor for cancellation requests.</param>
        </member>
        <member name="M:Microsoft.HDInsight.Net.Http.Formatting.Formatting.BufferedMediaTypeFormatter.WriteToStream(System.Type,System.Object,System.IO.Stream,System.Net.Http.HttpContent)">
            <summary>
            Writes synchronously to the buffered stream.
            </summary>
            <remarks>
            An implementation of this method should close <paramref name="writeStream"/> upon completion.
            </remarks>
            <param name="type">The type of the object to write.</param>
            <param name="value">The object value to write.  It may be <c>null</c>.</param>
            <param name="writeStream">The <see cref="T:System.IO.Stream"/> to which to write.</param>
            <param name="content">The <see cref="T:System.Net.Http.HttpContent"/> if available. Note that
            modifying the headers of the content will have no effect on the generated HTTP message; they should only be used to guide the writing.</param>
        </member>
        <member name="M:Microsoft.HDInsight.Net.Http.Formatting.Formatting.BufferedMediaTypeFormatter.ReadFromStream(System.Type,System.IO.Stream,System.Net.Http.HttpContent,Microsoft.HDInsight.Net.Http.Formatting.Formatting.IFormatterLogger,System.Threading.CancellationToken)">
            <summary>
            Reads synchronously from the buffered stream.
            </summary>
            <remarks>
            An implementation of this method should close <paramref name="readStream"/> upon completion.
            </remarks>
            <param name="type">The type of the object to deserialize.</param>
            <param name="readStream">The <see cref="T:System.IO.Stream"/> to read.</param>
            <param name="content">The <see cref="T:System.Net.Http.HttpContent"/> if available.</param>
            <param name="formatterLogger">The <see cref="T:Microsoft.HDInsight.Net.Http.Formatting.Formatting.IFormatterLogger"/> to log events to.</param>
            <param name="cancellationToken">The token to monitor for cancellation requests.</param>
            <returns>An object of the given type.</returns>
        </member>
        <member name="M:Microsoft.HDInsight.Net.Http.Formatting.Formatting.BufferedMediaTypeFormatter.ReadFromStream(System.Type,System.IO.Stream,System.Net.Http.HttpContent,Microsoft.HDInsight.Net.Http.Formatting.Formatting.IFormatterLogger)">
            <summary>
            Reads synchronously from the buffered stream.
            </summary>
            <remarks>
            An implementation of this method should close <paramref name="readStream"/> upon completion.
            </remarks>
            <param name="type">The type of the object to deserialize.</param>
            <param name="readStream">The <see cref="T:System.IO.Stream"/> to read.</param>
            <param name="content">The <see cref="T:System.Net.Http.HttpContent"/> if available.</param>
            <param name="formatterLogger">The <see cref="T:Microsoft.HDInsight.Net.Http.Formatting.Formatting.IFormatterLogger"/> to log events to.</param>
            <returns>An object of the given type.</returns>
        </member>
        <member name="P:Microsoft.HDInsight.Net.Http.Formatting.Formatting.BufferedMediaTypeFormatter.BufferSize">
            <summary>
            Suggested size of buffer to use with streams, in bytes. The default size is 16K.
            </summary>
        </member>
        <member name="T:Microsoft.HDInsight.Net.Http.Formatting.Formatting.DelegatingEnumerable`1">
            <summary>
            Helper class to serialize <see cref="T:System.Collections.Generic.IEnumerable`1"/> types by delegating them through a concrete implementation."/&gt;.
            </summary>
            <typeparam name="T">The interface implementing <see cref="T:System.Collections.Generic.IEnumerable`1"/> to proxy.</typeparam>
        </member>
        <member name="M:Microsoft.HDInsight.Net.Http.Formatting.Formatting.DelegatingEnumerable`1.#ctor">
            <summary>
            Initialize a DelegatingEnumerable. This constructor is necessary for <see cref="T:System.Runtime.Serialization.DataContractSerializer"/> to work.
            </summary>
        </member>
        <member name="M:Microsoft.HDInsight.Net.Http.Formatting.Formatting.DelegatingEnumerable`1.#ctor(System.Collections.Generic.IEnumerable{`0})">
            <summary>
            Initialize a DelegatingEnumerable with an <see cref="T:System.Collections.Generic.IEnumerable`1"/>. This is a helper class to proxy <see cref="T:System.Collections.Generic.IEnumerable`1"/> interfaces for <see cref="T:System.Xml.Serialization.XmlSerializer"/>.
            </summary>
            <param name="source">The <see cref="T:System.Collections.Generic.IEnumerable`1"/> instance to get the enumerator from.</param>
        </member>
        <member name="M:Microsoft.HDInsight.Net.Http.Formatting.Formatting.DelegatingEnumerable`1.GetEnumerator">
            <summary>
            Get the enumerator of the associated <see cref="T:System.Collections.Generic.IEnumerable`1"/>.
            </summary>
            <returns>The enumerator of the <see cref="T:System.Collections.Generic.IEnumerable`1"/> source.</returns>
        </member>
        <member name="M:Microsoft.HDInsight.Net.Http.Formatting.Formatting.DelegatingEnumerable`1.Add(System.Object)">
            <summary>
            This method is not implemented but is required method for serialization to work. Do not use.
            </summary>
            <param name="item">The item to add. Unused.</param>
        </member>
        <member name="M:Microsoft.HDInsight.Net.Http.Formatting.Formatting.DelegatingEnumerable`1.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Get the enumerator of the associated <see cref="T:System.Collections.Generic.IEnumerable`1"/>.
            </summary>
            <returns>The enumerator of the <see cref="T:System.Collections.Generic.IEnumerable`1"/> source.</returns>
        </member>
        <member name="T:Microsoft.HDInsight.Net.Http.Formatting.Formatting.DefaultContentNegotiator">
            <summary>
            Class that selects a <see cref="T:Microsoft.HDInsight.Net.Http.Formatting.Formatting.MediaTypeFormatter"/> for an <see cref="T:System.Net.Http.HttpRequestMessage"/>
            or <see cref="T:System.Net.Http.HttpResponseMessage"/>.
            </summary>
        </member>
        <member name="T:Microsoft.HDInsight.Net.Http.Formatting.Formatting.IContentNegotiator">
            <summary>
            Performs content negotiation. 
            This is the process of selecting a response writer (formatter) in compliance with header values in the request.
            </summary>
        </member>
        <member name="M:Microsoft.HDInsight.Net.Http.Formatting.Formatting.IContentNegotiator.Negotiate(System.Type,System.Net.Http.HttpRequestMessage,System.Collections.Generic.IEnumerable{Microsoft.HDInsight.Net.Http.Formatting.Formatting.MediaTypeFormatter})">
            <summary>
            Performs content negotiating by selecting the most appropriate <see cref="T:Microsoft.HDInsight.Net.Http.Formatting.Formatting.MediaTypeFormatter"/> out of the passed in
            <paramref name="formatters"/> for the given <paramref name="request"/> that can serialize an object of the given
            <paramref name="type"/>.
            </summary>
            <remarks>
            Implementations of this method should call <see cref="M:Microsoft.HDInsight.Net.Http.Formatting.Formatting.MediaTypeFormatter.GetPerRequestFormatterInstance(System.Type,System.Net.Http.HttpRequestMessage,System.Net.Http.Headers.MediaTypeHeaderValue)"/>
            on the selected <see cref="T:Microsoft.HDInsight.Net.Http.Formatting.Formatting.MediaTypeFormatter">formatter</see> and return the result of that method.
            </remarks>
            <param name="type">The type to be serialized.</param>
            <param name="request">Request message, which contains the header values used to perform negotiation.</param>
            <param name="formatters">The set of <see cref="T:Microsoft.HDInsight.Net.Http.Formatting.Formatting.MediaTypeFormatter"/> objects from which to choose.</param>
            <returns>The result of the negotiation containing the most appropriate <see cref="T:Microsoft.HDInsight.Net.Http.Formatting.Formatting.MediaTypeFormatter"/> instance,
            or <c>null</c> if there is no appropriate formatter.</returns>
        </member>
        <member name="M:Microsoft.HDInsight.Net.Http.Formatting.Formatting.DefaultContentNegotiator.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.HDInsight.Net.Http.Formatting.Formatting.DefaultContentNegotiator"/> with
            the given setting for <paramref name="excludeMatchOnTypeOnly"/>.
            </summary>
            <param name="excludeMatchOnTypeOnly">
            If ExcludeMatchOnTypeOnly is true then we don't match on type only which means
            that we return null if we can't match on anything in the request. This is useful
            for generating 406 (Not Acceptable) status codes.
            </param>
        </member>
        <member name="M:Microsoft.HDInsight.Net.Http.Formatting.Formatting.DefaultContentNegotiator.Negotiate(System.Type,System.Net.Http.HttpRequestMessage,System.Collections.Generic.IEnumerable{Microsoft.HDInsight.Net.Http.Formatting.Formatting.MediaTypeFormatter})">
            <summary>
            Performs content negotiating by selecting the most appropriate <see cref="T:Microsoft.HDInsight.Net.Http.Formatting.Formatting.MediaTypeFormatter"/> out of the passed in
            <paramref name="formatters"/> for the given <paramref name="request"/> that can serialize an object of the given
            <paramref name="type"/>.
            </summary>
            <param name="type">The type to be serialized.</param>
            <param name="request">The request.</param>
            <param name="formatters">The set of <see cref="T:Microsoft.HDInsight.Net.Http.Formatting.Formatting.MediaTypeFormatter"/> objects from which to choose.</param>
            <returns>The result of the negotiation containing the most appropriate <see cref="T:Microsoft.HDInsight.Net.Http.Formatting.Formatting.MediaTypeFormatter"/> instance,
            or <c>null</c> if there is no appropriate formatter.</returns>
        </member>
        <member name="M:Microsoft.HDInsight.Net.Http.Formatting.Formatting.DefaultContentNegotiator.ComputeFormatterMatches(System.Type,System.Net.Http.HttpRequestMessage,System.Collections.Generic.IEnumerable{Microsoft.HDInsight.Net.Http.Formatting.Formatting.MediaTypeFormatter})">
            <summary>
            Determine how well each formatter matches by associating a <see cref="T:Microsoft.HDInsight.Net.Http.Formatting.Formatting.MediaTypeFormatterMatchRanking"/> value
            with the formatter. Then associate the quality of the match based on q-factors and other parameters. The result of this 
            method is a collection of the matches found categorized and assigned a quality value.
            </summary>
            <param name="type">The type to be serialized.</param>
            <param name="request">The request.</param>
            <param name="formatters">The set of <see cref="T:Microsoft.HDInsight.Net.Http.Formatting.Formatting.MediaTypeFormatter"/> objects from which to choose.</param>
            <returns>A collection containing all the matches.</returns>
        </member>
        <member name="M:Microsoft.HDInsight.Net.Http.Formatting.Formatting.DefaultContentNegotiator.SelectResponseMediaTypeFormatter(System.Collections.Generic.ICollection{Microsoft.HDInsight.Net.Http.Formatting.Formatting.MediaTypeFormatterMatch})">
            <summary>
            Select the best match among the candidate matches found.
            </summary>
            <param name="matches">The collection of matches.</param>
            <returns>The <see cref="T:Microsoft.HDInsight.Net.Http.Formatting.Formatting.MediaTypeFormatterMatch"/> determined to be the best match.</returns>
        </member>
        <member name="M:Microsoft.HDInsight.Net.Http.Formatting.Formatting.DefaultContentNegotiator.SelectResponseCharacterEncoding(System.Net.Http.HttpRequestMessage,Microsoft.HDInsight.Net.Http.Formatting.Formatting.MediaTypeFormatter)">
            <summary>
            Determine the best character encoding for writing the response. First we look
            for accept-charset headers and if not found then we try to match
            any charset encoding in the request (in case of PUT, POST, etc.)
            If no encoding is found then we use the default for the formatter.
            </summary>
            <returns>The <see cref="T:System.Text.Encoding"/> determined to be the best match.</returns>
        </member>
        <member name="M:Microsoft.HDInsight.Net.Http.Formatting.Formatting.DefaultContentNegotiator.MatchMediaTypeMapping(System.Net.Http.HttpRequestMessage,Microsoft.HDInsight.Net.Http.Formatting.Formatting.MediaTypeFormatter)">
            <summary>
            Match a request against the <see cref="T:Microsoft.HDInsight.Net.Http.Formatting.Formatting.MediaTypeMapping"/>s registered with the formatter.
            </summary>
            <param name="request">The request to match.</param>
            <param name="formatter">The formatter to match against.</param>
            <returns>A <see cref="T:Microsoft.HDInsight.Net.Http.Formatting.Formatting.MediaTypeFormatterMatch"/> indicating the quality of the match or null is no match.</returns>
        </member>
        <member name="M:Microsoft.HDInsight.Net.Http.Formatting.Formatting.DefaultContentNegotiator.MatchAcceptHeader(System.Collections.Generic.IEnumerable{System.Net.Http.Headers.MediaTypeWithQualityHeaderValue},Microsoft.HDInsight.Net.Http.Formatting.Formatting.MediaTypeFormatter)">
            <summary>
            Match the request accept header field values against the formatter's registered supported media types.
            </summary>
            <param name="sortedAcceptValues">The sorted accept header values to match.</param>
            <param name="formatter">The formatter to match against.</param>
            <returns>A <see cref="T:Microsoft.HDInsight.Net.Http.Formatting.Formatting.MediaTypeFormatterMatch"/> indicating the quality of the match or null is no match.</returns>
        </member>
        <member name="M:Microsoft.HDInsight.Net.Http.Formatting.Formatting.DefaultContentNegotiator.MatchRequestMediaType(System.Net.Http.HttpRequestMessage,Microsoft.HDInsight.Net.Http.Formatting.Formatting.MediaTypeFormatter)">
            <summary>
            Match any request media type (in case there is a request entity body) against the formatter's registered
            media types.
            </summary>
            <param name="request">The request to match.</param>
            <param name="formatter">The formatter to match against.</param>
            <returns>A <see cref="T:Microsoft.HDInsight.Net.Http.Formatting.Formatting.MediaTypeFormatterMatch"/> indicating the quality of the match or null is no match.</returns>
        </member>
        <member name="M:Microsoft.HDInsight.Net.Http.Formatting.Formatting.DefaultContentNegotiator.ShouldMatchOnType(System.Collections.Generic.IEnumerable{System.Net.Http.Headers.MediaTypeWithQualityHeaderValue})">
            <summary>
            Determine whether to match on type or not. This is used to determine whether to
            generate a 406 response or use the default media type formatter in case there
            is no match against anything in the request. If ExcludeMatchOnTypeOnly is true 
            then we don't match on type unless there are no accept headers.
            </summary>
            <param name="sortedAcceptValues">The sorted accept header values to match.</param>
            <returns>True if not ExcludeMatchOnTypeOnly and accept headers with a q-factor bigger than 0.0 are present.</returns>
        </member>
        <member name="M:Microsoft.HDInsight.Net.Http.Formatting.Formatting.DefaultContentNegotiator.MatchType(System.Type,Microsoft.HDInsight.Net.Http.Formatting.Formatting.MediaTypeFormatter)">
            <summary>
            Pick the first supported media type and indicate we've matched only on type
            </summary>
            <param name="type">The type to be serialized.</param>
            <param name="formatter">The formatter we are matching against.</param>
            <returns>A <see cref="T:Microsoft.HDInsight.Net.Http.Formatting.Formatting.MediaTypeFormatterMatch"/> indicating the quality of the match or null is no match.</returns>
        </member>
        <member name="M:Microsoft.HDInsight.Net.Http.Formatting.Formatting.DefaultContentNegotiator.SortMediaTypeWithQualityHeaderValuesByQFactor(System.Collections.Generic.ICollection{System.Net.Http.Headers.MediaTypeWithQualityHeaderValue})">
            <summary>
            Sort Accept header values and related header field values with similar syntax rules 
            (if more than 1) in descending order based on q-factor.
            </summary>
            <param name="headerValues">The header values to sort.</param>
            <returns>The sorted header values.</returns>
        </member>
        <member name="M:Microsoft.HDInsight.Net.Http.Formatting.Formatting.DefaultContentNegotiator.SortStringWithQualityHeaderValuesByQFactor(System.Collections.Generic.ICollection{System.Net.Http.Headers.StringWithQualityHeaderValue})">
            <summary>
            Sort Accept-Charset, Accept-Encoding, Accept-Language and related header field values with similar syntax rules 
            (if more than 1) in descending order based on q-factor.
            </summary>
            <param name="headerValues">The header values to sort.</param>
            <returns>The sorted header values.</returns>
        </member>
        <member name="M:Microsoft.HDInsight.Net.Http.Formatting.Formatting.DefaultContentNegotiator.UpdateBestMatch(Microsoft.HDInsight.Net.Http.Formatting.Formatting.MediaTypeFormatterMatch,Microsoft.HDInsight.Net.Http.Formatting.Formatting.MediaTypeFormatterMatch)">
            <summary>
            Evaluates whether a match is better than the current match and if so returns the replacement; otherwise returns the 
            current match.
            </summary>
        </member>
        <member name="P:Microsoft.HDInsight.Net.Http.Formatting.Formatting.DefaultContentNegotiator.ExcludeMatchOnTypeOnly">
            <summary>
            If ExcludeMatchOnTypeOnly is true then we don't match on type only which means
            that we return null if we can't match on anything in the request. This is useful
            for generating 406 (Not Acceptable) status codes.
            </summary>
        </member>
        <member name="T:Microsoft.HDInsight.Net.Http.Formatting.Formatting.FormUrlEncodedMediaTypeFormatter">
            <summary>
            <see cref="T:Microsoft.HDInsight.Net.Http.Formatting.Formatting.MediaTypeFormatter"/> class for handling HTML form URL-ended data, also known as <c>application/x-www-form-urlencoded</c>. 
            </summary>
        </member>
        <member name="M:Microsoft.HDInsight.Net.Http.Formatting.Formatting.FormUrlEncodedMediaTypeFormatter.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.HDInsight.Net.Http.Formatting.Formatting.FormUrlEncodedMediaTypeFormatter"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.HDInsight.Net.Http.Formatting.Formatting.FormUrlEncodedMediaTypeFormatter.#ctor(Microsoft.HDInsight.Net.Http.Formatting.Formatting.FormUrlEncodedMediaTypeFormatter)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.HDInsight.Net.Http.Formatting.Formatting.FormUrlEncodedMediaTypeFormatter"/> class.
            </summary>
            <param name="formatter">The <see cref="T:Microsoft.HDInsight.Net.Http.Formatting.Formatting.FormUrlEncodedMediaTypeFormatter"/> instance to copy settings from.</param>
        </member>
        <member name="M:Microsoft.HDInsight.Net.Http.Formatting.Formatting.FormUrlEncodedMediaTypeFormatter.CanReadType(System.Type)">
            <summary>
            Determines whether this <see cref="T:Microsoft.HDInsight.Net.Http.Formatting.Formatting.FormUrlEncodedMediaTypeFormatter"/> can read objects
            of the specified <paramref name="type"/>.
            </summary>
            <param name="type">The type of object that will be read.</param>
            <returns><c>true</c> if objects of this <paramref name="type"/> can be read, otherwise <c>false</c>.</returns>
        </member>
        <member name="M:Microsoft.HDInsight.Net.Http.Formatting.Formatting.FormUrlEncodedMediaTypeFormatter.CanWriteType(System.Type)">
            <summary>
            Determines whether this <see cref="T:Microsoft.HDInsight.Net.Http.Formatting.Formatting.FormUrlEncodedMediaTypeFormatter"/> can write objects
            of the specified <paramref name="type"/>.
            </summary>
            <param name="type">The type of object that will be written.</param>
            <returns><c>true</c> if objects of this <paramref name="type"/> can be written, otherwise <c>false</c>.</returns>
        </member>
        <member name="M:Microsoft.HDInsight.Net.Http.Formatting.Formatting.FormUrlEncodedMediaTypeFormatter.ReadFromStreamAsync(System.Type,System.IO.Stream,System.Net.Http.HttpContent,Microsoft.HDInsight.Net.Http.Formatting.Formatting.IFormatterLogger)">
            <summary>
            Called during deserialization to read an object of the specified <paramref name="type"/>
            from the specified <paramref name="readStream"/>.
            </summary>
            <param name="type">The type of object to read.</param>
            <param name="readStream">The <see cref="T:System.IO.Stream"/> from which to read.</param>
            <param name="content">The <see cref="T:System.Net.Http.HttpContent"/> for the content being read.</param>
            <param name="formatterLogger">The <see cref="T:Microsoft.HDInsight.Net.Http.Formatting.Formatting.IFormatterLogger"/> to log events to.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> whose result will be the object instance that has been read.</returns>
        </member>
        <member name="M:Microsoft.HDInsight.Net.Http.Formatting.Formatting.FormUrlEncodedMediaTypeFormatter.ReadFormUrlEncoded(System.IO.Stream,System.Int32)">
            <summary>
            Reads all name-value pairs encoded as HTML Form URL encoded data and add them to 
            a collection as UNescaped URI strings.
            </summary>
            <param name="input">Stream to read from.</param>
            <param name="bufferSize">Size of the buffer used to read the contents.</param>
            <returns>Collection of name-value pairs.</returns>
        </member>
        <member name="P:Microsoft.HDInsight.Net.Http.Formatting.Formatting.FormUrlEncodedMediaTypeFormatter.DefaultMediaType">
            <summary>
            Gets the default media type for HTML Form URL encoded data, namely <c>application/x-www-form-urlencoded</c>.
            </summary>
            <value>
            Because <see cref="T:System.Net.Http.Headers.MediaTypeHeaderValue"/> is mutable, the value
            returned will be a new instance every time.
            </value>
        </member>
        <member name="P:Microsoft.HDInsight.Net.Http.Formatting.Formatting.FormUrlEncodedMediaTypeFormatter.MaxDepth">
            <summary>
            Gets or sets the maximum depth allowed by this formatter.
            </summary>
        </member>
        <member name="P:Microsoft.HDInsight.Net.Http.Formatting.Formatting.FormUrlEncodedMediaTypeFormatter.ReadBufferSize">
            <summary>
            Gets or sets the size of the buffer when reading the incoming stream.
            </summary>
            <value>
            The size of the read buffer.
            </value>
        </member>
        <member name="T:Microsoft.HDInsight.Net.Http.Formatting.Formatting.JsonMediaTypeFormatter">
            <summary>
            <see cref="T:Microsoft.HDInsight.Net.Http.Formatting.Formatting.MediaTypeFormatter"/> class to handle Json.
            </summary>
        </member>
        <member name="M:Microsoft.HDInsight.Net.Http.Formatting.Formatting.JsonMediaTypeFormatter.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.HDInsight.Net.Http.Formatting.Formatting.JsonMediaTypeFormatter"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.HDInsight.Net.Http.Formatting.Formatting.JsonMediaTypeFormatter.#ctor(Microsoft.HDInsight.Net.Http.Formatting.Formatting.JsonMediaTypeFormatter)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.HDInsight.Net.Http.Formatting.Formatting.JsonMediaTypeFormatter"/> class.
            </summary>
            <param name="formatter">The <see cref="T:Microsoft.HDInsight.Net.Http.Formatting.Formatting.JsonMediaTypeFormatter"/> instance to copy settings from.</param>
        </member>
        <member name="M:Microsoft.HDInsight.Net.Http.Formatting.Formatting.JsonMediaTypeFormatter.CreateJsonReader(System.Type,System.IO.Stream,System.Text.Encoding)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.HDInsight.Net.Http.Formatting.Formatting.JsonMediaTypeFormatter.CreateJsonWriter(System.Type,System.IO.Stream,System.Text.Encoding)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.HDInsight.Net.Http.Formatting.Formatting.JsonMediaTypeFormatter.CanReadType(System.Type)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.HDInsight.Net.Http.Formatting.Formatting.JsonMediaTypeFormatter.CanWriteType(System.Type)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.HDInsight.Net.Http.Formatting.Formatting.JsonMediaTypeFormatter.ReadFromStream(System.Type,System.IO.Stream,System.Text.Encoding,Microsoft.HDInsight.Net.Http.Formatting.Formatting.IFormatterLogger)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.HDInsight.Net.Http.Formatting.Formatting.JsonMediaTypeFormatter.WriteToStreamAsync(System.Type,System.Object,System.IO.Stream,System.Net.Http.HttpContent,System.Net.TransportContext,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.HDInsight.Net.Http.Formatting.Formatting.JsonMediaTypeFormatter.WriteToStream(System.Type,System.Object,System.IO.Stream,System.Text.Encoding)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.HDInsight.Net.Http.Formatting.Formatting.JsonMediaTypeFormatter.CreateDataContractSerializer(System.Type)">
            <summary>
            Called during deserialization to get the <see cref="T:System.Runtime.Serialization.Json.DataContractJsonSerializer"/>.
            </summary>
            <remarks>
            Public for delegating wrappers of this class.  Expected to be called only from
            <see cref="M:Microsoft.HDInsight.Net.Http.Formatting.Formatting.BaseJsonMediaTypeFormatter.ReadFromStreamAsync(System.Type,System.IO.Stream,System.Net.Http.HttpContent,Microsoft.HDInsight.Net.Http.Formatting.Formatting.IFormatterLogger)"/> and <see cref="M:Microsoft.HDInsight.Net.Http.Formatting.Formatting.JsonMediaTypeFormatter.WriteToStreamAsync(System.Type,System.Object,System.IO.Stream,System.Net.Http.HttpContent,System.Net.TransportContext,System.Threading.CancellationToken)"/>.
            </remarks>
            <param name="type">The type of object that will be serialized or deserialized.</param>
            <returns>The <see cref="T:System.Runtime.Serialization.Json.DataContractJsonSerializer"/> used to serialize the object.</returns>
        </member>
        <member name="P:Microsoft.HDInsight.Net.Http.Formatting.Formatting.JsonMediaTypeFormatter.DefaultMediaType">
            <summary>
            Gets the default media type for Json, namely "application/json".
            </summary>
            <remarks>
            The default media type does not have any <c>charset</c> parameter as
            the <see cref="T:System.Text.Encoding"/> can be configured on a per <see cref="T:Microsoft.HDInsight.Net.Http.Formatting.Formatting.JsonMediaTypeFormatter"/>
            instance basis.
            </remarks>
            <value>
            Because <see cref="T:System.Net.Http.Headers.MediaTypeHeaderValue"/> is mutable, the value
            returned will be a new instance every time.
            </value>
        </member>
        <member name="P:Microsoft.HDInsight.Net.Http.Formatting.Formatting.JsonMediaTypeFormatter.UseDataContractJsonSerializer">
            <summary>
            Gets or sets a value indicating whether to use <see cref="T:System.Runtime.Serialization.Json.DataContractJsonSerializer"/> by default.
            </summary>
            <value>
                <c>true</c> if use <see cref="T:System.Runtime.Serialization.Json.DataContractJsonSerializer"/> by default; otherwise, <c>false</c>. The default is <c>false</c>.
            </value>
        </member>
        <member name="P:Microsoft.HDInsight.Net.Http.Formatting.Formatting.JsonMediaTypeFormatter.Indent">
            <summary>
            Gets or sets a value indicating whether to indent elements when writing data. 
            </summary>
        </member>
        <member name="P:Microsoft.HDInsight.Net.Http.Formatting.Formatting.JsonMediaTypeFormatter.MaxDepth">
            <inheritdoc/>
        </member>
        <member name="T:Microsoft.HDInsight.Net.Http.Formatting.Formatting.MediaTypeConstants">
            <summary>
            Constants related to media types.
            </summary>
        </member>
        <member name="P:Microsoft.HDInsight.Net.Http.Formatting.Formatting.MediaTypeConstants.ApplicationOctetStreamMediaType">
            <summary>
            Gets a <see cref="T:System.Net.Http.Headers.MediaTypeHeaderValue"/> instance representing <c>application/octet-stream</c>.
            </summary>
            <value>
            A new <see cref="T:System.Net.Http.Headers.MediaTypeHeaderValue"/> instance representing <c>application/octet-stream</c>.
            </value>
        </member>
        <member name="P:Microsoft.HDInsight.Net.Http.Formatting.Formatting.MediaTypeConstants.ApplicationXmlMediaType">
            <summary>
            Gets a <see cref="T:System.Net.Http.Headers.MediaTypeHeaderValue"/> instance representing <c>application/xml</c>.
            </summary>
            <value>
            A new <see cref="T:System.Net.Http.Headers.MediaTypeHeaderValue"/> instance representing <c>application/xml</c>.
            </value>
        </member>
        <member name="P:Microsoft.HDInsight.Net.Http.Formatting.Formatting.MediaTypeConstants.ApplicationJsonMediaType">
            <summary>
            Gets a <see cref="T:System.Net.Http.Headers.MediaTypeHeaderValue"/> instance representing <c>application/json</c>.
            </summary>
            <value>
            A new <see cref="T:System.Net.Http.Headers.MediaTypeHeaderValue"/> instance representing <c>application/json</c>.
            </value>
        </member>
        <member name="P:Microsoft.HDInsight.Net.Http.Formatting.Formatting.MediaTypeConstants.TextXmlMediaType">
            <summary>
            Gets a <see cref="T:System.Net.Http.Headers.MediaTypeHeaderValue"/> instance representing <c>text/xml</c>.
            </summary>
            <value>
            A new <see cref="T:System.Net.Http.Headers.MediaTypeHeaderValue"/> instance representing <c>text/xml</c>.
            </value>
        </member>
        <member name="P:Microsoft.HDInsight.Net.Http.Formatting.Formatting.MediaTypeConstants.TextJsonMediaType">
            <summary>
            Gets a <see cref="T:System.Net.Http.Headers.MediaTypeHeaderValue"/> instance representing <c>text/json</c>.
            </summary>
            <value>
            A new <see cref="T:System.Net.Http.Headers.MediaTypeHeaderValue"/> instance representing <c>text/json</c>.
            </value>
        </member>
        <member name="P:Microsoft.HDInsight.Net.Http.Formatting.Formatting.MediaTypeConstants.ApplicationFormUrlEncodedMediaType">
            <summary>
            Gets a <see cref="T:System.Net.Http.Headers.MediaTypeHeaderValue"/> instance representing <c>application/x-www-form-urlencoded</c>.
            </summary>
            <value>
            A new <see cref="T:System.Net.Http.Headers.MediaTypeHeaderValue"/> instance representing <c>application/x-www-form-urlencoded</c>.
            </value>
        </member>
        <member name="P:Microsoft.HDInsight.Net.Http.Formatting.Formatting.MediaTypeConstants.ApplicationBsonMediaType">
            <summary>
            Gets a <see cref="T:System.Net.Http.Headers.MediaTypeHeaderValue"/> instance representing <c>application/bson</c>.
            </summary>
            <value>
            A new <see cref="T:System.Net.Http.Headers.MediaTypeHeaderValue"/> instance representing <c>application/bson</c>.
            </value>
            <remarks>
            Not yet a standard. In particular this media type is not currently listed at
            http://www.iana.org/assignments/media-types/application.
            </remarks>
        </member>
        <member name="T:Microsoft.HDInsight.Net.Http.Formatting.Formatting.MediaTypeFormatterCollection">
            <summary>
            Collection class that contains <see cref="T:Microsoft.HDInsight.Net.Http.Formatting.Formatting.MediaTypeFormatter"/> instances.
            </summary>
        </member>
        <member name="M:Microsoft.HDInsight.Net.Http.Formatting.Formatting.MediaTypeFormatterCollection.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.HDInsight.Net.Http.Formatting.Formatting.MediaTypeFormatterCollection"/> class.
            </summary>
            <remarks>
            This collection will be initialized to contain default <see cref="T:Microsoft.HDInsight.Net.Http.Formatting.Formatting.MediaTypeFormatter"/>
            instances for Xml, JsonValue and Json.
            </remarks>
        </member>
        <member name="M:Microsoft.HDInsight.Net.Http.Formatting.Formatting.MediaTypeFormatterCollection.#ctor(System.Collections.Generic.IEnumerable{Microsoft.HDInsight.Net.Http.Formatting.Formatting.MediaTypeFormatter})">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.HDInsight.Net.Http.Formatting.Formatting.MediaTypeFormatterCollection"/> class.
            </summary>
            <param name="formatters">A collection of <see cref="T:Microsoft.HDInsight.Net.Http.Formatting.Formatting.MediaTypeFormatter"/> instances to place in the collection.</param>
        </member>
        <member name="M:Microsoft.HDInsight.Net.Http.Formatting.Formatting.MediaTypeFormatterCollection.AddRange(System.Collections.Generic.IEnumerable{Microsoft.HDInsight.Net.Http.Formatting.Formatting.MediaTypeFormatter})">
            <summary>
            Adds the elements of the specified collection to the end of the <see cref="T:Microsoft.HDInsight.Net.Http.Formatting.Formatting.MediaTypeFormatterCollection"/>.
            </summary>
            <param name="items">
            The items that should be added to the end of the <see cref="T:Microsoft.HDInsight.Net.Http.Formatting.Formatting.MediaTypeFormatterCollection"/>.
            The items collection itself cannot be <see langword="null"/>, but it can contain elements that are
            <see langword="null"/>.
            </param>
        </member>
        <member name="M:Microsoft.HDInsight.Net.Http.Formatting.Formatting.MediaTypeFormatterCollection.InsertRange(System.Int32,System.Collections.Generic.IEnumerable{Microsoft.HDInsight.Net.Http.Formatting.Formatting.MediaTypeFormatter})">
            <summary>
            Inserts the elements of a collection into the <see cref="T:Microsoft.HDInsight.Net.Http.Formatting.Formatting.MediaTypeFormatterCollection"/> at the specified
            index.
            </summary>
            <param name="index">The zero-based index at which the new elements should be inserted.</param>
            <param name="items">
            The items that should be inserted into the <see cref="T:Microsoft.HDInsight.Net.Http.Formatting.Formatting.MediaTypeFormatterCollection"/>. The items collection
            itself cannot be <see langword="null"/>, but it can contain elements that are <see langword="null"/>.
            </param>
        </member>
        <member name="M:Microsoft.HDInsight.Net.Http.Formatting.Formatting.MediaTypeFormatterCollection.FindReader(System.Type,System.Net.Http.Headers.MediaTypeHeaderValue)">
            <summary>
            Helper to search a collection for a formatter that can read the .NET type in the given mediaType.
            </summary>
            <param name="type">.NET type to read</param>
            <param name="mediaType">media type to match on.</param>
            <returns>Formatter that can read the type. Null if no formatter found.</returns>
        </member>
        <member name="M:Microsoft.HDInsight.Net.Http.Formatting.Formatting.MediaTypeFormatterCollection.FindWriter(System.Type,System.Net.Http.Headers.MediaTypeHeaderValue)">
            <summary>
            Helper to search a collection for a formatter that can write the .NET type in the given mediaType.
            </summary>
            <param name="type">.NET type to read</param>
            <param name="mediaType">media type to match on.</param>
            <returns>Formatter that can write the type. Null if no formatter found.</returns>
        </member>
        <member name="M:Microsoft.HDInsight.Net.Http.Formatting.Formatting.MediaTypeFormatterCollection.IsTypeExcludedFromValidation(System.Type)">
            <summary>
            Returns true if the type is one of those loosely defined types that should be excluded from validation
            </summary>
            <param name="type">.NET <see cref="T:System.Type"/> to validate</param>
            <returns><c>true</c> if the type should be excluded.</returns>
        </member>
        <member name="M:Microsoft.HDInsight.Net.Http.Formatting.Formatting.MediaTypeFormatterCollection.CreateDefaultFormatters">
            <summary>
            Creates a collection of new instances of the default <see cref="T:Microsoft.HDInsight.Net.Http.Formatting.Formatting.MediaTypeFormatter"/>s.
            </summary>
            <returns>The collection of default <see cref="T:Microsoft.HDInsight.Net.Http.Formatting.Formatting.MediaTypeFormatter"/> instances.</returns>
        </member>
        <member name="P:Microsoft.HDInsight.Net.Http.Formatting.Formatting.MediaTypeFormatterCollection.XmlFormatter">
            <summary>
            Gets the <see cref="T:Microsoft.HDInsight.Net.Http.Formatting.Formatting.MediaTypeFormatter"/> to use for Xml.
            </summary>
        </member>
        <member name="P:Microsoft.HDInsight.Net.Http.Formatting.Formatting.MediaTypeFormatterCollection.JsonFormatter">
            <summary>
            Gets the <see cref="T:Microsoft.HDInsight.Net.Http.Formatting.Formatting.MediaTypeFormatter"/> to use for Json.
            </summary>
        </member>
        <member name="P:Microsoft.HDInsight.Net.Http.Formatting.Formatting.MediaTypeFormatterCollection.FormUrlEncodedFormatter">
            <summary>
            Gets the <see cref="T:Microsoft.HDInsight.Net.Http.Formatting.Formatting.MediaTypeFormatter"/> to use for <c>application/x-www-form-urlencoded</c> data.
            </summary>
        </member>
        <member name="T:Microsoft.HDInsight.Net.Http.Formatting.Formatting.MediaTypeFormatterExtensions">
            <summary>
            Extensions for adding <see cref="T:Microsoft.HDInsight.Net.Http.Formatting.Formatting.MediaTypeMapping"/> items to a <see cref="T:Microsoft.HDInsight.Net.Http.Formatting.Formatting.MediaTypeFormatter"/>.
            </summary>
        </member>
        <member name="M:Microsoft.HDInsight.Net.Http.Formatting.Formatting.MediaTypeFormatterExtensions.AddQueryStringMapping(Microsoft.HDInsight.Net.Http.Formatting.Formatting.MediaTypeFormatter,System.String,System.String,System.Net.Http.Headers.MediaTypeHeaderValue)">
            <summary>
            Updates the given <paramref name="formatter"/>'s set of <see cref="T:Microsoft.HDInsight.Net.Http.Formatting.Formatting.MediaTypeMapping"/> elements
            so that it associates the <paramref name="mediaType"/> with <see cref="T:System.Uri"/>s containing
            a specific query parameter and value.
            </summary>
            <param name="formatter">The <see cref="T:Microsoft.HDInsight.Net.Http.Formatting.Formatting.MediaTypeFormatter"/> to receive the new <see cref="T:Microsoft.HDInsight.Net.Http.Formatting.Formatting.QueryStringMapping"/> item.</param>
            <param name="queryStringParameterName">The name of the query parameter.</param>
            <param name="queryStringParameterValue">The value assigned to that query parameter.</param>
            <param name="mediaType">The <see cref="T:System.Net.Http.Headers.MediaTypeHeaderValue"/> to associate 
            with a <see cref="T:System.Uri"/> containing a query string matching <paramref name="queryStringParameterName"/> 
            and <paramref name="queryStringParameterValue"/>.</param>
        </member>
        <member name="M:Microsoft.HDInsight.Net.Http.Formatting.Formatting.MediaTypeFormatterExtensions.AddQueryStringMapping(Microsoft.HDInsight.Net.Http.Formatting.Formatting.MediaTypeFormatter,System.String,System.String,System.String)">
            <summary>
            Updates the given <paramref name="formatter"/>'s set of <see cref="T:Microsoft.HDInsight.Net.Http.Formatting.Formatting.MediaTypeMapping"/> elements
            so that it associates the <paramref name="mediaType"/> with <see cref="T:System.Uri"/>s containing
            a specific query parameter and value.
            </summary>
            <param name="formatter">The <see cref="T:Microsoft.HDInsight.Net.Http.Formatting.Formatting.MediaTypeFormatter"/> to receive the new <see cref="T:Microsoft.HDInsight.Net.Http.Formatting.Formatting.QueryStringMapping"/> item.</param>
            <param name="queryStringParameterName">The name of the query parameter.</param>
            <param name="queryStringParameterValue">The value assigned to that query parameter.</param>
            <param name="mediaType">The media type to associate 
            with a <see cref="T:System.Uri"/> containing a query string matching <paramref name="queryStringParameterName"/>
            and <paramref name="queryStringParameterValue"/>.</param>
        </member>
        <member name="M:Microsoft.HDInsight.Net.Http.Formatting.Formatting.MediaTypeFormatterExtensions.AddRequestHeaderMapping(Microsoft.HDInsight.Net.Http.Formatting.Formatting.MediaTypeFormatter,System.String,System.String,System.StringComparison,System.Boolean,System.Net.Http.Headers.MediaTypeHeaderValue)">
            <summary>
            Updates the given <paramref name="formatter"/>'s set of <see cref="T:Microsoft.HDInsight.Net.Http.Formatting.Formatting.MediaTypeMapping"/> elements
            so that it associates the <paramref name="mediaType"/> with a specific HTTP request header field
            with a specific value.
            </summary>
            <remarks><see cref="T:Microsoft.HDInsight.Net.Http.Formatting.Formatting.RequestHeaderMapping"/> checks header fields associated with <see cref="M:HttpRequestMessage.Headers"/> for a match. It does
            not check header fields associated with <see cref="M:HttpResponseMessage.Headers"/> or <see cref="M:HttpContent.Headers"/> instances.</remarks>
            <param name="formatter">The <see cref="T:Microsoft.HDInsight.Net.Http.Formatting.Formatting.MediaTypeFormatter"/> to receive the new <see cref="T:Microsoft.HDInsight.Net.Http.Formatting.Formatting.MediaTypeMapping"/> item.</param>
            <param name="headerName">Name of the header to match.</param>
            <param name="headerValue">The header value to match.</param>
            <param name="valueComparison">The <see cref="T:System.StringComparison"/> to use when matching <paramref name="headerValue"/>.</param>
            <param name="isValueSubstring">if set to <c>true</c> then <paramref name="headerValue"/> is 
            considered a match if it matches a substring of the actual header value.</param>
            <param name="mediaType">The <see cref="T:System.Net.Http.Headers.MediaTypeHeaderValue"/> to associate 
            with a <see cref="M:HttpRequestMessage.Header"/> entry with a name matching <paramref name="headerName"/>
            and a value matching <paramref name="headerValue"/>.</param>
        </member>
        <member name="M:Microsoft.HDInsight.Net.Http.Formatting.Formatting.MediaTypeFormatterExtensions.AddRequestHeaderMapping(Microsoft.HDInsight.Net.Http.Formatting.Formatting.MediaTypeFormatter,System.String,System.String,System.StringComparison,System.Boolean,System.String)">
            <summary>
            Updates the given <paramref name="formatter"/>'s set of <see cref="T:Microsoft.HDInsight.Net.Http.Formatting.Formatting.MediaTypeMapping"/> elements
            so that it associates the <paramref name="mediaType"/> with a specific HTTP request header field
            with a specific value.
            </summary>
            <remarks><see cref="T:Microsoft.HDInsight.Net.Http.Formatting.Formatting.RequestHeaderMapping"/> checks header fields associated with <see cref="M:HttpRequestMessage.Headers"/> for a match. It does
            not check header fields associated with <see cref="M:HttpResponseMessage.Headers"/> or <see cref="M:HttpContent.Headers"/> instances.</remarks>
            <param name="formatter">The <see cref="T:Microsoft.HDInsight.Net.Http.Formatting.Formatting.MediaTypeFormatter"/> to receive the new <see cref="T:Microsoft.HDInsight.Net.Http.Formatting.Formatting.MediaTypeMapping"/> item.</param>
            <param name="headerName">Name of the header to match.</param>
            <param name="headerValue">The header value to match.</param>
            <param name="valueComparison">The <see cref="T:System.StringComparison"/> to use when matching <paramref name="headerValue"/>.</param>
            <param name="isValueSubstring">if set to <c>true</c> then <paramref name="headerValue"/> is 
            considered a match if it matches a substring of the actual header value.</param>
            <param name="mediaType">The media type to associate 
            with a <see cref="M:HttpRequestMessage.Header"/> entry with a name matching <paramref name="headerName"/>
            and a value matching <paramref name="headerValue"/>.</param>
        </member>
        <member name="T:Microsoft.HDInsight.Net.Http.Formatting.Formatting.MediaTypeWithQualityHeaderValueComparer">
            Implementation of <see cref="T:System.Collections.Generic.IComparer`1"/> that can compare accept media type header fields
            based on their quality values (a.k.a q-values). See 
            <see cref="T:Microsoft.HDInsight.Net.Http.Formatting.Formatting.StringWithQualityHeaderValueComparer"/> for a comparer for other content negotiation
            header field q-values.
        </member>
        <member name="M:Microsoft.HDInsight.Net.Http.Formatting.Formatting.MediaTypeWithQualityHeaderValueComparer.Compare(System.Net.Http.Headers.MediaTypeWithQualityHeaderValue,System.Net.Http.Headers.MediaTypeWithQualityHeaderValue)">
            <summary>
            Compares two <see cref="T:System.Net.Http.Headers.MediaTypeWithQualityHeaderValue"/> based on their quality value (a.k.a their "q-value").
            Values with identical q-values are considered equal (i.e the result is 0) with the exception that sub-type wild-cards are 
            considered less than specific media types and full wild-cards are considered less than sub-type wild-cards. This allows to 
            sort a sequence of <see cref="T:System.Net.Http.Headers.StringWithQualityHeaderValue"/> following their q-values in the order of specific media types,
            sub-type wildcards, and last any full wild-cards.
            </summary>
            <param name="mediaType1">The first <see cref="T:System.Net.Http.Headers.MediaTypeWithQualityHeaderValue"/> to compare.</param>
            <param name="mediaType2">The second <see cref="T:System.Net.Http.Headers.MediaTypeWithQualityHeaderValue"/> to compare.</param>
            <returns></returns>
        </member>
        <member name="T:Microsoft.HDInsight.Net.Http.Formatting.Formatting.MediaTypeMapping">
            <summary>
            An abstract base class used to create an association between <see cref="T:System.Net.Http.HttpRequestMessage"/> or 
            <see cref="T:System.Net.Http.HttpResponseMessage"/> instances that have certain characteristics 
            and a specific <see cref="T:System.Net.Http.Headers.MediaTypeHeaderValue"/>. 
            </summary>
        </member>
        <member name="M:Microsoft.HDInsight.Net.Http.Formatting.Formatting.MediaTypeMapping.#ctor(System.Net.Http.Headers.MediaTypeHeaderValue)">
            <summary>
            Initializes a new instance of a <see cref="T:Microsoft.HDInsight.Net.Http.Formatting.Formatting.MediaTypeMapping"/> with the
            given <paramref name="mediaType"/> value.
            </summary>
            <param name="mediaType">
            The <see cref="T:System.Net.Http.Headers.MediaTypeHeaderValue"/> that is associated with <see cref="T:System.Net.Http.HttpRequestMessage"/> or 
            <see cref="T:System.Net.Http.HttpResponseMessage"/> instances that have the given characteristics of the 
            <see cref="T:Microsoft.HDInsight.Net.Http.Formatting.Formatting.MediaTypeMapping"/>.
            </param>
        </member>
        <member name="M:Microsoft.HDInsight.Net.Http.Formatting.Formatting.MediaTypeMapping.#ctor(System.String)">
            <summary>
            Initializes a new instance of a <see cref="T:Microsoft.HDInsight.Net.Http.Formatting.Formatting.MediaTypeMapping"/> with the
            given <paramref name="mediaType"/> value.
            </summary>
            <param name="mediaType">
            The <see cref="T:System.String"/> that is associated with <see cref="T:System.Net.Http.HttpRequestMessage"/> or 
            <see cref="T:System.Net.Http.HttpResponseMessage"/> instances that have the given characteristics of the 
            <see cref="T:Microsoft.HDInsight.Net.Http.Formatting.Formatting.MediaTypeMapping"/>.
            </param>
        </member>
        <member name="M:Microsoft.HDInsight.Net.Http.Formatting.Formatting.MediaTypeMapping.TryMatchMediaType(System.Net.Http.HttpRequestMessage)">
            <summary>
            Returns the quality of the match of the <see cref="T:System.Net.Http.Headers.MediaTypeHeaderValue"/>
            associated with <paramref name="request"/>.
            </summary>
            <param name="request">
            The <see cref="T:System.Net.Http.HttpRequestMessage"/> to evaluate for the characteristics 
            associated with the <see cref="T:System.Net.Http.Headers.MediaTypeHeaderValue"/>
            of the <see cref="T:Microsoft.HDInsight.Net.Http.Formatting.Formatting.MediaTypeMapping"/>.
            </param> 
            <returns>
            The quality of the match. It must be between <c>0.0</c> and <c>1.0</c>.
            A value of <c>0.0</c> signifies no match.
            A value of <c>1.0</c> signifies a complete match.
            </returns>
        </member>
        <member name="P:Microsoft.HDInsight.Net.Http.Formatting.Formatting.MediaTypeMapping.MediaType">
            <summary>
            Gets the <see cref="T:System.Net.Http.Headers.MediaTypeHeaderValue"/> that is associated with <see cref="T:System.Net.Http.HttpRequestMessage"/> or 
            <see cref="T:System.Net.Http.HttpResponseMessage"/> instances that have the given characteristics of the 
            <see cref="T:Microsoft.HDInsight.Net.Http.Formatting.Formatting.MediaTypeMapping"/>.
            </summary>
        </member>
        <member name="T:Microsoft.HDInsight.Net.Http.Formatting.Formatting.QueryStringMapping">
            <summary>
            Class that provides <see cref="T:System.Net.Http.Headers.MediaTypeHeaderValue"/>s from query strings.
            </summary>
        </member>
        <member name="M:Microsoft.HDInsight.Net.Http.Formatting.Formatting.QueryStringMapping.#ctor(System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.HDInsight.Net.Http.Formatting.Formatting.QueryStringMapping"/> class.
            </summary>
            <param name="queryStringParameterName">The name of the query string parameter to match, if present.</param>
            <param name="queryStringParameterValue">The value of the query string parameter specified by <paramref name="queryStringParameterName"/>.</param>
            <param name="mediaType">The media type to use if the query parameter specified by <paramref name="queryStringParameterName"/> is present
            and assigned the value specified by <paramref name="queryStringParameterValue"/>.</param>
        </member>
        <member name="M:Microsoft.HDInsight.Net.Http.Formatting.Formatting.QueryStringMapping.#ctor(System.String,System.String,System.Net.Http.Headers.MediaTypeHeaderValue)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.HDInsight.Net.Http.Formatting.Formatting.QueryStringMapping"/> class.
            </summary>
            <param name="queryStringParameterName">The name of the query string parameter to match, if present.</param>
            <param name="queryStringParameterValue">The value of the query string parameter specified by <paramref name="queryStringParameterName"/>.</param>
            <param name="mediaType">The <see cref="T:System.Net.Http.Headers.MediaTypeHeaderValue"/> to use if the query parameter specified by <paramref name="queryStringParameterName"/> is present
            and assigned the value specified by <paramref name="queryStringParameterValue"/>.</param>
        </member>
        <member name="M:Microsoft.HDInsight.Net.Http.Formatting.Formatting.QueryStringMapping.TryMatchMediaType(System.Net.Http.HttpRequestMessage)">
            <summary>
            Returns a value indicating whether the current <see cref="T:Microsoft.HDInsight.Net.Http.Formatting.Formatting.QueryStringMapping"/>
            instance can return a <see cref="T:System.Net.Http.Headers.MediaTypeHeaderValue"/> from <paramref name="request"/>.
            </summary>
            <param name="request">The <see cref="T:System.Net.Http.HttpRequestMessage"/> to check.</param>
            <returns>If this instance can produce a <see cref="T:System.Net.Http.Headers.MediaTypeHeaderValue"/> from <paramref name="request"/>
            it returns <c>1.0</c> otherwise <c>0.0</c>.</returns>
        </member>
        <member name="P:Microsoft.HDInsight.Net.Http.Formatting.Formatting.QueryStringMapping.QueryStringParameterName">
            <summary>
            Gets the query string parameter name.
            </summary>
        </member>
        <member name="P:Microsoft.HDInsight.Net.Http.Formatting.Formatting.QueryStringMapping.QueryStringParameterValue">
            <summary>
            Gets the query string parameter value.
            </summary>
        </member>
        <member name="T:Microsoft.HDInsight.Net.Http.Formatting.Formatting.RequestHeaderMapping">
            <summary>
            This class provides a mapping from an arbitrary HTTP request header field to a <see cref="T:System.Net.Http.Headers.MediaTypeHeaderValue"/>
            used to select <see cref="T:Microsoft.HDInsight.Net.Http.Formatting.Formatting.MediaTypeFormatter"/> instances for handling the entity body of an <see cref="T:System.Net.Http.HttpRequestMessage"/>
            or <see cref="T:System.Net.Http.HttpResponseMessage"/>.
            <remarks>This class only checks header fields associated with <see cref="P:System.Net.Http.HttpRequestMessage.Headers"/> for a match. It does
            not check header fields associated with <see cref="P:System.Net.Http.HttpResponseMessage.Headers"/> or <see cref="P:System.Net.Http.HttpContent.Headers"/> instances.</remarks>
            </summary>
        </member>
        <member name="M:Microsoft.HDInsight.Net.Http.Formatting.Formatting.RequestHeaderMapping.#ctor(System.String,System.String,System.StringComparison,System.Boolean,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.HDInsight.Net.Http.Formatting.Formatting.RequestHeaderMapping"/> class.
            </summary>
            <param name="headerName">Name of the header to match.</param>
            <param name="headerValue">The header value to match.</param>
            <param name="valueComparison">The value comparison to use when matching <paramref name="headerValue"/>.</param>
            <param name="isValueSubstring">if set to <c>true</c> then <paramref name="headerValue"/> is 
            considered a match if it matches a substring of the actual header value.</param>
            <param name="mediaType">The media type to use if <paramref name="headerName"/> and <paramref name="headerValue"/> 
            is considered a match.</param>
        </member>
        <member name="M:Microsoft.HDInsight.Net.Http.Formatting.Formatting.RequestHeaderMapping.#ctor(System.String,System.String,System.StringComparison,System.Boolean,System.Net.Http.Headers.MediaTypeHeaderValue)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.HDInsight.Net.Http.Formatting.Formatting.RequestHeaderMapping"/> class.
            </summary>
            <param name="headerName">Name of the header to match.</param>
            <param name="headerValue">The header value to match.</param>
            <param name="valueComparison">The <see cref="T:System.StringComparison"/> to use when matching <paramref name="headerValue"/>.</param>
            <param name="isValueSubstring">if set to <c>true</c> then <paramref name="headerValue"/> is 
            considered a match if it matches a substring of the actual header value.</param>
            <param name="mediaType">The <see cref="T:System.Net.Http.Headers.MediaTypeHeaderValue"/> to use if <paramref name="headerName"/> and <paramref name="headerValue"/> 
            is considered a match.</param>
        </member>
        <member name="M:Microsoft.HDInsight.Net.Http.Formatting.Formatting.RequestHeaderMapping.TryMatchMediaType(System.Net.Http.HttpRequestMessage)">
            <summary>
            Returns a value indicating whether the current <see cref="T:Microsoft.HDInsight.Net.Http.Formatting.Formatting.RequestHeaderMapping"/>
            instance can return a <see cref="T:System.Net.Http.Headers.MediaTypeHeaderValue"/> from <paramref name="request"/>.
            </summary>
            <param name="request">The <see cref="T:System.Net.Http.HttpRequestMessage"/> to check.</param>
            <returns>
            The quality of the match. It must be between <c>0.0</c> and <c>1.0</c>.
            A value of <c>0.0</c> signifies no match.
            A value of <c>1.0</c> signifies a complete match.
            </returns>
        </member>
        <member name="P:Microsoft.HDInsight.Net.Http.Formatting.Formatting.RequestHeaderMapping.HeaderName">
            <summary>
            Gets the name of the header to match.
            </summary>
        </member>
        <member name="P:Microsoft.HDInsight.Net.Http.Formatting.Formatting.RequestHeaderMapping.HeaderValue">
            <summary>
            Gets the header value to match.
            </summary>
        </member>
        <member name="P:Microsoft.HDInsight.Net.Http.Formatting.Formatting.RequestHeaderMapping.HeaderValueComparison">
            <summary>
            Gets the <see cref="T:System.StringComparison"/> to use when matching <see cref="P:Microsoft.HDInsight.Net.Http.Formatting.Formatting.RequestHeaderMapping.HeaderValue"/>.
            </summary>
        </member>
        <member name="P:Microsoft.HDInsight.Net.Http.Formatting.Formatting.RequestHeaderMapping.IsValueSubstring">
            <summary>
            Gets a value indicating whether <see cref="P:Microsoft.HDInsight.Net.Http.Formatting.Formatting.RequestHeaderMapping.HeaderValue"/> is 
            a matched as a substring of the actual header value.
            this instance is value substring.
            </summary>
            <value>
            <c>true</c> if <see cref="P:Microsoft.HDInsight.Net.Http.Formatting.Formatting.RequestHeaderMapping.HeaderValue"/> is to be matched as a substring; otherwise <c>false</c>.
            </value>
        </member>
        <member name="T:Microsoft.HDInsight.Net.Http.Formatting.Formatting.MediaTypeFormatterMatchRanking">
            <summary>
            Contains information about the degree to which a <see cref="T:Microsoft.HDInsight.Net.Http.Formatting.Formatting.MediaTypeFormatter"/> matches the  
            explicit or implicit preferences found in an incoming request.
            </summary>
        </member>
        <member name="F:Microsoft.HDInsight.Net.Http.Formatting.Formatting.MediaTypeFormatterMatchRanking.None">
            <summary>
            No match was found
            </summary>
        </member>
        <member name="F:Microsoft.HDInsight.Net.Http.Formatting.Formatting.MediaTypeFormatterMatchRanking.MatchOnCanWriteType">
            <summary>
            Matched on type meaning that the formatter is able to serialize the type
            </summary>
        </member>
        <member name="F:Microsoft.HDInsight.Net.Http.Formatting.Formatting.MediaTypeFormatterMatchRanking.MatchOnRequestAcceptHeaderLiteral">
            <summary>
            Matched on explicit literal accept header in <see cref="T:System.Net.Http.HttpRequestMessage"/>, 
            e.g. "application/json".
            </summary>
        </member>
        <member name="F:Microsoft.HDInsight.Net.Http.Formatting.Formatting.MediaTypeFormatterMatchRanking.MatchOnRequestAcceptHeaderSubtypeMediaRange">
            <summary>
            Matched on explicit subtype range accept header in <see cref="T:System.Net.Http.HttpRequestMessage"/>,
            e.g. "application/*".
            </summary>
        </member>
        <member name="F:Microsoft.HDInsight.Net.Http.Formatting.Formatting.MediaTypeFormatterMatchRanking.MatchOnRequestAcceptHeaderAllMediaRange">
            <summary>
            Matched on explicit all media type range accept header in <see cref="T:System.Net.Http.HttpRequestMessage"/>,
            e.g. "*/*"
            </summary>
        </member>
        <member name="F:Microsoft.HDInsight.Net.Http.Formatting.Formatting.MediaTypeFormatterMatchRanking.MatchOnRequestWithMediaTypeMapping">
            <summary>
            Matched on <see cref="T:System.Net.Http.HttpRequestMessage"/> after having applied
            the various <see cref="T:Microsoft.HDInsight.Net.Http.Formatting.Formatting.MediaTypeMapping"/>s.
            </summary>
        </member>
        <member name="F:Microsoft.HDInsight.Net.Http.Formatting.Formatting.MediaTypeFormatterMatchRanking.MatchOnRequestMediaType">
            <summary>
            Matched on the media type of the <see cref="T:System.Net.Http.HttpContent"/> of the <see cref="T:System.Net.Http.HttpRequestMessage"/>.
            </summary>
        </member>
        <member name="T:Microsoft.HDInsight.Net.Http.Formatting.Formatting.MediaTypeFormatterMatch">
            <summary>
            This class describes how well a particular <see cref="T:Microsoft.HDInsight.Net.Http.Formatting.Formatting.MediaTypeFormatter"/> matches a request.
            </summary>
        </member>
        <member name="M:Microsoft.HDInsight.Net.Http.Formatting.Formatting.MediaTypeFormatterMatch.#ctor(Microsoft.HDInsight.Net.Http.Formatting.Formatting.MediaTypeFormatter,System.Net.Http.Headers.MediaTypeHeaderValue,System.Nullable{System.Double},Microsoft.HDInsight.Net.Http.Formatting.Formatting.MediaTypeFormatterMatchRanking)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.HDInsight.Net.Http.Formatting.Formatting.MediaTypeFormatterMatch"/> class.
            </summary>
            <param name="formatter">The matching formatter.</param>
            <param name="mediaType">The media type. Can be <c>null</c> in which case the media type <c>application/octet-stream</c> is used.</param>
            <param name="quality">The quality of the match. Can be <c>null</c> in which case it is considered a full match with a value of 1.0</param>
            <param name="ranking">The kind of match.</param>
        </member>
        <member name="P:Microsoft.HDInsight.Net.Http.Formatting.Formatting.MediaTypeFormatterMatch.Formatter">
            <summary>
            Gets the media type formatter.
            </summary>
        </member>
        <member name="P:Microsoft.HDInsight.Net.Http.Formatting.Formatting.MediaTypeFormatterMatch.MediaType">
            <summary>
            Gets the matched media type.
            </summary>
        </member>
        <member name="P:Microsoft.HDInsight.Net.Http.Formatting.Formatting.MediaTypeFormatterMatch.Quality">
            <summary>
            Gets the quality of the match
            </summary>
        </member>
        <member name="P:Microsoft.HDInsight.Net.Http.Formatting.Formatting.MediaTypeFormatterMatch.Ranking">
            <summary>
            Gets the kind of match that occurred.
            </summary>
        </member>
        <member name="T:Microsoft.HDInsight.Net.Http.Formatting.Formatting.StringComparisonHelper">
            <summary>
            Helper class for validating <see cref="T:System.StringComparison"/> values.
            </summary>
        </member>
        <member name="M:Microsoft.HDInsight.Net.Http.Formatting.Formatting.StringComparisonHelper.IsDefined(System.StringComparison)">
            <summary>
            Determines whether the specified <paramref name="value"/> is defined by the <see cref="T:System.StringComparison"/>
            enumeration.
            </summary>
            <param name="value">The value to verify.</param>
            <returns>
            <c>true</c> if the specified options is defined; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Microsoft.HDInsight.Net.Http.Formatting.Formatting.StringComparisonHelper.Validate(System.StringComparison,System.String)">
            <summary>
            Validates the specified <paramref name="value"/> and throws an <see cref="T:System.ArgumentException"/>
            exception if not valid.
            </summary>
            <param name="value">The value to validate.</param>
            <param name="parameterName">Name of the parameter to use if throwing exception.</param>
        </member>
        <member name="T:Microsoft.HDInsight.Net.Http.Formatting.Formatting.XmlHttpRequestHeaderMapping">
            <summary>
            A <see cref="T:Microsoft.HDInsight.Net.Http.Formatting.Formatting.RequestHeaderMapping"/> that maps the X-Requested-With http header field set by AJAX XmlHttpRequest (XHR)
            to the media type <c>application/json</c> if no explicit Accept header fields are present in the request.
            </summary>
        </member>
        <member name="M:Microsoft.HDInsight.Net.Http.Formatting.Formatting.XmlHttpRequestHeaderMapping.#ctor">
            <summary>
            Initializes a new instance of <see cref="T:Microsoft.HDInsight.Net.Http.Formatting.Formatting.XmlHttpRequestHeaderMapping"/> class
            </summary>
        </member>
        <member name="M:Microsoft.HDInsight.Net.Http.Formatting.Formatting.XmlHttpRequestHeaderMapping.TryMatchMediaType(System.Net.Http.HttpRequestMessage)">
            <summary>
            Returns a value indicating whether the current <see cref="T:Microsoft.HDInsight.Net.Http.Formatting.Formatting.RequestHeaderMapping"/>
            instance can return a <see cref="T:System.Net.Http.Headers.MediaTypeHeaderValue"/> from <paramref name="request"/>.
            </summary>
            <param name="request">The <see cref="T:System.Net.Http.HttpRequestMessage"/> to check.</param>
            <returns>
            The quality of the match.
            A value of <c>0.0</c> signifies no match.
            A value of <c>1.0</c> signifies a complete match and that the request was made using XmlHttpRequest without an Accept header.
            </returns>
        </member>
        <member name="T:Microsoft.HDInsight.Net.Http.Formatting.Formatting.XmlMediaTypeFormatter">
            <summary>
            <see cref="T:Microsoft.HDInsight.Net.Http.Formatting.Formatting.MediaTypeFormatter"/> class to handle Xml.
            </summary>
        </member>
        <member name="M:Microsoft.HDInsight.Net.Http.Formatting.Formatting.XmlMediaTypeFormatter.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.HDInsight.Net.Http.Formatting.Formatting.XmlMediaTypeFormatter"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.HDInsight.Net.Http.Formatting.Formatting.XmlMediaTypeFormatter.#ctor(Microsoft.HDInsight.Net.Http.Formatting.Formatting.XmlMediaTypeFormatter)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.HDInsight.Net.Http.Formatting.Formatting.XmlMediaTypeFormatter"/> class.
            </summary>
            <param name="formatter">The <see cref="T:Microsoft.HDInsight.Net.Http.Formatting.Formatting.XmlMediaTypeFormatter"/> instance to copy settings from.</param>
        </member>
        <member name="M:Microsoft.HDInsight.Net.Http.Formatting.Formatting.XmlMediaTypeFormatter.SetSerializer(System.Type,System.Runtime.Serialization.XmlObjectSerializer)">
            <summary>
            Registers the <see cref="T:System.Runtime.Serialization.XmlObjectSerializer"/> to use to read or write
            the specified <paramref name="type"/>.
            </summary>
            <param name="type">The type of object that will be serialized or deserialized with <paramref name="serializer"/>.</param>
            <param name="serializer">The <see cref="T:System.Runtime.Serialization.XmlObjectSerializer"/> instance to use.</param>
        </member>
        <member name="M:Microsoft.HDInsight.Net.Http.Formatting.Formatting.XmlMediaTypeFormatter.SetSerializer``1(System.Runtime.Serialization.XmlObjectSerializer)">
            <summary>
            Registers the <see cref="T:System.Runtime.Serialization.XmlObjectSerializer"/> to use to read or write
            the specified <typeparamref name="T"/> type.
            </summary>
            <typeparam name="T">The type of object that will be serialized or deserialized with <paramref name="serializer"/>.</typeparam>
            <param name="serializer">The <see cref="T:System.Runtime.Serialization.XmlObjectSerializer"/> instance to use.</param>
        </member>
        <member name="M:Microsoft.HDInsight.Net.Http.Formatting.Formatting.XmlMediaTypeFormatter.SetSerializer(System.Type,System.Xml.Serialization.XmlSerializer)">
            <summary>
            Registers the <see cref="T:System.Xml.Serialization.XmlSerializer"/> to use to read or write
            the specified <paramref name="type"/>.
            </summary>
            <param name="type">The type of objects for which <paramref name="serializer"/> will be used.</param>
            <param name="serializer">The <see cref="T:System.Xml.Serialization.XmlSerializer"/> instance to use.</param>
        </member>
        <member name="M:Microsoft.HDInsight.Net.Http.Formatting.Formatting.XmlMediaTypeFormatter.SetSerializer``1(System.Xml.Serialization.XmlSerializer)">
            <summary>
            Registers the <see cref="T:System.Xml.Serialization.XmlSerializer"/> to use to read or write
            the specified <typeparamref name="T"/> type.
            </summary>
            <typeparam name="T">The type of object that will be serialized or deserialized with <paramref name="serializer"/>.</typeparam>
            <param name="serializer">The <see cref="T:System.Xml.Serialization.XmlSerializer"/> instance to use.</param>
        </member>
        <member name="M:Microsoft.HDInsight.Net.Http.Formatting.Formatting.XmlMediaTypeFormatter.RemoveSerializer(System.Type)">
            <summary>
            Unregisters the serializer currently associated with the given <paramref name="type"/>.
            </summary>
            <remarks>
            Unless another serializer is registered for the <paramref name="type"/>, a default one will be created.
            </remarks>
            <param name="type">The type of object whose serializer should be removed.</param>
            <returns><c>true</c> if a serializer was registered for the <paramref name="type"/>; otherwise <c>false</c>.</returns>
        </member>
        <member name="M:Microsoft.HDInsight.Net.Http.Formatting.Formatting.XmlMediaTypeFormatter.CanReadType(System.Type)">
            <summary>
            Determines whether this <see cref="T:Microsoft.HDInsight.Net.Http.Formatting.Formatting.XmlMediaTypeFormatter"/> can read objects
            of the specified <paramref name="type"/>.
            </summary>
            <param name="type">The type of object that will be read.</param>
            <returns><c>true</c> if objects of this <paramref name="type"/> can be read, otherwise <c>false</c>.</returns>
        </member>
        <member name="M:Microsoft.HDInsight.Net.Http.Formatting.Formatting.XmlMediaTypeFormatter.CanWriteType(System.Type)">
            <summary>
            Determines whether this <see cref="T:Microsoft.HDInsight.Net.Http.Formatting.Formatting.XmlMediaTypeFormatter"/> can write objects
            of the specified <paramref name="type"/>.
            </summary>
            <param name="type">The type of object that will be written.</param>
            <returns><c>true</c> if objects of this <paramref name="type"/> can be written, otherwise <c>false</c>.</returns>
        </member>
        <member name="M:Microsoft.HDInsight.Net.Http.Formatting.Formatting.XmlMediaTypeFormatter.ReadFromStreamAsync(System.Type,System.IO.Stream,System.Net.Http.HttpContent,Microsoft.HDInsight.Net.Http.Formatting.Formatting.IFormatterLogger)">
            <summary>
            Called during deserialization to read an object of the specified <paramref name="type"/>
            from the specified <paramref name="readStream"/>.
            </summary>
            <param name="type">The type of object to read.</param>
            <param name="readStream">The <see cref="T:System.IO.Stream"/> from which to read.</param>
            <param name="content">The <see cref="T:System.Net.Http.HttpContent"/> for the content being read.</param>
            <param name="formatterLogger">The <see cref="T:Microsoft.HDInsight.Net.Http.Formatting.Formatting.IFormatterLogger"/> to log events to.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> whose result will be the object instance that has been read.</returns>
        </member>
        <member name="M:Microsoft.HDInsight.Net.Http.Formatting.Formatting.XmlMediaTypeFormatter.GetDeserializer(System.Type,System.Net.Http.HttpContent)">
            <summary>
            Called during deserialization to get the XML serializer to use for deserializing objects.
            </summary>
            <param name="type">The type of object to deserialize.</param>
            <param name="content">The <see cref="T:System.Net.Http.HttpContent"/> for the content being read.</param>
            <returns>An instance of <see cref="T:System.Runtime.Serialization.XmlObjectSerializer"/> or <see cref="T:System.Xml.Serialization.XmlSerializer"/> to use for deserializing the object.</returns>
        </member>
        <member name="M:Microsoft.HDInsight.Net.Http.Formatting.Formatting.XmlMediaTypeFormatter.CreateXmlReader(System.IO.Stream,System.Net.Http.HttpContent)">
            <summary>
            Called during deserialization to get the XML reader to use for reading objects from the stream.
            </summary>
            <param name="readStream">The <see cref="T:System.IO.Stream"/> to read from.</param>
            <param name="content">The <see cref="T:System.Net.Http.HttpContent"/> for the content being read.</param>
            <returns>The <see cref="T:System.Xml.XmlReader"/> to use for reading objects.</returns>
        </member>
        <member name="M:Microsoft.HDInsight.Net.Http.Formatting.Formatting.XmlMediaTypeFormatter.WriteToStreamAsync(System.Type,System.Object,System.IO.Stream,System.Net.Http.HttpContent,System.Net.TransportContext,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.HDInsight.Net.Http.Formatting.Formatting.XmlMediaTypeFormatter.GetSerializer(System.Type,System.Object,System.Net.Http.HttpContent)">
            <summary>
            Called during serialization to get the XML serializer to use for serializing objects.
            </summary>
            <param name="type">The type of object to serialize.</param>
            <param name="value">The object to serialize.</param>
            <param name="content">The <see cref="T:System.Net.Http.HttpContent"/> for the content being written.</param>
            <returns>An instance of <see cref="T:System.Runtime.Serialization.XmlObjectSerializer"/> or <see cref="T:System.Xml.Serialization.XmlSerializer"/> to use for serializing the object.</returns>
        </member>
        <member name="M:Microsoft.HDInsight.Net.Http.Formatting.Formatting.XmlMediaTypeFormatter.CreateXmlWriter(System.IO.Stream,System.Net.Http.HttpContent)">
            <summary>
            Called during serialization to get the XML writer to use for writing objects to the stream.
            </summary>
            <param name="writeStream">The <see cref="T:System.IO.Stream"/> to write to.</param>
            <param name="content">The <see cref="T:System.Net.Http.HttpContent"/> for the content being written.</param>
            <returns>The <see cref="T:System.Xml.XmlWriter"/> to use for writing objects.</returns>
        </member>
        <member name="M:Microsoft.HDInsight.Net.Http.Formatting.Formatting.XmlMediaTypeFormatter.CreateXmlSerializer(System.Type)">
            <summary>
            Called during deserialization to get the XML serializer.
            </summary>
            <param name="type">The type of object that will be serialized or deserialized.</param>
            <returns>The <see cref="T:System.Xml.Serialization.XmlSerializer"/> used to serialize the object.</returns>
        </member>
        <member name="M:Microsoft.HDInsight.Net.Http.Formatting.Formatting.XmlMediaTypeFormatter.CreateDataContractSerializer(System.Type)">
            <summary>
            Called during deserialization to get the DataContractSerializer serializer.
            </summary>
            <param name="type">The type of object that will be serialized or deserialized.</param>
            <returns>The <see cref="T:System.Runtime.Serialization.DataContractSerializer"/> used to serialize the object.</returns>
        </member>
        <member name="M:Microsoft.HDInsight.Net.Http.Formatting.Formatting.XmlMediaTypeFormatter.InvokeCreateXmlReader(System.IO.Stream,System.Net.Http.HttpContent)">
            <summary>
            This method is to support infrastructure and is not intended to be used directly from your code.
            </summary>
        </member>
        <member name="M:Microsoft.HDInsight.Net.Http.Formatting.Formatting.XmlMediaTypeFormatter.InvokeCreateXmlWriter(System.IO.Stream,System.Net.Http.HttpContent)">
            <summary>
            This method is to support infrastructure and is not intended to be used directly from your code.
            </summary>
        </member>
        <member name="M:Microsoft.HDInsight.Net.Http.Formatting.Formatting.XmlMediaTypeFormatter.InvokeGetDeserializer(System.Type,System.Net.Http.HttpContent)">
            <summary>
            This method is to support infrastructure and is not intended to be used directly from your code.
            </summary>
        </member>
        <member name="M:Microsoft.HDInsight.Net.Http.Formatting.Formatting.XmlMediaTypeFormatter.InvokeGetSerializer(System.Type,System.Object,System.Net.Http.HttpContent)">
            <summary>
            This method is to support infrastructure and is not intended to be used directly from your code.
            </summary>
        </member>
        <member name="P:Microsoft.HDInsight.Net.Http.Formatting.Formatting.XmlMediaTypeFormatter.DefaultMediaType">
            <summary>
            Gets the default media type for xml, namely "application/xml".
            </summary>
            <value>
            <remarks>
            The default media type does not have any <c>charset</c> parameter as 
            the <see cref="T:System.Text.Encoding"/> can be configured on a per <see cref="T:Microsoft.HDInsight.Net.Http.Formatting.Formatting.XmlMediaTypeFormatter"/> 
            instance basis.
            </remarks>
            Because <see cref="T:System.Net.Http.Headers.MediaTypeHeaderValue"/> is mutable, the value
            returned will be a new instance every time.
            </value>
        </member>
        <member name="P:Microsoft.HDInsight.Net.Http.Formatting.Formatting.XmlMediaTypeFormatter.UseXmlSerializer">
            <summary>
            Gets or sets a value indicating whether to use <see cref="T:System.Xml.Serialization.XmlSerializer"/> instead of <see cref="T:System.Runtime.Serialization.DataContractSerializer"/> by default.
            </summary>
            <value>
                <c>true</c> if use <see cref="T:System.Xml.Serialization.XmlSerializer"/> by default; otherwise, <c>false</c>. The default is <c>false</c>.
            </value>
        </member>
        <member name="P:Microsoft.HDInsight.Net.Http.Formatting.Formatting.XmlMediaTypeFormatter.Indent">
            <summary>
            Gets or sets a value indicating whether to indent elements when writing data. 
            </summary>
        </member>
        <member name="P:Microsoft.HDInsight.Net.Http.Formatting.Formatting.XmlMediaTypeFormatter.WriterSettings">
            <summary>
            Gets the <see cref="T:System.Xml.XmlWriterSettings"/> to be used while writing.
            </summary>
        </member>
        <member name="P:Microsoft.HDInsight.Net.Http.Formatting.Formatting.XmlMediaTypeFormatter.MaxDepth">
            <summary>
            Gets or sets the maximum depth allowed by this formatter.
            </summary>
        </member>
        <member name="T:Microsoft.HDInsight.Net.Http.Formatting.Formatting.Parsers.FormUrlEncodedParser">
            <summary>
            Buffer-oriented parsing of HTML form URL-ended, also known as <c>application/x-www-form-urlencoded</c>, data. 
            </summary>
        </member>
        <member name="M:Microsoft.HDInsight.Net.Http.Formatting.Formatting.Parsers.FormUrlEncodedParser.#ctor(System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{System.String,System.String}},System.Int64)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.HDInsight.Net.Http.Formatting.Formatting.Parsers.FormUrlEncodedParser"/> class.
            </summary>
            <param name="nameValuePairs">The collection to which name value pairs are added as they are parsed.</param>
            <param name="maxMessageSize">Maximum length of all the individual name value pairs.</param>
        </member>
        <member name="M:Microsoft.HDInsight.Net.Http.Formatting.Formatting.Parsers.FormUrlEncodedParser.ParseBuffer(System.Byte[],System.Int32,System.Int32@,System.Boolean)">
            <summary>
            Parse a buffer of URL form-encoded name-value pairs and add them to the collection.
            Bytes are parsed in a consuming manner from the beginning of the buffer meaning that the same bytes can not be 
            present in the buffer.
            </summary>
            <param name="buffer">Buffer from where data is read</param>
            <param name="bytesReady">Size of buffer</param>
            <param name="bytesConsumed">Offset into buffer</param>
            <param name="isFinal">Indicates whether the end of the URL form-encoded data has been reached.</param>
            <returns>State of the parser. Call this method with new data until it reaches a final state.</returns>
        </member>
        <member name="T:Microsoft.HDInsight.Net.Http.Formatting.Formatting.Parsers.FormUrlEncodedParser.CurrentNameValuePair">
            <summary>
            Maintains information about the current header field being parsed. 
            </summary>
        </member>
        <member name="M:Microsoft.HDInsight.Net.Http.Formatting.Formatting.Parsers.FormUrlEncodedParser.CurrentNameValuePair.CopyTo(System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{System.String,System.String}})">
            <summary>
            Copies current name value pair field to the provided collection instance.
            </summary>
            <param name="nameValuePairs">The collection to copy into.</param>
        </member>
        <member name="M:Microsoft.HDInsight.Net.Http.Formatting.Formatting.Parsers.FormUrlEncodedParser.CurrentNameValuePair.CopyNameOnlyTo(System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{System.String,System.String}})">
            <summary>
            Copies current name-only to the provided collection instance.
            </summary>
            <param name="nameValuePairs">The collection to copy into.</param>
        </member>
        <member name="M:Microsoft.HDInsight.Net.Http.Formatting.Formatting.Parsers.FormUrlEncodedParser.CurrentNameValuePair.Clear">
            <summary>
            Clears this instance.
            </summary>
        </member>
        <member name="P:Microsoft.HDInsight.Net.Http.Formatting.Formatting.Parsers.FormUrlEncodedParser.CurrentNameValuePair.Name">
            <summary>
            Gets the name of the name value pair.
            </summary>
        </member>
        <member name="P:Microsoft.HDInsight.Net.Http.Formatting.Formatting.Parsers.FormUrlEncodedParser.CurrentNameValuePair.Value">
            <summary>
            Gets the value of the name value pair
            </summary>
        </member>
        <member name="T:Microsoft.HDInsight.Net.Http.Formatting.HttpContentExtensions">
            <summary>
            Extension methods to allow strongly typed objects to be read from <see cref="T:System.Net.Http.HttpContent"/> instances.
            </summary>
        </member>
        <member name="M:Microsoft.HDInsight.Net.Http.Formatting.HttpContentExtensions.ReadAsAsync(System.Net.Http.HttpContent,System.Type)">
            <summary>
            Returns a <see cref="T:System.Threading.Tasks.Task"/> that will yield an object of the specified <paramref name="type"/>
            from the <paramref name="content"/> instance.
            </summary>
            <remarks>This override use the built-in collection of formatters.</remarks>
            <param name="content">The <see cref="T:System.Net.Http.HttpContent"/> instance from which to read.</param>
            <param name="type">The type of the object to read.</param>
            <returns>A task object representing reading the content as an object of the specified type.</returns>
        </member>
        <member name="M:Microsoft.HDInsight.Net.Http.Formatting.HttpContentExtensions.ReadAsAsync(System.Net.Http.HttpContent,System.Type,System.Threading.CancellationToken)">
            <summary>
            Returns a <see cref="T:System.Threading.Tasks.Task"/> that will yield an object of the specified <paramref name="type"/>
            from the <paramref name="content"/> instance.
            </summary>
            <remarks>This override use the built-in collection of formatters.</remarks>
            <param name="content">The <see cref="T:System.Net.Http.HttpContent"/> instance from which to read.</param>
            <param name="type">The type of the object to read.</param>
            <param name="cancellationToken">The token to monitor for cancellation requests.</param>
            <returns>A task object representing reading the content as an object of the specified type.</returns>
        </member>
        <member name="M:Microsoft.HDInsight.Net.Http.Formatting.HttpContentExtensions.ReadAsAsync(System.Net.Http.HttpContent,System.Type,System.Collections.Generic.IEnumerable{Microsoft.HDInsight.Net.Http.Formatting.Formatting.MediaTypeFormatter})">
            <summary>
            Returns a <see cref="T:System.Threading.Tasks.Task"/> that will yield an object of the specified <paramref name="type"/>
            from the <paramref name="content"/> instance using one of the provided <paramref name="formatters"/>
            to deserialize the content.
            </summary>
            <param name="content">The <see cref="T:System.Net.Http.HttpContent"/> instance from which to read.</param>
            <param name="type">The type of the object to read.</param>
            <param name="formatters">The collection of <see cref="T:Microsoft.HDInsight.Net.Http.Formatting.Formatting.MediaTypeFormatter"/> instances to use.</param>
            <returns>A task object representing reading the content as an object of the specified type.</returns>
        </member>
        <member name="M:Microsoft.HDInsight.Net.Http.Formatting.HttpContentExtensions.ReadAsAsync(System.Net.Http.HttpContent,System.Type,System.Collections.Generic.IEnumerable{Microsoft.HDInsight.Net.Http.Formatting.Formatting.MediaTypeFormatter},System.Threading.CancellationToken)">
            <summary>
            Returns a <see cref="T:System.Threading.Tasks.Task"/> that will yield an object of the specified <paramref name="type"/>
            from the <paramref name="content"/> instance using one of the provided <paramref name="formatters"/>
            to deserialize the content.
            </summary>
            <param name="content">The <see cref="T:System.Net.Http.HttpContent"/> instance from which to read.</param>
            <param name="type">The type of the object to read.</param>
            <param name="formatters">The collection of <see cref="T:Microsoft.HDInsight.Net.Http.Formatting.Formatting.MediaTypeFormatter"/> instances to use.</param>
            <param name="cancellationToken">The token to monitor for cancellation requests.</param>
            <returns>A task object representing reading the content as an object of the specified type.</returns>
        </member>
        <member name="M:Microsoft.HDInsight.Net.Http.Formatting.HttpContentExtensions.ReadAsAsync(System.Net.Http.HttpContent,System.Type,System.Collections.Generic.IEnumerable{Microsoft.HDInsight.Net.Http.Formatting.Formatting.MediaTypeFormatter},Microsoft.HDInsight.Net.Http.Formatting.Formatting.IFormatterLogger)">
            <summary>
            Returns a <see cref="T:System.Threading.Tasks.Task"/> that will yield an object of the specified <paramref name="type"/>
            from the <paramref name="content"/> instance using one of the provided <paramref name="formatters"/>
            to deserialize the content.
            </summary>
            <param name="content">The <see cref="T:System.Net.Http.HttpContent"/> instance from which to read.</param>
            <param name="type">The type of the object to read.</param>
            <param name="formatters">The collection of <see cref="T:Microsoft.HDInsight.Net.Http.Formatting.Formatting.MediaTypeFormatter"/> instances to use.</param>
            <param name="formatterLogger">The <see cref="T:Microsoft.HDInsight.Net.Http.Formatting.Formatting.IFormatterLogger"/> to log events to.</param>
            <returns>A task object representing reading the content as an object of the specified type.</returns>
        </member>
        <member name="M:Microsoft.HDInsight.Net.Http.Formatting.HttpContentExtensions.ReadAsAsync(System.Net.Http.HttpContent,System.Type,System.Collections.Generic.IEnumerable{Microsoft.HDInsight.Net.Http.Formatting.Formatting.MediaTypeFormatter},Microsoft.HDInsight.Net.Http.Formatting.Formatting.IFormatterLogger,System.Threading.CancellationToken)">
            <summary>
            Returns a <see cref="T:System.Threading.Tasks.Task"/> that will yield an object of the specified <paramref name="type"/>
            from the <paramref name="content"/> instance using one of the provided <paramref name="formatters"/>
            to deserialize the content.
            </summary>
            <param name="content">The <see cref="T:System.Net.Http.HttpContent"/> instance from which to read.</param>
            <param name="type">The type of the object to read.</param>
            <param name="formatters">The collection of <see cref="T:Microsoft.HDInsight.Net.Http.Formatting.Formatting.MediaTypeFormatter"/> instances to use.</param>
            <param name="formatterLogger">The <see cref="T:Microsoft.HDInsight.Net.Http.Formatting.Formatting.IFormatterLogger"/> to log events to.</param>
            <param name="cancellationToken">The token to monitor for cancellation requests.</param>
            <returns>A task object representing reading the content as an object of the specified type.</returns>
        </member>
        <member name="M:Microsoft.HDInsight.Net.Http.Formatting.HttpContentExtensions.ReadAsAsync``1(System.Net.Http.HttpContent)">
            <summary>
            Returns a <see cref="T:System.Threading.Tasks.Task"/> that will yield an object of the specified
            type <typeparamref name="T"/> from the <paramref name="content"/> instance.
            </summary>
            <remarks>This override use the built-in collection of formatters.</remarks>
            <typeparam name="T">The type of the object to read.</typeparam>
            <param name="content">The <see cref="T:System.Net.Http.HttpContent"/> instance from which to read.</param>
            <returns>A task object representing reading the content as an object of the specified type.</returns>
        </member>
        <member name="M:Microsoft.HDInsight.Net.Http.Formatting.HttpContentExtensions.ReadAsAsync``1(System.Net.Http.HttpContent,System.Threading.CancellationToken)">
            <summary>
            Returns a <see cref="T:System.Threading.Tasks.Task"/> that will yield an object of the specified
            type <typeparamref name="T"/> from the <paramref name="content"/> instance.
            </summary>
            <remarks>This override use the built-in collection of formatters.</remarks>
            <typeparam name="T">The type of the object to read.</typeparam>
            <param name="content">The <see cref="T:System.Net.Http.HttpContent"/> instance from which to read.</param>
            <param name="cancellationToken">The token to monitor for cancellation requests.</param>
            <returns>A task object representing reading the content as an object of the specified type.</returns>
        </member>
        <member name="M:Microsoft.HDInsight.Net.Http.Formatting.HttpContentExtensions.ReadAsAsync``1(System.Net.Http.HttpContent,System.Collections.Generic.IEnumerable{Microsoft.HDInsight.Net.Http.Formatting.Formatting.MediaTypeFormatter})">
            <summary>
            Returns a <see cref="T:System.Threading.Tasks.Task"/> that will yield an object of the specified
            type <typeparamref name="T"/> from the <paramref name="content"/> instance.
            </summary>
            <typeparam name="T">The type of the object to read.</typeparam>
            <param name="content">The <see cref="T:System.Net.Http.HttpContent"/> instance from which to read.</param>
            <param name="formatters">The collection of <see cref="T:Microsoft.HDInsight.Net.Http.Formatting.Formatting.MediaTypeFormatter"/> instances to use.</param>
            <returns>A task object representing reading the content as an object of the specified type.</returns>
        </member>
        <member name="M:Microsoft.HDInsight.Net.Http.Formatting.HttpContentExtensions.ReadAsAsync``1(System.Net.Http.HttpContent,System.Collections.Generic.IEnumerable{Microsoft.HDInsight.Net.Http.Formatting.Formatting.MediaTypeFormatter},System.Threading.CancellationToken)">
            <summary>
            Returns a <see cref="T:System.Threading.Tasks.Task"/> that will yield an object of the specified
            type <typeparamref name="T"/> from the <paramref name="content"/> instance.
            </summary>
            <typeparam name="T">The type of the object to read.</typeparam>
            <param name="content">The <see cref="T:System.Net.Http.HttpContent"/> instance from which to read.</param>
            <param name="formatters">The collection of <see cref="T:Microsoft.HDInsight.Net.Http.Formatting.Formatting.MediaTypeFormatter"/> instances to use.</param>
            <param name="cancellationToken">The token to monitor for cancellation requests.</param>
            <returns>A task object representing reading the content as an object of the specified type.</returns>
        </member>
        <member name="M:Microsoft.HDInsight.Net.Http.Formatting.HttpContentExtensions.ReadAsAsync``1(System.Net.Http.HttpContent,System.Collections.Generic.IEnumerable{Microsoft.HDInsight.Net.Http.Formatting.Formatting.MediaTypeFormatter},Microsoft.HDInsight.Net.Http.Formatting.Formatting.IFormatterLogger)">
            <summary>
            Returns a <see cref="T:System.Threading.Tasks.Task"/> that will yield an object of the specified
            type <typeparamref name="T"/> from the <paramref name="content"/> instance.
            </summary>
            <typeparam name="T">The type of the object to read.</typeparam>
            <param name="content">The <see cref="T:System.Net.Http.HttpContent"/> instance from which to read.</param>
            <param name="formatters">The collection of <see cref="T:Microsoft.HDInsight.Net.Http.Formatting.Formatting.MediaTypeFormatter"/> instances to use.</param>
            <param name="formatterLogger">The <see cref="T:Microsoft.HDInsight.Net.Http.Formatting.Formatting.IFormatterLogger"/> to log events to.</param>
            <returns>A task object representing reading the content as an object of the specified type.</returns>
        </member>
        <member name="M:Microsoft.HDInsight.Net.Http.Formatting.HttpContentExtensions.ReadAsAsync``1(System.Net.Http.HttpContent,System.Collections.Generic.IEnumerable{Microsoft.HDInsight.Net.Http.Formatting.Formatting.MediaTypeFormatter},Microsoft.HDInsight.Net.Http.Formatting.Formatting.IFormatterLogger,System.Threading.CancellationToken)">
            <summary>
            Returns a <see cref="T:System.Threading.Tasks.Task"/> that will yield an object of the specified
            type <typeparamref name="T"/> from the <paramref name="content"/> instance.
            </summary>
            <typeparam name="T">The type of the object to read.</typeparam>
            <param name="content">The <see cref="T:System.Net.Http.HttpContent"/> instance from which to read.</param>
            <param name="formatters">The collection of <see cref="T:Microsoft.HDInsight.Net.Http.Formatting.Formatting.MediaTypeFormatter"/> instances to use.</param>
            <param name="formatterLogger">The <see cref="T:Microsoft.HDInsight.Net.Http.Formatting.Formatting.IFormatterLogger"/> to log events to.</param>
            <param name="cancellationToken">The token to monitor for cancellation requests.</param>
            <returns>A task object representing reading the content as an object of the specified type.</returns>
        </member>
        <member name="T:Microsoft.HDInsight.Net.Http.Formatting.HttpContentMessageExtensions">
            <summary>
            Extension methods to read <see cref="T:System.Net.Http.HttpRequestMessage"/> and <see cref="T:System.Net.Http.HttpResponseMessage"/> entities from <see cref="T:System.Net.Http.HttpContent"/> instances.
            </summary>
        </member>
        <member name="M:Microsoft.HDInsight.Net.Http.Formatting.HttpContentMessageExtensions.IsHttpRequestMessageContent(System.Net.Http.HttpContent)">
            <summary>
            Determines whether the specified content is HTTP request message content.
            </summary>
            <param name="content">The content.</param>
            <returns>
              <c>true</c> if the specified content is HTTP message content; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Microsoft.HDInsight.Net.Http.Formatting.HttpContentMessageExtensions.IsHttpResponseMessageContent(System.Net.Http.HttpContent)">
            <summary>
            Determines whether the specified content is HTTP response message content.
            </summary>
            <param name="content">The content.</param>
            <returns>
              <c>true</c> if the specified content is HTTP message content; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Microsoft.HDInsight.Net.Http.Formatting.HttpContentMessageExtensions.ReadAsHttpRequestMessageAsync(System.Net.Http.HttpContent)">
            <summary>
            Read the <see cref="T:System.Net.Http.HttpContent"/> as an <see cref="T:System.Net.Http.HttpRequestMessage"/>.
            </summary>
            <param name="content">The content to read.</param>
            <returns>A task object representing reading the content as an <see cref="T:System.Net.Http.HttpRequestMessage"/>.</returns>
        </member>
        <member name="M:Microsoft.HDInsight.Net.Http.Formatting.HttpContentMessageExtensions.ReadAsHttpRequestMessageAsync(System.Net.Http.HttpContent,System.Threading.CancellationToken)">
            <summary>
            Read the <see cref="T:System.Net.Http.HttpContent"/> as an <see cref="T:System.Net.Http.HttpRequestMessage"/>.
            </summary>
            <param name="content">The content to read.</param>
            <param name="cancellationToken">The token to monitor for cancellation requests.</param>
            <returns>A task object representing reading the content as an <see cref="T:System.Net.Http.HttpRequestMessage"/>.</returns>
        </member>
        <member name="M:Microsoft.HDInsight.Net.Http.Formatting.HttpContentMessageExtensions.ReadAsHttpRequestMessageAsync(System.Net.Http.HttpContent,System.String)">
            <summary>
            Read the <see cref="T:System.Net.Http.HttpContent"/> as an <see cref="T:System.Net.Http.HttpRequestMessage"/>.
            </summary>
            <param name="content">The content to read.</param>
            <param name="uriScheme">The URI scheme to use for the request URI.</param>
            <returns>A task object representing reading the content as an <see cref="T:System.Net.Http.HttpRequestMessage"/>.</returns>
        </member>
        <member name="M:Microsoft.HDInsight.Net.Http.Formatting.HttpContentMessageExtensions.ReadAsHttpRequestMessageAsync(System.Net.Http.HttpContent,System.String,System.Threading.CancellationToken)">
            <summary>
            Read the <see cref="T:System.Net.Http.HttpContent"/> as an <see cref="T:System.Net.Http.HttpRequestMessage"/>.
            </summary>
            <param name="content">The content to read.</param>
            <param name="uriScheme">The URI scheme to use for the request URI.</param>
            <param name="cancellationToken">The token to monitor for cancellation requests.</param>
            <returns>A task object representing reading the content as an <see cref="T:System.Net.Http.HttpRequestMessage"/>.</returns>
        </member>
        <member name="M:Microsoft.HDInsight.Net.Http.Formatting.HttpContentMessageExtensions.ReadAsHttpRequestMessageAsync(System.Net.Http.HttpContent,System.String,System.Int32)">
            <summary>
            Read the <see cref="T:System.Net.Http.HttpContent"/> as an <see cref="T:System.Net.Http.HttpRequestMessage"/>.
            </summary>
            <param name="content">The content to read.</param>
            <param name="uriScheme">The URI scheme to use for the request URI (the 
            URI scheme is not actually part of the HTTP Request URI and so must be provided externally).</param>
            <param name="bufferSize">Size of the buffer.</param>
            <returns>A task object representing reading the content as an <see cref="T:System.Net.Http.HttpRequestMessage"/>.</returns>
        </member>
        <member name="M:Microsoft.HDInsight.Net.Http.Formatting.HttpContentMessageExtensions.ReadAsHttpRequestMessageAsync(System.Net.Http.HttpContent,System.String,System.Int32,System.Threading.CancellationToken)">
            <summary>
            Read the <see cref="T:System.Net.Http.HttpContent"/> as an <see cref="T:System.Net.Http.HttpRequestMessage"/>.
            </summary>
            <param name="content">The content to read.</param>
            <param name="uriScheme">The URI scheme to use for the request URI (the 
            URI scheme is not actually part of the HTTP Request URI and so must be provided externally).</param>
            <param name="bufferSize">Size of the buffer.</param>
            <param name="cancellationToken">The token to monitor for cancellation requests.</param>
            <returns>A task object representing reading the content as an <see cref="T:System.Net.Http.HttpRequestMessage"/>.</returns>
        </member>
        <member name="M:Microsoft.HDInsight.Net.Http.Formatting.HttpContentMessageExtensions.ReadAsHttpRequestMessageAsync(System.Net.Http.HttpContent,System.String,System.Int32,System.Int32)">
            <summary>
            Read the <see cref="T:System.Net.Http.HttpContent"/> as an <see cref="T:System.Net.Http.HttpRequestMessage"/>.
            </summary>
            <param name="content">The content to read.</param>
            <param name="uriScheme">The URI scheme to use for the request URI (the 
            URI scheme is not actually part of the HTTP Request URI and so must be provided externally).</param>
            <param name="bufferSize">Size of the buffer.</param>
            <param name="maxHeaderSize">The max length of the HTTP header.</param>
            <returns>A task object representing reading the content as an <see cref="T:System.Net.Http.HttpRequestMessage"/>.</returns>
        </member>
        <member name="M:Microsoft.HDInsight.Net.Http.Formatting.HttpContentMessageExtensions.ReadAsHttpRequestMessageAsync(System.Net.Http.HttpContent,System.String,System.Int32,System.Int32,System.Threading.CancellationToken)">
            <summary>
            Read the <see cref="T:System.Net.Http.HttpContent"/> as an <see cref="T:System.Net.Http.HttpRequestMessage"/>.
            </summary>
            <param name="content">The content to read.</param>
            <param name="uriScheme">The URI scheme to use for the request URI (the 
            URI scheme is not actually part of the HTTP Request URI and so must be provided externally).</param>
            <param name="bufferSize">Size of the buffer.</param>
            <param name="maxHeaderSize">The max length of the HTTP header.</param>
            <param name="cancellationToken">The token to monitor for cancellation requests.</param>
            <returns>A task object representing reading the content as an <see cref="T:System.Net.Http.HttpRequestMessage"/>.</returns>
        </member>
        <member name="M:Microsoft.HDInsight.Net.Http.Formatting.HttpContentMessageExtensions.ReadAsHttpResponseMessageAsync(System.Net.Http.HttpContent)">
            <summary>
            Read the <see cref="T:System.Net.Http.HttpContent"/> as an <see cref="T:System.Net.Http.HttpResponseMessage"/>.
            </summary>
            <param name="content">The content to read.</param>
            <returns>A task object representing reading the content as an <see cref="T:System.Net.Http.HttpResponseMessage"/>.</returns>
        </member>
        <member name="M:Microsoft.HDInsight.Net.Http.Formatting.HttpContentMessageExtensions.ReadAsHttpResponseMessageAsync(System.Net.Http.HttpContent,System.Threading.CancellationToken)">
            <summary>
            Read the <see cref="T:System.Net.Http.HttpContent"/> as an <see cref="T:System.Net.Http.HttpResponseMessage"/>.
            </summary>
            <param name="content">The content to read.</param>
            <param name="cancellationToken">The token to monitor for cancellation requests.</param>
            <returns>A task object representing reading the content as an <see cref="T:System.Net.Http.HttpResponseMessage"/>.</returns>
        </member>
        <member name="M:Microsoft.HDInsight.Net.Http.Formatting.HttpContentMessageExtensions.ReadAsHttpResponseMessageAsync(System.Net.Http.HttpContent,System.Int32)">
            <summary>
            Read the <see cref="T:System.Net.Http.HttpContent"/> as an <see cref="T:System.Net.Http.HttpResponseMessage"/>.
            </summary>
            <param name="content">The content to read.</param>
            <param name="bufferSize">Size of the buffer.</param>
            <returns>A task object representing reading the content as an <see cref="T:System.Net.Http.HttpResponseMessage"/>.</returns>
        </member>
        <member name="M:Microsoft.HDInsight.Net.Http.Formatting.HttpContentMessageExtensions.ReadAsHttpResponseMessageAsync(System.Net.Http.HttpContent,System.Int32,System.Threading.CancellationToken)">
            <summary>
            Read the <see cref="T:System.Net.Http.HttpContent"/> as an <see cref="T:System.Net.Http.HttpResponseMessage"/>.
            </summary>
            <param name="content">The content to read.</param>
            <param name="bufferSize">Size of the buffer.</param>
            <param name="cancellationToken">The token to monitor for cancellation requests.</param>
            <returns>A task object representing reading the content as an <see cref="T:System.Net.Http.HttpResponseMessage"/>.</returns>
        </member>
        <member name="M:Microsoft.HDInsight.Net.Http.Formatting.HttpContentMessageExtensions.ReadAsHttpResponseMessageAsync(System.Net.Http.HttpContent,System.Int32,System.Int32)">
            <summary>
            Read the <see cref="T:System.Net.Http.HttpContent"/> as an <see cref="T:System.Net.Http.HttpResponseMessage"/>.
            </summary>
            <param name="content">The content to read.</param>
            <param name="bufferSize">Size of the buffer.</param>
            <param name="maxHeaderSize">The max length of the HTTP header.</param>
            <returns>A task object representing reading the content as an <see cref="T:System.Net.Http.HttpResponseMessage"/>.</returns>
        </member>
        <member name="M:Microsoft.HDInsight.Net.Http.Formatting.HttpContentMessageExtensions.ReadAsHttpResponseMessageAsync(System.Net.Http.HttpContent,System.Int32,System.Int32,System.Threading.CancellationToken)">
            <summary>
            Read the <see cref="T:System.Net.Http.HttpContent"/> as an <see cref="T:System.Net.Http.HttpResponseMessage"/>.
            </summary>
            <param name="content">The content to read.</param>
            <param name="bufferSize">Size of the buffer.</param>
            <param name="maxHeaderSize">The max length of the HTTP header.</param>
            <param name="cancellationToken">The token to monitor for cancellation requests.</param>
            <returns>The parsed <see cref="T:System.Net.Http.HttpResponseMessage"/> instance.</returns>
        </member>
        <member name="M:Microsoft.HDInsight.Net.Http.Formatting.HttpContentMessageExtensions.CreateRequestUri(System.String,Microsoft.HDInsight.Net.Http.Formatting.HttpUnsortedRequest)">
            <summary>
            Creates the request URI by combining scheme (provided) with parsed values of
            host and path.
            </summary>
            <param name="uriScheme">The URI scheme to use for the request URI.</param>
            <param name="httpRequest">The unsorted HTTP request.</param>
            <returns>A fully qualified request URI.</returns>
        </member>
        <member name="M:Microsoft.HDInsight.Net.Http.Formatting.HttpContentMessageExtensions.CreateHeaderFields(System.Net.Http.Headers.HttpHeaders,System.Net.Http.Headers.HttpHeaders,System.IO.Stream,System.Int32)">
            <summary>
            Copies the unsorted header fields to a sorted collection.
            </summary>
            <param name="source">The unsorted source headers</param>
            <param name="destination">The destination <see cref="T:System.Net.Http.Headers.HttpRequestHeaders"/> or <see cref="T:System.Net.Http.Headers.HttpResponseHeaders"/>.</param>
            <param name="contentStream">The input <see cref="T:System.IO.Stream"/> used to form any <see cref="T:System.Net.Http.HttpContent"/> being part of this HTTP request.</param>
            <param name="rewind">Start location of any request entity within the <paramref name="contentStream"/>.</param>
            <returns>An <see cref="T:System.Net.Http.HttpContent"/> instance if header fields contained and <see cref="T:System.Net.Http.Headers.HttpContentHeaders"/>.</returns>
        </member>
        <member name="M:Microsoft.HDInsight.Net.Http.Formatting.HttpContentMessageExtensions.CreateHttpRequestMessage(System.String,Microsoft.HDInsight.Net.Http.Formatting.HttpUnsortedRequest,System.IO.Stream,System.Int32)">
            <summary>
            Creates an <see cref="T:System.Net.Http.HttpRequestMessage"/> based on information provided in <see cref="T:Microsoft.HDInsight.Net.Http.Formatting.HttpUnsortedRequest"/>.
            </summary>
            <param name="uriScheme">The URI scheme to use for the request URI.</param>
            <param name="httpRequest">The unsorted HTTP request.</param>
            <param name="contentStream">The input <see cref="T:System.IO.Stream"/> used to form any <see cref="T:System.Net.Http.HttpContent"/> being part of this HTTP request.</param>
            <param name="rewind">Start location of any request entity within the <paramref name="contentStream"/>.</param>
            <returns>A newly created <see cref="T:System.Net.Http.HttpRequestMessage"/> instance.</returns>
        </member>
        <member name="M:Microsoft.HDInsight.Net.Http.Formatting.HttpContentMessageExtensions.CreateHttpResponseMessage(Microsoft.HDInsight.Net.Http.Formatting.HttpUnsortedResponse,System.IO.Stream,System.Int32)">
            <summary>
            Creates an <see cref="T:System.Net.Http.HttpResponseMessage"/> based on information provided in <see cref="T:Microsoft.HDInsight.Net.Http.Formatting.HttpUnsortedResponse"/>.
            </summary>
            <param name="httpResponse">The unsorted HTTP Response.</param>
            <param name="contentStream">The input <see cref="T:System.IO.Stream"/> used to form any <see cref="T:System.Net.Http.HttpContent"/> being part of this HTTP Response.</param>
            <param name="rewind">Start location of any Response entity within the <paramref name="contentStream"/>.</param>
            <returns>A newly created <see cref="T:System.Net.Http.HttpResponseMessage"/> instance.</returns>
        </member>
        <member name="T:Microsoft.HDInsight.Net.Http.Formatting.HttpContentMultipartExtensions">
            <summary>
            Extension methods to read MIME multipart entities from <see cref="T:System.Net.Http.HttpContent"/> instances.
            </summary>
        </member>
        <member name="M:Microsoft.HDInsight.Net.Http.Formatting.HttpContentMultipartExtensions.IsMimeMultipartContent(System.Net.Http.HttpContent)">
            <summary>
            Determines whether the specified content is MIME multipart content.
            </summary>
            <param name="content">The content.</param>
            <returns>
              <c>true</c> if the specified content is MIME multipart content; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Microsoft.HDInsight.Net.Http.Formatting.HttpContentMultipartExtensions.IsMimeMultipartContent(System.Net.Http.HttpContent,System.String)">
            <summary>
            Determines whether the specified content is MIME multipart content with the 
            specified subtype. For example, the subtype <c>mixed</c> would match content
            with a content type of <c>multipart/mixed</c>. 
            </summary>
            <param name="content">The content.</param>
            <param name="subtype">The MIME multipart subtype to match.</param>
            <returns>
              <c>true</c> if the specified content is MIME multipart content with the specified subtype; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Microsoft.HDInsight.Net.Http.Formatting.HttpContentMultipartExtensions.ReadAsMultipartAsync(System.Net.Http.HttpContent)">
            <summary>
            Reads all body parts within a MIME multipart message into memory using a <see cref="T:Microsoft.HDInsight.Net.Http.Formatting.MultipartMemoryStreamProvider"/>.
            </summary>
            <param name="content">An existing <see cref="T:System.Net.Http.HttpContent"/> instance to use for the object's content.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> representing the tasks of getting the result of reading the MIME content.</returns>
        </member>
        <member name="M:Microsoft.HDInsight.Net.Http.Formatting.HttpContentMultipartExtensions.ReadAsMultipartAsync(System.Net.Http.HttpContent,System.Threading.CancellationToken)">
            <summary>
            Reads all body parts within a MIME multipart message into memory using a <see cref="T:Microsoft.HDInsight.Net.Http.Formatting.MultipartMemoryStreamProvider"/>.
            </summary>
            <param name="content">An existing <see cref="T:System.Net.Http.HttpContent"/> instance to use for the object's content.</param>
            <param name="cancellationToken">The token to monitor for cancellation requests.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> representing the tasks of getting the result of reading the MIME content.</returns>
        </member>
        <member name="M:Microsoft.HDInsight.Net.Http.Formatting.HttpContentMultipartExtensions.ReadAsMultipartAsync``1(System.Net.Http.HttpContent,``0)">
            <summary>
            Reads all body parts within a MIME multipart message using the provided <see cref="T:Microsoft.HDInsight.Net.Http.Formatting.MultipartStreamProvider"/> instance
            to determine where the contents of each body part is written. 
            </summary>
            <typeparam name="T">The <see cref="T:Microsoft.HDInsight.Net.Http.Formatting.MultipartStreamProvider"/> with which to process the data.</typeparam>
            <param name="content">An existing <see cref="T:System.Net.Http.HttpContent"/> instance to use for the object's content.</param>
            <param name="streamProvider">A stream provider providing output streams for where to write body parts as they are parsed.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> representing the tasks of getting the result of reading the MIME content.</returns>
        </member>
        <member name="M:Microsoft.HDInsight.Net.Http.Formatting.HttpContentMultipartExtensions.ReadAsMultipartAsync``1(System.Net.Http.HttpContent,``0,System.Threading.CancellationToken)">
            <summary>
            Reads all body parts within a MIME multipart message using the provided <see cref="T:Microsoft.HDInsight.Net.Http.Formatting.MultipartStreamProvider"/> instance
            to determine where the contents of each body part is written. 
            </summary>
            <typeparam name="T">The <see cref="T:Microsoft.HDInsight.Net.Http.Formatting.MultipartStreamProvider"/> with which to process the data.</typeparam>
            <param name="content">An existing <see cref="T:System.Net.Http.HttpContent"/> instance to use for the object's content.</param>
            <param name="streamProvider">A stream provider providing output streams for where to write body parts as they are parsed.</param>
            <param name="cancellationToken">The token to monitor for cancellation requests.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> representing the tasks of getting the result of reading the MIME content.</returns>
        </member>
        <member name="M:Microsoft.HDInsight.Net.Http.Formatting.HttpContentMultipartExtensions.ReadAsMultipartAsync``1(System.Net.Http.HttpContent,``0,System.Int32)">
            <summary>
            Reads all body parts within a MIME multipart message using the provided <see cref="T:Microsoft.HDInsight.Net.Http.Formatting.MultipartStreamProvider"/> instance
            to determine where the contents of each body part is written and <paramref name="bufferSize"/> as read buffer size.
            </summary>
            <typeparam name="T">The <see cref="T:Microsoft.HDInsight.Net.Http.Formatting.MultipartStreamProvider"/> with which to process the data.</typeparam>
            <param name="content">An existing <see cref="T:System.Net.Http.HttpContent"/> instance to use for the object's content.</param>
            <param name="streamProvider">A stream provider providing output streams for where to write body parts as they are parsed.</param>
            <param name="bufferSize">Size of the buffer used to read the contents.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> representing the tasks of getting the result of reading the MIME content.</returns>
        </member>
        <member name="M:Microsoft.HDInsight.Net.Http.Formatting.HttpContentMultipartExtensions.ReadAsMultipartAsync``1(System.Net.Http.HttpContent,``0,System.Int32,System.Threading.CancellationToken)">
            <summary>
            Reads all body parts within a MIME multipart message using the provided <see cref="T:Microsoft.HDInsight.Net.Http.Formatting.MultipartStreamProvider"/> instance
            to determine where the contents of each body part is written and <paramref name="bufferSize"/> as read buffer size.
            </summary>
            <typeparam name="T">The <see cref="T:Microsoft.HDInsight.Net.Http.Formatting.MultipartStreamProvider"/> with which to process the data.</typeparam>
            <param name="content">An existing <see cref="T:System.Net.Http.HttpContent"/> instance to use for the object's content.</param>
            <param name="streamProvider">A stream provider providing output streams for where to write body parts as they are parsed.</param>
            <param name="bufferSize">Size of the buffer used to read the contents.</param>
            <param name="cancellationToken">The token to monitor for cancellation requests.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> representing the tasks of getting the result of reading the MIME content.</returns>
        </member>
        <member name="T:Microsoft.HDInsight.Net.Http.Formatting.HttpContentMultipartExtensions.MultipartAsyncContext">
            <summary>
            Managing state for asynchronous read and write operations
            </summary>
        </member>
        <member name="P:Microsoft.HDInsight.Net.Http.Formatting.HttpContentMultipartExtensions.MultipartAsyncContext.ContentStream">
            <summary>
            Gets the <see cref="T:System.IO.Stream"/> that we read from.
            </summary>
        </member>
        <member name="P:Microsoft.HDInsight.Net.Http.Formatting.HttpContentMultipartExtensions.MultipartAsyncContext.Result">
            <summary>
            Gets the collection of parsed <see cref="T:System.Net.Http.HttpContent"/> instances.
            </summary>
        </member>
        <member name="P:Microsoft.HDInsight.Net.Http.Formatting.HttpContentMultipartExtensions.MultipartAsyncContext.Data">
            <summary>
            The data buffer that we use for reading data from the input stream into before processing.
            </summary>
        </member>
        <member name="P:Microsoft.HDInsight.Net.Http.Formatting.HttpContentMultipartExtensions.MultipartAsyncContext.MimeParser">
            <summary>
            Gets the MIME parser instance used to parse the data
            </summary>
        </member>
        <member name="T:Microsoft.HDInsight.Net.Http.Formatting.HttpMessageContent">
            <summary>
            Derived <see cref="T:System.Net.Http.HttpContent"/> class which can encapsulate an <see cref="P:Microsoft.HDInsight.Net.Http.Formatting.HttpMessageContent.HttpResponseMessage"/>
            or an <see cref="P:Microsoft.HDInsight.Net.Http.Formatting.HttpMessageContent.HttpRequestMessage"/> as an entity with media type "application/http".
            </summary>
        </member>
        <member name="M:Microsoft.HDInsight.Net.Http.Formatting.HttpMessageContent.#ctor(System.Net.Http.HttpRequestMessage)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.HDInsight.Net.Http.Formatting.HttpMessageContent"/> class encapsulating an
            <see cref="P:Microsoft.HDInsight.Net.Http.Formatting.HttpMessageContent.HttpRequestMessage"/>.
            </summary>
            <param name="httpRequest">The <see cref="P:Microsoft.HDInsight.Net.Http.Formatting.HttpMessageContent.HttpResponseMessage"/> instance to encapsulate.</param>
        </member>
        <member name="M:Microsoft.HDInsight.Net.Http.Formatting.HttpMessageContent.#ctor(System.Net.Http.HttpResponseMessage)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.HDInsight.Net.Http.Formatting.HttpMessageContent"/> class encapsulating an
            <see cref="P:Microsoft.HDInsight.Net.Http.Formatting.HttpMessageContent.HttpResponseMessage"/>.
            </summary>
            <param name="httpResponse">The <see cref="P:Microsoft.HDInsight.Net.Http.Formatting.HttpMessageContent.HttpResponseMessage"/> instance to encapsulate.</param>
        </member>
        <member name="M:Microsoft.HDInsight.Net.Http.Formatting.HttpMessageContent.ValidateHttpMessageContent(System.Net.Http.HttpContent,System.Boolean,System.Boolean)">
            <summary>
            Validates whether the content contains an HTTP Request or an HTTP Response.
            </summary>
            <param name="content">The content to validate.</param>
            <param name="isRequest">if set to <c>true</c> if the content is either an HTTP Request or an HTTP Response.</param>
            <param name="throwOnError">Indicates whether validation failure should result in an <see cref="T:System.Exception"/> or not.</param>
            <returns><c>true</c> if content is either an HTTP Request or an HTTP Response</returns>
        </member>
        <member name="M:Microsoft.HDInsight.Net.Http.Formatting.HttpMessageContent.SerializeToStreamAsync(System.IO.Stream,System.Net.TransportContext)">
            <summary>
            Asynchronously serializes the object's content to the given <paramref name="stream"/>.
            </summary>
            <param name="stream">The <see cref="T:System.IO.Stream"/> to which to write.</param>
            <param name="context">The associated <see cref="T:System.Net.TransportContext"/>.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> instance that is asynchronously serializing the object's content.</returns>
        </member>
        <member name="M:Microsoft.HDInsight.Net.Http.Formatting.HttpMessageContent.TryComputeLength(System.Int64@)">
            <summary>
            Computes the length of the stream if possible.
            </summary>
            <param name="length">The computed length of the stream.</param>
            <returns><c>true</c> if the length has been computed; otherwise <c>false</c>.</returns>
        </member>
        <member name="M:Microsoft.HDInsight.Net.Http.Formatting.HttpMessageContent.Dispose(System.Boolean)">
            <summary>
            Releases unmanaged and - optionally - managed resources
            </summary>
            <param name="disposing"><c>true</c> to release both managed and unmanaged resources; <c>false</c> to release only unmanaged resources.</param>
        </member>
        <member name="M:Microsoft.HDInsight.Net.Http.Formatting.HttpMessageContent.SerializeRequestLine(System.Text.StringBuilder,System.Net.Http.HttpRequestMessage)">
            <summary>
            Serializes the HTTP request line.
            </summary>
            <param name="message">Where to write the request line.</param>
            <param name="httpRequest">The HTTP request.</param>
        </member>
        <member name="M:Microsoft.HDInsight.Net.Http.Formatting.HttpMessageContent.SerializeStatusLine(System.Text.StringBuilder,System.Net.Http.HttpResponseMessage)">
            <summary>
            Serializes the HTTP status line.
            </summary>
            <param name="message">Where to write the status line.</param>
            <param name="httpResponse">The HTTP response.</param>
        </member>
        <member name="M:Microsoft.HDInsight.Net.Http.Formatting.HttpMessageContent.SerializeHeaderFields(System.Text.StringBuilder,System.Net.Http.Headers.HttpHeaders)">
            <summary>
            Serializes the header fields.
            </summary>
            <param name="message">Where to write the status line.</param>
            <param name="headers">The headers to write.</param>
        </member>
        <member name="P:Microsoft.HDInsight.Net.Http.Formatting.HttpMessageContent.HttpRequestMessage">
            <summary>
            Gets the HTTP request message.
            </summary>
        </member>
        <member name="P:Microsoft.HDInsight.Net.Http.Formatting.HttpMessageContent.HttpResponseMessage">
            <summary>
            Gets the HTTP response message.
            </summary>
        </member>
        <member name="T:Microsoft.HDInsight.Net.Http.Formatting.Formatting.Parsers.HttpRequestHeaderParser">
            <summary>
            The <see cref="T:Microsoft.HDInsight.Net.Http.Formatting.Formatting.Parsers.HttpRequestHeaderParser"/> combines <see cref="T:Microsoft.HDInsight.Net.Http.Formatting.Formatting.Parsers.HttpRequestLineParser"/> for parsing the HTTP Request Line  
            and <see cref="T:Microsoft.HDInsight.Net.Http.Formatting.Formatting.Parsers.InternetMessageFormatHeaderParser"/> for parsing each header field. 
            </summary>
        </member>
        <member name="M:Microsoft.HDInsight.Net.Http.Formatting.Formatting.Parsers.HttpRequestHeaderParser.#ctor(Microsoft.HDInsight.Net.Http.Formatting.HttpUnsortedRequest)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.HDInsight.Net.Http.Formatting.Formatting.Parsers.HttpRequestHeaderParser"/> class.
            </summary>
            <param name="httpRequest">The parsed HTTP request without any header sorting.</param>
        </member>
        <member name="M:Microsoft.HDInsight.Net.Http.Formatting.Formatting.Parsers.HttpRequestHeaderParser.#ctor(Microsoft.HDInsight.Net.Http.Formatting.HttpUnsortedRequest,System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.HDInsight.Net.Http.Formatting.Formatting.Parsers.HttpRequestHeaderParser"/> class.
            </summary>
            <param name="httpRequest">The parsed HTTP request without any header sorting.</param>
            <param name="maxRequestLineSize">The max length of the HTTP request line.</param>
            <param name="maxHeaderSize">The max length of the HTTP header.</param>
        </member>
        <member name="M:Microsoft.HDInsight.Net.Http.Formatting.Formatting.Parsers.HttpRequestHeaderParser.ParseBuffer(System.Byte[],System.Int32,System.Int32@)">
            <summary>
            Parse an HTTP request header and fill in the <see cref="T:System.Net.Http.HttpRequestMessage"/> instance.
            </summary>
            <param name="buffer">Request buffer from where request is read</param>
            <param name="bytesReady">Size of request buffer</param>
            <param name="bytesConsumed">Offset into request buffer</param>
            <returns>State of the parser.</returns>
        </member>
        <member name="T:Microsoft.HDInsight.Net.Http.Formatting.Formatting.Parsers.HttpRequestLineParser">
            <summary>
            HTTP Request Line parser for parsing the first line (the request line) in an HTTP request.
            </summary>
        </member>
        <member name="M:Microsoft.HDInsight.Net.Http.Formatting.Formatting.Parsers.HttpRequestLineParser.#ctor(Microsoft.HDInsight.Net.Http.Formatting.HttpUnsortedRequest,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.HDInsight.Net.Http.Formatting.Formatting.Parsers.HttpRequestLineParser"/> class.
            </summary>
            <param name="httpRequest"><see cref="T:Microsoft.HDInsight.Net.Http.Formatting.HttpUnsortedRequest"/> instance where the request line properties will be set as they are parsed.</param>
            <param name="maxRequestLineSize">Maximum length of HTTP header.</param>
        </member>
        <member name="M:Microsoft.HDInsight.Net.Http.Formatting.Formatting.Parsers.HttpRequestLineParser.ParseBuffer(System.Byte[],System.Int32,System.Int32@)">
            <summary>
            Parse an HTTP request line. 
            Bytes are parsed in a consuming manner from the beginning of the request buffer meaning that the same bytes can not be 
            present in the request buffer.
            </summary>
            <param name="buffer">Request buffer from where request is read</param>
            <param name="bytesReady">Size of request buffer</param>
            <param name="bytesConsumed">Offset into request buffer</param>
            <returns>State of the parser.</returns>
        </member>
        <member name="T:Microsoft.HDInsight.Net.Http.Formatting.Formatting.Parsers.HttpResponseHeaderParser">
            <summary>
            The <see cref="T:Microsoft.HDInsight.Net.Http.Formatting.Formatting.Parsers.HttpResponseHeaderParser"/> combines <see cref="T:Microsoft.HDInsight.Net.Http.Formatting.Formatting.Parsers.HttpStatusLineParser"/> for parsing the HTTP Status Line  
            and <see cref="T:Microsoft.HDInsight.Net.Http.Formatting.Formatting.Parsers.InternetMessageFormatHeaderParser"/> for parsing each header field. 
            </summary>
        </member>
        <member name="M:Microsoft.HDInsight.Net.Http.Formatting.Formatting.Parsers.HttpResponseHeaderParser.#ctor(Microsoft.HDInsight.Net.Http.Formatting.HttpUnsortedResponse)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.HDInsight.Net.Http.Formatting.Formatting.Parsers.HttpResponseHeaderParser"/> class.
            </summary>
            <param name="httpResponse">The parsed HTTP response without any header sorting.</param>
        </member>
        <member name="M:Microsoft.HDInsight.Net.Http.Formatting.Formatting.Parsers.HttpResponseHeaderParser.#ctor(Microsoft.HDInsight.Net.Http.Formatting.HttpUnsortedResponse,System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.HDInsight.Net.Http.Formatting.Formatting.Parsers.HttpResponseHeaderParser"/> class.
            </summary>
            <param name="httpResponse">The parsed HTTP response without any header sorting.</param>
            <param name="maxResponseLineSize">The max length of the HTTP status line.</param>
            <param name="maxHeaderSize">The max length of the HTTP header.</param>
        </member>
        <member name="M:Microsoft.HDInsight.Net.Http.Formatting.Formatting.Parsers.HttpResponseHeaderParser.ParseBuffer(System.Byte[],System.Int32,System.Int32@)">
            <summary>
            Parse an HTTP response header and fill in the <see cref="T:System.Net.Http.HttpResponseMessage"/> instance.
            </summary>
            <param name="buffer">Response buffer from where response is read</param>
            <param name="bytesReady">Size of response buffer</param>
            <param name="bytesConsumed">Offset into response buffer</param>
            <returns>State of the parser.</returns>
        </member>
        <member name="T:Microsoft.HDInsight.Net.Http.Formatting.Formatting.Parsers.HttpStatusLineParser">
            <summary>
            HTTP Status line parser for parsing the first line (the status line) in an HTTP response.
            </summary>
        </member>
        <member name="M:Microsoft.HDInsight.Net.Http.Formatting.Formatting.Parsers.HttpStatusLineParser.#ctor(Microsoft.HDInsight.Net.Http.Formatting.HttpUnsortedResponse,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.HDInsight.Net.Http.Formatting.Formatting.Parsers.HttpStatusLineParser"/> class.
            </summary>
            <param name="httpResponse"><see cref="T:Microsoft.HDInsight.Net.Http.Formatting.HttpUnsortedResponse"/> instance where the response line properties will be set as they are parsed.</param>
            <param name="maxStatusLineSize">Maximum length of HTTP header.</param>
        </member>
        <member name="M:Microsoft.HDInsight.Net.Http.Formatting.Formatting.Parsers.HttpStatusLineParser.ParseBuffer(System.Byte[],System.Int32,System.Int32@)">
            <summary>
            Parse an HTTP status line. 
            Bytes are parsed in a consuming manner from the beginning of the response buffer meaning that the same bytes can not be 
            present in the response buffer.
            </summary>
            <param name="buffer">Response buffer from where response is read</param>
            <param name="bytesReady">Size of response buffer</param>
            <param name="bytesConsumed">Offset into response buffer</param>
            <returns>State of the parser.</returns>
        </member>
        <member name="T:Microsoft.HDInsight.Net.Http.Formatting.HttpUnsortedHeaders">
            <summary>
            All of the existing non-abstract <see cref="T:System.Net.Http.Headers.HttpHeaders"/> implementations, namely
            <see cref="T:System.Net.Http.Headers.HttpRequestHeaders"/>, <see cref="T:System.Net.Http.Headers.HttpResponseHeaders"/>, and <see cref="T:System.Net.Http.Headers.HttpContentHeaders"/>
            enforce strict rules on what kinds of HTTP header fields can be added to each collection.
            When parsing the "application/http" media type we need to just get the unsorted list. It
            will get sorted later.
            </summary>
        </member>
        <member name="T:Microsoft.HDInsight.Net.Http.Formatting.HttpUnsortedRequest">
            <summary>
            Represents the HTTP Request Line and header parameters parsed by <see cref="T:Microsoft.HDInsight.Net.Http.Formatting.Formatting.Parsers.HttpRequestLineParser"/>
            and <see cref="T:Microsoft.HDInsight.Net.Http.Formatting.Formatting.Parsers.HttpRequestHeaderParser"/>.
            </summary>
        </member>
        <member name="M:Microsoft.HDInsight.Net.Http.Formatting.HttpUnsortedRequest.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.HDInsight.Net.Http.Formatting.HttpUnsortedRequest"/> class.
            </summary>
        </member>
        <member name="P:Microsoft.HDInsight.Net.Http.Formatting.HttpUnsortedRequest.Method">
            <summary>
            Gets or sets the HTTP method.
            </summary>
            <value>
            The HTTP method.
            </value>
        </member>
        <member name="P:Microsoft.HDInsight.Net.Http.Formatting.HttpUnsortedRequest.RequestUri">
            <summary>
            Gets or sets the HTTP request URI portion that is carried in the RequestLine (i.e the URI path + query).
            </summary>
            <value>
            The request URI.
            </value>
        </member>
        <member name="P:Microsoft.HDInsight.Net.Http.Formatting.HttpUnsortedRequest.Version">
            <summary>
            Gets or sets the HTTP version.
            </summary>
            <value>
            The HTTP version.
            </value>
        </member>
        <member name="P:Microsoft.HDInsight.Net.Http.Formatting.HttpUnsortedRequest.HttpHeaders">
            <summary>
            Gets the unsorted HTTP request headers.
            </summary>
        </member>
        <member name="T:Microsoft.HDInsight.Net.Http.Formatting.HttpUnsortedResponse">
            <summary>
            Represents the HTTP Status Line and header parameters parsed by <see cref="T:Microsoft.HDInsight.Net.Http.Formatting.Formatting.Parsers.HttpStatusLineParser"/>
            and <see cref="T:Microsoft.HDInsight.Net.Http.Formatting.Formatting.Parsers.HttpResponseHeaderParser"/>.
            </summary>
        </member>
        <member name="M:Microsoft.HDInsight.Net.Http.Formatting.HttpUnsortedResponse.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.HDInsight.Net.Http.Formatting.HttpUnsortedRequest"/> class.
            </summary>
        </member>
        <member name="P:Microsoft.HDInsight.Net.Http.Formatting.HttpUnsortedResponse.Version">
            <summary>
            Gets or sets the HTTP version.
            </summary>
            <value>
            The HTTP version.
            </value>
        </member>
        <member name="P:Microsoft.HDInsight.Net.Http.Formatting.HttpUnsortedResponse.StatusCode">
            <summary>
            Gets or sets the <see cref="T:System.Net.HttpStatusCode"/>
            </summary>
            <value>
            The HTTP status code
            </value>
        </member>
        <member name="P:Microsoft.HDInsight.Net.Http.Formatting.HttpUnsortedResponse.ReasonPhrase">
            <summary>
            Gets or sets the HTTP reason phrase
            </summary>
            <value>
            The response reason phrase
            </value>
        </member>
        <member name="P:Microsoft.HDInsight.Net.Http.Formatting.HttpUnsortedResponse.HttpHeaders">
            <summary>
            Gets the unsorted HTTP request headers.
            </summary>
        </member>
        <member name="T:Microsoft.HDInsight.Net.Http.Formatting.Formatting.Parsers.InternetMessageFormatHeaderParser">
            <summary>
            Buffer-oriented RFC 5322 style Internet Message Format parser which can be used to pass header 
            fields used in HTTP and MIME message entities. 
            </summary>
        </member>
        <member name="M:Microsoft.HDInsight.Net.Http.Formatting.Formatting.Parsers.InternetMessageFormatHeaderParser.#ctor(System.Net.Http.Headers.HttpHeaders,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.HDInsight.Net.Http.Formatting.Formatting.Parsers.InternetMessageFormatHeaderParser"/> class.
            </summary>
            <param name="headers">Concrete <see cref="T:System.Net.Http.Headers.HttpHeaders"/> instance where header fields are added as they are parsed.</param>
            <param name="maxHeaderSize">Maximum length of complete header containing all the individual header fields.</param>
        </member>
        <member name="M:Microsoft.HDInsight.Net.Http.Formatting.Formatting.Parsers.InternetMessageFormatHeaderParser.ParseBuffer(System.Byte[],System.Int32,System.Int32@)">
            <summary>
            Parse a buffer of RFC 5322 style header fields and add them to the <see cref="T:System.Net.Http.Headers.HttpHeaders"/> collection.
            Bytes are parsed in a consuming manner from the beginning of the buffer meaning that the same bytes can not be 
            present in the buffer.
            </summary>
            <param name="buffer">Request buffer from where request is read</param>
            <param name="bytesReady">Size of request buffer</param>
            <param name="bytesConsumed">Offset into request buffer</param>
            <returns>State of the parser. Call this method with new data until it reaches a final state.</returns>
        </member>
        <member name="T:Microsoft.HDInsight.Net.Http.Formatting.Formatting.Parsers.InternetMessageFormatHeaderParser.CurrentHeaderFieldStore">
            <summary>
            Maintains information about the current header field being parsed. 
            </summary>
        </member>
        <member name="M:Microsoft.HDInsight.Net.Http.Formatting.Formatting.Parsers.InternetMessageFormatHeaderParser.CurrentHeaderFieldStore.CopyTo(System.Net.Http.Headers.HttpHeaders)">
            <summary>
            Copies current header field to the provided <see cref="T:System.Net.Http.Headers.HttpHeaders"/> instance.
            </summary>
            <param name="headers">The headers.</param>
        </member>
        <member name="M:Microsoft.HDInsight.Net.Http.Formatting.Formatting.Parsers.InternetMessageFormatHeaderParser.CurrentHeaderFieldStore.IsEmpty">
            <summary>
            Determines whether this instance is empty.
            </summary>
            <returns>
              <c>true</c> if this instance is empty; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Microsoft.HDInsight.Net.Http.Formatting.Formatting.Parsers.InternetMessageFormatHeaderParser.CurrentHeaderFieldStore.Clear">
            <summary>
            Clears this instance.
            </summary>
        </member>
        <member name="P:Microsoft.HDInsight.Net.Http.Formatting.Formatting.Parsers.InternetMessageFormatHeaderParser.CurrentHeaderFieldStore.Name">
            <summary>
            Gets the header field name.
            </summary>
        </member>
        <member name="P:Microsoft.HDInsight.Net.Http.Formatting.Formatting.Parsers.InternetMessageFormatHeaderParser.CurrentHeaderFieldStore.Value">
            <summary>
            Gets the header field value.
            </summary>
        </member>
        <member name="T:Microsoft.HDInsight.Net.Http.Formatting.MimeBodyPart">
            <summary>
            Maintains information about MIME body parts parsed by <see cref="T:Microsoft.HDInsight.Net.Http.Formatting.Formatting.Parsers.MimeMultipartBodyPartParser"/>.
            </summary>
        </member>
        <member name="M:Microsoft.HDInsight.Net.Http.Formatting.MimeBodyPart.#ctor(Microsoft.HDInsight.Net.Http.Formatting.MultipartStreamProvider,System.Int32,System.Net.Http.HttpContent)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.HDInsight.Net.Http.Formatting.MimeBodyPart"/> class.
            </summary>
            <param name="streamProvider">The stream provider.</param>
            <param name="maxBodyPartHeaderSize">The max length of the MIME header within each MIME body part.</param>
            <param name="parentContent">The part's parent content</param>
        </member>
        <member name="M:Microsoft.HDInsight.Net.Http.Formatting.MimeBodyPart.GetCompletedHttpContent">
            <summary>
            Gets the part's content as an HttpContent.
            </summary>
            <value>
            The part's content, or null if the part had no content.
            </value>
        </member>
        <member name="M:Microsoft.HDInsight.Net.Http.Formatting.MimeBodyPart.WriteSegment(System.ArraySegment{System.Byte},System.Threading.CancellationToken)">
            <summary>
            Writes the <paramref name="segment"/> into the part's output stream.
            </summary>
            <param name="segment">The current segment to be written to the part's output stream.</param>
            <param name="cancellationToken">The token to monitor for cancellation requests.</param>
        </member>
        <member name="M:Microsoft.HDInsight.Net.Http.Formatting.MimeBodyPart.GetOutputStream">
            <summary>
            Gets the output stream.
            </summary>
            <returns>The output stream to write the body part to.</returns>
        </member>
        <member name="M:Microsoft.HDInsight.Net.Http.Formatting.MimeBodyPart.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="M:Microsoft.HDInsight.Net.Http.Formatting.MimeBodyPart.Dispose(System.Boolean)">
            <summary>
            Releases unmanaged and - optionally - managed resources
            </summary>
            <param name="disposing"><c>true</c> to release both managed and unmanaged resources; <c>false</c> to release only unmanaged resources.</param>
        </member>
        <member name="M:Microsoft.HDInsight.Net.Http.Formatting.MimeBodyPart.CleanupHttpContent">
            <summary>
            In the success case, the HttpContent is to be used after this Part has been parsed and disposed of.
            Only if Dispose has been called on a non-completed part, the parsed HttpContent needs to be disposed of as well.
            </summary>
        </member>
        <member name="M:Microsoft.HDInsight.Net.Http.Formatting.MimeBodyPart.CleanupOutputStream">
            <summary>
            Resets the output stream by either closing it or, in the case of a <see cref="T:System.IO.MemoryStream"/> resetting
            position to 0 so that it can be read by the caller.
            </summary>
        </member>
        <member name="P:Microsoft.HDInsight.Net.Http.Formatting.MimeBodyPart.HeaderParser">
            <summary>
            Gets the header parser.
            </summary>
            <value>
            The header parser.
            </value>
        </member>
        <member name="P:Microsoft.HDInsight.Net.Http.Formatting.MimeBodyPart.Segments">
            <summary>
            Gets the set of <see cref="T:System.ArraySegment`1"/> pointing to the read buffer with
            contents of this body part.
            </summary>
        </member>
        <member name="P:Microsoft.HDInsight.Net.Http.Formatting.MimeBodyPart.IsComplete">
            <summary>
            Gets or sets a value indicating whether the body part has been completed.
            </summary>
            <value>
            <c>true</c> if this instance is complete; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Microsoft.HDInsight.Net.Http.Formatting.MimeBodyPart.IsFinal">
            <summary>
            Gets or sets a value indicating whether this is the final body part.
            </summary>
            <value>
            <c>true</c> if this instance is complete; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="T:Microsoft.HDInsight.Net.Http.Formatting.Formatting.Parsers.MimeMultipartBodyPartParser">
            <summary>
            Complete MIME multipart parser that combines <see cref="T:Microsoft.HDInsight.Net.Http.Formatting.Formatting.Parsers.MimeMultipartParser"/> for parsing the MIME message into individual body parts 
            and <see cref="T:Microsoft.HDInsight.Net.Http.Formatting.Formatting.Parsers.InternetMessageFormatHeaderParser"/> for parsing each body part into a MIME header and a MIME body. The caller of the parser is returned
            the resulting MIME bodies which can then be written to some output.
            </summary>
        </member>
        <member name="M:Microsoft.HDInsight.Net.Http.Formatting.Formatting.Parsers.MimeMultipartBodyPartParser.#ctor(System.Net.Http.HttpContent,Microsoft.HDInsight.Net.Http.Formatting.MultipartStreamProvider)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.HDInsight.Net.Http.Formatting.Formatting.Parsers.MimeMultipartBodyPartParser"/> class.
            </summary>
            <param name="content">An existing <see cref="T:System.Net.Http.HttpContent"/> instance to use for the object's content.</param>
            <param name="streamProvider">A stream provider providing output streams for where to write body parts as they are parsed.</param>
        </member>
        <member name="M:Microsoft.HDInsight.Net.Http.Formatting.Formatting.Parsers.MimeMultipartBodyPartParser.#ctor(System.Net.Http.HttpContent,Microsoft.HDInsight.Net.Http.Formatting.MultipartStreamProvider,System.Int64,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.HDInsight.Net.Http.Formatting.Formatting.Parsers.MimeMultipartBodyPartParser"/> class.
            </summary>
            <param name="content">An existing <see cref="T:System.Net.Http.HttpContent"/> instance to use for the object's content.</param>
            <param name="streamProvider">A stream provider providing output streams for where to write body parts as they are parsed.</param>
            <param name="maxMessageSize">The max length of the entire MIME multipart message.</param>
            <param name="maxBodyPartHeaderSize">The max length of the MIME header within each MIME body part.</param>
        </member>
        <member name="M:Microsoft.HDInsight.Net.Http.Formatting.Formatting.Parsers.MimeMultipartBodyPartParser.IsMimeMultipartContent(System.Net.Http.HttpContent)">
            <summary>
            Determines whether the specified content is MIME multipart content.
            </summary>
            <param name="content">The content.</param>
            <returns>
              <c>true</c> if the specified content is MIME multipart content; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Microsoft.HDInsight.Net.Http.Formatting.Formatting.Parsers.MimeMultipartBodyPartParser.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="M:Microsoft.HDInsight.Net.Http.Formatting.Formatting.Parsers.MimeMultipartBodyPartParser.ParseBuffer(System.Byte[],System.Int32)">
            <summary>
            Parses the data provided and generates parsed MIME body part bodies in the form of <see cref="T:System.ArraySegment`1"/> which are ready to 
            write to the output stream.
            </summary>
            <param name="data">The data to parse</param>
            <param name="bytesRead">The number of bytes available in the input data</param>
            <returns>Parsed <see cref="T:Microsoft.HDInsight.Net.Http.Formatting.MimeBodyPart"/> instances.</returns>
        </member>
        <member name="M:Microsoft.HDInsight.Net.Http.Formatting.Formatting.Parsers.MimeMultipartBodyPartParser.Dispose(System.Boolean)">
            <summary>
            Releases unmanaged and - optionally - managed resources
            </summary>
            <param name="disposing"><c>true</c> to release both managed and unmanaged resources; <c>false</c> to release only unmanaged resources.</param>
        </member>
        <member name="T:Microsoft.HDInsight.Net.Http.Formatting.Formatting.Parsers.MimeMultipartParser">
            <summary>
            Buffer-oriented MIME multipart parser.
            </summary>
        </member>
        <member name="M:Microsoft.HDInsight.Net.Http.Formatting.Formatting.Parsers.MimeMultipartParser.#ctor(System.String,System.Int64)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.HDInsight.Net.Http.Formatting.Formatting.Parsers.MimeMultipartParser"/> class.
            </summary>
            <param name="boundary">Message boundary</param>
            <param name="maxMessageSize">Maximum length of entire MIME multipart message.</param>
        </member>
        <member name="M:Microsoft.HDInsight.Net.Http.Formatting.Formatting.Parsers.MimeMultipartParser.ParseBuffer(System.Byte[],System.Int32,System.Int32@,System.ArraySegment{System.Byte}@,System.ArraySegment{System.Byte}@,System.Boolean@)">
            <summary>
            Parse a MIME multipart message. Bytes are parsed in a consuming
            manner from the beginning of the request buffer meaning that the same bytes can not be 
            present in the request buffer.
            </summary>
            <param name="buffer">Request buffer from where request is read</param>
            <param name="bytesReady">Size of request buffer</param>
            <param name="bytesConsumed">Offset into request buffer</param>
            <param name="remainingBodyPart">Any body part that was considered as a potential MIME multipart boundary but which was in fact part of the body.</param>
            <param name="bodyPart">The bulk of the body part.</param>
            <param name="isFinalBodyPart">Indicates whether the final body part has been found.</param>
            <remarks>In order to get the complete body part, the caller is responsible for concatenating the contents of the 
            <paramref name="remainingBodyPart"/> and <paramref name="bodyPart"/> out parameters.</remarks>
            <returns>State of the parser.</returns>
        </member>
        <member name="T:Microsoft.HDInsight.Net.Http.Formatting.Formatting.Parsers.MimeMultipartParser.State">
            <summary>
            Represents the overall state of the <see cref="T:Microsoft.HDInsight.Net.Http.Formatting.Formatting.Parsers.MimeMultipartParser"/>.
            </summary>
        </member>
        <member name="F:Microsoft.HDInsight.Net.Http.Formatting.Formatting.Parsers.MimeMultipartParser.State.NeedMoreData">
            <summary>
            Need more data
            </summary>
        </member>
        <member name="F:Microsoft.HDInsight.Net.Http.Formatting.Formatting.Parsers.MimeMultipartParser.State.BodyPartCompleted">
            <summary>
            Parsing of a complete body part succeeded.
            </summary>
        </member>
        <member name="F:Microsoft.HDInsight.Net.Http.Formatting.Formatting.Parsers.MimeMultipartParser.State.Invalid">
            <summary>
            Bad data format
            </summary>
        </member>
        <member name="F:Microsoft.HDInsight.Net.Http.Formatting.Formatting.Parsers.MimeMultipartParser.State.DataTooBig">
            <summary>
            Data exceeds the allowed size
            </summary>
        </member>
        <member name="T:Microsoft.HDInsight.Net.Http.Formatting.Formatting.Parsers.MimeMultipartParser.CurrentBodyPartStore">
            <summary>
            Maintains information about the current body part being parsed.
            </summary>
        </member>
        <member name="M:Microsoft.HDInsight.Net.Http.Formatting.Formatting.Parsers.MimeMultipartParser.CurrentBodyPartStore.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.HDInsight.Net.Http.Formatting.Formatting.Parsers.MimeMultipartParser.CurrentBodyPartStore"/> class.
            </summary>
            <param name="referenceBoundary">The reference boundary.</param>
        </member>
        <member name="M:Microsoft.HDInsight.Net.Http.Formatting.Formatting.Parsers.MimeMultipartParser.CurrentBodyPartStore.ResetBoundaryOffset">
            <summary>
            Resets the boundary offset.
            </summary>
        </member>
        <member name="M:Microsoft.HDInsight.Net.Http.Formatting.Formatting.Parsers.MimeMultipartParser.CurrentBodyPartStore.ResetBoundary">
            <summary>
            Resets the boundary.
            </summary>
        </member>
        <member name="M:Microsoft.HDInsight.Net.Http.Formatting.Formatting.Parsers.MimeMultipartParser.CurrentBodyPartStore.AppendBoundary(System.Byte)">
            <summary>
            Appends byte to the current boundary.
            </summary>
            <param name="data">The data to append to the boundary.</param>
        </member>
        <member name="M:Microsoft.HDInsight.Net.Http.Formatting.Formatting.Parsers.MimeMultipartParser.CurrentBodyPartStore.AppendBoundary(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Appends array of bytes to the current boundary.
            </summary>
            <param name="data">The data to append to the boundary.</param>
            <param name="offset">The offset into the data.</param>
            <param name="count">The number of bytes to append.</param>
        </member>
        <member name="M:Microsoft.HDInsight.Net.Http.Formatting.Formatting.Parsers.MimeMultipartParser.CurrentBodyPartStore.GetDiscardedBoundary">
            <summary>
            Gets the discarded boundary.
            </summary>
            <returns>An <see cref="T:System.ArraySegment`1"/> containing the discarded boundary.</returns>
        </member>
        <member name="M:Microsoft.HDInsight.Net.Http.Formatting.Formatting.Parsers.MimeMultipartParser.CurrentBodyPartStore.IsBoundaryValid">
            <summary>
            Determines whether current boundary is valid.
            </summary>
            <returns>
              <c>true</c> if curent boundary is valid; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Microsoft.HDInsight.Net.Http.Formatting.Formatting.Parsers.MimeMultipartParser.CurrentBodyPartStore.ClearBodyPart">
            <summary>
            Clears the body part.
            </summary>
        </member>
        <member name="M:Microsoft.HDInsight.Net.Http.Formatting.Formatting.Parsers.MimeMultipartParser.CurrentBodyPartStore.ClearAll">
            <summary>
            Clears all.
            </summary>
        </member>
        <member name="P:Microsoft.HDInsight.Net.Http.Formatting.Formatting.Parsers.MimeMultipartParser.CurrentBodyPartStore.HasPotentialBoundaryLeftOver">
            <summary>
            Gets or sets a value indicating whether this instance has potential boundary left over.
            </summary>
            <value>
            <c>true</c> if this instance has potential boundary left over; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Microsoft.HDInsight.Net.Http.Formatting.Formatting.Parsers.MimeMultipartParser.CurrentBodyPartStore.BoundaryDelta">
            <summary>
            Gets the boundary delta.
            </summary>
        </member>
        <member name="P:Microsoft.HDInsight.Net.Http.Formatting.Formatting.Parsers.MimeMultipartParser.CurrentBodyPartStore.BodyPart">
            <summary>
            Gets or sets the body part.
            </summary>
            <value>
            The body part.
            </value>
        </member>
        <member name="P:Microsoft.HDInsight.Net.Http.Formatting.Formatting.Parsers.MimeMultipartParser.CurrentBodyPartStore.IsFinal">
            <summary>
            Gets a value indicating whether this body part instance is final.
            </summary>
            <value>
              <c>true</c> if this body part instance is final; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="T:Microsoft.HDInsight.Net.Http.Formatting.MultipartFileStreamProvider">
            <summary>
            A <see cref="T:Microsoft.HDInsight.Net.Http.Formatting.MultipartStreamProvider"/> suited for writing each MIME body parts of the MIME multipart
            message to a file using a <see cref="T:System.IO.FileStream"/>.
            </summary>
        </member>
        <member name="M:Microsoft.HDInsight.Net.Http.Formatting.MultipartFileStreamProvider.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.HDInsight.Net.Http.Formatting.MultipartFileStreamProvider"/> class.
            </summary>
            <param name="rootPath">The root path where the content of MIME multipart body parts are written to.</param>
        </member>
        <member name="M:Microsoft.HDInsight.Net.Http.Formatting.MultipartFileStreamProvider.#ctor(System.String,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.HDInsight.Net.Http.Formatting.MultipartFileStreamProvider"/> class.
            </summary>
            <param name="rootPath">The root path where the content of MIME multipart body parts are written to.</param>
            <param name="bufferSize">The number of bytes buffered for writes to a file.</param>
        </member>
        <member name="M:Microsoft.HDInsight.Net.Http.Formatting.MultipartFileStreamProvider.GetLocalFileName(System.Net.Http.Headers.HttpContentHeaders)">
            <summary>
            Gets the name of the local file which will be combined with the root path to
            create an absolute file name where the contents of the current MIME body part
            will be stored.
            </summary>
            <param name="headers">The headers for the current MIME body part.</param>
            <returns>A relative filename with no path component.</returns>
        </member>
        <member name="P:Microsoft.HDInsight.Net.Http.Formatting.MultipartFileStreamProvider.FileData">
            <summary>
            Gets a collection containing the local files names and associated HTTP content headers of MIME 
            body parts written to file.
            </summary>
        </member>
        <member name="P:Microsoft.HDInsight.Net.Http.Formatting.MultipartFileStreamProvider.RootPath">
            <summary>
            Gets the root path where the content of MIME multipart body parts are written to.
            </summary>
        </member>
        <member name="P:Microsoft.HDInsight.Net.Http.Formatting.MultipartFileStreamProvider.BufferSize">
            <summary>
            Gets the number of bytes buffered for writes to a file.
            </summary>
        </member>
        <member name="T:Microsoft.HDInsight.Net.Http.Formatting.MultipartFormDataStreamProvider">
            <summary>
            A <see cref="T:Microsoft.HDInsight.Net.Http.Formatting.MultipartStreamProvider"/> implementation suited for use with HTML file uploads for writing file 
            content to a <see cref="T:System.IO.FileStream"/>. The stream provider looks at the <b>Content-Disposition</b> header 
            field and determines an output <see cref="T:System.IO.Stream"/> based on the presence of a <b>filename</b> parameter.
            If a <b>filename</b> parameter is present in the <b>Content-Disposition</b> header field then the body 
            part is written to a <see cref="T:System.IO.FileStream"/>, otherwise it is written to a <see cref="T:System.IO.MemoryStream"/>.
            This makes it convenient to process MIME Multipart HTML Form data which is a combination of form 
            data and file content.
            </summary>
        </member>
        <member name="M:Microsoft.HDInsight.Net.Http.Formatting.MultipartFormDataStreamProvider.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.HDInsight.Net.Http.Formatting.MultipartFormDataStreamProvider"/> class.
            </summary>
            <param name="rootPath">The root path where the content of MIME multipart body parts are written to.</param>
        </member>
        <member name="M:Microsoft.HDInsight.Net.Http.Formatting.MultipartFormDataStreamProvider.#ctor(System.String,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.HDInsight.Net.Http.Formatting.MultipartFormDataStreamProvider"/> class.
            </summary>
            <param name="rootPath">The root path where the content of MIME multipart body parts are written to.</param>
            <param name="bufferSize">The number of bytes buffered for writes to the file.</param>
        </member>
        <member name="M:Microsoft.HDInsight.Net.Http.Formatting.MultipartFormDataStreamProvider.GetStream(System.Net.Http.HttpContent,System.Net.Http.Headers.HttpContentHeaders)">
            <summary>
            This body part stream provider examines the headers provided by the MIME multipart parser
            and decides whether it should return a file stream or a memory stream for the body part to be 
            written to.
            </summary>
            <param name="parent">The parent MIME multipart HttpContent instance.</param>
            <param name="headers">Header fields describing the body part</param>
            <returns>The <see cref="T:System.IO.Stream"/> instance where the message body part is written to.</returns>
        </member>
        <member name="M:Microsoft.HDInsight.Net.Http.Formatting.MultipartFormDataStreamProvider.ExecutePostProcessingAsync">
            <summary>
            Read the non-file contents as form data.
            </summary>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> representing the post processing.</returns>
        </member>
        <member name="M:Microsoft.HDInsight.Net.Http.Formatting.MultipartFormDataStreamProvider.ExecutePostProcessingAsync(System.Threading.CancellationToken)">
            <summary>
            Read the non-file contents as form data.
            </summary>
            <param name="cancellationToken">The token to monitor for cancellation requests.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> representing the post processing.</returns>
        </member>
        <member name="P:Microsoft.HDInsight.Net.Http.Formatting.MultipartFormDataStreamProvider.FormData">
            <summary>
            Gets a <see cref="T:System.Collections.Specialized.NameValueCollection"/> of form data passed as part of the multipart form data.
            </summary>
        </member>
        <member name="T:Microsoft.HDInsight.Net.Http.Formatting.MultipartMemoryStreamProvider">
            <summary>
            Provides a <see cref="T:Microsoft.HDInsight.Net.Http.Formatting.MultipartStreamProvider"/> implementation that returns a <see cref="T:System.IO.MemoryStream"/> instance.
            This facilitates deserialization or other manipulation of the contents in memory.
            </summary>
        </member>
        <member name="M:Microsoft.HDInsight.Net.Http.Formatting.MultipartMemoryStreamProvider.GetStream(System.Net.Http.HttpContent,System.Net.Http.Headers.HttpContentHeaders)">
            <summary>
            This <see cref="T:Microsoft.HDInsight.Net.Http.Formatting.MultipartStreamProvider"/> implementation returns a <see cref="T:System.IO.MemoryStream"/> instance.
            This facilitates deserialization or other manipulation of the contents in memory. 
            </summary>
        </member>
        <member name="T:Microsoft.HDInsight.Net.Http.Formatting.Formatting.Parsers.ParserState">
            <summary>
            Represents the overall state of various parsers.
            </summary>
        </member>
        <member name="F:Microsoft.HDInsight.Net.Http.Formatting.Formatting.Parsers.ParserState.NeedMoreData">
            <summary>
            Need more data
            </summary>
        </member>
        <member name="F:Microsoft.HDInsight.Net.Http.Formatting.Formatting.Parsers.ParserState.Done">
            <summary>
            Parsing completed (final)
            </summary>
        </member>
        <member name="F:Microsoft.HDInsight.Net.Http.Formatting.Formatting.Parsers.ParserState.Invalid">
            <summary>
            Bad data format (final)
            </summary>
        </member>
        <member name="F:Microsoft.HDInsight.Net.Http.Formatting.Formatting.Parsers.ParserState.DataTooBig">
            <summary>
            Data exceeds the allowed size (final)
            </summary>
        </member>
        <member name="T:Microsoft.HDInsight.Net.Http.Formatting.UriExtensions">
            <summary>
            Extension methods to allow strongly typed objects to be read from the query component of <see cref="T:System.Uri"/> instances.
            </summary>
        </member>
        <member name="M:Microsoft.HDInsight.Net.Http.Formatting.UriExtensions.ParseQueryString(System.Uri)">
            <summary>
            Parses the query portion of the specified <see cref="T:System.Uri"/>.
            </summary>
            <param name="address">The <see cref="T:System.Uri"/> instance from which to read.</param>
            <returns>A <see cref="T:System.Collections.Specialized.NameValueCollection"/> containing the parsed result.</returns>
        </member>
        <member name="M:Microsoft.HDInsight.Net.Http.Formatting.UriExtensions.TryReadQueryAsJson(System.Uri,Newtonsoft.Json.Linq.JObject@)">
            <summary>
            Reads HTML form URL encoded data provided in the <see cref="T:System.Uri"/> query component as a <see cref="T:Newtonsoft.Json.Linq.JObject"/> object.
            </summary>
            <param name="address">The <see cref="T:System.Uri"/> instance from which to read.</param>
            <param name="value">An object to be initialized with this instance or null if the conversion cannot be performed.</param>
            <returns><c>true</c> if the query component can be read as <see cref="T:Newtonsoft.Json.Linq.JObject"/>; otherwise <c>false</c>.</returns>
        </member>
        <member name="M:Microsoft.HDInsight.Net.Http.Formatting.UriExtensions.TryReadQueryAs(System.Uri,System.Type,System.Object@)">
            <summary>
            Reads HTML form URL encoded data provided in the <see cref="T:System.Uri"/> query component as an <see cref="T:System.Object"/> of the given <paramref name="type"/>.
            </summary>
            <param name="address">The <see cref="T:System.Uri"/> instance from which to read.</param>
            <param name="type">The type of the object to read.</param>
            <param name="value">An object to be initialized with this instance or null if the conversion cannot be performed.</param>
            <returns><c>true</c> if the query component can be read as the specified type; otherwise <c>false</c>.</returns>
        </member>
        <member name="M:Microsoft.HDInsight.Net.Http.Formatting.UriExtensions.TryReadQueryAs``1(System.Uri,``0@)">
            <summary>
            Reads HTML form URL encoded data provided in the <see cref="T:System.Uri"/> query component as an <see cref="T:System.Object"/> of type <typeparamref name="T"/>.
            </summary>
            <typeparam name="T">The type of the object to read.</typeparam>
            <param name="address">The <see cref="T:System.Uri"/> instance from which to read.</param>
            <param name="value">An object to be initialized with this instance or null if the conversion cannot be performed.</param>
            <returns><c>true</c> if the query component can be read as the specified type; otherwise <c>false</c>.</returns>
        </member>
        <member name="T:Microsoft.HDInsight.Net.Http.Formatting.Common.CommonWebApiResources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:Microsoft.HDInsight.Net.Http.Formatting.Common.CommonWebApiResources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:Microsoft.HDInsight.Net.Http.Formatting.Common.CommonWebApiResources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:Microsoft.HDInsight.Net.Http.Formatting.Common.CommonWebApiResources.ArgumentInvalidAbsoluteUri">
            <summary>
              Looks up a localized string similar to Relative URI values are not supported: &apos;{0}&apos;. The URI must be absolute..
            </summary>
        </member>
        <member name="P:Microsoft.HDInsight.Net.Http.Formatting.Common.CommonWebApiResources.ArgumentInvalidHttpUriScheme">
            <summary>
              Looks up a localized string similar to Unsupported URI scheme: &apos;{0}&apos;. The URI scheme must be either &apos;{1}&apos; or &apos;{2}&apos;..
            </summary>
        </member>
        <member name="P:Microsoft.HDInsight.Net.Http.Formatting.Common.CommonWebApiResources.ArgumentMustBeGreaterThanOrEqualTo">
            <summary>
              Looks up a localized string similar to Value must be greater than or equal to {0}..
            </summary>
        </member>
        <member name="P:Microsoft.HDInsight.Net.Http.Formatting.Common.CommonWebApiResources.ArgumentMustBeLessThanOrEqualTo">
            <summary>
              Looks up a localized string similar to Value must be less than or equal to {0}..
            </summary>
        </member>
        <member name="P:Microsoft.HDInsight.Net.Http.Formatting.Common.CommonWebApiResources.ArgumentNullOrEmpty">
            <summary>
              Looks up a localized string similar to The argument &apos;{0}&apos; is null or empty..
            </summary>
        </member>
        <member name="P:Microsoft.HDInsight.Net.Http.Formatting.Common.CommonWebApiResources.ArgumentUriHasQueryOrFragment">
            <summary>
              Looks up a localized string similar to URI must not contain a query component or a fragment identifier..
            </summary>
        </member>
        <member name="P:Microsoft.HDInsight.Net.Http.Formatting.Common.CommonWebApiResources.InvalidEnumArgument">
            <summary>
              Looks up a localized string similar to The value of argument &apos;{0}&apos; ({1}) is invalid for Enum type &apos;{2}&apos;..
            </summary>
        </member>
    </members>
</doc>
