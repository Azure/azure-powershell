// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.
namespace Microsoft.Azure.Management.PolicyInsights
{
    using Microsoft.Rest.Azure;
    using Models;

    /// <summary>
    /// Extension methods for PolicyMetadataOperations
    /// </summary>
    public static partial class PolicyMetadataOperationsExtensions
    {
        /// <summary>
        /// Get policy metadata resource.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='resourceName'>
        /// The name of the policy metadata resource.
        /// </param>
        public static PolicyMetadata GetResource(this IPolicyMetadataOperations operations, string resourceName)
        {
                return ((IPolicyMetadataOperations)operations).GetResourceAsync(resourceName).GetAwaiter().GetResult();
        }

        /// <summary>
        /// Get policy metadata resource.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='resourceName'>
        /// The name of the policy metadata resource.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        public static async System.Threading.Tasks.Task<PolicyMetadata> GetResourceAsync(this IPolicyMetadataOperations operations, string resourceName, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            using (var _result = await operations.GetResourceWithHttpMessagesAsync(resourceName, null, cancellationToken).ConfigureAwait(false))
            {
                return _result.Body;
            }
        }
        /// <summary>
        /// Get a list of the policy metadata resources.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='queryOptions'>
        /// 
        /// </param>
        public static Microsoft.Rest.Azure.IPage<SlimPolicyMetadata> List(this IPolicyMetadataOperations operations, QueryOptions queryOptions = default(QueryOptions))
        {
                return ((IPolicyMetadataOperations)operations).ListAsync(queryOptions).GetAwaiter().GetResult();
        }

        /// <summary>
        /// Get a list of the policy metadata resources.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='queryOptions'>
        /// 
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        public static async System.Threading.Tasks.Task<Microsoft.Rest.Azure.IPage<SlimPolicyMetadata>> ListAsync(this IPolicyMetadataOperations operations, QueryOptions queryOptions = default(QueryOptions), System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            using (var _result = await operations.ListWithHttpMessagesAsync(queryOptions, null, cancellationToken).ConfigureAwait(false))
            {
                return _result.Body;
            }
        }
        /// <summary>
        /// Get a list of the policy metadata resources.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='nextPageLink'>
        /// The NextLink from the previous successful call to List operation.
        /// </param>
        public static Microsoft.Rest.Azure.IPage<SlimPolicyMetadata> ListNext(this IPolicyMetadataOperations operations, string nextPageLink)
        {
                return ((IPolicyMetadataOperations)operations).ListNextAsync(nextPageLink).GetAwaiter().GetResult();
        }

        /// <summary>
        /// Get a list of the policy metadata resources.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='nextPageLink'>
        /// The NextLink from the previous successful call to List operation.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        public static async System.Threading.Tasks.Task<Microsoft.Rest.Azure.IPage<SlimPolicyMetadata>> ListNextAsync(this IPolicyMetadataOperations operations, string nextPageLink, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            using (var _result = await operations.ListNextWithHttpMessagesAsync(nextPageLink, null, cancellationToken).ConfigureAwait(false))
            {
                return _result.Body;
            }
        }
    }
}
