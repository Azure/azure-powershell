// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.PolicyInsights.Models
{
    using System.Linq;

    /// <summary>
    /// The restrictions on a field imposed by a specific policy.
    /// </summary>
    public partial class FieldRestriction
    {
        /// <summary>
        /// Initializes a new instance of the FieldRestriction class.
        /// </summary>
        public FieldRestriction()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the FieldRestriction class.
        /// </summary>

        /// <param name="result">The type of restriction that is imposed on the field.
        /// Possible values include: &#39;Required&#39;, &#39;Removed&#39;, &#39;Deny&#39;</param>

        /// <param name="defaultValue">The value that policy will set for the field if the user does not provide a
        /// value.
        /// </param>

        /// <param name="values">The values that policy either requires or denies for the field.
        /// </param>

        /// <param name="policy">The details of the policy that is causing the field restriction.
        /// </param>
        public FieldRestriction(string result = default(string), string defaultValue = default(string), System.Collections.Generic.IList<string> values = default(System.Collections.Generic.IList<string>), PolicyReference policy = default(PolicyReference))

        {
            this.Result = result;
            this.DefaultValue = defaultValue;
            this.Values = values;
            this.Policy = policy;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets the type of restriction that is imposed on the field. Possible values include: &#39;Required&#39;, &#39;Removed&#39;, &#39;Deny&#39;
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "result")]
        public string Result {get; private set; }

        /// <summary>
        /// Gets the value that policy will set for the field if the user does not
        /// provide a value.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "defaultValue")]
        public string DefaultValue {get; private set; }

        /// <summary>
        /// Gets the values that policy either requires or denies for the field.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "values")]
        public System.Collections.Generic.IList<string> Values {get; private set; }

        /// <summary>
        /// Gets the details of the policy that is causing the field restriction.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "policy")]
        public PolicyReference Policy {get; private set; }
    }
}