// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.PolicyInsights.Models
{
    using System.Linq;

    /// <summary>
    /// Details of a single deployment created by the remediation.
    /// </summary>
    public partial class RemediationDeployment
    {
        /// <summary>
        /// Initializes a new instance of the RemediationDeployment class.
        /// </summary>
        public RemediationDeployment()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the RemediationDeployment class.
        /// </summary>

        /// <param name="remediatedResourceId">Resource ID of the resource that is being remediated by the deployment.
        /// </param>

        /// <param name="deploymentId">Resource ID of the template deployment that will remediate the resource.
        /// </param>

        /// <param name="status">Status of the remediation deployment.
        /// </param>

        /// <param name="resourceLocation">Location of the resource that is being remediated.
        /// </param>

        /// <param name="error">Error encountered while remediated the resource.
        /// </param>

        /// <param name="createdOn">The time at which the remediation was created.
        /// </param>

        /// <param name="lastUpdatedOn">The time at which the remediation deployment was last updated.
        /// </param>
        public RemediationDeployment(string remediatedResourceId = default(string), string deploymentId = default(string), string status = default(string), string resourceLocation = default(string), ErrorDefinition error = default(ErrorDefinition), System.DateTime? createdOn = default(System.DateTime?), System.DateTime? lastUpdatedOn = default(System.DateTime?))

        {
            this.RemediatedResourceId = remediatedResourceId;
            this.DeploymentId = deploymentId;
            this.Status = status;
            this.ResourceLocation = resourceLocation;
            this.Error = error;
            this.CreatedOn = createdOn;
            this.LastUpdatedOn = lastUpdatedOn;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets resource ID of the resource that is being remediated by the
        /// deployment.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "remediatedResourceId")]
        public string RemediatedResourceId {get; private set; }

        /// <summary>
        /// Gets resource ID of the template deployment that will remediate the
        /// resource.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "deploymentId")]
        public string DeploymentId {get; private set; }

        /// <summary>
        /// Gets status of the remediation deployment.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "status")]
        public string Status {get; private set; }

        /// <summary>
        /// Gets location of the resource that is being remediated.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "resourceLocation")]
        public string ResourceLocation {get; private set; }

        /// <summary>
        /// Gets error encountered while remediated the resource.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "error")]
        public ErrorDefinition Error {get; private set; }

        /// <summary>
        /// Gets the time at which the remediation was created.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "createdOn")]
        public System.DateTime? CreatedOn {get; private set; }

        /// <summary>
        /// Gets the time at which the remediation deployment was last updated.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "lastUpdatedOn")]
        public System.DateTime? LastUpdatedOn {get; private set; }
    }
}