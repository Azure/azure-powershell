// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.PolicyInsights.Models
{
    using System.Linq;

    /// <summary>
    /// Compliance summary on a particular summary level.
    /// </summary>
    public partial class SummaryResults
    {
        /// <summary>
        /// Initializes a new instance of the SummaryResults class.
        /// </summary>
        public SummaryResults()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the SummaryResults class.
        /// </summary>

        /// <param name="queryResultsUri">HTTP POST URI for queryResults action on Microsoft.PolicyInsights to
        /// retrieve raw results for the compliance summary. This property will not be
        /// available by default in future API versions, but could be queried
        /// explicitly.
        /// </param>

        /// <param name="nonCompliantResources">Number of non-compliant resources.
        /// </param>

        /// <param name="nonCompliantPolicies">Number of non-compliant policies.
        /// </param>

        /// <param name="resourceDetails">The resources summary at this level.
        /// </param>

        /// <param name="policyDetails">The policy artifact summary at this level. For query scope level, it
        /// represents policy assignment summary. For policy assignment level, it
        /// represents policy definitions summary.
        /// </param>

        /// <param name="policyGroupDetails">The policy definition group summary at this level.
        /// </param>
        public SummaryResults(string queryResultsUri = default(string), int? nonCompliantResources = default(int?), int? nonCompliantPolicies = default(int?), System.Collections.Generic.IList<ComplianceDetail> resourceDetails = default(System.Collections.Generic.IList<ComplianceDetail>), System.Collections.Generic.IList<ComplianceDetail> policyDetails = default(System.Collections.Generic.IList<ComplianceDetail>), System.Collections.Generic.IList<ComplianceDetail> policyGroupDetails = default(System.Collections.Generic.IList<ComplianceDetail>))

        {
            this.QueryResultsUri = queryResultsUri;
            this.NonCompliantResources = nonCompliantResources;
            this.NonCompliantPolicies = nonCompliantPolicies;
            this.ResourceDetails = resourceDetails;
            this.PolicyDetails = policyDetails;
            this.PolicyGroupDetails = policyGroupDetails;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets or sets hTTP POST URI for queryResults action on
        /// Microsoft.PolicyInsights to retrieve raw results for the compliance
        /// summary. This property will not be available by default in future API
        /// versions, but could be queried explicitly.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "queryResultsUri")]
        public string QueryResultsUri {get; set; }

        /// <summary>
        /// Gets or sets number of non-compliant resources.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "nonCompliantResources")]
        public int? NonCompliantResources {get; set; }

        /// <summary>
        /// Gets or sets number of non-compliant policies.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "nonCompliantPolicies")]
        public int? NonCompliantPolicies {get; set; }

        /// <summary>
        /// Gets or sets the resources summary at this level.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "resourceDetails")]
        public System.Collections.Generic.IList<ComplianceDetail> ResourceDetails {get; set; }

        /// <summary>
        /// Gets or sets the policy artifact summary at this level. For query scope
        /// level, it represents policy assignment summary. For policy assignment
        /// level, it represents policy definitions summary.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "policyDetails")]
        public System.Collections.Generic.IList<ComplianceDetail> PolicyDetails {get; set; }

        /// <summary>
        /// Gets or sets the policy definition group summary at this level.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "policyGroupDetails")]
        public System.Collections.Generic.IList<ComplianceDetail> PolicyGroupDetails {get; set; }
        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {

            if (this.NonCompliantResources != null)
            {
                if (this.NonCompliantResources < 0)
                {
                    throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.InclusiveMinimum, "NonCompliantResources", 0);
                }
            }
            if (this.NonCompliantPolicies != null)
            {
                if (this.NonCompliantPolicies < 0)
                {
                    throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.InclusiveMinimum, "NonCompliantPolicies", 0);
                }
            }



        }
    }
}