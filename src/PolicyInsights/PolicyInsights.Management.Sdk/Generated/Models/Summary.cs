// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.PolicyInsights.Models
{
    using System.Linq;

    /// <summary>
    /// Summary results.
    /// </summary>
    public partial class Summary
    {
        /// <summary>
        /// Initializes a new instance of the Summary class.
        /// </summary>
        public Summary()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the Summary class.
        /// </summary>

        /// <param name="odataId">OData entity ID; always set to null since summaries do not have an entity
        /// ID.
        /// </param>

        /// <param name="odataContext">OData context string; used by OData clients to resolve type information
        /// based on metadata.
        /// </param>

        /// <param name="results">Compliance summary for all policy assignments.
        /// </param>

        /// <param name="policyAssignments">Policy assignments summary.
        /// </param>
        public Summary(string odataId = default(string), string odataContext = default(string), SummaryResults results = default(SummaryResults), System.Collections.Generic.IList<PolicyAssignmentSummary> policyAssignments = default(System.Collections.Generic.IList<PolicyAssignmentSummary>))

        {
            this.OdataId = odataId;
            this.OdataContext = odataContext;
            this.Results = results;
            this.PolicyAssignments = policyAssignments;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets or sets oData entity ID; always set to null since summaries do not
        /// have an entity ID.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "@odata.id")]
        public string OdataId {get; set; }

        /// <summary>
        /// Gets or sets oData context string; used by OData clients to resolve type
        /// information based on metadata.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "@odata.context")]
        public string OdataContext {get; set; }

        /// <summary>
        /// Gets or sets compliance summary for all policy assignments.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "results")]
        public SummaryResults Results {get; set; }

        /// <summary>
        /// Gets or sets policy assignments summary.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "policyAssignments")]
        public System.Collections.Generic.IList<PolicyAssignmentSummary> PolicyAssignments {get; set; }
        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {


            if (this.Results != null)
            {
                this.Results.Validate();
            }
            if (this.PolicyAssignments != null)
            {
                foreach (var element in this.PolicyAssignments)
                {
                    if (element != null)
                    {
                        element.Validate();
                    }
                }
            }
        }
    }
}