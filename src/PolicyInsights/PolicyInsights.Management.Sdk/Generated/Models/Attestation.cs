// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.PolicyInsights.Models
{
    using System.Linq;

    /// <summary>
    /// An attestation resource.
    /// </summary>
    [Microsoft.Rest.Serialization.JsonTransformation]
    public partial class Attestation : Resource
    {
        /// <summary>
        /// Initializes a new instance of the Attestation class.
        /// </summary>
        public Attestation()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the Attestation class.
        /// </summary>

        /// <param name="id">Fully qualified resource ID for the resource. Ex -
        /// /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        /// </param>

        /// <param name="name">The name of the resource
        /// </param>

        /// <param name="type">The type of the resource. E.g. &#34;Microsoft.Compute/virtualMachines&#34; or
        /// &#34;Microsoft.Storage/storageAccounts&#34;
        /// </param>

        /// <param name="systemData">Azure Resource Manager metadata containing createdBy and modifiedBy
        /// information.
        /// </param>

        /// <param name="complianceState">The compliance state that should be set on the resource.
        /// Possible values include: &#39;Compliant&#39;, &#39;NonCompliant&#39;, &#39;Unknown&#39;</param>

        /// <param name="policyAssignmentId">The resource ID of the policy assignment that the attestation is setting
        /// the state for.
        /// </param>

        /// <param name="policyDefinitionReferenceId">The policy definition reference ID from a policy set definition that the
        /// attestation is setting the state for. If the policy assignment assigns a
        /// policy set definition the attestation can choose a definition within the
        /// set definition with this property or omit this and set the state for the
        /// entire set definition.
        /// </param>

        /// <param name="expiresOn">The time the compliance state should expire.
        /// </param>

        /// <param name="owner">The person responsible for setting the state of the resource. This value is
        /// typically an Azure Active Directory object ID.
        /// </param>

        /// <param name="comments">Comments describing why this attestation was created.
        /// </param>

        /// <param name="evidence">The evidence supporting the compliance state set in this attestation.
        /// </param>

        /// <param name="provisioningState">The status of the attestation.
        /// </param>

        /// <param name="lastComplianceStateChangeAt">The time the compliance state was last changed in this attestation.
        /// </param>

        /// <param name="assessmentDate">The time the evidence was assessed
        /// </param>

        /// <param name="metadata">Additional metadata for this attestation
        /// </param>
        public Attestation(string policyAssignmentId, string id = default(string), string name = default(string), string type = default(string), SystemData systemData = default(SystemData), string complianceState = default(string), string policyDefinitionReferenceId = default(string), System.DateTime? expiresOn = default(System.DateTime?), string owner = default(string), string comments = default(string), System.Collections.Generic.IList<AttestationEvidence> evidence = default(System.Collections.Generic.IList<AttestationEvidence>), string provisioningState = default(string), System.DateTime? lastComplianceStateChangeAt = default(System.DateTime?), System.DateTime? assessmentDate = default(System.DateTime?), object metadata = default(object))

        : base(id, name, type)
        {
            this.SystemData = systemData;
            this.ComplianceState = complianceState;
            this.PolicyAssignmentId = policyAssignmentId;
            this.PolicyDefinitionReferenceId = policyDefinitionReferenceId;
            this.ExpiresOn = expiresOn;
            this.Owner = owner;
            this.Comments = comments;
            this.Evidence = evidence;
            this.ProvisioningState = provisioningState;
            this.LastComplianceStateChangeAt = lastComplianceStateChangeAt;
            this.AssessmentDate = assessmentDate;
            this.Metadata = metadata;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets azure Resource Manager metadata containing createdBy and modifiedBy
        /// information.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "systemData")]
        public SystemData SystemData {get; private set; }

        /// <summary>
        /// Gets or sets the compliance state that should be set on the resource. Possible values include: &#39;Compliant&#39;, &#39;NonCompliant&#39;, &#39;Unknown&#39;
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.complianceState")]
        public string ComplianceState {get; set; }

        /// <summary>
        /// Gets or sets the resource ID of the policy assignment that the attestation
        /// is setting the state for.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.policyAssignmentId")]
        public string PolicyAssignmentId {get; set; }

        /// <summary>
        /// Gets or sets the policy definition reference ID from a policy set
        /// definition that the attestation is setting the state for. If the policy
        /// assignment assigns a policy set definition the attestation can choose a
        /// definition within the set definition with this property or omit this and
        /// set the state for the entire set definition.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.policyDefinitionReferenceId")]
        public string PolicyDefinitionReferenceId {get; set; }

        /// <summary>
        /// Gets or sets the time the compliance state should expire.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.expiresOn")]
        public System.DateTime? ExpiresOn {get; set; }

        /// <summary>
        /// Gets or sets the person responsible for setting the state of the resource.
        /// This value is typically an Azure Active Directory object ID.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.owner")]
        public string Owner {get; set; }

        /// <summary>
        /// Gets or sets comments describing why this attestation was created.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.comments")]
        public string Comments {get; set; }

        /// <summary>
        /// Gets or sets the evidence supporting the compliance state set in this
        /// attestation.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.evidence")]
        public System.Collections.Generic.IList<AttestationEvidence> Evidence {get; set; }

        /// <summary>
        /// Gets the status of the attestation.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.provisioningState")]
        public string ProvisioningState {get; private set; }

        /// <summary>
        /// Gets the time the compliance state was last changed in this attestation.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.lastComplianceStateChangeAt")]
        public System.DateTime? LastComplianceStateChangeAt {get; private set; }

        /// <summary>
        /// Gets or sets the time the evidence was assessed
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.assessmentDate")]
        public System.DateTime? AssessmentDate {get; set; }

        /// <summary>
        /// Gets or sets additional metadata for this attestation
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.metadata")]
        public object Metadata {get; set; }
        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (this.PolicyAssignmentId == null)
            {
                throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.CannotBeNull, "PolicyAssignmentId");
            }









        }
    }
}