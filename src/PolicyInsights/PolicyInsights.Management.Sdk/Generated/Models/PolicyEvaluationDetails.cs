// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.PolicyInsights.Models
{
    using System.Linq;

    /// <summary>
    /// Policy evaluation details.
    /// </summary>
    public partial class PolicyEvaluationDetails
    {
        /// <summary>
        /// Initializes a new instance of the PolicyEvaluationDetails class.
        /// </summary>
        public PolicyEvaluationDetails()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the PolicyEvaluationDetails class.
        /// </summary>

        /// <param name="evaluatedExpressions">Details of the evaluated expressions.
        /// </param>

        /// <param name="ifNotExistsDetails">Evaluation details of IfNotExists effect.
        /// </param>
        public PolicyEvaluationDetails(System.Collections.Generic.IList<ExpressionEvaluationDetails> evaluatedExpressions = default(System.Collections.Generic.IList<ExpressionEvaluationDetails>), IfNotExistsEvaluationDetails ifNotExistsDetails = default(IfNotExistsEvaluationDetails))

        {
            this.EvaluatedExpressions = evaluatedExpressions;
            this.IfNotExistsDetails = ifNotExistsDetails;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets or sets details of the evaluated expressions.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "evaluatedExpressions")]
        public System.Collections.Generic.IList<ExpressionEvaluationDetails> EvaluatedExpressions {get; set; }

        /// <summary>
        /// Gets or sets evaluation details of IfNotExists effect.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "ifNotExistsDetails")]
        public IfNotExistsEvaluationDetails IfNotExistsDetails {get; set; }
    }
}