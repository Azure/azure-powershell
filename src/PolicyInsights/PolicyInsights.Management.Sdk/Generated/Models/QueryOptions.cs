// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.PolicyInsights.Models
{
    using System.Linq;

    public partial class QueryOptions
    {
        /// <summary>
        /// Initializes a new instance of the QueryOptions class.
        /// </summary>
        public QueryOptions()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the QueryOptions class.
        /// </summary>

        /// <param name="top">Maximum number of records to return.
        /// </param>

        /// <param name="filter">OData filter expression.
        /// </param>

        /// <param name="orderBy">Ordering expression using OData notation. One or more comma-separated
        /// column names with an optional &#34;desc&#34; (the default) or &#34;asc&#34;, e.g.
        /// &#34;$orderby=PolicyAssignmentId, ResourceId asc&#34;.
        /// </param>

        /// <param name="select">Select expression using OData notation. Limits the columns on each record
        /// to just those requested, e.g. &#34;$select=PolicyAssignmentId, ResourceId&#34;.
        /// </param>

        /// <param name="fromProperty">ISO 8601 formatted timestamp specifying the start time of the interval to
        /// query. When not specified, the service uses ($to - 1-day).
        /// </param>

        /// <param name="to">ISO 8601 formatted timestamp specifying the end time of the interval to
        /// query. When not specified, the service uses request time.
        /// </param>

        /// <param name="apply">OData apply expression for aggregations.
        /// </param>

        /// <param name="skipToken">Skiptoken is only provided if a previous response returned a partial result
        /// as a part of nextLink element.
        /// </param>

        /// <param name="expand">The $expand query parameter. For example, to expand components use
        /// $expand=components
        /// </param>
        public QueryOptions(int? top = default(int?), string filter = default(string), string orderBy = default(string), string select = default(string), System.DateTime? fromProperty = default(System.DateTime?), System.DateTime? to = default(System.DateTime?), string apply = default(string), string skipToken = default(string), string expand = default(string))

        {
            this.Top = top;
            this.Filter = filter;
            this.OrderBy = orderBy;
            this.Select = select;
            this.FromProperty = fromProperty;
            this.To = to;
            this.Apply = apply;
            this.SkipToken = skipToken;
            this.Expand = expand;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets or sets maximum number of records to return.
        /// </summary>
        [Newtonsoft.Json.JsonIgnore]
        public int? Top {get; set; }

        /// <summary>
        /// Gets or sets oData filter expression.
        /// </summary>
        [Newtonsoft.Json.JsonIgnore]
        public string Filter {get; set; }

        /// <summary>
        /// Gets or sets ordering expression using OData notation. One or more
        /// comma-separated column names with an optional &#34;desc&#34; (the default) or
        /// &#34;asc&#34;, e.g. &#34;$orderby=PolicyAssignmentId, ResourceId asc&#34;.
        /// </summary>
        [Newtonsoft.Json.JsonIgnore]
        public string OrderBy {get; set; }

        /// <summary>
        /// Gets or sets select expression using OData notation. Limits the columns on
        /// each record to just those requested, e.g. &#34;$select=PolicyAssignmentId,
        /// ResourceId&#34;.
        /// </summary>
        [Newtonsoft.Json.JsonIgnore]
        public string Select {get; set; }

        /// <summary>
        /// Gets or sets iSO 8601 formatted timestamp specifying the start time of the
        /// interval to query. When not specified, the service uses ($to - 1-day).
        /// </summary>
        [Newtonsoft.Json.JsonIgnore]
        public System.DateTime? FromProperty {get; set; }

        /// <summary>
        /// Gets or sets iSO 8601 formatted timestamp specifying the end time of the
        /// interval to query. When not specified, the service uses request time.
        /// </summary>
        [Newtonsoft.Json.JsonIgnore]
        public System.DateTime? To {get; set; }

        /// <summary>
        /// Gets or sets oData apply expression for aggregations.
        /// </summary>
        [Newtonsoft.Json.JsonIgnore]
        public string Apply {get; set; }

        /// <summary>
        /// Gets or sets skiptoken is only provided if a previous response returned a
        /// partial result as a part of nextLink element.
        /// </summary>
        [Newtonsoft.Json.JsonIgnore]
        public string SkipToken {get; set; }

        /// <summary>
        /// Gets or sets the $expand query parameter. For example, to expand components
        /// use $expand=components
        /// </summary>
        [Newtonsoft.Json.JsonIgnore]
        public string Expand {get; set; }
        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (this.Top != null)
            {
                if (this.Top < 0)
                {
                    throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.InclusiveMinimum, "Top", 0);
                }
            }






        }
    }
}