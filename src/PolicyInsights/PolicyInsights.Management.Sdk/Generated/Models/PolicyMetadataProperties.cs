// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.PolicyInsights.Models
{
    using System.Linq;

    /// <summary>
    /// The properties of the policy metadata.
    /// </summary>
    public partial class PolicyMetadataProperties : PolicyMetadataSlimProperties
    {
        /// <summary>
        /// Initializes a new instance of the PolicyMetadataProperties class.
        /// </summary>
        public PolicyMetadataProperties()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the PolicyMetadataProperties class.
        /// </summary>

        /// <param name="metadataId">The policy metadata identifier.
        /// </param>

        /// <param name="category">The category of the policy metadata.
        /// </param>

        /// <param name="title">The title of the policy metadata.
        /// </param>

        /// <param name="owner">The owner of the policy metadata.
        /// </param>

        /// <param name="additionalContentUrl">Url for getting additional content about the resource metadata.
        /// </param>

        /// <param name="metadata">Additional metadata.
        /// </param>

        /// <param name="description">The description of the policy metadata.
        /// </param>

        /// <param name="requirements">The requirements of the policy metadata.
        /// </param>
        public PolicyMetadataProperties(string metadataId = default(string), string category = default(string), string title = default(string), string owner = default(string), string additionalContentUrl = default(string), object metadata = default(object), string description = default(string), string requirements = default(string))

        : base(metadataId, category, title, owner, additionalContentUrl, metadata)
        {
            this.Description = description;
            this.Requirements = requirements;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets the description of the policy metadata.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "description")]
        public string Description {get; private set; }

        /// <summary>
        /// Gets the requirements of the policy metadata.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "requirements")]
        public string Requirements {get; private set; }
    }
}