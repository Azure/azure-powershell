// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.ManagedServices.Models.Api20200201Preview
{
    using static Microsoft.Azure.PowerShell.Cmdlets.ManagedServices.Runtime.Extensions;

    /// <summary>Just-in-time access policy setting.</summary>
    public partial class JustInTimeAccessPolicy :
        Microsoft.Azure.PowerShell.Cmdlets.ManagedServices.Models.Api20200201Preview.IJustInTimeAccessPolicy,
        Microsoft.Azure.PowerShell.Cmdlets.ManagedServices.Models.Api20200201Preview.IJustInTimeAccessPolicyInternal
    {

        /// <summary>Backing field for <see cref="ManagedByTenantApprover" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ManagedServices.Models.Api20200201Preview.IEligibleApprover[] _managedByTenantApprover;

        /// <summary>The list of managedByTenant approvers for the eligible authorization.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ManagedServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.ManagedServices.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.ManagedServices.Models.Api20200201Preview.IEligibleApprover[] ManagedByTenantApprover { get => this._managedByTenantApprover; set => this._managedByTenantApprover = value; }

        /// <summary>Backing field for <see cref="MaximumActivationDuration" /> property.</summary>
        private global::System.TimeSpan? _maximumActivationDuration;

        /// <summary>
        /// The maximum access duration in ISO 8601 format for just-in-time access requests.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ManagedServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.ManagedServices.PropertyOrigin.Owned)]
        public global::System.TimeSpan? MaximumActivationDuration { get => this._maximumActivationDuration; set => this._maximumActivationDuration = value; }

        /// <summary>Backing field for <see cref="MultiFactorAuthProvider" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ManagedServices.Support.MultiFactorAuthProvider _multiFactorAuthProvider;

        /// <summary>
        /// The multi-factor authorization provider to be used for just-in-time access requests.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ManagedServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.ManagedServices.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.ManagedServices.Support.MultiFactorAuthProvider MultiFactorAuthProvider { get => this._multiFactorAuthProvider; set => this._multiFactorAuthProvider = value; }

        /// <summary>Creates an new <see cref="JustInTimeAccessPolicy" /> instance.</summary>
        public JustInTimeAccessPolicy()
        {

        }
    }
    /// Just-in-time access policy setting.
    public partial interface IJustInTimeAccessPolicy :
        Microsoft.Azure.PowerShell.Cmdlets.ManagedServices.Runtime.IJsonSerializable
    {
        /// <summary>The list of managedByTenant approvers for the eligible authorization.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ManagedServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The list of managedByTenant approvers for the eligible authorization.",
        SerializedName = @"managedByTenantApprovers",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ManagedServices.Models.Api20200201Preview.IEligibleApprover) })]
        Microsoft.Azure.PowerShell.Cmdlets.ManagedServices.Models.Api20200201Preview.IEligibleApprover[] ManagedByTenantApprover { get; set; }
        /// <summary>
        /// The maximum access duration in ISO 8601 format for just-in-time access requests.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ManagedServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The maximum access duration in ISO 8601 format for just-in-time access requests.",
        SerializedName = @"maximumActivationDuration",
        PossibleTypes = new [] { typeof(global::System.TimeSpan) })]
        global::System.TimeSpan? MaximumActivationDuration { get; set; }
        /// <summary>
        /// The multi-factor authorization provider to be used for just-in-time access requests.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ManagedServices.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"The multi-factor authorization provider to be used for just-in-time access requests.",
        SerializedName = @"multiFactorAuthProvider",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ManagedServices.Support.MultiFactorAuthProvider) })]
        Microsoft.Azure.PowerShell.Cmdlets.ManagedServices.Support.MultiFactorAuthProvider MultiFactorAuthProvider { get; set; }

    }
    /// Just-in-time access policy setting.
    internal partial interface IJustInTimeAccessPolicyInternal

    {
        /// <summary>The list of managedByTenant approvers for the eligible authorization.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ManagedServices.Models.Api20200201Preview.IEligibleApprover[] ManagedByTenantApprover { get; set; }
        /// <summary>
        /// The maximum access duration in ISO 8601 format for just-in-time access requests.
        /// </summary>
        global::System.TimeSpan? MaximumActivationDuration { get; set; }
        /// <summary>
        /// The multi-factor authorization provider to be used for just-in-time access requests.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.ManagedServices.Support.MultiFactorAuthProvider MultiFactorAuthProvider { get; set; }

    }
}