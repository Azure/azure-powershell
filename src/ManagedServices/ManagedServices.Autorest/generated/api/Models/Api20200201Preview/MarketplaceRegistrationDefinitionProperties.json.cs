// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.ManagedServices.Models.Api20200201Preview
{
    using static Microsoft.Azure.PowerShell.Cmdlets.ManagedServices.Runtime.Extensions;

    /// <summary>The properties of the marketplace registration definition.</summary>
    public partial class MarketplaceRegistrationDefinitionProperties
    {

        /// <summary>
        /// <c>AfterFromJson</c> will be called after the json deserialization has finished, allowing customization of the object
        /// before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="json">The JsonNode that should be deserialized into this object.</param>

        partial void AfterFromJson(Microsoft.Azure.PowerShell.Cmdlets.ManagedServices.Runtime.Json.JsonObject json);

        /// <summary>
        /// <c>AfterToJson</c> will be called after the json erialization has finished, allowing customization of the <see cref="Microsoft.Azure.PowerShell.Cmdlets.ManagedServices.Runtime.Json.JsonObject"
        /// /> before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="container">The JSON container that the serialization result will be placed in.</param>

        partial void AfterToJson(ref Microsoft.Azure.PowerShell.Cmdlets.ManagedServices.Runtime.Json.JsonObject container);

        /// <summary>
        /// <c>BeforeFromJson</c> will be called before the json deserialization has commenced, allowing complete customization of
        /// the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <see "returnNow" /> output parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="json">The JsonNode that should be deserialized into this object.</param>
        /// <param name="returnNow">Determines if the rest of the deserialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeFromJson(Microsoft.Azure.PowerShell.Cmdlets.ManagedServices.Runtime.Json.JsonObject json, ref bool returnNow);

        /// <summary>
        /// <c>BeforeToJson</c> will be called before the json serialization has commenced, allowing complete customization of the
        /// object before it is serialized.
        /// If you wish to disable the default serialization entirely, return <c>true</c> in the <see "returnNow" /> output parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="container">The JSON container that the serialization result will be placed in.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeToJson(ref Microsoft.Azure.PowerShell.Cmdlets.ManagedServices.Runtime.Json.JsonObject container, ref bool returnNow);

        /// <summary>
        /// Deserializes a <see cref="Microsoft.Azure.PowerShell.Cmdlets.ManagedServices.Runtime.Json.JsonNode"/> into an instance of Microsoft.Azure.PowerShell.Cmdlets.ManagedServices.Models.Api20200201Preview.IMarketplaceRegistrationDefinitionProperties.
        /// </summary>
        /// <param name="node">a <see cref="Microsoft.Azure.PowerShell.Cmdlets.ManagedServices.Runtime.Json.JsonNode" /> to deserialize from.</param>
        /// <returns>
        /// an instance of Microsoft.Azure.PowerShell.Cmdlets.ManagedServices.Models.Api20200201Preview.IMarketplaceRegistrationDefinitionProperties.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.ManagedServices.Models.Api20200201Preview.IMarketplaceRegistrationDefinitionProperties FromJson(Microsoft.Azure.PowerShell.Cmdlets.ManagedServices.Runtime.Json.JsonNode node)
        {
            return node is Microsoft.Azure.PowerShell.Cmdlets.ManagedServices.Runtime.Json.JsonObject json ? new MarketplaceRegistrationDefinitionProperties(json) : null;
        }

        /// <summary>
        /// Deserializes a Microsoft.Azure.PowerShell.Cmdlets.ManagedServices.Runtime.Json.JsonObject into a new instance of <see cref="MarketplaceRegistrationDefinitionProperties" />.
        /// </summary>
        /// <param name="json">A Microsoft.Azure.PowerShell.Cmdlets.ManagedServices.Runtime.Json.JsonObject instance to deserialize from.</param>
        internal MarketplaceRegistrationDefinitionProperties(Microsoft.Azure.PowerShell.Cmdlets.ManagedServices.Runtime.Json.JsonObject json)
        {
            bool returnNow = false;
            BeforeFromJson(json, ref returnNow);
            if (returnNow)
            {
                return;
            }
            {_managedByTenantId = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.ManagedServices.Runtime.Json.JsonString>("managedByTenantId"), out var __jsonManagedByTenantId) ? (string)__jsonManagedByTenantId : (string)ManagedByTenantId;}
            {_authorization = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.ManagedServices.Runtime.Json.JsonArray>("authorizations"), out var __jsonAuthorizations) ? If( __jsonAuthorizations as Microsoft.Azure.PowerShell.Cmdlets.ManagedServices.Runtime.Json.JsonArray, out var __v) ? new global::System.Func<Microsoft.Azure.PowerShell.Cmdlets.ManagedServices.Models.Api20200201Preview.IAuthorization[]>(()=> global::System.Linq.Enumerable.ToArray(global::System.Linq.Enumerable.Select(__v, (__u)=>(Microsoft.Azure.PowerShell.Cmdlets.ManagedServices.Models.Api20200201Preview.IAuthorization) (Microsoft.Azure.PowerShell.Cmdlets.ManagedServices.Models.Api20200201Preview.Authorization.FromJson(__u) )) ))() : null : Authorization;}
            {_eligibleAuthorization = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.ManagedServices.Runtime.Json.JsonArray>("eligibleAuthorizations"), out var __jsonEligibleAuthorizations) ? If( __jsonEligibleAuthorizations as Microsoft.Azure.PowerShell.Cmdlets.ManagedServices.Runtime.Json.JsonArray, out var __q) ? new global::System.Func<Microsoft.Azure.PowerShell.Cmdlets.ManagedServices.Models.Api20200201Preview.IEligibleAuthorization[]>(()=> global::System.Linq.Enumerable.ToArray(global::System.Linq.Enumerable.Select(__q, (__p)=>(Microsoft.Azure.PowerShell.Cmdlets.ManagedServices.Models.Api20200201Preview.IEligibleAuthorization) (Microsoft.Azure.PowerShell.Cmdlets.ManagedServices.Models.Api20200201Preview.EligibleAuthorization.FromJson(__p) )) ))() : null : EligibleAuthorization;}
            {_offerDisplayName = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.ManagedServices.Runtime.Json.JsonString>("offerDisplayName"), out var __jsonOfferDisplayName) ? (string)__jsonOfferDisplayName : (string)OfferDisplayName;}
            {_publisherDisplayName = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.ManagedServices.Runtime.Json.JsonString>("publisherDisplayName"), out var __jsonPublisherDisplayName) ? (string)__jsonPublisherDisplayName : (string)PublisherDisplayName;}
            {_planDisplayName = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.ManagedServices.Runtime.Json.JsonString>("planDisplayName"), out var __jsonPlanDisplayName) ? (string)__jsonPlanDisplayName : (string)PlanDisplayName;}
            AfterFromJson(json);
        }

        /// <summary>
        /// Serializes this instance of <see cref="MarketplaceRegistrationDefinitionProperties" /> into a <see cref="Microsoft.Azure.PowerShell.Cmdlets.ManagedServices.Runtime.Json.JsonNode"
        /// />.
        /// </summary>
        /// <param name="container">The <see cref="Microsoft.Azure.PowerShell.Cmdlets.ManagedServices.Runtime.Json.JsonObject"/> container to serialize this object into. If the caller
        /// passes in <c>null</c>, a new instance will be created and returned to the caller.</param>
        /// <param name="serializationMode">Allows the caller to choose the depth of the serialization. See <see cref="Microsoft.Azure.PowerShell.Cmdlets.ManagedServices.Runtime.SerializationMode"/>.</param>
        /// <returns>
        /// a serialized instance of <see cref="MarketplaceRegistrationDefinitionProperties" /> as a <see cref="Microsoft.Azure.PowerShell.Cmdlets.ManagedServices.Runtime.Json.JsonNode"
        /// />.
        /// </returns>
        public Microsoft.Azure.PowerShell.Cmdlets.ManagedServices.Runtime.Json.JsonNode ToJson(Microsoft.Azure.PowerShell.Cmdlets.ManagedServices.Runtime.Json.JsonObject container, Microsoft.Azure.PowerShell.Cmdlets.ManagedServices.Runtime.SerializationMode serializationMode)
        {
            container = container ?? new Microsoft.Azure.PowerShell.Cmdlets.ManagedServices.Runtime.Json.JsonObject();

            bool returnNow = false;
            BeforeToJson(ref container, ref returnNow);
            if (returnNow)
            {
                return container;
            }
            AddIf( null != (((object)this._managedByTenantId)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.ManagedServices.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.ManagedServices.Runtime.Json.JsonString(this._managedByTenantId.ToString()) : null, "managedByTenantId" ,container.Add );
            if (null != this._authorization)
            {
                var __w = new Microsoft.Azure.PowerShell.Cmdlets.ManagedServices.Runtime.Json.XNodeArray();
                foreach( var __x in this._authorization )
                {
                    AddIf(__x?.ToJson(null, serializationMode) ,__w.Add);
                }
                container.Add("authorizations",__w);
            }
            if (null != this._eligibleAuthorization)
            {
                var __r = new Microsoft.Azure.PowerShell.Cmdlets.ManagedServices.Runtime.Json.XNodeArray();
                foreach( var __s in this._eligibleAuthorization )
                {
                    AddIf(__s?.ToJson(null, serializationMode) ,__r.Add);
                }
                container.Add("eligibleAuthorizations",__r);
            }
            AddIf( null != (((object)this._offerDisplayName)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.ManagedServices.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.ManagedServices.Runtime.Json.JsonString(this._offerDisplayName.ToString()) : null, "offerDisplayName" ,container.Add );
            AddIf( null != (((object)this._publisherDisplayName)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.ManagedServices.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.ManagedServices.Runtime.Json.JsonString(this._publisherDisplayName.ToString()) : null, "publisherDisplayName" ,container.Add );
            AddIf( null != (((object)this._planDisplayName)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.ManagedServices.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.ManagedServices.Runtime.Json.JsonString(this._planDisplayName.ToString()) : null, "planDisplayName" ,container.Add );
            AfterToJson(ref container);
            return container;
        }
    }
}