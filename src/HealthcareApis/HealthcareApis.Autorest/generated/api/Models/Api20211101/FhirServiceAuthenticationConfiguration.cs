// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.HealthcareApis.Models.Api20211101
{
    using static Microsoft.Azure.PowerShell.Cmdlets.HealthcareApis.Runtime.Extensions;

    /// <summary>Authentication configuration information</summary>
    public partial class FhirServiceAuthenticationConfiguration :
        Microsoft.Azure.PowerShell.Cmdlets.HealthcareApis.Models.Api20211101.IFhirServiceAuthenticationConfiguration,
        Microsoft.Azure.PowerShell.Cmdlets.HealthcareApis.Models.Api20211101.IFhirServiceAuthenticationConfigurationInternal
    {

        /// <summary>Backing field for <see cref="Audience" /> property.</summary>
        private string _audience;

        /// <summary>The audience url for the service</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HealthcareApis.Origin(Microsoft.Azure.PowerShell.Cmdlets.HealthcareApis.PropertyOrigin.Owned)]
        public string Audience { get => this._audience; set => this._audience = value; }

        /// <summary>Backing field for <see cref="Authority" /> property.</summary>
        private string _authority;

        /// <summary>The authority url for the service</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HealthcareApis.Origin(Microsoft.Azure.PowerShell.Cmdlets.HealthcareApis.PropertyOrigin.Owned)]
        public string Authority { get => this._authority; set => this._authority = value; }

        /// <summary>Backing field for <see cref="SmartProxyEnabled" /> property.</summary>
        private bool? _smartProxyEnabled;

        /// <summary>If the SMART on FHIR proxy is enabled</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HealthcareApis.Origin(Microsoft.Azure.PowerShell.Cmdlets.HealthcareApis.PropertyOrigin.Owned)]
        public bool? SmartProxyEnabled { get => this._smartProxyEnabled; set => this._smartProxyEnabled = value; }

        /// <summary>Creates an new <see cref="FhirServiceAuthenticationConfiguration" /> instance.</summary>
        public FhirServiceAuthenticationConfiguration()
        {

        }
    }
    /// Authentication configuration information
    public partial interface IFhirServiceAuthenticationConfiguration :
        Microsoft.Azure.PowerShell.Cmdlets.HealthcareApis.Runtime.IJsonSerializable
    {
        /// <summary>The audience url for the service</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HealthcareApis.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The audience url for the service",
        SerializedName = @"audience",
        PossibleTypes = new [] { typeof(string) })]
        string Audience { get; set; }
        /// <summary>The authority url for the service</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HealthcareApis.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The authority url for the service",
        SerializedName = @"authority",
        PossibleTypes = new [] { typeof(string) })]
        string Authority { get; set; }
        /// <summary>If the SMART on FHIR proxy is enabled</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HealthcareApis.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"If the SMART on FHIR proxy is enabled",
        SerializedName = @"smartProxyEnabled",
        PossibleTypes = new [] { typeof(bool) })]
        bool? SmartProxyEnabled { get; set; }

    }
    /// Authentication configuration information
    internal partial interface IFhirServiceAuthenticationConfigurationInternal

    {
        /// <summary>The audience url for the service</summary>
        string Audience { get; set; }
        /// <summary>The authority url for the service</summary>
        string Authority { get; set; }
        /// <summary>If the SMART on FHIR proxy is enabled</summary>
        bool? SmartProxyEnabled { get; set; }

    }
}