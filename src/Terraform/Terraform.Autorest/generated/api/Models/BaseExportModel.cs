// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Terraform.Models
{
    using static Microsoft.Azure.PowerShell.Cmdlets.Terraform.Runtime.Extensions;

    /// <summary>The base export parameter</summary>
    public partial class BaseExportModel :
        Microsoft.Azure.PowerShell.Cmdlets.Terraform.Models.IBaseExportModel,
        Microsoft.Azure.PowerShell.Cmdlets.Terraform.Models.IBaseExportModelInternal
    {

        /// <summary>Backing field for <see cref="FullProperty" /> property.</summary>
        private bool? _fullProperty;

        /// <summary>
        /// Whether to output all non-computed properties in the generated Terraform configuration? This probably needs manual modifications
        /// to make it valid
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Terraform.Origin(Microsoft.Azure.PowerShell.Cmdlets.Terraform.PropertyOrigin.Owned)]
        public bool? FullProperty { get => this._fullProperty; set => this._fullProperty = value; }

        /// <summary>Backing field for <see cref="MaskSensitive" /> property.</summary>
        private bool? _maskSensitive;

        /// <summary>Mask sensitive attributes in the Terraform configuration</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Terraform.Origin(Microsoft.Azure.PowerShell.Cmdlets.Terraform.PropertyOrigin.Owned)]
        public bool? MaskSensitive { get => this._maskSensitive; set => this._maskSensitive = value; }

        /// <summary>Backing field for <see cref="TargetProvider" /> property.</summary>
        private string _targetProvider;

        /// <summary>The target Azure Terraform Provider</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Terraform.Origin(Microsoft.Azure.PowerShell.Cmdlets.Terraform.PropertyOrigin.Owned)]
        public string TargetProvider { get => this._targetProvider; set => this._targetProvider = value; }

        /// <summary>Backing field for <see cref="Type" /> property.</summary>
        private string _type;

        /// <summary>The parameter type</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Terraform.Origin(Microsoft.Azure.PowerShell.Cmdlets.Terraform.PropertyOrigin.Owned)]
        public string Type { get => this._type; set => this._type = value; }

        /// <summary>Creates an new <see cref="BaseExportModel" /> instance.</summary>
        public BaseExportModel()
        {

        }
    }
    /// The base export parameter
    public partial interface IBaseExportModel :
        Microsoft.Azure.PowerShell.Cmdlets.Terraform.Runtime.IJsonSerializable
    {
        /// <summary>
        /// Whether to output all non-computed properties in the generated Terraform configuration? This probably needs manual modifications
        /// to make it valid
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Terraform.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Whether to output all non-computed properties in the generated Terraform configuration? This probably needs manual modifications to make it valid",
        SerializedName = @"fullProperties",
        PossibleTypes = new [] { typeof(bool) })]
        bool? FullProperty { get; set; }
        /// <summary>Mask sensitive attributes in the Terraform configuration</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Terraform.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Mask sensitive attributes in the Terraform configuration",
        SerializedName = @"maskSensitive",
        PossibleTypes = new [] { typeof(bool) })]
        bool? MaskSensitive { get; set; }
        /// <summary>The target Azure Terraform Provider</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Terraform.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The target Azure Terraform Provider",
        SerializedName = @"targetProvider",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.Terraform.PSArgumentCompleterAttribute("azurerm", "azapi")]
        string TargetProvider { get; set; }
        /// <summary>The parameter type</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Terraform.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The parameter type",
        SerializedName = @"type",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.Terraform.PSArgumentCompleterAttribute("ExportResource", "ExportResourceGroup", "ExportQuery")]
        string Type { get; set; }

    }
    /// The base export parameter
    internal partial interface IBaseExportModelInternal

    {
        /// <summary>
        /// Whether to output all non-computed properties in the generated Terraform configuration? This probably needs manual modifications
        /// to make it valid
        /// </summary>
        bool? FullProperty { get; set; }
        /// <summary>Mask sensitive attributes in the Terraform configuration</summary>
        bool? MaskSensitive { get; set; }
        /// <summary>The target Azure Terraform Provider</summary>
        [global::Microsoft.Azure.PowerShell.Cmdlets.Terraform.PSArgumentCompleterAttribute("azurerm", "azapi")]
        string TargetProvider { get; set; }
        /// <summary>The parameter type</summary>
        [global::Microsoft.Azure.PowerShell.Cmdlets.Terraform.PSArgumentCompleterAttribute("ExportResource", "ExportResourceGroup", "ExportQuery")]
        string Type { get; set; }

    }
}