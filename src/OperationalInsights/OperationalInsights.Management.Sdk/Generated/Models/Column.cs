// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.OperationalInsights.Models
{
    using System.Linq;

    /// <summary>
    /// Table column.
    /// </summary>
    public partial class Column
    {
        /// <summary>
        /// Initializes a new instance of the Column class.
        /// </summary>
        public Column()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the Column class.
        /// </summary>

        /// <param name="name">Column name.
        /// </param>

        /// <param name="type">Column data type.
        /// Possible values include: &#39;string&#39;, &#39;int&#39;, &#39;long&#39;, &#39;real&#39;, &#39;boolean&#39;,
        /// &#39;dateTime&#39;, &#39;guid&#39;, &#39;dynamic&#39;</param>

        /// <param name="dataTypeHint">Column data type logical hint.
        /// Possible values include: &#39;uri&#39;, &#39;guid&#39;, &#39;armPath&#39;, &#39;ip&#39;</param>

        /// <param name="displayName">Column display name.
        /// </param>

        /// <param name="description">Column description.
        /// </param>

        /// <param name="isDefaultDisplay">Is displayed by default.
        /// </param>

        /// <param name="isHidden">Is column hidden.
        /// </param>
        public Column(string name = default(string), string type = default(string), string dataTypeHint = default(string), string displayName = default(string), string description = default(string), bool? isDefaultDisplay = default(bool?), bool? isHidden = default(bool?))

        {
            this.Name = name;
            this.Type = type;
            this.DataTypeHint = dataTypeHint;
            this.DisplayName = displayName;
            this.Description = description;
            this.IsDefaultDisplay = isDefaultDisplay;
            this.IsHidden = isHidden;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets or sets column name.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "name")]
        public string Name {get; set; }

        /// <summary>
        /// Gets or sets column data type. Possible values include: &#39;string&#39;, &#39;int&#39;, &#39;long&#39;, &#39;real&#39;, &#39;boolean&#39;, &#39;dateTime&#39;, &#39;guid&#39;, &#39;dynamic&#39;
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "type")]
        public string Type {get; set; }

        /// <summary>
        /// Gets or sets column data type logical hint. Possible values include: &#39;uri&#39;, &#39;guid&#39;, &#39;armPath&#39;, &#39;ip&#39;
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "dataTypeHint")]
        public string DataTypeHint {get; set; }

        /// <summary>
        /// Gets or sets column display name.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "displayName")]
        public string DisplayName {get; set; }

        /// <summary>
        /// Gets or sets column description.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "description")]
        public string Description {get; set; }

        /// <summary>
        /// Gets is displayed by default.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "isDefaultDisplay")]
        public bool? IsDefaultDisplay {get; private set; }

        /// <summary>
        /// Gets is column hidden.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "isHidden")]
        public bool? IsHidden {get; private set; }
    }
}