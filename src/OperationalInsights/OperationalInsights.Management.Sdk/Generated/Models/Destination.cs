// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.OperationalInsights.Models
{
    using System.Linq;

    /// <summary>
    /// Destination properties.
    /// </summary>
    [Microsoft.Rest.Serialization.JsonTransformation]
    public partial class Destination
    {
        /// <summary>
        /// Initializes a new instance of the Destination class.
        /// </summary>
        public Destination()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the Destination class.
        /// </summary>

        /// <param name="resourceId">The destination resource ID. This can be copied from the Properties entry
        /// of the destination resource in Azure.
        /// </param>

        /// <param name="type">The type of the destination resource
        /// Possible values include: &#39;StorageAccount&#39;, &#39;EventHub&#39;</param>

        /// <param name="eventHubName">Optional. Allows to define an Event Hub name. Not applicable when
        /// destination is Storage Account.
        /// </param>
        public Destination(string resourceId, string type = default(string), string eventHubName = default(string))

        {
            this.ResourceId = resourceId;
            this.Type = type;
            this.EventHubName = eventHubName;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets or sets the destination resource ID. This can be copied from the
        /// Properties entry of the destination resource in Azure.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "resourceId")]
        public string ResourceId {get; set; }

        /// <summary>
        /// Gets the type of the destination resource Possible values include: &#39;StorageAccount&#39;, &#39;EventHub&#39;
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "type")]
        public string Type {get; private set; }

        /// <summary>
        /// Gets or sets optional. Allows to define an Event Hub name. Not applicable
        /// when destination is Storage Account.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "metaData.eventHubName")]
        public string EventHubName {get; set; }
        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (this.ResourceId == null)
            {
                throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.CannotBeNull, "ResourceId");
            }



        }
    }
}