// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.OperationalInsights.Models
{
    using System.Linq;

    /// <summary>
    /// The top level data export resource container.
    /// </summary>
    [Microsoft.Rest.Serialization.JsonTransformation]
    public partial class DataExport : Microsoft.Rest.Azure.IResource
    {
        /// <summary>
        /// Initializes a new instance of the DataExport class.
        /// </summary>
        public DataExport()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the DataExport class.
        /// </summary>

        /// <param name="dataExportId">The data export rule ID.
        /// </param>

        /// <param name="tableNames">An array of tables to export, for example: [“Heartbeat, SecurityEvent”].
        /// </param>

        /// <param name="enable">Active when enabled.
        /// </param>

        /// <param name="createdDate">The latest data export rule modification time.
        /// </param>

        /// <param name="lastModifiedDate">Date and time when the export was last modified.
        /// </param>

        /// <param name="resourceId">The destination resource ID. This can be copied from the Properties entry
        /// of the destination resource in Azure.
        /// </param>

        /// <param name="dataExportType">The type of the destination resource
        /// Possible values include: &#39;StorageAccount&#39;, &#39;EventHub&#39;</param>

        /// <param name="eventHubName">Optional. Allows to define an Event Hub name. Not applicable when
        /// destination is Storage Account.
        /// </param>
        public DataExport(string dataExportId = default(string), System.Collections.Generic.IList<string> tableNames = default(System.Collections.Generic.IList<string>), bool? enable = default(bool?), string createdDate = default(string), string lastModifiedDate = default(string), string resourceId = default(string), string dataExportType = default(string), string eventHubName = default(string))

        {
            this.DataExportId = dataExportId;
            this.TableNames = tableNames;
            this.Enable = enable;
            this.CreatedDate = createdDate;
            this.LastModifiedDate = lastModifiedDate;
            this.ResourceId = resourceId;
            this.DataExportType = dataExportType;
            this.EventHubName = eventHubName;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets or sets the data export rule ID.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.dataExportId")]
        public string DataExportId {get; set; }

        /// <summary>
        /// Gets or sets an array of tables to export, for example: [“Heartbeat,
        /// SecurityEvent”].
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.tableNames")]
        public System.Collections.Generic.IList<string> TableNames {get; set; }

        /// <summary>
        /// Gets or sets active when enabled.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.enable")]
        public bool? Enable {get; set; }

        /// <summary>
        /// Gets or sets the latest data export rule modification time.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.createdDate")]
        public string CreatedDate {get; set; }

        /// <summary>
        /// Gets or sets date and time when the export was last modified.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.lastModifiedDate")]
        public string LastModifiedDate {get; set; }

        /// <summary>
        /// Gets or sets the destination resource ID. This can be copied from the
        /// Properties entry of the destination resource in Azure.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.destination.resourceId")]
        public string ResourceId {get; set; }

        /// <summary>
        /// Gets the type of the destination resource Possible values include: &#39;StorageAccount&#39;, &#39;EventHub&#39;
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.destination.type")]
        public string DataExportType {get; private set; }

        /// <summary>
        /// Gets or sets optional. Allows to define an Event Hub name. Not applicable
        /// when destination is Storage Account.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.destination.metaData.eventHubName")]
        public string EventHubName {get; set; }
    }
}