// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.OperationalInsights.Models
{
    using System.Linq;

    /// <summary>
    /// Workspace features.
    /// </summary>
    public partial class WorkspaceFeatures
    {
        /// <summary>
        /// Initializes a new instance of the WorkspaceFeatures class.
        /// </summary>
        public WorkspaceFeatures()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the WorkspaceFeatures class.
        /// </summary>

        /// <param name="additionalProperties">Workspace features.
        /// </param>

        /// <param name="enableDataExport">Flag that indicate if data should be exported.
        /// </param>

        /// <param name="immediatePurgeDataOn30Days">Flag that describes if we want to remove the data after 30 days.
        /// </param>

        /// <param name="enableLogAccessUsingOnlyResourcePermissions">Flag that indicate which permission to use - resource or workspace or both.
        /// </param>

        /// <param name="clusterResourceId">Dedicated LA cluster resourceId that is linked to the workspaces.
        /// </param>

        /// <param name="disableLocalAuth">Disable Non-AAD based Auth.
        /// </param>
        public WorkspaceFeatures(System.Collections.Generic.IDictionary<string, object> additionalProperties = default(System.Collections.Generic.IDictionary<string, object>), bool? enableDataExport = default(bool?), bool? immediatePurgeDataOn30Days = default(bool?), bool? enableLogAccessUsingOnlyResourcePermissions = default(bool?), string clusterResourceId = default(string), bool? disableLocalAuth = default(bool?))

        {
            this.AdditionalProperties = additionalProperties;
            this.EnableDataExport = enableDataExport;
            this.ImmediatePurgeDataOn30Days = immediatePurgeDataOn30Days;
            this.EnableLogAccessUsingOnlyResourcePermissions = enableLogAccessUsingOnlyResourcePermissions;
            this.ClusterResourceId = clusterResourceId;
            this.DisableLocalAuth = disableLocalAuth;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets or sets workspace features.
        /// </summary>
        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties {get; set; }

        /// <summary>
        /// Gets or sets flag that indicate if data should be exported.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "enableDataExport")]
        public bool? EnableDataExport {get; set; }

        /// <summary>
        /// Gets or sets flag that describes if we want to remove the data after 30
        /// days.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "immediatePurgeDataOn30Days")]
        public bool? ImmediatePurgeDataOn30Days {get; set; }

        /// <summary>
        /// Gets or sets flag that indicate which permission to use - resource or
        /// workspace or both.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "enableLogAccessUsingOnlyResourcePermissions")]
        public bool? EnableLogAccessUsingOnlyResourcePermissions {get; set; }

        /// <summary>
        /// Gets or sets dedicated LA cluster resourceId that is linked to the
        /// workspaces.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "clusterResourceId")]
        public string ClusterResourceId {get; set; }

        /// <summary>
        /// Gets or sets disable Non-AAD based Auth.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "disableLocalAuth")]
        public bool? DisableLocalAuth {get; set; }
    }
}