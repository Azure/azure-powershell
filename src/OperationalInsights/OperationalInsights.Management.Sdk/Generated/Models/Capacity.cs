// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.OperationalInsights.Models
{

    /// <summary>
    /// Defines values for Capacity.
    /// </summary>


    [Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
    public enum Capacity
    {
        [System.Runtime.Serialization.EnumMember(Value = "500")]
        FiveHundred,
        [System.Runtime.Serialization.EnumMember(Value = "1000")]
        TenHundred,
        [System.Runtime.Serialization.EnumMember(Value = "2000")]
        TwoThousand,
        [System.Runtime.Serialization.EnumMember(Value = "5000")]
        FiveThousand
    }
    internal static class CapacityEnumExtension
    {
        internal static string ToSerializedValue(this Capacity? value)
        {
            return value == null ? null : ((Capacity)value).ToSerializedValue();
        }
        internal static string ToSerializedValue(this Capacity value)
        {
            switch( value )
            {
                case Capacity.FiveHundred:
                    return "500";
                case Capacity.TenHundred:
                    return "1000";
                case Capacity.TwoThousand:
                    return "2000";
                case Capacity.FiveThousand:
                    return "5000";
            }
            return null;
        }
        internal static Capacity? ParseCapacity(this string value)
        {
            switch( value )
            {
                case "500":
                    return Capacity.FiveHundred;
                case "1000":
                    return Capacity.TenHundred;
                case "2000":
                    return Capacity.TwoThousand;
                case "5000":
                    return Capacity.FiveThousand;
            }
            return null;
        }
    }
}