// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.OperationalInsights.Models
{
    using System.Linq;

    /// <summary>
    /// Linked service properties.
    /// </summary>
    public partial class LinkedServiceProperties
    {
        /// <summary>
        /// Initializes a new instance of the LinkedServiceProperties class.
        /// </summary>
        public LinkedServiceProperties()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the LinkedServiceProperties class.
        /// </summary>

        /// <param name="resourceId">The resource id of the resource that will be linked to the workspace. This
        /// should be used for linking resources which require read access
        /// </param>

        /// <param name="writeAccessResourceId">The resource id of the resource that will be linked to the workspace. This
        /// should be used for linking resources which require write access
        /// </param>

        /// <param name="provisioningState">The provisioning state of the linked service.
        /// Possible values include: &#39;Succeeded&#39;, &#39;Deleting&#39;, &#39;ProvisioningAccount&#39;,
        /// &#39;Updating&#39;</param>
        public LinkedServiceProperties(string resourceId = default(string), string writeAccessResourceId = default(string), string provisioningState = default(string))

        {
            this.ResourceId = resourceId;
            this.WriteAccessResourceId = writeAccessResourceId;
            this.ProvisioningState = provisioningState;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets or sets the resource id of the resource that will be linked to the
        /// workspace. This should be used for linking resources which require read
        /// access
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "resourceId")]
        public string ResourceId {get; set; }

        /// <summary>
        /// Gets or sets the resource id of the resource that will be linked to the
        /// workspace. This should be used for linking resources which require write
        /// access
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "writeAccessResourceId")]
        public string WriteAccessResourceId {get; set; }

        /// <summary>
        /// Gets or sets the provisioning state of the linked service. Possible values include: &#39;Succeeded&#39;, &#39;Deleting&#39;, &#39;ProvisioningAccount&#39;, &#39;Updating&#39;
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "provisioningState")]
        public string ProvisioningState {get; set; }
    }
}