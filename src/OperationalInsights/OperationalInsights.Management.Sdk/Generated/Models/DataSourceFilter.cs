// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.OperationalInsights.Models
{
    using System.Linq;

    /// <summary>
    /// DataSource filter. Right now, only filter by kind is supported.
    /// </summary>
    public partial class DataSourceFilter
    {
        /// <summary>
        /// Initializes a new instance of the DataSourceFilter class.
        /// </summary>
        public DataSourceFilter()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the DataSourceFilter class.
        /// </summary>

        /// <param name="kind">The kind of the DataSource.
        /// Possible values include: &#39;WindowsEvent&#39;, &#39;WindowsPerformanceCounter&#39;,
        /// &#39;IISLogs&#39;, &#39;LinuxSyslog&#39;, &#39;LinuxSyslogCollection&#39;,
        /// &#39;LinuxPerformanceObject&#39;, &#39;LinuxPerformanceCollection&#39;, &#39;CustomLog&#39;,
        /// &#39;CustomLogCollection&#39;, &#39;AzureAuditLog&#39;, &#39;AzureActivityLog&#39;,
        /// &#39;GenericDataSource&#39;, &#39;ChangeTrackingCustomPath&#39;, &#39;ChangeTrackingPath&#39;,
        /// &#39;ChangeTrackingServices&#39;, &#39;ChangeTrackingDataTypeConfiguration&#39;,
        /// &#39;ChangeTrackingDefaultRegistry&#39;, &#39;ChangeTrackingRegistry&#39;,
        /// &#39;ChangeTrackingLinuxPath&#39;, &#39;LinuxChangeTrackingPath&#39;,
        /// &#39;ChangeTrackingContentLocation&#39;, &#39;WindowsTelemetry&#39;, &#39;Office365&#39;,
        /// &#39;SecurityWindowsBaselineConfiguration&#39;,
        /// &#39;SecurityCenterSecurityWindowsBaselineConfiguration&#39;,
        /// &#39;SecurityEventCollectionConfiguration&#39;,
        /// &#39;SecurityInsightsSecurityEventCollectionConfiguration&#39;,
        /// &#39;ImportComputerGroup&#39;, &#39;NetworkMonitoring&#39;, &#39;Itsm&#39;, &#39;DnsAnalytics&#39;,
        /// &#39;ApplicationInsights&#39;, &#39;SqlDataClassification&#39;</param>
        public DataSourceFilter(string kind = default(string))

        {
            this.Kind = kind;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets or sets the kind of the DataSource. Possible values include: &#39;WindowsEvent&#39;, &#39;WindowsPerformanceCounter&#39;, &#39;IISLogs&#39;, &#39;LinuxSyslog&#39;, &#39;LinuxSyslogCollection&#39;, &#39;LinuxPerformanceObject&#39;, &#39;LinuxPerformanceCollection&#39;, &#39;CustomLog&#39;, &#39;CustomLogCollection&#39;, &#39;AzureAuditLog&#39;, &#39;AzureActivityLog&#39;, &#39;GenericDataSource&#39;, &#39;ChangeTrackingCustomPath&#39;, &#39;ChangeTrackingPath&#39;, &#39;ChangeTrackingServices&#39;, &#39;ChangeTrackingDataTypeConfiguration&#39;, &#39;ChangeTrackingDefaultRegistry&#39;, &#39;ChangeTrackingRegistry&#39;, &#39;ChangeTrackingLinuxPath&#39;, &#39;LinuxChangeTrackingPath&#39;, &#39;ChangeTrackingContentLocation&#39;, &#39;WindowsTelemetry&#39;, &#39;Office365&#39;, &#39;SecurityWindowsBaselineConfiguration&#39;, &#39;SecurityCenterSecurityWindowsBaselineConfiguration&#39;, &#39;SecurityEventCollectionConfiguration&#39;, &#39;SecurityInsightsSecurityEventCollectionConfiguration&#39;, &#39;ImportComputerGroup&#39;, &#39;NetworkMonitoring&#39;, &#39;Itsm&#39;, &#39;DnsAnalytics&#39;, &#39;ApplicationInsights&#39;, &#39;SqlDataClassification&#39;
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "kind")]
        public string Kind {get; set; }
    }
}