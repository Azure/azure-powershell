// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.OperationalInsights.Models
{
    using System.Linq;

    /// <summary>
    /// The top level Log Analytics cluster resource container.
    /// </summary>
    [Microsoft.Rest.Serialization.JsonTransformation]
    public partial class ClusterPatch : Microsoft.Rest.Azure.IResource
    {
        /// <summary>
        /// Initializes a new instance of the ClusterPatch class.
        /// </summary>
        public ClusterPatch()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the ClusterPatch class.
        /// </summary>

        /// <param name="identity">The identity of the resource.
        /// </param>

        /// <param name="sku">The sku properties.
        /// </param>

        /// <param name="tags">Resource tags.
        /// </param>

        /// <param name="billingType">The cluster&#39;s billing type.
        /// Possible values include: &#39;Cluster&#39;, &#39;Workspaces&#39;</param>

        /// <param name="keyVaultProperties">The associated key properties.
        /// </param>
        public ClusterPatch(Identity identity = default(Identity), ClusterSku sku = default(ClusterSku), System.Collections.Generic.IDictionary<string, string> tags = default(System.Collections.Generic.IDictionary<string, string>), string billingType = default(string), KeyVaultProperties keyVaultProperties = default(KeyVaultProperties))

        {
            this.Identity = identity;
            this.Sku = sku;
            this.Tags = tags;
            this.BillingType = billingType;
            this.KeyVaultProperties = keyVaultProperties;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets or sets the identity of the resource.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "identity")]
        public Identity Identity {get; set; }

        /// <summary>
        /// Gets or sets the sku properties.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "sku")]
        public ClusterSku Sku {get; set; }

        /// <summary>
        /// Gets or sets resource tags.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "tags")]
        public System.Collections.Generic.IDictionary<string, string> Tags {get; set; }

        /// <summary>
        /// Gets or sets the cluster&#39;s billing type. Possible values include: &#39;Cluster&#39;, &#39;Workspaces&#39;
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.billingType")]
        public string BillingType {get; set; }

        /// <summary>
        /// Gets or sets the associated key properties.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.keyVaultProperties")]
        public KeyVaultProperties KeyVaultProperties {get; set; }
        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (this.Identity != null)
            {
                this.Identity.Validate();
            }




        }
    }
}