// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.OperationalInsights.Models
{
    using System.Linq;

    /// <summary>
    /// Management group properties.
    /// </summary>
    public partial class ManagementGroupProperties
    {
        /// <summary>
        /// Initializes a new instance of the ManagementGroupProperties class.
        /// </summary>
        public ManagementGroupProperties()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the ManagementGroupProperties class.
        /// </summary>

        /// <param name="serverCount">The number of servers connected to the management group.
        /// </param>

        /// <param name="isGateway">Gets or sets a value indicating whether the management group is a gateway.
        /// </param>

        /// <param name="name">The name of the management group.
        /// </param>

        /// <param name="id">The unique ID of the management group.
        /// </param>

        /// <param name="created">The datetime that the management group was created.
        /// </param>

        /// <param name="dataReceived">The last datetime that the management group received data.
        /// </param>

        /// <param name="version">The version of System Center that is managing the management group.
        /// </param>

        /// <param name="sku">The SKU of System Center that is managing the management group.
        /// </param>
        public ManagementGroupProperties(int? serverCount = default(int?), bool? isGateway = default(bool?), string name = default(string), string id = default(string), System.DateTime? created = default(System.DateTime?), System.DateTime? dataReceived = default(System.DateTime?), string version = default(string), string sku = default(string))

        {
            this.ServerCount = serverCount;
            this.IsGateway = isGateway;
            this.Name = name;
            this.Id = id;
            this.Created = created;
            this.DataReceived = dataReceived;
            this.Version = version;
            this.Sku = sku;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets or sets the number of servers connected to the management group.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "serverCount")]
        public int? ServerCount {get; set; }

        /// <summary>
        /// Gets or sets gets or sets a value indicating whether the management group
        /// is a gateway.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "isGateway")]
        public bool? IsGateway {get; set; }

        /// <summary>
        /// Gets or sets the name of the management group.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "name")]
        public string Name {get; set; }

        /// <summary>
        /// Gets or sets the unique ID of the management group.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "id")]
        public string Id {get; set; }

        /// <summary>
        /// Gets or sets the datetime that the management group was created.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "created")]
        public System.DateTime? Created {get; set; }

        /// <summary>
        /// Gets or sets the last datetime that the management group received data.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "dataReceived")]
        public System.DateTime? DataReceived {get; set; }

        /// <summary>
        /// Gets or sets the version of System Center that is managing the management
        /// group.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "version")]
        public string Version {get; set; }

        /// <summary>
        /// Gets or sets the SKU of System Center that is managing the management
        /// group.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "sku")]
        public string Sku {get; set; }
    }
}