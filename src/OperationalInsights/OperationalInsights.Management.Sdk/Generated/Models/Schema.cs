// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.OperationalInsights.Models
{
    using System.Linq;

    /// <summary>
    /// Table&#39;s schema.
    /// </summary>
    public partial class Schema
    {
        /// <summary>
        /// Initializes a new instance of the Schema class.
        /// </summary>
        public Schema()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the Schema class.
        /// </summary>

        /// <param name="name">Table name.
        /// </param>

        /// <param name="displayName">Table display name.
        /// </param>

        /// <param name="description">Table description.
        /// </param>

        /// <param name="columns">A list of table custom columns.
        /// </param>

        /// <param name="standardColumns">A list of table standard columns.
        /// </param>

        /// <param name="categories">Table category.
        /// </param>

        /// <param name="labels">Table labels.
        /// </param>

        /// <param name="source">Table&#39;s creator.
        /// Possible values include: &#39;microsoft&#39;, &#39;customer&#39;</param>

        /// <param name="tableType">Table&#39;s creator.
        /// Possible values include: &#39;Microsoft&#39;, &#39;CustomLog&#39;, &#39;RestoredLogs&#39;,
        /// &#39;SearchResults&#39;</param>

        /// <param name="tableSubType">The subtype describes what APIs can be used to interact with the table, and
        /// what features are available against it.
        /// Possible values include: &#39;Any&#39;, &#39;Classic&#39;, &#39;DataCollectionRuleBased&#39;</param>

        /// <param name="solutions">List of solutions the table is affiliated with
        /// </param>

        /// <param name="searchResults">Parameters of the search job that initiated this table.
        /// </param>

        /// <param name="restoredLogs">Parameters of the restore operation that initiated this table.
        /// </param>
        public Schema(string name = default(string), string displayName = default(string), string description = default(string), System.Collections.Generic.IList<Column> columns = default(System.Collections.Generic.IList<Column>), System.Collections.Generic.IList<Column> standardColumns = default(System.Collections.Generic.IList<Column>), System.Collections.Generic.IList<string> categories = default(System.Collections.Generic.IList<string>), System.Collections.Generic.IList<string> labels = default(System.Collections.Generic.IList<string>), string source = default(string), string tableType = default(string), string tableSubType = default(string), System.Collections.Generic.IList<string> solutions = default(System.Collections.Generic.IList<string>), SearchResults searchResults = default(SearchResults), RestoredLogs restoredLogs = default(RestoredLogs))

        {
            this.Name = name;
            this.DisplayName = displayName;
            this.Description = description;
            this.Columns = columns;
            this.StandardColumns = standardColumns;
            this.Categories = categories;
            this.Labels = labels;
            this.Source = source;
            this.TableType = tableType;
            this.TableSubType = tableSubType;
            this.Solutions = solutions;
            this.SearchResults = searchResults;
            this.RestoredLogs = restoredLogs;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets or sets table name.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "name")]
        public string Name {get; set; }

        /// <summary>
        /// Gets or sets table display name.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "displayName")]
        public string DisplayName {get; set; }

        /// <summary>
        /// Gets or sets table description.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "description")]
        public string Description {get; set; }

        /// <summary>
        /// Gets or sets a list of table custom columns.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "columns")]
        public System.Collections.Generic.IList<Column> Columns {get; set; }

        /// <summary>
        /// Gets a list of table standard columns.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "standardColumns")]
        public System.Collections.Generic.IList<Column> StandardColumns {get; private set; }

        /// <summary>
        /// Gets table category.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "categories")]
        public System.Collections.Generic.IList<string> Categories {get; private set; }

        /// <summary>
        /// Gets table labels.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "labels")]
        public System.Collections.Generic.IList<string> Labels {get; private set; }

        /// <summary>
        /// Gets table&#39;s creator. Possible values include: &#39;microsoft&#39;, &#39;customer&#39;
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "source")]
        public string Source {get; private set; }

        /// <summary>
        /// Gets table&#39;s creator. Possible values include: &#39;Microsoft&#39;, &#39;CustomLog&#39;, &#39;RestoredLogs&#39;, &#39;SearchResults&#39;
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "tableType")]
        public string TableType {get; private set; }

        /// <summary>
        /// Gets the subtype describes what APIs can be used to interact with the
        /// table, and what features are available against it. Possible values include: &#39;Any&#39;, &#39;Classic&#39;, &#39;DataCollectionRuleBased&#39;
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "tableSubType")]
        public string TableSubType {get; private set; }

        /// <summary>
        /// Gets list of solutions the table is affiliated with
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "solutions")]
        public System.Collections.Generic.IList<string> Solutions {get; private set; }

        /// <summary>
        /// Gets parameters of the search job that initiated this table.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "searchResults")]
        public SearchResults SearchResults {get; private set; }

        /// <summary>
        /// Gets parameters of the restore operation that initiated this table.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "restoredLogs")]
        public RestoredLogs RestoredLogs {get; private set; }
    }
}