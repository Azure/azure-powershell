// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.OperationalInsights.Models
{
    using System.Linq;

    /// <summary>
    /// The daily volume cap for ingestion.
    /// </summary>
    public partial class WorkspaceCapping
    {
        /// <summary>
        /// Initializes a new instance of the WorkspaceCapping class.
        /// </summary>
        public WorkspaceCapping()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the WorkspaceCapping class.
        /// </summary>

        /// <param name="dailyQuotaGb">The workspace daily quota for ingestion.
        /// </param>

        /// <param name="quotaNextResetTime">The time when the quota will be rest.
        /// </param>

        /// <param name="dataIngestionStatus">The status of data ingestion for this workspace.
        /// Possible values include: &#39;RespectQuota&#39;, &#39;ForceOn&#39;, &#39;ForceOff&#39;,
        /// &#39;OverQuota&#39;, &#39;SubscriptionSuspended&#39;, &#39;ApproachingQuota&#39;</param>
        public WorkspaceCapping(double? dailyQuotaGb = default(double?), string quotaNextResetTime = default(string), string dataIngestionStatus = default(string))

        {
            this.DailyQuotaGb = dailyQuotaGb;
            this.QuotaNextResetTime = quotaNextResetTime;
            this.DataIngestionStatus = dataIngestionStatus;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets or sets the workspace daily quota for ingestion.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "dailyQuotaGb")]
        public double? DailyQuotaGb {get; set; }

        /// <summary>
        /// Gets the time when the quota will be rest.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "quotaNextResetTime")]
        public string QuotaNextResetTime {get; private set; }

        /// <summary>
        /// Gets the status of data ingestion for this workspace. Possible values include: &#39;RespectQuota&#39;, &#39;ForceOn&#39;, &#39;ForceOff&#39;, &#39;OverQuota&#39;, &#39;SubscriptionSuspended&#39;, &#39;ApproachingQuota&#39;
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "dataIngestionStatus")]
        public string DataIngestionStatus {get; private set; }
    }
}