// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.OperationalInsights.Models
{
    using System.Linq;

    /// <summary>
    /// Linked storage accounts top level resource container.
    /// </summary>
    [Microsoft.Rest.Serialization.JsonTransformation]
    public partial class LinkedStorageAccountsResource : ProxyResource
    {
        /// <summary>
        /// Initializes a new instance of the LinkedStorageAccountsResource class.
        /// </summary>
        public LinkedStorageAccountsResource()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the LinkedStorageAccountsResource class.
        /// </summary>

        /// <param name="id">Fully qualified resource ID for the resource. Ex -
        /// /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        /// </param>

        /// <param name="name">The name of the resource
        /// </param>

        /// <param name="type">The type of the resource. E.g. &#34;Microsoft.Compute/virtualMachines&#34; or
        /// &#34;Microsoft.Storage/storageAccounts&#34;
        /// </param>

        /// <param name="dataSourceType">Linked storage accounts type.
        /// Possible values include: &#39;CustomLogs&#39;, &#39;AzureWatson&#39;, &#39;Query&#39;, &#39;Alerts&#39;</param>

        /// <param name="storageAccountIds">Linked storage accounts resources ids.
        /// </param>
        public LinkedStorageAccountsResource(string id = default(string), string name = default(string), string type = default(string), DataSourceType? dataSourceType = default(DataSourceType?), System.Collections.Generic.IList<string> storageAccountIds = default(System.Collections.Generic.IList<string>))

        : base(id, name, type)
        {
            this.DataSourceType = dataSourceType;
            this.StorageAccountIds = storageAccountIds;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets linked storage accounts type. Possible values include: &#39;CustomLogs&#39;, &#39;AzureWatson&#39;, &#39;Query&#39;, &#39;Alerts&#39;
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.dataSourceType")]
        public DataSourceType? DataSourceType {get; private set; }

        /// <summary>
        /// Gets or sets linked storage accounts resources ids.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.storageAccountIds")]
        public System.Collections.Generic.IList<string> StorageAccountIds {get; set; }
    }
}