// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.OperationalInsights.Models
{
    using System.Linq;

    /// <summary>
    /// Storage insight properties.
    /// </summary>
    public partial class StorageInsightProperties
    {
        /// <summary>
        /// Initializes a new instance of the StorageInsightProperties class.
        /// </summary>
        public StorageInsightProperties()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the StorageInsightProperties class.
        /// </summary>

        /// <param name="containers">The names of the blob containers that the workspace should read
        /// </param>

        /// <param name="tables">The names of the Azure tables that the workspace should read
        /// </param>

        /// <param name="storageAccount">The storage account connection details
        /// </param>

        /// <param name="status">The status of the storage insight
        /// </param>
        public StorageInsightProperties(StorageAccount storageAccount, System.Collections.Generic.IList<string> containers = default(System.Collections.Generic.IList<string>), System.Collections.Generic.IList<string> tables = default(System.Collections.Generic.IList<string>), StorageInsightStatus status = default(StorageInsightStatus))

        {
            this.Containers = containers;
            this.Tables = tables;
            this.StorageAccount = storageAccount;
            this.Status = status;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets or sets the names of the blob containers that the workspace should
        /// read
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "containers")]
        public System.Collections.Generic.IList<string> Containers {get; set; }

        /// <summary>
        /// Gets or sets the names of the Azure tables that the workspace should read
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "tables")]
        public System.Collections.Generic.IList<string> Tables {get; set; }

        /// <summary>
        /// Gets or sets the storage account connection details
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "storageAccount")]
        public StorageAccount StorageAccount {get; set; }

        /// <summary>
        /// Gets the status of the storage insight
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "status")]
        public StorageInsightStatus Status {get; private set; }
        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (this.StorageAccount == null)
            {
                throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.CannotBeNull, "StorageAccount");
            }


            if (this.StorageAccount != null)
            {
                this.StorageAccount.Validate();
            }
            if (this.Status != null)
            {
                this.Status.Validate();
            }
        }
    }
}