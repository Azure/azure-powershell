// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.WebSites.Models
{
    using System.Linq;

    /// <summary>
    /// Database connection string value to type pair.
    /// </summary>
    public partial class ConnStringValueTypePair
    {
        /// <summary>
        /// Initializes a new instance of the ConnStringValueTypePair class.
        /// </summary>
        public ConnStringValueTypePair()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the ConnStringValueTypePair class.
        /// </summary>

        /// <param name="value">Value of pair.
        /// </param>

        /// <param name="type">Type of database.
        /// Possible values include: &#39;MySql&#39;, &#39;SQLServer&#39;, &#39;SQLAzure&#39;, &#39;Custom&#39;,
        /// &#39;NotificationHub&#39;, &#39;ServiceBus&#39;, &#39;EventHub&#39;, &#39;ApiHub&#39;, &#39;DocDb&#39;,
        /// &#39;RedisCache&#39;, &#39;PostgreSQL&#39;</param>
        public ConnStringValueTypePair(string value, ConnectionStringType type)

        {
            this.Value = value;
            this.Type = type;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets or sets value of pair.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "value")]
        public string Value {get; set; }

        /// <summary>
        /// Gets or sets type of database. Possible values include: &#39;MySql&#39;, &#39;SQLServer&#39;, &#39;SQLAzure&#39;, &#39;Custom&#39;, &#39;NotificationHub&#39;, &#39;ServiceBus&#39;, &#39;EventHub&#39;, &#39;ApiHub&#39;, &#39;DocDb&#39;, &#39;RedisCache&#39;, &#39;PostgreSQL&#39;
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "type")]
        public ConnectionStringType Type {get; set; }
        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (this.Value == null)
            {
                throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.CannotBeNull, "Value");
            }


        }
    }
}