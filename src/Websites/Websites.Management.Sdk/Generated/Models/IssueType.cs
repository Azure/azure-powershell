// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.WebSites.Models
{

    /// <summary>
    /// Defines values for IssueType.
    /// </summary>


    [Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
    public enum IssueType
    {
        [System.Runtime.Serialization.EnumMember(Value = "ServiceIncident")]
        ServiceIncident,
        [System.Runtime.Serialization.EnumMember(Value = "AppDeployment")]
        AppDeployment,
        [System.Runtime.Serialization.EnumMember(Value = "AppCrash")]
        AppCrash,
        [System.Runtime.Serialization.EnumMember(Value = "RuntimeIssueDetected")]
        RuntimeIssueDetected,
        [System.Runtime.Serialization.EnumMember(Value = "AseDeployment")]
        AseDeployment,
        [System.Runtime.Serialization.EnumMember(Value = "UserIssue")]
        UserIssue,
        [System.Runtime.Serialization.EnumMember(Value = "PlatformIssue")]
        PlatformIssue,
        [System.Runtime.Serialization.EnumMember(Value = "Other")]
        Other
    }
    internal static class IssueTypeEnumExtension
    {
        internal static string ToSerializedValue(this IssueType? value)
        {
            return value == null ? null : ((IssueType)value).ToSerializedValue();
        }
        internal static string ToSerializedValue(this IssueType value)
        {
            switch( value )
            {
                case IssueType.ServiceIncident:
                    return "ServiceIncident";
                case IssueType.AppDeployment:
                    return "AppDeployment";
                case IssueType.AppCrash:
                    return "AppCrash";
                case IssueType.RuntimeIssueDetected:
                    return "RuntimeIssueDetected";
                case IssueType.AseDeployment:
                    return "AseDeployment";
                case IssueType.UserIssue:
                    return "UserIssue";
                case IssueType.PlatformIssue:
                    return "PlatformIssue";
                case IssueType.Other:
                    return "Other";
            }
            return null;
        }
        internal static IssueType? ParseIssueType(this string value)
        {
            switch( value )
            {
                case "ServiceIncident":
                    return IssueType.ServiceIncident;
                case "AppDeployment":
                    return IssueType.AppDeployment;
                case "AppCrash":
                    return IssueType.AppCrash;
                case "RuntimeIssueDetected":
                    return IssueType.RuntimeIssueDetected;
                case "AseDeployment":
                    return IssueType.AseDeployment;
                case "UserIssue":
                    return IssueType.UserIssue;
                case "PlatformIssue":
                    return IssueType.PlatformIssue;
                case "Other":
                    return IssueType.Other;
            }
            return null;
        }
    }
}