// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.WebSites.Models
{
    using System.Linq;

    public partial class ArcConfiguration
    {
        /// <summary>
        /// Initializes a new instance of the ArcConfiguration class.
        /// </summary>
        public ArcConfiguration()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the ArcConfiguration class.
        /// </summary>

        /// <param name="artifactsStorageType">
        /// Possible values include: &#39;LocalNode&#39;, &#39;NetworkFileSystem&#39;</param>

        /// <param name="artifactStorageClassName">
        /// </param>

        /// <param name="artifactStorageMountPath">
        /// </param>

        /// <param name="artifactStorageNodeName">
        /// </param>

        /// <param name="artifactStorageAccessMode">
        /// </param>

        /// <param name="frontEndServiceConfiguration">
        /// </param>

        /// <param name="kubeConfig">
        /// </param>
        public ArcConfiguration(StorageType? artifactsStorageType = default(StorageType?), string artifactStorageClassName = default(string), string artifactStorageMountPath = default(string), string artifactStorageNodeName = default(string), string artifactStorageAccessMode = default(string), FrontEndConfiguration frontEndServiceConfiguration = default(FrontEndConfiguration), string kubeConfig = default(string))

        {
            this.ArtifactsStorageType = artifactsStorageType;
            this.ArtifactStorageClassName = artifactStorageClassName;
            this.ArtifactStorageMountPath = artifactStorageMountPath;
            this.ArtifactStorageNodeName = artifactStorageNodeName;
            this.ArtifactStorageAccessMode = artifactStorageAccessMode;
            this.FrontEndServiceConfiguration = frontEndServiceConfiguration;
            this.KubeConfig = kubeConfig;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets or sets Possible values include: &#39;LocalNode&#39;, &#39;NetworkFileSystem&#39;
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "artifactsStorageType")]
        public StorageType? ArtifactsStorageType {get; set; }

        /// <summary>
        /// Gets or sets
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "artifactStorageClassName")]
        public string ArtifactStorageClassName {get; set; }

        /// <summary>
        /// Gets or sets
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "artifactStorageMountPath")]
        public string ArtifactStorageMountPath {get; set; }

        /// <summary>
        /// Gets or sets
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "artifactStorageNodeName")]
        public string ArtifactStorageNodeName {get; set; }

        /// <summary>
        /// Gets or sets
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "artifactStorageAccessMode")]
        public string ArtifactStorageAccessMode {get; set; }

        /// <summary>
        /// Gets or sets
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "frontEndServiceConfiguration")]
        public FrontEndConfiguration FrontEndServiceConfiguration {get; set; }

        /// <summary>
        /// Gets or sets
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "kubeConfig")]
        public string KubeConfig {get; set; }
    }
}