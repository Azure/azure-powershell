// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.WebSites.Models
{

    /// <summary>
    /// Defines values for SiteLoadBalancing.
    /// </summary>


    [Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
    public enum SiteLoadBalancing
    {
        [System.Runtime.Serialization.EnumMember(Value = "WeightedRoundRobin")]
        WeightedRoundRobin,
        [System.Runtime.Serialization.EnumMember(Value = "LeastRequests")]
        LeastRequests,
        [System.Runtime.Serialization.EnumMember(Value = "LeastResponseTime")]
        LeastResponseTime,
        [System.Runtime.Serialization.EnumMember(Value = "WeightedTotalTraffic")]
        WeightedTotalTraffic,
        [System.Runtime.Serialization.EnumMember(Value = "RequestHash")]
        RequestHash,
        [System.Runtime.Serialization.EnumMember(Value = "PerSiteRoundRobin")]
        PerSiteRoundRobin
    }
    internal static class SiteLoadBalancingEnumExtension
    {
        internal static string ToSerializedValue(this SiteLoadBalancing? value)
        {
            return value == null ? null : ((SiteLoadBalancing)value).ToSerializedValue();
        }
        internal static string ToSerializedValue(this SiteLoadBalancing value)
        {
            switch( value )
            {
                case SiteLoadBalancing.WeightedRoundRobin:
                    return "WeightedRoundRobin";
                case SiteLoadBalancing.LeastRequests:
                    return "LeastRequests";
                case SiteLoadBalancing.LeastResponseTime:
                    return "LeastResponseTime";
                case SiteLoadBalancing.WeightedTotalTraffic:
                    return "WeightedTotalTraffic";
                case SiteLoadBalancing.RequestHash:
                    return "RequestHash";
                case SiteLoadBalancing.PerSiteRoundRobin:
                    return "PerSiteRoundRobin";
            }
            return null;
        }
        internal static SiteLoadBalancing? ParseSiteLoadBalancing(this string value)
        {
            switch( value )
            {
                case "WeightedRoundRobin":
                    return SiteLoadBalancing.WeightedRoundRobin;
                case "LeastRequests":
                    return SiteLoadBalancing.LeastRequests;
                case "LeastResponseTime":
                    return SiteLoadBalancing.LeastResponseTime;
                case "WeightedTotalTraffic":
                    return SiteLoadBalancing.WeightedTotalTraffic;
                case "RequestHash":
                    return SiteLoadBalancing.RequestHash;
                case "PerSiteRoundRobin":
                    return SiteLoadBalancing.PerSiteRoundRobin;
            }
            return null;
        }
    }
}