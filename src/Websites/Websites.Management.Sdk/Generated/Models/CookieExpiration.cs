// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.WebSites.Models
{
    using System.Linq;

    /// <summary>
    /// The configuration settings of the session cookie&#39;s expiration.
    /// </summary>
    [Microsoft.Rest.Serialization.JsonTransformation]
    public partial class CookieExpiration : ProxyOnlyResource
    {
        /// <summary>
        /// Initializes a new instance of the CookieExpiration class.
        /// </summary>
        public CookieExpiration()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the CookieExpiration class.
        /// </summary>

        /// <param name="id">Resource Id.
        /// </param>

        /// <param name="name">Resource Name.
        /// </param>

        /// <param name="kind">Kind of resource.
        /// </param>

        /// <param name="type">Resource type.
        /// </param>

        /// <param name="convention">The convention used when determining the session cookie&#39;s expiration.
        /// Possible values include: &#39;FixedTime&#39;, &#39;IdentityProviderDerived&#39;</param>

        /// <param name="timeToExpiration">The time after the request is made when the session cookie should expire.
        /// </param>
        public CookieExpiration(string id = default(string), string name = default(string), string kind = default(string), string type = default(string), CookieExpirationConvention? convention = default(CookieExpirationConvention?), string timeToExpiration = default(string))

        : base(id, name, kind, type)
        {
            this.Convention = convention;
            this.TimeToExpiration = timeToExpiration;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets or sets the convention used when determining the session cookie&#39;s
        /// expiration. Possible values include: &#39;FixedTime&#39;, &#39;IdentityProviderDerived&#39;
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.convention")]
        public CookieExpirationConvention? Convention {get; set; }

        /// <summary>
        /// Gets or sets the time after the request is made when the session cookie
        /// should expire.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.timeToExpiration")]
        public string TimeToExpiration {get; set; }
    }
}