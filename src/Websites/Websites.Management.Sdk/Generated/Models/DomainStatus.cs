// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.WebSites.Models
{

    /// <summary>
    /// Defines values for DomainStatus.
    /// </summary>


    [Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
    public enum DomainStatus
    {
        [System.Runtime.Serialization.EnumMember(Value = "Active")]
        Active,
        [System.Runtime.Serialization.EnumMember(Value = "Awaiting")]
        Awaiting,
        [System.Runtime.Serialization.EnumMember(Value = "Cancelled")]
        Cancelled,
        [System.Runtime.Serialization.EnumMember(Value = "Confiscated")]
        Confiscated,
        [System.Runtime.Serialization.EnumMember(Value = "Disabled")]
        Disabled,
        [System.Runtime.Serialization.EnumMember(Value = "Excluded")]
        Excluded,
        [System.Runtime.Serialization.EnumMember(Value = "Expired")]
        Expired,
        [System.Runtime.Serialization.EnumMember(Value = "Failed")]
        Failed,
        [System.Runtime.Serialization.EnumMember(Value = "Held")]
        Held,
        [System.Runtime.Serialization.EnumMember(Value = "Locked")]
        Locked,
        [System.Runtime.Serialization.EnumMember(Value = "Parked")]
        Parked,
        [System.Runtime.Serialization.EnumMember(Value = "Pending")]
        Pending,
        [System.Runtime.Serialization.EnumMember(Value = "Reserved")]
        Reserved,
        [System.Runtime.Serialization.EnumMember(Value = "Reverted")]
        Reverted,
        [System.Runtime.Serialization.EnumMember(Value = "Suspended")]
        Suspended,
        [System.Runtime.Serialization.EnumMember(Value = "Transferred")]
        Transferred,
        [System.Runtime.Serialization.EnumMember(Value = "Unknown")]
        Unknown,
        [System.Runtime.Serialization.EnumMember(Value = "Unlocked")]
        Unlocked,
        [System.Runtime.Serialization.EnumMember(Value = "Unparked")]
        Unparked,
        [System.Runtime.Serialization.EnumMember(Value = "Updated")]
        Updated,
        [System.Runtime.Serialization.EnumMember(Value = "JsonConverterFailed")]
        JsonConverterFailed
    }
    internal static class DomainStatusEnumExtension
    {
        internal static string ToSerializedValue(this DomainStatus? value)
        {
            return value == null ? null : ((DomainStatus)value).ToSerializedValue();
        }
        internal static string ToSerializedValue(this DomainStatus value)
        {
            switch( value )
            {
                case DomainStatus.Active:
                    return "Active";
                case DomainStatus.Awaiting:
                    return "Awaiting";
                case DomainStatus.Cancelled:
                    return "Cancelled";
                case DomainStatus.Confiscated:
                    return "Confiscated";
                case DomainStatus.Disabled:
                    return "Disabled";
                case DomainStatus.Excluded:
                    return "Excluded";
                case DomainStatus.Expired:
                    return "Expired";
                case DomainStatus.Failed:
                    return "Failed";
                case DomainStatus.Held:
                    return "Held";
                case DomainStatus.Locked:
                    return "Locked";
                case DomainStatus.Parked:
                    return "Parked";
                case DomainStatus.Pending:
                    return "Pending";
                case DomainStatus.Reserved:
                    return "Reserved";
                case DomainStatus.Reverted:
                    return "Reverted";
                case DomainStatus.Suspended:
                    return "Suspended";
                case DomainStatus.Transferred:
                    return "Transferred";
                case DomainStatus.Unknown:
                    return "Unknown";
                case DomainStatus.Unlocked:
                    return "Unlocked";
                case DomainStatus.Unparked:
                    return "Unparked";
                case DomainStatus.Updated:
                    return "Updated";
                case DomainStatus.JsonConverterFailed:
                    return "JsonConverterFailed";
            }
            return null;
        }
        internal static DomainStatus? ParseDomainStatus(this string value)
        {
            switch( value )
            {
                case "Active":
                    return DomainStatus.Active;
                case "Awaiting":
                    return DomainStatus.Awaiting;
                case "Cancelled":
                    return DomainStatus.Cancelled;
                case "Confiscated":
                    return DomainStatus.Confiscated;
                case "Disabled":
                    return DomainStatus.Disabled;
                case "Excluded":
                    return DomainStatus.Excluded;
                case "Expired":
                    return DomainStatus.Expired;
                case "Failed":
                    return DomainStatus.Failed;
                case "Held":
                    return DomainStatus.Held;
                case "Locked":
                    return DomainStatus.Locked;
                case "Parked":
                    return DomainStatus.Parked;
                case "Pending":
                    return DomainStatus.Pending;
                case "Reserved":
                    return DomainStatus.Reserved;
                case "Reverted":
                    return DomainStatus.Reverted;
                case "Suspended":
                    return DomainStatus.Suspended;
                case "Transferred":
                    return DomainStatus.Transferred;
                case "Unknown":
                    return DomainStatus.Unknown;
                case "Unlocked":
                    return DomainStatus.Unlocked;
                case "Unparked":
                    return DomainStatus.Unparked;
                case "Updated":
                    return DomainStatus.Updated;
                case "JsonConverterFailed":
                    return DomainStatus.JsonConverterFailed;
            }
            return null;
        }
    }
}