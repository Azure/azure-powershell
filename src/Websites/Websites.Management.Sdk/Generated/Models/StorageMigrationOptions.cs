// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.WebSites.Models
{
    using System.Linq;

    /// <summary>
    /// Options for app content migration.
    /// </summary>
    [Microsoft.Rest.Serialization.JsonTransformation]
    public partial class StorageMigrationOptions : ProxyOnlyResource
    {
        /// <summary>
        /// Initializes a new instance of the StorageMigrationOptions class.
        /// </summary>
        public StorageMigrationOptions()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the StorageMigrationOptions class.
        /// </summary>

        /// <param name="id">Resource Id.
        /// </param>

        /// <param name="name">Resource Name.
        /// </param>

        /// <param name="kind">Kind of resource.
        /// </param>

        /// <param name="type">Resource type.
        /// </param>

        /// <param name="azurefilesConnectionString">AzureFiles connection string.
        /// </param>

        /// <param name="azurefilesShare">AzureFiles share.
        /// </param>

        /// <param name="switchSiteAfterMigration">&lt;code&gt;true&lt;/code&gt;if the app should be switched over; otherwise,
        /// &lt;code&gt;false&lt;/code&gt;.
        /// </param>

        /// <param name="blockWriteAccessToSite">&lt;code&gt;true&lt;/code&gt; if the app should be read only during copy operation;
        /// otherwise, &lt;code&gt;false&lt;/code&gt;.
        /// </param>
        public StorageMigrationOptions(string id = default(string), string name = default(string), string kind = default(string), string type = default(string), string azurefilesConnectionString = default(string), string azurefilesShare = default(string), bool? switchSiteAfterMigration = default(bool?), bool? blockWriteAccessToSite = default(bool?))

        : base(id, name, kind, type)
        {
            this.AzurefilesConnectionString = azurefilesConnectionString;
            this.AzurefilesShare = azurefilesShare;
            this.SwitchSiteAfterMigration = switchSiteAfterMigration;
            this.BlockWriteAccessToSite = blockWriteAccessToSite;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets or sets azureFiles connection string.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.azurefilesConnectionString")]
        public string AzurefilesConnectionString {get; set; }

        /// <summary>
        /// Gets or sets azureFiles share.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.azurefilesShare")]
        public string AzurefilesShare {get; set; }

        /// <summary>
        /// Gets or sets &lt;code&gt;true&lt;/code&gt;if the app should be switched over;
        /// otherwise, &lt;code&gt;false&lt;/code&gt;.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.switchSiteAfterMigration")]
        public bool? SwitchSiteAfterMigration {get; set; }

        /// <summary>
        /// Gets or sets &lt;code&gt;true&lt;/code&gt; if the app should be read only during copy
        /// operation; otherwise, &lt;code&gt;false&lt;/code&gt;.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.blockWriteAccessToSite")]
        public bool? BlockWriteAccessToSite {get; set; }
    }
}