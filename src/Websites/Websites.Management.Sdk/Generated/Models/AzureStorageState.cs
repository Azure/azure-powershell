// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.WebSites.Models
{

    /// <summary>
    /// Defines values for AzureStorageState.
    /// </summary>


    [Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
    public enum AzureStorageState
    {
        [System.Runtime.Serialization.EnumMember(Value = "Ok")]
        Ok,
        [System.Runtime.Serialization.EnumMember(Value = "InvalidCredentials")]
        InvalidCredentials,
        [System.Runtime.Serialization.EnumMember(Value = "InvalidShare")]
        InvalidShare,
        [System.Runtime.Serialization.EnumMember(Value = "NotValidated")]
        NotValidated
    }
    internal static class AzureStorageStateEnumExtension
    {
        internal static string ToSerializedValue(this AzureStorageState? value)
        {
            return value == null ? null : ((AzureStorageState)value).ToSerializedValue();
        }
        internal static string ToSerializedValue(this AzureStorageState value)
        {
            switch( value )
            {
                case AzureStorageState.Ok:
                    return "Ok";
                case AzureStorageState.InvalidCredentials:
                    return "InvalidCredentials";
                case AzureStorageState.InvalidShare:
                    return "InvalidShare";
                case AzureStorageState.NotValidated:
                    return "NotValidated";
            }
            return null;
        }
        internal static AzureStorageState? ParseAzureStorageState(this string value)
        {
            switch( value )
            {
                case "Ok":
                    return AzureStorageState.Ok;
                case "InvalidCredentials":
                    return AzureStorageState.InvalidCredentials;
                case "InvalidShare":
                    return AzureStorageState.InvalidShare;
                case "NotValidated":
                    return AzureStorageState.NotValidated;
            }
            return null;
        }
    }
}