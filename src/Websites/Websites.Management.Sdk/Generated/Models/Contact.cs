// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.WebSites.Models
{
    using System.Linq;

    /// <summary>
    /// Contact information for domain registration. If &#39;Domain Privacy&#39; option is
    /// not selected then the contact information is made publicly available
    /// through the Whois
    /// directories as per ICANN requirements.
    /// </summary>
    public partial class Contact
    {
        /// <summary>
        /// Initializes a new instance of the Contact class.
        /// </summary>
        public Contact()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the Contact class.
        /// </summary>

        /// <param name="addressMailing">Mailing address.
        /// </param>

        /// <param name="email">Email address.
        /// </param>

        /// <param name="fax">Fax number.
        /// </param>

        /// <param name="jobTitle">Job title.
        /// </param>

        /// <param name="nameFirst">First name.
        /// </param>

        /// <param name="nameLast">Last name.
        /// </param>

        /// <param name="nameMiddle">Middle name.
        /// </param>

        /// <param name="organization">Organization contact belongs to.
        /// </param>

        /// <param name="phone">Phone number.
        /// </param>
        public Contact(string email, string nameFirst, string nameLast, string phone, Address addressMailing = default(Address), string fax = default(string), string jobTitle = default(string), string nameMiddle = default(string), string organization = default(string))

        {
            this.AddressMailing = addressMailing;
            this.Email = email;
            this.Fax = fax;
            this.JobTitle = jobTitle;
            this.NameFirst = nameFirst;
            this.NameLast = nameLast;
            this.NameMiddle = nameMiddle;
            this.Organization = organization;
            this.Phone = phone;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets or sets mailing address.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "addressMailing")]
        public Address AddressMailing {get; set; }

        /// <summary>
        /// Gets or sets email address.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "email")]
        public string Email {get; set; }

        /// <summary>
        /// Gets or sets fax number.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "fax")]
        public string Fax {get; set; }

        /// <summary>
        /// Gets or sets job title.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "jobTitle")]
        public string JobTitle {get; set; }

        /// <summary>
        /// Gets or sets first name.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "nameFirst")]
        public string NameFirst {get; set; }

        /// <summary>
        /// Gets or sets last name.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "nameLast")]
        public string NameLast {get; set; }

        /// <summary>
        /// Gets or sets middle name.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "nameMiddle")]
        public string NameMiddle {get; set; }

        /// <summary>
        /// Gets or sets organization contact belongs to.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "organization")]
        public string Organization {get; set; }

        /// <summary>
        /// Gets or sets phone number.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "phone")]
        public string Phone {get; set; }
        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (this.Email == null)
            {
                throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.CannotBeNull, "Email");
            }
            if (this.NameFirst == null)
            {
                throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.CannotBeNull, "NameFirst");
            }
            if (this.NameLast == null)
            {
                throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.CannotBeNull, "NameLast");
            }
            if (this.Phone == null)
            {
                throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.CannotBeNull, "Phone");
            }
            if (this.AddressMailing != null)
            {
                this.AddressMailing.Validate();
            }








        }
    }
}