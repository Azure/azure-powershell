// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.WebSites.Models
{

    /// <summary>
    /// Defines values for CertificateOrderActionType.
    /// </summary>


    [Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
    public enum CertificateOrderActionType
    {
        [System.Runtime.Serialization.EnumMember(Value = "CertificateIssued")]
        CertificateIssued,
        [System.Runtime.Serialization.EnumMember(Value = "CertificateOrderCanceled")]
        CertificateOrderCanceled,
        [System.Runtime.Serialization.EnumMember(Value = "CertificateOrderCreated")]
        CertificateOrderCreated,
        [System.Runtime.Serialization.EnumMember(Value = "CertificateRevoked")]
        CertificateRevoked,
        [System.Runtime.Serialization.EnumMember(Value = "DomainValidationComplete")]
        DomainValidationComplete,
        [System.Runtime.Serialization.EnumMember(Value = "FraudDetected")]
        FraudDetected,
        [System.Runtime.Serialization.EnumMember(Value = "OrgNameChange")]
        OrgNameChange,
        [System.Runtime.Serialization.EnumMember(Value = "OrgValidationComplete")]
        OrgValidationComplete,
        [System.Runtime.Serialization.EnumMember(Value = "SanDrop")]
        SanDrop,
        [System.Runtime.Serialization.EnumMember(Value = "FraudCleared")]
        FraudCleared,
        [System.Runtime.Serialization.EnumMember(Value = "CertificateExpired")]
        CertificateExpired,
        [System.Runtime.Serialization.EnumMember(Value = "CertificateExpirationWarning")]
        CertificateExpirationWarning,
        [System.Runtime.Serialization.EnumMember(Value = "FraudDocumentationRequired")]
        FraudDocumentationRequired,
        [System.Runtime.Serialization.EnumMember(Value = "Unknown")]
        Unknown
    }
    internal static class CertificateOrderActionTypeEnumExtension
    {
        internal static string ToSerializedValue(this CertificateOrderActionType? value)
        {
            return value == null ? null : ((CertificateOrderActionType)value).ToSerializedValue();
        }
        internal static string ToSerializedValue(this CertificateOrderActionType value)
        {
            switch( value )
            {
                case CertificateOrderActionType.CertificateIssued:
                    return "CertificateIssued";
                case CertificateOrderActionType.CertificateOrderCanceled:
                    return "CertificateOrderCanceled";
                case CertificateOrderActionType.CertificateOrderCreated:
                    return "CertificateOrderCreated";
                case CertificateOrderActionType.CertificateRevoked:
                    return "CertificateRevoked";
                case CertificateOrderActionType.DomainValidationComplete:
                    return "DomainValidationComplete";
                case CertificateOrderActionType.FraudDetected:
                    return "FraudDetected";
                case CertificateOrderActionType.OrgNameChange:
                    return "OrgNameChange";
                case CertificateOrderActionType.OrgValidationComplete:
                    return "OrgValidationComplete";
                case CertificateOrderActionType.SanDrop:
                    return "SanDrop";
                case CertificateOrderActionType.FraudCleared:
                    return "FraudCleared";
                case CertificateOrderActionType.CertificateExpired:
                    return "CertificateExpired";
                case CertificateOrderActionType.CertificateExpirationWarning:
                    return "CertificateExpirationWarning";
                case CertificateOrderActionType.FraudDocumentationRequired:
                    return "FraudDocumentationRequired";
                case CertificateOrderActionType.Unknown:
                    return "Unknown";
            }
            return null;
        }
        internal static CertificateOrderActionType? ParseCertificateOrderActionType(this string value)
        {
            switch( value )
            {
                case "CertificateIssued":
                    return CertificateOrderActionType.CertificateIssued;
                case "CertificateOrderCanceled":
                    return CertificateOrderActionType.CertificateOrderCanceled;
                case "CertificateOrderCreated":
                    return CertificateOrderActionType.CertificateOrderCreated;
                case "CertificateRevoked":
                    return CertificateOrderActionType.CertificateRevoked;
                case "DomainValidationComplete":
                    return CertificateOrderActionType.DomainValidationComplete;
                case "FraudDetected":
                    return CertificateOrderActionType.FraudDetected;
                case "OrgNameChange":
                    return CertificateOrderActionType.OrgNameChange;
                case "OrgValidationComplete":
                    return CertificateOrderActionType.OrgValidationComplete;
                case "SanDrop":
                    return CertificateOrderActionType.SanDrop;
                case "FraudCleared":
                    return CertificateOrderActionType.FraudCleared;
                case "CertificateExpired":
                    return CertificateOrderActionType.CertificateExpired;
                case "CertificateExpirationWarning":
                    return CertificateOrderActionType.CertificateExpirationWarning;
                case "FraudDocumentationRequired":
                    return CertificateOrderActionType.FraudDocumentationRequired;
                case "Unknown":
                    return CertificateOrderActionType.Unknown;
            }
            return null;
        }
    }
}