// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.WebSites.Models
{
    using System.Linq;

    /// <summary>
    /// Full view of network features for an app (presently VNET integration and
    /// Hybrid Connections).
    /// </summary>
    [Microsoft.Rest.Serialization.JsonTransformation]
    public partial class NetworkFeatures : ProxyOnlyResource
    {
        /// <summary>
        /// Initializes a new instance of the NetworkFeatures class.
        /// </summary>
        public NetworkFeatures()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the NetworkFeatures class.
        /// </summary>

        /// <param name="id">Resource Id.
        /// </param>

        /// <param name="name">Resource Name.
        /// </param>

        /// <param name="kind">Kind of resource.
        /// </param>

        /// <param name="type">Resource type.
        /// </param>

        /// <param name="virtualNetworkName">The Virtual Network name.
        /// </param>

        /// <param name="virtualNetworkConnection">The Virtual Network summary view.
        /// </param>

        /// <param name="hybridConnections">The Hybrid Connections summary view.
        /// </param>

        /// <param name="hybridConnectionsV2">The Hybrid Connection V2 (Service Bus) view.
        /// </param>
        public NetworkFeatures(string id = default(string), string name = default(string), string kind = default(string), string type = default(string), string virtualNetworkName = default(string), VnetInfo virtualNetworkConnection = default(VnetInfo), System.Collections.Generic.IList<RelayServiceConnectionEntity> hybridConnections = default(System.Collections.Generic.IList<RelayServiceConnectionEntity>), System.Collections.Generic.IList<HybridConnection> hybridConnectionsV2 = default(System.Collections.Generic.IList<HybridConnection>))

        : base(id, name, kind, type)
        {
            this.VirtualNetworkName = virtualNetworkName;
            this.VirtualNetworkConnection = virtualNetworkConnection;
            this.HybridConnections = hybridConnections;
            this.HybridConnectionsV2 = hybridConnectionsV2;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets the Virtual Network name.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.virtualNetworkName")]
        public string VirtualNetworkName {get; private set; }

        /// <summary>
        /// Gets the Virtual Network summary view.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.virtualNetworkConnection")]
        public VnetInfo VirtualNetworkConnection {get; private set; }

        /// <summary>
        /// Gets the Hybrid Connections summary view.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.hybridConnections")]
        public System.Collections.Generic.IList<RelayServiceConnectionEntity> HybridConnections {get; private set; }

        /// <summary>
        /// Gets the Hybrid Connection V2 (Service Bus) view.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.hybridConnectionsV2")]
        public System.Collections.Generic.IList<HybridConnection> HybridConnectionsV2 {get; private set; }
    }
}