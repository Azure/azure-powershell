// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.WebSites.Models
{
    using System.Linq;

    /// <summary>
    /// Worker pool of an App Service Environment.
    /// </summary>
    public partial class WorkerPool
    {
        /// <summary>
        /// Initializes a new instance of the WorkerPool class.
        /// </summary>
        public WorkerPool()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the WorkerPool class.
        /// </summary>

        /// <param name="workerSizeId">Worker size ID for referencing this worker pool.
        /// </param>

        /// <param name="computeMode">Shared or dedicated app hosting.
        /// Possible values include: &#39;Shared&#39;, &#39;Dedicated&#39;, &#39;Dynamic&#39;</param>

        /// <param name="workerSize">VM size of the worker pool instances.
        /// </param>

        /// <param name="workerCount">Number of instances in the worker pool.
        /// </param>

        /// <param name="instanceNames">Names of all instances in the worker pool (read only).
        /// </param>
        public WorkerPool(int? workerSizeId = default(int?), ComputeModeOptions? computeMode = default(ComputeModeOptions?), string workerSize = default(string), int? workerCount = default(int?), System.Collections.Generic.IList<string> instanceNames = default(System.Collections.Generic.IList<string>))

        {
            this.WorkerSizeId = workerSizeId;
            this.ComputeMode = computeMode;
            this.WorkerSize = workerSize;
            this.WorkerCount = workerCount;
            this.InstanceNames = instanceNames;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets or sets worker size ID for referencing this worker pool.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "workerSizeId")]
        public int? WorkerSizeId {get; set; }

        /// <summary>
        /// Gets or sets shared or dedicated app hosting. Possible values include: &#39;Shared&#39;, &#39;Dedicated&#39;, &#39;Dynamic&#39;
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "computeMode")]
        public ComputeModeOptions? ComputeMode {get; set; }

        /// <summary>
        /// Gets or sets vM size of the worker pool instances.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "workerSize")]
        public string WorkerSize {get; set; }

        /// <summary>
        /// Gets or sets number of instances in the worker pool.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "workerCount")]
        public int? WorkerCount {get; set; }

        /// <summary>
        /// Gets names of all instances in the worker pool (read only).
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "instanceNames")]
        public System.Collections.Generic.IList<string> InstanceNames {get; private set; }
    }
}