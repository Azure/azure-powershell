// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.WebSites.Models
{
    using System.Linq;

    /// <summary>
    /// List of available locations (regions or App Service Environments) for
    /// deployment of App Service resources.
    /// </summary>
    public partial class DeploymentLocations
    {
        /// <summary>
        /// Initializes a new instance of the DeploymentLocations class.
        /// </summary>
        public DeploymentLocations()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the DeploymentLocations class.
        /// </summary>

        /// <param name="locations">Available regions.
        /// </param>

        /// <param name="hostingEnvironments">Available App Service Environments with full descriptions of the
        /// environments.
        /// </param>

        /// <param name="hostingEnvironmentDeploymentInfos">Available App Service Environments with basic information.
        /// </param>
        public DeploymentLocations(System.Collections.Generic.IList<GeoRegion> locations = default(System.Collections.Generic.IList<GeoRegion>), System.Collections.Generic.IList<AppServiceEnvironment> hostingEnvironments = default(System.Collections.Generic.IList<AppServiceEnvironment>), System.Collections.Generic.IList<HostingEnvironmentDeploymentInfo> hostingEnvironmentDeploymentInfos = default(System.Collections.Generic.IList<HostingEnvironmentDeploymentInfo>))

        {
            this.Locations = locations;
            this.HostingEnvironments = hostingEnvironments;
            this.HostingEnvironmentDeploymentInfos = hostingEnvironmentDeploymentInfos;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets or sets available regions.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "locations")]
        public System.Collections.Generic.IList<GeoRegion> Locations {get; set; }

        /// <summary>
        /// Gets or sets available App Service Environments with full descriptions of
        /// the environments.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "hostingEnvironments")]
        public System.Collections.Generic.IList<AppServiceEnvironment> HostingEnvironments {get; set; }

        /// <summary>
        /// Gets or sets available App Service Environments with basic information.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "hostingEnvironmentDeploymentInfos")]
        public System.Collections.Generic.IList<HostingEnvironmentDeploymentInfo> HostingEnvironmentDeploymentInfos {get; set; }
    }
}