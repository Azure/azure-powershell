// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.WebSites.Models
{
    using System.Linq;

    /// <summary>
    /// Function App Stack.
    /// </summary>
    [Microsoft.Rest.Serialization.JsonTransformation]
    public partial class FunctionAppStack : ProxyOnlyResource
    {
        /// <summary>
        /// Initializes a new instance of the FunctionAppStack class.
        /// </summary>
        public FunctionAppStack()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the FunctionAppStack class.
        /// </summary>

        /// <param name="id">Resource Id.
        /// </param>

        /// <param name="name">Resource Name.
        /// </param>

        /// <param name="kind">Kind of resource.
        /// </param>

        /// <param name="type">Resource type.
        /// </param>

        /// <param name="location">Function App stack location.
        /// </param>

        /// <param name="displayText">Function App stack (display only).
        /// </param>

        /// <param name="value">Function App stack name.
        /// </param>

        /// <param name="majorVersions">List of major versions available.
        /// </param>

        /// <param name="preferredOS">Function App stack preferred OS.
        /// Possible values include: &#39;Windows&#39;, &#39;Linux&#39;</param>
        public FunctionAppStack(string id = default(string), string name = default(string), string kind = default(string), string type = default(string), string location = default(string), string displayText = default(string), string value = default(string), System.Collections.Generic.IList<FunctionAppMajorVersion> majorVersions = default(System.Collections.Generic.IList<FunctionAppMajorVersion>), StackPreferredOs? preferredOS = default(StackPreferredOs?))

        : base(id, name, kind, type)
        {
            this.Location = location;
            this.DisplayText = displayText;
            this.Value = value;
            this.MajorVersions = majorVersions;
            this.PreferredOS = preferredOS;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets function App stack location.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "location")]
        public string Location {get; private set; }

        /// <summary>
        /// Gets function App stack (display only).
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.displayText")]
        public string DisplayText {get; private set; }

        /// <summary>
        /// Gets function App stack name.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.value")]
        public string Value {get; private set; }

        /// <summary>
        /// Gets list of major versions available.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.majorVersions")]
        public System.Collections.Generic.IList<FunctionAppMajorVersion> MajorVersions {get; private set; }

        /// <summary>
        /// Gets function App stack preferred OS. Possible values include: &#39;Windows&#39;, &#39;Linux&#39;
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.preferredOs")]
        public StackPreferredOs? PreferredOS {get; private set; }
    }
}