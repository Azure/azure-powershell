// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.WebSites.Models
{
    using System.Linq;

    /// <summary>
    /// The configuration settings of the login flow of users using App Service
    /// Authentication/Authorization.
    /// </summary>
    [Microsoft.Rest.Serialization.JsonTransformation]
    public partial class Login : ProxyOnlyResource
    {
        /// <summary>
        /// Initializes a new instance of the Login class.
        /// </summary>
        public Login()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the Login class.
        /// </summary>

        /// <param name="id">Resource Id.
        /// </param>

        /// <param name="name">Resource Name.
        /// </param>

        /// <param name="kind">Kind of resource.
        /// </param>

        /// <param name="type">Resource type.
        /// </param>

        /// <param name="tokenStore">The configuration settings of the token store.
        /// </param>

        /// <param name="cookieExpiration">The configuration settings of the session cookie&#39;s expiration.
        /// </param>

        /// <param name="nonce">The configuration settings of the nonce used in the login flow.
        /// </param>

        /// <param name="routes">The routes that specify the endpoints used for login and logout requests.
        /// </param>

        /// <param name="preserveUrlFragmentsForLogins">&lt;code&gt;true&lt;/code&gt; if the fragments from the request are preserved after the
        /// login request is made; otherwise, &lt;code&gt;false&lt;/code&gt;.
        /// </param>

        /// <param name="allowedExternalRedirectUrls">External URLs that can be redirected to as part of logging in or logging
        /// out of the app. Note that the query string part of the URL is ignored.
        /// This is an advanced setting typically only needed by Windows Store
        /// application backends.
        /// Note that URLs within the current domain are always implicitly allowed.
        /// </param>
        public Login(string id = default(string), string name = default(string), string kind = default(string), string type = default(string), TokenStore tokenStore = default(TokenStore), CookieExpiration cookieExpiration = default(CookieExpiration), Nonce nonce = default(Nonce), LoginRoutes routes = default(LoginRoutes), bool? preserveUrlFragmentsForLogins = default(bool?), System.Collections.Generic.IList<string> allowedExternalRedirectUrls = default(System.Collections.Generic.IList<string>))

        : base(id, name, kind, type)
        {
            this.TokenStore = tokenStore;
            this.CookieExpiration = cookieExpiration;
            this.Nonce = nonce;
            this.Routes = routes;
            this.PreserveUrlFragmentsForLogins = preserveUrlFragmentsForLogins;
            this.AllowedExternalRedirectUrls = allowedExternalRedirectUrls;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets or sets the configuration settings of the token store.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.tokenStore")]
        public TokenStore TokenStore {get; set; }

        /// <summary>
        /// Gets or sets the configuration settings of the session cookie&#39;s expiration.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.cookieExpiration")]
        public CookieExpiration CookieExpiration {get; set; }

        /// <summary>
        /// Gets or sets the configuration settings of the nonce used in the login
        /// flow.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.nonce")]
        public Nonce Nonce {get; set; }

        /// <summary>
        /// Gets or sets the routes that specify the endpoints used for login and
        /// logout requests.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.routes")]
        public LoginRoutes Routes {get; set; }

        /// <summary>
        /// Gets or sets &lt;code&gt;true&lt;/code&gt; if the fragments from the request are
        /// preserved after the login request is made; otherwise, &lt;code&gt;false&lt;/code&gt;.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.preserveUrlFragmentsForLogins")]
        public bool? PreserveUrlFragmentsForLogins {get; set; }

        /// <summary>
        /// Gets or sets external URLs that can be redirected to as part of logging in
        /// or logging out of the app. Note that the query string part of the URL is
        /// ignored.
        /// This is an advanced setting typically only needed by Windows Store
        /// application backends.
        /// Note that URLs within the current domain are always implicitly allowed.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.allowedExternalRedirectUrls")]
        public System.Collections.Generic.IList<string> AllowedExternalRedirectUrls {get; set; }
    }
}