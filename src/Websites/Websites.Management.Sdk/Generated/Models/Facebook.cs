// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.WebSites.Models
{
    using System.Linq;

    /// <summary>
    /// The configuration settings of the Facebook provider.
    /// </summary>
    [Microsoft.Rest.Serialization.JsonTransformation]
    public partial class Facebook : ProxyOnlyResource
    {
        /// <summary>
        /// Initializes a new instance of the Facebook class.
        /// </summary>
        public Facebook()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the Facebook class.
        /// </summary>

        /// <param name="id">Resource Id.
        /// </param>

        /// <param name="name">Resource Name.
        /// </param>

        /// <param name="kind">Kind of resource.
        /// </param>

        /// <param name="type">Resource type.
        /// </param>

        /// <param name="enabled">&lt;code&gt;false&lt;/code&gt; if the Facebook provider should not be enabled despite
        /// the set registration; otherwise, &lt;code&gt;true&lt;/code&gt;.
        /// </param>

        /// <param name="registration">The configuration settings of the app registration for the Facebook
        /// provider.
        /// </param>

        /// <param name="graphApiVersion">The version of the Facebook api to be used while logging in.
        /// </param>

        /// <param name="login">The configuration settings of the login flow.
        /// </param>
        public Facebook(string id = default(string), string name = default(string), string kind = default(string), string type = default(string), bool? enabled = default(bool?), AppRegistration registration = default(AppRegistration), string graphApiVersion = default(string), LoginScopes login = default(LoginScopes))

        : base(id, name, kind, type)
        {
            this.Enabled = enabled;
            this.Registration = registration;
            this.GraphApiVersion = graphApiVersion;
            this.Login = login;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets or sets &lt;code&gt;false&lt;/code&gt; if the Facebook provider should not be
        /// enabled despite the set registration; otherwise, &lt;code&gt;true&lt;/code&gt;.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.enabled")]
        public bool? Enabled {get; set; }

        /// <summary>
        /// Gets or sets the configuration settings of the app registration for the
        /// Facebook provider.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.registration")]
        public AppRegistration Registration {get; set; }

        /// <summary>
        /// Gets or sets the version of the Facebook api to be used while logging in.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.graphApiVersion")]
        public string GraphApiVersion {get; set; }

        /// <summary>
        /// Gets or sets the configuration settings of the login flow.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.login")]
        public LoginScopes Login {get; set; }
    }
}