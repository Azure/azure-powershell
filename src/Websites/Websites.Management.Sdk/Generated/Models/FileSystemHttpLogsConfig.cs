// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.WebSites.Models
{
    using System.Linq;

    /// <summary>
    /// Http logs to file system configuration.
    /// </summary>
    public partial class FileSystemHttpLogsConfig
    {
        /// <summary>
        /// Initializes a new instance of the FileSystemHttpLogsConfig class.
        /// </summary>
        public FileSystemHttpLogsConfig()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the FileSystemHttpLogsConfig class.
        /// </summary>

        /// <param name="retentionInMb">Maximum size in megabytes that http log files can use.
        /// When reached old log files will be removed to make space for new ones.
        /// Value can range between 25 and 100.
        /// </param>

        /// <param name="retentionInDays">Retention in days.
        /// Remove files older than X days.
        /// 0 or lower means no retention.
        /// </param>

        /// <param name="enabled">True if configuration is enabled, false if it is disabled and null if
        /// configuration is not set.
        /// </param>
        public FileSystemHttpLogsConfig(int? retentionInMb = default(int?), int? retentionInDays = default(int?), bool? enabled = default(bool?))

        {
            this.RetentionInMb = retentionInMb;
            this.RetentionInDays = retentionInDays;
            this.Enabled = enabled;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets or sets maximum size in megabytes that http log files can use.
        /// When reached old log files will be removed to make space for new ones.
        /// Value can range between 25 and 100.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "retentionInMb")]
        public int? RetentionInMb {get; set; }

        /// <summary>
        /// Gets or sets retention in days.
        /// Remove files older than X days.
        /// 0 or lower means no retention.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "retentionInDays")]
        public int? RetentionInDays {get; set; }

        /// <summary>
        /// Gets or sets true if configuration is enabled, false if it is disabled and
        /// null if configuration is not set.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "enabled")]
        public bool? Enabled {get; set; }
        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (this.RetentionInMb != null)
            {
                if (this.RetentionInMb > 100)
                {
                    throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.InclusiveMaximum, "RetentionInMb", 100);
                }
                if (this.RetentionInMb < 25)
                {
                    throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.InclusiveMinimum, "RetentionInMb", 25);
                }
            }
        }
    }
}