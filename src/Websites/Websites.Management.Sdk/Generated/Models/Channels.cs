// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.WebSites.Models
{

    /// <summary>
    /// Defines values for Channels.
    /// </summary>


    [Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
    public enum Channels
    {
        [System.Runtime.Serialization.EnumMember(Value = "Notification")]
        Notification,
        [System.Runtime.Serialization.EnumMember(Value = "Api")]
        Api,
        [System.Runtime.Serialization.EnumMember(Value = "Email")]
        Email,
        [System.Runtime.Serialization.EnumMember(Value = "Webhook")]
        Webhook,
        [System.Runtime.Serialization.EnumMember(Value = "All")]
        All
    }
    internal static class ChannelsEnumExtension
    {
        internal static string ToSerializedValue(this Channels? value)
        {
            return value == null ? null : ((Channels)value).ToSerializedValue();
        }
        internal static string ToSerializedValue(this Channels value)
        {
            switch( value )
            {
                case Channels.Notification:
                    return "Notification";
                case Channels.Api:
                    return "Api";
                case Channels.Email:
                    return "Email";
                case Channels.Webhook:
                    return "Webhook";
                case Channels.All:
                    return "All";
            }
            return null;
        }
        internal static Channels? ParseChannels(this string value)
        {
            switch( value )
            {
                case "Notification":
                    return Channels.Notification;
                case "Api":
                    return Channels.Api;
                case "Email":
                    return Channels.Email;
                case "Webhook":
                    return Channels.Webhook;
                case "All":
                    return Channels.All;
            }
            return null;
        }
    }
}