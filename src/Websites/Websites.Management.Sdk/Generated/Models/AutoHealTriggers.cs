// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.WebSites.Models
{
    using System.Linq;

    /// <summary>
    /// Triggers for auto-heal.
    /// </summary>
    public partial class AutoHealTriggers
    {
        /// <summary>
        /// Initializes a new instance of the AutoHealTriggers class.
        /// </summary>
        public AutoHealTriggers()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the AutoHealTriggers class.
        /// </summary>

        /// <param name="requests">A rule based on total requests.
        /// </param>

        /// <param name="privateBytesInKb">A rule based on private bytes.
        /// </param>

        /// <param name="statusCodes">A rule based on status codes.
        /// </param>

        /// <param name="slowRequests">A rule based on request execution time.
        /// </param>

        /// <param name="slowRequestsWithPath">A rule based on multiple Slow Requests Rule with path
        /// </param>

        /// <param name="statusCodesRange">A rule based on status codes ranges.
        /// </param>
        public AutoHealTriggers(RequestsBasedTrigger requests = default(RequestsBasedTrigger), int? privateBytesInKb = default(int?), System.Collections.Generic.IList<StatusCodesBasedTrigger> statusCodes = default(System.Collections.Generic.IList<StatusCodesBasedTrigger>), SlowRequestsBasedTrigger slowRequests = default(SlowRequestsBasedTrigger), System.Collections.Generic.IList<SlowRequestsBasedTrigger> slowRequestsWithPath = default(System.Collections.Generic.IList<SlowRequestsBasedTrigger>), System.Collections.Generic.IList<StatusCodesRangeBasedTrigger> statusCodesRange = default(System.Collections.Generic.IList<StatusCodesRangeBasedTrigger>))

        {
            this.Requests = requests;
            this.PrivateBytesInKb = privateBytesInKb;
            this.StatusCodes = statusCodes;
            this.SlowRequests = slowRequests;
            this.SlowRequestsWithPath = slowRequestsWithPath;
            this.StatusCodesRange = statusCodesRange;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets or sets a rule based on total requests.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "requests")]
        public RequestsBasedTrigger Requests {get; set; }

        /// <summary>
        /// Gets or sets a rule based on private bytes.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "privateBytesInKB")]
        public int? PrivateBytesInKb {get; set; }

        /// <summary>
        /// Gets or sets a rule based on status codes.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "statusCodes")]
        public System.Collections.Generic.IList<StatusCodesBasedTrigger> StatusCodes {get; set; }

        /// <summary>
        /// Gets or sets a rule based on request execution time.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "slowRequests")]
        public SlowRequestsBasedTrigger SlowRequests {get; set; }

        /// <summary>
        /// Gets or sets a rule based on multiple Slow Requests Rule with path
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "slowRequestsWithPath")]
        public System.Collections.Generic.IList<SlowRequestsBasedTrigger> SlowRequestsWithPath {get; set; }

        /// <summary>
        /// Gets or sets a rule based on status codes ranges.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "statusCodesRange")]
        public System.Collections.Generic.IList<StatusCodesRangeBasedTrigger> StatusCodesRange {get; set; }
    }
}