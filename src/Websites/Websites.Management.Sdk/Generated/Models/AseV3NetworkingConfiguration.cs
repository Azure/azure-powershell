// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.WebSites.Models
{
    using System.Linq;

    /// <summary>
    /// Full view of networking configuration for an ASE.
    /// </summary>
    [Microsoft.Rest.Serialization.JsonTransformation]
    public partial class AseV3NetworkingConfiguration : ProxyOnlyResource
    {
        /// <summary>
        /// Initializes a new instance of the AseV3NetworkingConfiguration class.
        /// </summary>
        public AseV3NetworkingConfiguration()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the AseV3NetworkingConfiguration class.
        /// </summary>

        /// <param name="id">Resource Id.
        /// </param>

        /// <param name="name">Resource Name.
        /// </param>

        /// <param name="kind">Kind of resource.
        /// </param>

        /// <param name="type">Resource type.
        /// </param>

        /// <param name="windowsOutboundIPAddresses">
        /// </param>

        /// <param name="linuxOutboundIPAddresses">
        /// </param>

        /// <param name="allowNewPrivateEndpointConnections">Property to enable and disable new private endpoint connection creation on
        /// ASE
        /// </param>
        public AseV3NetworkingConfiguration(string id = default(string), string name = default(string), string kind = default(string), string type = default(string), System.Collections.Generic.IList<string> windowsOutboundIPAddresses = default(System.Collections.Generic.IList<string>), System.Collections.Generic.IList<string> linuxOutboundIPAddresses = default(System.Collections.Generic.IList<string>), bool? allowNewPrivateEndpointConnections = default(bool?))

        : base(id, name, kind, type)
        {
            this.WindowsOutboundIPAddresses = windowsOutboundIPAddresses;
            this.LinuxOutboundIPAddresses = linuxOutboundIPAddresses;
            this.AllowNewPrivateEndpointConnections = allowNewPrivateEndpointConnections;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.windowsOutboundIpAddresses")]
        public System.Collections.Generic.IList<string> WindowsOutboundIPAddresses {get; private set; }

        /// <summary>
        /// Gets
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.linuxOutboundIpAddresses")]
        public System.Collections.Generic.IList<string> LinuxOutboundIPAddresses {get; private set; }

        /// <summary>
        /// Gets or sets property to enable and disable new private endpoint connection
        /// creation on ASE
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.allowNewPrivateEndpointConnections")]
        public bool? AllowNewPrivateEndpointConnections {get; set; }
    }
}