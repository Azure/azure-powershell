// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.WebSites.Models
{
    using System.Linq;

    /// <summary>
    /// Cross-Origin Resource Sharing (CORS) settings for the app.
    /// </summary>
    public partial class CorsSettings
    {
        /// <summary>
        /// Initializes a new instance of the CorsSettings class.
        /// </summary>
        public CorsSettings()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the CorsSettings class.
        /// </summary>

        /// <param name="allowedOrigins">Gets or sets the list of origins that should be allowed to make
        /// cross-origin
        /// calls (for example: http://example.com:12345). Use &#34;*&#34; to allow all.
        /// </param>

        /// <param name="supportCredentials">Gets or sets whether CORS requests with credentials are allowed. See
        /// https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS#Requests_with_credentials
        /// for more details.
        /// </param>
        public CorsSettings(System.Collections.Generic.IList<string> allowedOrigins = default(System.Collections.Generic.IList<string>), bool? supportCredentials = default(bool?))

        {
            this.AllowedOrigins = allowedOrigins;
            this.SupportCredentials = supportCredentials;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets or sets gets or sets the list of origins that should be allowed to
        /// make cross-origin
        /// calls (for example: http://example.com:12345). Use &#34;*&#34; to allow all.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "allowedOrigins")]
        public System.Collections.Generic.IList<string> AllowedOrigins {get; set; }

        /// <summary>
        /// Gets or sets gets or sets whether CORS requests with credentials are
        /// allowed. See
        /// https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS#Requests_with_credentials
        /// for more details.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "supportCredentials")]
        public bool? SupportCredentials {get; set; }
    }
}