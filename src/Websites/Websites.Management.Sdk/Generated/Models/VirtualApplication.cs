// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.WebSites.Models
{
    using System.Linq;

    /// <summary>
    /// Virtual application in an app.
    /// </summary>
    public partial class VirtualApplication
    {
        /// <summary>
        /// Initializes a new instance of the VirtualApplication class.
        /// </summary>
        public VirtualApplication()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the VirtualApplication class.
        /// </summary>

        /// <param name="virtualPath">Virtual path.
        /// </param>

        /// <param name="physicalPath">Physical path.
        /// </param>

        /// <param name="preloadEnabled">&lt;code&gt;true&lt;/code&gt; if preloading is enabled; otherwise, &lt;code&gt;false&lt;/code&gt;.
        /// </param>

        /// <param name="virtualDirectories">Virtual directories for virtual application.
        /// </param>
        public VirtualApplication(string virtualPath = default(string), string physicalPath = default(string), bool? preloadEnabled = default(bool?), System.Collections.Generic.IList<VirtualDirectory> virtualDirectories = default(System.Collections.Generic.IList<VirtualDirectory>))

        {
            this.VirtualPath = virtualPath;
            this.PhysicalPath = physicalPath;
            this.PreloadEnabled = preloadEnabled;
            this.VirtualDirectories = virtualDirectories;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets or sets virtual path.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "virtualPath")]
        public string VirtualPath {get; set; }

        /// <summary>
        /// Gets or sets physical path.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "physicalPath")]
        public string PhysicalPath {get; set; }

        /// <summary>
        /// Gets or sets &lt;code&gt;true&lt;/code&gt; if preloading is enabled; otherwise,
        /// &lt;code&gt;false&lt;/code&gt;.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "preloadEnabled")]
        public bool? PreloadEnabled {get; set; }

        /// <summary>
        /// Gets or sets virtual directories for virtual application.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "virtualDirectories")]
        public System.Collections.Generic.IList<VirtualDirectory> VirtualDirectories {get; set; }
    }
}