// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.WebSites.Models
{
    using System.Linq;

    /// <summary>
    /// Key Vault container for a certificate that is purchased through Azure.
    /// </summary>
    public partial class AppServiceCertificate
    {
        /// <summary>
        /// Initializes a new instance of the AppServiceCertificate class.
        /// </summary>
        public AppServiceCertificate()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the AppServiceCertificate class.
        /// </summary>

        /// <param name="keyVaultId">Key Vault resource Id.
        /// </param>

        /// <param name="keyVaultSecretName">Key Vault secret name.
        /// </param>

        /// <param name="provisioningState">Status of the Key Vault secret.
        /// Possible values include: &#39;Initialized&#39;, &#39;WaitingOnCertificateOrder&#39;,
        /// &#39;Succeeded&#39;, &#39;CertificateOrderFailed&#39;, &#39;OperationNotPermittedOnKeyVault&#39;,
        /// &#39;AzureServiceUnauthorizedToAccessKeyVault&#39;, &#39;KeyVaultDoesNotExist&#39;,
        /// &#39;KeyVaultSecretDoesNotExist&#39;, &#39;UnknownError&#39;, &#39;ExternalPrivateKey&#39;,
        /// &#39;Unknown&#39;</param>
        public AppServiceCertificate(string keyVaultId = default(string), string keyVaultSecretName = default(string), KeyVaultSecretStatus? provisioningState = default(KeyVaultSecretStatus?))

        {
            this.KeyVaultId = keyVaultId;
            this.KeyVaultSecretName = keyVaultSecretName;
            this.ProvisioningState = provisioningState;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets or sets key Vault resource Id.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "keyVaultId")]
        public string KeyVaultId {get; set; }

        /// <summary>
        /// Gets or sets key Vault secret name.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "keyVaultSecretName")]
        public string KeyVaultSecretName {get; set; }

        /// <summary>
        /// Gets status of the Key Vault secret. Possible values include: &#39;Initialized&#39;, &#39;WaitingOnCertificateOrder&#39;, &#39;Succeeded&#39;, &#39;CertificateOrderFailed&#39;, &#39;OperationNotPermittedOnKeyVault&#39;, &#39;AzureServiceUnauthorizedToAccessKeyVault&#39;, &#39;KeyVaultDoesNotExist&#39;, &#39;KeyVaultSecretDoesNotExist&#39;, &#39;UnknownError&#39;, &#39;ExternalPrivateKey&#39;, &#39;Unknown&#39;
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "provisioningState")]
        public KeyVaultSecretStatus? ProvisioningState {get; private set; }
    }
}