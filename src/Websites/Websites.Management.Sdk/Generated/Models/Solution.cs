// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.WebSites.Models
{
    using System.Linq;

    /// <summary>
    /// Class Representing Solution for problems detected.
    /// </summary>
    public partial class Solution
    {
        /// <summary>
        /// Initializes a new instance of the Solution class.
        /// </summary>
        public Solution()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the Solution class.
        /// </summary>

        /// <param name="id">Solution Id.
        /// </param>

        /// <param name="displayName">Display Name of the solution
        /// </param>

        /// <param name="order">Order of the solution.
        /// </param>

        /// <param name="description">Description of the solution
        /// </param>

        /// <param name="type">Type of Solution
        /// Possible values include: &#39;QuickSolution&#39;, &#39;DeepInvestigation&#39;,
        /// &#39;BestPractices&#39;</param>

        /// <param name="data">Solution Data.
        /// </param>

        /// <param name="metadata">Solution Metadata.
        /// </param>
        public Solution(double? id = default(double?), string displayName = default(string), double? order = default(double?), string description = default(string), SolutionType? type = default(SolutionType?), System.Collections.Generic.IList<System.Collections.Generic.IList<NameValuePair>> data = default(System.Collections.Generic.IList<System.Collections.Generic.IList<NameValuePair>>), System.Collections.Generic.IList<System.Collections.Generic.IList<NameValuePair>> metadata = default(System.Collections.Generic.IList<System.Collections.Generic.IList<NameValuePair>>))

        {
            this.Id = id;
            this.DisplayName = displayName;
            this.Order = order;
            this.Description = description;
            this.Type = type;
            this.Data = data;
            this.Metadata = metadata;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets or sets solution Id.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "id")]
        public double? Id {get; set; }

        /// <summary>
        /// Gets or sets display Name of the solution
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "displayName")]
        public string DisplayName {get; set; }

        /// <summary>
        /// Gets or sets order of the solution.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "order")]
        public double? Order {get; set; }

        /// <summary>
        /// Gets or sets description of the solution
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "description")]
        public string Description {get; set; }

        /// <summary>
        /// Gets or sets type of Solution Possible values include: &#39;QuickSolution&#39;, &#39;DeepInvestigation&#39;, &#39;BestPractices&#39;
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "type")]
        public SolutionType? Type {get; set; }

        /// <summary>
        /// Gets or sets solution Data.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "data")]
        public System.Collections.Generic.IList<System.Collections.Generic.IList<NameValuePair>> Data {get; set; }

        /// <summary>
        /// Gets or sets solution Metadata.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "metadata")]
        public System.Collections.Generic.IList<System.Collections.Generic.IList<NameValuePair>> Metadata {get; set; }
    }
}