// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.WebSites.Models
{
    using System.Linq;

    /// <summary>
    /// Represents whether or not an app is cloneable.
    /// </summary>
    public partial class SiteCloneability
    {
        /// <summary>
        /// Initializes a new instance of the SiteCloneability class.
        /// </summary>
        public SiteCloneability()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the SiteCloneability class.
        /// </summary>

        /// <param name="result">Name of app.
        /// Possible values include: &#39;Cloneable&#39;, &#39;PartiallyCloneable&#39;, &#39;NotCloneable&#39;</param>

        /// <param name="blockingFeatures">List of features enabled on app that prevent cloning.
        /// </param>

        /// <param name="unsupportedFeatures">List of features enabled on app that are non-blocking but cannot be cloned.
        /// The app can still be cloned
        /// but the features in this list will not be set up on cloned app.
        /// </param>

        /// <param name="blockingCharacteristics">List of blocking application characteristics.
        /// </param>
        public SiteCloneability(CloneAbilityResult? result = default(CloneAbilityResult?), System.Collections.Generic.IList<SiteCloneabilityCriterion> blockingFeatures = default(System.Collections.Generic.IList<SiteCloneabilityCriterion>), System.Collections.Generic.IList<SiteCloneabilityCriterion> unsupportedFeatures = default(System.Collections.Generic.IList<SiteCloneabilityCriterion>), System.Collections.Generic.IList<SiteCloneabilityCriterion> blockingCharacteristics = default(System.Collections.Generic.IList<SiteCloneabilityCriterion>))

        {
            this.Result = result;
            this.BlockingFeatures = blockingFeatures;
            this.UnsupportedFeatures = unsupportedFeatures;
            this.BlockingCharacteristics = blockingCharacteristics;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets or sets name of app. Possible values include: &#39;Cloneable&#39;, &#39;PartiallyCloneable&#39;, &#39;NotCloneable&#39;
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "result")]
        public CloneAbilityResult? Result {get; set; }

        /// <summary>
        /// Gets or sets list of features enabled on app that prevent cloning.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "blockingFeatures")]
        public System.Collections.Generic.IList<SiteCloneabilityCriterion> BlockingFeatures {get; set; }

        /// <summary>
        /// Gets or sets list of features enabled on app that are non-blocking but
        /// cannot be cloned. The app can still be cloned
        /// but the features in this list will not be set up on cloned app.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "unsupportedFeatures")]
        public System.Collections.Generic.IList<SiteCloneabilityCriterion> UnsupportedFeatures {get; set; }

        /// <summary>
        /// Gets or sets list of blocking application characteristics.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "blockingCharacteristics")]
        public System.Collections.Generic.IList<SiteCloneabilityCriterion> BlockingCharacteristics {get; set; }
    }
}