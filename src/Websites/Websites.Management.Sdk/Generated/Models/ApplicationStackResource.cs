// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.WebSites.Models
{
    using System.Linq;

    /// <summary>
    /// ARM resource for a ApplicationStack.
    /// </summary>
    [Microsoft.Rest.Serialization.JsonTransformation]
    public partial class ApplicationStackResource : ProxyOnlyResource
    {
        /// <summary>
        /// Initializes a new instance of the ApplicationStackResource class.
        /// </summary>
        public ApplicationStackResource()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the ApplicationStackResource class.
        /// </summary>

        /// <param name="id">Resource Id.
        /// </param>

        /// <param name="name">Resource Name.
        /// </param>

        /// <param name="kind">Kind of resource.
        /// </param>

        /// <param name="type">Resource type.
        /// </param>

        /// <param name="propertiesName">Application stack name.
        /// </param>

        /// <param name="display">Application stack display name.
        /// </param>

        /// <param name="dependency">Application stack dependency.
        /// </param>

        /// <param name="majorVersions">List of major versions available.
        /// </param>

        /// <param name="frameworks">List of frameworks associated with application stack.
        /// </param>

        /// <param name="isDeprecated">&lt;code&gt;true&lt;/code&gt; if this is the stack is deprecated; otherwise,
        /// &lt;code&gt;false&lt;/code&gt;.
        /// </param>
        public ApplicationStackResource(string id = default(string), string name = default(string), string kind = default(string), string type = default(string), string propertiesName = default(string), string display = default(string), string dependency = default(string), System.Collections.Generic.IList<StackMajorVersion> majorVersions = default(System.Collections.Generic.IList<StackMajorVersion>), System.Collections.Generic.IList<ApplicationStack> frameworks = default(System.Collections.Generic.IList<ApplicationStack>), System.Collections.Generic.IList<ApplicationStack> isDeprecated = default(System.Collections.Generic.IList<ApplicationStack>))

        : base(id, name, kind, type)
        {
            this.PropertiesName = propertiesName;
            this.Display = display;
            this.Dependency = dependency;
            this.MajorVersions = majorVersions;
            this.Frameworks = frameworks;
            this.IsDeprecated = isDeprecated;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets or sets application stack name.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.name")]
        public string PropertiesName {get; set; }

        /// <summary>
        /// Gets or sets application stack display name.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.display")]
        public string Display {get; set; }

        /// <summary>
        /// Gets or sets application stack dependency.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.dependency")]
        public string Dependency {get; set; }

        /// <summary>
        /// Gets or sets list of major versions available.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.majorVersions")]
        public System.Collections.Generic.IList<StackMajorVersion> MajorVersions {get; set; }

        /// <summary>
        /// Gets or sets list of frameworks associated with application stack.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.frameworks")]
        public System.Collections.Generic.IList<ApplicationStack> Frameworks {get; set; }

        /// <summary>
        /// Gets or sets &lt;code&gt;true&lt;/code&gt; if this is the stack is deprecated;
        /// otherwise, &lt;code&gt;false&lt;/code&gt;.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.isDeprecated")]
        public System.Collections.Generic.IList<ApplicationStack> IsDeprecated {get; set; }
    }
}