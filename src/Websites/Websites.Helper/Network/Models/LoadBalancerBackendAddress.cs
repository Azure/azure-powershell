// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Websites.Helper.Network.Models
{
    using System.Linq;

    /// <summary>
    /// Load balancer backend addresses.
    /// </summary>
    [Microsoft.Rest.Serialization.JsonTransformation]
    public partial class LoadBalancerBackendAddress
    {
        /// <summary>
        /// Initializes a new instance of the LoadBalancerBackendAddress class.
        /// </summary>
        public LoadBalancerBackendAddress()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the LoadBalancerBackendAddress class.
        /// </summary>

        /// <param name="name">Name of the backend address.
        /// </param>

        /// <param name="virtualNetwork">Reference to an existing virtual network.
        /// </param>

        /// <param name="ipAddress">IP Address belonging to the referenced virtual network.
        /// </param>

        /// <param name="networkInterfaceIPConfiguration">Reference to IP address defined in network interfaces.
        /// </param>

        /// <param name="loadBalancerFrontendIPConfiguration">Reference to the frontend ip address configuration defined in regional
        /// loadbalancer.
        /// </param>
        public LoadBalancerBackendAddress(string name = default(string), SubResource virtualNetwork = default(SubResource), string ipAddress = default(string), SubResource networkInterfaceIPConfiguration = default(SubResource), SubResource loadBalancerFrontendIPConfiguration = default(SubResource))

        {
            this.Name = name;
            this.VirtualNetwork = virtualNetwork;
            this.IPAddress = ipAddress;
            this.NetworkInterfaceIPConfiguration = networkInterfaceIPConfiguration;
            this.LoadBalancerFrontendIPConfiguration = loadBalancerFrontendIPConfiguration;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets or sets name of the backend address.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "name")]
        public string Name {get; set; }

        /// <summary>
        /// Gets or sets reference to an existing virtual network.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.virtualNetwork")]
        public SubResource VirtualNetwork {get; set; }

        /// <summary>
        /// Gets or sets iP Address belonging to the referenced virtual network.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.ipAddress")]
        public string IPAddress {get; set; }

        /// <summary>
        /// Gets reference to IP address defined in network interfaces.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.networkInterfaceIPConfiguration")]
        public SubResource NetworkInterfaceIPConfiguration {get; private set; }

        /// <summary>
        /// Gets or sets reference to the frontend ip address configuration defined in
        /// regional loadbalancer.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.loadBalancerFrontendIPConfiguration")]
        public SubResource LoadBalancerFrontendIPConfiguration {get; set; }
    }
}